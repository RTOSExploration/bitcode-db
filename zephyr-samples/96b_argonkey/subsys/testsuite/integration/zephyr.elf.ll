; ModuleID = 'build/96b_argonkey/integration/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.ztest_suite_stats = type { i32, i32, i32 }
%struct.ztest_suite_node = type { i8*, i8* ()*, void (i8*)*, void (i8*)*, void (i8*)*, i1 (i8*)*, %struct.ztest_suite_stats* }
%struct.ztest_unit_test_stats = type { i32, i32, i32, i32, i32 }
%struct.ztest_unit_test = type { i8*, i8*, void (i8*)*, i32, %struct.ztest_unit_test_stats* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.k_spinlock = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct.ztest_suite_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._thread_arch = type { i32, i32 }
%struct.ztest_test_rule = type { void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)* }
%struct.ztest_expected_result_entry = type { i8*, i8*, i32 }
%struct.ztest_arch_api = type { void (i8*)*, i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, i8*)* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236396 to i8*), void (i8*)* inttoptr (i32 134235071 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236396 to i8*), void (i8*)* inttoptr (i32 134235051 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236396 to i8*), void (i8*)* inttoptr (i32 134235041 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236396 to i8*), void (i8*)* inttoptr (i32 134235141 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236396 to i8*), void (i8*)* inttoptr (i32 134235131 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236396 to i8*), void (i8*)* inttoptr (i32 134235121 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236396 to i8*), void (i8*)* inttoptr (i32 134235111 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236396 to i8*), void (i8*)* inttoptr (i32 134235101 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236396 to i8*), void (i8*)* inttoptr (i32 134235091 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236396 to i8*), void (i8*)* inttoptr (i32 134235081 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236396 to i8*), void (i8*)* inttoptr (i32 134235061 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct.ztest_suite_node* @z_ztest_test_node_framework_tests to i8*), i8* bitcast (%struct.ztest_unit_test* @z_ztest_unit_test__framework_tests__test_assert to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [16 x i8] c"framework_tests\00", align 1
@z_ztest_suite_node_stats_framework_tests = dso_local global %struct.ztest_suite_stats zeroinitializer, align 4, !dbg !25
@z_ztest_test_node_framework_tests = internal constant %struct.ztest_suite_node { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8* ()* null, void (i8*)* null, void (i8*)* null, void (i8*)* null, i1 (i8*)* null, %struct.ztest_suite_stats* @z_ztest_suite_node_stats_framework_tests }, section "._ztest_suite_node.static.z_ztest_test_node_framework_tests", align 4, !dbg !109
@.str.1 = private unnamed_addr constant [12 x i8] c"test_assert\00", align 1
@z_ztest_unit_test_stats_framework_tests_test_assert = dso_local global %struct.ztest_unit_test_stats zeroinitializer, align 4, !dbg !173
@z_ztest_unit_test__framework_tests__test_assert = internal global %struct.ztest_unit_test { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), void (i8*)* @_framework_tests_test_assert_wrapper, i32 0, %struct.ztest_unit_test_stats* @z_ztest_unit_test_stats_framework_tests_test_assert }, section "._ztest_unit_test.static.z_ztest_unit_test__framework_tests__test_assert", align 4, !dbg !155
@.str.2 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !175
@.str.1.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !207
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !216
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !266
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !295
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !447
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !301
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !456
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !492
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0), %struct.k_spinlock { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.88, i32 0, i32 0), %struct.k_spinlock { i32 285933602 } }], align 4, !dbg !502
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !507
@.str.87 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.88 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@phase = dso_local local_unnamed_addr global i32 5, align 4, !dbg !527
@test_status = internal unnamed_addr global i32 0, align 4, !dbg !582
@.str.89 = private unnamed_addr constant [69 x i8] c"===================================================================\0A\00", align 1
@.str.1.92 = private unnamed_addr constant [22 x i8] c"PROJECT EXECUTION %s\0A\00", align 1
@.str.2.91 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.3.90 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@current_test_failed_assumption = internal unnamed_addr global i1 false, align 1, !dbg !693
@test_result = internal unnamed_addr global i32 0, align 4, !dbg !569
@.str.4.104 = private unnamed_addr constant [51 x i8] c" ERROR: cannot fail in test phase '%s()', bailing\0A\00", align 1
@.str.5.105 = private unnamed_addr constant [51 x i8] c" ERROR: cannot pass in test phase '%s()', bailing\0A\00", align 1
@.str.6.93 = private unnamed_addr constant [51 x i8] c" ERROR: cannot skip in test phase '%s()', bailing\0A\00", align 1
@_ztest_unit_test_list_start = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_unit_test_list_end = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_suite_node_list_start = external dso_local global [0 x %struct.ztest_suite_node], align 4
@_ztest_suite_node_list_end = external dso_local global [0 x %struct.ztest_suite_node], align 4
@.str.7.120 = private unnamed_addr constant [37 x i8] c"ERROR: Test suite '%s' did not run.\0A\00", align 1
@.str.8.121 = private unnamed_addr constant [66 x i8] c"ERROR: Test '%s' assigned to test suite '%s' which doesn't exist\0A\00", align 1
@.str.9.122 = private unnamed_addr constant [21 x i8] c"Bad stats for %s.%s\0A\00", align 1
@ztest_thread_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/testsuite/ztest/src/ztest_new.c\22.0", align 64, !dbg !573
@ztest_thread = internal global %struct.k_thread zeroinitializer, align 8, !dbg !584
@.str.10.95 = private unnamed_addr constant [6 x i8] c"setup\00", align 1
@.str.11.96 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@.str.12.97 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.13.98 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.14.99 = private unnamed_addr constant [9 x i8] c"teardown\00", align 1
@.str.15.100 = private unnamed_addr constant [10 x i8] c"framework\00", align 1
@.str.16.94 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.17.106 = private unnamed_addr constant [22 x i8] c"Running TESTSUITE %s\0A\00", align 1
@.str.18.108 = private unnamed_addr constant [24 x i8] c"TESTSUITE %s succeeded\0A\00", align 1
@.str.19.107 = private unnamed_addr constant [22 x i8] c"TESTSUITE %s failed.\0A\00", align 1
@.str.20.109 = private unnamed_addr constant [12 x i8] c"START - %s\0A\00", align 1
@tc_spend_time = internal unnamed_addr global i32 0, align 4, !dbg !691
@.str.21.110 = private unnamed_addr constant [29 x i8] c" %s - %s in %u.%03u seconds\0A\00", align 1
@tc_start_time = internal unnamed_addr global i32 0, align 4, !dbg !688
@_ztest_test_rule_list_start = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_test_rule_list_end = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_expected_result_entry_list_start = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@_ztest_expected_result_entry_list_end = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@.str.24.112 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.25.113 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.26.114 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.27.111 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.28.115 = private unnamed_addr constant [41 x i8] c"\0A------ TESTSUITE SUMMARY START ------\0A\0A\00", align 1
@.str.29.116 = private unnamed_addr constant [38 x i8] c"------ TESTSUITE SUMMARY END ------\0A\0A\00", align 1
@.str.30.117 = private unnamed_addr constant [44 x i8] c" - %s - [%s.%s] duration = %u.%03u seconds\0A\00", align 1
@.str.31.118 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32.119 = private unnamed_addr constant [100 x i8] c"SUITE %s - %3d.%02d%% [%s]: pass = %d, fail = %d, skip = %d, total = %d duration = %u.%03u seconds\0A\00", align 1
@switch.table.get_friendly_phase_name = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.95, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.96, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.97, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.99, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.100, i32 0, i32 0)], align 4
@switch.table.TC_RESULT_TO_STR = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.113, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.114, i32 0, i32 0)], align 4
@ztest_api = dso_local local_unnamed_addr constant %struct.ztest_arch_api { void (i8*)* @z_ztest_run_all, i1 (i8*, %struct.ztest_suite_node*)* @z_ztest_should_suite_run, i1 (i8*, i8*)* @z_ztest_should_test_run }, align 4, !dbg !694
@.str.127 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.128 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.129 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !729
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !922
@.str.4.125 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !883
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !866
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.125, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !839
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !855
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !885
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !899
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !901
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !903
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !905
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !907
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !909
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !911
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !913
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !915
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !917
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !927
@.str.130 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !954
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1049
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1038
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1090
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !947
@.str.139 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1156
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1437
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1407
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1393
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1335
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !945
@.str.1.147 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1439
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1411
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1409
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1349
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !943
@.str.2.148 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1452
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1415
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1413
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1358
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !941
@.str.3.149 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1454
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1419
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1417
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1367
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !939
@.str.4.150 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1456
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1423
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1421
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1373
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !937
@.str.5.151 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1458
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1427
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1425
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1379
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !935
@.str.6.152 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1460
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1431
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1429
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1385
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !933
@.str.7.153 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1462
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1435
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1433
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1391
@.str.8.140 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.146 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.142 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.145 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.141 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.143 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.144 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.157 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.157, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1464
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !949
@.str.1.160 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1620
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1675
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1618
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1677
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.160, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1609
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1611
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1664
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1667
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1669
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1672
@.str.2.162 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.163 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.164 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.165 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.166 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.169 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.171 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.172 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.130, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1022
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1688
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1797
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1799
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1795
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1790
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1764
@.str.176 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.177 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.178 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.179 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.180 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.181 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1801
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.139, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1333
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.147, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1347
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.148, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1356
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.149, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1365
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.150, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1371
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.151, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1377
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.152, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1383
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.153, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1389
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1891
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1932
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1935
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1942
@.str.215 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.219 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.220 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.221 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.225 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.226 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.227 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.228 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.229 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.224 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.223 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.225, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.226, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.227, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.228, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.229, i32 0, i32 0)], align 4
@.str.231 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1949
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2173
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2162
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2168
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2180
@.str.5.237 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2185
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.241 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.248, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.249, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.250, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.251, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.252, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.253, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.254, i32 0, i32 0)], align 4, !dbg !2213
@.str.248 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.249 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.250 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.251 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.252 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.253 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.247 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.254 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2328
@.str.8.246 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.259 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.260 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.261 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.262 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.266 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.267 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.271 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.272 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.281 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.282 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.283 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2341
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2452
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2455
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2457
@.str.284 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.300 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.291 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.305 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.313 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.293 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.308 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.290 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.317 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.318 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.324 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.325 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.326 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.329 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.285 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.286 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.287 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.288 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.289 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.292 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.304 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.309 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.310 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2170
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2178
@.str.23.319 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.335 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.336 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.337 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.338 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2459
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2489
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2494
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2036
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2492
@.str.4.339 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.340 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.341 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.345 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.346 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.366 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3080 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3084, !srcloc !3085
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3086, !srcloc !3087
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3088, !srcloc !3089
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3090, !srcloc !3091
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3092, !srcloc !3093
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3094, !srcloc !3095
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3096, !srcloc !3097
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3098, !srcloc !3099
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3100, !srcloc !3101
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3102, !srcloc !3103
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3104, !srcloc !3105
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3106, !srcloc !3107
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3108, !srcloc !3109
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3110, !srcloc !3111
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3112, !srcloc !3113
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3114, !srcloc !3115
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3116, !srcloc !3117
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3118, !srcloc !3119
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3120, !srcloc !3121
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3122, !srcloc !3123
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3124, !srcloc !3125
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3126, !srcloc !3127
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3128, !srcloc !3129
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3130, !srcloc !3131
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3132, !srcloc !3133
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3134, !srcloc !3135
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3136, !srcloc !3137
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3138, !srcloc !3141
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3142, !srcloc !3143
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3144, !srcloc !3145
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3146, !srcloc !3147
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3148, !srcloc !3149
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3150, !srcloc !3151
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3152, !srcloc !3153
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3154, !srcloc !3155
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3156, !srcloc !3157
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3166, !srcloc !3167
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3168, !srcloc !3169
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3170, !srcloc !3171
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3172, !srcloc !3173
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3174, !srcloc !3175
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3176, !srcloc !3177
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3178, !srcloc !3179
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3180, !srcloc !3181
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3182, !srcloc !3183
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3184, !srcloc !3185
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3186, !srcloc !3187
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3188, !srcloc !3189
  ret void, !dbg !3190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal void @_framework_tests_test_assert_wrapper(i8* nocapture noundef %0) #2 !dbg !3193 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3195, metadata !DIExpression()), !dbg !3196
  ret void, !dbg !3197
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3198 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3213, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %0, metadata !3209, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %1, metadata !3210, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %2, metadata !3211, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %3, metadata !3212, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %0, metadata !3214, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %0, metadata !3215, metadata !DIExpression()), !dbg !3276
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3277
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3277
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3218, metadata !DIExpression()), !dbg !3278
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3279
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3279
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3220, metadata !DIExpression()), !dbg !3280
  call void @llvm.dbg.value(metadata i32 0, metadata !3221, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 0, metadata !3222, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 0, metadata !3223, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 -1, metadata !3224, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8 0, metadata !3227, metadata !DIExpression()), !dbg !3276
  %12 = and i32 %2, 4, !dbg !3281
  %13 = icmp eq i32 %12, 0, !dbg !3282
  call void @llvm.dbg.value(metadata i1 %13, metadata !3228, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3276
  %14 = lshr i32 %2, 3, !dbg !3283
  %15 = and i32 %14, 7, !dbg !3283
  %16 = add nuw nsw i32 %15, 1, !dbg !3284
  call void @llvm.dbg.value(metadata i32 %16, metadata !3229, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8 0, metadata !3230, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %0, metadata !3231, metadata !DIExpression()), !dbg !3276
  %17 = ptrtoint i8* %0 to i32, !dbg !3285
  %18 = and i32 %17, 3, !dbg !3287
  %19 = icmp eq i32 %18, 0, !dbg !3287
  br i1 %19, label %20, label %320, !dbg !3288

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3289
  call void @llvm.dbg.value(metadata i8* %21, metadata !3215, metadata !DIExpression()), !dbg !3276
  %22 = icmp eq i8* %0, null, !dbg !3290
  %23 = and i32 %1, 7, !dbg !3292
  %24 = sub nuw nsw i32 8, %23, !dbg !3292
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3292
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3292
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3292
  call void @llvm.dbg.value(metadata i32 %27, metadata !3210, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %26, metadata !3215, metadata !DIExpression()), !dbg !3276
  br i1 %22, label %33, label %28, !dbg !3293

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3295
  %30 = sub i32 4, %17, !dbg !3295
  %31 = add i32 %30, %29, !dbg !3296
  %32 = icmp ugt i32 %31, %27, !dbg !3297
  br i1 %32, label %320, label %33, !dbg !3298

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3299
  call void @llvm.dbg.value(metadata i8* %34, metadata !3212, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %3, metadata !3226, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 4, metadata !3217, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 4, metadata !3216, metadata !DIExpression()), !dbg !3276
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3300

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3213, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %42, metadata !3212, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %43, metadata !3215, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %44, metadata !3216, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %45, metadata !3217, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %72, metadata !3224, metadata !DIExpression()), !dbg !3276
  br i1 %46, label %73, label %47, !dbg !3301

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3302
  %49 = zext i1 %48 to i32, !dbg !3306
  %50 = add nsw i32 %72, %49, !dbg !3306
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3306
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3306
  call void @llvm.dbg.value(metadata i32 %52, metadata !3216, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %51, metadata !3217, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8 poison, metadata !3227, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %50, metadata !3224, metadata !DIExpression()), !dbg !3276
  br label %53, !dbg !3307

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3213, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %40, metadata !3212, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %58, metadata !3215, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %57, metadata !3216, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %56, metadata !3217, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8 poison, metadata !3227, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %54, metadata !3224, metadata !DIExpression()), !dbg !3276
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3308
  call void @llvm.dbg.value(metadata i8* %60, metadata !3212, metadata !DIExpression()), !dbg !3276
  %61 = load i8, i8* %60, align 1, !dbg !3310
  %62 = icmp eq i8 %61, 0, !dbg !3311
  br i1 %62, label %226, label %63, !dbg !3312, !llvm.loop !3313

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3301

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3316

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3227, metadata !DIExpression()), !dbg !3276
  %75 = add nsw i32 %72, -1, !dbg !3317
  call void @llvm.dbg.value(metadata i32 %75, metadata !3224, metadata !DIExpression()), !dbg !3276
  br label %53, !dbg !3318

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3319

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3217, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 4, metadata !3216, metadata !DIExpression()), !dbg !3276
  br label %53, !dbg !3320

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3217, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 4, metadata !3216, metadata !DIExpression()), !dbg !3276
  br label %53, !dbg !3321

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3322
  %81 = icmp eq i8 %80, 108, !dbg !3324
  br i1 %81, label %82, label %109, !dbg !3325

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3326
  %84 = load i8, i8* %83, align 1, !dbg !3326
  %85 = icmp eq i8 %84, 108, !dbg !3329
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3330
  %89 = add i32 %88, 7, !dbg !3330
  %90 = and i32 %89, -8, !dbg !3330
  %91 = inttoptr i32 %90 to i8*, !dbg !3330
  %92 = inttoptr i32 %90 to double*, !dbg !3330
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3330
  %94 = load double, double* %92, align 8, !dbg !3330
  call void @llvm.dbg.value(metadata i8* %93, metadata !3213, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 8, metadata !3216, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 8, metadata !3217, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata double %94, metadata !3244, metadata !DIExpression()), !dbg !3332
  %95 = ptrtoint i8* %43 to i32, !dbg !3333
  %96 = add i32 %95, 7, !dbg !3333
  %97 = and i32 %96, -8, !dbg !3333
  %98 = inttoptr i32 %97 to i8*, !dbg !3334
  call void @llvm.dbg.value(metadata i8* %98, metadata !3215, metadata !DIExpression()), !dbg !3276
  br i1 %22, label %104, label %99, !dbg !3335

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3336
  %101 = icmp ugt i32 %100, %196, !dbg !3340
  br i1 %101, label %320, label %102, !dbg !3341

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3342
  store double %94, double* %103, align 8, !dbg !3342
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3345
  call void @llvm.dbg.value(metadata i8* %105, metadata !3215, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8 poison, metadata !3227, metadata !DIExpression()), !dbg !3276
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3227, metadata !DIExpression()), !dbg !3276
  br label %53, !dbg !3346

107:                                              ; preds = %73, %73
  br label %109, !dbg !3347

108:                                              ; preds = %73
  br label %109, !dbg !3347

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3276
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3276
  call void @llvm.dbg.value(metadata i32 %113, metadata !3216, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %112, metadata !3217, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8 poison, metadata !3230, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8 poison, metadata !3227, metadata !DIExpression()), !dbg !3276
  %114 = ptrtoint i8* %43 to i32, !dbg !3347
  %115 = add i32 %114, -1, !dbg !3347
  %116 = add i32 %115, %112, !dbg !3347
  %117 = sub i32 0, %112, !dbg !3347
  %118 = and i32 %116, %117, !dbg !3347
  %119 = inttoptr i32 %118 to i8*, !dbg !3348
  call void @llvm.dbg.value(metadata i8* %119, metadata !3215, metadata !DIExpression()), !dbg !3276
  br i1 %22, label %124, label %120, !dbg !3349

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3351
  %122 = add i32 %121, %118, !dbg !3352
  %123 = icmp ugt i32 %122, %196, !dbg !3353
  br i1 %123, label %320, label %124, !dbg !3354

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3355

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3348
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3356
  call void @llvm.dbg.value(metadata i8* %127, metadata !3213, metadata !DIExpression()), !dbg !3276
  %128 = bitcast i8* %41 to i8**, !dbg !3356
  %129 = load i8*, i8** %128, align 4, !dbg !3356
  call void @llvm.dbg.value(metadata i8* %129, metadata !3226, metadata !DIExpression()), !dbg !3276
  br label %130, !dbg !3357

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3276
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3358
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3276
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3359
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3276
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3276
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3276
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3276
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3276
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3276
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3360
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3213, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %142, metadata !3210, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %141, metadata !3212, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %140, metadata !3215, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %139, metadata !3216, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %138, metadata !3217, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %137, metadata !3221, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %136, metadata !3229, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %135, metadata !3222, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8 poison, metadata !3227, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %133, metadata !3226, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %132, metadata !3224, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %131, metadata !3223, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.label(metadata !3275), !dbg !3362
  br i1 %22, label %146, label %144, !dbg !3363

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3364
  store i8* %133, i8** %145, align 4, !dbg !3367
  br label %146, !dbg !3368

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3369
  call void @llvm.dbg.value(metadata i32 %147, metadata !3229, metadata !DIExpression()), !dbg !3276
  %148 = icmp sgt i32 %136, 0, !dbg !3370
  br i1 %148, label %152, label %149, !dbg !3371

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3372
  %151 = zext i1 %150 to i32, !dbg !3372
  br label %152, !dbg !3371

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3371
  %154 = icmp eq i32 %153, 0, !dbg !3371
  call void @llvm.dbg.value(metadata i1 %154, metadata !3253, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3373
  call void @llvm.dbg.value(metadata i1 %36, metadata !3256, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3373
  %155 = or i1 %36, %154, !dbg !3374
  br i1 %155, label %156, label %192, !dbg !3374

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3375
  %158 = sub i32 %157, %17, !dbg !3375
  %159 = lshr i32 %158, 2, !dbg !3376
  call void @llvm.dbg.value(metadata i32 %159, metadata !3257, metadata !DIExpression()), !dbg !3377
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3378
  br i1 %161, label %162, label %163, !dbg !3378

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3380
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0)) #25, !dbg !3380
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3380
  unreachable, !dbg !3380

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3385
  br i1 %164, label %165, label %166, !dbg !3387

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3388
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #25, !dbg !3388
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3388
  unreachable, !dbg !3388

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3393

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3394
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3397
  store i8 %168, i8* %169, align 1, !dbg !3398
  %170 = trunc i32 %132 to i8, !dbg !3399
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3400
  store i8 %170, i8* %171, align 1, !dbg !3401
  br i1 %154, label %175, label %172, !dbg !3402

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3403
  store i8 %173, i8* %169, align 1, !dbg !3403
  %174 = add i32 %131, 1, !dbg !3406
  call void @llvm.dbg.value(metadata i32 %174, metadata !3223, metadata !DIExpression()), !dbg !3276
  br label %187, !dbg !3407

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3408
  call void @llvm.dbg.value(metadata i32 %176, metadata !3222, metadata !DIExpression()), !dbg !3276
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3410

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3411
  call void @llvm.dbg.value(metadata i32 %179, metadata !3210, metadata !DIExpression()), !dbg !3276
  br label %187, !dbg !3414

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3415

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3416
  call void @llvm.dbg.value(metadata i32 %182, metadata !3210, metadata !DIExpression()), !dbg !3276
  br label %187, !dbg !3419

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3420
  %185 = add i32 %142, 2, !dbg !3422
  %186 = add i32 %185, %184, !dbg !3423
  call void @llvm.dbg.value(metadata i32 %186, metadata !3210, metadata !DIExpression()), !dbg !3276
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3276
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3276
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3276
  call void @llvm.dbg.value(metadata i32 %190, metadata !3210, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %189, metadata !3222, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %188, metadata !3223, metadata !DIExpression()), !dbg !3276
  %191 = add nuw nsw i32 %137, 1, !dbg !3424
  call void @llvm.dbg.value(metadata i32 %191, metadata !3221, metadata !DIExpression()), !dbg !3276
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3276
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3359
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3276
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3360
  call void @llvm.dbg.value(metadata i32 %196, metadata !3210, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %195, metadata !3221, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %194, metadata !3222, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %193, metadata !3223, metadata !DIExpression()), !dbg !3276
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3425
  call void @llvm.dbg.value(metadata i8* %197, metadata !3215, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %143, metadata !3213, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %141, metadata !3212, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %139, metadata !3216, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %138, metadata !3217, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8 poison, metadata !3230, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8 poison, metadata !3227, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %132, metadata !3224, metadata !DIExpression()), !dbg !3276
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3308
  call void @llvm.dbg.value(metadata i8* %198, metadata !3212, metadata !DIExpression()), !dbg !3276
  %199 = load i8, i8* %198, align 1, !dbg !3310
  %200 = icmp eq i8 %199, 0, !dbg !3311
  br i1 %200, label %226, label %63, !dbg !3312

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3426

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3427
  call void @llvm.dbg.value(metadata i8* %203, metadata !3213, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 undef, metadata !3260, metadata !DIExpression()), !dbg !3428
  br i1 %22, label %219, label %204, !dbg !3429

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3427
  %206 = load i32, i32* %205, align 4, !dbg !3427
  call void @llvm.dbg.value(metadata i32 %206, metadata !3260, metadata !DIExpression()), !dbg !3428
  %207 = inttoptr i32 %118 to i32*, !dbg !3430
  store i32 %206, i32* %207, align 4, !dbg !3433
  br label %219, !dbg !3434

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3435
  %210 = add i32 %209, 7, !dbg !3435
  %211 = and i32 %210, -8, !dbg !3435
  %212 = inttoptr i32 %211 to i8*, !dbg !3435
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3435
  call void @llvm.dbg.value(metadata i8* %213, metadata !3213, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i64 undef, metadata !3266, metadata !DIExpression()), !dbg !3436
  br i1 %22, label %219, label %214, !dbg !3437

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3435
  %216 = load i64, i64* %215, align 8, !dbg !3435
  call void @llvm.dbg.value(metadata i64 %216, metadata !3266, metadata !DIExpression()), !dbg !3436
  %217 = inttoptr i32 %118 to i64*, !dbg !3438
  store i64 %216, i64* %217, align 8, !dbg !3443
  br label %219, !dbg !3444

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3445
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3445
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3445
  unreachable, !dbg !3445

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3450
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3450
  call void @llvm.dbg.value(metadata i8* %221, metadata !3213, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %40, metadata !3212, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %222, metadata !3215, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %113, metadata !3216, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %112, metadata !3217, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8 poison, metadata !3230, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8 poison, metadata !3227, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %72, metadata !3224, metadata !DIExpression()), !dbg !3276
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3308
  call void @llvm.dbg.value(metadata i8* %223, metadata !3212, metadata !DIExpression()), !dbg !3276
  %224 = load i8, i8* %223, align 1, !dbg !3310
  %225 = icmp eq i8 %224, 0, !dbg !3311
  br i1 %225, label %226, label %38, !dbg !3312

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3451
  %228 = ptrtoint i8* %227 to i32, !dbg !3452
  %229 = sub i32 %228, %17, !dbg !3452
  %230 = lshr i32 %229, 2, !dbg !3454
  %231 = icmp ugt i32 %229, 1023, !dbg !3455
  br i1 %231, label %232, label %233, !dbg !3456

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3457
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3457
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3457
  unreachable, !dbg !3457

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3462

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3463
  %236 = add i32 %235, %229, !dbg !3466
  br label %320, !dbg !3467

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3468
  store i8 %238, i8* %0, align 1, !dbg !3469
  %239 = trunc i32 %194 to i8, !dbg !3470
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3472
  store i8 %240, i8* %242, align 1, !dbg !3474
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3475
  store i8 %241, i8* %243, align 1, !dbg !3476
  %244 = trunc i32 %193 to i8, !dbg !3477
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3478
  store i8 %244, i8* %245, align 1, !dbg !3479
  %246 = icmp eq i32 %193, 0, !dbg !3480
  %247 = xor i1 %246, true, !dbg !3481
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3481
  call void @llvm.dbg.value(metadata i8* %227, metadata !3215, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 0, metadata !3225, metadata !DIExpression()), !dbg !3276
  br i1 %249, label %250, label %269, !dbg !3481

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3482

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3215, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %254, metadata !3225, metadata !DIExpression()), !dbg !3276
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3483
  %256 = load i8, i8* %255, align 1, !dbg !3483
  %257 = icmp sgt i8 %256, -1, !dbg !3485
  br i1 %257, label %265, label %258, !dbg !3486

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3269, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3487
  %259 = ptrtoint i8* %253 to i32, !dbg !3488
  %260 = add i32 %251, %259, !dbg !3490
  %261 = icmp ugt i32 %260, %196, !dbg !3491
  br i1 %261, label %320, label %262, !dbg !3492

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3493
  call void @llvm.dbg.value(metadata i8 %263, metadata !3269, metadata !DIExpression()), !dbg !3487
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3494
  call void @llvm.dbg.value(metadata i8* %264, metadata !3215, metadata !DIExpression()), !dbg !3276
  store i8 %263, i8* %253, align 1, !dbg !3495
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3425
  call void @llvm.dbg.value(metadata i8* %266, metadata !3215, metadata !DIExpression()), !dbg !3276
  %267 = add nuw i32 %254, 1, !dbg !3496
  call void @llvm.dbg.value(metadata i32 %267, metadata !3225, metadata !DIExpression()), !dbg !3276
  %268 = icmp eq i32 %267, %195, !dbg !3497
  br i1 %268, label %269, label %252, !dbg !3482, !llvm.loop !3498

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3425
  call void @llvm.dbg.value(metadata i8* %270, metadata !3215, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 0, metadata !3225, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %133, metadata !3226, metadata !DIExpression()), !dbg !3276
  %271 = icmp eq i32 %195, 0, !dbg !3500
  br i1 %271, label %316, label %272, !dbg !3503

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3503

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3215, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %276, metadata !3226, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %277, metadata !3225, metadata !DIExpression()), !dbg !3276
  br i1 %246, label %282, label %278, !dbg !3504

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3507
  %280 = load i8, i8* %279, align 1, !dbg !3507
  %281 = icmp sgt i8 %280, -1, !dbg !3508
  br i1 %281, label %282, label %311, !dbg !3509

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3510

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3216, metadata !DIExpression()), !dbg !3276
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3511
  %285 = load i8, i8* %284, align 1, !dbg !3511
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3514
  call void @llvm.dbg.value(metadata i8* %286, metadata !3215, metadata !DIExpression()), !dbg !3276
  store i8 %285, i8* %275, align 1, !dbg !3515
  br label %297, !dbg !3516

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3517
  %289 = load i8, i8* %288, align 1, !dbg !3517
  %290 = zext i8 %289 to i32, !dbg !3517
  %291 = shl nuw nsw i32 %290, 2, !dbg !3519
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3520
  %293 = bitcast i8* %292 to i8**, !dbg !3521
  %294 = load i8*, i8** %293, align 4, !dbg !3521
  call void @llvm.dbg.value(metadata i8* %294, metadata !3226, metadata !DIExpression()), !dbg !3276
  store i8* null, i8** %293, align 4, !dbg !3522
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3523
  %296 = add i32 %295, 1, !dbg !3524
  call void @llvm.dbg.value(metadata i32 %296, metadata !3216, metadata !DIExpression()), !dbg !3276
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3276
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3525
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3276
  call void @llvm.dbg.value(metadata i8* %300, metadata !3215, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i32 %299, metadata !3216, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %298, metadata !3226, metadata !DIExpression()), !dbg !3276
  %301 = ptrtoint i8* %300 to i32, !dbg !3526
  %302 = add i32 %273, %299, !dbg !3528
  %303 = add i32 %302, %301, !dbg !3529
  %304 = icmp ugt i32 %303, %196, !dbg !3530
  br i1 %304, label %320, label %305, !dbg !3531

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3532
  %307 = load i8, i8* %306, align 1, !dbg !3532
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3533
  call void @llvm.dbg.value(metadata i8* %308, metadata !3215, metadata !DIExpression()), !dbg !3276
  store i8 %307, i8* %300, align 1, !dbg !3534
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3535
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3536
  call void @llvm.dbg.value(metadata i8* %310, metadata !3215, metadata !DIExpression()), !dbg !3276
  br label %311, !dbg !3537

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3538
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3276
  call void @llvm.dbg.value(metadata i8* %313, metadata !3215, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %312, metadata !3226, metadata !DIExpression()), !dbg !3276
  %314 = add nuw i32 %277, 1, !dbg !3539
  call void @llvm.dbg.value(metadata i32 %314, metadata !3225, metadata !DIExpression()), !dbg !3276
  %315 = icmp eq i32 %314, %195, !dbg !3500
  br i1 %315, label %316, label %274, !dbg !3503, !llvm.loop !3540

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3425
  %318 = ptrtoint i8* %317 to i32, !dbg !3542
  %319 = sub i32 %318, %17, !dbg !3542
  br label %320, !dbg !3543

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3544
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3544
  ret i32 %321, !dbg !3544
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #2 !dbg !3545 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3549, metadata !DIExpression()), !dbg !3550
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3551
  ret i1 %2, !dbg !3552
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #2 !dbg !3553 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3556, metadata !DIExpression()), !dbg !3557
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3558
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3559
  %4 = and i1 %2, %3, !dbg !3559
  ret i1 %4, !dbg !3560
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3561 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3565, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata i32 %1, metadata !3566, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata i32 %2, metadata !3567, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata i8* %3, metadata !3568, metadata !DIExpression()), !dbg !3571
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3572
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3572
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3569, metadata !DIExpression()), !dbg !3573
  call void @llvm.va_start(i8* nonnull %6), !dbg !3574
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3575
  %8 = load i32, i32* %7, align 4, !dbg !3575
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3575
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3575
  call void @llvm.dbg.value(metadata i32 %10, metadata !3570, metadata !DIExpression()), !dbg !3571
  call void @llvm.va_end(i8* nonnull %6), !dbg !3576
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3577
  ret i32 %10, !dbg !3578
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3579 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3591, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3592, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata i8* %2, metadata !3593, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata i8* %3, metadata !3594, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata i8* %3, metadata !3595, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata i8* %3, metadata !3596, metadata !DIExpression()), !dbg !3610
  %5 = icmp eq i8* %3, null, !dbg !3611
  br i1 %5, label %45, label %6, !dbg !3613

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3605, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3610
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3614
  %8 = load i8, i8* %7, align 1, !dbg !3614
  %9 = zext i8 %8 to i32, !dbg !3615
  call void @llvm.dbg.value(metadata i32 %9, metadata !3606, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata i8 undef, metadata !3607, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3610
  call void @llvm.dbg.value(metadata i8 undef, metadata !3608, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3610
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3602, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3610
  call void @llvm.dbg.value(metadata i32 0, metadata !3604, metadata !DIExpression()), !dbg !3610
  %10 = icmp eq i8 %8, 0, !dbg !3616
  br i1 %10, label %39, label %11, !dbg !3619

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3620
  call void @llvm.dbg.value(metadata i8 %12, metadata !3605, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3610
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3602, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3610
  %13 = zext i8 %12 to i32, !dbg !3621
  call void @llvm.dbg.value(metadata i32 %13, metadata !3605, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3610
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3602, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3610
  %14 = shl nuw nsw i32 %13, 2, !dbg !3622
  call void @llvm.dbg.value(metadata i32 %14, metadata !3605, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3602, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3610
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3623
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3602, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3610
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3624
  %17 = load i8, i8* %16, align 1, !dbg !3624
  call void @llvm.dbg.value(metadata i8 %17, metadata !3607, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3610
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3602, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3610
  %18 = zext i8 %17 to i32, !dbg !3625
  call void @llvm.dbg.value(metadata i32 %18, metadata !3607, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3602, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3610
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3626
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3602, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3610
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3627
  %21 = load i8, i8* %20, align 1, !dbg !3627
  call void @llvm.dbg.value(metadata i8 %21, metadata !3608, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3610
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3602, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3610
  %22 = zext i8 %21 to i32, !dbg !3628
  call void @llvm.dbg.value(metadata i32 %22, metadata !3608, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3602, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3610
  %23 = shl nuw nsw i32 %22, 1, !dbg !3629
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3602, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3610
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3630
  call void @llvm.dbg.value(metadata i8* %24, metadata !3602, metadata !DIExpression()), !dbg !3610
  br label %25, !dbg !3619

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3602, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata i32 %27, metadata !3604, metadata !DIExpression()), !dbg !3610
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3631
  call void @llvm.dbg.value(metadata i8* %28, metadata !3602, metadata !DIExpression()), !dbg !3610
  %29 = load i8, i8* %26, align 1, !dbg !3633
  %30 = zext i8 %29 to i32, !dbg !3633
  call void @llvm.dbg.value(metadata i32 %30, metadata !3609, metadata !DIExpression()), !dbg !3610
  %31 = shl nuw nsw i32 %30, 2, !dbg !3634
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3635
  %33 = bitcast i8* %32 to i8**, !dbg !3636
  call void @llvm.dbg.value(metadata i8** %33, metadata !3603, metadata !DIExpression()), !dbg !3610
  store i8* %28, i8** %33, align 4, !dbg !3637
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3638
  %35 = add i32 %34, 1, !dbg !3639
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3640
  call void @llvm.dbg.value(metadata i8* %36, metadata !3602, metadata !DIExpression()), !dbg !3610
  %37 = add nuw nsw i32 %27, 1, !dbg !3641
  call void @llvm.dbg.value(metadata i32 %37, metadata !3604, metadata !DIExpression()), !dbg !3610
  %38 = icmp eq i32 %37, %9, !dbg !3616
  br i1 %38, label %39, label %25, !dbg !3619, !llvm.loop !3642

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3644
  call void @llvm.dbg.value(metadata i8* %40, metadata !3595, metadata !DIExpression()), !dbg !3610
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3645
  %42 = bitcast i8* %41 to i8**, !dbg !3645
  %43 = load i8*, i8** %42, align 1, !dbg !3645
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3646
  br label %45, !dbg !3647

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3610
  ret i32 %46, !dbg !3648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3649 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3653, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3654, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata i8* %2, metadata !3655, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata i8* %3, metadata !3656, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata i8* %4, metadata !3657, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata i8* %4, metadata !3658, metadata !DIExpression()), !dbg !3663
  %6 = ptrtoint i8* %4 to i32, !dbg !3664
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3664
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3664
  ret i32 %8, !dbg !3665
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3666 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3670, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata i32 %1, metadata !3671, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata i8 0, metadata !3673, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata i32 0, metadata !3674, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata i8 poison, metadata !3673, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata i8* %0, metadata !3670, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3675
  %3 = load i8, i8* %0, align 1, !dbg !3676
  call void @llvm.dbg.value(metadata i8 %3, metadata !3672, metadata !DIExpression()), !dbg !3675
  %4 = icmp eq i8 %3, 0, !dbg !3677
  br i1 %4, label %29, label %5, !dbg !3678

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3679
  call void @llvm.dbg.value(metadata i32 %8, metadata !3674, metadata !DIExpression()), !dbg !3675
  br i1 %9, label %11, label %22, !dbg !3680

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3682
  br i1 %12, label %13, label %17, !dbg !3686

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3687
  br i1 %14, label %29, label %15, !dbg !3690

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3691
  br i1 %16, label %29, label %22, !dbg !3693

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3694
  %19 = xor i1 %18, true, !dbg !3696
  %20 = zext i1 %18 to i32, !dbg !3696
  %21 = add nsw i32 %8, %20, !dbg !3696
  br label %22, !dbg !3696

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3675
  call void @llvm.dbg.value(metadata i32 %24, metadata !3674, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata i8 poison, metadata !3673, metadata !DIExpression()), !dbg !3675
  %25 = icmp eq i8 %6, 37, !dbg !3697
  %26 = xor i1 %25, %23, !dbg !3699
  call void @llvm.dbg.value(metadata i8* %10, metadata !3670, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata i8* %10, metadata !3670, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3675
  %27 = load i8, i8* %10, align 1, !dbg !3676
  call void @llvm.dbg.value(metadata i8 %27, metadata !3672, metadata !DIExpression()), !dbg !3675
  %28 = icmp eq i8 %27, 0, !dbg !3677
  br i1 %28, label %29, label %5, !dbg !3678, !llvm.loop !3700

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3675
  ret i1 %30, !dbg !3702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #2 !dbg !3703 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3707, metadata !DIExpression()), !dbg !3708
  %2 = add i8 %0, -64, !dbg !3709
  %3 = icmp ult i8 %2, 59, !dbg !3709
  ret i1 %3, !dbg !3710
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3711 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3719, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %1, metadata !3720, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3721, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %3, metadata !3722, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %4, metadata !3723, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i16* %5, metadata !3724, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %6, metadata !3725, metadata !DIExpression()), !dbg !3788
  %11 = icmp eq i8* %0, null, !dbg !3789
  br i1 %11, label %12, label %13, !dbg !3792

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3793
  unreachable, !dbg !3793

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3726, metadata !DIExpression()), !dbg !3788
  %14 = bitcast i8* %0 to i32*, !dbg !3795
  call void @llvm.dbg.value(metadata i32* %14, metadata !3727, metadata !DIExpression()), !dbg !3788
  %15 = and i32 %4, 8, !dbg !3796
  %16 = icmp eq i32 %15, 0, !dbg !3797
  call void @llvm.dbg.value(metadata i1 %16, metadata !3731, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %0, metadata !3734, metadata !DIExpression()), !dbg !3788
  %17 = icmp eq i32 %1, 0, !dbg !3798
  br i1 %17, label %18, label %20, !dbg !3799

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3800
  br label %20, !dbg !3799

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3799
  call void @llvm.dbg.value(metadata i32 %21, metadata !3720, metadata !DIExpression()), !dbg !3788
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3801
  %23 = load i8, i8* %22, align 1, !dbg !3801
  %24 = zext i8 %23 to i32, !dbg !3802
  call void @llvm.dbg.value(metadata i32 %24, metadata !3729, metadata !DIExpression()), !dbg !3788
  %25 = icmp ne i8 %23, 0, !dbg !3803
  %26 = and i32 %4, 1, !dbg !3804
  %27 = icmp ne i32 %26, 0, !dbg !3804
  %28 = and i1 %27, %25, !dbg !3804
  call void @llvm.dbg.value(metadata i1 %28, metadata !3733, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3788
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3805
  %30 = load i8, i8* %29, align 1, !dbg !3805
  %31 = zext i8 %30 to i32, !dbg !3806
  call void @llvm.dbg.value(metadata i32 %31, metadata !3730, metadata !DIExpression()), !dbg !3788
  %32 = icmp ne i8 %30, 0, !dbg !3807
  %33 = and i32 %4, 2, !dbg !3808
  %34 = icmp ne i32 %33, 0, !dbg !3808
  %35 = and i1 %34, %32, !dbg !3808
  call void @llvm.dbg.value(metadata i1 %35, metadata !3732, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3788
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3809
  br i1 %36, label %41, label %37, !dbg !3809

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3811
  br i1 %38, label %287, label %39, !dbg !3814

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3815
  br label %287, !dbg !3817

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3818
  %43 = zext i8 %42 to i32, !dbg !3819
  %44 = shl nuw nsw i32 %43, 2, !dbg !3820
  call void @llvm.dbg.value(metadata i32 %44, metadata !3728, metadata !DIExpression()), !dbg !3788
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3821
  %46 = bitcast i8* %45 to i8**, !dbg !3822
  %47 = load i8*, i8** %46, align 4, !dbg !3822
  call void @llvm.dbg.value(metadata i8* %47, metadata !3737, metadata !DIExpression()), !dbg !3788
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3823
  call void @llvm.dbg.value(metadata i8* %48, metadata !3738, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 0, metadata !3739, metadata !DIExpression()), !dbg !3788
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3824
  br i1 %49, label %50, label %135, !dbg !3825

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3736, metadata !DIExpression()), !dbg !3788
  br i1 %28, label %51, label %76, !dbg !3826

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3736, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %48, metadata !3738, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 0, metadata !3739, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 0, metadata !3740, metadata !DIExpression()), !dbg !3827
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3828

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3736, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %55, metadata !3738, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %56, metadata !3739, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %57, metadata !3740, metadata !DIExpression()), !dbg !3827
  %58 = load i8, i8* %55, align 1, !dbg !3829
  %59 = zext i8 %58 to i32, !dbg !3830
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3830
  %61 = bitcast i32* %60 to i8**, !dbg !3831
  %62 = load i8*, i8** %61, align 4, !dbg !3831
  call void @llvm.dbg.value(metadata i8* %62, metadata !3746, metadata !DIExpression()), !dbg !3832
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !3833
  call void @llvm.dbg.value(metadata i32 %63, metadata !3749, metadata !DIExpression()), !dbg !3832
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3834
  br i1 %65, label %66, label %70, !dbg !3834

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3836
  %68 = add nuw i32 %56, 1, !dbg !3838
  call void @llvm.dbg.value(metadata i32 %68, metadata !3739, metadata !DIExpression()), !dbg !3788
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3839
  store i16 %67, i16* %69, align 2, !dbg !3840
  br label %70, !dbg !3841

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3788
  call void @llvm.dbg.value(metadata i32 %71, metadata !3739, metadata !DIExpression()), !dbg !3788
  %72 = add nsw i32 %63, %54, !dbg !3842
  call void @llvm.dbg.value(metadata i32 %72, metadata !3736, metadata !DIExpression()), !dbg !3788
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3843
  call void @llvm.dbg.value(metadata i8* %73, metadata !3738, metadata !DIExpression()), !dbg !3788
  %74 = add nuw nsw i32 %57, 1, !dbg !3844
  call void @llvm.dbg.value(metadata i32 %74, metadata !3740, metadata !DIExpression()), !dbg !3827
  %75 = icmp eq i32 %74, %24, !dbg !3845
  br i1 %75, label %82, label %53, !dbg !3828, !llvm.loop !3846

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3848
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3848
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3848
  br label %82, !dbg !3848

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3851
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3788
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3852
  call void @llvm.dbg.value(metadata i1 undef, metadata !3750, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3853
  call void @llvm.dbg.value(metadata i32 0, metadata !3751, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %85, metadata !3736, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %84, metadata !3738, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %83, metadata !3739, metadata !DIExpression()), !dbg !3788
  %86 = icmp eq i8 %30, 0, !dbg !3855
  br i1 %86, label %287, label %87, !dbg !3856

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3857
  %89 = icmp eq i32 %88, 0, !dbg !3858
  call void @llvm.dbg.value(metadata i1 %89, metadata !3750, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3853
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3856

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3736, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %96, metadata !3738, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %97, metadata !3739, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %98, metadata !3751, metadata !DIExpression()), !dbg !3854
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3859
  call void @llvm.dbg.value(metadata i8* %99, metadata !3738, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 undef, metadata !3753, metadata !DIExpression()), !dbg !3860
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3861
  call void @llvm.dbg.value(metadata i8* %100, metadata !3738, metadata !DIExpression()), !dbg !3788
  %101 = load i8, i8* %99, align 1, !dbg !3862
  call void @llvm.dbg.value(metadata i8 %101, metadata !3756, metadata !DIExpression()), !dbg !3860
  %102 = zext i8 %101 to i32, !dbg !3863
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3863
  %104 = bitcast i32* %103 to i8**, !dbg !3864
  %105 = load i8*, i8** %104, align 4, !dbg !3864
  call void @llvm.dbg.value(metadata i8* %105, metadata !3757, metadata !DIExpression()), !dbg !3860
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !3865
  call void @llvm.dbg.value(metadata i1 %106, metadata !3758, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3860
  br i1 %16, label %113, label %107, !dbg !3866

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3868
  call void @llvm.dbg.value(metadata i8 %108, metadata !3753, metadata !DIExpression()), !dbg !3860
  %109 = zext i8 %108 to i32, !dbg !3869
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !3870
  br i1 %110, label %111, label %113, !dbg !3871

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !3872
  %112 = add nsw i32 %95, -2, !dbg !3878
  call void @llvm.dbg.value(metadata i32 %112, metadata !3736, metadata !DIExpression()), !dbg !3788
  br label %130, !dbg !3879

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3880

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3881

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3883
  call void @llvm.dbg.value(metadata i32 %116, metadata !3736, metadata !DIExpression()), !dbg !3788
  br label %130, !dbg !3886

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3887

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3784), !dbg !3888
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !3889
  call void @llvm.dbg.value(metadata i32 %119, metadata !3759, metadata !DIExpression()), !dbg !3860
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3890
  br i1 %121, label %122, label %126, !dbg !3890

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3892
  %124 = add nuw i32 %97, 1, !dbg !3894
  call void @llvm.dbg.value(metadata i32 %124, metadata !3739, metadata !DIExpression()), !dbg !3788
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3895
  store i16 %123, i16* %125, align 2, !dbg !3896
  br label %126, !dbg !3897

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3788
  call void @llvm.dbg.value(metadata i32 %127, metadata !3739, metadata !DIExpression()), !dbg !3788
  %128 = add i32 %95, -1, !dbg !3898
  %129 = add i32 %128, %119, !dbg !3899
  call void @llvm.dbg.value(metadata i32 %129, metadata !3736, metadata !DIExpression()), !dbg !3788
  br label %130, !dbg !3900

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3788
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3860
  call void @llvm.dbg.value(metadata i32 %132, metadata !3736, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %131, metadata !3739, metadata !DIExpression()), !dbg !3788
  %133 = add nuw nsw i32 %98, 1, !dbg !3901
  call void @llvm.dbg.value(metadata i8* %100, metadata !3738, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %133, metadata !3751, metadata !DIExpression()), !dbg !3854
  %134 = icmp eq i32 %133, %31, !dbg !3855
  br i1 %134, label %287, label %94, !dbg !3856, !llvm.loop !3902

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3761, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3762, metadata !DIExpression()), !dbg !3905
  br i1 %28, label %136, label %138, !dbg !3906

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3763, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 0, metadata !3764, metadata !DIExpression()), !dbg !3788
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3907
  call void @llvm.dbg.value(metadata i8* %137, metadata !3765, metadata !DIExpression()), !dbg !3788
  br label %143, !dbg !3910

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3911
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3911

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3765, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 undef, metadata !3764, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 0, metadata !3763, metadata !DIExpression()), !dbg !3788
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !3913
  br label %148, !dbg !3916

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !3917
  call void @llvm.dbg.value(metadata i8* %151, metadata !3738, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 0, metadata !3767, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i8 %149, metadata !3764, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 %150, metadata !3763, metadata !DIExpression()), !dbg !3788
  %152 = icmp eq i8 %30, 0, !dbg !3919
  br i1 %152, label %153, label %155, !dbg !3920

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !3921
  br label %160, !dbg !3920

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !3920

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !3921
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !3922
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !3923
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3788
  call void @llvm.dbg.value(metadata i8 undef, metadata !3760, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3788
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3924
  %166 = load i8, i8* %165, align 1, !dbg !3924
  %167 = zext i8 %162 to i32, !dbg !3925
  %168 = add i8 %166, %162, !dbg !3926
  call void @llvm.dbg.value(metadata i8 %168, metadata !3760, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3788
  %169 = icmp eq i32 %33, 0, !dbg !3927
  %170 = lshr i8 %163, 1, !dbg !3928
  %171 = select i1 %169, i8 %170, i8 0, !dbg !3928
  call void @llvm.dbg.value(metadata i8 %171, metadata !3760, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3788
  %172 = icmp eq i32 %26, 0, !dbg !3929
  %173 = icmp eq i32 %161, 0, !dbg !3921
  %174 = select i1 %173, i8 0, i8 %163, !dbg !3921
  %175 = select i1 %172, i8 %174, i8 0, !dbg !3921
  call void @llvm.dbg.value(metadata i8 %175, metadata !3760, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3788
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3775, metadata !DIExpression()), !dbg !3930
  %176 = load i32, i32* %14, align 1, !dbg !3931
  store i8 %168, i8* %165, align 1, !dbg !3932
  store i8 %175, i8* %22, align 1, !dbg !3932
  store i8 %171, i8* %29, align 1, !dbg !3932
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !3933
  call void @llvm.dbg.value(metadata i32 %177, metadata !3766, metadata !DIExpression()), !dbg !3788
  %178 = icmp slt i32 %177, 0, !dbg !3934
  br i1 %178, label %287, label %240, !dbg !3936

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3738, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %181, metadata !3767, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i8 %182, metadata !3764, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 %183, metadata !3763, metadata !DIExpression()), !dbg !3788
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !3937
  call void @llvm.dbg.value(metadata i8* %184, metadata !3738, metadata !DIExpression()), !dbg !3788
  %185 = load i8, i8* %180, align 1, !dbg !3938
  call void @llvm.dbg.value(metadata i8 %185, metadata !3769, metadata !DIExpression()), !dbg !3939
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !3940
  call void @llvm.dbg.value(metadata i8* %186, metadata !3738, metadata !DIExpression()), !dbg !3788
  %187 = load i8, i8* %184, align 1, !dbg !3941
  call void @llvm.dbg.value(metadata i8 %187, metadata !3772, metadata !DIExpression()), !dbg !3939
  %188 = zext i8 %187 to i32, !dbg !3942
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !3942
  %190 = bitcast i32* %189 to i8**, !dbg !3943
  %191 = load i8*, i8** %190, align 4, !dbg !3943
  call void @llvm.dbg.value(metadata i8* %191, metadata !3773, metadata !DIExpression()), !dbg !3939
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !3944
  call void @llvm.dbg.value(metadata i1 %192, metadata !3774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3939
  br i1 %16, label %196, label %193, !dbg !3945

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !3947
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !3948
  br i1 %195, label %235, label %196, !dbg !3949

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !3950

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !3951

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !3954
  br i1 %199, label %201, label %200, !dbg !3959

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3960
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3960
  unreachable, !dbg !3960

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !3954
  %203 = add nuw nsw i8 %183, 1, !dbg !3962
  call void @llvm.dbg.value(metadata i8 %203, metadata !3763, metadata !DIExpression()), !dbg !3788
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !3963
  br label %231, !dbg !3964

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !3965

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !3966
  br i1 %207, label %209, label %208, !dbg !3971

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !3972
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !3972
  unreachable, !dbg !3972

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !3966
  %211 = add nuw nsw i8 %182, 1, !dbg !3974
  call void @llvm.dbg.value(metadata i8 %211, metadata !3764, metadata !DIExpression()), !dbg !3788
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !3975
  br label %231, !dbg !3976

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !3977

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !3979
  br i1 %215, label %217, label %216, !dbg !3984

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !3985
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !3985
  unreachable, !dbg !3985

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !3979
  %219 = add nuw nsw i8 %183, 1, !dbg !3987
  call void @llvm.dbg.value(metadata i8 %219, metadata !3763, metadata !DIExpression()), !dbg !3788
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !3988
  br label %231, !dbg !3989

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !3990
  br i1 %222, label %224, label %223, !dbg !3994

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !3995
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !3995
  unreachable, !dbg !3995

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !3990
  %226 = add nuw nsw i8 %182, 1, !dbg !3997
  call void @llvm.dbg.value(metadata i8 %226, metadata !3764, metadata !DIExpression()), !dbg !3788
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !3998
  store i8 %185, i8* %227, align 1, !dbg !3999
  %228 = add nuw nsw i8 %182, 2, !dbg !4000
  call void @llvm.dbg.value(metadata i8 %228, metadata !3764, metadata !DIExpression()), !dbg !3788
  %229 = zext i8 %226 to i32, !dbg !4001
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4001
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4002
  br label %235, !dbg !4003

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3788
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !3923
  call void @llvm.dbg.value(metadata i8 %237, metadata !3764, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 %236, metadata !3763, metadata !DIExpression()), !dbg !3788
  %238 = add nuw nsw i32 %181, 1, !dbg !4003
  call void @llvm.dbg.value(metadata i8* %186, metadata !3738, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %238, metadata !3767, metadata !DIExpression()), !dbg !3918
  %239 = icmp eq i32 %238, %31, !dbg !3919
  br i1 %239, label %160, label %179, !dbg !3920, !llvm.loop !4004

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !3928
  call void @llvm.dbg.value(metadata i32 %177, metadata !3736, metadata !DIExpression()), !dbg !3788
  store i32 %176, i32* %14, align 1, !dbg !4006
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4007
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4008
  call void @llvm.dbg.value(metadata i32 %243, metadata !3766, metadata !DIExpression()), !dbg !3788
  %244 = icmp slt i32 %243, 0, !dbg !4009
  br i1 %244, label %287, label %245, !dbg !4011

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3736, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3788
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4012
  %248 = add nuw nsw i32 %44, %24, !dbg !4012
  %249 = sub i32 %247, %248, !dbg !4012
  call void @llvm.dbg.value(metadata i32 %249, metadata !3776, metadata !DIExpression()), !dbg !3788
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4013
  call void @llvm.dbg.value(metadata i32 %250, metadata !3766, metadata !DIExpression()), !dbg !3788
  %251 = icmp slt i32 %250, 0, !dbg !4014
  br i1 %251, label %287, label %252, !dbg !4016

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4017
  call void @llvm.dbg.value(metadata i32 %253, metadata !3736, metadata !DIExpression()), !dbg !3788
  %254 = add nuw nsw i32 %253, %250, !dbg !4018
  call void @llvm.dbg.value(metadata i32 %254, metadata !3736, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 0, metadata !3777, metadata !DIExpression()), !dbg !4019
  %255 = icmp eq i8 %162, 0, !dbg !4020
  br i1 %255, label %284, label %256, !dbg !4021

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4021

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3777, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %260, metadata !3736, metadata !DIExpression()), !dbg !3788
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4022
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4023
  %262 = load i8, i8* %261, align 1, !dbg !4023
  call void @llvm.dbg.value(metadata i8 %262, metadata !3779, metadata !DIExpression()), !dbg !4024
  store i8 %262, i8* %10, align 1, !dbg !4025
  %263 = zext i8 %262 to i32, !dbg !4026
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4026
  %265 = bitcast i32* %264 to i8**, !dbg !4027
  %266 = load i8*, i8** %265, align 4, !dbg !4027
  call void @llvm.dbg.value(metadata i8* %266, metadata !3782, metadata !DIExpression()), !dbg !4024
  br i1 %257, label %270, label %267, !dbg !4028

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4029
  %269 = load i16, i16* %268, align 2, !dbg !4029
  br label %270, !dbg !4028

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4028
  call void @llvm.dbg.value(metadata i32 undef, metadata !3783, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4024
  call void @llvm.dbg.value(metadata i8* %10, metadata !3779, metadata !DIExpression(DW_OP_deref)), !dbg !4024
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4030
  call void @llvm.dbg.value(metadata i32 %272, metadata !3766, metadata !DIExpression()), !dbg !3788
  %273 = icmp slt i32 %272, 0, !dbg !4031
  br i1 %273, label %277, label %274, !dbg !4033

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3783, metadata !DIExpression()), !dbg !4024
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3736, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3788
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4034
  call void @llvm.dbg.value(metadata i32 %275, metadata !3766, metadata !DIExpression()), !dbg !3788
  %276 = icmp slt i32 %275, 0, !dbg !4035
  br i1 %276, label %277, label %279, !dbg !4037

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3736, metadata !DIExpression()), !dbg !3788
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4038
  call void @llvm.dbg.value(metadata i32 undef, metadata !3736, metadata !DIExpression()), !dbg !3788
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4039
  call void @llvm.dbg.value(metadata i32 %280, metadata !3736, metadata !DIExpression()), !dbg !3788
  %281 = add nsw i32 %280, %275, !dbg !4040
  call void @llvm.dbg.value(metadata i32 %281, metadata !3736, metadata !DIExpression()), !dbg !3788
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4038
  %282 = add nuw nsw i32 %259, 1, !dbg !4041
  call void @llvm.dbg.value(metadata i32 %282, metadata !3777, metadata !DIExpression()), !dbg !4019
  %283 = icmp eq i32 %282, %167, !dbg !4020
  br i1 %283, label %284, label %258, !dbg !4021, !llvm.loop !4042

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4018
  call void @llvm.dbg.value(metadata i32 %285, metadata !3736, metadata !DIExpression()), !dbg !3788
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4044
  br label %287, !dbg !4045

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3788
  ret i32 %288, !dbg !4046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4047 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4051, metadata !DIExpression()), !dbg !4059
  %2 = icmp eq i8* %0, null, !dbg !4060
  br i1 %2, label %3, label %4, !dbg !4063

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4064
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4064
  unreachable, !dbg !4064

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4052, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %0, metadata !4053, metadata !DIExpression()), !dbg !4059
  %5 = load i8, i8* %0, align 1, !dbg !4066
  %6 = zext i8 %5 to i32, !dbg !4066
  %7 = shl nuw nsw i32 %6, 2, !dbg !4067
  call void @llvm.dbg.value(metadata i32 %7, metadata !4054, metadata !DIExpression()), !dbg !4059
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4068
  %9 = load i8, i8* %8, align 1, !dbg !4068
  %10 = zext i8 %9 to i32, !dbg !4068
  call void @llvm.dbg.value(metadata i32 %10, metadata !4055, metadata !DIExpression()), !dbg !4059
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4069
  %12 = load i8, i8* %11, align 1, !dbg !4069
  %13 = zext i8 %12 to i32, !dbg !4069
  call void @llvm.dbg.value(metadata i32 %13, metadata !4056, metadata !DIExpression()), !dbg !4059
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4070
  call void @llvm.dbg.value(metadata i8* %14, metadata !4052, metadata !DIExpression()), !dbg !4059
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4071
  call void @llvm.dbg.value(metadata i8* %15, metadata !4052, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 0, metadata !4057, metadata !DIExpression()), !dbg !4072
  %16 = icmp eq i8 %9, 0, !dbg !4073
  br i1 %16, label %17, label %22, !dbg !4075

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4059
  %19 = ptrtoint i8* %18 to i32, !dbg !4076
  %20 = ptrtoint i8* %0 to i32, !dbg !4076
  %21 = sub i32 %19, %20, !dbg !4076
  ret i32 %21, !dbg !4077

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4057, metadata !DIExpression()), !dbg !4072
  call void @llvm.dbg.value(metadata i8* %24, metadata !4052, metadata !DIExpression()), !dbg !4059
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4078
  call void @llvm.dbg.value(metadata i8* %25, metadata !4052, metadata !DIExpression()), !dbg !4059
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4080
  %27 = add i32 %26, 1, !dbg !4081
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4082
  call void @llvm.dbg.value(metadata i8* %28, metadata !4052, metadata !DIExpression()), !dbg !4059
  %29 = add nuw nsw i32 %23, 1, !dbg !4083
  call void @llvm.dbg.value(metadata i32 %29, metadata !4057, metadata !DIExpression()), !dbg !4072
  %30 = icmp eq i32 %29, %10, !dbg !4073
  br i1 %30, label %17, label %22, !dbg !4075, !llvm.loop !4084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4086 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4090, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.value(metadata i8* %1, metadata !4091, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.value(metadata i8* %2, metadata !4092, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.value(metadata i16 %3, metadata !4093, metadata !DIExpression()), !dbg !4094
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4095
  br i1 %5, label %6, label %9, !dbg !4097

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4098
  %8 = add i32 %7, 1, !dbg !4100
  br label %20, !dbg !4101

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4102
  br i1 %10, label %13, label %11, !dbg !4103

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4103
  br label %16, !dbg !4103

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4104
  %15 = add i32 %14, 1, !dbg !4105
  br label %16, !dbg !4103

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4103
  %18 = and i32 %17, 65535, !dbg !4106
  call void @llvm.dbg.value(metadata i32 %17, metadata !4093, metadata !DIExpression()), !dbg !4094
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4107
  br label %20, !dbg !4108

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4094
  ret i32 %21, !dbg !4109
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4112, metadata !DIExpression()), !dbg !4113
  ret i32 0, !dbg !4114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4115 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4119, metadata !DIExpression()), !dbg !4120
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4121
  ret void, !dbg !4122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4123 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4124
  ret i8* %1, !dbg !4125
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4126 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4137, metadata !DIExpression()), !dbg !4148
  call void @llvm.dbg.value(metadata i8* %0, metadata !4136, metadata !DIExpression()), !dbg !4148
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4149
  ret void, !dbg !4151
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4156, metadata !DIExpression()), !dbg !4158
  call void @llvm.dbg.value(metadata i8* %1, metadata !4157, metadata !DIExpression()), !dbg !4158
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4159
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4159
  ret i32 %4, !dbg !4160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4161 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4168, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4165, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata i8* %1, metadata !4166, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata i8* %2, metadata !4167, metadata !DIExpression()), !dbg !4169
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4170
  ret void, !dbg !4171
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4172 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4176, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.value(metadata i32 %1, metadata !4177, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.value(metadata i32 0, metadata !4178, metadata !DIExpression()), !dbg !4179
  %3 = icmp eq i32 %1, 0, !dbg !4180
  br i1 %3, label %13, label %4, !dbg !4183

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4178, metadata !DIExpression()), !dbg !4179
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4184
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4186
  %8 = load i8, i8* %7, align 1, !dbg !4186
  %9 = zext i8 %8 to i32, !dbg !4186
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4184
  %11 = add nuw i32 %5, 1, !dbg !4187
  call void @llvm.dbg.value(metadata i32 %11, metadata !4178, metadata !DIExpression()), !dbg !4179
  %12 = icmp eq i32 %11, %1, !dbg !4180
  br i1 %12, label %13, label %4, !dbg !4183, !llvm.loop !4188

13:                                               ; preds = %4, %2
  ret void, !dbg !4190
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4191 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4195, metadata !DIExpression()), !dbg !4197
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4198
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4198
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4196, metadata !DIExpression()), !dbg !4199
  call void @llvm.va_start(i8* nonnull %3), !dbg !4200
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4201
  %5 = load i32, i32* %4, align 4, !dbg !4201
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4201
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4201
  call void @llvm.va_end(i8* nonnull %3), !dbg !4202
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4203
  ret void, !dbg !4203
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4204 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4208, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.value(metadata i32 %1, metadata !4209, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.value(metadata i8* %2, metadata !4210, metadata !DIExpression()), !dbg !4213
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4214
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4214
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4211, metadata !DIExpression()), !dbg !4215
  call void @llvm.va_start(i8* nonnull %5), !dbg !4216
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4217
  %7 = load i32, i32* %6, align 4, !dbg !4217
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4217
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4217
  call void @llvm.dbg.value(metadata i32 %9, metadata !4212, metadata !DIExpression()), !dbg !4213
  call void @llvm.va_end(i8* nonnull %5), !dbg !4218
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4219
  ret i32 %9, !dbg !4220
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4221 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4228, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.value(metadata i8* %0, metadata !4225, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.value(metadata i32 %1, metadata !4226, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.value(metadata i8* %2, metadata !4227, metadata !DIExpression()), !dbg !4235
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4236
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4236
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4229, metadata !DIExpression()), !dbg !4237
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4238
  store i8* %0, i8** %7, align 4, !dbg !4238
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4238
  store i32 %1, i32* %8, align 4, !dbg !4238
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4238
  store i32 0, i32* %9, align 4, !dbg !4238
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4239
  %10 = load i32, i32* %9, align 4, !dbg !4240
  %11 = load i32, i32* %8, align 4, !dbg !4242
  %12 = icmp slt i32 %10, %11, !dbg !4243
  br i1 %12, label %13, label %15, !dbg !4244

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4245
  store i8 0, i8* %14, align 1, !dbg !4247
  br label %15, !dbg !4248

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4249
  ret i32 %10, !dbg !4250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4256, metadata !DIExpression()), !dbg !4258
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4257, metadata !DIExpression()), !dbg !4258
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4259
  %4 = load i8*, i8** %3, align 4, !dbg !4259
  %5 = icmp eq i8* %4, null, !dbg !4261
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4262
  br i1 %5, label %12, label %8, !dbg !4263

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4264
  %10 = load i32, i32* %9, align 4, !dbg !4264
  %11 = icmp slt i32 %7, %10, !dbg !4265
  br i1 %11, label %15, label %12, !dbg !4266

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4267
  %14 = add nsw i32 %7, 1, !dbg !4269
  store i32 %14, i32* %13, align 4, !dbg !4269
  br label %25, !dbg !4270

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4271
  %17 = icmp eq i32 %7, %16, !dbg !4273
  br i1 %17, label %18, label %21, !dbg !4274

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4275
  store i32 %19, i32* %6, align 4, !dbg !4275
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4277
  store i8 0, i8* %20, align 1, !dbg !4278
  br label %25, !dbg !4279

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4280
  %23 = add nsw i32 %7, 1, !dbg !4282
  store i32 %23, i32* %6, align 4, !dbg !4282
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4283
  store i8 %22, i8* %24, align 1, !dbg !4284
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4285
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4286 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4291, metadata !DIExpression()), !dbg !4295
  call void @llvm.dbg.value(metadata i8* %1, metadata !4292, metadata !DIExpression()), !dbg !4295
  call void @llvm.dbg.value(metadata i8* %2, metadata !4293, metadata !DIExpression()), !dbg !4295
  call void @llvm.dbg.value(metadata i8* %3, metadata !4294, metadata !DIExpression()), !dbg !4295
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4296
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4297
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4298
  unreachable, !dbg !4299
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4300 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4407
  ret %struct.k_thread* %1, !dbg !4408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4409 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4414, metadata !DIExpression()), !dbg !4415
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4416, !srcloc !4418
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4419
  ret void, !dbg !4420
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4421 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4422, !srcloc !4424
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4425
  ret %struct.k_thread* %1, !dbg !4426
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4427 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4440, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4437, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8* %1, metadata !4438, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8* %2, metadata !4439, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %4, metadata !4441, metadata !DIExpression()), !dbg !4566
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4567
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4567
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4442, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i32 0, metadata !4446, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i1 undef, metadata !4448, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4566
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4569

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4569

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4570
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4440, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8* %30, metadata !4439, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %29, metadata !4446, metadata !DIExpression()), !dbg !4566
  %31 = load i8, i8* %30, align 1, !dbg !4571
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4569

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4571
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4572
  call void @llvm.dbg.value(metadata i8* %34, metadata !4439, metadata !DIExpression()), !dbg !4566
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4572
  call void @llvm.dbg.value(metadata i32 %35, metadata !4450, metadata !DIExpression()), !dbg !4573
  %36 = icmp slt i32 %35, 0, !dbg !4574
  %37 = add i32 %29, 1, !dbg !4572
  call void @llvm.dbg.value(metadata i32 undef, metadata !4446, metadata !DIExpression()), !dbg !4566
  br i1 %36, label %365, label %28, !llvm.loop !4576

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4578
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4455, metadata !DIExpression()), !dbg !4579
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4579
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4498, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4501, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8* %30, metadata !4504, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 -1, metadata !4505, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 -1, metadata !4506, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8* null, metadata !4507, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8* %14, metadata !4508, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8 0, metadata !4509, metadata !DIExpression()), !dbg !4580
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4581
  call void @llvm.dbg.value(metadata i8* %39, metadata !4439, metadata !DIExpression()), !dbg !4566
  %40 = load i24, i24* %15, align 8, !dbg !4582
  %41 = and i24 %40, 256, !dbg !4582
  %42 = icmp eq i24 %41, 0, !dbg !4582
  br i1 %42, label %51, label %43, !dbg !4584

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4585
  call void @llvm.dbg.value(metadata i8* %44, metadata !4440, metadata !DIExpression()), !dbg !4566
  %45 = bitcast i8* %27 to i32*, !dbg !4585
  %46 = load i32, i32* %45, align 4, !dbg !4585
  call void @llvm.dbg.value(metadata i32 %46, metadata !4505, metadata !DIExpression()), !dbg !4580
  %47 = icmp slt i32 %46, 0, !dbg !4587
  br i1 %47, label %48, label %56, !dbg !4589

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4590
  store i24 %49, i24* %15, align 8, !dbg !4590
  %50 = sub nsw i32 0, %46, !dbg !4592
  call void @llvm.dbg.value(metadata i32 %50, metadata !4505, metadata !DIExpression()), !dbg !4580
  br label %56, !dbg !4593

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4594
  %53 = icmp eq i24 %52, 0, !dbg !4594
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4596
  br label %56, !dbg !4596

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4597
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4580
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4440, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %58, metadata !4505, metadata !DIExpression()), !dbg !4580
  %60 = and i24 %57, 1024, !dbg !4597
  %61 = icmp eq i24 %60, 0, !dbg !4597
  br i1 %61, label %69, label %62, !dbg !4598

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4599
  call void @llvm.dbg.value(metadata i8* %63, metadata !4440, metadata !DIExpression()), !dbg !4566
  %64 = bitcast i8* %59 to i32*, !dbg !4599
  %65 = load i32, i32* %64, align 4, !dbg !4599
  call void @llvm.dbg.value(metadata i32 %65, metadata !4510, metadata !DIExpression()), !dbg !4600
  %66 = icmp slt i32 %65, 0, !dbg !4601
  br i1 %66, label %67, label %74, !dbg !4603

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4604
  store i24 %68, i24* %15, align 8, !dbg !4604
  br label %74, !dbg !4606

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4607
  %71 = icmp eq i24 %70, 0, !dbg !4607
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4609
  br label %74, !dbg !4609

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4610
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4580
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4580
  call void @llvm.dbg.value(metadata i8* %77, metadata !4440, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %76, metadata !4506, metadata !DIExpression()), !dbg !4580
  store i32 0, i32* %16, align 4, !dbg !4611
  store i32 0, i32* %17, align 8, !dbg !4612
  %78 = lshr i24 %75, 16, !dbg !4610
  call void @llvm.dbg.value(metadata i24 %78, metadata !4513, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4580
  %79 = lshr i24 %75, 11, !dbg !4613
  %80 = and i24 %79, 15, !dbg !4613
  %81 = zext i24 %80 to i32, !dbg !4613
  call void @llvm.dbg.value(metadata i32 %81, metadata !4514, metadata !DIExpression()), !dbg !4580
  %82 = trunc i24 %78 to i3, !dbg !4614
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4614

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4615

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4618
  call void @llvm.dbg.value(metadata i8* %85, metadata !4440, metadata !DIExpression()), !dbg !4566
  %86 = bitcast i8* %77 to i32*, !dbg !4618
  %87 = load i32, i32* %86, align 4, !dbg !4618
  %88 = sext i32 %87 to i64, !dbg !4618
  store i64 %88, i64* %20, align 8, !dbg !4620
  br label %115, !dbg !4621

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4622
  call void @llvm.dbg.value(metadata i8* %90, metadata !4440, metadata !DIExpression()), !dbg !4566
  %91 = bitcast i8* %77 to i32*, !dbg !4622
  %92 = load i32, i32* %91, align 4, !dbg !4622
  %93 = sext i32 %92 to i64, !dbg !4622
  store i64 %93, i64* %20, align 8, !dbg !4625
  br label %115, !dbg !4626

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4627
  %96 = add i32 %95, 7, !dbg !4627
  %97 = and i32 %96, -8, !dbg !4627
  %98 = inttoptr i32 %97 to i8*, !dbg !4627
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4627
  call void @llvm.dbg.value(metadata i8* %99, metadata !4440, metadata !DIExpression()), !dbg !4566
  %100 = inttoptr i32 %97 to i64*, !dbg !4627
  %101 = load i64, i64* %100, align 8, !dbg !4627
  store i64 %101, i64* %20, align 8, !dbg !4628
  br label %115, !dbg !4629

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4630
  %104 = add i32 %103, 7, !dbg !4630
  %105 = and i32 %104, -8, !dbg !4630
  %106 = inttoptr i32 %105 to i8*, !dbg !4630
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4630
  call void @llvm.dbg.value(metadata i8* %107, metadata !4440, metadata !DIExpression()), !dbg !4566
  %108 = inttoptr i32 %105 to i64*, !dbg !4630
  %109 = load i64, i64* %108, align 8, !dbg !4630
  store i64 %109, i64* %20, align 8, !dbg !4631
  br label %115, !dbg !4632

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4633
  call void @llvm.dbg.value(metadata i8* %111, metadata !4440, metadata !DIExpression()), !dbg !4566
  %112 = bitcast i8* %77 to i32*, !dbg !4633
  %113 = load i32, i32* %112, align 4, !dbg !4633
  %114 = sext i32 %113 to i64, !dbg !4634
  store i64 %114, i64* %20, align 8, !dbg !4635
  br label %115, !dbg !4636

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4637
  call void @llvm.dbg.value(metadata i8* %117, metadata !4440, metadata !DIExpression()), !dbg !4566
  %118 = trunc i24 %79 to i4, !dbg !4638
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4638

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4639
  %121 = ashr exact i64 %120, 56, !dbg !4639
  store i64 %121, i64* %20, align 8, !dbg !4642
  br label %177, !dbg !4643

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4644
  %124 = ashr exact i64 %123, 48, !dbg !4644
  store i64 %124, i64* %20, align 8, !dbg !4647
  br label %177, !dbg !4648

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4649

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4652
  call void @llvm.dbg.value(metadata i8* %127, metadata !4440, metadata !DIExpression()), !dbg !4566
  %128 = bitcast i8* %77 to i32*, !dbg !4652
  %129 = load i32, i32* %128, align 4, !dbg !4652
  %130 = zext i32 %129 to i64, !dbg !4652
  store i64 %130, i64* %20, align 8, !dbg !4654
  br label %157, !dbg !4655

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4656
  call void @llvm.dbg.value(metadata i8* %132, metadata !4440, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8* %132, metadata !4440, metadata !DIExpression()), !dbg !4566
  %133 = bitcast i8* %77 to i32*, !dbg !4656
  %134 = load i32, i32* %133, align 4, !dbg !4656
  %135 = zext i32 %134 to i64, !dbg !4656
  store i64 %135, i64* %20, align 8, !dbg !4656
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4658
  %138 = add i32 %137, 7, !dbg !4658
  %139 = and i32 %138, -8, !dbg !4658
  %140 = inttoptr i32 %139 to i8*, !dbg !4658
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4658
  call void @llvm.dbg.value(metadata i8* %141, metadata !4440, metadata !DIExpression()), !dbg !4566
  %142 = inttoptr i32 %139 to i64*, !dbg !4658
  %143 = load i64, i64* %142, align 8, !dbg !4658
  store i64 %143, i64* %20, align 8, !dbg !4659
  br label %157, !dbg !4660

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4661
  %146 = add i32 %145, 7, !dbg !4661
  %147 = and i32 %146, -8, !dbg !4661
  %148 = inttoptr i32 %147 to i8*, !dbg !4661
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4661
  call void @llvm.dbg.value(metadata i8* %149, metadata !4440, metadata !DIExpression()), !dbg !4566
  %150 = inttoptr i32 %147 to i64*, !dbg !4661
  %151 = load i64, i64* %150, align 8, !dbg !4661
  store i64 %151, i64* %20, align 8, !dbg !4662
  br label %157, !dbg !4663

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4664
  call void @llvm.dbg.value(metadata i8* %153, metadata !4440, metadata !DIExpression()), !dbg !4566
  %154 = bitcast i8* %77 to i32*, !dbg !4664
  %155 = load i32, i32* %154, align 4, !dbg !4664
  %156 = zext i32 %155 to i64, !dbg !4665
  store i64 %156, i64* %20, align 8, !dbg !4666
  br label %157, !dbg !4667

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4668
  call void @llvm.dbg.value(metadata i8* %159, metadata !4440, metadata !DIExpression()), !dbg !4566
  %160 = trunc i24 %79 to i4, !dbg !4669
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4669

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4670
  store i64 %162, i64* %20, align 8, !dbg !4673
  br label %177, !dbg !4674

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4675
  store i64 %164, i64* %20, align 8, !dbg !4678
  br label %177, !dbg !4679

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4680
  %167 = add i32 %166, 7, !dbg !4680
  %168 = and i32 %167, -8, !dbg !4680
  %169 = inttoptr i32 %168 to i8*, !dbg !4680
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4680
  call void @llvm.dbg.value(metadata i8* %170, metadata !4440, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8* %170, metadata !4440, metadata !DIExpression()), !dbg !4566
  %171 = inttoptr i32 %168 to double*, !dbg !4680
  %172 = load double, double* %171, align 8, !dbg !4680
  store double %172, double* %19, align 8, !dbg !4680
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4684
  call void @llvm.dbg.value(metadata i8* %174, metadata !4440, metadata !DIExpression()), !dbg !4566
  %175 = bitcast i8* %77 to i8**, !dbg !4684
  %176 = load i8*, i8** %175, align 4, !dbg !4684
  store i8* %176, i8** %18, align 8, !dbg !4687
  br label %177, !dbg !4688

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4580
  call void @llvm.dbg.value(metadata i8* %178, metadata !4440, metadata !DIExpression()), !dbg !4566
  %179 = and i24 %75, 3, !dbg !4689
  %180 = icmp eq i24 %179, 0, !dbg !4689
  br i1 %180, label %185, label %181, !dbg !4689

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4690
  call void @llvm.dbg.value(metadata i32 %182, metadata !4515, metadata !DIExpression()), !dbg !4691
  %183 = icmp slt i32 %182, 0, !dbg !4692
  %184 = add i32 %182, %29, !dbg !4690
  call void @llvm.dbg.value(metadata i32 undef, metadata !4446, metadata !DIExpression()), !dbg !4566
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4694
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4695

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4696
  call void @llvm.dbg.value(metadata i32 %188, metadata !4519, metadata !DIExpression()), !dbg !4697
  %189 = icmp slt i32 %188, 0, !dbg !4698
  %190 = add i32 %29, 1, !dbg !4696
  call void @llvm.dbg.value(metadata i32 undef, metadata !4446, metadata !DIExpression()), !dbg !4566
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4700
  call void @llvm.dbg.value(metadata i8* %192, metadata !4507, metadata !DIExpression()), !dbg !4580
  %193 = icmp sgt i32 %76, -1, !dbg !4701
  br i1 %193, label %194, label %196, !dbg !4703

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4704
  call void @llvm.dbg.value(metadata i32 %195, metadata !4522, metadata !DIExpression()), !dbg !4706
  br label %241, !dbg !4707

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4708
  call void @llvm.dbg.value(metadata i32 %197, metadata !4522, metadata !DIExpression()), !dbg !4706
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4507, metadata !DIExpression()), !dbg !4580
  %199 = load i64, i64* %20, align 8, !dbg !4710
  %200 = trunc i64 %199 to i8, !dbg !4711
  store i8 %200, i8* %10, align 1, !dbg !4712
  call void @llvm.dbg.value(metadata i8* %23, metadata !4508, metadata !DIExpression()), !dbg !4580
  br label %245, !dbg !4713

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4714
  %203 = icmp eq i24 %202, 0, !dbg !4714
  %204 = trunc i24 %75 to i8, !dbg !4716
  %205 = shl i8 %204, 1, !dbg !4716
  %206 = and i8 %205, 32, !dbg !4716
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4716
  call void @llvm.dbg.value(metadata i8 %207, metadata !4509, metadata !DIExpression()), !dbg !4580
  %208 = load i64, i64* %20, align 8, !dbg !4717
  call void @llvm.dbg.value(metadata i64 %208, metadata !4447, metadata !DIExpression()), !dbg !4566
  %209 = icmp slt i64 %208, 0, !dbg !4718
  br i1 %209, label %210, label %212, !dbg !4720

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4509, metadata !DIExpression()), !dbg !4580
  %211 = sub nsw i64 0, %208, !dbg !4721
  store i64 %211, i64* %20, align 8, !dbg !4723
  br label %212, !dbg !4724

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4580
  call void @llvm.dbg.value(metadata i8 %213, metadata !4509, metadata !DIExpression()), !dbg !4580
  %214 = load i64, i64* %20, align 8, !dbg !4725
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4726
  call void @llvm.dbg.value(metadata i8* %215, metadata !4507, metadata !DIExpression()), !dbg !4580
  br label %216, !dbg !4727

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4728
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4729
  call void @llvm.dbg.value(metadata i8* %218, metadata !4507, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8 %217, metadata !4509, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.label(metadata !4565), !dbg !4730
  %219 = icmp sgt i32 %76, -1, !dbg !4731
  br i1 %219, label %222, label %220, !dbg !4732

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4733
  br label %245, !dbg !4732

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4735
  %224 = sub i32 %22, %223, !dbg !4735
  call void @llvm.dbg.value(metadata i32 %224, metadata !4524, metadata !DIExpression()), !dbg !4736
  %225 = load i24, i24* %15, align 8, !dbg !4737
  %226 = and i24 %225, -65, !dbg !4737
  store i24 %226, i24* %15, align 8, !dbg !4737
  %227 = icmp ugt i32 %76, %224, !dbg !4738
  br i1 %227, label %228, label %245, !dbg !4740

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4741
  store i32 %229, i32* %16, align 4, !dbg !4743
  br label %245, !dbg !4744

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4745
  %232 = icmp eq i8* %231, null, !dbg !4747
  br i1 %232, label %245, label %233, !dbg !4748

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4749
  %235 = zext i32 %234 to i64, !dbg !4749
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4751
  call void @llvm.dbg.value(metadata i8* %236, metadata !4507, metadata !DIExpression()), !dbg !4580
  %237 = load i24, i24* %15, align 8, !dbg !4752
  %238 = or i24 %237, 1048576, !dbg !4752
  store i24 %238, i24* %15, align 8, !dbg !4752
  store i8 120, i8* %21, align 1, !dbg !4753
  br label %216, !dbg !4754

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4755
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4758
  br label %363, !dbg !4759

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4760
  call void @llvm.dbg.value(metadata i32 %242, metadata !4522, metadata !DIExpression()), !dbg !4706
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4761
  call void @llvm.dbg.value(metadata i32 -1, metadata !4506, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 %29, metadata !4446, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8* %192, metadata !4507, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8* %243, metadata !4508, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8 0, metadata !4509, metadata !DIExpression()), !dbg !4580
  %244 = icmp eq i8* %192, null, !dbg !4762
  br i1 %244, label %363, label %245, !dbg !4764, !llvm.loop !4576

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4733
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4580
  call void @llvm.dbg.value(metadata i32 0, metadata !4528, metadata !DIExpression()), !dbg !4580
  %250 = zext i8 %249 to i32, !dbg !4765
  %251 = icmp eq i8 %249, 0, !dbg !4767
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4580
  call void @llvm.dbg.value(metadata i32 undef, metadata !4527, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4580
  call void @llvm.dbg.value(metadata i32 undef, metadata !4527, metadata !DIExpression()), !dbg !4580
  %252 = icmp sgt i32 %58, 0, !dbg !4768
  br i1 %252, label %253, label %302, !dbg !4769

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4733
  %255 = icmp eq i24 %254, 0, !dbg !4733
  %256 = ptrtoint i8* %248 to i32, !dbg !4770
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4580
  %257 = ptrtoint i8* %247 to i32, !dbg !4770
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4580
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4580
  %258 = xor i1 %251, true, !dbg !4771
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4580
  %259 = sext i1 %258 to i32, !dbg !4771
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4580
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4580
  %260 = lshr i24 %246, 19, !dbg !4772
  %261 = and i24 %260, 1, !dbg !4772
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4772
  %263 = zext i24 %262 to i32, !dbg !4772
  %264 = add i32 %257, %259, !dbg !4772
  %265 = add i32 %256, %263, !dbg !4772
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4580
  %266 = and i24 %246, 4194304, !dbg !4773
  %267 = icmp eq i24 %266, 0, !dbg !4773
  %268 = load i32, i32* %16, align 4, !dbg !4775
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4580
  call void @llvm.dbg.value(metadata i32 undef, metadata !4527, metadata !DIExpression()), !dbg !4580
  %269 = load i32, i32* %17, align 8, !dbg !4776
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4776
  call void @llvm.dbg.value(metadata i32 undef, metadata !4527, metadata !DIExpression()), !dbg !4580
  %271 = add i32 %264, %58, !dbg !4776
  %272 = add i32 %265, %268, !dbg !4776
  %273 = add i32 %272, %270, !dbg !4777
  %274 = sub i32 %271, %273, !dbg !4777
  call void @llvm.dbg.value(metadata i32 %274, metadata !4505, metadata !DIExpression()), !dbg !4580
  %275 = and i24 %246, 4, !dbg !4778
  %276 = icmp eq i24 %275, 0, !dbg !4778
  br i1 %276, label %277, label %302, !dbg !4779

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4529, metadata !DIExpression()), !dbg !4780
  %278 = and i24 %246, 64, !dbg !4781
  %279 = icmp eq i24 %278, 0, !dbg !4781
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4782
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4782
  %282 = select i1 %279, i32 32, i32 48, !dbg !4782
  br i1 %280, label %287, label %283, !dbg !4782

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4783
  call void @llvm.dbg.value(metadata i32 %284, metadata !4534, metadata !DIExpression()), !dbg !4784
  %285 = icmp slt i32 %284, 0, !dbg !4785
  %286 = add i32 %29, 1, !dbg !4783
  call void @llvm.dbg.value(metadata i32 undef, metadata !4446, metadata !DIExpression()), !dbg !4566
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4580
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4570
  call void @llvm.dbg.value(metadata i32 %290, metadata !4446, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8 undef, metadata !4529, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata i8 %288, metadata !4509, metadata !DIExpression()), !dbg !4580
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4787
  %292 = add i32 %291, -1, !dbg !4787
  br label %293, !dbg !4787

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4788
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4570
  call void @llvm.dbg.value(metadata i32 %295, metadata !4446, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %294, metadata !4505, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 %294, metadata !4505, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4580
  %296 = icmp sgt i32 %294, 0, !dbg !4789
  br i1 %296, label %297, label %302, !dbg !4787

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4790
  call void @llvm.dbg.value(metadata i32 %298, metadata !4505, metadata !DIExpression()), !dbg !4580
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4791
  call void @llvm.dbg.value(metadata i32 %299, metadata !4540, metadata !DIExpression()), !dbg !4792
  %300 = icmp slt i32 %299, 0, !dbg !4793
  %301 = add i32 %295, 1, !dbg !4791
  call void @llvm.dbg.value(metadata i32 undef, metadata !4446, metadata !DIExpression()), !dbg !4566
  br i1 %300, label %361, label %293, !llvm.loop !4795

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4580
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4580
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4570
  call void @llvm.dbg.value(metadata i32 %305, metadata !4446, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %304, metadata !4505, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i8 %303, metadata !4509, metadata !DIExpression()), !dbg !4580
  %306 = icmp eq i8 %303, 0, !dbg !4797
  br i1 %306, label %312, label %307, !dbg !4798

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4799
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4800
  call void @llvm.dbg.value(metadata i32 %309, metadata !4543, metadata !DIExpression()), !dbg !4801
  %310 = icmp slt i32 %309, 0, !dbg !4802
  %311 = add i32 %305, 1, !dbg !4800
  call void @llvm.dbg.value(metadata i32 undef, metadata !4446, metadata !DIExpression()), !dbg !4566
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4570
  call void @llvm.dbg.value(metadata i32 %313, metadata !4446, metadata !DIExpression()), !dbg !4566
  %314 = lshr i24 %246, 20, !dbg !4804
  %315 = lshr i24 %246, 19, !dbg !4805
  %316 = or i24 %314, %315, !dbg !4806
  %317 = and i24 %316, 1, !dbg !4806
  %318 = icmp eq i24 %317, 0, !dbg !4806
  br i1 %318, label %323, label %319, !dbg !4807

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4808
  call void @llvm.dbg.value(metadata i32 %320, metadata !4547, metadata !DIExpression()), !dbg !4809
  %321 = icmp slt i32 %320, 0, !dbg !4810
  %322 = add i32 %313, 1, !dbg !4808
  call void @llvm.dbg.value(metadata i32 undef, metadata !4446, metadata !DIExpression()), !dbg !4566
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4570
  call void @llvm.dbg.value(metadata i32 %324, metadata !4446, metadata !DIExpression()), !dbg !4566
  %325 = and i24 %246, 1048576, !dbg !4812
  %326 = icmp eq i24 %325, 0, !dbg !4812
  br i1 %326, label %333, label %327, !dbg !4813

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4814
  %329 = zext i8 %328 to i32, !dbg !4814
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4814
  call void @llvm.dbg.value(metadata i32 %330, metadata !4553, metadata !DIExpression()), !dbg !4815
  %331 = icmp slt i32 %330, 0, !dbg !4816
  %332 = add i32 %324, 1, !dbg !4814
  call void @llvm.dbg.value(metadata i32 undef, metadata !4446, metadata !DIExpression()), !dbg !4566
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4570
  call void @llvm.dbg.value(metadata i32 %334, metadata !4446, metadata !DIExpression()), !dbg !4566
  %335 = load i32, i32* %16, align 4, !dbg !4818
  call void @llvm.dbg.value(metadata i32 %335, metadata !4528, metadata !DIExpression()), !dbg !4580
  br label %336, !dbg !4819

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4820
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4570
  call void @llvm.dbg.value(metadata i32 %338, metadata !4446, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %337, metadata !4528, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4580
  %339 = icmp sgt i32 %337, 0, !dbg !4821
  br i1 %339, label %340, label %345, !dbg !4819

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4822
  call void @llvm.dbg.value(metadata i32 %341, metadata !4528, metadata !DIExpression()), !dbg !4580
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4823
  call void @llvm.dbg.value(metadata i32 %342, metadata !4557, metadata !DIExpression()), !dbg !4824
  %343 = icmp slt i32 %342, 0, !dbg !4825
  %344 = add i32 %338, 1, !dbg !4823
  call void @llvm.dbg.value(metadata i32 undef, metadata !4446, metadata !DIExpression()), !dbg !4566
  br i1 %343, label %361, label %336, !llvm.loop !4827

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4829
  call void @llvm.dbg.value(metadata i32 %346, metadata !4560, metadata !DIExpression()), !dbg !4830
  %347 = icmp slt i32 %346, 0, !dbg !4831
  call void @llvm.dbg.value(metadata i32 undef, metadata !4446, metadata !DIExpression()), !dbg !4566
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4829
  call void @llvm.dbg.value(metadata i32 %349, metadata !4446, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %304, metadata !4505, metadata !DIExpression()), !dbg !4580
  %350 = icmp sgt i32 %304, 0, !dbg !4833
  br i1 %350, label %351, label %363, !dbg !4834

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4834
  %353 = add i32 %352, %338, !dbg !4834
  br label %354, !dbg !4834

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4446, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %355, metadata !4505, metadata !DIExpression()), !dbg !4580
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4835
  call void @llvm.dbg.value(metadata i32 %356, metadata !4562, metadata !DIExpression()), !dbg !4836
  %357 = icmp slt i32 %356, 0, !dbg !4837
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4839
  call void @llvm.dbg.value(metadata i32 undef, metadata !4446, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %359, metadata !4505, metadata !DIExpression()), !dbg !4580
  %360 = icmp sgt i32 %355, 1, !dbg !4833
  br i1 %360, label %354, label %363, !dbg !4834, !llvm.loop !4840

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4446, metadata !DIExpression()), !dbg !4566
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4577
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4570
  call void @llvm.dbg.value(metadata i32 %364, metadata !4446, metadata !DIExpression()), !dbg !4566
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4577
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4566
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4842
  ret i32 %366, !dbg !4842
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4843 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4847, metadata !DIExpression()), !dbg !4849
  call void @llvm.dbg.value(metadata i8* %1, metadata !4848, metadata !DIExpression()), !dbg !4849
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4850
  store i24 0, i24* %3, align 4, !dbg !4850
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4850
  store i8 0, i8* %4, align 1, !dbg !4850
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4850
  store i32 0, i32* %5, align 4, !dbg !4850
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4850
  store i32 0, i32* %6, align 4, !dbg !4850
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4851
  call void @llvm.dbg.value(metadata i8* %7, metadata !4848, metadata !DIExpression()), !dbg !4849
  %8 = load i8, i8* %7, align 1, !dbg !4852
  %9 = icmp eq i8 %8, 37, !dbg !4854
  br i1 %9, label %10, label %12, !dbg !4855

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4856
  call void @llvm.dbg.value(metadata i8* %11, metadata !4848, metadata !DIExpression()), !dbg !4849
  store i8 37, i8* %4, align 1, !dbg !4858
  br label %18, !dbg !4859

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !4860
  call void @llvm.dbg.value(metadata i8* %13, metadata !4848, metadata !DIExpression()), !dbg !4849
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !4861
  call void @llvm.dbg.value(metadata i8* %14, metadata !4848, metadata !DIExpression()), !dbg !4849
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !4862
  call void @llvm.dbg.value(metadata i8* %15, metadata !4848, metadata !DIExpression()), !dbg !4849
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !4863
  call void @llvm.dbg.value(metadata i8* %16, metadata !4848, metadata !DIExpression()), !dbg !4849
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !4864
  call void @llvm.dbg.value(metadata i8* %17, metadata !4848, metadata !DIExpression()), !dbg !4849
  br label %18, !dbg !4865

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4849
  ret i8* %19, !dbg !4866
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4867 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4871, metadata !DIExpression()), !dbg !4878
  call void @llvm.dbg.value(metadata i8* %1, metadata !4872, metadata !DIExpression()), !dbg !4878
  call void @llvm.dbg.value(metadata i8* %2, metadata !4873, metadata !DIExpression()), !dbg !4878
  call void @llvm.dbg.value(metadata i8* %3, metadata !4874, metadata !DIExpression()), !dbg !4878
  call void @llvm.dbg.value(metadata i32 0, metadata !4875, metadata !DIExpression()), !dbg !4878
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4879

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4880
  call void @llvm.dbg.value(metadata i32 %9, metadata !4875, metadata !DIExpression()), !dbg !4878
  call void @llvm.dbg.value(metadata i8* %8, metadata !4873, metadata !DIExpression()), !dbg !4878
  %10 = icmp ult i8* %8, %3, !dbg !4881
  br i1 %10, label %11, label %13, !dbg !4882

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4883
  br label %17, !dbg !4882

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4884

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4885
  %16 = icmp eq i8 %15, 0, !dbg !4884
  br i1 %16, label %24, label %17, !dbg !4879

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4883
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4886
  call void @llvm.dbg.value(metadata i8* %19, metadata !4873, metadata !DIExpression()), !dbg !4878
  %20 = zext i8 %18 to i32, !dbg !4887
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4888
  call void @llvm.dbg.value(metadata i32 %21, metadata !4876, metadata !DIExpression()), !dbg !4889
  %22 = icmp slt i32 %21, 0, !dbg !4890
  %23 = add i32 %9, 1, !dbg !4892
  call void @llvm.dbg.value(metadata i32 undef, metadata !4875, metadata !DIExpression()), !dbg !4878
  br i1 %22, label %24, label %7, !llvm.loop !4893

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4878
  ret i32 %25, !dbg !4895
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !4896 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4900, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4901, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.value(metadata i8* %2, metadata !4902, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.value(metadata i8* %3, metadata !4903, metadata !DIExpression()), !dbg !4910
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4911
  %6 = load i8, i8* %5, align 1, !dbg !4911
  %7 = zext i8 %6 to i32, !dbg !4912
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !4913
  %9 = icmp eq i32 %8, 0, !dbg !4913
  call void @llvm.dbg.value(metadata i1 %9, metadata !4904, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4910
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !4914
  call void @llvm.dbg.value(metadata i32 %10, metadata !4905, metadata !DIExpression()), !dbg !4910
  %11 = ptrtoint i8* %3 to i32, !dbg !4915
  %12 = ptrtoint i8* %2 to i32, !dbg !4915
  %13 = sub i32 %11, %12, !dbg !4915
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4916
  call void @llvm.dbg.value(metadata i8* %14, metadata !4907, metadata !DIExpression()), !dbg !4910
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4917

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4910
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4900, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.value(metadata i8* %18, metadata !4907, metadata !DIExpression()), !dbg !4910
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4918
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4919
  call void @llvm.dbg.value(metadata i32 %25, metadata !4908, metadata !DIExpression()), !dbg !4920
  %26 = icmp ult i32 %25, 10, !dbg !4921
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4922
  %28 = add i32 %27, %25, !dbg !4920
  %29 = trunc i32 %28 to i8, !dbg !4922
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4923
  call void @llvm.dbg.value(metadata i8* %30, metadata !4907, metadata !DIExpression()), !dbg !4910
  store i8 %29, i8* %30, align 1, !dbg !4924
  call void @llvm.dbg.value(metadata i64 %22, metadata !4900, metadata !DIExpression()), !dbg !4910
  %31 = icmp uge i64 %19, %15, !dbg !4925
  %32 = icmp ugt i8* %30, %2, !dbg !4926
  %33 = and i1 %31, %32, !dbg !4926
  br i1 %33, label %17, label %34, !dbg !4927, !llvm.loop !4928

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4930
  %36 = load i24, i24* %35, align 4, !dbg !4930
  %37 = and i24 %36, 32, !dbg !4930
  %38 = icmp eq i24 %37, 0, !dbg !4930
  br i1 %38, label %44, label %39, !dbg !4932

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4933

40:                                               ; preds = %39
  br label %41, !dbg !4935

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4939
  store i24 %43, i24* %35, align 4, !dbg !4939
  br label %44, !dbg !4940

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !4941 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4947, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.value(metadata i8* %1, metadata !4948, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.value(metadata i32 %2, metadata !4949, metadata !DIExpression()), !dbg !4950
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4951
  %5 = load i24, i24* %4, align 4, !dbg !4951
  %6 = lshr i24 %5, 11, !dbg !4951
  %7 = and i24 %6, 15, !dbg !4951
  %8 = zext i24 %7 to i32, !dbg !4951
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4952

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4953
  store i32 %2, i32* %10, align 4, !dbg !4955
  br label %28, !dbg !4956

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4957
  store i8 %12, i8* %1, align 1, !dbg !4958
  br label %28, !dbg !4959

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4960
  %15 = bitcast i8* %1 to i16*, !dbg !4961
  store i16 %14, i16* %15, align 2, !dbg !4962
  br label %28, !dbg !4963

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4964
  store i32 %2, i32* %17, align 4, !dbg !4965
  br label %28, !dbg !4966

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4967
  %20 = bitcast i8* %1 to i64*, !dbg !4968
  store i64 %19, i64* %20, align 8, !dbg !4969
  br label %28, !dbg !4970

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4971
  %23 = bitcast i8* %1 to i64*, !dbg !4972
  store i64 %22, i64* %23, align 8, !dbg !4973
  br label %28, !dbg !4974

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4975
  store i32 %2, i32* %25, align 4, !dbg !4976
  br label %28, !dbg !4977

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4978
  store i32 %2, i32* %27, align 4, !dbg !4979
  br label %28, !dbg !4980

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4981
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #2 !dbg !4982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4985, metadata !DIExpression()), !dbg !4986
  %2 = add i32 %0, -65, !dbg !4987
  %3 = icmp ult i32 %2, 26, !dbg !4988
  %4 = zext i1 %3 to i32, !dbg !4988
  ret i32 %4, !dbg !4989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #2 !dbg !4990 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4994, metadata !DIExpression()), !dbg !4995
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4996

2:                                                ; preds = %1
  br label %4, !dbg !4997

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4999

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5000
  ret i32 %5, !dbg !5001
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5002 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5004, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.value(metadata i8* %1, metadata !5005, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.value(metadata i8 1, metadata !5006, metadata !DIExpression()), !dbg !5007
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5008

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5006, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.value(metadata i8* %5, metadata !5005, metadata !DIExpression()), !dbg !5007
  %6 = load i8, i8* %5, align 1, !dbg !5009
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5011

7:                                                ; preds = %4
  br label %11, !dbg !5012

8:                                                ; preds = %4
  br label %11, !dbg !5014

9:                                                ; preds = %4
  br label %11, !dbg !5015

10:                                               ; preds = %4
  br label %11, !dbg !5016

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5017
  %14 = or i24 %13, %12, !dbg !5017
  store i24 %14, i24* %3, align 4, !dbg !5017
  call void @llvm.dbg.value(metadata i8 poison, metadata !5006, metadata !DIExpression()), !dbg !5007
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5005, metadata !DIExpression()), !dbg !5007
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5006, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.value(metadata i8* %15, metadata !5005, metadata !DIExpression()), !dbg !5007
  %17 = load i24, i24* %3, align 4, !dbg !5018
  %18 = and i24 %17, 68, !dbg !5020
  %19 = icmp eq i24 %18, 68, !dbg !5020
  br i1 %19, label %20, label %22, !dbg !5020

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5021
  store i24 %21, i24* %3, align 4, !dbg !5021
  br label %22, !dbg !5023

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5024
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5025 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5027, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.value(metadata i8* %1, metadata !5028, metadata !DIExpression()), !dbg !5031
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5032
  %5 = load i24, i24* %4, align 4, !dbg !5033
  %6 = or i24 %5, 128, !dbg !5033
  store i24 %6, i24* %4, align 4, !dbg !5033
  call void @llvm.dbg.value(metadata i8* %1, metadata !5028, metadata !DIExpression()), !dbg !5031
  %7 = load i8, i8* %1, align 1, !dbg !5034
  %8 = icmp eq i8 %7, 42, !dbg !5036
  br i1 %8, label %9, label %12, !dbg !5037

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5038
  store i24 %10, i24* %4, align 4, !dbg !5038
  call void @llvm.dbg.value(metadata i8* %1, metadata !5028, metadata !DIExpression()), !dbg !5031
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5040
  call void @llvm.dbg.value(metadata i8* %11, metadata !5028, metadata !DIExpression()), !dbg !5031
  store i8* %11, i8** %3, align 4, !dbg !5040
  br label %29, !dbg !5041

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5029, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.value(metadata i8** %3, metadata !5028, metadata !DIExpression(DW_OP_deref)), !dbg !5031
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5042
  call void @llvm.dbg.value(metadata i32 %13, metadata !5030, metadata !DIExpression()), !dbg !5031
  %14 = load i8*, i8** %3, align 4, !dbg !5043
  call void @llvm.dbg.value(metadata i8* %14, metadata !5028, metadata !DIExpression()), !dbg !5031
  %15 = icmp eq i8* %14, %1, !dbg !5045
  br i1 %15, label %29, label %16, !dbg !5046

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5047
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5049
  store i32 %13, i32* %18, align 4, !dbg !5050
  %19 = lshr i32 %13, 31, !dbg !5051
  %20 = lshr i24 %17, 1, !dbg !5052
  %21 = and i24 %20, 1, !dbg !5052
  %22 = zext i24 %21 to i32, !dbg !5052
  %23 = or i32 %19, %22, !dbg !5052
  %24 = trunc i32 %23 to i24, !dbg !5052
  %25 = shl nuw nsw i24 %24, 1, !dbg !5052
  %26 = and i24 %17, -131, !dbg !5052
  %27 = or i24 %26, 128, !dbg !5052
  %28 = or i24 %25, %27, !dbg !5052
  store i24 %28, i24* %4, align 4, !dbg !5052
  br label %29, !dbg !5053

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5031
  ret i8* %30, !dbg !5054
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5055 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5057, metadata !DIExpression()), !dbg !5060
  call void @llvm.dbg.value(metadata i8* %1, metadata !5058, metadata !DIExpression()), !dbg !5060
  %4 = load i8, i8* %1, align 1, !dbg !5061
  %5 = icmp eq i8 %4, 46, !dbg !5062
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5063
  %7 = load i24, i24* %6, align 4, !dbg !5064
  %8 = select i1 %5, i24 512, i24 0, !dbg !5064
  %9 = and i24 %7, -513, !dbg !5064
  %10 = or i24 %9, %8, !dbg !5064
  store i24 %10, i24* %6, align 4, !dbg !5064
  br i1 %5, label %11, label %32, !dbg !5065

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5058, metadata !DIExpression()), !dbg !5060
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5066
  call void @llvm.dbg.value(metadata i8* %12, metadata !5058, metadata !DIExpression()), !dbg !5060
  store i8* %12, i8** %3, align 4, !dbg !5066
  %13 = load i8, i8* %12, align 1, !dbg !5067
  %14 = icmp eq i8 %13, 42, !dbg !5069
  br i1 %14, label %15, label %18, !dbg !5070

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5071
  store i24 %16, i24* %6, align 4, !dbg !5071
  call void @llvm.dbg.value(metadata i8* %12, metadata !5058, metadata !DIExpression()), !dbg !5060
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5073
  call void @llvm.dbg.value(metadata i8* %17, metadata !5058, metadata !DIExpression()), !dbg !5060
  store i8* %17, i8** %3, align 4, !dbg !5073
  br label %32, !dbg !5074

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5058, metadata !DIExpression(DW_OP_deref)), !dbg !5060
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5075
  call void @llvm.dbg.value(metadata i32 %19, metadata !5059, metadata !DIExpression()), !dbg !5060
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5076
  store i32 %19, i32* %20, align 4, !dbg !5077
  %21 = lshr i32 %19, 31, !dbg !5078
  %22 = load i24, i24* %6, align 4, !dbg !5079
  %23 = lshr i24 %22, 1, !dbg !5079
  %24 = and i24 %23, 1, !dbg !5079
  %25 = zext i24 %24 to i32, !dbg !5079
  %26 = or i32 %21, %25, !dbg !5079
  %27 = trunc i32 %26 to i24, !dbg !5079
  %28 = shl nuw nsw i24 %27, 1, !dbg !5079
  %29 = and i24 %22, -3, !dbg !5079
  %30 = or i24 %28, %29, !dbg !5079
  store i24 %30, i24* %6, align 4, !dbg !5079
  %31 = load i8*, i8** %3, align 4, !dbg !5080
  call void @llvm.dbg.value(metadata i8* %31, metadata !5058, metadata !DIExpression()), !dbg !5060
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5060
  ret i8* %33, !dbg !5081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5082 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5084, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i8* %1, metadata !5085, metadata !DIExpression()), !dbg !5086
  %3 = load i8, i8* %1, align 1, !dbg !5087
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5088

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5089
  call void @llvm.dbg.value(metadata i8* %5, metadata !5085, metadata !DIExpression()), !dbg !5086
  %6 = load i8, i8* %5, align 1, !dbg !5092
  %7 = icmp eq i8 %6, 104, !dbg !5093
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5094
  %9 = load i24, i24* %8, align 4, !dbg !5094
  %10 = and i24 %9, -30721, !dbg !5094
  br i1 %7, label %11, label %14, !dbg !5095

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5096
  store i24 %12, i24* %8, align 4, !dbg !5096
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5098
  call void @llvm.dbg.value(metadata i8* %13, metadata !5085, metadata !DIExpression()), !dbg !5086
  br label %56, !dbg !5099

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5100
  store i24 %15, i24* %8, align 4, !dbg !5100
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5102
  call void @llvm.dbg.value(metadata i8* %17, metadata !5085, metadata !DIExpression()), !dbg !5086
  %18 = load i8, i8* %17, align 1, !dbg !5104
  %19 = icmp eq i8 %18, 108, !dbg !5105
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5106
  %21 = load i24, i24* %20, align 4, !dbg !5106
  %22 = and i24 %21, -30721, !dbg !5106
  br i1 %19, label %23, label %26, !dbg !5107

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5108
  store i24 %24, i24* %20, align 4, !dbg !5108
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5110
  call void @llvm.dbg.value(metadata i8* %25, metadata !5085, metadata !DIExpression()), !dbg !5086
  br label %56, !dbg !5111

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5112
  store i24 %27, i24* %20, align 4, !dbg !5112
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5114
  %30 = load i24, i24* %29, align 4, !dbg !5115
  %31 = and i24 %30, -30721, !dbg !5115
  %32 = or i24 %31, 10240, !dbg !5115
  store i24 %32, i24* %29, align 4, !dbg !5115
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5116
  call void @llvm.dbg.value(metadata i8* %33, metadata !5085, metadata !DIExpression()), !dbg !5086
  br label %56, !dbg !5117

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5118
  %36 = load i24, i24* %35, align 4, !dbg !5119
  %37 = and i24 %36, -30721, !dbg !5119
  %38 = or i24 %37, 12288, !dbg !5119
  store i24 %38, i24* %35, align 4, !dbg !5119
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5120
  call void @llvm.dbg.value(metadata i8* %39, metadata !5085, metadata !DIExpression()), !dbg !5086
  br label %56, !dbg !5121

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5122
  %42 = load i24, i24* %41, align 4, !dbg !5123
  %43 = and i24 %42, -30721, !dbg !5123
  %44 = or i24 %43, 14336, !dbg !5123
  store i24 %44, i24* %41, align 4, !dbg !5123
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5124
  call void @llvm.dbg.value(metadata i8* %45, metadata !5085, metadata !DIExpression()), !dbg !5086
  br label %56, !dbg !5125

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5126
  %48 = load i24, i24* %47, align 4, !dbg !5127
  %49 = and i24 %48, -30723, !dbg !5127
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5128
  call void @llvm.dbg.value(metadata i8* %50, metadata !5085, metadata !DIExpression()), !dbg !5086
  %51 = or i24 %49, 16386, !dbg !5129
  store i24 %51, i24* %47, align 4, !dbg !5129
  br label %56, !dbg !5130

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5131
  %54 = load i24, i24* %53, align 4, !dbg !5132
  %55 = and i24 %54, -30721, !dbg !5132
  store i24 %55, i24* %53, align 4, !dbg !5132
  br label %56, !dbg !5133

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5085, metadata !DIExpression()), !dbg !5086
  ret i8* %57, !dbg !5134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5135 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5137, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.value(metadata i8* %1, metadata !5138, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.value(metadata i8 0, metadata !5139, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.value(metadata i8* %1, metadata !5138, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5142
  %3 = load i8, i8* %1, align 1, !dbg !5143
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5144
  store i8 %3, i8* %4, align 1, !dbg !5145
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5146

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5147

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5148
  %9 = load i24, i24* %8, align 4, !dbg !5148
  %10 = and i24 %9, -458753, !dbg !5148
  %11 = or i24 %10, %7, !dbg !5148
  call void @llvm.dbg.label(metadata !5140), !dbg !5149
  %12 = and i24 %9, 30720, !dbg !5150
  %13 = icmp eq i24 %12, 16384, !dbg !5150
  %14 = zext i1 %13 to i24, !dbg !5152
  %15 = or i24 %11, %14, !dbg !5152
  %16 = icmp eq i8 %3, 99, !dbg !5153
  br i1 %16, label %17, label %43, !dbg !5155

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5156
  %19 = icmp ne i24 %18, 0, !dbg !5156
  call void @llvm.dbg.value(metadata i1 %19, metadata !5139, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5142
  br label %43, !dbg !5158

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5159
  %22 = load i24, i24* %21, align 4, !dbg !5160
  %23 = and i24 %22, -458753, !dbg !5160
  %24 = or i24 %23, 262144, !dbg !5160
  call void @llvm.dbg.value(metadata i8 1, metadata !5139, metadata !DIExpression()), !dbg !5142
  br label %43, !dbg !5161

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5164
  %27 = load i24, i24* %26, align 4, !dbg !5165
  %28 = and i24 %27, -458753, !dbg !5165
  %29 = or i24 %28, 196608, !dbg !5165
  %30 = and i24 %27, 30720, !dbg !5166
  %31 = icmp eq i24 %30, 16384, !dbg !5166
  br label %43, !dbg !5168

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5169
  %34 = load i24, i24* %33, align 4, !dbg !5170
  %35 = and i24 %34, -458753, !dbg !5170
  %36 = or i24 %35, 196608, !dbg !5170
  %37 = and i24 %34, 30720, !dbg !5171
  %38 = icmp ne i24 %37, 0, !dbg !5171
  br label %43, !dbg !5173

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5174
  %41 = load i24, i24* %40, align 4, !dbg !5175
  %42 = or i24 %41, 1, !dbg !5175
  br label %43, !dbg !5176

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5177
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5178
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5179
  call void @llvm.dbg.value(metadata i8* %48, metadata !5138, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.value(metadata i8 poison, metadata !5139, metadata !DIExpression()), !dbg !5142
  %49 = lshr i24 %44, 1, !dbg !5177
  %50 = and i24 %49, 1, !dbg !5177
  %51 = zext i24 %50 to i32, !dbg !5177
  %52 = or i32 %51, %47, !dbg !5177
  %53 = trunc i32 %52 to i24, !dbg !5177
  %54 = shl nuw nsw i24 %53, 1, !dbg !5177
  %55 = and i24 %44, -3, !dbg !5177
  %56 = or i24 %54, %55, !dbg !5177
  store i24 %56, i24* %46, align 4, !dbg !5177
  ret i8* %48, !dbg !5180
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5181 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5185, metadata !DIExpression()), !dbg !5188
  %2 = load i8*, i8** %0, align 4, !dbg !5189
  call void @llvm.dbg.value(metadata i8* %2, metadata !5186, metadata !DIExpression()), !dbg !5188
  call void @llvm.dbg.value(metadata i32 0, metadata !5187, metadata !DIExpression()), !dbg !5188
  %3 = load i8, i8* %2, align 1, !dbg !5190
  %4 = zext i8 %3 to i32, !dbg !5191
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5192
  %6 = icmp eq i32 %5, 0, !dbg !5193
  br i1 %6, label %19, label %7, !dbg !5193

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5187, metadata !DIExpression()), !dbg !5188
  call void @llvm.dbg.value(metadata i8* %10, metadata !5186, metadata !DIExpression()), !dbg !5188
  %11 = mul i32 %9, 10, !dbg !5194
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5196
  call void @llvm.dbg.value(metadata i8* %12, metadata !5186, metadata !DIExpression()), !dbg !5188
  %13 = add i32 %11, -48, !dbg !5197
  %14 = add i32 %13, %8, !dbg !5198
  call void @llvm.dbg.value(metadata i32 %14, metadata !5187, metadata !DIExpression()), !dbg !5188
  %15 = load i8, i8* %12, align 1, !dbg !5190
  %16 = zext i8 %15 to i32, !dbg !5191
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5192
  %18 = icmp eq i32 %17, 0, !dbg !5193
  br i1 %18, label %19, label %7, !dbg !5193, !llvm.loop !5199

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5188
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5188
  store i8* %20, i8** %0, align 4, !dbg !5201
  ret i32 %21, !dbg !5202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #2 !dbg !5203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5205, metadata !DIExpression()), !dbg !5206
  %2 = add i32 %0, -48, !dbg !5207
  %3 = icmp ult i32 %2, 10, !dbg !5208
  %4 = zext i1 %3 to i32, !dbg !5208
  ret i32 %4, !dbg !5209
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5210 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5215, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i32 %1, metadata !5216, metadata !DIExpression()), !dbg !5217
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5218, !srcloc !5220
  ret void, !dbg !5221
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5222 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5224, metadata !DIExpression()), !dbg !5232
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5233
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5233
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5225, metadata !DIExpression()), !dbg !5234
  call void @llvm.va_start(i8* nonnull %3), !dbg !5235
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5236
  %5 = load i32, i32* %4, align 4, !dbg !5236
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5236
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5236
  call void @llvm.va_end(i8* nonnull %3), !dbg !5237
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5238
  ret void, !dbg !5238
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5239 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5241, !srcloc !5242
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5243, !srcloc !5244
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5245, !srcloc !5246
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5247, !srcloc !5248
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5249, !srcloc !5250
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5251, !srcloc !5252
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5253, !srcloc !5254
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5255, !srcloc !5256
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5257, !srcloc !5258
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5259, !srcloc !5260
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5261, !srcloc !5262
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5263, !srcloc !5264
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5265, !srcloc !5266
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5267, !srcloc !5268
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5269, !srcloc !5270
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5271, !srcloc !5272
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5273, !srcloc !5274
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5275, !srcloc !5276
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5277, !srcloc !5278
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5279, !srcloc !5280
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5281, !srcloc !5282
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5283, !srcloc !5284
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5285, !srcloc !5286
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5287, !srcloc !5288
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5289, !srcloc !5290
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5291, !srcloc !5292
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5293, !srcloc !5294
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5295, !srcloc !5296
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5297, !srcloc !5298
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5299, !srcloc !5300
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5301, !srcloc !5302
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5303, !srcloc !5304
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5305, !srcloc !5306
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5307, !srcloc !5308
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5309, !srcloc !5310
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #23, !dbg !5311, !srcloc !5312
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !5313, !srcloc !5314
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #23, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #23, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #23, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #23, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE\0A\09.equ\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,1\0A\09.type\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST\0A\09.equ\09CONFIG_ZTEST,1\0A\09.type\09CONFIG_ZTEST,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_NEW_API\0A\09.equ\09CONFIG_ZTEST_NEW_API,1\0A\09.type\09CONFIG_ZTEST_NEW_API,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_STACK_SIZE\0A\09.equ\09CONFIG_ZTEST_STACK_SIZE,1024\0A\09.type\09CONFIG_ZTEST_STACK_SIZE,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_TEST_DELAY_MS\0A\09.equ\09CONFIG_ZTEST_TEST_DELAY_MS,0\0A\09.type\09CONFIG_ZTEST_TEST_DELAY_MS,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_CPU_HOLD_TIME_MS\0A\09.equ\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,3000\0A\09.type\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ZTEST_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ZTEST_ASSERT_VERBOSE,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_THREAD_PRIORITY\0A\09.equ\09CONFIG_ZTEST_THREAD_PRIORITY,-1\0A\09.type\09CONFIG_ZTEST_THREAD_PRIORITY,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERIFY_RUN_ALL\0A\09.equ\09CONFIG_ZTEST_VERIFY_RUN_ALL,1\0A\09.type\09CONFIG_ZTEST_VERIFY_RUN_ALL,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_OUTPUT\0A\09.equ\09CONFIG_ZTEST_VERBOSE_OUTPUT,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_OUTPUT,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_SUMMARY\0A\09.equ\09CONFIG_ZTEST_VERBOSE_SUMMARY,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_SUMMARY,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_FAIL_ON_ASSUME\0A\09.equ\09CONFIG_ZTEST_FAIL_ON_ASSUME,1\0A\09.type\09CONFIG_ZTEST_FAIL_ON_ASSUME,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST\0A\09.equ\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,1\0A\09.type\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_SYMBOLS\0A\09.equ\09CONFIG_OUTPUT_SYMBOLS,1\0A\09.type\09CONFIG_OUTPUT_SYMBOLS,%object", ""() #23, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5923, !srcloc !5924
  ret void, !dbg !5925
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5926 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5928, metadata !DIExpression()), !dbg !5930
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !5931
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !5932
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5933, !srcloc !5942
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5933
  call void @llvm.dbg.value(metadata i32 %3, metadata !5939, metadata !DIExpression()) #23, !dbg !5943
  call void @llvm.dbg.value(metadata i32 undef, metadata !5940, metadata !DIExpression()) #23, !dbg !5943
  call void @llvm.dbg.value(metadata i32 %3, metadata !5929, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.value(metadata i32 %3, metadata !5944, metadata !DIExpression()) #23, !dbg !5949
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5951, !srcloc !5952
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5953
  ret i32 0, !dbg !5954
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !5955 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5957
  %2 = or i32 %1, 512, !dbg !5957
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5957
  ret void, !dbg !5958
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !5959 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5960
  %2 = or i32 %1, 1024, !dbg !5960
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5960
  ret void, !dbg !5961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #2 !dbg !5962 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5964, metadata !DIExpression()), !dbg !5965
  ret i32 0, !dbg !5966
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5967 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5970, metadata !DIExpression()), !dbg !5978
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5979
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5979
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5971, metadata !DIExpression()), !dbg !5980
  call void @llvm.va_start(i8* nonnull %3), !dbg !5981
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5982
  %5 = load i32, i32* %4, align 4, !dbg !5982
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5982
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5982
  call void @llvm.va_end(i8* nonnull %3), !dbg !5983
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5984
  ret void, !dbg !5984
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5985 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5990, metadata !DIExpression()), !dbg !5991
  call void @llvm.dbg.value(metadata i8* %0, metadata !5989, metadata !DIExpression()), !dbg !5991
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !5992
  ret void, !dbg !5993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5994 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5998, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata i8* %1, metadata !5999, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata i32 %2, metadata !6000, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata i8* %1, metadata !6001, metadata !DIExpression()), !dbg !6002
  %4 = icmp eq i32 %2, 0, !dbg !6003
  br i1 %4, label %14, label %5, !dbg !6004

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6002
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6004

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6001, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata i32 %10, metadata !6000, metadata !DIExpression()), !dbg !6002
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #25, !dbg !6005
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6007
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6008
  call void @llvm.dbg.value(metadata i32 %11, metadata !6000, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata i8* %12, metadata !6001, metadata !DIExpression()), !dbg !6002
  br i1 %13, label %14, label %8, !dbg !6008, !llvm.loop !6009

14:                                               ; preds = %8, %3
  ret void, !dbg !6011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #2 !dbg !6012 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6017, metadata !DIExpression()), !dbg !6018
  %2 = add i32 %0, -1, !dbg !6019
  %3 = icmp ult i32 %2, 4, !dbg !6019
  %4 = shl i32 %2, 3, !dbg !6019
  %5 = lshr i32 1145657157, %4, !dbg !6019
  %6 = trunc i32 %5 to i8, !dbg !6019
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6019
  ret i8 %7, !dbg !6020
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6021 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6025, metadata !DIExpression()), !dbg !6036
  call void @llvm.dbg.value(metadata i32 %1, metadata !6026, metadata !DIExpression()), !dbg !6036
  call void @llvm.dbg.value(metadata i32 0, metadata !6027, metadata !DIExpression()), !dbg !6037
  br label %4, !dbg !6038

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #25, !dbg !6039
  call void @llvm.dbg.value(metadata i32 0, metadata !6029, metadata !DIExpression()), !dbg !6040
  br label %16, !dbg !6041

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6027, metadata !DIExpression()), !dbg !6037
  %6 = icmp ult i32 %5, %1, !dbg !6042
  br i1 %6, label %7, label %11, !dbg !6046

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6047
  %9 = load i8, i8* %8, align 1, !dbg !6047
  %10 = zext i8 %9 to i32, !dbg !6049
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #25, !dbg !6050
  br label %12, !dbg !6051

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #25, !dbg !6052
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6054
  call void @llvm.dbg.value(metadata i32 %13, metadata !6027, metadata !DIExpression()), !dbg !6037
  %14 = icmp eq i32 %13, 8, !dbg !6055
  br i1 %14, label %3, label %4, !dbg !6038, !llvm.loop !6056

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #25, !dbg !6058
  ret void, !dbg !6059

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6029, metadata !DIExpression()), !dbg !6040
  %18 = icmp ult i32 %17, %1, !dbg !6060
  br i1 %18, label %19, label %26, !dbg !6061

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6062
  %21 = load i8, i8* %20, align 1, !dbg !6062
  call void @llvm.dbg.value(metadata i8 %21, metadata !6031, metadata !DIExpression()), !dbg !6063
  %22 = zext i8 %21 to i32, !dbg !6064
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6065
  %24 = icmp eq i32 %23, 0, !dbg !6066
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6065
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #25, !dbg !6067
  br label %27, !dbg !6068

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #25, !dbg !6069
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6071
  call void @llvm.dbg.value(metadata i32 %28, metadata !6029, metadata !DIExpression()), !dbg !6040
  %29 = icmp eq i32 %28, 8, !dbg !6072
  br i1 %29, label %15, label %16, !dbg !6041, !llvm.loop !6073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #2 !dbg !6075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6077, metadata !DIExpression()), !dbg !6078
  %2 = add i32 %0, -32, !dbg !6079
  %3 = icmp ult i32 %2, 95, !dbg !6079
  %4 = zext i1 %3 to i32, !dbg !6079
  ret i32 %4, !dbg !6080
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6130, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6131, metadata !DIExpression()), !dbg !6132
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6133
  br i1 %3, label %5, label %4, !dbg !6135

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6136
  br label %5, !dbg !6138

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6139
  ret void, !dbg !6140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6141 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6145, metadata !DIExpression()), !dbg !6146
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6147
  %3 = load i32, i32* %2, align 4, !dbg !6147
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6147
  %5 = load i32, i32* %4, align 4, !dbg !6147
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6147
  %7 = load i32, i32* %6, align 4, !dbg !6147
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6147
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6152
  %9 = load i32, i32* %8, align 4, !dbg !6152
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6152
  %11 = load i32, i32* %10, align 4, !dbg !6152
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6152
  %13 = load i32, i32* %12, align 4, !dbg !6152
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6152
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6157
  %15 = load i32, i32* %14, align 4, !dbg !6157
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6157
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6162
  %17 = load i32, i32* %16, align 4, !dbg !6162
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6162
  ret void, !dbg !6167
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6168 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6185, metadata !DIExpression()), !dbg !6188
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6186, metadata !DIExpression()), !dbg !6188
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6189
  %4 = load i32, i32* %3, align 4, !dbg !6189
  call void @llvm.dbg.value(metadata i32 %4, metadata !6187, metadata !DIExpression()), !dbg !6188
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6190
  ret void, !dbg !6191
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6192 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6194, metadata !DIExpression()), !dbg !6197
  call void @llvm.dbg.value(metadata i8* %0, metadata !6195, metadata !DIExpression()), !dbg !6197
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6198
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6198
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6196, metadata !DIExpression()), !dbg !6199
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6199
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6200
  %5 = bitcast i8* %4 to i32*, !dbg !6200
  %6 = load i32, i32* %5, align 4, !dbg !6200
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6201
  store i32 %6, i32* %7, align 4, !dbg !6202
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6203
  unreachable, !dbg !6204
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6208, metadata !DIExpression()), !dbg !6209
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6210
  ret void, !dbg !6211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6216, metadata !DIExpression()), !dbg !6217
  %2 = icmp sgt i32 %0, -1, !dbg !6218
  br i1 %2, label %3, label %8, !dbg !6220

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6221, !srcloc !6223
  %4 = and i32 %0, 31, !dbg !6224
  %5 = shl nuw i32 1, %4, !dbg !6225
  %6 = lshr i32 %0, 5, !dbg !6226
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6227
  store volatile i32 %5, i32* %7, align 4, !dbg !6228
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6229, !srcloc !6230
  br label %8, !dbg !6231

8:                                                ; preds = %3, %1
  ret void, !dbg !6232
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6233 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6235, metadata !DIExpression()), !dbg !6236
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6237
  ret void, !dbg !6238
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6239 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6241, metadata !DIExpression()), !dbg !6242
  %2 = icmp sgt i32 %0, -1, !dbg !6243
  br i1 %2, label %3, label %8, !dbg !6245

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6246
  %5 = shl nuw i32 1, %4, !dbg !6248
  %6 = lshr i32 %0, 5, !dbg !6249
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6250
  store volatile i32 %5, i32* %7, align 4, !dbg !6251
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6252, !srcloc !6256
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6257, !srcloc !6260
  br label %8, !dbg !6261

8:                                                ; preds = %3, %1
  ret void, !dbg !6262
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6263 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6267, metadata !DIExpression()), !dbg !6268
  %2 = lshr i32 %0, 5, !dbg !6269
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6270
  %4 = load volatile i32, i32* %3, align 4, !dbg !6270
  %5 = and i32 %0, 31, !dbg !6271
  %6 = shl nuw i32 1, %5, !dbg !6271
  %7 = and i32 %4, %6, !dbg !6272
  ret i32 %7, !dbg !6273
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6274 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6278, metadata !DIExpression()), !dbg !6281
  call void @llvm.dbg.value(metadata i32 %1, metadata !6279, metadata !DIExpression()), !dbg !6281
  call void @llvm.dbg.value(metadata i32 %2, metadata !6280, metadata !DIExpression()), !dbg !6281
  %4 = add i32 %1, 1, !dbg !6282
  call void @llvm.dbg.value(metadata i32 %4, metadata !6279, metadata !DIExpression()), !dbg !6281
  %5 = icmp ult i32 %4, 16, !dbg !6285
  br i1 %5, label %7, label %6, !dbg !6288

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6289
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6289
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6289
  unreachable, !dbg !6289

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6291
  ret void, !dbg !6292
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6297, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i32 %1, metadata !6298, metadata !DIExpression()), !dbg !6299
  %3 = trunc i32 %1 to i8, !dbg !6300
  %4 = shl i8 %3, 4, !dbg !6300
  %5 = and i32 %0, 15, !dbg !6302
  %6 = add nsw i32 %5, -4, !dbg !6302
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6302
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6302
  %9 = icmp slt i32 %0, 0, !dbg !6302
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6302
  store volatile i8 %4, i8* %10, align 1, !dbg !6300
  ret void, !dbg !6303
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6304 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6306, metadata !DIExpression()), !dbg !6307
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6308
  ret void, !dbg !6309
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6310 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6312
  tail call void @z_arm_int_exit() #25, !dbg !6313
  ret void, !dbg !6314
}

; Function Attrs: optsize
declare !dbg !6315 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6316 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6318 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6320
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6321
  tail call void @z_bss_zero() #25, !dbg !6322
  tail call void @z_data_copy() #25, !dbg !6323
  tail call void @z_arm_interrupt_init() #25, !dbg !6324
  tail call void @z_cstart() #27, !dbg !6325
  unreachable, !dbg !6325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6326 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6327
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6328, !srcloc !6331
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6332, !srcloc !6335
  ret void, !dbg !6336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6337 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6338
  %2 = and i32 %1, -15728641, !dbg !6338
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6338
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6339, !srcloc !6346
  call void @llvm.dbg.value(metadata i32 %3, metadata !6344, metadata !DIExpression()) #23, !dbg !6347
  %4 = and i32 %3, -5, !dbg !6348
  call void @llvm.dbg.value(metadata i32 %4, metadata !6349, metadata !DIExpression()) #23, !dbg !6354
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6356, !srcloc !6357
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6358, !srcloc !6335
  ret void, !dbg !6360
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6364, metadata !DIExpression()), !dbg !6365
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6366
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6367
  store i32 %0, i32* %3, align 4, !dbg !6368
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6369
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6370
  store i32 %4, i32* %5, align 4, !dbg !6371
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6372
  %7 = or i32 %6, 268435456, !dbg !6372
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6372
  call void @llvm.dbg.value(metadata i32 0, metadata !6373, metadata !DIExpression()) #23, !dbg !6376
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6378, !srcloc !6379
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6380
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6381
  %10 = load i32, i32* %9, align 4, !dbg !6381
  ret i32 %10, !dbg !6382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6383 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6496, metadata !DIExpression()), !dbg !6504
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6497, metadata !DIExpression()), !dbg !6504
  call void @llvm.dbg.value(metadata i8* %2, metadata !6498, metadata !DIExpression()), !dbg !6504
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6499, metadata !DIExpression()), !dbg !6504
  call void @llvm.dbg.value(metadata i8* %4, metadata !6500, metadata !DIExpression()), !dbg !6504
  call void @llvm.dbg.value(metadata i8* %5, metadata !6501, metadata !DIExpression()), !dbg !6504
  call void @llvm.dbg.value(metadata i8* %6, metadata !6502, metadata !DIExpression()), !dbg !6504
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6505
  call void @llvm.dbg.value(metadata i8* %8, metadata !6503, metadata !DIExpression()), !dbg !6504
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6506
  %10 = bitcast i8* %9 to i32*, !dbg !6506
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6507
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6508
  %12 = bitcast i8* %8 to i32*, !dbg !6509
  store i32 %11, i32* %12, align 4, !dbg !6510
  %13 = ptrtoint i8* %4 to i32, !dbg !6511
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6512
  %15 = bitcast i8* %14 to i32*, !dbg !6512
  store i32 %13, i32* %15, align 4, !dbg !6513
  %16 = ptrtoint i8* %5 to i32, !dbg !6514
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6515
  %18 = bitcast i8* %17 to i32*, !dbg !6515
  store i32 %16, i32* %18, align 4, !dbg !6516
  %19 = ptrtoint i8* %6 to i32, !dbg !6517
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6518
  %21 = bitcast i8* %20 to i32*, !dbg !6518
  store i32 %19, i32* %21, align 4, !dbg !6519
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6520
  %23 = bitcast i8* %22 to i32*, !dbg !6520
  store i32 16777216, i32* %23, align 4, !dbg !6521
  %24 = ptrtoint i8* %8 to i32, !dbg !6522
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6523
  store i32 %24, i32* %25, align 8, !dbg !6524
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6525
  store i32 0, i32* %26, align 4, !dbg !6526
  ret void, !dbg !6527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6528 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6533, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.value(metadata i32 %1, metadata !6534, metadata !DIExpression()), !dbg !6539
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6540
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6535, metadata !DIExpression()), !dbg !6539
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6541
  br i1 %4, label %19, label %5, !dbg !6543

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6538, metadata !DIExpression()), !dbg !6539
  %6 = icmp eq i32 %0, -22, !dbg !6544
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6544
  %8 = load i32, i32* %7, align 4, !dbg !6544
  br i1 %6, label %16, label %9, !dbg !6546

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6544
  %11 = icmp ule i32 %10, %0, !dbg !6544
  %12 = icmp ugt i32 %8, %0, !dbg !6544
  %13 = and i1 %12, %11, !dbg !6544
  %14 = icmp ugt i32 %8, %1, !dbg !6544
  %15 = and i1 %14, %13, !dbg !6544
  br i1 %15, label %18, label %19, !dbg !6544

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6544
  br i1 %17, label %18, label %19, !dbg !6546

18:                                               ; preds = %9, %16
  br label %19, !dbg !6547

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6539
  ret i32 %20, !dbg !6549
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6554, metadata !DIExpression()), !dbg !6557
  call void @llvm.dbg.value(metadata i8* %1, metadata !6555, metadata !DIExpression()), !dbg !6557
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6556, metadata !DIExpression()), !dbg !6557
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6558
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6559
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6560, !srcloc !6561
  unreachable, !dbg !6562
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6563 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6581, metadata !DIExpression()), !dbg !6591
  call void @llvm.dbg.value(metadata i32 %1, metadata !6582, metadata !DIExpression()), !dbg !6591
  call void @llvm.dbg.value(metadata i32 %2, metadata !6583, metadata !DIExpression()), !dbg !6591
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6584, metadata !DIExpression()), !dbg !6591
  call void @llvm.dbg.value(metadata i32 0, metadata !6585, metadata !DIExpression()), !dbg !6591
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6592
  call void @llvm.dbg.value(metadata i32 %8, metadata !6586, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6591
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6593
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6593
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6594
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6594
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6590, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata i32 0, metadata !6596, metadata !DIExpression()) #23, !dbg !6599
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6601, !srcloc !6602
  call void @llvm.dbg.value(metadata i8* %6, metadata !6588, metadata !DIExpression(DW_OP_deref)), !dbg !6591
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6603
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6589, metadata !DIExpression()), !dbg !6591
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6604
  br i1 %11, label %12, label %13, !dbg !6607

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6608
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #25, !dbg !6608
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6608
  unreachable, !dbg !6608

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6610
  call void @llvm.dbg.value(metadata i32 %14, metadata !6586, metadata !DIExpression()), !dbg !6591
  call void @llvm.dbg.value(metadata i8* %5, metadata !6587, metadata !DIExpression(DW_OP_deref)), !dbg !6591
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6611
  call void @llvm.dbg.value(metadata i32 %15, metadata !6585, metadata !DIExpression()), !dbg !6591
  %16 = load i8, i8* %5, align 1, !dbg !6612, !range !6614
  call void @llvm.dbg.value(metadata i8 %16, metadata !6587, metadata !DIExpression()), !dbg !6591
  %17 = icmp eq i8 %16, 0, !dbg !6612
  br i1 %17, label %18, label %35, !dbg !6615

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6616
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6617
  %21 = load i8, i8* %6, align 1, !dbg !6618, !range !6614
  call void @llvm.dbg.value(metadata i8 %21, metadata !6588, metadata !DIExpression()), !dbg !6591
  %22 = icmp eq i8 %21, 0, !dbg !6618
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6620
  %24 = load i32, i32* %23, align 4, !dbg !6620
  br i1 %22, label %30, label %25, !dbg !6621

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6622
  %27 = icmp eq i32 %26, 0, !dbg !6625
  br i1 %27, label %28, label %34, !dbg !6626

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6627
  br label %32, !dbg !6629

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6630
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6620
  br label %34, !dbg !6632

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6632
  br label %35, !dbg !6633

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6633
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6633
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6633
  ret void, !dbg !6633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6639, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata i32 %1, metadata !6640, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata i32 %2, metadata !6641, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata i8* %3, metadata !6642, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata i8 0, metadata !6643, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6644, metadata !DIExpression()), !dbg !6645
  store i8 0, i8* %3, align 1, !dbg !6646
  %5 = icmp ugt i32 %2, -16777217, !dbg !6647
  br i1 %5, label %6, label %17, !dbg !6649

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6650
  %8 = icmp eq i32 %7, 8, !dbg !6650
  br i1 %8, label %9, label %10, !dbg !6650

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !6652
  br label %17, !dbg !6658

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6659
  %12 = icmp eq i32 %11, 0, !dbg !6659
  br i1 %12, label %13, label %14, !dbg !6660

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6644, metadata !DIExpression()), !dbg !6645
  store i8 1, i8* %3, align 1, !dbg !6663
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6645
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6644, metadata !DIExpression()), !dbg !6645
  br label %17, !dbg !6666

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6645
  ret %struct.__esf* %18, !dbg !6667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6668 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6672, metadata !DIExpression()), !dbg !6676
  call void @llvm.dbg.value(metadata i32 %1, metadata !6673, metadata !DIExpression()), !dbg !6676
  call void @llvm.dbg.value(metadata i8* %2, metadata !6674, metadata !DIExpression()), !dbg !6676
  call void @llvm.dbg.value(metadata i32 0, metadata !6675, metadata !DIExpression()), !dbg !6676
  store i8 0, i8* %2, align 1, !dbg !6677
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6678

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6679
  call void @llvm.dbg.value(metadata i32 %5, metadata !6675, metadata !DIExpression()), !dbg !6676
  br label %12, !dbg !6681

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6682
  call void @llvm.dbg.value(metadata i32 %7, metadata !6675, metadata !DIExpression()), !dbg !6676
  br label %12, !dbg !6683

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6684
  call void @llvm.dbg.value(metadata i32 0, metadata !6675, metadata !DIExpression()), !dbg !6676
  br label %12, !dbg !6685

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6686
  call void @llvm.dbg.value(metadata i32 0, metadata !6675, metadata !DIExpression()), !dbg !6676
  br label %12, !dbg !6687

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6688
  br label %12, !dbg !6689

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6690
  br label %12, !dbg !6691

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6676
  call void @llvm.dbg.value(metadata i32 %13, metadata !6675, metadata !DIExpression()), !dbg !6676
  ret i32 %13, !dbg !6692
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6693 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6697, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i8* %1, metadata !6698, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i32 0, metadata !6699, metadata !DIExpression()), !dbg !6700
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !6701
  store i8 0, i8* %1, align 1, !dbg !6706
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6707
  %4 = and i32 %3, 2, !dbg !6709
  %5 = icmp eq i32 %4, 0, !dbg !6710
  br i1 %5, label %7, label %6, !dbg !6711

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #25, !dbg !6712
  br label %38, !dbg !6718

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6719
  %9 = icmp sgt i32 %8, -1, !dbg !6721
  br i1 %9, label %11, label %10, !dbg !6722

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !6723
  br label %38, !dbg !6729

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6730
  %13 = and i32 %12, 1073741824, !dbg !6732
  %14 = icmp eq i32 %13, 0, !dbg !6733
  br i1 %14, label %37, label %15, !dbg !6734

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6735
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6741
  br i1 %16, label %17, label %21, !dbg !6743

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6744
  %19 = load i32, i32* %18, align 4, !dbg !6744
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6744
  %20 = load i32, i32* %18, align 4, !dbg !6750
  call void @llvm.dbg.value(metadata i32 %20, metadata !6699, metadata !DIExpression()), !dbg !6700
  br label %38, !dbg !6751

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6752
  %23 = and i32 %22, 255, !dbg !6754
  %24 = icmp eq i32 %23, 0, !dbg !6755
  br i1 %24, label %27, label %25, !dbg !6756

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6757
  call void @llvm.dbg.value(metadata i32 %26, metadata !6699, metadata !DIExpression()), !dbg !6700
  br label %38, !dbg !6759

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6760
  %29 = and i32 %28, 65280, !dbg !6762
  %30 = icmp eq i32 %29, 0, !dbg !6763
  br i1 %30, label %32, label %31, !dbg !6764

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6765
  call void @llvm.dbg.value(metadata i32 0, metadata !6699, metadata !DIExpression()), !dbg !6700
  br label %38, !dbg !6767

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6768
  %34 = icmp ult i32 %33, 65536, !dbg !6770
  br i1 %34, label %36, label %35, !dbg !6771

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6772
  call void @llvm.dbg.value(metadata i32 0, metadata !6699, metadata !DIExpression()), !dbg !6700
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6774
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #25, !dbg !6774
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6774
  unreachable, !dbg !6774

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6779
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #25, !dbg !6779
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6779
  unreachable, !dbg !6779

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6700
  call void @llvm.dbg.value(metadata i32 %39, metadata !6699, metadata !DIExpression()), !dbg !6700
  ret i32 %39, !dbg !6784
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6785 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6787, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.value(metadata i32 %1, metadata !6788, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.value(metadata i8* %2, metadata !6789, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.value(metadata i32 0, metadata !6790, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.value(metadata i32 -22, metadata !6791, metadata !DIExpression()), !dbg !6800
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #25, !dbg !6801
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6806
  %5 = and i32 %4, 16, !dbg !6808
  %6 = icmp eq i32 %5, 0, !dbg !6809
  br i1 %6, label %8, label %7, !dbg !6810

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6811
  br label %8, !dbg !6817

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6818
  %10 = and i32 %9, 8, !dbg !6820
  %11 = icmp eq i32 %10, 0, !dbg !6821
  br i1 %11, label %13, label %12, !dbg !6822

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6823
  br label %13, !dbg !6829

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6830
  %15 = and i32 %14, 2, !dbg !6831
  %16 = icmp eq i32 %15, 0, !dbg !6832
  br i1 %16, label %27, label %17, !dbg !6833

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6834
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6839
  call void @llvm.dbg.value(metadata i32 %18, metadata !6792, metadata !DIExpression()), !dbg !6840
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6841
  %20 = and i32 %19, 128, !dbg !6843
  %21 = icmp eq i32 %20, 0, !dbg !6844
  br i1 %21, label %27, label %22, !dbg !6845

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6791, metadata !DIExpression()), !dbg !6800
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6846
  %23 = icmp eq i32 %1, 0, !dbg !6852
  br i1 %23, label %27, label %24, !dbg !6854

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6855
  %26 = and i32 %25, -129, !dbg !6855
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6855
  br label %27, !dbg !6857

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6800
  call void @llvm.dbg.value(metadata i32 %28, metadata !6791, metadata !DIExpression()), !dbg !6800
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6858
  %30 = and i32 %29, 1, !dbg !6860
  %31 = icmp eq i32 %30, 0, !dbg !6861
  br i1 %31, label %33, label %32, !dbg !6862

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !6863
  br label %33, !dbg !6869

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6870
  %35 = and i32 %34, 32, !dbg !6872
  %36 = icmp eq i32 %35, 0, !dbg !6873
  br i1 %36, label %38, label %37, !dbg !6874

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !6875
  br label %38, !dbg !6881

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6882
  %40 = and i32 %39, 16, !dbg !6883
  %41 = icmp eq i32 %40, 0, !dbg !6883
  br i1 %41, label %42, label %46, !dbg !6884

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6885
  %44 = and i32 %43, 2, !dbg !6886
  %45 = icmp eq i32 %44, 0, !dbg !6886
  br i1 %45, label %60, label %46, !dbg !6887

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6888
  %48 = and i32 %47, 2048, !dbg !6889
  %49 = icmp eq i32 %48, 0, !dbg !6889
  br i1 %49, label %60, label %50, !dbg !6890

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !6891
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !6892
  call void @llvm.dbg.value(metadata i32 %52, metadata !6795, metadata !DIExpression()), !dbg !6893
  %53 = icmp eq i32 %52, 0, !dbg !6894
  br i1 %53, label %55, label %54, !dbg !6896

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !6897, metadata !DIExpression()) #23, !dbg !6900
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !6903, !srcloc !6904
  call void @llvm.dbg.value(metadata i32 2, metadata !6790, metadata !DIExpression()), !dbg !6800
  br label %60, !dbg !6905

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6906
  %57 = and i32 %56, 16, !dbg !6906
  %58 = icmp eq i32 %57, 0, !dbg !6906
  br i1 %58, label %60, label %59, !dbg !6910

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6911
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !6911
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6911
  unreachable, !dbg !6911

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6800
  call void @llvm.dbg.value(metadata i32 %61, metadata !6790, metadata !DIExpression()), !dbg !6800
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6913
  %63 = and i32 %62, 32, !dbg !6915
  %64 = icmp eq i32 %63, 0, !dbg !6916
  br i1 %64, label %68, label %65, !dbg !6917

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6918
  %67 = and i32 %66, -8193, !dbg !6918
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6918
  br label %68, !dbg !6920

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6921
  %70 = or i32 %69, 255, !dbg !6921
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6921
  store i8 0, i8* %2, align 1, !dbg !6922
  ret i32 %61, !dbg !6923
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6924 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6928, metadata !DIExpression()), !dbg !6935
  call void @llvm.dbg.value(metadata i32 %0, metadata !6929, metadata !DIExpression()), !dbg !6935
  call void @llvm.dbg.value(metadata i8* %1, metadata !6930, metadata !DIExpression()), !dbg !6935
  call void @llvm.dbg.value(metadata i32 0, metadata !6931, metadata !DIExpression()), !dbg !6935
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #25, !dbg !6936
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6941
  %4 = and i32 %3, 4096, !dbg !6943
  %5 = icmp eq i32 %4, 0, !dbg !6943
  br i1 %5, label %7, label %6, !dbg !6944

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !6945
  br label %7, !dbg !6951

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6952
  %9 = and i32 %8, 2048, !dbg !6954
  %10 = icmp eq i32 %9, 0, !dbg !6954
  br i1 %10, label %12, label %11, !dbg !6955

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6956
  br label %12, !dbg !6962

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6963
  %14 = and i32 %13, 512, !dbg !6964
  %15 = icmp eq i32 %14, 0, !dbg !6964
  br i1 %15, label %26, label %16, !dbg !6965

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !6966
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6971
  call void @llvm.dbg.value(metadata i32 %17, metadata !6932, metadata !DIExpression()), !dbg !6972
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6973
  %19 = and i32 %18, 32768, !dbg !6975
  %20 = icmp eq i32 %19, 0, !dbg !6976
  br i1 %20, label %26, label %21, !dbg !6977

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6978
  %22 = icmp eq i32 %0, 0, !dbg !6984
  br i1 %22, label %26, label %23, !dbg !6986

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6987
  %25 = and i32 %24, -32769, !dbg !6987
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6987
  br label %26, !dbg !6989

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6990
  %28 = and i32 %27, 1024, !dbg !6992
  %29 = icmp eq i32 %28, 0, !dbg !6992
  br i1 %29, label %31, label %30, !dbg !6993

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !6994
  br label %31, !dbg !7000

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7001
  %33 = and i32 %32, 256, !dbg !7003
  %34 = icmp eq i32 %33, 0, !dbg !7004
  br i1 %34, label %35, label %39, !dbg !7005

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7006
  %37 = and i32 %36, 8192, !dbg !7008
  %38 = icmp eq i32 %37, 0, !dbg !7008
  br i1 %38, label %41, label %39, !dbg !7009

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7010
  br label %41, !dbg !7011

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7011
  %43 = or i32 %42, 65280, !dbg !7011
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7011
  store i8 0, i8* %1, align 1, !dbg !7012
  ret void, !dbg !7013
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7014 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7020, metadata !DIExpression()), !dbg !7022
  call void @llvm.dbg.value(metadata i32 0, metadata !7021, metadata !DIExpression()), !dbg !7022
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7023
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7028
  %2 = and i32 %1, 33554432, !dbg !7030
  %3 = icmp eq i32 %2, 0, !dbg !7031
  br i1 %3, label %5, label %4, !dbg !7032

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #25, !dbg !7033
  br label %5, !dbg !7039

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7040
  %7 = and i32 %6, 16777216, !dbg !7042
  %8 = icmp eq i32 %7, 0, !dbg !7043
  br i1 %8, label %10, label %9, !dbg !7044

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7045
  br label %10, !dbg !7051

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7052
  %12 = and i32 %11, 524288, !dbg !7054
  %13 = icmp eq i32 %12, 0, !dbg !7055
  br i1 %13, label %15, label %14, !dbg !7056

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7057
  br label %15, !dbg !7063

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7064
  %17 = and i32 %16, 262144, !dbg !7066
  %18 = icmp eq i32 %17, 0, !dbg !7067
  br i1 %18, label %20, label %19, !dbg !7068

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7069
  br label %20, !dbg !7075

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7076
  %22 = and i32 %21, 131072, !dbg !7078
  %23 = icmp eq i32 %22, 0, !dbg !7079
  br i1 %23, label %25, label %24, !dbg !7080

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #25, !dbg !7081
  br label %25, !dbg !7087

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7088
  %27 = and i32 %26, 65536, !dbg !7090
  %28 = icmp eq i32 %27, 0, !dbg !7091
  br i1 %28, label %30, label %29, !dbg !7092

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7093
  br label %30, !dbg !7099

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7100
  %32 = or i32 %31, -65536, !dbg !7100
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7100
  ret void, !dbg !7101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7102 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7106, metadata !DIExpression()), !dbg !7108
  call void @llvm.dbg.value(metadata i8* %0, metadata !7107, metadata !DIExpression()), !dbg !7108
  store i8 0, i8* %0, align 1, !dbg !7109
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7110
  ret void, !dbg !7115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7116 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7120, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata i32 %0, metadata !7121, metadata !DIExpression()), !dbg !7122
  %2 = icmp slt i32 %0, 16, !dbg !7123
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7123
  %4 = add nsw i32 %0, -16, !dbg !7123
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7123
  ret void, !dbg !7128
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7129 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7133, metadata !DIExpression()), !dbg !7136
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7137
  %3 = load i32, i32* %2, align 4, !dbg !7137
  %4 = inttoptr i32 %3 to i16*, !dbg !7138
  call void @llvm.dbg.value(metadata i16* %4, metadata !7134, metadata !DIExpression()), !dbg !7136
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7139
  %6 = or i32 %5, 256, !dbg !7139
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7139
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7140, !srcloc !7143
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7144, !srcloc !7147
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7148
  %8 = load i16, i16* %7, align 2, !dbg !7149
  call void @llvm.dbg.value(metadata i16 %8, metadata !7135, metadata !DIExpression()), !dbg !7136
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7150
  %10 = and i32 %9, -257, !dbg !7150
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7150
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7151, !srcloc !7143
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7153, !srcloc !7147
  %11 = icmp eq i16 %8, -8446, !dbg !7155
  ret i1 %11, !dbg !7157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7158 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7159
  %2 = or i32 %1, 16, !dbg !7159
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7159
  ret void, !dbg !7160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7161 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7164, metadata !DIExpression()), !dbg !7165
  br label %1, !dbg !7166

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7164, metadata !DIExpression()), !dbg !7165
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #24, !dbg !7168
  %3 = add nuw nsw i32 %2, 1, !dbg !7171
  call void @llvm.dbg.value(metadata i32 %3, metadata !7164, metadata !DIExpression()), !dbg !7165
  %4 = icmp eq i32 %3, 97, !dbg !7172
  br i1 %4, label %5, label %1, !dbg !7166, !llvm.loop !7173

5:                                                ; preds = %1
  ret void, !dbg !7175
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #14 !dbg !7176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7178, metadata !DIExpression()), !dbg !7180
  call void @llvm.dbg.value(metadata i32 1, metadata !7179, metadata !DIExpression()), !dbg !7180
  %2 = and i32 %0, 15, !dbg !7181
  %3 = add nsw i32 %2, -4, !dbg !7181
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7181
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7181
  %6 = icmp slt i32 %0, 0, !dbg !7181
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7181
  store volatile i8 16, i8* %7, align 1, !dbg !7182
  ret void, !dbg !7184
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7185 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7294, metadata !DIExpression()), !dbg !7295
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7296
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7298
  br i1 %3, label %4, label %12, !dbg !7299

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7300, !srcloc !7312
  call void @llvm.dbg.value(metadata i32 %5, metadata !7303, metadata !DIExpression()) #23, !dbg !7313
  %6 = icmp eq i32 %5, 0, !dbg !7314
  br i1 %6, label %12, label %7, !dbg !7315

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7316
  %9 = or i32 %8, 268435456, !dbg !7316
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7316
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7318
  %11 = and i32 %10, -32769, !dbg !7318
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7318
  br label %12, !dbg !7319

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7320
  ret void, !dbg !7321
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7322 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7323
  ret void, !dbg !7324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !429, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.value(metadata i8 0, metadata !430, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.value(metadata i32 64, metadata !432, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.value(metadata i32 undef, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7325
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7326
  %3 = load i32, i32* %2, align 4, !dbg !7326
  call void @llvm.dbg.value(metadata i32 %3, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7325
  %4 = add i32 %3, -64, !dbg !7328
  call void @llvm.dbg.value(metadata i32 %4, metadata !431, metadata !DIExpression()), !dbg !7325
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7329
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7330
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7331
  call void @llvm.dbg.value(metadata i8 1, metadata !430, metadata !DIExpression()), !dbg !7325
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7332
  ret void, !dbg !7333
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7334 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7335
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7336, !srcloc !7339
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7340, !srcloc !7343
  ret void, !dbg !7344
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7345 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7346, !srcloc !7349
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7350
  ret void, !dbg !7351
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7352 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7367, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata i8 %1, metadata !7368, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata i32 %2, metadata !7369, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata i32 %3, metadata !7370, metadata !DIExpression()), !dbg !7371
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7372
  %6 = icmp eq i32 %5, -22, !dbg !7374
  br i1 %6, label %7, label %9, !dbg !7375

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7376
  %8 = zext i8 %1 to i32, !dbg !7376
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #25, !dbg !7376
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7376
  unreachable, !dbg !7376

9:                                                ; preds = %4
  ret void, !dbg !7381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7382 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7387, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i8 %1, metadata !7388, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i32 undef, metadata !7389, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i32 undef, metadata !7390, metadata !DIExpression()), !dbg !7392
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7393
  call void @llvm.dbg.value(metadata i8 %3, metadata !7391, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7392
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7394
  call void @llvm.dbg.value(metadata i32 %4, metadata !7391, metadata !DIExpression()), !dbg !7392
  %5 = trunc i32 %4 to i8, !dbg !7395
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7396
  ret i32 %4, !dbg !7397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7398 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7402, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata i8 %1, metadata !7403, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata i8 %2, metadata !7404, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata i1 %3, metadata !7405, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7408
  %5 = zext i8 %2 to i32, !dbg !7409
  call void @llvm.dbg.value(metadata i32 %5, metadata !7407, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata i32 0, metadata !7406, metadata !DIExpression()), !dbg !7408
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7407, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata i32 0, metadata !7406, metadata !DIExpression()), !dbg !7408
  %7 = icmp eq i8 %1, 0, !dbg !7410
  br i1 %7, label %30, label %8, !dbg !7413

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7407, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata i32 %10, metadata !7406, metadata !DIExpression()), !dbg !7408
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7414
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7417
  %13 = load i32, i32* %12, align 4, !dbg !7417
  %14 = icmp eq i32 %13, 0, !dbg !7418
  br i1 %14, label %26, label %15, !dbg !7419

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7420

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7422
  %18 = icmp eq i32 %17, 0, !dbg !7422
  br i1 %18, label %19, label %20, !dbg !7423

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7424
  br label %30, !dbg !7430

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7431
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7432
  call void @llvm.dbg.value(metadata i32 %22, metadata !7407, metadata !DIExpression()), !dbg !7408
  %23 = icmp eq i32 %22, -22, !dbg !7433
  br i1 %23, label %30, label %24, !dbg !7435

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7436
  call void @llvm.dbg.value(metadata i32 %25, metadata !7407, metadata !DIExpression()), !dbg !7408
  br label %26, !dbg !7437

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7408
  call void @llvm.dbg.value(metadata i32 %27, metadata !7407, metadata !DIExpression()), !dbg !7408
  %28 = add nuw nsw i32 %10, 1, !dbg !7438
  call void @llvm.dbg.value(metadata i32 %28, metadata !7406, metadata !DIExpression()), !dbg !7408
  %29 = icmp eq i32 %28, %6, !dbg !7410
  br i1 %29, label %30, label %8, !dbg !7413, !llvm.loop !7439

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7408
  ret i32 %31, !dbg !7441
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7442 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7446, metadata !DIExpression()), !dbg !7448
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7449
  %3 = load i32, i32* %2, align 4, !dbg !7449
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7450, !range !7451
  %5 = icmp ult i32 %4, 2, !dbg !7450
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7452
  br i1 %7, label %8, label %15, !dbg !7452

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7453
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7454
  %11 = load i32, i32* %10, align 4, !dbg !7454
  %12 = and i32 %11, %9, !dbg !7455
  %13 = icmp eq i32 %12, 0, !dbg !7456
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7447, metadata !DIExpression()), !dbg !7448
  ret i32 %16, !dbg !7457
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7458 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7462, metadata !DIExpression()), !dbg !7465
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7463, metadata !DIExpression()), !dbg !7465
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7466
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7466
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7464, metadata !DIExpression()), !dbg !7467
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7468
  %6 = load i32, i32* %5, align 4, !dbg !7468
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7469
  store i32 %6, i32* %7, align 4, !dbg !7470
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7471
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7472
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7473
  %11 = load i32, i32* %10, align 4, !dbg !7473
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7474
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7475
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7476
  ret i32 %12, !dbg !7477
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7478 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7485, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7486, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i32 undef, metadata !7487, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i32 %2, metadata !7488, metadata !DIExpression()), !dbg !7489
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7490
  %5 = load i32, i32* %4, align 4, !dbg !7490
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7491
  %7 = or i32 %6, %5, !dbg !7492
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7493
  store i32 %7, i32* %8, align 4, !dbg !7494
  ret void, !dbg !7495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7496 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7500, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7501, metadata !DIExpression()), !dbg !7502
  %3 = zext i8 %0 to i32, !dbg !7503
  %4 = icmp ugt i8 %0, 7, !dbg !7505
  br i1 %4, label %5, label %6, !dbg !7506

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7507
  br label %7, !dbg !7513

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7514
  br label %7, !dbg !7515

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7502
  ret i32 %8, !dbg !7516
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7517 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7521, metadata !DIExpression()), !dbg !7523
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7522, metadata !DIExpression()), !dbg !7523
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7524
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7525
  %4 = load i32, i32* %3, align 4, !dbg !7525
  %5 = and i32 %4, -32, !dbg !7526
  %6 = or i32 %5, %0, !dbg !7527
  %7 = or i32 %6, 16, !dbg !7527
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7528
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7529
  %9 = load i32, i32* %8, align 4, !dbg !7529
  %10 = or i32 %9, 1, !dbg !7530
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7531
  ret void, !dbg !7532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7536, metadata !DIExpression()), !dbg !7537
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7538
  ret void, !dbg !7539
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7544, metadata !DIExpression()), !dbg !7545
  %2 = icmp ult i32 %0, 33, !dbg !7546
  br i1 %2, label %11, label %3, !dbg !7548

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7549
  br i1 %4, label %11, label %5, !dbg !7551

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7552
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7553, !range !7451
  %8 = mul nsw i32 %7, -2, !dbg !7554
  %9 = add nsw i32 %8, 62, !dbg !7554
  %10 = and i32 %9, 62, !dbg !7555
  br label %11, !dbg !7556

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7545
  ret i32 %12, !dbg !7557
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7558 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7562, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata i8 %1, metadata !7563, metadata !DIExpression()), !dbg !7564
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7565
  %4 = icmp eq i32 %3, -22, !dbg !7567
  br i1 %4, label %5, label %7, !dbg !7568

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7569
  %6 = zext i8 %1 to i32, !dbg !7569
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #25, !dbg !7569
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7569
  unreachable, !dbg !7569

7:                                                ; preds = %2
  ret void, !dbg !7574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7575 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7579, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i8 %1, metadata !7580, metadata !DIExpression()), !dbg !7586
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7587
  call void @llvm.dbg.value(metadata i8 %3, metadata !7581, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7586
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7588
  call void @llvm.dbg.value(metadata i32 %4, metadata !7581, metadata !DIExpression()), !dbg !7586
  %5 = icmp ne i32 %4, -22, !dbg !7589
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7590
  call void @llvm.dbg.value(metadata i32 %4, metadata !7582, metadata !DIExpression()), !dbg !7591
  br i1 %7, label %8, label %12, !dbg !7590

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7582, metadata !DIExpression()), !dbg !7591
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7592
  %10 = add i32 %9, 1, !dbg !7595
  call void @llvm.dbg.value(metadata i32 %10, metadata !7582, metadata !DIExpression()), !dbg !7591
  %11 = icmp eq i32 %10, 8, !dbg !7596
  br i1 %11, label %12, label %8, !dbg !7597, !llvm.loop !7598

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7600
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7601 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7604, metadata !DIExpression()), !dbg !7605
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7606
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7607
  ret void, !dbg !7608
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7609 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7614
  %2 = icmp ugt i32 %1, 8, !dbg !7616
  br i1 %2, label %3, label %4, !dbg !7617

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7618
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7618
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7618
  unreachable, !dbg !7618

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7623
  call void @llvm.dbg.value(metadata i32 0, metadata !7613, metadata !DIExpression()), !dbg !7624
  %5 = icmp eq i32 %1, 0, !dbg !7625
  br i1 %5, label %13, label %6, !dbg !7628

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7628

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7613, metadata !DIExpression()), !dbg !7624
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7629
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7631
  %11 = add nuw i32 %9, 1, !dbg !7632
  call void @llvm.dbg.value(metadata i32 %11, metadata !7613, metadata !DIExpression()), !dbg !7624
  %12 = icmp eq i32 %11, %1, !dbg !7625
  br i1 %12, label %13, label %8, !dbg !7628, !llvm.loop !7633

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7635
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7636
  tail call void @arm_core_mpu_enable() #24, !dbg !7637
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7638
  %16 = and i32 %15, 65280, !dbg !7638
  %17 = icmp eq i32 %16, 2048, !dbg !7638
  br i1 %17, label %19, label %18, !dbg !7641

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7642
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #25, !dbg !7642
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7642
  unreachable, !dbg !7642

19:                                               ; preds = %13
  ret i32 0, !dbg !7644
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7645 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7652, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.value(metadata i8* %1, metadata !7653, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.value(metadata i8* %0, metadata !7654, metadata !DIExpression()), !dbg !7655
  %3 = load i8, i8* %1, align 1, !dbg !7656
  %4 = icmp eq i8 %3, 0, !dbg !7657
  br i1 %4, label %13, label %5, !dbg !7658

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7652, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.value(metadata i8* %8, metadata !7653, metadata !DIExpression()), !dbg !7655
  store i8 %6, i8* %7, align 1, !dbg !7659
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7661
  call void @llvm.dbg.value(metadata i8* %9, metadata !7652, metadata !DIExpression()), !dbg !7655
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7662
  call void @llvm.dbg.value(metadata i8* %10, metadata !7653, metadata !DIExpression()), !dbg !7655
  %11 = load i8, i8* %10, align 1, !dbg !7656
  %12 = icmp eq i8 %11, 0, !dbg !7657
  br i1 %12, label %13, label %5, !dbg !7658, !llvm.loop !7663

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7665
  ret i8* %0, !dbg !7666
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7667 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7671, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i8* %1, metadata !7672, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %2, metadata !7673, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i8* %0, metadata !7674, metadata !DIExpression()), !dbg !7675
  %4 = icmp eq i32 %2, 0, !dbg !7676
  br i1 %4, label %22, label %5, !dbg !7677

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7671, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %7, metadata !7673, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i8* %8, metadata !7672, metadata !DIExpression()), !dbg !7675
  %9 = load i8, i8* %8, align 1, !dbg !7678
  %10 = icmp eq i8 %9, 0, !dbg !7679
  br i1 %10, label %16, label %11, !dbg !7680

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7681
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7683
  call void @llvm.dbg.value(metadata i8* %12, metadata !7672, metadata !DIExpression()), !dbg !7675
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7684
  call void @llvm.dbg.value(metadata i8* %13, metadata !7671, metadata !DIExpression()), !dbg !7675
  %14 = add i32 %7, -1, !dbg !7685
  call void @llvm.dbg.value(metadata i32 %14, metadata !7673, metadata !DIExpression()), !dbg !7675
  %15 = icmp eq i32 %14, 0, !dbg !7676
  br i1 %15, label %22, label %5, !dbg !7677, !llvm.loop !7686

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7671, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i32 %18, metadata !7673, metadata !DIExpression()), !dbg !7675
  store i8 0, i8* %17, align 1, !dbg !7688
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7690
  call void @llvm.dbg.value(metadata i8* %19, metadata !7671, metadata !DIExpression()), !dbg !7675
  %20 = add i32 %18, -1, !dbg !7691
  call void @llvm.dbg.value(metadata i32 %20, metadata !7673, metadata !DIExpression()), !dbg !7675
  %21 = icmp eq i32 %20, 0, !dbg !7692
  br i1 %21, label %22, label %16, !dbg !7693, !llvm.loop !7694

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7696
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7697 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7701, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i32 %1, metadata !7702, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i32 %1, metadata !7703, metadata !DIExpression()), !dbg !7704
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7705

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7701, metadata !DIExpression()), !dbg !7704
  %6 = load i8, i8* %5, align 1, !dbg !7706
  %7 = icmp eq i8 %6, %3, !dbg !7707
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7708
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7709
  call void @llvm.dbg.value(metadata i8* %10, metadata !7701, metadata !DIExpression()), !dbg !7704
  br i1 %9, label %11, label %4, !dbg !7708, !llvm.loop !7711

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7713
  ret i8* %12, !dbg !7714
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7715 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7717, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.value(metadata i32 %1, metadata !7718, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.value(metadata i8* null, metadata !7719, metadata !DIExpression()), !dbg !7720
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7721

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7720
  call void @llvm.dbg.value(metadata i8* %6, metadata !7719, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.value(metadata i8* %5, metadata !7717, metadata !DIExpression()), !dbg !7720
  %7 = load i8, i8* %5, align 1, !dbg !7722
  %8 = icmp eq i8 %7, %3, !dbg !7725
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7726
  call void @llvm.dbg.value(metadata i8* %9, metadata !7719, metadata !DIExpression()), !dbg !7720
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7727
  call void @llvm.dbg.value(metadata i8* %10, metadata !7717, metadata !DIExpression()), !dbg !7720
  %11 = icmp eq i8 %7, 0, !dbg !7728
  br i1 %11, label %12, label %4, !dbg !7728, !llvm.loop !7729

12:                                               ; preds = %4
  ret i8* %9, !dbg !7731
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7732 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7736, metadata !DIExpression()), !dbg !7738
  call void @llvm.dbg.value(metadata i32 0, metadata !7737, metadata !DIExpression()), !dbg !7738
  %2 = load i8, i8* %0, align 1, !dbg !7739
  %3 = icmp eq i8 %2, 0, !dbg !7740
  br i1 %3, label %11, label %4, !dbg !7741

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7737, metadata !DIExpression()), !dbg !7738
  call void @llvm.dbg.value(metadata i8* %6, metadata !7736, metadata !DIExpression()), !dbg !7738
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7742
  call void @llvm.dbg.value(metadata i8* %7, metadata !7736, metadata !DIExpression()), !dbg !7738
  %8 = add i32 %5, 1, !dbg !7744
  call void @llvm.dbg.value(metadata i32 %8, metadata !7737, metadata !DIExpression()), !dbg !7738
  %9 = load i8, i8* %7, align 1, !dbg !7739
  %10 = icmp eq i8 %9, 0, !dbg !7740
  br i1 %10, label %11, label %4, !dbg !7741, !llvm.loop !7745

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7738
  ret i32 %12, !dbg !7747
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7748 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7752, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.value(metadata i32 %1, metadata !7753, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.value(metadata i32 0, metadata !7754, metadata !DIExpression()), !dbg !7755
  %3 = load i8, i8* %0, align 1, !dbg !7756
  %4 = icmp ne i8 %3, 0, !dbg !7757
  %5 = icmp ne i32 %1, 0, !dbg !7758
  %6 = and i1 %4, %5, !dbg !7758
  br i1 %6, label %7, label %16, !dbg !7759

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7754, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.value(metadata i8* %9, metadata !7752, metadata !DIExpression()), !dbg !7755
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7760
  call void @llvm.dbg.value(metadata i8* %10, metadata !7752, metadata !DIExpression()), !dbg !7755
  %11 = add nuw i32 %8, 1, !dbg !7762
  call void @llvm.dbg.value(metadata i32 %11, metadata !7754, metadata !DIExpression()), !dbg !7755
  %12 = load i8, i8* %10, align 1, !dbg !7756
  %13 = icmp ne i8 %12, 0, !dbg !7757
  %14 = icmp ult i32 %11, %1, !dbg !7758
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7758
  br i1 %15, label %7, label %16, !dbg !7759, !llvm.loop !7763

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7755
  ret i32 %17, !dbg !7765
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7766 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7770, metadata !DIExpression()), !dbg !7772
  call void @llvm.dbg.value(metadata i8* %1, metadata !7771, metadata !DIExpression()), !dbg !7772
  %3 = load i8, i8* %0, align 1, !dbg !7773
  %4 = load i8, i8* %1, align 1, !dbg !7774
  %5 = icmp ne i8 %3, %4, !dbg !7775
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7776
  br i1 %7, label %18, label %8, !dbg !7776

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7771, metadata !DIExpression()), !dbg !7772
  call void @llvm.dbg.value(metadata i8* %10, metadata !7770, metadata !DIExpression()), !dbg !7772
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7777
  call void @llvm.dbg.value(metadata i8* %11, metadata !7770, metadata !DIExpression()), !dbg !7772
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7779
  call void @llvm.dbg.value(metadata i8* %12, metadata !7771, metadata !DIExpression()), !dbg !7772
  %13 = load i8, i8* %11, align 1, !dbg !7773
  %14 = load i8, i8* %12, align 1, !dbg !7774
  %15 = icmp ne i8 %13, %14, !dbg !7775
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7776
  br i1 %17, label %18, label %8, !dbg !7776, !llvm.loop !7780

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7773
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7774
  %21 = zext i8 %19 to i32, !dbg !7783
  %22 = zext i8 %20 to i32, !dbg !7784
  %23 = sub nsw i32 %21, %22, !dbg !7785
  ret i32 %23, !dbg !7786
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7787 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7791, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i8* %1, metadata !7792, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i32 %2, metadata !7793, metadata !DIExpression()), !dbg !7794
  %4 = icmp eq i32 %2, 0, !dbg !7795
  br i1 %4, label %23, label %5, !dbg !7795

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7793, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i8* %7, metadata !7792, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i8* %8, metadata !7791, metadata !DIExpression()), !dbg !7794
  %9 = load i8, i8* %8, align 1, !dbg !7796
  %10 = load i8, i8* %7, align 1, !dbg !7797
  %11 = icmp ne i8 %9, %10, !dbg !7798
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7799
  br i1 %13, label %19, label %14, !dbg !7799

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7800
  call void @llvm.dbg.value(metadata i8* %15, metadata !7791, metadata !DIExpression()), !dbg !7794
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7802
  call void @llvm.dbg.value(metadata i8* %16, metadata !7792, metadata !DIExpression()), !dbg !7794
  %17 = add i32 %6, -1, !dbg !7803
  call void @llvm.dbg.value(metadata i32 %17, metadata !7793, metadata !DIExpression()), !dbg !7794
  %18 = icmp eq i32 %17, 0, !dbg !7795
  br i1 %18, label %23, label %5, !dbg !7795, !llvm.loop !7804

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7807
  %21 = zext i8 %10 to i32, !dbg !7808
  %22 = sub nsw i32 %20, %21, !dbg !7809
  br label %23, !dbg !7810

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7810
  ret i32 %24, !dbg !7811
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7812 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7816, metadata !DIExpression()), !dbg !7821
  call void @llvm.dbg.value(metadata i8* %1, metadata !7817, metadata !DIExpression()), !dbg !7821
  call void @llvm.dbg.value(metadata i8** %2, metadata !7818, metadata !DIExpression()), !dbg !7821
  %4 = icmp eq i8* %0, null, !dbg !7822
  br i1 %4, label %5, label %7, !dbg !7822

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7823
  br label %7, !dbg !7822

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7822
  call void @llvm.dbg.value(metadata i8* %8, metadata !7819, metadata !DIExpression()), !dbg !7821
  %9 = load i8, i8* %8, align 1, !dbg !7824
  %10 = icmp eq i8 %9, 0, !dbg !7824
  br i1 %10, label %33, label %11, !dbg !7825

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7819, metadata !DIExpression()), !dbg !7821
  %14 = zext i8 %12 to i32, !dbg !7824
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7826
  %16 = icmp eq i8* %15, null, !dbg !7825
  br i1 %16, label %21, label %17, !dbg !7827

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7828
  call void @llvm.dbg.value(metadata i8* %18, metadata !7819, metadata !DIExpression()), !dbg !7821
  %19 = load i8, i8* %18, align 1, !dbg !7824
  %20 = icmp eq i8 %19, 0, !dbg !7824
  br i1 %20, label %33, label %11, !dbg !7825, !llvm.loop !7830

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7820, metadata !DIExpression()), !dbg !7821
  %24 = zext i8 %22 to i32, !dbg !7832
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7833
  %26 = icmp eq i8* %25, null, !dbg !7834
  br i1 %26, label %27, label %31, !dbg !7835

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7836
  call void @llvm.dbg.value(metadata i8* %28, metadata !7820, metadata !DIExpression()), !dbg !7821
  %29 = load i8, i8* %28, align 1, !dbg !7832
  %30 = icmp eq i8 %29, 0, !dbg !7832
  br i1 %30, label %33, label %21, !dbg !7838, !llvm.loop !7839

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7841
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7844
  br label %33, !dbg !7845

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7821
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7821
  store i8* %34, i8** %2, align 4, !dbg !7821
  ret i8* %35, !dbg !7846
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7847 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7849, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i8* %1, metadata !7850, metadata !DIExpression()), !dbg !7851
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7852
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7853
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7854
  ret i8* %0, !dbg !7855
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7856 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7858, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i8* %1, metadata !7859, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i32 %2, metadata !7860, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i8* %0, metadata !7861, metadata !DIExpression()), !dbg !7863
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7864
  call void @llvm.dbg.value(metadata i32 %4, metadata !7862, metadata !DIExpression()), !dbg !7863
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7865
  call void @llvm.dbg.value(metadata i8* %5, metadata !7858, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i8* %1, metadata !7859, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i32 %2, metadata !7860, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i32 %2, metadata !7860, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7863
  %6 = icmp eq i32 %2, 0, !dbg !7866
  br i1 %6, label %18, label %7, !dbg !7867

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7868
  call void @llvm.dbg.value(metadata i8* %9, metadata !7858, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i8* %10, metadata !7859, metadata !DIExpression()), !dbg !7863
  %12 = load i8, i8* %10, align 1, !dbg !7869
  %13 = icmp eq i8 %12, 0, !dbg !7870
  br i1 %13, label %18, label %14, !dbg !7871

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7872
  call void @llvm.dbg.value(metadata i8* %15, metadata !7859, metadata !DIExpression()), !dbg !7863
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7874
  call void @llvm.dbg.value(metadata i8* %16, metadata !7858, metadata !DIExpression()), !dbg !7863
  store i8 %12, i8* %9, align 1, !dbg !7875
  call void @llvm.dbg.value(metadata i32 %11, metadata !7860, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i32 %11, metadata !7860, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7863
  %17 = icmp eq i32 %11, 0, !dbg !7866
  br i1 %17, label %18, label %7, !dbg !7867, !llvm.loop !7876

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7863
  store i8 0, i8* %19, align 1, !dbg !7878
  ret i8* %0, !dbg !7879
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7880 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7884, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.value(metadata i8* %1, metadata !7885, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.value(metadata i32 %2, metadata !7886, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.value(metadata i8* %0, metadata !7887, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.value(metadata i8* %1, metadata !7888, metadata !DIExpression()), !dbg !7889
  %4 = icmp eq i32 %2, 0, !dbg !7890
  br i1 %4, label %31, label %5, !dbg !7892

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7888, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.value(metadata i8* %0, metadata !7887, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.value(metadata i32 %2, metadata !7886, metadata !DIExpression()), !dbg !7889
  %6 = add i32 %2, -1, !dbg !7893
  call void @llvm.dbg.value(metadata i32 %6, metadata !7886, metadata !DIExpression()), !dbg !7889
  %7 = icmp eq i32 %6, 0, !dbg !7894
  br i1 %7, label %23, label %8, !dbg !7895

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7896
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7896
  br label %11, !dbg !7896

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7888, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.value(metadata i8* %14, metadata !7887, metadata !DIExpression()), !dbg !7889
  %15 = load i8, i8* %14, align 1, !dbg !7897
  %16 = load i8, i8* %13, align 1, !dbg !7898
  %17 = icmp eq i8 %15, %16, !dbg !7899
  br i1 %17, label %18, label %23, !dbg !7896

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7900
  call void @llvm.dbg.value(metadata i8* %19, metadata !7887, metadata !DIExpression()), !dbg !7889
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7902
  call void @llvm.dbg.value(metadata i8* %20, metadata !7888, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.value(metadata i32 %12, metadata !7886, metadata !DIExpression()), !dbg !7889
  %21 = add i32 %12, -1, !dbg !7893
  call void @llvm.dbg.value(metadata i32 %21, metadata !7886, metadata !DIExpression()), !dbg !7889
  %22 = icmp eq i32 %21, 0, !dbg !7894
  br i1 %22, label %23, label %11, !dbg !7895, !llvm.loop !7903

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7889
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7889
  %26 = load i8, i8* %24, align 1, !dbg !7905
  %27 = zext i8 %26 to i32, !dbg !7905
  %28 = load i8, i8* %25, align 1, !dbg !7906
  %29 = zext i8 %28 to i32, !dbg !7906
  %30 = sub nsw i32 %27, %29, !dbg !7907
  br label %31, !dbg !7908

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7889
  ret i32 %32, !dbg !7909
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7910 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7914, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata i8* %1, metadata !7915, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata i32 %2, metadata !7916, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata i8* %0, metadata !7917, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata i8* %1, metadata !7918, metadata !DIExpression()), !dbg !7919
  %4 = ptrtoint i8* %0 to i32, !dbg !7920
  %5 = ptrtoint i8* %1 to i32, !dbg !7920
  %6 = sub i32 %4, %5, !dbg !7920
  %7 = icmp ult i32 %6, %2, !dbg !7922
  br i1 %7, label %10, label %8, !dbg !7923

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7918, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata i8* %0, metadata !7917, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata i32 %2, metadata !7916, metadata !DIExpression()), !dbg !7919
  %9 = icmp eq i32 %2, 0, !dbg !7924
  br i1 %9, label %26, label %17, !dbg !7926

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7916, metadata !DIExpression()), !dbg !7919
  %12 = add i32 %11, -1, !dbg !7927
  call void @llvm.dbg.value(metadata i32 %12, metadata !7916, metadata !DIExpression()), !dbg !7919
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7930
  %14 = load i8, i8* %13, align 1, !dbg !7930
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7931
  store i8 %14, i8* %15, align 1, !dbg !7932
  %16 = icmp eq i32 %12, 0, !dbg !7933
  br i1 %16, label %26, label %10, !dbg !7934, !llvm.loop !7935

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7918, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata i8* %19, metadata !7917, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata i32 %20, metadata !7916, metadata !DIExpression()), !dbg !7919
  %21 = load i8, i8* %18, align 1, !dbg !7937
  store i8 %21, i8* %19, align 1, !dbg !7939
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7940
  call void @llvm.dbg.value(metadata i8* %22, metadata !7917, metadata !DIExpression()), !dbg !7919
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7941
  call void @llvm.dbg.value(metadata i8* %23, metadata !7918, metadata !DIExpression()), !dbg !7919
  %24 = add i32 %20, -1, !dbg !7942
  call void @llvm.dbg.value(metadata i32 %24, metadata !7916, metadata !DIExpression()), !dbg !7919
  %25 = icmp eq i32 %24, 0, !dbg !7924
  br i1 %25, label %26, label %17, !dbg !7926, !llvm.loop !7943

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7945
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7946 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7952, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i8* %1, metadata !7953, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i32 %2, metadata !7954, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i8* %0, metadata !7955, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i8* %1, metadata !7956, metadata !DIExpression()), !dbg !7957
  %4 = icmp eq i32 %2, 0, !dbg !7958
  br i1 %4, label %14, label %5, !dbg !7959

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7956, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i8* %7, metadata !7955, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i32 %8, metadata !7954, metadata !DIExpression()), !dbg !7957
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7960
  call void @llvm.dbg.value(metadata i8* %9, metadata !7956, metadata !DIExpression()), !dbg !7957
  %10 = load i8, i8* %6, align 1, !dbg !7962
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7963
  call void @llvm.dbg.value(metadata i8* %11, metadata !7955, metadata !DIExpression()), !dbg !7957
  store i8 %10, i8* %7, align 1, !dbg !7964
  %12 = add i32 %8, -1, !dbg !7965
  call void @llvm.dbg.value(metadata i32 %12, metadata !7954, metadata !DIExpression()), !dbg !7957
  %13 = icmp eq i32 %12, 0, !dbg !7958
  br i1 %13, label %14, label %5, !dbg !7959, !llvm.loop !7966

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7968
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !7969 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7973, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 %1, metadata !7974, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 %2, metadata !7975, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %0, metadata !7976, metadata !DIExpression()), !dbg !7978
  %4 = trunc i32 %1 to i8, !dbg !7979
  call void @llvm.dbg.value(metadata i8 %4, metadata !7977, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 %2, metadata !7975, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %0, metadata !7976, metadata !DIExpression()), !dbg !7978
  %5 = icmp eq i32 %2, 0, !dbg !7980
  br i1 %5, label %12, label %6, !dbg !7981

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7975, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %8, metadata !7976, metadata !DIExpression()), !dbg !7978
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7982
  call void @llvm.dbg.value(metadata i8* %9, metadata !7976, metadata !DIExpression()), !dbg !7978
  store i8 %4, i8* %8, align 1, !dbg !7984
  %10 = add i32 %7, -1, !dbg !7985
  call void @llvm.dbg.value(metadata i32 %10, metadata !7975, metadata !DIExpression()), !dbg !7978
  %11 = icmp eq i32 %10, 0, !dbg !7980
  br i1 %11, label %12, label %6, !dbg !7981, !llvm.loop !7986

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7988
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7989 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7993, metadata !DIExpression()), !dbg !7999
  call void @llvm.dbg.value(metadata i32 %1, metadata !7994, metadata !DIExpression()), !dbg !7999
  call void @llvm.dbg.value(metadata i32 %2, metadata !7995, metadata !DIExpression()), !dbg !7999
  %4 = icmp eq i32 %2, 0, !dbg !8000
  br i1 %4, label %17, label %5, !dbg !8001

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8002

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8003
  call void @llvm.dbg.value(metadata i8* %9, metadata !7996, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.value(metadata i32 %8, metadata !7995, metadata !DIExpression()), !dbg !7999
  call void @llvm.dbg.value(metadata i8* %9, metadata !7996, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8003
  %10 = load i8, i8* %9, align 1, !dbg !8004
  %11 = icmp eq i8 %10, %6, !dbg !8007
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8008
  call void @llvm.dbg.value(metadata i8* %12, metadata !7996, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.value(metadata i32 %13, metadata !7995, metadata !DIExpression()), !dbg !7999
  br i1 %15, label %16, label %7, !dbg !8008, !llvm.loop !8009

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8011

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7999
  ret i8* %19, !dbg !8012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8013 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8015, metadata !DIExpression()), !dbg !8016
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8017
  ret void, !dbg !8018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #2 !dbg !8019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8021, metadata !DIExpression()), !dbg !8022
  ret i32 -1, !dbg !8023
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8028, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i32* %1, metadata !8029, metadata !DIExpression()), !dbg !8030
  %3 = ptrtoint i32* %1 to i32, !dbg !8031
  %4 = and i32 %3, -2, !dbg !8031
  %5 = icmp eq i32 %4, 2, !dbg !8031
  br i1 %5, label %6, label %9, !dbg !8031

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8032
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8032
  br label %9, !dbg !8033

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8033
  ret i32 %10, !dbg !8034
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8037, metadata !DIExpression()), !dbg !8039
  call void @llvm.dbg.value(metadata i32* %1, metadata !8038, metadata !DIExpression()), !dbg !8039
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8040
  ret i32 %3, !dbg !8041
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8045, metadata !DIExpression()), !dbg !8047
  call void @llvm.dbg.value(metadata i32* %1, metadata !8046, metadata !DIExpression()), !dbg !8047
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8048, !srcloc !8050
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8051
  ret i32 %3, !dbg !8052
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8053 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8058, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.value(metadata i32* %1, metadata !8059, metadata !DIExpression()), !dbg !8062
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8063
  call void @llvm.dbg.value(metadata i32 %3, metadata !8060, metadata !DIExpression()), !dbg !8062
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8064
  call void @llvm.dbg.value(metadata i32 %4, metadata !8061, metadata !DIExpression()), !dbg !8062
  %5 = icmp ne i32 %3, %4, !dbg !8065
  %6 = sext i1 %5 to i32, !dbg !8066
  ret i32 %6, !dbg !8067
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8068 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8072, metadata !DIExpression()), !dbg !8076
  call void @llvm.dbg.value(metadata i32 %1, metadata !8073, metadata !DIExpression()), !dbg !8076
  call void @llvm.dbg.value(metadata i32 %2, metadata !8074, metadata !DIExpression()), !dbg !8076
  call void @llvm.dbg.value(metadata i32* %3, metadata !8075, metadata !DIExpression()), !dbg !8076
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8077
  ret i32 %5, !dbg !8078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8079 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8081, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i32 %1, metadata !8082, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i32 %2, metadata !8083, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i32* %3, metadata !8084, metadata !DIExpression()), !dbg !8085
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8086, !srcloc !8088
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8089
  ret i32 %5, !dbg !8090
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8091 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8093, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %1, metadata !8094, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %2, metadata !8095, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32* %3, metadata !8096, metadata !DIExpression()), !dbg !8101
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8102
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8104
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8104
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8104
  br i1 %11, label %33, label %12, !dbg !8104

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8101
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8101
  call void @llvm.dbg.value(metadata i8* %14, metadata !8099, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %13, metadata !8097, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %1, metadata !8098, metadata !DIExpression()), !dbg !8101
  br label %15, !dbg !8105

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8107
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8101
  call void @llvm.dbg.value(metadata i8* %17, metadata !8099, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %16, metadata !8098, metadata !DIExpression()), !dbg !8101
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8108
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8111
  call void @llvm.dbg.value(metadata i8* %19, metadata !8099, metadata !DIExpression()), !dbg !8101
  %20 = load i8, i8* %17, align 1, !dbg !8112
  %21 = zext i8 %20 to i32, !dbg !8113
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8108
  %23 = icmp eq i32 %22, -1, !dbg !8114
  br i1 %23, label %30, label %24, !dbg !8115

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8116
  call void @llvm.dbg.value(metadata i32 %25, metadata !8098, metadata !DIExpression()), !dbg !8101
  %26 = icmp eq i32 %25, 0, !dbg !8117
  br i1 %26, label %27, label %15, !dbg !8118, !llvm.loop !8119

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8121
  call void @llvm.dbg.value(metadata i32 %28, metadata !8097, metadata !DIExpression()), !dbg !8101
  %29 = icmp eq i32 %28, 0, !dbg !8122
  br i1 %29, label %30, label %12, !dbg !8123, !llvm.loop !8124

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8101
  call void @llvm.dbg.value(metadata i32 %31, metadata !8097, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.label(metadata !8100), !dbg !8127
  %32 = sub i32 %2, %31, !dbg !8128
  br label %33, !dbg !8129

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8101
  ret i32 %34, !dbg !8130
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8131 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8135, metadata !DIExpression()), !dbg !8136
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8137
  %3 = icmp eq i32 %2, -1, !dbg !8139
  br i1 %3, label %8, label %4, !dbg !8140

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8141
  %6 = icmp eq i32 %5, -1, !dbg !8142
  %7 = sext i1 %6 to i32, !dbg !8141
  br label %8, !dbg !8143

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8136
  ret i32 %9, !dbg !8144
}

; Function Attrs: noinline nounwind optsize
define dso_local void @end_report() local_unnamed_addr #1 !dbg !8145 {
  %1 = load i32, i32* @test_status, align 4, !dbg !8146
  %2 = icmp eq i32 %1, 0, !dbg !8146
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8148
  %3 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.90, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.91, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.92, i32 0, i32 0), i8* noundef %3) #25, !dbg !8148
  ret void, !dbg !8149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_start() local_unnamed_addr #2 !dbg !8150 {
  ret void, !dbg !8151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_stop() local_unnamed_addr #2 !dbg !8152 {
  ret void, !dbg !8153
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_skip_failed_assumption() local_unnamed_addr #1 !dbg !8154 {
  store i1 true, i1* @current_test_failed_assumption, align 1, !dbg !8155
  tail call void @ztest_test_skip() #24, !dbg !8158
  ret void, !dbg !8159
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_skip() local_unnamed_addr #1 !dbg !8160 {
  %1 = load i32, i32* @phase, align 4, !dbg !8161
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8162

2:                                                ; preds = %0
  store i32 4, i32* @test_result, align 4, !dbg !8163
  br label %6, !dbg !8165

3:                                                ; preds = %0, %0
  store i32 3, i32* @test_result, align 4, !dbg !8166
  tail call fastcc void @test_finalize() #24, !dbg !8167
  br label %6, !dbg !8168

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8169
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.93, i32 0, i32 0), i8* noundef %5) #25, !dbg !8170
  store i32 2, i32* @test_status, align 4, !dbg !8171
  br label %6, !dbg !8172

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_finalize() unnamed_addr #1 !dbg !8174 {
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8175
  %1 = tail call fastcc %struct.k_thread* @k_current_get.102() #26, !dbg !8178
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef %1) #24, !dbg !8179
  ret void, !dbg !8180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @get_friendly_phase_name(i32 noundef %0) unnamed_addr #2 !dbg !8181 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8185, metadata !DIExpression()), !dbg !8186
  %2 = icmp ult i32 %0, 6, !dbg !8187
  br i1 %2, label %3, label %6, !dbg !8187

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table.get_friendly_phase_name, i32 0, i32 %0, !dbg !8187
  %5 = load i8*, i8** %4, align 4, !dbg !8187
  br label %6, !dbg !8187

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.94, i32 0, i32 0), %1 ], !dbg !8188
  ret i8* %7, !dbg !8190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.101(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !8191 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8197, metadata !DIExpression()), !dbg !8198
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8199, !srcloc !8201
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8202
  ret void, !dbg !8203
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.102() unnamed_addr #11 !dbg !8204 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.103() #26, !dbg !8207
  ret %struct.k_thread* %1, !dbg !8208
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.103() unnamed_addr #11 !dbg !8209 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8210, !srcloc !8212
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !8213
  ret %struct.k_thread* %1, !dbg !8214
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_fail() local_unnamed_addr #1 !dbg !8215 {
  %1 = load i32, i32* @phase, align 4, !dbg !8216
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8217

2:                                                ; preds = %0
  store i32 5, i32* @test_result, align 4, !dbg !8218
  br label %6, !dbg !8220

3:                                                ; preds = %0, %0
  store i32 2, i32* @test_result, align 4, !dbg !8221
  tail call fastcc void @test_finalize() #24, !dbg !8222
  br label %6, !dbg !8223

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8224
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.104, i32 0, i32 0), i8* noundef %5) #25, !dbg !8225
  store i32 2, i32* @test_status, align 4, !dbg !8226
  br label %6, !dbg !8227

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8228
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_pass() local_unnamed_addr #1 !dbg !8229 {
  %1 = load i32, i32* @phase, align 4, !dbg !8230
  %2 = icmp eq i32 %1, 2, !dbg !8231
  br i1 %2, label %3, label %4, !dbg !8231

3:                                                ; preds = %0
  store i32 1, i32* @test_result, align 4, !dbg !8232
  br label %8, !dbg !8234

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8235
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.105, i32 0, i32 0), i8* noundef %5) #25, !dbg !8236
  store i32 2, i32* @test_status, align 4, !dbg !8237
  %6 = load i32, i32* @phase, align 4, !dbg !8238
  %7 = icmp eq i32 %6, 1, !dbg !8240
  br i1 %7, label %8, label %9, !dbg !8241

8:                                                ; preds = %4, %3
  tail call fastcc void @test_finalize() #24, !dbg !8242
  br label %9, !dbg !8243

9:                                                ; preds = %8, %4
  ret void, !dbg !8243
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_before(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8244 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8246, metadata !DIExpression()), !dbg !8247
  tail call fastcc void @z_test_1cpu_start() #24, !dbg !8248
  ret void, !dbg !8249
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_start() unnamed_addr #1 !dbg !8250 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8252, !srcloc !8254
  ret void, !dbg !8255
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_after(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8256 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8258, metadata !DIExpression()), !dbg !8259
  tail call fastcc void @z_test_1cpu_stop() #24, !dbg !8260
  ret void, !dbg !8261
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_stop() unnamed_addr #1 !dbg !8262 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8263, !srcloc !8265
  ret void, !dbg !8266
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %0, %struct.ztest_unit_test* noundef readonly %1) local_unnamed_addr #1 !dbg !8267 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8288, metadata !DIExpression()), !dbg !8291
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8289, metadata !DIExpression()), !dbg !8291
  %3 = icmp eq %struct.ztest_unit_test* %1, null, !dbg !8292
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 1, !dbg !8293
  %5 = select i1 %3, %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* %4, !dbg !8293
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %5, metadata !8290, metadata !DIExpression()), !dbg !8291
  %6 = icmp ult %struct.ztest_unit_test* %5, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8294
  br i1 %6, label %7, label %16, !dbg !8297

7:                                                ; preds = %2, %13
  %8 = phi %struct.ztest_unit_test* [ %14, %13 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %8, metadata !8290, metadata !DIExpression()), !dbg !8291
  %9 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 0, i32 0, !dbg !8298
  %10 = load i8*, i8** %9, align 4, !dbg !8298
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %10) #25, !dbg !8301
  %12 = icmp eq i32 %11, 0, !dbg !8302
  br i1 %12, label %16, label %13, !dbg !8303

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 1, !dbg !8304
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %14, metadata !8290, metadata !DIExpression()), !dbg !8291
  %15 = icmp ult %struct.ztest_unit_test* %14, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8294
  br i1 %15, label %7, label %16, !dbg !8297, !llvm.loop !8305

16:                                               ; preds = %7, %13, %2
  %17 = phi %struct.ztest_unit_test* [ null, %2 ], [ null, %13 ], [ %8, %7 ], !dbg !8291
  ret %struct.ztest_unit_test* %17, !dbg !8307
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_ztest_run_test_suite(i8* noundef %0) local_unnamed_addr #1 !dbg !8308 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8310, metadata !DIExpression()), !dbg !8311
  %2 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) #24, !dbg !8312
  %3 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %2) #24, !dbg !8313
  ret i32 %3, !dbg !8314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) unnamed_addr #1 !dbg !8315 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8336, metadata !DIExpression()), !dbg !8338
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8337, metadata !DIExpression()), !dbg !8338
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %11, !dbg !8339

2:                                                ; preds = %1, %8
  %3 = phi %struct.ztest_suite_node* [ %9, %8 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8337, metadata !DIExpression()), !dbg !8338
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 0, i32 0, !dbg !8341
  %5 = load i8*, i8** %4, align 4, !dbg !8341
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #25, !dbg !8345
  %7 = icmp eq i32 %6, 0, !dbg !8346
  br i1 %7, label %11, label %8, !dbg !8347

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8348
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %9, metadata !8337, metadata !DIExpression()), !dbg !8338
  %10 = icmp ult %struct.ztest_suite_node* %9, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8349
  br i1 %10, label %2, label %11, !dbg !8339, !llvm.loop !8350

11:                                               ; preds = %2, %8, %1
  %12 = phi %struct.ztest_suite_node* [ null, %1 ], [ null, %8 ], [ %3, %2 ], !dbg !8338
  ret %struct.ztest_suite_node* %12, !dbg !8352
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %0) unnamed_addr #1 !dbg !8353 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8357, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8358, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata i8* null, metadata !8359, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata i32 0, metadata !8360, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata i32 0, metadata !8361, metadata !DIExpression()), !dbg !8364
  %2 = icmp eq %struct.ztest_suite_node* %0, null, !dbg !8365
  br i1 %2, label %3, label %4, !dbg !8367

3:                                                ; preds = %1
  store i32 2, i32* @test_status, align 4, !dbg !8368
  br label %68, !dbg !8370

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0, !dbg !8371
  %6 = load i8*, i8** %5, align 4, !dbg !8371
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.106, i32 0, i32 0), i8* noundef %6) #25, !dbg !8371
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8371
  store i1 false, i1* @current_test_failed_assumption, align 1, !dbg !8373
  store i32 0, i32* @test_result, align 4, !dbg !8374
  store i32 0, i32* @phase, align 4, !dbg !8375
  %7 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 1, !dbg !8376
  %8 = load i8* ()*, i8* ()** %7, align 4, !dbg !8376
  %9 = icmp eq i8* ()* %8, null, !dbg !8378
  br i1 %9, label %12, label %10, !dbg !8379

10:                                               ; preds = %4
  %11 = tail call i8* %8() #25, !dbg !8380
  call void @llvm.dbg.value(metadata i8* %11, metadata !8359, metadata !DIExpression()), !dbg !8364
  br label %12, !dbg !8382

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ null, %4 ], !dbg !8364
  call void @llvm.dbg.value(metadata i8* %13, metadata !8359, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata i32 0, metadata !8362, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata i32 undef, metadata !8362, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata i32 0, metadata !8360, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8358, metadata !DIExpression()), !dbg !8364
  %14 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 2), align 4
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8358, metadata !DIExpression()), !dbg !8364
  br label %15, !dbg !8384

15:                                               ; preds = %12, %49
  %16 = phi %struct.ztest_unit_test* [ %19, %49 ], [ null, %12 ], !dbg !8364
  %17 = phi i32 [ %50, %49 ], [ 0, %12 ], !dbg !8387
  call void @llvm.dbg.value(metadata i32 %17, metadata !8360, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %16, metadata !8358, metadata !DIExpression()), !dbg !8364
  %18 = load i8*, i8** %5, align 4, !dbg !8388
  %19 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %18, %struct.ztest_unit_test* noundef %16) #24, !dbg !8389
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8358, metadata !DIExpression()), !dbg !8364
  %20 = icmp eq %struct.ztest_unit_test* %19, null, !dbg !8390
  br i1 %20, label %53, label %21, !dbg !8384

21:                                               ; preds = %15
  %22 = load i8*, i8** %5, align 4, !dbg !8391
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8394
  %24 = load i8*, i8** %23, align 4, !dbg !8394
  %25 = tail call zeroext i1 %14(i8* noundef %22, i8* noundef %24) #25, !dbg !8395
  br i1 %25, label %26, label %49, !dbg !8396

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 4, !dbg !8397
  %28 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8397
  %29 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %28, i32 0, i32 0, !dbg !8399
  %30 = load i32, i32* %29, align 4, !dbg !8400
  %31 = add i32 %30, 1, !dbg !8400
  store i32 %31, i32* %29, align 4, !dbg !8400
  %32 = tail call fastcc i32 @run_test(%struct.ztest_suite_node* noundef nonnull %0, %struct.ztest_unit_test* noundef nonnull %19, i8* noundef %13) #24, !dbg !8401
  call void @llvm.dbg.value(metadata i32 %32, metadata !8361, metadata !DIExpression()), !dbg !8364
  switch i32 %32, label %49 [
    i32 0, label %33
    i32 2, label %36
    i32 1, label %39
  ], !dbg !8402

33:                                               ; preds = %26
  %34 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8403
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %34, i32 0, i32 3, !dbg !8406
  br label %42, !dbg !8407

36:                                               ; preds = %26
  %37 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8408
  %38 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %37, i32 0, i32 1, !dbg !8411
  br label %42, !dbg !8412

39:                                               ; preds = %26
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8413
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !8416
  br label %42, !dbg !8417

42:                                               ; preds = %36, %39, %33
  %43 = phi i32* [ %38, %36 ], [ %41, %39 ], [ %35, %33 ]
  %44 = load i32, i32* %43, align 4, !dbg !8418
  %45 = add i32 %44, 1, !dbg !8418
  store i32 %45, i32* %43, align 4, !dbg !8418
  %46 = icmp eq i32 %32, 1, !dbg !8419
  %47 = zext i1 %46 to i32, !dbg !8421
  %48 = add nsw i32 %17, %47, !dbg !8421
  br label %49, !dbg !8421

49:                                               ; preds = %42, %26, %21
  %50 = phi i32 [ %17, %21 ], [ %17, %26 ], [ %48, %42 ], !dbg !8387
  call void @llvm.dbg.value(metadata i32 %50, metadata !8360, metadata !DIExpression()), !dbg !8364
  %51 = load i32, i32* @test_status, align 4, !dbg !8422
  %52 = icmp eq i32 %51, 2, !dbg !8424
  br i1 %52, label %59, label %15, !dbg !8425, !llvm.loop !8426

53:                                               ; preds = %15
  %54 = load i32, i32* @test_status, align 4, !dbg !8428
  %55 = icmp eq i32 %54, 0, !dbg !8384
  call void @llvm.dbg.value(metadata i32 %17, metadata !8360, metadata !DIExpression()), !dbg !8364
  %56 = icmp ne i32 %17, 0
  %57 = select i1 %55, i1 %56, i1 false, !dbg !8430
  br i1 %57, label %58, label %59, !dbg !8430

58:                                               ; preds = %53
  store i32 1, i32* @test_status, align 4, !dbg !8431
  br label %59, !dbg !8433

59:                                               ; preds = %49, %53, %58
  %60 = phi i32 [ %17, %53 ], [ %17, %58 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8362, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata i32 %17, metadata !8360, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8358, metadata !DIExpression()), !dbg !8364
  %61 = icmp sgt i32 %60, 0, !dbg !8434
  %62 = load i8*, i8** %5, align 4, !dbg !8437
  %63 = select i1 %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.107, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.108, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef %63, i8* noundef %62) #25, !dbg !8437
  store i32 4, i32* @phase, align 4, !dbg !8438
  %64 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 4, !dbg !8439
  %65 = load void (i8*)*, void (i8*)** %64, align 4, !dbg !8439
  %66 = icmp eq void (i8*)* %65, null, !dbg !8441
  br i1 %66, label %68, label %67, !dbg !8442

67:                                               ; preds = %59
  tail call void %65(i8* noundef %13) #25, !dbg !8443
  br label %68, !dbg !8445

68:                                               ; preds = %59, %67, %3
  %69 = phi i32 [ -1, %3 ], [ %60, %67 ], [ %60, %59 ], !dbg !8364
  ret i32 %69, !dbg !8446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @run_test(%struct.ztest_suite_node* noundef %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8447 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8451, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8452, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.value(metadata i8* %2, metadata !8453, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.value(metadata i32 0, metadata !8454, metadata !DIExpression()), !dbg !8455
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 1, !dbg !8456
  %5 = load i8*, i8** %4, align 4, !dbg !8456
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.109, i32 0, i32 0), i8* noundef %5) #25, !dbg !8456
  store i32 1, i32* @phase, align 4, !dbg !8458
  tail call fastcc void @get_start_time_cyc() #24, !dbg !8459
  %6 = bitcast %struct.ztest_suite_node* %0 to i8*, !dbg !8462
  %7 = bitcast %struct.ztest_unit_test* %1 to i8*, !dbg !8463
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 3, !dbg !8464
  %9 = load i32, i32* %8, align 4, !dbg !8464
  %10 = or i32 %9, 8, !dbg !8465
  tail call fastcc void @k_thread_create(i8* noundef %6, i8* noundef %7, i8* noundef %2, i32 noundef %10) #24, !dbg !8466
  tail call fastcc void @k_object_access_grant() #24, !dbg !8467
  tail call fastcc void @k_object_access_grant() #24, !dbg !8467
  tail call fastcc void @k_object_access_grant() #24, !dbg !8467
  %11 = load i8*, i8** %4, align 4, !dbg !8468
  %12 = icmp eq i8* %11, null, !dbg !8470
  br i1 %12, label %14, label %13, !dbg !8471

13:                                               ; preds = %3
  tail call fastcc void @k_thread_name_set(i8* noundef nonnull %11) #24, !dbg !8472
  br label %14, !dbg !8474

14:                                               ; preds = %13, %3
  %15 = load i32, i32* @test_result, align 4, !dbg !8475
  %16 = and i32 %15, -2, !dbg !8477
  %17 = icmp eq i32 %16, 4, !dbg !8477
  br i1 %17, label %19, label %18, !dbg !8477

18:                                               ; preds = %14
  tail call fastcc void @k_thread_start() #24, !dbg !8478
  tail call fastcc void @k_thread_join() #24, !dbg !8480
  br label %19, !dbg !8481

19:                                               ; preds = %18, %14
  store i32 3, i32* @phase, align 4, !dbg !8482
  %20 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 3, !dbg !8483
  %21 = load void (i8*)*, void (i8*)** %20, align 4, !dbg !8483
  %22 = icmp eq void (i8*)* %21, null, !dbg !8485
  br i1 %22, label %24, label %23, !dbg !8486

23:                                               ; preds = %19
  tail call void %21(i8* noundef %2) #25, !dbg !8487
  br label %24, !dbg !8489

24:                                               ; preds = %23, %19
  tail call fastcc void @run_test_rules(i1 noundef zeroext false, %struct.ztest_unit_test* noundef nonnull %1, i8* noundef %2) #24, !dbg !8490
  tail call fastcc void @get_test_duration_ms() #24, !dbg !8491
  %25 = load i32, i32* @tc_spend_time, align 4, !dbg !8492
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 4, !dbg !8494
  %27 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %26, align 4, !dbg !8494
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %27, i32 0, i32 4, !dbg !8495
  %29 = load i32, i32* %28, align 4, !dbg !8495
  %30 = icmp ugt i32 %25, %29, !dbg !8496
  br i1 %30, label %31, label %32, !dbg !8497

31:                                               ; preds = %24
  store i32 %25, i32* %28, align 4, !dbg !8498
  br label %32, !dbg !8500

32:                                               ; preds = %31, %24
  store i32 5, i32* @phase, align 4, !dbg !8501
  %33 = load i32, i32* @test_result, align 4, !dbg !8502
  switch i32 %33, label %34 [
    i32 5, label %38
    i32 2, label %38
  ], !dbg !8504

34:                                               ; preds = %32
  %35 = add i32 %33, -3, !dbg !8505
  %36 = icmp ult i32 %35, 2, !dbg !8505
  %37 = select i1 %36, i32 2, i32 0, !dbg !8505
  br label %38, !dbg !8505

38:                                               ; preds = %34, %32, %32
  %39 = phi i32 [ 1, %32 ], [ 1, %32 ], [ %37, %34 ], !dbg !8455
  call void @llvm.dbg.value(metadata i32 %39, metadata !8454, metadata !DIExpression()), !dbg !8455
  tail call fastcc void @cleanup_test() #24, !dbg !8507
  call void @llvm.dbg.value(metadata i32 %39, metadata !8454, metadata !DIExpression()), !dbg !8455
  %40 = tail call fastcc i32 @get_final_test_result(%struct.ztest_unit_test* noundef nonnull %1, i32 noundef %39) #24, !dbg !8510
  call void @llvm.dbg.value(metadata i32 %40, metadata !8454, metadata !DIExpression()), !dbg !8455
  %41 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %40) #24, !dbg !8511
  %42 = load i8*, i8** %4, align 4, !dbg !8511
  %43 = load i32, i32* @tc_spend_time, align 4, !dbg !8511
  %44 = freeze i32 %43
  %45 = udiv i32 %44, 1000, !dbg !8511
  %46 = mul i32 %45, 1000
  %47 = sub i32 %44, %46
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.110, i32 0, i32 0), i8* noundef %41, i8* noundef %42, i32 noundef %45, i32 noundef %47) #25, !dbg !8511
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8511
  %48 = icmp eq i32 %40, 2, !dbg !8513
  br i1 %48, label %49, label %52, !dbg !8515

49:                                               ; preds = %38
  %50 = load i1, i1* @current_test_failed_assumption, align 1, !dbg !8516
  br i1 %50, label %51, label %52, !dbg !8517

51:                                               ; preds = %49
  store i32 1, i32* @test_status, align 4, !dbg !8518
  br label %52, !dbg !8520

52:                                               ; preds = %51, %49, %38
  ret i32 %40, !dbg !8521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_start_time_cyc() unnamed_addr #1 !dbg !8522 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8523
  store i32 %1, i32* @tc_start_time, align 4, !dbg !8524
  ret void, !dbg !8525
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8526 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8545, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8536, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), metadata !8537, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i32 1024, metadata !8538, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_cb, metadata !8539, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i8* %0, metadata !8540, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i8* %1, metadata !8541, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i8* %2, metadata !8542, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i32 -1, metadata !8543, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i32 %3, metadata !8544, metadata !DIExpression()), !dbg !8546
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8547, !srcloc !8549
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef nonnull @ztest_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @test_cb, i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef -1, i32 noundef %3, [1 x i64] [i64 -1]) #25, !dbg !8550
  ret void, !dbg !8551
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !8552 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8557, metadata !DIExpression()), !dbg !8559
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8558, metadata !DIExpression()), !dbg !8559
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8560, !srcloc !8562
  ret void, !dbg !8563
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(i8* noundef %0) unnamed_addr #1 !dbg !8564 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8568, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.value(metadata i8* %0, metadata !8569, metadata !DIExpression()), !dbg !8570
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8571, !srcloc !8573
  %2 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef nonnull @ztest_thread, i8* noundef %0) #25, !dbg !8574
  ret void, !dbg !8575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start() unnamed_addr #1 !dbg !8576 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8578, metadata !DIExpression()), !dbg !8579
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8580, !srcloc !8582
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef nonnull @ztest_thread) #25, !dbg !8583
  ret void, !dbg !8584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join() unnamed_addr #1 !dbg !8585 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8590, metadata !DIExpression()), !dbg !8591
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8589, metadata !DIExpression()), !dbg !8591
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8592, !srcloc !8594
  %1 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef nonnull @ztest_thread, [1 x i64] [i64 -1]) #25, !dbg !8595
  ret void, !dbg !8596
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_rules(i1 noundef zeroext %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8597 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !8601, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8617
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8602, metadata !DIExpression()), !dbg !8617
  call void @llvm.dbg.value(metadata i8* %2, metadata !8603, metadata !DIExpression()), !dbg !8617
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), metadata !8604, metadata !DIExpression()), !dbg !8618
  br i1 icmp ult (%struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0)), label %5, label %4, !dbg !8619

4:                                                ; preds = %17, %3
  ret void, !dbg !8620

5:                                                ; preds = %3, %17
  %6 = phi %struct.ztest_test_rule* [ %18, %17 ], [ getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %6, metadata !8604, metadata !DIExpression()), !dbg !8618
  br i1 %0, label %7, label %11, !dbg !8621

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 0, !dbg !8625
  %9 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %8, align 4, !dbg !8625
  %10 = icmp eq void (%struct.ztest_unit_test*, i8*)* %9, null, !dbg !8626
  br i1 %10, label %17, label %15, !dbg !8627

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 1, !dbg !8628
  %13 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %12, align 4, !dbg !8628
  %14 = icmp eq void (%struct.ztest_unit_test*, i8*)* %13, null, !dbg !8630
  br i1 %14, label %17, label %15, !dbg !8631

15:                                               ; preds = %11, %7
  %16 = phi void (%struct.ztest_unit_test*, i8*)* [ %9, %7 ], [ %13, %11 ]
  tail call void %16(%struct.ztest_unit_test* noundef %1, i8* noundef %2) #25, !dbg !8632
  br label %17, !dbg !8633

17:                                               ; preds = %15, %7, %11
  %18 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 1, !dbg !8633
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %18, metadata !8604, metadata !DIExpression()), !dbg !8618
  %19 = icmp ult %struct.ztest_test_rule* %18, getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0), !dbg !8634
  br i1 %19, label %5, label %4, !dbg !8619, !llvm.loop !8635
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_test_duration_ms() unnamed_addr #1 !dbg !8637 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8640
  %2 = load i32, i32* @tc_start_time, align 4, !dbg !8641
  %3 = sub i32 %1, %2, !dbg !8642
  call void @llvm.dbg.value(metadata i32 %3, metadata !8639, metadata !DIExpression()), !dbg !8643
  %4 = tail call fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %3) #24, !dbg !8644
  store i32 %4, i32* @tc_spend_time, align 4, !dbg !8645
  ret void, !dbg !8646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cleanup_test() unnamed_addr #1 !dbg !8647 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8651, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.value(metadata i32 0, metadata !8652, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.value(metadata i32 0, metadata !8653, metadata !DIExpression()), !dbg !8654
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8655
  call void @llvm.dbg.value(metadata i32 0, metadata !8652, metadata !DIExpression()), !dbg !8654
  ret void, !dbg !8658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_final_test_result(%struct.ztest_unit_test* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8659 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8663, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i32 %1, metadata !8664, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i32 -1, metadata !8665, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), metadata !8666, metadata !DIExpression()), !dbg !8675
  br i1 icmp ult (%struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0)), label %3, label %31, !dbg !8676

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 1
  %5 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 0
  br label %6, !dbg !8676

6:                                                ; preds = %3, %19
  %7 = phi %struct.ztest_expected_result_entry* [ getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %3 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %7, metadata !8666, metadata !DIExpression()), !dbg !8675
  %8 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 1, !dbg !8677
  %9 = load i8*, i8** %8, align 4, !dbg !8677
  %10 = load i8*, i8** %4, align 4, !dbg !8681
  %11 = tail call i32 @strcmp(i8* noundef %9, i8* noundef %10) #25, !dbg !8682
  %12 = icmp eq i32 %11, 0, !dbg !8683
  br i1 %12, label %13, label %19, !dbg !8684

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 0, !dbg !8685
  %15 = load i8*, i8** %14, align 4, !dbg !8685
  %16 = load i8*, i8** %5, align 4, !dbg !8686
  %17 = tail call i32 @strcmp(i8* noundef %15, i8* noundef %16) #25, !dbg !8687
  %18 = icmp eq i32 %17, 0, !dbg !8688
  br i1 %18, label %22, label %19, !dbg !8689

19:                                               ; preds = %6, %13
  %20 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 1, !dbg !8690
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %20, metadata !8666, metadata !DIExpression()), !dbg !8675
  %21 = icmp ult %struct.ztest_expected_result_entry* %20, getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0), !dbg !8691
  br i1 %21, label %6, label %31, !dbg !8676, !llvm.loop !8692

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 2, !dbg !8694
  %24 = load i32, i32* %23, align 4, !dbg !8694
  call void @llvm.dbg.value(metadata i32 %24, metadata !8665, metadata !DIExpression()), !dbg !8674
  switch i32 %24, label %31 [
    i32 0, label %25
    i32 1, label %28
  ], !dbg !8696

25:                                               ; preds = %22
  %26 = icmp ne i32 %1, 1, !dbg !8697
  %27 = zext i1 %26 to i32, !dbg !8700
  br label %31, !dbg !8701

28:                                               ; preds = %22
  %29 = icmp ne i32 %1, 2, !dbg !8702
  %30 = zext i1 %29 to i32, !dbg !8705
  br label %31, !dbg !8706

31:                                               ; preds = %19, %2, %22, %28, %25
  %32 = phi i32 [ %27, %25 ], [ %30, %28 ], [ %1, %22 ], [ %1, %2 ], [ %1, %19 ], !dbg !8674
  ret i32 %32, !dbg !8707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @TC_RESULT_TO_STR(i32 noundef %0) unnamed_addr #2 !dbg !8708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8712, metadata !DIExpression()), !dbg !8713
  %2 = icmp ult i32 %0, 3, !dbg !8714
  br i1 %2, label %3, label %6, !dbg !8714

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.TC_RESULT_TO_STR, i32 0, i32 %0, !dbg !8714
  %5 = load i8*, i8** %4, align 4, !dbg !8714
  br label %6, !dbg !8714

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.111, i32 0, i32 0), %1 ], !dbg !8715
  ret i8* %7, !dbg !8717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !8718 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !8719
  ret i32 %1, !dbg !8720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %0) unnamed_addr #2 !dbg !8721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8724, metadata !DIExpression()), !dbg !8725
  %2 = zext i32 %0 to i64, !dbg !8726
  call void @llvm.dbg.value(metadata i64 %2, metadata !8727, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i32 84000000, metadata !8732, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i32 1000, metadata !8733, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i8 1, metadata !8734, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i8 1, metadata !8735, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i8 1, metadata !8736, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i8 0, metadata !8737, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i8 0, metadata !8738, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i8 1, metadata !8739, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i64 0, metadata !8740, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i64 83999, metadata !8740, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i64 83999, metadata !8740, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i64 83999, metadata !8740, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i64 83999, metadata !8740, metadata !DIExpression()), !dbg !8744
  %3 = add nuw nsw i64 %2, 83999, !dbg !8746
  call void @llvm.dbg.value(metadata i64 %3, metadata !8727, metadata !DIExpression()), !dbg !8744
  %4 = icmp ult i32 %0, -83999
  %5 = trunc i64 %3 to i32, !dbg !8749
  %6 = udiv i32 %5, 84000, !dbg !8749
  %7 = zext i32 %6 to i64, !dbg !8749
  %8 = udiv i64 %3, 84000, !dbg !8749
  %9 = select i1 %4, i64 %7, i64 %8, !dbg !8749
  %10 = trunc i64 %9 to i32, !dbg !8751
  ret i32 %10, !dbg !8752
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !8753 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !8755
  ret i32 %1, !dbg !8756
}

; Function Attrs: noinline nounwind optsize
define internal void @test_cb(i8* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2) #1 !dbg !8757 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8759, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i8* %1, metadata !8760, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i8* %2, metadata !8761, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i8* %0, metadata !8762, metadata !DIExpression()), !dbg !8764
  %4 = bitcast i8* %1 to %struct.ztest_unit_test*, !dbg !8765
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8763, metadata !DIExpression()), !dbg !8764
  store i32 0, i32* @test_result, align 4, !dbg !8766
  tail call fastcc void @run_test_rules(i1 noundef zeroext true, %struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8767
  %5 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8768
  %6 = bitcast i8* %5 to void (i8*)**, !dbg !8768
  %7 = load void (i8*)*, void (i8*)** %6, align 4, !dbg !8768
  %8 = icmp eq void (i8*)* %7, null, !dbg !8770
  br i1 %8, label %10, label %9, !dbg !8771

9:                                                ; preds = %3
  tail call void %7(i8* noundef %2) #25, !dbg !8772
  br label %10, !dbg !8774

10:                                               ; preds = %9, %3
  tail call fastcc void @run_test_functions(%struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8775
  store i32 1, i32* @test_result, align 4, !dbg !8776
  ret void, !dbg !8777
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_functions(%struct.ztest_unit_test* nocapture noundef readonly %0, i8* noundef %1) unnamed_addr #1 !dbg !8778 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* undef, metadata !8782, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8783, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata i8* %1, metadata !8784, metadata !DIExpression()), !dbg !8785
  store i32 2, i32* @phase, align 4, !dbg !8786
  %3 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 2, !dbg !8787
  %4 = load void (i8*)*, void (i8*)** %3, align 4, !dbg !8787
  tail call void %4(i8* noundef %1) #25, !dbg !8788
  ret void, !dbg !8789
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_ztest_run_test_suites(i8* noundef %0) local_unnamed_addr #1 !dbg !8790 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8794, metadata !DIExpression()), !dbg !8798
  call void @llvm.dbg.value(metadata i32 0, metadata !8795, metadata !DIExpression()), !dbg !8798
  %2 = load i32, i32* @test_status, align 4, !dbg !8799
  %3 = icmp eq i32 %2, 2, !dbg !8801
  br i1 %3, label %17, label %4, !dbg !8802

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8796, metadata !DIExpression()), !dbg !8803
  call void @llvm.dbg.value(metadata i32 0, metadata !8795, metadata !DIExpression()), !dbg !8798
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %5, label %15, !dbg !8804

5:                                                ; preds = %4, %5
  %6 = phi %struct.ztest_suite_node* [ %12, %5 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %4 ]
  %7 = phi i32 [ %9, %5 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %6, metadata !8796, metadata !DIExpression()), !dbg !8803
  call void @llvm.dbg.value(metadata i32 %7, metadata !8795, metadata !DIExpression()), !dbg !8798
  %8 = tail call fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef nonnull %6, i8* noundef %0) #24, !dbg !8805
  %9 = add nsw i32 %8, %7, !dbg !8808
  call void @llvm.dbg.value(metadata i32 %9, metadata !8795, metadata !DIExpression()), !dbg !8798
  %10 = load i32, i32* @test_status, align 4, !dbg !8809
  %11 = icmp ne i32 %10, 2, !dbg !8811
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %6, i32 1, !dbg !8812
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8796, metadata !DIExpression()), !dbg !8803
  %13 = icmp ult %struct.ztest_suite_node* %12, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)
  %14 = select i1 %11, i1 %13, i1 false, !dbg !8813
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8796, metadata !DIExpression()), !dbg !8803
  call void @llvm.dbg.value(metadata i32 %9, metadata !8795, metadata !DIExpression()), !dbg !8798
  br i1 %14, label %5, label %15, !dbg !8813, !llvm.loop !8814

15:                                               ; preds = %5, %4
  %16 = phi i32 [ 0, %4 ], [ %9, %5 ], !dbg !8798
  call void @llvm.dbg.value(metadata i32 %16, metadata !8795, metadata !DIExpression()), !dbg !8798
  tail call fastcc void @__ztest_show_suite_summary() #24, !dbg !8816
  br label %17, !dbg !8817

17:                                               ; preds = %1, %15
  %18 = phi i32 [ %16, %15 ], [ 0, %1 ], !dbg !8798
  ret i32 %18, !dbg !8818
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8819 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8823, metadata !DIExpression()), !dbg !8834
  call void @llvm.dbg.value(metadata i8* %1, metadata !8824, metadata !DIExpression()), !dbg !8834
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 6, !dbg !8835
  %4 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %3, align 4, !dbg !8835
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %4, metadata !8825, metadata !DIExpression()), !dbg !8834
  call void @llvm.dbg.value(metadata i32 0, metadata !8826, metadata !DIExpression()), !dbg !8834
  tail call fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* noundef %0) #24, !dbg !8836
  call void @llvm.dbg.value(metadata i32 0, metadata !8827, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i32 0, metadata !8826, metadata !DIExpression()), !dbg !8834
  call void @llvm.dbg.value(metadata i32 undef, metadata !8827, metadata !DIExpression()), !dbg !8837
  %5 = load i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, %struct.ztest_suite_node*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 1), align 4
  %6 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8826, metadata !DIExpression()), !dbg !8834
  %8 = tail call zeroext i1 %5(i8* noundef %1, %struct.ztest_suite_node* noundef %0) #25, !dbg !8838
  br i1 %8, label %9, label %16, !dbg !8839

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 2
  %11 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef nonnull %0) #24, !dbg !8840
  call void @llvm.dbg.value(metadata i32 %11, metadata !8829, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 1, metadata !8826, metadata !DIExpression()), !dbg !8834
  %12 = load i32, i32* %7, align 4, !dbg !8842
  %13 = add i32 %12, 1, !dbg !8842
  store i32 %13, i32* %7, align 4, !dbg !8842
  %14 = icmp ne i32 %11, 0, !dbg !8843
  %15 = zext i1 %14 to i32, !dbg !8844
  br label %16, !dbg !8845

16:                                               ; preds = %2, %9
  %17 = phi i32* [ %10, %9 ], [ %6, %2 ]
  %18 = phi i32 [ %15, %9 ], [ 1, %2 ]
  %19 = phi i32 [ 1, %9 ], [ 0, %2 ], !dbg !8834
  %20 = load i32, i32* %17, align 4, !dbg !8846
  %21 = add i32 %20, %18, !dbg !8846
  store i32 %21, i32* %17, align 4, !dbg !8846
  call void @llvm.dbg.value(metadata i32 %19, metadata !8826, metadata !DIExpression()), !dbg !8834
  call void @llvm.dbg.value(metadata i32 undef, metadata !8827, metadata !DIExpression()), !dbg !8837
  ret i32 %19, !dbg !8847
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary() unnamed_addr #1 !dbg !8848 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28.115, i32 0, i32 0)) #25, !dbg !8852
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8850, metadata !DIExpression()), !dbg !8853
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %1, !dbg !8854

1:                                                ; preds = %2, %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.116, i32 0, i32 0)) #25, !dbg !8855
  ret void, !dbg !8856

2:                                                ; preds = %0, %2
  %3 = phi %struct.ztest_suite_node* [ %4, %2 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8850, metadata !DIExpression()), !dbg !8853
  tail call fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* noundef nonnull %3) #24, !dbg !8857
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8860
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8850, metadata !DIExpression()), !dbg !8853
  %5 = icmp ult %struct.ztest_suite_node* %4, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8861
  br i1 %5, label %2, label %1, !dbg !8854, !llvm.loop !8862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8864 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8868, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8869, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.value(metadata i32 0, metadata !8870, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.value(metadata i32 0, metadata !8871, metadata !DIExpression()), !dbg !8872
  tail call fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* noundef %0) #24, !dbg !8873
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 poison, metadata !8871, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8869, metadata !DIExpression()), !dbg !8872
  %3 = load i8*, i8** %2, align 4, !dbg !8874
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8875
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8869, metadata !DIExpression()), !dbg !8872
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8876
  br i1 %5, label %36, label %6, !dbg !8877

6:                                                ; preds = %1, %20
  %7 = phi %struct.ztest_unit_test* [ %34, %20 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8878
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8878
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 1, !dbg !8881
  %11 = load i32, i32* %10, align 4, !dbg !8881
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8882
  %13 = load i32, i32* %12, align 4, !dbg !8882
  %14 = icmp eq i32 %11, %13, !dbg !8883
  br i1 %14, label %20, label %15, !dbg !8884

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 3, !dbg !8885
  %17 = load i32, i32* %16, align 4, !dbg !8885
  %18 = icmp ne i32 %17, %13, !dbg !8887
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %15, %6
  %21 = phi i32 [ 2, %6 ], [ %19, %15 ], !dbg !8888
  call void @llvm.dbg.value(metadata i32 %21, metadata !8870, metadata !DIExpression()), !dbg !8872
  %22 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %21) #24, !dbg !8889
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 0, !dbg !8889
  %24 = load i8*, i8** %23, align 4, !dbg !8889
  %25 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 1, !dbg !8889
  %26 = load i8*, i8** %25, align 4, !dbg !8889
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 4, !dbg !8889
  %28 = load i32, i32* %27, align 4, !dbg !8889
  %29 = freeze i32 %28
  %30 = udiv i32 %29, 1000, !dbg !8889
  %31 = mul i32 %30, 1000
  %32 = sub i32 %29, %31
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.117, i32 0, i32 0), i8* noundef %22, i8* noundef %24, i8* noundef %26, i32 noundef %30, i32 noundef %32) #25, !dbg !8889
  call void @llvm.dbg.value(metadata i32 poison, metadata !8871, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8869, metadata !DIExpression()), !dbg !8872
  %33 = load i8*, i8** %2, align 4, !dbg !8874
  %34 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %33, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8875
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %34, metadata !8869, metadata !DIExpression()), !dbg !8872
  %35 = icmp eq %struct.ztest_unit_test* %34, null, !dbg !8876
  br i1 %35, label %36, label %6, !dbg !8877, !llvm.loop !8890

36:                                               ; preds = %20, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.118, i32 0, i32 0)) #25, !dbg !8892
  ret void, !dbg !8893
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8894 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8896, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8897, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8898, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8899, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8900, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8901, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8902, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8903, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8904, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8905, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8906, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8907, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8908, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8909, metadata !DIExpression()), !dbg !8910
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8909, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8908, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8900, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8899, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8898, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8897, metadata !DIExpression()), !dbg !8910
  %3 = load i8*, i8** %2, align 4, !dbg !8911
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8912
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8908, metadata !DIExpression()), !dbg !8910
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8913
  br i1 %5, label %58, label %6, !dbg !8914

6:                                                ; preds = %1, %34
  %7 = phi %struct.ztest_unit_test* [ %39, %34 ], [ %4, %1 ]
  %8 = phi i32 [ %18, %34 ], [ 0, %1 ]
  %9 = phi i32 [ %13, %34 ], [ 0, %1 ]
  %10 = phi i32 [ %37, %34 ], [ 0, %1 ]
  %11 = phi i32 [ %36, %34 ], [ 0, %1 ]
  %12 = phi i32 [ %35, %34 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8909, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 %9, metadata !8900, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 %10, metadata !8899, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 %11, metadata !8898, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 %12, metadata !8897, metadata !DIExpression()), !dbg !8910
  %13 = add nuw nsw i32 %9, 1, !dbg !8915
  call void @llvm.dbg.value(metadata i32 %13, metadata !8900, metadata !DIExpression()), !dbg !8910
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8917
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %14, align 4, !dbg !8917
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 4, !dbg !8918
  %17 = load i32, i32* %16, align 4, !dbg !8918
  %18 = add i32 %17, %8, !dbg !8919
  call void @llvm.dbg.value(metadata i32 %18, metadata !8909, metadata !DIExpression()), !dbg !8910
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 1, !dbg !8920
  %20 = load i32, i32* %19, align 4, !dbg !8920
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 0, !dbg !8922
  %22 = load i32, i32* %21, align 4, !dbg !8922
  %23 = icmp eq i32 %20, %22, !dbg !8923
  br i1 %23, label %24, label %26, !dbg !8924

24:                                               ; preds = %6
  %25 = add nsw i32 %10, 1, !dbg !8925
  call void @llvm.dbg.value(metadata i32 %25, metadata !8899, metadata !DIExpression()), !dbg !8910
  br label %34, !dbg !8927

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8928
  %28 = load i32, i32* %27, align 4, !dbg !8928
  %29 = icmp eq i32 %28, %22, !dbg !8930
  br i1 %29, label %30, label %32, !dbg !8931

30:                                               ; preds = %26
  %31 = add nsw i32 %12, 1, !dbg !8932
  call void @llvm.dbg.value(metadata i32 %31, metadata !8897, metadata !DIExpression()), !dbg !8910
  br label %34, !dbg !8934

32:                                               ; preds = %26
  %33 = add nsw i32 %11, 1, !dbg !8935
  call void @llvm.dbg.value(metadata i32 %33, metadata !8898, metadata !DIExpression()), !dbg !8910
  br label %34

34:                                               ; preds = %30, %32, %24
  %35 = phi i32 [ %12, %24 ], [ %31, %30 ], [ %12, %32 ], !dbg !8910
  %36 = phi i32 [ %11, %24 ], [ %11, %30 ], [ %33, %32 ], !dbg !8910
  %37 = phi i32 [ %25, %24 ], [ %10, %30 ], [ %10, %32 ], !dbg !8910
  call void @llvm.dbg.value(metadata i32 %18, metadata !8909, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8908, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 %13, metadata !8900, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 %37, metadata !8899, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 %36, metadata !8898, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 %35, metadata !8897, metadata !DIExpression()), !dbg !8910
  %38 = load i8*, i8** %2, align 4, !dbg !8911
  %39 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %38, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8912
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %39, metadata !8908, metadata !DIExpression()), !dbg !8910
  %40 = icmp eq %struct.ztest_unit_test* %39, null, !dbg !8913
  br i1 %40, label %41, label %6, !dbg !8914, !llvm.loop !8937

41:                                               ; preds = %34
  %42 = icmp eq i32 %13, %37, !dbg !8939
  br i1 %42, label %58, label %43, !dbg !8941

43:                                               ; preds = %41
  %44 = icmp sgt i32 %36, 0, !dbg !8942
  %45 = zext i1 %44 to i32, !dbg !8944
  call void @llvm.dbg.value(metadata i32 %45, metadata !8907, metadata !DIExpression()), !dbg !8910
  %46 = sub nsw i32 %13, %37, !dbg !8945
  call void @llvm.dbg.value(metadata i32 %46, metadata !8901, metadata !DIExpression()), !dbg !8910
  %47 = mul nsw i32 %35, 100000, !dbg !8946
  call void @llvm.dbg.value(metadata i32 %47, metadata !8902, metadata !DIExpression()), !dbg !8910
  %48 = sdiv i32 %47, %46, !dbg !8947
  call void @llvm.dbg.value(metadata i32 %48, metadata !8903, metadata !DIExpression()), !dbg !8910
  %49 = sdiv i32 %48, 1000, !dbg !8948
  call void @llvm.dbg.value(metadata i32 %49, metadata !8904, metadata !DIExpression()), !dbg !8910
  %50 = mul nsw i32 %49, -1000, !dbg !8949
  %51 = add i32 %50, %48, !dbg !8950
  %52 = sdiv i32 %51, 10, !dbg !8951
  call void @llvm.dbg.value(metadata i32 %52, metadata !8905, metadata !DIExpression()), !dbg !8910
  %53 = mul nsw i32 %52, -10, !dbg !8952
  %54 = add i32 %53, %51, !dbg !8953
  call void @llvm.dbg.value(metadata i32 %54, metadata !8906, metadata !DIExpression()), !dbg !8910
  %55 = icmp sgt i32 %54, 4, !dbg !8954
  %56 = zext i1 %55 to i32, !dbg !8956
  %57 = add nsw i32 %52, %56, !dbg !8956
  br label %58, !dbg !8956

58:                                               ; preds = %1, %43, %41
  %59 = phi i32 [ %18, %41 ], [ %18, %43 ], [ 0, %1 ]
  %60 = phi i32 [ %13, %41 ], [ %13, %43 ], [ 0, %1 ]
  %61 = phi i32 [ %37, %41 ], [ %37, %43 ], [ 0, %1 ]
  %62 = phi i32 [ %36, %41 ], [ %36, %43 ], [ 0, %1 ]
  %63 = phi i32 [ %35, %41 ], [ %35, %43 ], [ 0, %1 ]
  %64 = phi i32 [ 0, %41 ], [ %49, %43 ], [ 0, %1 ], !dbg !8957
  %65 = phi i32 [ 0, %41 ], [ %57, %43 ], [ 0, %1 ], !dbg !8957
  %66 = phi i32 [ 2, %41 ], [ %45, %43 ], [ 2, %1 ], !dbg !8957
  call void @llvm.dbg.value(metadata i32 %66, metadata !8907, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 %65, metadata !8905, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 %64, metadata !8904, metadata !DIExpression()), !dbg !8910
  %67 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %66) #24, !dbg !8958
  %68 = load i8*, i8** %2, align 4, !dbg !8958
  %69 = freeze i32 %59
  %70 = udiv i32 %69, 1000, !dbg !8958
  %71 = mul i32 %70, 1000
  %72 = sub i32 %69, %71
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.32.119, i32 0, i32 0), i8* noundef %67, i32 noundef %64, i32 noundef %65, i8* noundef %68, i32 noundef %63, i32 noundef %62, i32 noundef %61, i32 noundef %60, i32 noundef %70, i32 noundef %72) #25, !dbg !8958
  ret void, !dbg !8959
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8960 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8962, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8963, metadata !DIExpression()), !dbg !8964
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8963, metadata !DIExpression()), !dbg !8964
  %3 = load i8*, i8** %2, align 4, !dbg !8965
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8966
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8963, metadata !DIExpression()), !dbg !8964
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8967
  br i1 %5, label %22, label %6, !dbg !8968

6:                                                ; preds = %1, %6
  %7 = phi %struct.ztest_unit_test* [ %20, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8969
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8969
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8971
  store i32 0, i32* %10, align 4, !dbg !8972
  %11 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8973
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %11, i32 0, i32 1, !dbg !8974
  store i32 0, i32* %12, align 4, !dbg !8975
  %13 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8976
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %13, i32 0, i32 2, !dbg !8977
  store i32 0, i32* %14, align 4, !dbg !8978
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8979
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8980
  store i32 0, i32* %16, align 4, !dbg !8981
  %17 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8982
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %17, i32 0, i32 4, !dbg !8983
  store i32 0, i32* %18, align 4, !dbg !8984
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8963, metadata !DIExpression()), !dbg !8964
  %19 = load i8*, i8** %2, align 4, !dbg !8965
  %20 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %19, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8966
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %20, metadata !8963, metadata !DIExpression()), !dbg !8964
  %21 = icmp eq %struct.ztest_unit_test* %20, null, !dbg !8967
  br i1 %21, label %22, label %6, !dbg !8968, !llvm.loop !8985

22:                                               ; preds = %6, %1
  ret void, !dbg !8987
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_verify_all_test_suites_ran() local_unnamed_addr #1 !dbg !8988 {
  call void @llvm.dbg.value(metadata i8 1, metadata !8990, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8991, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.value(metadata i8 poison, metadata !8990, metadata !DIExpression()), !dbg !8993
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %3, label %1, !dbg !8994

1:                                                ; preds = %14, %0
  %2 = phi i1 [ true, %0 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !8992, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.value(metadata i8 poison, metadata !8990, metadata !DIExpression()), !dbg !8993
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %18, label %33, !dbg !8998

3:                                                ; preds = %0, %14
  %4 = phi %struct.ztest_suite_node* [ %16, %14 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  %5 = phi i1 [ %15, %14 ], [ true, %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8991, metadata !DIExpression()), !dbg !8993
  %6 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 6, !dbg !9000
  %7 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %6, align 4, !dbg !9000
  %8 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %7, i32 0, i32 0, !dbg !9004
  %9 = load i32, i32* %8, align 4, !dbg !9004
  %10 = icmp eq i32 %9, 0, !dbg !9005
  br i1 %10, label %11, label %14, !dbg !9006

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 0, !dbg !9007
  %13 = load i8*, i8** %12, align 4, !dbg !9007
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.120, i32 0, i32 0), i8* noundef %13) #25, !dbg !9009
  call void @llvm.dbg.value(metadata i8 0, metadata !8990, metadata !DIExpression()), !dbg !8993
  br label %14, !dbg !9010

14:                                               ; preds = %3, %11
  %15 = phi i1 [ false, %11 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8990, metadata !DIExpression()), !dbg !8993
  %16 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 1, !dbg !9011
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %16, metadata !8991, metadata !DIExpression()), !dbg !8993
  %17 = icmp ult %struct.ztest_suite_node* %16, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !9012
  br i1 %17, label %3, label %1, !dbg !8994, !llvm.loop !9013

18:                                               ; preds = %1, %29
  %19 = phi %struct.ztest_unit_test* [ %31, %29 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %1 ]
  %20 = phi i1 [ %30, %29 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8992, metadata !DIExpression()), !dbg !8993
  %21 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 0, !dbg !9015
  %22 = load i8*, i8** %21, align 4, !dbg !9015
  %23 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %22) #24, !dbg !9018
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %23, metadata !8991, metadata !DIExpression()), !dbg !8993
  %24 = icmp eq %struct.ztest_suite_node* %23, null, !dbg !9019
  br i1 %24, label %25, label %29, !dbg !9021

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !9022
  %27 = load i8*, i8** %26, align 4, !dbg !9022
  %28 = load i8*, i8** %21, align 4, !dbg !9024
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8.121, i32 0, i32 0), i8* noundef %27, i8* noundef %28) #25, !dbg !9025
  call void @llvm.dbg.value(metadata i8 0, metadata !8990, metadata !DIExpression()), !dbg !8993
  br label %29, !dbg !9026

29:                                               ; preds = %18, %25
  %30 = phi i1 [ false, %25 ], [ %20, %18 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8990, metadata !DIExpression()), !dbg !8993
  %31 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 1, !dbg !9027
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %31, metadata !8992, metadata !DIExpression()), !dbg !8993
  %32 = icmp ult %struct.ztest_unit_test* %31, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9028
  br i1 %32, label %18, label %33, !dbg !8998, !llvm.loop !9029

33:                                               ; preds = %29, %1
  %34 = phi i1 [ %2, %1 ], [ %30, %29 ]
  br i1 %34, label %36, label %35, !dbg !9031

35:                                               ; preds = %33
  store i32 1, i32* @test_status, align 4, !dbg !9032
  br label %36, !dbg !9035

36:                                               ; preds = %35, %33
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !8992, metadata !DIExpression()), !dbg !8993
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %37, label %60, !dbg !9036

37:                                               ; preds = %36, %57
  %38 = phi %struct.ztest_unit_test* [ %58, %57 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %36 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %38, metadata !8992, metadata !DIExpression()), !dbg !8993
  %39 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 4, !dbg !9038
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %39, align 4, !dbg !9038
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !9042
  %42 = load i32, i32* %41, align 4, !dbg !9042
  %43 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 3, !dbg !9043
  %44 = load i32, i32* %43, align 4, !dbg !9043
  %45 = add i32 %44, %42, !dbg !9044
  %46 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 1, !dbg !9045
  %47 = load i32, i32* %46, align 4, !dbg !9045
  %48 = add i32 %45, %47, !dbg !9046
  %49 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 0, !dbg !9047
  %50 = load i32, i32* %49, align 4, !dbg !9047
  %51 = icmp eq i32 %48, %50, !dbg !9048
  br i1 %51, label %57, label %52, !dbg !9049

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 0, !dbg !9050
  %54 = load i8*, i8** %53, align 4, !dbg !9050
  %55 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 1, !dbg !9052
  %56 = load i8*, i8** %55, align 4, !dbg !9052
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.122, i32 0, i32 0), i8* noundef %54, i8* noundef %56) #25, !dbg !9053
  store i32 1, i32* @test_status, align 4, !dbg !9054
  br label %57, !dbg !9055

57:                                               ; preds = %37, %52
  %58 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 1, !dbg !9056
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %58, metadata !8992, metadata !DIExpression()), !dbg !8993
  %59 = icmp ult %struct.ztest_unit_test* %58, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9057
  br i1 %59, label %37, label %60, !dbg !9036, !llvm.loop !9058

60:                                               ; preds = %57, %36
  ret void, !dbg !9060
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_run_all(i8* noundef %0) local_unnamed_addr #1 !dbg !9061 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9063, metadata !DIExpression()), !dbg !9064
  %2 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 0), align 4, !dbg !9065
  tail call void %2(i8* noundef %0) #25, !dbg !9066
  ret void, !dbg !9067
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @test_main() local_unnamed_addr #1 !dbg !9068 {
  tail call void @ztest_run_all(i8* noundef null) #24, !dbg !9069
  tail call void @ztest_verify_all_test_suites_ran() #24, !dbg !9070
  ret void, !dbg !9071
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !9072 {
  tail call void @test_main() #24, !dbg !9073
  tail call void @end_report() #24, !dbg !9074
  ret void, !dbg !9075
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ztest_run_all(i8* noundef %0) #1 !dbg !9076 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9078, metadata !DIExpression()), !dbg !9079
  tail call fastcc void @ztest_run_test_suites(i8* noundef %0) #24, !dbg !9080
  ret void, !dbg !9081
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_ztest_should_suite_run(i8* noundef %0, %struct.ztest_suite_node* nocapture noundef readonly %1) #1 !dbg !9082 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9084, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %1, metadata !9085, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata i8 1, metadata !9086, metadata !DIExpression()), !dbg !9087
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %1, i32 0, i32 5, !dbg !9088
  %4 = load i1 (i8*)*, i1 (i8*)** %3, align 4, !dbg !9088
  %5 = icmp eq i1 (i8*)* %4, null, !dbg !9090
  br i1 %5, label %8, label %6, !dbg !9091

6:                                                ; preds = %2
  %7 = tail call zeroext i1 %4(i8* noundef %0) #25, !dbg !9092
  call void @llvm.dbg.value(metadata i1 %7, metadata !9086, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9087
  br label %8, !dbg !9094

8:                                                ; preds = %6, %2
  %9 = phi i1 [ %7, %6 ], [ true, %2 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9086, metadata !DIExpression()), !dbg !9087
  ret i1 %9, !dbg !9095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @z_ztest_should_test_run(i8* nocapture readnone %0, i8* nocapture readnone %1) #2 !dbg !9096 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9098, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i8* undef, metadata !9099, metadata !DIExpression()), !dbg !9100
  ret i1 true, !dbg !9101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ztest_run_test_suites(i8* noundef %0) unnamed_addr #1 !dbg !9102 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9105, metadata !DIExpression()), !dbg !9106
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9107, !srcloc !9109
  %2 = tail call i32 @z_impl_ztest_run_test_suites(i8* noundef %0) #25, !dbg !9110
  ret void, !dbg !9111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @ztest_relative_filename(i8* noundef readnone returned %0) local_unnamed_addr #2 !dbg !9112 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9116, metadata !DIExpression()), !dbg !9117
  ret i8* %0, !dbg !9118
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9119 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9121, metadata !DIExpression()), !dbg !9122
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9123
  ret void, !dbg !9124
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9129, metadata !DIExpression()), !dbg !9135
  call void @llvm.dbg.value(metadata i32 %1, metadata !9130, metadata !DIExpression()), !dbg !9135
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9131, metadata !DIExpression()), !dbg !9135
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9136
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9136
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9136
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9132, metadata !DIExpression()), !dbg !9135
  call void @llvm.dbg.value(metadata i32 %0, metadata !9134, metadata !DIExpression()), !dbg !9135
  %7 = icmp slt i32 %0, %1, !dbg !9137
  br i1 %7, label %8, label %22, !dbg !9140

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9134, metadata !DIExpression()), !dbg !9135
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9141
  %11 = icmp eq i32 %10, 0, !dbg !9141
  br i1 %11, label %19, label %12, !dbg !9144

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9145
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9147
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9147
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9149
  br i1 %15, label %19, label %16, !dbg !9150

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9151
  %18 = load i8*, i8** %17, align 4, !dbg !9151
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9152
  br label %19, !dbg !9153

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9154
  call void @llvm.dbg.value(metadata i32 %20, metadata !9134, metadata !DIExpression()), !dbg !9135
  %21 = icmp eq i32 %20, %1, !dbg !9137
  br i1 %21, label %22, label %8, !dbg !9140, !llvm.loop !9155

22:                                               ; preds = %19, %3
  ret void, !dbg !9157
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !9158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9160, metadata !DIExpression()), !dbg !9161
  %2 = shl nuw i32 1, %0, !dbg !9162
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9165
  ret i32 %3, !dbg !9166
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !9167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9171, metadata !DIExpression()), !dbg !9172
  %2 = shl nuw i32 1, %0, !dbg !9173
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9176
  ret void, !dbg !9177
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9181, metadata !DIExpression()), !dbg !9182
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9183
  ret void, !dbg !9184
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9185 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9187, metadata !DIExpression()), !dbg !9188
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9189
  %3 = and i32 %2, %0, !dbg !9189
  %4 = icmp eq i32 %3, %0, !dbg !9190
  %5 = zext i1 %4 to i32, !dbg !9190
  ret i32 %5, !dbg !9191
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9192 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9194, metadata !DIExpression()), !dbg !9195
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9196
  ret void, !dbg !9197
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9198 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9200, metadata !DIExpression()), !dbg !9201
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9202
  ret void, !dbg !9203
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9204 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9206, metadata !DIExpression()), !dbg !9207
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9208
  ret void, !dbg !9209
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9210 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9212, metadata !DIExpression()), !dbg !9213
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9214
  ret void, !dbg !9215
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9216 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9218, metadata !DIExpression()), !dbg !9219
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9220
  ret void, !dbg !9221
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9222 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9224, metadata !DIExpression()), !dbg !9225
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9226
  ret void, !dbg !9227
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9228 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9230, metadata !DIExpression()), !dbg !9231
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9232
  ret void, !dbg !9233
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9234 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9236, metadata !DIExpression()), !dbg !9237
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9238
  ret void, !dbg !9239
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9240 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9242, metadata !DIExpression()), !dbg !9243
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9244
  ret void, !dbg !9245
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9246 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9248, metadata !DIExpression()), !dbg !9249
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9250
  ret void, !dbg !9251
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9252 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9254, metadata !DIExpression()), !dbg !9255
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9256
  ret i32 0, !dbg !9257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !887 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !891, metadata !DIExpression()), !dbg !9258
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9259
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9261
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9263
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9265
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9267
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9269
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9271
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9273
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9275
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9277
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9279
  ret void, !dbg !9281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9284, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata i32 0, metadata !9285, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata i32 undef, metadata !9285, metadata !DIExpression()), !dbg !9286
  %2 = lshr i32 6684671, %0, !dbg !9287
  %3 = and i32 %2, 1, !dbg !9287
  %4 = or i32 %3, %0, !dbg !9289
  %5 = icmp eq i32 %4, 0, !dbg !9289
  br i1 %5, label %6, label %7, !dbg !9289

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9290
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9290
  unreachable, !dbg !9290

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9295
  %9 = load i32, i32* %8, align 4, !dbg !9295
  call void @llvm.dbg.value(metadata i32 %9, metadata !9285, metadata !DIExpression()), !dbg !9286
  %10 = shl nuw i32 1, %0, !dbg !9296
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !9297
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !9298
  ret void, !dbg !9299
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9302, metadata !DIExpression()), !dbg !9303
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9304
  %3 = or i32 %2, %0, !dbg !9304
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9304
  ret void, !dbg !9305
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !9306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9308, metadata !DIExpression()), !dbg !9309
  %2 = icmp slt i32 %0, 32, !dbg !9310
  br i1 %2, label %3, label %5, !dbg !9312

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9313
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9315
  br label %5, !dbg !9316

5:                                                ; preds = %1, %3
  ret void, !dbg !9317
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9320, metadata !DIExpression()), !dbg !9321
  %2 = xor i32 %0, -1, !dbg !9322
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9322
  %4 = and i32 %3, %2, !dbg !9322
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9322
  ret void, !dbg !9323
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !9324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9328, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i32 %1, metadata !9329, metadata !DIExpression()), !dbg !9330
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9331

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9332
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9334
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9335
  br label %11, !dbg !9336

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9337
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9338
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9339
  br label %11, !dbg !9340

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9341
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9342
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9343
  br label %11, !dbg !9344

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9345
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9346
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9347
  br label %11, !dbg !9348

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9349
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9352, metadata !DIExpression()), !dbg !9353
  %2 = xor i32 %0, -1, !dbg !9354
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9354
  %4 = and i32 %3, %2, !dbg !9354
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9354
  ret void, !dbg !9355
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9358, metadata !DIExpression()), !dbg !9359
  %2 = xor i32 %0, -1, !dbg !9360
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9360
  %4 = and i32 %3, %2, !dbg !9360
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9360
  ret void, !dbg !9361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9364, metadata !DIExpression()), !dbg !9365
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9366
  %3 = or i32 %2, %0, !dbg !9366
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9366
  ret void, !dbg !9367
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9370, metadata !DIExpression()), !dbg !9371
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9372
  %3 = or i32 %2, %0, !dbg !9372
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9372
  ret void, !dbg !9373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9378, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9379, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.value(metadata i8* %2, metadata !9380, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !9381, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9383, metadata !DIExpression()), !dbg !9384
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9385
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9385
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9387
  br i1 %6, label %7, label %9, !dbg !9388

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9389
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9390
  store i8* %2, i8** %8, align 4, !dbg !9391
  br label %9, !dbg !9392

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9384
  ret i32 %10, !dbg !9393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !9394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9396, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !9397, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9398, metadata !DIExpression()), !dbg !9399
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9400
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9401
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9402
  store i8* null, i8** %3, align 4, !dbg !9403
  ret void, !dbg !9404
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9405 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9407, metadata !DIExpression()), !dbg !9412
  call void @llvm.dbg.value(metadata i8* %1, metadata !9408, metadata !DIExpression()), !dbg !9412
  call void @llvm.dbg.value(metadata i8* %1, metadata !9409, metadata !DIExpression()), !dbg !9412
  %3 = bitcast i8* %1 to i32*, !dbg !9413
  %4 = load i32, i32* %3, align 4, !dbg !9413
  %5 = add i32 %4, -169, !dbg !9413
  %6 = icmp ult i32 %5, -121, !dbg !9413
  br i1 %6, label %15, label %7, !dbg !9415

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9416
  %9 = inttoptr i32 %8 to i32*, !dbg !9417
  call void @llvm.dbg.value(metadata i32* %9, metadata !9410, metadata !DIExpression()), !dbg !9412
  %10 = load volatile i32, i32* %9, align 4, !dbg !9418
  call void @llvm.dbg.value(metadata i32 %10, metadata !9411, metadata !DIExpression()), !dbg !9412
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9419
  %12 = bitcast i8* %11 to i32*, !dbg !9419
  %13 = load i32, i32* %12, align 4, !dbg !9419
  %14 = or i32 %13, %10, !dbg !9420
  call void @llvm.dbg.value(metadata i32 %14, metadata !9411, metadata !DIExpression()), !dbg !9412
  store volatile i32 %14, i32* %9, align 4, !dbg !9421
  br label %15, !dbg !9422

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9412
  ret i32 %16, !dbg !9423
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9424 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9426, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i8* %1, metadata !9427, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i8* %1, metadata !9428, metadata !DIExpression()), !dbg !9431
  %3 = bitcast i8* %1 to i32*, !dbg !9432
  %4 = load i32, i32* %3, align 4, !dbg !9432
  %5 = add i32 %4, -169, !dbg !9432
  %6 = icmp ult i32 %5, -121, !dbg !9432
  br i1 %6, label %16, label %7, !dbg !9434

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9435
  %9 = inttoptr i32 %8 to i32*, !dbg !9436
  call void @llvm.dbg.value(metadata i32* %9, metadata !9429, metadata !DIExpression()), !dbg !9431
  %10 = load volatile i32, i32* %9, align 4, !dbg !9437
  call void @llvm.dbg.value(metadata i32 %10, metadata !9430, metadata !DIExpression()), !dbg !9431
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9438
  %12 = bitcast i8* %11 to i32*, !dbg !9438
  %13 = load i32, i32* %12, align 4, !dbg !9438
  %14 = xor i32 %13, -1, !dbg !9439
  %15 = and i32 %10, %14, !dbg !9440
  call void @llvm.dbg.value(metadata i32 %15, metadata !9430, metadata !DIExpression()), !dbg !9431
  store volatile i32 %15, i32* %9, align 4, !dbg !9441
  br label %16, !dbg !9442

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9431
  ret i32 %17, !dbg !9443
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9444 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9446, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i8* %1, metadata !9447, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32* %2, metadata !9448, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i8* %1, metadata !9449, metadata !DIExpression()), !dbg !9454
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9455
  call void @llvm.dbg.value(metadata i32 %4, metadata !9450, metadata !DIExpression()), !dbg !9454
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #24, !dbg !9456
  call void @llvm.dbg.value(metadata i32 %5, metadata !9451, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 %5, metadata !9452, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 %4, metadata !9453, metadata !DIExpression()), !dbg !9454
  %6 = bitcast i8* %1 to i32*, !dbg !9457
  %7 = load i32, i32* %6, align 4, !dbg !9457
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !9458

8:                                                ; preds = %3
  br label %18, !dbg !9459

9:                                                ; preds = %3
  br label %18, !dbg !9461

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9462
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #24, !dbg !9463
  br label %18, !dbg !9464

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9465
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #24, !dbg !9466
  br label %18, !dbg !9467

16:                                               ; preds = %3
  br label %18, !dbg !9468

17:                                               ; preds = %3
  br label %18, !dbg !9469

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !9470
  br label %20, !dbg !9471

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !9454
  ret i32 %21, !dbg !9471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !9472 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9474, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i8* %1, metadata !9475, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i8* %2, metadata !9476, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i8* %1, metadata !9477, metadata !DIExpression()), !dbg !9482
  %4 = bitcast i8* %1 to i32*, !dbg !9483
  %5 = load i32, i32* %4, align 4, !dbg !9483
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9484
  call void @llvm.dbg.value(metadata i32 %6, metadata !9481, metadata !DIExpression()), !dbg !9482
  %7 = icmp slt i32 %6, 0, !dbg !9485
  br i1 %7, label %22, label %8, !dbg !9487

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9477, metadata !DIExpression()), !dbg !9482
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9488
  %10 = bitcast i8* %9 to i32*, !dbg !9488
  %11 = load i32, i32* %10, align 4, !dbg !9488
  %12 = lshr i32 %11, 16, !dbg !9488
  %13 = and i32 %12, 7, !dbg !9488
  %14 = lshr i32 %11, 8, !dbg !9489
  %15 = and i32 %14, 31, !dbg !9489
  %16 = shl i32 %13, %15, !dbg !9490
  call void @llvm.dbg.value(metadata i32 %16, metadata !9480, metadata !DIExpression()), !dbg !9482
  %17 = and i32 %11, 255, !dbg !9491
  %18 = or i32 %17, 1073887232, !dbg !9492
  %19 = inttoptr i32 %18 to i32*, !dbg !9493
  call void @llvm.dbg.value(metadata i32* %19, metadata !9478, metadata !DIExpression()), !dbg !9482
  %20 = load volatile i32, i32* %19, align 4, !dbg !9494
  call void @llvm.dbg.value(metadata i32 %20, metadata !9479, metadata !DIExpression()), !dbg !9482
  %21 = or i32 %16, %20, !dbg !9495
  call void @llvm.dbg.value(metadata i32 %21, metadata !9479, metadata !DIExpression()), !dbg !9482
  store volatile i32 %21, i32* %19, align 4, !dbg !9496
  br label %22, !dbg !9497

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9482
  ret i32 %23, !dbg !9498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #2 !dbg !9499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9503, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata i32 0, metadata !9504, metadata !DIExpression()), !dbg !9505
  %2 = add i32 %0, -1, !dbg !9506
  %3 = icmp ult i32 %2, 6, !dbg !9506
  br i1 %3, label %4, label %7, !dbg !9506

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9506
  %6 = load i32, i32* %5, align 4, !dbg !9506
  call void @llvm.dbg.value(metadata i32 %6, metadata !9504, metadata !DIExpression()), !dbg !9505
  br label %7, !dbg !9507

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9505
  ret i32 %8, !dbg !9508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #2 !dbg !9509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9513, metadata !DIExpression()), !dbg !9515
  call void @llvm.dbg.value(metadata i32 2, metadata !9514, metadata !DIExpression()), !dbg !9515
  %2 = lshr i32 %0, 1, !dbg !9516
  ret i32 %2, !dbg !9517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !9518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9522, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata i32 8, metadata !9523, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata i32 84, metadata !9524, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata i32 %1, metadata !9525, metadata !DIExpression()), !dbg !9526
  %3 = mul i32 %0, 84, !dbg !9527
  %4 = shl nsw i32 %1, 3, !dbg !9528
  %5 = udiv i32 %3, %4, !dbg !9529
  ret i32 %5, !dbg !9530
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9531 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9533, metadata !DIExpression()), !dbg !9536
  tail call void @config_enable_default_clocks() #25, !dbg !9537
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9538
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !9538
  %4 = lshr i32 %3, 4, !dbg !9538
  %5 = and i32 %4, 15, !dbg !9538
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9538
  %7 = load i8, i8* %6, align 1, !dbg !9538
  %8 = zext i8 %7 to i32, !dbg !9538
  %9 = lshr i32 %2, %8, !dbg !9538
  call void @llvm.dbg.value(metadata i32 %9, metadata !9534, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !9535, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9536
  %10 = icmp ult i32 %9, 84000000, !dbg !9539
  br i1 %10, label %11, label %13, !dbg !9541

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9542
  br label %13, !dbg !9544

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !9545
  tail call fastcc void @set_up_plls() #24, !dbg !9546
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9547
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !9550
  br label %14, !dbg !9551

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9552
  %16 = icmp eq i32 %15, 8, !dbg !9553
  br i1 %16, label %17, label %14, !dbg !9551, !llvm.loop !9554

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !9556
  br i1 %18, label %19, label %21, !dbg !9558

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9559
  br label %21, !dbg !9561

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !9562
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !9563
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !9564
  ret i32 0, !dbg !9565
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !9566 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9568
  %2 = and i32 %1, 240, !dbg !9568
  ret i32 %2, !dbg !9569
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !9570 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !9571
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !9576
  br label %1, !dbg !9577

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !9578
  %3 = icmp eq i32 %2, 1, !dbg !9579
  br i1 %3, label %4, label %1, !dbg !9577, !llvm.loop !9580

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !9582
  br label %5, !dbg !9585

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !9586
  %7 = icmp eq i32 %6, 1, !dbg !9587
  br i1 %7, label %8, label %5, !dbg !9585, !llvm.loop !9588

8:                                                ; preds = %5
  ret void, !dbg !9590
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9591 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9592
  %2 = icmp eq i32 %1, 8, !dbg !9594
  br i1 %2, label %3, label %4, !dbg !9595

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9596
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !9598
  br label %4, !dbg !9599

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !9600
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9601
  %6 = and i32 %5, -196609, !dbg !9601
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9601
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9602
  %8 = and i32 %7, -251658241, !dbg !9602
  %9 = or i32 %8, 134217728, !dbg !9602
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9602
  tail call void @config_pll_sysclock() #25, !dbg !9603
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !9604
  br label %10, !dbg !9605

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !9606
  %12 = icmp eq i32 %11, 1, !dbg !9607
  br i1 %12, label %13, label %10, !dbg !9605, !llvm.loop !9608

13:                                               ; preds = %10
  ret void, !dbg !9610
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !9611 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9613, metadata !DIExpression()), !dbg !9614
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9615
  %2 = and i32 %1, -241, !dbg !9615
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9615
  ret void, !dbg !9616
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !9617 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9619, metadata !DIExpression()), !dbg !9620
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9621
  %3 = and i32 %2, -4, !dbg !9621
  %4 = or i32 %3, %0, !dbg !9621
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9621
  ret void, !dbg !9622
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !9623 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9624
  %2 = and i32 %1, 12, !dbg !9624
  ret i32 %2, !dbg !9625
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !9626 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !9628, metadata !DIExpression()), !dbg !9629
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9630
  %2 = and i32 %1, -7169, !dbg !9630
  %3 = or i32 %2, 4096, !dbg !9630
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9630
  ret void, !dbg !9631
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !9632 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !9634, metadata !DIExpression()), !dbg !9635
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9636
  %2 = and i32 %1, -57345, !dbg !9636
  %3 = or i32 %2, 32768, !dbg !9636
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9636
  ret void, !dbg !9637
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !9638 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9639
  %2 = icmp eq i32 %1, 1, !dbg !9641
  br i1 %2, label %7, label %3, !dbg !9642

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9643
  br label %4, !dbg !9645

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9646
  %6 = icmp eq i32 %5, 1, !dbg !9647
  br i1 %6, label %7, label %4, !dbg !9645, !llvm.loop !9648

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !9650
  br label %8, !dbg !9651

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9652
  %10 = icmp eq i32 %9, 0, !dbg !9653
  br i1 %10, label %11, label %8, !dbg !9651, !llvm.loop !9654

11:                                               ; preds = %8
  ret void, !dbg !9656
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !9657 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9658
  %2 = and i32 %1, -16777217, !dbg !9658
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9658
  ret void, !dbg !9659
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !9660 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9661
  %2 = or i32 %1, 16777216, !dbg !9661
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9661
  ret void, !dbg !9662
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !9663 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9664
  %2 = lshr i32 %1, 25, !dbg !9665
  %3 = and i32 %2, 1, !dbg !9665
  ret i32 %3, !dbg !9666
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !9667 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9668
  %2 = lshr i32 %1, 1, !dbg !9669
  %3 = and i32 %2, 1, !dbg !9669
  ret i32 %3, !dbg !9670
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !9671 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9672
  %2 = or i32 %1, 1, !dbg !9672
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9672
  ret void, !dbg !9673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !9674 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9675
  %2 = and i32 %1, -262145, !dbg !9675
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9675
  ret void, !dbg !9676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !9677 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9678
  %2 = or i32 %1, 65536, !dbg !9678
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9678
  ret void, !dbg !9679
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !9680 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9681
  %2 = lshr i32 %1, 17, !dbg !9682
  %3 = and i32 %2, 1, !dbg !9682
  ret i32 %3, !dbg !9683
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !9684 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9685
  %2 = or i32 %1, 1, !dbg !9685
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9685
  ret void, !dbg !9686
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !9687 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9688
  %2 = lshr i32 %1, 1, !dbg !9689
  %3 = and i32 %2, 1, !dbg !9689
  ret i32 %3, !dbg !9690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #2 !dbg !9691 {
  ret i32 16000000, !dbg !9693
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !9697 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !9698
  ret void, !dbg !9699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !9700 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9704, metadata !DIExpression()), !dbg !9708
  call void @llvm.dbg.value(metadata i32 8, metadata !9705, metadata !DIExpression()), !dbg !9708
  call void @llvm.dbg.value(metadata i32 84, metadata !9706, metadata !DIExpression()), !dbg !9708
  call void @llvm.dbg.value(metadata i32 0, metadata !9707, metadata !DIExpression()), !dbg !9708
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9709
  %2 = and i32 %1, -4227072, !dbg !9709
  %3 = or i32 %2, 4199688, !dbg !9709
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9709
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9710
  %5 = and i32 %4, -196609, !dbg !9710
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9710
  ret void, !dbg !9711
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !9712 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !9713
  ret void, !dbg !9714
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !9715 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9718, metadata !DIExpression()), !dbg !9720
  %2 = bitcast i32* %1 to i8*, !dbg !9721
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9721
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9719, metadata !DIExpression()), !dbg !9722
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9723
  %4 = or i32 %3, 268435456, !dbg !9723
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9723
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9724
  %6 = and i32 %5, 268435456, !dbg !9724
  store volatile i32 %6, i32* %1, align 4, !dbg !9725
  %7 = load volatile i32, i32* %1, align 4, !dbg !9726
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9727
  ret void, !dbg !9727
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9728 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9730, metadata !DIExpression()), !dbg !9731
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !9732
  br i1 %2, label %3, label %4, !dbg !9734

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !9735
  br label %4, !dbg !9736

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9731
  ret i32 %5, !dbg !9737
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9738 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9743, metadata !DIExpression()), !dbg !9744
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9745, !srcloc !9747
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !9748
  ret i1 %1, !dbg !9749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9750 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9751
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9752
  ret void, !dbg !9753
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9756, metadata !DIExpression()), !dbg !9757
  %2 = icmp eq i32 %0, 10, !dbg !9758
  br i1 %2, label %3, label %4, !dbg !9760

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !9761
  br label %4, !dbg !9763

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9764
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !9765
  ret i32 %0, !dbg !9766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9767 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9770, metadata !DIExpression()), !dbg !9772
  call void @llvm.dbg.value(metadata i8 %0, metadata !9771, metadata !DIExpression()), !dbg !9772
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9773, !srcloc !9775
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !9776
  ret void, !dbg !9777
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9778 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9780, metadata !DIExpression()), !dbg !9783
  call void @llvm.dbg.value(metadata i8 %0, metadata !9781, metadata !DIExpression()), !dbg !9783
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9784
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9782, metadata !DIExpression()), !dbg !9783
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9785
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9785
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #25, !dbg !9786
  ret void, !dbg !9787
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9788 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9790, metadata !DIExpression()), !dbg !9791
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !9792
  ret i1 %1, !dbg !9793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #2 !dbg !9794 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9843, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9844, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9845, metadata !DIExpression()), !dbg !9846
  ret void, !dbg !9847
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9848 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9850, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.value(metadata i8 %1, metadata !9851, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.value(metadata i32 %2, metadata !9852, metadata !DIExpression()), !dbg !9855
  %5 = bitcast i32* %4 to i8*, !dbg !9856
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9856
  call void @llvm.dbg.value(metadata i32* %4, metadata !9854, metadata !DIExpression(DW_OP_deref)), !dbg !9855
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9857
  call void @llvm.dbg.value(metadata i32 %6, metadata !9853, metadata !DIExpression()), !dbg !9855
  %7 = icmp eq i32 %6, 0, !dbg !9858
  br i1 %7, label %8, label %31, !dbg !9860

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9853, metadata !DIExpression()), !dbg !9855
  %9 = and i32 %2, 131072, !dbg !9861
  %10 = icmp eq i32 %9, 0, !dbg !9863
  br i1 %10, label %28, label %11, !dbg !9864

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9865
  %13 = icmp eq i32 %12, 0, !dbg !9868
  br i1 %13, label %18, label %14, !dbg !9869

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9870
  %16 = shl nuw i32 1, %15, !dbg !9870
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9872
  br label %25, !dbg !9873

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9874
  %20 = icmp eq i32 %19, 0, !dbg !9876
  %21 = zext i8 %1 to i32, !dbg !9855
  br i1 %20, label %25, label %22, !dbg !9877

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9878
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9880
  br label %25, !dbg !9881

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9882
  %27 = load i32, i32* %4, align 4, !dbg !9883
  call void @llvm.dbg.value(metadata i32 %30, metadata !9854, metadata !DIExpression()), !dbg !9855
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9884
  br label %31, !dbg !9885

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9882
  %30 = load i32, i32* %4, align 4, !dbg !9883
  call void @llvm.dbg.value(metadata i32 %30, metadata !9854, metadata !DIExpression()), !dbg !9855
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9884
  call void @llvm.dbg.value(metadata i32 0, metadata !9853, metadata !DIExpression()), !dbg !9855
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9886
  ret i32 %6, !dbg !9886
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9887 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9891, metadata !DIExpression()), !dbg !9896
  call void @llvm.dbg.value(metadata i32* %1, metadata !9892, metadata !DIExpression()), !dbg !9896
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9897
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9897
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9897
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9893, metadata !DIExpression()), !dbg !9896
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9898
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9898
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9898
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9895, metadata !DIExpression()), !dbg !9896
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9899
  store i32 %9, i32* %1, align 4, !dbg !9900
  ret i32 0, !dbg !9901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9902 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9904, metadata !DIExpression()), !dbg !9910
  call void @llvm.dbg.value(metadata i32 %1, metadata !9905, metadata !DIExpression()), !dbg !9910
  call void @llvm.dbg.value(metadata i32 %2, metadata !9906, metadata !DIExpression()), !dbg !9910
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9911
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9911
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9911
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9907, metadata !DIExpression()), !dbg !9910
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9912
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9912
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9912
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9908, metadata !DIExpression()), !dbg !9910
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9913
  call void @llvm.dbg.value(metadata i32 %10, metadata !9909, metadata !DIExpression()), !dbg !9910
  %11 = xor i32 %1, -1, !dbg !9914
  %12 = and i32 %10, %11, !dbg !9915
  %13 = and i32 %2, %1, !dbg !9916
  %14 = or i32 %12, %13, !dbg !9917
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9918
  ret i32 0, !dbg !9919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9920 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9922, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.value(metadata i32 %1, metadata !9923, metadata !DIExpression()), !dbg !9926
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9927
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9927
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9927
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9924, metadata !DIExpression()), !dbg !9926
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9928
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9928
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9928
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9925, metadata !DIExpression()), !dbg !9926
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9929
  store volatile i32 %1, i32* %9, align 4, !dbg !9929
  ret i32 0, !dbg !9930
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9931 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9933, metadata !DIExpression()), !dbg !9937
  call void @llvm.dbg.value(metadata i32 %1, metadata !9934, metadata !DIExpression()), !dbg !9937
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9938
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9938
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9938
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9935, metadata !DIExpression()), !dbg !9937
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9939
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9939
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9939
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9936, metadata !DIExpression()), !dbg !9937
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9940
  ret i32 0, !dbg !9941
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9942 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9944, metadata !DIExpression()), !dbg !9948
  call void @llvm.dbg.value(metadata i32 %1, metadata !9945, metadata !DIExpression()), !dbg !9948
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9949
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9949
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9949
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9946, metadata !DIExpression()), !dbg !9948
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9950
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9950
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9950
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9947, metadata !DIExpression()), !dbg !9948
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9951
  %10 = load volatile i32, i32* %9, align 4, !dbg !9951
  %11 = xor i32 %10, %1, !dbg !9951
  store volatile i32 %11, i32* %9, align 4, !dbg !9951
  ret i32 0, !dbg !9952
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9953 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9955, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.value(metadata i8 %1, metadata !9956, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.value(metadata i32 %2, metadata !9957, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.value(metadata i32 %3, metadata !9958, metadata !DIExpression()), !dbg !9965
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9966
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9966
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9966
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9959, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.value(metadata i8* undef, metadata !9960, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.value(metadata i32 0, metadata !9962, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.value(metadata i32 0, metadata !9963, metadata !DIExpression()), !dbg !9965
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9967

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9968
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9972
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9973
  %12 = load i32, i32* %11, align 4, !dbg !9973
  %13 = icmp eq i32 %10, %12, !dbg !9974
  br i1 %13, label %14, label %29, !dbg !9975

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9976
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9978
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9979
  br label %29, !dbg !9980

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9981
  %17 = load i8*, i8** %16, align 4, !dbg !9981
  call void @llvm.dbg.value(metadata i8* %17, metadata !9960, metadata !DIExpression()), !dbg !9965
  %18 = zext i8 %1 to i32, !dbg !9982
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9984
  %20 = icmp eq i32 %19, 0, !dbg !9985
  br i1 %20, label %21, label %29, !dbg !9986

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9987
  %23 = load i32, i32* %22, align 4, !dbg !9987
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9988
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9989

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9962, metadata !DIExpression()), !dbg !9965
  br label %27, !dbg !9990

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9962, metadata !DIExpression()), !dbg !9965
  br label %27, !dbg !9992

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9962, metadata !DIExpression()), !dbg !9965
  br label %27, !dbg !9993

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9965
  call void @llvm.dbg.value(metadata i32 %28, metadata !9962, metadata !DIExpression()), !dbg !9965
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9994
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9995
  br label %29, !dbg !9995

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9965
  call void @llvm.dbg.value(metadata i32 %30, metadata !9963, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.label(metadata !9964), !dbg !9996
  ret i32 %30, !dbg !9997
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9998 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10000, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10001, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata i1 %2, metadata !10002, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10004
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10005
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10005
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10005
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10003, metadata !DIExpression()), !dbg !10004
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10006
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10007
  ret i32 %8, !dbg !10008
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10009 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10015, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10016, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.value(metadata i1 %2, metadata !10017, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10018
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10019
  br i1 %4, label %5, label %6, !dbg !10022

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10023
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.143, i32 0, i32 0)) #25, !dbg !10023
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10023
  unreachable, !dbg !10023

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10025
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10025
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10025
  br i1 %9, label %10, label %11, !dbg !10028

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10029
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.145, i32 0, i32 0)) #25, !dbg !10029
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10029
  unreachable, !dbg !10029

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10031
  br i1 %12, label %18, label %13, !dbg !10033

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10034
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !10037
  %16 = or i1 %15, %2, !dbg !10038
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10038
  br i1 %2, label %19, label %21, !dbg !10038

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10039

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10040
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !10043
  br label %21, !dbg !10044

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10018
  ret i32 %22, !dbg !10045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10046 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10050, metadata !DIExpression()), !dbg !10051
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10052
  %3 = icmp eq %struct._snode* %2, null, !dbg !10052
  ret i1 %3, !dbg !10052
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !10053 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10057, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10058, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10059, metadata !DIExpression()), !dbg !10061
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10062
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10060, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10059, metadata !DIExpression()), !dbg !10061
  %4 = icmp eq %struct._snode* %3, null, !dbg !10064
  br i1 %4, label %15, label %5, !dbg !10062

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10060, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10059, metadata !DIExpression()), !dbg !10061
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10066
  br i1 %6, label %9, label %11, !dbg !10069

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10060, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10059, metadata !DIExpression()), !dbg !10061
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10066
  br i1 %8, label %9, label %11, !dbg !10069, !llvm.loop !10070

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10071
  br label %15, !dbg !10071

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10060, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10059, metadata !DIExpression()), !dbg !10061
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10064
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10060, metadata !DIExpression()), !dbg !10061
  %14 = icmp eq %struct._snode* %13, null, !dbg !10064
  br i1 %14, label %15, label %7, !dbg !10062, !llvm.loop !10070

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10074 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10078, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10079, metadata !DIExpression()), !dbg !10080
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10081
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10081
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10081
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10082
  %5 = icmp eq %struct._snode* %4, null, !dbg !10082
  br i1 %5, label %6, label %8, !dbg !10081

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10084
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10084
  br label %8, !dbg !10084

8:                                                ; preds = %6, %2
  ret void, !dbg !10081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10086 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10090, metadata !DIExpression()), !dbg !10091
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10092
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10092
  ret %struct._snode* %3, !dbg !10093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10094 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10098, metadata !DIExpression()), !dbg !10100
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10099, metadata !DIExpression()), !dbg !10100
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10101
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10102
  ret void, !dbg !10103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10104 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10106, metadata !DIExpression()), !dbg !10108
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10107, metadata !DIExpression()), !dbg !10108
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10109
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10110
  ret void, !dbg !10111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10112 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10114, metadata !DIExpression()), !dbg !10115
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10116
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10116
  ret %struct._snode* %3, !dbg !10117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10118 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10120, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10121, metadata !DIExpression()), !dbg !10122
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10123
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10124
  ret void, !dbg !10125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10126 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10130, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10131, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10132, metadata !DIExpression()), !dbg !10133
  %4 = icmp eq %struct._snode* %1, null, !dbg !10134
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10136
  br i1 %4, label %6, label %11, !dbg !10137

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10138
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10140
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10140
  br i1 %8, label %9, label %15, !dbg !10138

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10142
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10142
  br label %15, !dbg !10142

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10144
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10146
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10146
  br i1 %13, label %14, label %15, !dbg !10144

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10148
  br label %15, !dbg !10148

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10137
  ret void, !dbg !10137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !10150 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10154, metadata !DIExpression()), !dbg !10155
  %2 = icmp eq %struct._snode* %0, null, !dbg !10156
  br i1 %2, label %5, label %3, !dbg !10156

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10156
  br label %5, !dbg !10156

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10156
  ret %struct._snode* %6, !dbg !10156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10157 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10159, metadata !DIExpression()), !dbg !10160
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10161
  ret %struct._snode* %2, !dbg !10161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10162 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10164, metadata !DIExpression()), !dbg !10165
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10166
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10166
  ret %struct._snode* %3, !dbg !10167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10170, metadata !DIExpression()), !dbg !10173
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10174, !range !10175
  call void @llvm.dbg.value(metadata i32 %2, metadata !10171, metadata !DIExpression()), !dbg !10173
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10176
  call void @llvm.dbg.value(metadata i32 %3, metadata !10172, metadata !DIExpression()), !dbg !10173
  ret i32 %3, !dbg !10177
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10180, metadata !DIExpression()), !dbg !10183
  call void @llvm.dbg.value(metadata i8* %1, metadata !10181, metadata !DIExpression()), !dbg !10183
  call void @llvm.dbg.value(metadata i8* %1, metadata !10182, metadata !DIExpression()), !dbg !10183
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10184
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10184
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10185
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10185
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10185
  %8 = shl nuw i32 1, %0, !dbg !10186
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10187
  ret void, !dbg !10188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10189 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10193, metadata !DIExpression()), !dbg !10199
  call void @llvm.dbg.value(metadata i32 %1, metadata !10194, metadata !DIExpression()), !dbg !10199
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10195, metadata !DIExpression()), !dbg !10199
  %4 = bitcast i64* %3 to i8*, !dbg !10200
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10200
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10197, metadata !DIExpression()), !dbg !10199
  store i64 70368744177732, i64* %3, align 8, !dbg !10201
  call void @llvm.dbg.value(metadata i64* %3, metadata !10197, metadata !DIExpression(DW_OP_deref)), !dbg !10199
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10202
  call void @llvm.dbg.value(metadata i32 %5, metadata !10198, metadata !DIExpression()), !dbg !10199
  %6 = icmp eq i32 %5, 0, !dbg !10203
  br i1 %6, label %7, label %8, !dbg !10205

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10206
  br label %8, !dbg !10207

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10208
  ret void, !dbg !10208
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10209 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10211, metadata !DIExpression()), !dbg !10214
  call void @llvm.dbg.value(metadata i8* %0, metadata !10212, metadata !DIExpression()), !dbg !10214
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10215
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10213, metadata !DIExpression()), !dbg !10214
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10216
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10216
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10217
  ret i32 %5, !dbg !10218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10221, metadata !DIExpression()), !dbg !10224
  call void @llvm.dbg.value(metadata i32 %1, metadata !10222, metadata !DIExpression()), !dbg !10224
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10225
  call void @llvm.dbg.value(metadata i32 %3, metadata !10223, metadata !DIExpression()), !dbg !10224
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10226
  ret void, !dbg !10227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #2 !dbg !10228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10232, metadata !DIExpression()), !dbg !10233
  %2 = sdiv i32 %0, 4, !dbg !10234
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10235
  %6 = add nsw i32 %5, 16, !dbg !10236
  %7 = shl i32 15, %6, !dbg !10237
  %8 = or i32 %7, %2, !dbg !10238
  ret i32 %8, !dbg !10239
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10244, metadata !DIExpression()), !dbg !10246
  call void @llvm.dbg.value(metadata i32 %1, metadata !10245, metadata !DIExpression()), !dbg !10246
  %3 = and i32 %1, 255, !dbg !10247
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10247
  %5 = load volatile i32, i32* %4, align 4, !dbg !10247
  %6 = lshr i32 %1, 16, !dbg !10247
  %7 = xor i32 %6, -1, !dbg !10247
  %8 = and i32 %5, %7, !dbg !10247
  call void @llvm.dbg.value(metadata i32 %6, metadata !10248, metadata !DIExpression()) #23, !dbg !10252
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10254, !srcloc !10255
  call void @llvm.dbg.value(metadata i32 %9, metadata !10251, metadata !DIExpression()) #23, !dbg !10252
  call void @llvm.dbg.value(metadata i32 %9, metadata !10256, metadata !DIExpression()) #23, !dbg !10261
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10263, !range !7451
  %11 = shl i32 %0, %10, !dbg !10247
  %12 = or i32 %11, %8, !dbg !10247
  store volatile i32 %12, i32* %4, align 4, !dbg !10247
  ret void, !dbg !10264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10265 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10269, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10270, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata i32 %2, metadata !10271, metadata !DIExpression()), !dbg !10274
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10275
  %5 = icmp eq %struct._snode* %4, null, !dbg !10275
  br i1 %5, label %24, label %6, !dbg !10275

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10277
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10273, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10272, metadata !DIExpression()), !dbg !10274
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10278
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10278
  %12 = load i32, i32* %11, align 4, !dbg !10278
  %13 = and i32 %12, %2, !dbg !10282
  %14 = icmp eq i32 %13, 0, !dbg !10282
  br i1 %14, label %22, label %15, !dbg !10283

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10284
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10284
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10284
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10284
  br i1 %19, label %20, label %21, !dbg !10288

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10289
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.145, i32 0, i32 0)) #25, !dbg !10289
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10289
  unreachable, !dbg !10289

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !10291
  br label %22, !dbg !10292

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10272, metadata !DIExpression()), !dbg !10274
  %23 = icmp eq %struct._snode* %8, null, !dbg !10293
  br i1 %23, label %24, label %6, !dbg !10293

24:                                               ; preds = %22, %3
  ret void, !dbg !10294
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10297, metadata !DIExpression()), !dbg !10298
  %2 = and i32 %0, 255, !dbg !10299
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10299
  %4 = load volatile i32, i32* %3, align 4, !dbg !10299
  %5 = lshr i32 %0, 16, !dbg !10299
  %6 = and i32 %4, %5, !dbg !10299
  call void @llvm.dbg.value(metadata i32 %5, metadata !10248, metadata !DIExpression()) #23, !dbg !10300
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10302, !srcloc !10255
  call void @llvm.dbg.value(metadata i32 %7, metadata !10251, metadata !DIExpression()) #23, !dbg !10300
  call void @llvm.dbg.value(metadata i32 %7, metadata !10256, metadata !DIExpression()) #23, !dbg !10303
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10305, !range !7451
  %9 = lshr i32 %6, %8, !dbg !10306
  ret i32 %9, !dbg !10307
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10308 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10313, metadata !DIExpression()), !dbg !10315
  call void @llvm.dbg.value(metadata i32 %1, metadata !10314, metadata !DIExpression()), !dbg !10315
  %3 = shl i32 %1, 16, !dbg !10316
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10316
  store volatile i32 %3, i32* %4, align 4, !dbg !10316
  ret void, !dbg !10317
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10318 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10322, metadata !DIExpression()), !dbg !10323
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10324
  %3 = load volatile i32, i32* %2, align 4, !dbg !10324
  ret i32 %3, !dbg !10325
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10326 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10328, metadata !DIExpression()), !dbg !10330
  call void @llvm.dbg.value(metadata i32 %1, metadata !10329, metadata !DIExpression()), !dbg !10330
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10331
  store volatile i32 %1, i32* %3, align 4, !dbg !10331
  ret void, !dbg !10332
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10333 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10335, metadata !DIExpression()), !dbg !10336
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10337
  %3 = load volatile i32, i32* %2, align 4, !dbg !10337
  ret i32 %3, !dbg !10338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10343, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.value(metadata i32* %1, metadata !10344, metadata !DIExpression()), !dbg !10345
  %3 = and i32 %0, 131072, !dbg !10346
  %4 = icmp eq i32 %3, 0, !dbg !10348
  br i1 %4, label %22, label %5, !dbg !10349

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10350
  %6 = and i32 %0, 2, !dbg !10352
  %7 = icmp eq i32 %6, 0, !dbg !10354
  br i1 %7, label %11, label %8, !dbg !10355

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10356
  %10 = icmp eq i32 %9, 0, !dbg !10356
  br i1 %10, label %33, label %11, !dbg !10359

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10360
  store i32 %12, i32* %1, align 4, !dbg !10360
  %13 = and i32 %0, 16, !dbg !10361
  %14 = icmp eq i32 %13, 0, !dbg !10363
  br i1 %14, label %17, label %15, !dbg !10364

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10365
  br label %31, !dbg !10367

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10368
  %19 = icmp eq i32 %18, 0, !dbg !10370
  br i1 %19, label %33, label %20, !dbg !10371

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10372
  br label %31, !dbg !10374

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10375
  %24 = icmp eq i32 %23, 0, !dbg !10377
  br i1 %24, label %31, label %25, !dbg !10378

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10379
  %27 = icmp eq i32 %26, 0, !dbg !10382
  br i1 %27, label %28, label %31, !dbg !10383

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10384
  br label %33, !dbg !10385

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10345
  ret i32 %34, !dbg !10385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10386 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10390, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %1, metadata !10391, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %2, metadata !10392, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %3, metadata !10393, metadata !DIExpression()), !dbg !10401
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10402
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10402
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10402
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10394, metadata !DIExpression()), !dbg !10401
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10403
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10403
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10403
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10395, metadata !DIExpression()), !dbg !10401
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10404
  call void @llvm.dbg.value(metadata i32 %11, metadata !10396, metadata !DIExpression()), !dbg !10401
  %12 = and i32 %2, 48, !dbg !10405
  call void @llvm.dbg.value(metadata i32 %12, metadata !10397, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %2, metadata !10398, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %2, metadata !10399, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %2, metadata !10400, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10401
  %13 = lshr i32 %2, 6, !dbg !10406
  %14 = and i32 %13, 1, !dbg !10406
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10407
  %15 = lshr i32 %2, 7, !dbg !10408
  %16 = and i32 %15, 3, !dbg !10408
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10409
  %17 = lshr i32 %2, 9, !dbg !10410
  %18 = and i32 %17, 3, !dbg !10410
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10411
  %19 = icmp eq i32 %12, 32, !dbg !10412
  br i1 %19, label %20, label %24, !dbg !10414

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10415
  br i1 %21, label %22, label %23, !dbg !10418

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10419
  br label %24, !dbg !10421

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10422
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10424
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10425
  ret void, !dbg !10426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #2 !dbg !10427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10429, metadata !DIExpression()), !dbg !10431
  %2 = shl nuw i32 1, %0, !dbg !10432
  call void @llvm.dbg.value(metadata i32 %2, metadata !10430, metadata !DIExpression()), !dbg !10431
  ret i32 %2, !dbg !10433
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10434 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10438, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.value(metadata i32 %1, metadata !10439, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.value(metadata i32 %2, metadata !10440, metadata !DIExpression()), !dbg !10441
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10442
  %5 = load volatile i32, i32* %4, align 4, !dbg !10442
  %6 = xor i32 %1, -1, !dbg !10442
  %7 = and i32 %5, %6, !dbg !10442
  %8 = mul i32 %2, %1, !dbg !10442
  %9 = or i32 %7, %8, !dbg !10442
  store volatile i32 %9, i32* %4, align 4, !dbg !10442
  ret void, !dbg !10443
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10444 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10446, metadata !DIExpression()), !dbg !10449
  call void @llvm.dbg.value(metadata i32 %1, metadata !10447, metadata !DIExpression()), !dbg !10449
  call void @llvm.dbg.value(metadata i32 %2, metadata !10448, metadata !DIExpression()), !dbg !10449
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10450
  %5 = load volatile i32, i32* %4, align 4, !dbg !10450
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()) #23, !dbg !10451
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10453, !srcloc !10255
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10451
  call void @llvm.dbg.value(metadata i32 %6, metadata !10256, metadata !DIExpression()) #23, !dbg !10454
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10456, !range !7451
  %8 = shl nuw nsw i32 %7, 1, !dbg !10450
  %9 = shl i32 3, %8, !dbg !10450
  %10 = xor i32 %9, -1, !dbg !10450
  %11 = and i32 %5, %10, !dbg !10450
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()) #23, !dbg !10457
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10457
  call void @llvm.dbg.value(metadata i32 %6, metadata !10256, metadata !DIExpression()) #23, !dbg !10459
  %12 = shl i32 %2, %8, !dbg !10450
  %13 = or i32 %11, %12, !dbg !10450
  store volatile i32 %13, i32* %4, align 4, !dbg !10450
  ret void, !dbg !10461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10462 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10464, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata i32 %1, metadata !10465, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata i32 %2, metadata !10466, metadata !DIExpression()), !dbg !10467
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10468
  %5 = load volatile i32, i32* %4, align 4, !dbg !10468
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()) #23, !dbg !10469
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10471, !srcloc !10255
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10469
  call void @llvm.dbg.value(metadata i32 %6, metadata !10256, metadata !DIExpression()) #23, !dbg !10472
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10474, !range !7451
  %8 = shl nuw nsw i32 %7, 1, !dbg !10468
  %9 = shl i32 3, %8, !dbg !10468
  %10 = xor i32 %9, -1, !dbg !10468
  %11 = and i32 %5, %10, !dbg !10468
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()) #23, !dbg !10475
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10475
  call void @llvm.dbg.value(metadata i32 %6, metadata !10256, metadata !DIExpression()) #23, !dbg !10477
  %12 = shl i32 %2, %8, !dbg !10468
  %13 = or i32 %11, %12, !dbg !10468
  store volatile i32 %13, i32* %4, align 4, !dbg !10468
  ret void, !dbg !10479
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10480 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10482, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.value(metadata i32 %1, metadata !10483, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.value(metadata i32 %2, metadata !10484, metadata !DIExpression()), !dbg !10485
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10486
  %5 = load volatile i32, i32* %4, align 4, !dbg !10486
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()) #23, !dbg !10487
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10489, !srcloc !10255
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10487
  call void @llvm.dbg.value(metadata i32 %6, metadata !10256, metadata !DIExpression()) #23, !dbg !10490
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10492, !range !7451
  %8 = shl nuw nsw i32 %7, 2, !dbg !10486
  %9 = shl i32 15, %8, !dbg !10486
  %10 = xor i32 %9, -1, !dbg !10486
  %11 = and i32 %5, %10, !dbg !10486
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()) #23, !dbg !10493
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10493
  call void @llvm.dbg.value(metadata i32 %6, metadata !10256, metadata !DIExpression()) #23, !dbg !10495
  %12 = shl i32 %2, %8, !dbg !10486
  %13 = or i32 %11, %12, !dbg !10486
  store volatile i32 %13, i32* %4, align 4, !dbg !10486
  ret void, !dbg !10497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10498 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10500, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata i32 %1, metadata !10501, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata i32 %2, metadata !10502, metadata !DIExpression()), !dbg !10503
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10504
  %5 = load volatile i32, i32* %4, align 4, !dbg !10504
  %6 = lshr i32 %1, 8, !dbg !10504
  call void @llvm.dbg.value(metadata i32 %6, metadata !10248, metadata !DIExpression()) #23, !dbg !10505
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10507, !srcloc !10255
  call void @llvm.dbg.value(metadata i32 %7, metadata !10251, metadata !DIExpression()) #23, !dbg !10505
  call void @llvm.dbg.value(metadata i32 %7, metadata !10256, metadata !DIExpression()) #23, !dbg !10508
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10510, !range !7451
  %9 = shl nuw nsw i32 %8, 2, !dbg !10504
  %10 = shl i32 15, %9, !dbg !10504
  %11 = xor i32 %10, -1, !dbg !10504
  %12 = and i32 %5, %11, !dbg !10504
  call void @llvm.dbg.value(metadata i32 %6, metadata !10248, metadata !DIExpression()) #23, !dbg !10511
  call void @llvm.dbg.value(metadata i32 %7, metadata !10251, metadata !DIExpression()) #23, !dbg !10511
  call void @llvm.dbg.value(metadata i32 %7, metadata !10256, metadata !DIExpression()) #23, !dbg !10513
  %13 = shl i32 %2, %9, !dbg !10504
  %14 = or i32 %12, %13, !dbg !10504
  store volatile i32 %14, i32* %4, align 4, !dbg !10504
  ret void, !dbg !10515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10516 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10518, metadata !DIExpression()), !dbg !10521
  call void @llvm.dbg.value(metadata i32 %1, metadata !10519, metadata !DIExpression()), !dbg !10521
  call void @llvm.dbg.value(metadata i32 %2, metadata !10520, metadata !DIExpression()), !dbg !10521
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10522
  %5 = load volatile i32, i32* %4, align 4, !dbg !10522
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()) #23, !dbg !10523
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10525, !srcloc !10255
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10523
  call void @llvm.dbg.value(metadata i32 %6, metadata !10256, metadata !DIExpression()) #23, !dbg !10526
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10528, !range !7451
  %8 = shl nuw nsw i32 %7, 1, !dbg !10522
  %9 = shl i32 3, %8, !dbg !10522
  %10 = xor i32 %9, -1, !dbg !10522
  %11 = and i32 %5, %10, !dbg !10522
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()) #23, !dbg !10529
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10529
  call void @llvm.dbg.value(metadata i32 %6, metadata !10256, metadata !DIExpression()) #23, !dbg !10531
  %12 = shl i32 %2, %8, !dbg !10522
  %13 = or i32 %11, %12, !dbg !10522
  store volatile i32 %13, i32* %4, align 4, !dbg !10522
  ret void, !dbg !10533
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10534 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10536, metadata !DIExpression()), !dbg !10539
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10540
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10540
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10540
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10537, metadata !DIExpression()), !dbg !10539
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10541
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10542
  %6 = tail call fastcc zeroext i1 @device_is_ready.155() #24, !dbg !10543
  br i1 %6, label %7, label %11, !dbg !10545

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10546
  call void @llvm.dbg.value(metadata i32 %8, metadata !10538, metadata !DIExpression()), !dbg !10539
  %9 = icmp slt i32 %8, 0, !dbg !10547
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10549
  br label %11, !dbg !10549

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10539
  ret i32 %12, !dbg !10550
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.155() unnamed_addr #1 !dbg !10551 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10555, metadata !DIExpression()), !dbg !10556
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10557, !srcloc !10559
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.156() #24, !dbg !10560
  ret i1 %1, !dbg !10561
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !10562 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10566, metadata !DIExpression()), !dbg !10571
  call void @llvm.dbg.value(metadata i8 1, metadata !10567, metadata !DIExpression()), !dbg !10571
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10572
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10572
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10572
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10568, metadata !DIExpression()), !dbg !10571
  call void @llvm.dbg.value(metadata i32 0, metadata !10569, metadata !DIExpression()), !dbg !10571
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10570, metadata !DIExpression()), !dbg !10571
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10573
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10576
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !10577
  call void @llvm.dbg.value(metadata i32 %7, metadata !10569, metadata !DIExpression()), !dbg !10571
  ret i32 %7, !dbg !10578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.156() unnamed_addr #1 !dbg !10579 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10581, metadata !DIExpression()), !dbg !10582
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !10583
  ret i1 %1, !dbg !10584
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10585 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10589, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata i32 %1, metadata !10590, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata i32 %2, metadata !10591, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata i32 %3, metadata !10592, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata i32 0, metadata !10593, metadata !DIExpression()), !dbg !10597
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !10598
  %5 = icmp eq i32 %3, 17, !dbg !10599
  br i1 %5, label %6, label %14, !dbg !10600

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10601
  call void @llvm.dbg.value(metadata i32 %7, metadata !10594, metadata !DIExpression()), !dbg !10602
  %8 = icmp eq i32 %7, 0, !dbg !10603
  %9 = shl nuw i32 1, %1, !dbg !10605
  br i1 %8, label %12, label %10, !dbg !10606

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10607
  br label %14, !dbg !10609

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10610
  br label %14, !dbg !10613

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10614
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !10615 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10617, metadata !DIExpression()), !dbg !10621
  call void @llvm.dbg.value(metadata i8* %1, metadata !10618, metadata !DIExpression()), !dbg !10621
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10622
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10622
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10622
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10619, metadata !DIExpression()), !dbg !10621
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10623
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10623
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !10625
  %9 = icmp eq i32 %8, 0, !dbg !10625
  br i1 %9, label %12, label %10, !dbg !10626

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10627
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !10629
  br label %12, !dbg !10630

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10631
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10633
  %15 = icmp eq i32 %14, 0, !dbg !10633
  br i1 %15, label %19, label %16, !dbg !10634

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10635
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !10636
  store i8 %18, i8* %1, align 1, !dbg !10637
  br label %19, !dbg !10638

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10621
  ret i32 %20, !dbg !10639
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10640 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10642, metadata !DIExpression()), !dbg !10646
  call void @llvm.dbg.value(metadata i8 %1, metadata !10643, metadata !DIExpression()), !dbg !10646
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10647
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10647
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10647
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10644, metadata !DIExpression()), !dbg !10646
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10648

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10649
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !10652
  %10 = icmp eq i32 %9, 0, !dbg !10652
  br i1 %10, label %18, label %11, !dbg !10653

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10654, !srcloc !10661
  call void @llvm.dbg.value(metadata i32 undef, metadata !10657, metadata !DIExpression()) #23, !dbg !10662
  call void @llvm.dbg.value(metadata i32 undef, metadata !10658, metadata !DIExpression()) #23, !dbg !10662
  call void @llvm.dbg.value(metadata i32 undef, metadata !10645, metadata !DIExpression()), !dbg !10646
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10663
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10665
  %15 = icmp eq i32 %14, 0, !dbg !10665
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10654
  br i1 %15, label %17, label %19, !dbg !10666

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10657, metadata !DIExpression()) #23, !dbg !10662
  call void @llvm.dbg.value(metadata i32 %16, metadata !10645, metadata !DIExpression()), !dbg !10646
  call void @llvm.dbg.value(metadata i32 undef, metadata !10667, metadata !DIExpression()) #23, !dbg !10670
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !10672, !srcloc !10673
  br label %18, !dbg !10674

18:                                               ; preds = %17, %7
  br label %7, !dbg !10649, !llvm.loop !10675

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10654
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10677
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !10678
  call void @llvm.dbg.value(metadata i32 %20, metadata !10667, metadata !DIExpression()) #23, !dbg !10679
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !10681, !srcloc !10673
  ret void, !dbg !10682
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !10683 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10685, metadata !DIExpression()), !dbg !10688
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10689
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10689
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10689
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10686, metadata !DIExpression()), !dbg !10688
  call void @llvm.dbg.value(metadata i32 0, metadata !10687, metadata !DIExpression()), !dbg !10688
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10690
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10690
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !10692
  %8 = icmp ne i32 %7, 0, !dbg !10692
  %9 = zext i1 %8 to i32, !dbg !10693
  call void @llvm.dbg.value(metadata i32 %9, metadata !10687, metadata !DIExpression()), !dbg !10688
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10694
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !10696
  %12 = icmp eq i32 %11, 0, !dbg !10696
  %13 = or i32 %9, 2, !dbg !10697
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10697
  call void @llvm.dbg.value(metadata i32 %14, metadata !10687, metadata !DIExpression()), !dbg !10688
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10698
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !10700
  %17 = icmp eq i32 %16, 0, !dbg !10700
  %18 = or i32 %14, 4, !dbg !10701
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10701
  call void @llvm.dbg.value(metadata i32 %19, metadata !10687, metadata !DIExpression()), !dbg !10688
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10702
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !10704
  %22 = icmp eq i32 %21, 0, !dbg !10704
  %23 = or i32 %19, 8, !dbg !10705
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10705
  call void @llvm.dbg.value(metadata i32 %24, metadata !10687, metadata !DIExpression()), !dbg !10688
  %25 = and i32 %24, 8, !dbg !10706
  %26 = icmp eq i32 %25, 0, !dbg !10706
  br i1 %26, label %29, label %27, !dbg !10708

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10709
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !10711
  br label %29, !dbg !10712

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10713
  %31 = icmp eq i32 %30, 0, !dbg !10713
  br i1 %31, label %34, label %32, !dbg !10715

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10716
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !10718
  br label %34, !dbg !10719

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10720
  %36 = icmp eq i32 %35, 0, !dbg !10720
  br i1 %36, label %39, label %37, !dbg !10722

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10723
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !10725
  br label %39, !dbg !10726

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10727
  %41 = icmp eq i32 %40, 0, !dbg !10727
  br i1 %41, label %44, label %42, !dbg !10729

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10730
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !10732
  br label %44, !dbg !10733

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10734
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !10735
  ret i32 %24, !dbg !10736
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10737 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10739, metadata !DIExpression()), !dbg !10748
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10740, metadata !DIExpression()), !dbg !10748
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10749
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10749
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10749
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10741, metadata !DIExpression()), !dbg !10748
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10750
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10750
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10750
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10742, metadata !DIExpression()), !dbg !10748
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10751
  %10 = load i8, i8* %9, align 4, !dbg !10751
  %11 = zext i8 %10 to i32, !dbg !10752
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !10753
  call void @llvm.dbg.value(metadata i32 %12, metadata !10744, metadata !DIExpression()), !dbg !10748
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10754
  %14 = load i8, i8* %13, align 1, !dbg !10754
  %15 = zext i8 %14 to i32, !dbg !10755
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !10756
  call void @llvm.dbg.value(metadata i32 %16, metadata !10745, metadata !DIExpression()), !dbg !10748
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10757
  %18 = load i8, i8* %17, align 2, !dbg !10757
  %19 = zext i8 %18 to i32, !dbg !10758
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !10759
  call void @llvm.dbg.value(metadata i32 %20, metadata !10746, metadata !DIExpression()), !dbg !10748
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10760
  %22 = load i8, i8* %21, align 1, !dbg !10760
  %23 = zext i8 %22 to i32, !dbg !10761
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !10762
  call void @llvm.dbg.value(metadata i32 %24, metadata !10747, metadata !DIExpression()), !dbg !10748
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10763

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10765
  br i1 %26, label %69, label %27, !dbg !10767

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10768

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10769
  br i1 %29, label %65, label %30, !dbg !10769

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10771
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10748
  br i1 %31, label %38, label %34, !dbg !10773

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10774
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !10774

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10777
  br i1 %37, label %38, label %69, !dbg !10778

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10779
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !10780
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !10781
  %41 = icmp eq i32 %12, %40, !dbg !10783
  br i1 %41, label %43, label %42, !dbg !10784

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !10785
  br label %43, !dbg !10787

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !10788
  %45 = icmp eq i32 %16, %44, !dbg !10790
  br i1 %45, label %47, label %46, !dbg !10791

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !10792
  br label %47, !dbg !10794

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !10795
  %49 = icmp eq i32 %20, %48, !dbg !10797
  br i1 %49, label %51, label %50, !dbg !10798

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !10799
  br label %51, !dbg !10801

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !10802
  %53 = icmp eq i32 %24, %52, !dbg !10804
  br i1 %53, label %55, label %54, !dbg !10805

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10806
  br label %55, !dbg !10808

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10809
  %57 = load i32, i32* %56, align 4, !dbg !10809
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10811
  %59 = load i32, i32* %58, align 4, !dbg !10811
  %60 = icmp eq i32 %57, %59, !dbg !10812
  br i1 %60, label %63, label %61, !dbg !10813

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10814
  %62 = load i32, i32* %56, align 4, !dbg !10816
  store i32 %62, i32* %58, align 4, !dbg !10817
  br label %63, !dbg !10818

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10819
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10820
  br label %69, !dbg !10821

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10769
  %67 = and i8 %66, 1, !dbg !10769
  %68 = icmp eq i8 %67, 0, !dbg !10769
  br i1 %68, label %30, label %69, !dbg !10769

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10748
  ret i32 %70, !dbg !10822
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10823 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10825, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10826, metadata !DIExpression()), !dbg !10828
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10829
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10829
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10829
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10827, metadata !DIExpression()), !dbg !10828
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10830
  %7 = load i32, i32* %6, align 4, !dbg !10830
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10831
  store i32 %7, i32* %8, align 4, !dbg !10832
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10833, !range !10834
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10835
  %11 = trunc i32 %10 to i8, !dbg !10835
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10836
  store i8 %11, i8* %12, align 4, !dbg !10837
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10838, !range !10839
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10840
  %15 = trunc i32 %14 to i8, !dbg !10840
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10841
  store i8 %15, i8* %16, align 1, !dbg !10842
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10843
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10844, !range !10834
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10845
  %20 = trunc i32 %19 to i8, !dbg !10845
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10846
  store i8 %20, i8* %21, align 2, !dbg !10847
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10848, !range !10849
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10850
  %24 = trunc i32 %23 to i8, !dbg !10850
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10851
  store i8 %24, i8* %25, align 1, !dbg !10852
  ret i32 0, !dbg !10853
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10854 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10858, metadata !DIExpression()), !dbg !10860
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10861
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10861
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10861
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10859, metadata !DIExpression()), !dbg !10860
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10862
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10862
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10863
  ret i32 %7, !dbg !10864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #2 !dbg !10865 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10869, metadata !DIExpression()), !dbg !10870
  %2 = icmp eq i32 %0, 1024, !dbg !10871
  %3 = select i1 %2, i32 2, i32 0, !dbg !10871
  %4 = icmp eq i32 %0, 1536, !dbg !10871
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10871
  ret i32 %5, !dbg !10872
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10873 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10875, metadata !DIExpression()), !dbg !10877
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10878
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10878
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10878
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10876, metadata !DIExpression()), !dbg !10877
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10879
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10879
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10880
  ret i32 %7, !dbg !10881
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10882 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10886, metadata !DIExpression()), !dbg !10887
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10888
  %3 = icmp ult i32 %2, 4, !dbg !10888
  br i1 %3, label %4, label %7, !dbg !10888

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10888
  %6 = load i32, i32* %5, align 4, !dbg !10888
  br label %7, !dbg !10888

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10889
  ret i32 %8, !dbg !10891
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10892 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10894, metadata !DIExpression()), !dbg !10896
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10897
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10897
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10897
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10895, metadata !DIExpression()), !dbg !10896
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10898
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10898
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10899
  ret i32 %7, !dbg !10900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !10901 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10905, metadata !DIExpression()), !dbg !10907
  call void @llvm.dbg.value(metadata i32 %1, metadata !10906, metadata !DIExpression()), !dbg !10907
  %3 = icmp eq i32 %0, 4096, !dbg !10908
  %4 = icmp eq i32 %1, 0, !dbg !10908
  %5 = select i1 %4, i32 4, i32 3, !dbg !10908
  %6 = select i1 %4, i32 3, i32 2, !dbg !10908
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10908
  ret i32 %7, !dbg !10909
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10910 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10912, metadata !DIExpression()), !dbg !10914
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10915
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10915
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10915
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10913, metadata !DIExpression()), !dbg !10914
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10916
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10916
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10917
  ret i32 %7, !dbg !10918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #2 !dbg !10919 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10923, metadata !DIExpression()), !dbg !10924
  %2 = icmp eq i32 %0, 768, !dbg !10925
  %3 = zext i1 %2 to i32, !dbg !10924
  ret i32 %3, !dbg !10927
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10928 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10933, metadata !DIExpression()), !dbg !10934
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10935
  %3 = load volatile i32, i32* %2, align 4, !dbg !10935
  %4 = and i32 %3, 768, !dbg !10935
  ret i32 %4, !dbg !10936
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10937 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10939, metadata !DIExpression()), !dbg !10940
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10941
  %3 = load volatile i32, i32* %2, align 4, !dbg !10941
  %4 = and i32 %3, 4096, !dbg !10941
  ret i32 %4, !dbg !10942
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10943 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10945, metadata !DIExpression()), !dbg !10946
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10947
  %3 = load volatile i32, i32* %2, align 4, !dbg !10947
  %4 = and i32 %3, 12288, !dbg !10947
  ret i32 %4, !dbg !10948
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10949 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10951, metadata !DIExpression()), !dbg !10952
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10953
  %3 = load volatile i32, i32* %2, align 4, !dbg !10953
  %4 = and i32 %3, 1536, !dbg !10953
  ret i32 %4, !dbg !10954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #2 !dbg !10955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10959, metadata !DIExpression()), !dbg !10960
  %2 = icmp eq i32 %0, 2, !dbg !10961
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10961
  %4 = icmp eq i32 %0, 1, !dbg !10961
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10961
  ret i32 %5, !dbg !10962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #2 !dbg !10963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10967, metadata !DIExpression()), !dbg !10968
  %2 = icmp ult i32 %0, 3, !dbg !10969
  br i1 %2, label %3, label %6, !dbg !10969

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10969
  %5 = load i32, i32* %4, align 4, !dbg !10969
  br label %6, !dbg !10969

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10970
  ret i32 %7, !dbg !10972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !10973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10977, metadata !DIExpression()), !dbg !10979
  call void @llvm.dbg.value(metadata i32 %1, metadata !10978, metadata !DIExpression()), !dbg !10979
  %3 = icmp eq i32 %0, 4, !dbg !10980
  %4 = icmp eq i32 %1, 0, !dbg !10980
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10980
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10980
  ret i32 %6, !dbg !10981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #2 !dbg !10982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10986, metadata !DIExpression()), !dbg !10987
  %2 = icmp eq i32 %0, 1, !dbg !10988
  %3 = select i1 %2, i32 768, i32 0, !dbg !10987
  ret i32 %3, !dbg !10990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10991 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10995, metadata !DIExpression()), !dbg !10996
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10997
  %3 = load volatile i32, i32* %2, align 4, !dbg !10997
  %4 = and i32 %3, -8193, !dbg !10997
  store volatile i32 %4, i32* %2, align 4, !dbg !10997
  ret void, !dbg !10998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10999 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11003, metadata !DIExpression()), !dbg !11006
  call void @llvm.dbg.value(metadata i32 %1, metadata !11004, metadata !DIExpression()), !dbg !11006
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11007
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11007
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11007
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11005, metadata !DIExpression()), !dbg !11006
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11008
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11008
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11009
  ret void, !dbg !11010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11011 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11013, metadata !DIExpression()), !dbg !11016
  call void @llvm.dbg.value(metadata i32 %1, metadata !11014, metadata !DIExpression()), !dbg !11016
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11017
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11017
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11017
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11015, metadata !DIExpression()), !dbg !11016
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11018
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11018
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11019
  ret void, !dbg !11020
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11021 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11023, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.value(metadata i32 %1, metadata !11024, metadata !DIExpression()), !dbg !11026
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11027
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11027
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11027
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11025, metadata !DIExpression()), !dbg !11026
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11028
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11028
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11029
  ret void, !dbg !11030
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11031 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11033, metadata !DIExpression()), !dbg !11036
  call void @llvm.dbg.value(metadata i32 %1, metadata !11034, metadata !DIExpression()), !dbg !11036
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11037
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11037
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11037
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11035, metadata !DIExpression()), !dbg !11036
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11038
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11038
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11039
  ret void, !dbg !11040
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11041 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11043, metadata !DIExpression()), !dbg !11048
  call void @llvm.dbg.value(metadata i32 %1, metadata !11044, metadata !DIExpression()), !dbg !11048
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11049
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11049
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11049
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11045, metadata !DIExpression()), !dbg !11048
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11050
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11050
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11050
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11046, metadata !DIExpression()), !dbg !11048
  %10 = bitcast i32* %3 to i8*, !dbg !11051
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11051
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11052
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11052
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11056
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11056
  %15 = load i8*, i8** %14, align 4, !dbg !11056
  call void @llvm.dbg.value(metadata i32* %3, metadata !11047, metadata !DIExpression(DW_OP_deref)), !dbg !11048
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11057
  %17 = icmp slt i32 %16, 0, !dbg !11058
  br i1 %17, label %18, label %21, !dbg !11059

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11060
  %20 = zext i8 %19 to i32, !dbg !11060
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.162, i32 0, i32 0), i32 noundef %20) #25, !dbg !11060
  br label %31, !dbg !11066

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11067
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11067
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11068
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11069
  %25 = load i32, i32* %3, align 4, !dbg !11070
  call void @llvm.dbg.value(metadata i32 %25, metadata !11047, metadata !DIExpression()), !dbg !11048
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11071
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11072
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11072
  %28 = load volatile i32, i32* %27, align 4, !dbg !11072
  %29 = icmp ugt i32 %28, 16, !dbg !11072
  br i1 %29, label %31, label %30, !dbg !11075

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.165, i32 0, i32 0), i32 noundef 190) #25, !dbg !11076
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.166, i32 0, i32 0)) #25, !dbg !11076
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.165, i32 0, i32 0), i32 noundef 190) #25, !dbg !11076
  unreachable, !dbg !11076

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11078
  ret void, !dbg !11078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11079 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11081, metadata !DIExpression()), !dbg !11082
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11083
  %3 = load volatile i32, i32* %2, align 4, !dbg !11083
  %4 = or i32 %3, 8192, !dbg !11083
  store volatile i32 %4, i32* %2, align 4, !dbg !11083
  ret void, !dbg !11084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11085 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11087, metadata !DIExpression()), !dbg !11091
  call void @llvm.dbg.value(metadata i8* %1, metadata !11088, metadata !DIExpression()), !dbg !11091
  call void @llvm.dbg.value(metadata i32* %2, metadata !11089, metadata !DIExpression()), !dbg !11091
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11092
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11092
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11092
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11090, metadata !DIExpression()), !dbg !11091
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11093
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11093
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11095
  br i1 %9, label %12, label %10, !dbg !11096

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11097
  br label %12, !dbg !11098

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11091
  ret i32 %13, !dbg !11099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef %0) unnamed_addr #2 !dbg !11100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11102, metadata !DIExpression()), !dbg !11103
  %2 = icmp eq i32 %0, 2, !dbg !11104
  %3 = select i1 %2, i8 87, i8 63, !dbg !11104
  %4 = icmp eq i32 %0, 1, !dbg !11104
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11104
  ret i8 %5, !dbg !11105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11106 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11110, metadata !DIExpression()), !dbg !11112
  call void @llvm.dbg.value(metadata i32 0, metadata !11111, metadata !DIExpression()), !dbg !11112
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11113
  %3 = load volatile i32, i32* %2, align 4, !dbg !11113
  %4 = and i32 %3, -32769, !dbg !11113
  store volatile i32 %4, i32* %2, align 4, !dbg !11113
  ret void, !dbg !11114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11115 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11119, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata i32 %1, metadata !11120, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata i32 0, metadata !11121, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata i32 %2, metadata !11122, metadata !DIExpression()), !dbg !11123
  %4 = zext i32 %1 to i64, !dbg !11124
  %5 = mul nuw nsw i64 %4, 25, !dbg !11124
  %6 = zext i32 %2 to i64, !dbg !11124
  %7 = shl nuw nsw i64 %6, 2, !dbg !11124
  %8 = udiv i64 %5, %7, !dbg !11124
  %9 = trunc i64 %8 to i32, !dbg !11124
  %10 = udiv i32 %9, 100, !dbg !11124
  %11 = shl nuw nsw i32 %10, 4, !dbg !11124
  %12 = mul i32 %10, -100, !dbg !11124
  %13 = add i32 %12, %9, !dbg !11124
  %14 = shl i32 %13, 4, !dbg !11124
  %15 = add i32 %14, 50, !dbg !11124
  %16 = udiv i32 %15, 100, !dbg !11124
  %17 = and i32 %16, 240, !dbg !11124
  %18 = add nuw nsw i32 %17, %11, !dbg !11124
  %19 = and i32 %16, 15, !dbg !11124
  %20 = and i32 %18, 65520, !dbg !11127
  %21 = or i32 %20, %19, !dbg !11127
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11128
  store volatile i32 %21, i32* %22, align 4, !dbg !11129
  ret void, !dbg !11130
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11131 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11133, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.value(metadata i32 %1, metadata !11134, metadata !DIExpression()), !dbg !11135
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11136
  %4 = load volatile i32, i32* %3, align 4, !dbg !11136
  %5 = and i32 %4, -769, !dbg !11136
  %6 = or i32 %5, %1, !dbg !11136
  store volatile i32 %6, i32* %3, align 4, !dbg !11136
  ret void, !dbg !11137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11138 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11140, metadata !DIExpression()), !dbg !11142
  call void @llvm.dbg.value(metadata i32 %1, metadata !11141, metadata !DIExpression()), !dbg !11142
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11143
  %4 = load volatile i32, i32* %3, align 4, !dbg !11143
  %5 = and i32 %4, -4097, !dbg !11143
  %6 = or i32 %5, %1, !dbg !11143
  store volatile i32 %6, i32* %3, align 4, !dbg !11143
  ret void, !dbg !11144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11145 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11147, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata i32 %1, metadata !11148, metadata !DIExpression()), !dbg !11149
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11150
  %4 = load volatile i32, i32* %3, align 4, !dbg !11150
  %5 = and i32 %4, -12289, !dbg !11150
  %6 = or i32 %5, %1, !dbg !11150
  store volatile i32 %6, i32* %3, align 4, !dbg !11150
  ret void, !dbg !11151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11152 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11154, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata i32 %1, metadata !11155, metadata !DIExpression()), !dbg !11156
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11157
  %4 = load volatile i32, i32* %3, align 4, !dbg !11157
  %5 = and i32 %4, -1537, !dbg !11157
  %6 = or i32 %5, %1, !dbg !11157
  store volatile i32 %6, i32* %3, align 4, !dbg !11157
  ret void, !dbg !11158
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11159 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11161, metadata !DIExpression()), !dbg !11162
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11163
  %3 = load volatile i32, i32* %2, align 4, !dbg !11163
  %4 = lshr i32 %3, 3, !dbg !11164
  %5 = and i32 %4, 1, !dbg !11164
  ret i32 %5, !dbg !11165
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11166 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11168, metadata !DIExpression()), !dbg !11169
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11170
  %3 = load volatile i32, i32* %2, align 4, !dbg !11170
  %4 = and i32 %3, 1, !dbg !11170
  ret i32 %4, !dbg !11171
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11172 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11174, metadata !DIExpression()), !dbg !11175
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11176
  %3 = load volatile i32, i32* %2, align 4, !dbg !11176
  %4 = lshr i32 %3, 1, !dbg !11177
  %5 = and i32 %4, 1, !dbg !11177
  ret i32 %5, !dbg !11178
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11179 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11181, metadata !DIExpression()), !dbg !11182
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11183
  %3 = load volatile i32, i32* %2, align 4, !dbg !11183
  %4 = lshr i32 %3, 8, !dbg !11184
  %5 = and i32 %4, 1, !dbg !11184
  ret i32 %5, !dbg !11185
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11186 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11188, metadata !DIExpression()), !dbg !11189
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11190
  store volatile i32 -257, i32* %2, align 4, !dbg !11190
  ret void, !dbg !11191
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11192 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11194, metadata !DIExpression()), !dbg !11196
  %3 = bitcast i32* %2 to i8*, !dbg !11197
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11197
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11195, metadata !DIExpression()), !dbg !11198
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11199
  %5 = load volatile i32, i32* %4, align 4, !dbg !11199
  store volatile i32 %5, i32* %2, align 4, !dbg !11200
  %6 = load volatile i32, i32* %2, align 4, !dbg !11201
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11202
  %8 = load volatile i32, i32* %7, align 4, !dbg !11202
  store volatile i32 %8, i32* %2, align 4, !dbg !11203
  %9 = load volatile i32, i32* %2, align 4, !dbg !11204
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11205
  ret void, !dbg !11205
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11206 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11208, metadata !DIExpression()), !dbg !11210
  %3 = bitcast i32* %2 to i8*, !dbg !11211
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11211
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11209, metadata !DIExpression()), !dbg !11212
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11213
  %5 = load volatile i32, i32* %4, align 4, !dbg !11213
  store volatile i32 %5, i32* %2, align 4, !dbg !11214
  %6 = load volatile i32, i32* %2, align 4, !dbg !11215
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11216
  %8 = load volatile i32, i32* %7, align 4, !dbg !11216
  store volatile i32 %8, i32* %2, align 4, !dbg !11217
  %9 = load volatile i32, i32* %2, align 4, !dbg !11218
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11219
  ret void, !dbg !11219
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11220 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11222, metadata !DIExpression()), !dbg !11224
  %3 = bitcast i32* %2 to i8*, !dbg !11225
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11225
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11223, metadata !DIExpression()), !dbg !11226
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11227
  %5 = load volatile i32, i32* %4, align 4, !dbg !11227
  store volatile i32 %5, i32* %2, align 4, !dbg !11228
  %6 = load volatile i32, i32* %2, align 4, !dbg !11229
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11230
  %8 = load volatile i32, i32* %7, align 4, !dbg !11230
  store volatile i32 %8, i32* %2, align 4, !dbg !11231
  %9 = load volatile i32, i32* %2, align 4, !dbg !11232
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11233
  ret void, !dbg !11233
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11234 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11236, metadata !DIExpression()), !dbg !11238
  %3 = bitcast i32* %2 to i8*, !dbg !11239
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11239
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11237, metadata !DIExpression()), !dbg !11240
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11241
  %5 = load volatile i32, i32* %4, align 4, !dbg !11241
  store volatile i32 %5, i32* %2, align 4, !dbg !11242
  %6 = load volatile i32, i32* %2, align 4, !dbg !11243
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11244
  %8 = load volatile i32, i32* %7, align 4, !dbg !11244
  store volatile i32 %8, i32* %2, align 4, !dbg !11245
  %9 = load volatile i32, i32* %2, align 4, !dbg !11246
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11247
  ret void, !dbg !11247
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11248 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11250, metadata !DIExpression()), !dbg !11251
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11252
  %3 = load volatile i32, i32* %2, align 4, !dbg !11252
  %4 = lshr i32 %3, 7, !dbg !11253
  %5 = and i32 %4, 1, !dbg !11253
  ret i32 %5, !dbg !11254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !11255 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11259, metadata !DIExpression()), !dbg !11261
  call void @llvm.dbg.value(metadata i8 %1, metadata !11260, metadata !DIExpression()), !dbg !11261
  %3 = zext i8 %1 to i32, !dbg !11262
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11263
  store volatile i32 %3, i32* %4, align 4, !dbg !11264
  ret void, !dbg !11265
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11266 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11268, metadata !DIExpression()), !dbg !11269
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11270
  %3 = load volatile i32, i32* %2, align 4, !dbg !11270
  %4 = lshr i32 %3, 5, !dbg !11271
  %5 = and i32 %4, 1, !dbg !11271
  ret i32 %5, !dbg !11272
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11273 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11277, metadata !DIExpression()), !dbg !11278
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11279
  %3 = load volatile i32, i32* %2, align 4, !dbg !11279
  %4 = trunc i32 %3 to i8, !dbg !11280
  ret i8 %4, !dbg !11281
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11282 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11284, metadata !DIExpression()), !dbg !11290
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11291
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11291
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11291
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11285, metadata !DIExpression()), !dbg !11290
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11292
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11292
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11292
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11286, metadata !DIExpression()), !dbg !11290
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11293
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11294
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11294
  %10 = tail call fastcc zeroext i1 @device_is_ready.168(%struct.device* noundef %9) #24, !dbg !11296
  br i1 %10, label %14, label %11, !dbg !11297

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11298
  %13 = zext i8 %12 to i32, !dbg !11298
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.169, i32 0, i32 0), i32 noundef %13) #25, !dbg !11298
  br label %62, !dbg !11304

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11305
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11306
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11306
  %18 = load i8*, i8** %17, align 4, !dbg !11306
  %19 = tail call fastcc i32 @clock_control_on.170(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11307
  call void @llvm.dbg.value(metadata i32 %19, metadata !11289, metadata !DIExpression()), !dbg !11290
  %20 = icmp eq i32 %19, 0, !dbg !11308
  br i1 %20, label %24, label %21, !dbg !11310

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11311
  %23 = zext i8 %22 to i32, !dbg !11311
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.171, i32 0, i32 0), i32 noundef %23) #25, !dbg !11311
  br label %62, !dbg !11317

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11318
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11318
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11319
  call void @llvm.dbg.value(metadata i32 %27, metadata !11289, metadata !DIExpression()), !dbg !11290
  %28 = icmp slt i32 %27, 0, !dbg !11320
  br i1 %28, label %62, label %29, !dbg !11322

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11323
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11323
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11324
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11325
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11326
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11327
  %34 = load i32, i32* %33, align 4, !dbg !11327
  %35 = icmp ult i32 %34, 3, !dbg !11329
  br i1 %35, label %39, label %36, !dbg !11329

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 2) #24, !dbg !11330
  %38 = zext i8 %37 to i32, !dbg !11330
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.172, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11330
  call void @llvm.dbg.value(metadata i32 0, metadata !11287, metadata !DIExpression()), !dbg !11290
  call void @llvm.dbg.value(metadata i32 0, metadata !11288, metadata !DIExpression()), !dbg !11290
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11329
  %41 = load i32, i32* %40, align 4, !dbg !11329
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !11329
  %43 = load i32, i32* %42, align 4, !dbg !11329
  br label %44, !dbg !11329

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11339
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11339
  call void @llvm.dbg.value(metadata i32 %46, metadata !11288, metadata !DIExpression()), !dbg !11290
  call void @llvm.dbg.value(metadata i32 %45, metadata !11287, metadata !DIExpression()), !dbg !11290
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11340
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11341
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11342
  %49 = load i8, i8* %48, align 4, !dbg !11342, !range !6614
  %50 = icmp eq i8 %49, 0, !dbg !11342
  br i1 %50, label %52, label %51, !dbg !11344

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11345
  br label %52, !dbg !11347

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11348
  %54 = load i32, i32* %53, align 4, !dbg !11348
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11349
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11350
  %56 = load i8, i8* %55, align 4, !dbg !11350, !range !6614
  %57 = icmp eq i8 %56, 0, !dbg !11350
  br i1 %57, label %60, label %58, !dbg !11352

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11353
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11355
  br label %60, !dbg !11356

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11357
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11358
  br label %62, !dbg !11359

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11290
  ret i32 %63, !dbg !11360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11361 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11365, metadata !DIExpression()), !dbg !11369
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11370
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11370
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11370
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11366, metadata !DIExpression()), !dbg !11369
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11367, metadata !DIExpression()), !dbg !11369
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11371
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11372
  ret void, !dbg !11373
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.168(%struct.device* noundef %0) unnamed_addr #1 !dbg !11374 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11378, metadata !DIExpression()), !dbg !11379
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11380, !srcloc !11382
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.173(%struct.device* noundef %0) #24, !dbg !11383
  ret i1 %2, !dbg !11384
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.170(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11385 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11387, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.value(metadata i8* %1, metadata !11388, metadata !DIExpression()), !dbg !11390
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11391
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11391
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11391
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11389, metadata !DIExpression()), !dbg !11390
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11392
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11392
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11393
  ret i32 %8, !dbg !11394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11395 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11399, metadata !DIExpression()), !dbg !11403
  call void @llvm.dbg.value(metadata i8 0, metadata !11400, metadata !DIExpression()), !dbg !11403
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11404
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11404
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11402, metadata !DIExpression(DW_OP_deref)), !dbg !11403
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11405
  call void @llvm.dbg.value(metadata i32 %4, metadata !11401, metadata !DIExpression()), !dbg !11403
  %5 = icmp slt i32 %4, 0, !dbg !11406
  br i1 %5, label %9, label %6, !dbg !11408

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11409
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11402, metadata !DIExpression()), !dbg !11403
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11410
  br label %9, !dbg !11411

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11403
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11412
  ret i32 %10, !dbg !11412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11413 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11415, metadata !DIExpression()), !dbg !11419
  call void @llvm.dbg.value(metadata i32 12, metadata !11416, metadata !DIExpression()), !dbg !11419
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11420

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11421, metadata !DIExpression()) #23, !dbg !11427
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11430, !srcloc !11431
  call void @llvm.dbg.value(metadata i32 %4, metadata !11426, metadata !DIExpression()) #23, !dbg !11427
  %5 = or i32 %4, 12, !dbg !11432
  call void @llvm.dbg.value(metadata i32 %5, metadata !11417, metadata !DIExpression()), !dbg !11433
  call void @llvm.dbg.value(metadata i32 %5, metadata !11434, metadata !DIExpression()) #23, !dbg !11441
  call void @llvm.dbg.value(metadata i32* %2, metadata !11439, metadata !DIExpression()) #23, !dbg !11441
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !11443, !srcloc !11444
  call void @llvm.dbg.value(metadata i32 %6, metadata !11440, metadata !DIExpression()) #23, !dbg !11441
  %7 = icmp eq i32 %6, 0, !dbg !11420
  br i1 %7, label %8, label %3, !dbg !11432, !llvm.loop !11445

8:                                                ; preds = %3
  ret void, !dbg !11446
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11447 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11449, metadata !DIExpression()), !dbg !11453
  call void @llvm.dbg.value(metadata i32 %1, metadata !11450, metadata !DIExpression()), !dbg !11453
  call void @llvm.dbg.value(metadata i32 %2, metadata !11451, metadata !DIExpression()), !dbg !11453
  call void @llvm.dbg.value(metadata i32 0, metadata !11452, metadata !DIExpression()), !dbg !11453
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11454
  %5 = load volatile i32, i32* %4, align 4, !dbg !11454
  %6 = and i32 %5, -5633, !dbg !11454
  %7 = or i32 %2, %1, !dbg !11454
  %8 = or i32 %7, %6, !dbg !11454
  store volatile i32 %8, i32* %4, align 4, !dbg !11454
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11455
  %10 = load volatile i32, i32* %9, align 4, !dbg !11455
  %11 = and i32 %10, -12289, !dbg !11455
  store volatile i32 %11, i32* %9, align 4, !dbg !11455
  ret void, !dbg !11456
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11457 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11459, metadata !DIExpression()), !dbg !11460
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11461
  %3 = load volatile i32, i32* %2, align 4, !dbg !11461
  %4 = or i32 %3, 8, !dbg !11461
  store volatile i32 %4, i32* %2, align 4, !dbg !11461
  ret void, !dbg !11462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11463 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11467, metadata !DIExpression()), !dbg !11470
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11468, metadata !DIExpression()), !dbg !11470
  call void @llvm.dbg.value(metadata i32 0, metadata !11469, metadata !DIExpression()), !dbg !11470
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11471
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11471
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11472
  %5 = load i8, i8* %4, align 4, !dbg !11472
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11473
  ret i32 %6, !dbg !11474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.173(%struct.device* noundef %0) unnamed_addr #1 !dbg !11475 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11477, metadata !DIExpression()), !dbg !11478
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11479
  ret i1 %2, !dbg !11480
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !11481 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11483, metadata !DIExpression()), !dbg !11484
  tail call fastcc void @__NVIC_SetPriority.175() #24, !dbg !11485
  store i32 8399, i32* @last_load, align 4, !dbg !11486
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11487
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11488
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11489
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11490
  %3 = or i32 %2, 7, !dbg !11490
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11490
  ret i32 0, !dbg !11491
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.175() unnamed_addr #14 !dbg !11492 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11494, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.value(metadata i32 1, metadata !11495, metadata !DIExpression()), !dbg !11496
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11497
  ret void, !dbg !11500
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11501 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11503, metadata !DIExpression()), !dbg !11505
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11506
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11507
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11508
  %5 = add i32 %4, %3, !dbg !11508
  store i32 %5, i32* @cycle_count, align 4, !dbg !11508
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11509
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11510
  %7 = sub i32 %5, %6, !dbg !11513
  %8 = udiv i32 %7, 8400, !dbg !11514
  call void @llvm.dbg.value(metadata i32 %8, metadata !11504, metadata !DIExpression()), !dbg !11505
  %9 = mul nuw i32 %8, 8400, !dbg !11515
  %10 = add i32 %9, %6, !dbg !11516
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11516
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11517
  tail call void @z_arm_int_exit() #25, !dbg !11518
  ret void, !dbg !11519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !11520 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11525
  call void @llvm.dbg.value(metadata i32 %1, metadata !11522, metadata !DIExpression()), !dbg !11526
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11527
  call void @llvm.dbg.value(metadata i32 %2, metadata !11523, metadata !DIExpression()), !dbg !11526
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11528
  call void @llvm.dbg.value(metadata i32 %3, metadata !11524, metadata !DIExpression()), !dbg !11526
  %4 = and i32 %2, 65536, !dbg !11529
  %5 = icmp ne i32 %4, 0, !dbg !11529
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11531
  %8 = load i32, i32* @last_load, align 4, !dbg !11526
  br i1 %7, label %9, label %13, !dbg !11531

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11532
  %11 = add i32 %10, %8, !dbg !11532
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11532
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11534
  br label %13, !dbg !11535

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11536
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11537
  %16 = add i32 %14, %15, !dbg !11538
  ret i32 %16, !dbg !11539
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11544, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i1 %1, metadata !11545, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11557
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11558
  br i1 %4, label %5, label %8, !dbg !11558

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11560
  %7 = and i32 %6, -2, !dbg !11560
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11560
  store i32 -16777216, i32* @last_load, align 4, !dbg !11562
  br label %60, !dbg !11563

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11564
  call void @llvm.dbg.value(metadata i32 %9, metadata !11549, metadata !DIExpression()), !dbg !11557
  br i1 %3, label %18, label %10, !dbg !11565

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11565
  call void @llvm.dbg.value(metadata i32 undef, metadata !11544, metadata !DIExpression()), !dbg !11557
  %12 = icmp slt i32 %11, 1, !dbg !11566
  br i1 %12, label %18, label %13, !dbg !11566

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11566
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11566
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11566
  %17 = add nuw nsw i32 %16, 8399, !dbg !11566
  br label %18, !dbg !11566

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11544, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11567, metadata !DIExpression()) #23, !dbg !11574
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11576, !srcloc !11582
  call void @llvm.dbg.value(metadata i32 undef, metadata !11579, metadata !DIExpression()) #23, !dbg !11583
  call void @llvm.dbg.value(metadata i32 undef, metadata !11580, metadata !DIExpression()) #23, !dbg !11583
  call void @llvm.dbg.value(metadata i32 undef, metadata !11573, metadata !DIExpression()) #23, !dbg !11574
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11584
  br i1 %21, label %23, label %22, !dbg !11587

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11588
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.179, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11588
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11588
  unreachable, !dbg !11588

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !11576
  call void @llvm.dbg.value(metadata i32 %24, metadata !11579, metadata !DIExpression()) #23, !dbg !11583
  call void @llvm.dbg.value(metadata i32 %24, metadata !11573, metadata !DIExpression()) #23, !dbg !11574
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11590
  call void @llvm.dbg.value(metadata i32 %24, metadata !11550, metadata !DIExpression()), !dbg !11557
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !11591
  call void @llvm.dbg.value(metadata i32 %25, metadata !11555, metadata !DIExpression()), !dbg !11557
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11592
  call void @llvm.dbg.value(metadata i32 %26, metadata !11547, metadata !DIExpression()), !dbg !11557
  %27 = load i32, i32* @cycle_count, align 4, !dbg !11593
  %28 = add i32 %27, %25, !dbg !11593
  store i32 %28, i32* @cycle_count, align 4, !dbg !11593
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11594
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !11595
  %30 = sub i32 %28, %29, !dbg !11596
  call void @llvm.dbg.value(metadata i32 %30, metadata !11556, metadata !DIExpression()), !dbg !11557
  %31 = icmp slt i32 %30, 0, !dbg !11597
  br i1 %31, label %41, label %32, !dbg !11599

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !11546, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i32 undef, metadata !11546, metadata !DIExpression()), !dbg !11557
  %33 = add nuw i32 %19, %30, !dbg !11600
  %34 = urem i32 %33, 8400, !dbg !11602
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !11546, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11557
  %35 = sub nuw nsw i32 %19, %34, !dbg !11603
  call void @llvm.dbg.value(metadata i32 %35, metadata !11546, metadata !DIExpression()), !dbg !11557
  %36 = icmp ugt i32 %35, 1024, !dbg !11604
  br i1 %36, label %37, label %39, !dbg !11604

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !11546, metadata !DIExpression()), !dbg !11557
  %38 = icmp ugt i32 %35, 16766400, !dbg !11605
  br i1 %38, label %41, label %39, !dbg !11607

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !11608
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11609
  call void @llvm.dbg.value(metadata i32 %43, metadata !11548, metadata !DIExpression()), !dbg !11557
  %44 = add nsw i32 %42, -1, !dbg !11610
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11611
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11612
  %45 = icmp ult i32 %26, %43, !dbg !11613
  br i1 %45, label %46, label %51, !dbg !11615

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !11616
  %48 = add i32 %26, %9, !dbg !11618
  %49 = sub i32 %48, %43, !dbg !11619
  %50 = add i32 %49, %47, !dbg !11616
  br label %55, !dbg !11620

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !11621
  %53 = load i32, i32* @cycle_count, align 4, !dbg !11623
  %54 = add i32 %52, %53, !dbg !11623
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !11624
  store i32 %56, i32* @cycle_count, align 4, !dbg !11624
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #23, !dbg !11631
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11630, metadata !DIExpression()) #23, !dbg !11631
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11633
  br i1 %57, label %59, label %58, !dbg !11636

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11637
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11637
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11637
  unreachable, !dbg !11637

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !11625, metadata !DIExpression()) #23, !dbg !11631
  call void @llvm.dbg.value(metadata i32 %24, metadata !11639, metadata !DIExpression()) #23, !dbg !11642
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !11644, !srcloc !11645
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !11646
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11647 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11567, metadata !DIExpression()) #23, !dbg !11651
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11653, !srcloc !11582
  call void @llvm.dbg.value(metadata i32 undef, metadata !11579, metadata !DIExpression()) #23, !dbg !11655
  call void @llvm.dbg.value(metadata i32 undef, metadata !11580, metadata !DIExpression()) #23, !dbg !11655
  call void @llvm.dbg.value(metadata i32 undef, metadata !11573, metadata !DIExpression()) #23, !dbg !11651
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11656
  br i1 %2, label %4, label %3, !dbg !11657

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11658
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.179, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11658
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11658
  unreachable, !dbg !11658

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11579, metadata !DIExpression()) #23, !dbg !11655
  call void @llvm.dbg.value(metadata i32 undef, metadata !11573, metadata !DIExpression()) #23, !dbg !11651
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11659
  call void @llvm.dbg.value(metadata i32 undef, metadata !11649, metadata !DIExpression()), !dbg !11660
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11661
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11662
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !11663
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !11650, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11660
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #23, !dbg !11664
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11630, metadata !DIExpression()) #23, !dbg !11664
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11666
  br i1 %8, label %10, label %9, !dbg !11667

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11668
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11668
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11668
  unreachable, !dbg !11668

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !11669
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !11650, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11660
  %12 = sub i32 %11, %7, !dbg !11670
  call void @llvm.dbg.value(metadata i32 %12, metadata !11650, metadata !DIExpression()), !dbg !11660
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !11653
  call void @llvm.dbg.value(metadata i32 %13, metadata !11579, metadata !DIExpression()) #23, !dbg !11655
  call void @llvm.dbg.value(metadata i32 %13, metadata !11573, metadata !DIExpression()) #23, !dbg !11651
  call void @llvm.dbg.value(metadata i32 %13, metadata !11649, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #23, !dbg !11664
  call void @llvm.dbg.value(metadata i32 undef, metadata !11639, metadata !DIExpression()) #23, !dbg !11671
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !11673, !srcloc !11645
  %14 = udiv i32 %12, 8400, !dbg !11674
  ret i32 %14, !dbg !11675
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11676 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11567, metadata !DIExpression()) #23, !dbg !11680
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11682, !srcloc !11582
  call void @llvm.dbg.value(metadata i32 undef, metadata !11579, metadata !DIExpression()) #23, !dbg !11684
  call void @llvm.dbg.value(metadata i32 undef, metadata !11580, metadata !DIExpression()) #23, !dbg !11684
  call void @llvm.dbg.value(metadata i32 undef, metadata !11573, metadata !DIExpression()) #23, !dbg !11680
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11685
  br i1 %2, label %4, label %3, !dbg !11686

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11687
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.179, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11687
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11687
  unreachable, !dbg !11687

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11579, metadata !DIExpression()) #23, !dbg !11684
  call void @llvm.dbg.value(metadata i32 undef, metadata !11573, metadata !DIExpression()) #23, !dbg !11680
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11688
  call void @llvm.dbg.value(metadata i32 undef, metadata !11678, metadata !DIExpression()), !dbg !11689
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11690
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11691
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !11679, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11689
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #23, !dbg !11692
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11630, metadata !DIExpression()) #23, !dbg !11692
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11694
  br i1 %7, label %9, label %8, !dbg !11695

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11696
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11696
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11696
  unreachable, !dbg !11696

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !11697
  call void @llvm.dbg.value(metadata i32 %10, metadata !11679, metadata !DIExpression()), !dbg !11689
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !11682
  call void @llvm.dbg.value(metadata i32 %11, metadata !11579, metadata !DIExpression()) #23, !dbg !11684
  call void @llvm.dbg.value(metadata i32 %11, metadata !11573, metadata !DIExpression()) #23, !dbg !11680
  call void @llvm.dbg.value(metadata i32 %11, metadata !11678, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #23, !dbg !11692
  call void @llvm.dbg.value(metadata i32 undef, metadata !11639, metadata !DIExpression()) #23, !dbg !11698
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !11700, !srcloc !11645
  ret i32 %10, !dbg !11701
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !11702 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11703
  %2 = icmp eq i32 %1, -16777216, !dbg !11705
  br i1 %2, label %3, label %6, !dbg !11706

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11707
  %5 = or i32 %4, 1, !dbg !11707
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11707
  br label %6, !dbg !11709

6:                                                ; preds = %3, %0
  ret void, !dbg !11710
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !11711 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11712
  %2 = and i32 %1, -2, !dbg !11712
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11712
  ret void, !dbg !11713
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !11714 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11740, metadata !DIExpression()), !dbg !11743
  call void @llvm.dbg.value(metadata i8 %1, metadata !11741, metadata !DIExpression()), !dbg !11743
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11742, metadata !DIExpression()), !dbg !11743
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11744
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11744
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11743
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11745
  %8 = load i8, i8* %6, align 4, !dbg !11746
  %9 = zext i8 %8 to i32, !dbg !11747
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11747
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11748
  br i1 %11, label %18, label %24, !dbg !11749

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11743
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11745
  %14 = load i8, i8* %6, align 4, !dbg !11746
  %15 = zext i8 %14 to i32, !dbg !11747
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11747
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11748
  br i1 %17, label %18, label %24, !dbg !11749, !llvm.loop !11750

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11752
  %21 = load i8, i8* %20, align 1, !dbg !11752
  %22 = icmp eq i8 %21, %1, !dbg !11755
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11756
  br i1 %22, label %24, label %12, !dbg !11757

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11743
  ret i32 %25, !dbg !11758
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11759 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11770, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.value(metadata i8 %1, metadata !11771, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.value(metadata i32 %2, metadata !11772, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.value(metadata i32 0, metadata !11775, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.value(metadata i32 0, metadata !11776, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.value(metadata i8 0, metadata !11777, metadata !DIExpression()), !dbg !11787
  %4 = icmp eq i8 %1, 0, !dbg !11788
  br i1 %4, label %35, label %5, !dbg !11789

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11788
  br label %9, !dbg !11789

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11777, metadata !DIExpression()), !dbg !11787
  call void @llvm.dbg.value(metadata i32 %29, metadata !11775, metadata !DIExpression()), !dbg !11786
  %8 = icmp eq i32 %34, %6, !dbg !11788
  br i1 %8, label %35, label %9, !dbg !11789, !llvm.loop !11790

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11777, metadata !DIExpression()), !dbg !11787
  call void @llvm.dbg.value(metadata i32 %11, metadata !11775, metadata !DIExpression()), !dbg !11786
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11792
  %13 = load i32, i32* %12, align 4, !dbg !11792
  call void @llvm.dbg.value(metadata i32 %13, metadata !11774, metadata !DIExpression()), !dbg !11786
  %14 = and i32 %13, 31, !dbg !11793
  %15 = icmp ult i32 %14, 16, !dbg !11794
  br i1 %15, label %16, label %20, !dbg !11795

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11796
  %18 = load i32, i32* %17, align 4, !dbg !11796
  %19 = or i32 %18, 32, !dbg !11798
  call void @llvm.dbg.value(metadata i32 %19, metadata !11775, metadata !DIExpression()), !dbg !11786
  br label %28, !dbg !11799

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11800

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11801
  %23 = load i32, i32* %22, align 4, !dbg !11801
  call void @llvm.dbg.value(metadata i32 %23, metadata !11779, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11802
  %24 = lshr i32 %23, 7, !dbg !11803
  %25 = and i32 %24, 16, !dbg !11803
  %26 = or i32 %25, %23, !dbg !11803
  call void @llvm.dbg.value(metadata i32 %26, metadata !11775, metadata !DIExpression()), !dbg !11786
  br label %28, !dbg !11804

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11786
  call void @llvm.dbg.value(metadata i32 %29, metadata !11775, metadata !DIExpression()), !dbg !11786
  %30 = lshr i32 %13, 5, !dbg !11805
  %31 = and i32 %30, 255, !dbg !11805
  call void @llvm.dbg.value(metadata i32 %31, metadata !11773, metadata !DIExpression()), !dbg !11786
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11806
  call void @llvm.dbg.value(metadata i32 %32, metadata !11776, metadata !DIExpression()), !dbg !11786
  %33 = icmp slt i32 %32, 0, !dbg !11807
  %34 = add nuw nsw i32 %10, 1, !dbg !11809
  call void @llvm.dbg.value(metadata i32 %34, metadata !11777, metadata !DIExpression()), !dbg !11787
  br i1 %33, label %35, label %7, !dbg !11810

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11811
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11812 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11816, metadata !DIExpression()), !dbg !11820
  call void @llvm.dbg.value(metadata i32 %1, metadata !11817, metadata !DIExpression()), !dbg !11820
  call void @llvm.dbg.value(metadata i32 %2, metadata !11818, metadata !DIExpression()), !dbg !11820
  %4 = icmp ugt i32 %0, 175, !dbg !11821
  br i1 %4, label %16, label %5, !dbg !11823

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11824
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11825
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11825
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11819, metadata !DIExpression()), !dbg !11820
  %9 = add nsw i32 %6, -8, !dbg !11826
  %10 = icmp ult i32 %9, 3, !dbg !11826
  br i1 %10, label %16, label %11, !dbg !11828

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.188(%struct.device* noundef %8) #24, !dbg !11829
  br i1 %12, label %13, label %16, !dbg !11830

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11831
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11832
  br label %16, !dbg !11833

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11820
  ret i32 %17, !dbg !11834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.188(%struct.device* noundef %0) unnamed_addr #1 !dbg !11835 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11839, metadata !DIExpression()), !dbg !11840
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11841, !srcloc !11843
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.189(%struct.device* noundef %0) #24, !dbg !11844
  ret i1 %2, !dbg !11845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.189(%struct.device* noundef %0) unnamed_addr #1 !dbg !11846 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11848, metadata !DIExpression()), !dbg !11849
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11850
  ret i1 %2, !dbg !11851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !11852 {
  ret void, !dbg !11853
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11854 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11856, metadata !DIExpression()), !dbg !11861
  call void @llvm.dbg.value(metadata i32 0, metadata !11857, metadata !DIExpression()), !dbg !11861
  call void @llvm.dbg.value(metadata i32 2, metadata !11858, metadata !DIExpression()), !dbg !11861
  call void @llvm.dbg.value(metadata i32 0, metadata !11859, metadata !DIExpression()), !dbg !11861
  call void @llvm.dbg.value(metadata i32 2, metadata !11860, metadata !DIExpression()), !dbg !11861
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11862
  %2 = and i32 %1, 12, !dbg !11863
  call void @llvm.dbg.value(metadata i32 %2, metadata !11856, metadata !DIExpression()), !dbg !11861
  %3 = icmp eq i32 %2, 8, !dbg !11864
  br i1 %3, label %4, label %18, !dbg !11864

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11865
  call void @llvm.dbg.value(metadata i32 %5, metadata !11859, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11861
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11867
  %7 = and i32 %6, 63, !dbg !11868
  call void @llvm.dbg.value(metadata i32 %7, metadata !11860, metadata !DIExpression()), !dbg !11861
  %8 = udiv i32 16000000, %7, !dbg !11869
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11869
  %10 = lshr i32 %9, 6, !dbg !11869
  %11 = and i32 %10, 511, !dbg !11869
  %12 = mul i32 %11, %8, !dbg !11869
  call void @llvm.dbg.value(metadata i32 %12, metadata !11857, metadata !DIExpression()), !dbg !11861
  call void @llvm.dbg.value(metadata i32 %12, metadata !11857, metadata !DIExpression()), !dbg !11861
  call void @llvm.dbg.value(metadata i32 %12, metadata !11857, metadata !DIExpression()), !dbg !11861
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11871
  %14 = lshr i32 %13, 15, !dbg !11872
  %15 = and i32 %14, 6, !dbg !11872
  %16 = add nuw nsw i32 %15, 2, !dbg !11872
  call void @llvm.dbg.value(metadata i32 %16, metadata !11858, metadata !DIExpression()), !dbg !11861
  %17 = udiv i32 %12, %16, !dbg !11873
  br label %18, !dbg !11874

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11875
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11876
  %21 = lshr i32 %20, 4, !dbg !11877
  %22 = and i32 %21, 15, !dbg !11877
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11878
  %24 = load i8, i8* %23, align 1, !dbg !11878
  %25 = zext i8 %24 to i32, !dbg !11878
  call void @llvm.dbg.value(metadata i32 %25, metadata !11856, metadata !DIExpression()), !dbg !11861
  %26 = lshr i32 %19, %25, !dbg !11879
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11879
  ret void, !dbg !11880
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11881 {
  ret i32 0, !dbg !11886
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11887 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11914, metadata !DIExpression()), !dbg !11925
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11926
  br i1 %3, label %317, label %4, !dbg !11928

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11929
  %6 = load i32, i32* %5, align 4, !dbg !11929
  %7 = and i32 %6, 1, !dbg !11931
  %8 = icmp eq i32 %7, 0, !dbg !11932
  br i1 %8, label %66, label %9, !dbg !11933

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11934
  %11 = and i32 %10, 12, !dbg !11934
  %12 = icmp eq i32 %11, 4, !dbg !11937
  br i1 %12, label %21, label %13, !dbg !11938

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11939
  %15 = and i32 %14, 12, !dbg !11939
  %16 = icmp eq i32 %15, 8, !dbg !11940
  br i1 %16, label %17, label %29, !dbg !11941

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11942
  %19 = and i32 %18, 4194304, !dbg !11943
  %20 = icmp eq i32 %19, 0, !dbg !11944
  br i1 %20, label %29, label %21, !dbg !11945

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11946
  %23 = and i32 %22, 131072, !dbg !11946
  %24 = icmp eq i32 %23, 0, !dbg !11946
  br i1 %24, label %66, label %25, !dbg !11949

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11950
  %27 = load i32, i32* %26, align 4, !dbg !11950
  %28 = icmp eq i32 %27, 0, !dbg !11951
  br i1 %28, label %317, label %66, !dbg !11952

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11953
  %31 = load i32, i32* %30, align 4, !dbg !11953
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11957

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11958
  %34 = or i32 %33, 65536, !dbg !11958
  br label %45, !dbg !11958

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11960
  %37 = or i32 %36, 262144, !dbg !11960
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11960
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11960
  %39 = or i32 %38, 65536, !dbg !11960
  br label %45, !dbg !11960

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11963
  %42 = and i32 %41, -65537, !dbg !11963
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11963
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11963
  %44 = and i32 %43, -262145, !dbg !11963
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11965
  %47 = load i32, i32* %30, align 4, !dbg !11966
  %48 = icmp eq i32 %47, 0, !dbg !11968
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !11969
  call void @llvm.dbg.value(metadata i32 %49, metadata !11915, metadata !DIExpression()), !dbg !11925
  call void @llvm.dbg.value(metadata i32 %49, metadata !11915, metadata !DIExpression()), !dbg !11925
  br i1 %48, label %58, label %50, !dbg !11970

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11971
  %52 = and i32 %51, 131072, !dbg !11973
  %53 = icmp eq i32 %52, 0, !dbg !11973
  br i1 %53, label %54, label %66, !dbg !11974

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !11975
  %56 = sub i32 %55, %49, !dbg !11978
  %57 = icmp ugt i32 %56, 100, !dbg !11979
  br i1 %57, label %317, label %50, !dbg !11980, !llvm.loop !11981

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11983
  %60 = and i32 %59, 131072, !dbg !11983
  %61 = icmp eq i32 %60, 0, !dbg !11983
  br i1 %61, label %66, label %62, !dbg !11985

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !11986
  %64 = sub i32 %63, %49, !dbg !11989
  %65 = icmp ugt i32 %64, 100, !dbg !11990
  br i1 %65, label %317, label %58, !dbg !11991, !llvm.loop !11992

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11994
  %68 = and i32 %67, 2, !dbg !11996
  %69 = icmp eq i32 %68, 0, !dbg !11997
  br i1 %69, label %121, label %70, !dbg !11998

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11999
  %72 = and i32 %71, 12, !dbg !11999
  %73 = icmp eq i32 %72, 0, !dbg !12002
  br i1 %73, label %82, label %74, !dbg !12003

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12004
  %76 = and i32 %75, 12, !dbg !12004
  %77 = icmp eq i32 %76, 8, !dbg !12005
  br i1 %77, label %78, label %90, !dbg !12006

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12007
  %80 = and i32 %79, 4194304, !dbg !12008
  %81 = icmp eq i32 %80, 0, !dbg !12009
  br i1 %81, label %82, label %90, !dbg !12010

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12011
  %84 = and i32 %83, 2, !dbg !12011
  %85 = icmp eq i32 %84, 0, !dbg !12011
  br i1 %85, label %114, label %86, !dbg !12014

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12015
  %88 = load i32, i32* %87, align 4, !dbg !12015
  %89 = icmp eq i32 %88, 1, !dbg !12016
  br i1 %89, label %114, label %317, !dbg !12017

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12018
  %92 = load i32, i32* %91, align 4, !dbg !12018
  %93 = icmp eq i32 %92, 0, !dbg !12021
  br i1 %93, label %104, label %94, !dbg !12022

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12023
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12025
  call void @llvm.dbg.value(metadata i32 %95, metadata !11915, metadata !DIExpression()), !dbg !11925
  br label %96, !dbg !12026

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12027
  %98 = and i32 %97, 2, !dbg !12028
  %99 = icmp eq i32 %98, 0, !dbg !12028
  br i1 %99, label %100, label %114, !dbg !12026

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12029
  %102 = sub i32 %101, %95, !dbg !12032
  %103 = icmp ugt i32 %102, 2, !dbg !12033
  br i1 %103, label %317, label %96, !dbg !12034, !llvm.loop !12035

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12037
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12039
  call void @llvm.dbg.value(metadata i32 %105, metadata !11915, metadata !DIExpression()), !dbg !11925
  br label %106, !dbg !12040

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12041
  %108 = and i32 %107, 2, !dbg !12041
  %109 = icmp eq i32 %108, 0, !dbg !12041
  br i1 %109, label %121, label %110, !dbg !12040

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12042
  %112 = sub i32 %111, %105, !dbg !12045
  %113 = icmp ugt i32 %112, 2, !dbg !12046
  br i1 %113, label %317, label %106, !dbg !12047, !llvm.loop !12048

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12050
  %116 = and i32 %115, -249, !dbg !12050
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12050
  %118 = load i32, i32* %117, align 4, !dbg !12050
  %119 = shl i32 %118, 3, !dbg !12050
  %120 = or i32 %119, %116, !dbg !12050
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12050
  br label %121, !dbg !12051

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12051
  %123 = and i32 %122, 8, !dbg !12053
  %124 = icmp eq i32 %123, 0, !dbg !12054
  br i1 %124, label %149, label %125, !dbg !12055

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12056
  %127 = load i32, i32* %126, align 4, !dbg !12056
  %128 = icmp eq i32 %127, 0, !dbg !12059
  br i1 %128, label %139, label %129, !dbg !12060

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12061
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12063
  call void @llvm.dbg.value(metadata i32 %130, metadata !11915, metadata !DIExpression()), !dbg !11925
  br label %131, !dbg !12064

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12065
  %133 = and i32 %132, 2, !dbg !12066
  %134 = icmp eq i32 %133, 0, !dbg !12066
  br i1 %134, label %135, label %149, !dbg !12064

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12067
  %137 = sub i32 %136, %130, !dbg !12070
  %138 = icmp ugt i32 %137, 2, !dbg !12071
  br i1 %138, label %317, label %131, !dbg !12072, !llvm.loop !12073

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12075
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12077
  call void @llvm.dbg.value(metadata i32 %140, metadata !11915, metadata !DIExpression()), !dbg !11925
  br label %141, !dbg !12078

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12079
  %143 = and i32 %142, 2, !dbg !12079
  %144 = icmp eq i32 %143, 0, !dbg !12079
  br i1 %144, label %149, label %145, !dbg !12078

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12080
  %147 = sub i32 %146, %140, !dbg !12083
  %148 = icmp ugt i32 %147, 2, !dbg !12084
  br i1 %148, label %317, label %141, !dbg !12085, !llvm.loop !12086

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12088
  %151 = and i32 %150, 4, !dbg !12089
  %152 = icmp eq i32 %151, 0, !dbg !12090
  br i1 %152, label %221, label %153, !dbg !12091

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11917, metadata !DIExpression()), !dbg !12092
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12093
  %155 = and i32 %154, 268435456, !dbg !12093
  %156 = icmp eq i32 %155, 0, !dbg !12093
  br i1 %156, label %157, label %164, !dbg !12094

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12095
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12095
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11921, metadata !DIExpression()), !dbg !12095
  store volatile i32 0, i32* %2, align 4, !dbg !12095
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12095
  %160 = or i32 %159, 268435456, !dbg !12095
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12095
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12095
  %162 = and i32 %161, 268435456, !dbg !12095
  store volatile i32 %162, i32* %2, align 4, !dbg !12095
  %163 = load volatile i32, i32* %2, align 4, !dbg !12095
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12096
  call void @llvm.dbg.value(metadata i32 1, metadata !11917, metadata !DIExpression()), !dbg !12092
  br label %164, !dbg !12097

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11917, metadata !DIExpression()), !dbg !12092
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12098
  %166 = and i32 %165, 256, !dbg !12098
  %167 = icmp eq i32 %166, 0, !dbg !12098
  br i1 %167, label %168, label %180, !dbg !12100

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12101
  %170 = or i32 %169, 256, !dbg !12101
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12101
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12103
  call void @llvm.dbg.value(metadata i32 %171, metadata !11915, metadata !DIExpression()), !dbg !11925
  br label %172, !dbg !12104

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12105
  %174 = and i32 %173, 256, !dbg !12105
  %175 = icmp eq i32 %174, 0, !dbg !12105
  br i1 %175, label %176, label %180, !dbg !12104

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12106
  %178 = sub i32 %177, %171, !dbg !12109
  %179 = icmp ugt i32 %178, 2, !dbg !12110
  br i1 %179, label %317, label %172, !dbg !12111, !llvm.loop !12112

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12114
  %182 = load i32, i32* %181, align 4, !dbg !12114
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12117

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12118
  %185 = or i32 %184, 1, !dbg !12118
  br label %196, !dbg !12118

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12120
  %188 = or i32 %187, 4, !dbg !12120
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12120
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12120
  %190 = or i32 %189, 1, !dbg !12120
  br label %196, !dbg !12120

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12123
  %193 = and i32 %192, -2, !dbg !12123
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12123
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12123
  %195 = and i32 %194, -5, !dbg !12123
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12125
  %198 = load i32, i32* %181, align 4, !dbg !12126
  %199 = icmp eq i32 %198, 0, !dbg !12128
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12129
  call void @llvm.dbg.value(metadata i32 %200, metadata !11915, metadata !DIExpression()), !dbg !11925
  call void @llvm.dbg.value(metadata i32 %200, metadata !11915, metadata !DIExpression()), !dbg !11925
  br i1 %199, label %209, label %201, !dbg !12130

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12131
  %203 = and i32 %202, 2, !dbg !12133
  %204 = icmp eq i32 %203, 0, !dbg !12133
  br i1 %204, label %205, label %217, !dbg !12134

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12135
  %207 = sub i32 %206, %200, !dbg !12138
  %208 = icmp ugt i32 %207, 5000, !dbg !12139
  br i1 %208, label %317, label %201, !dbg !12140, !llvm.loop !12141

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12143
  %211 = and i32 %210, 2, !dbg !12143
  %212 = icmp eq i32 %211, 0, !dbg !12143
  br i1 %212, label %217, label %213, !dbg !12145

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12146
  %215 = sub i32 %214, %200, !dbg !12149
  %216 = icmp ugt i32 %215, 5000, !dbg !12150
  br i1 %216, label %317, label %209, !dbg !12151, !llvm.loop !12152

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12154

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12155
  %220 = and i32 %219, -268435457, !dbg !12155
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12155
  br label %221, !dbg !12158

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12159
  %223 = load i32, i32* %222, align 4, !dbg !12159
  %224 = icmp eq i32 %223, 0, !dbg !12161
  br i1 %224, label %316, label %225, !dbg !12162

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12163
  %227 = and i32 %226, 12, !dbg !12163
  %228 = icmp eq i32 %227, 8, !dbg !12166
  br i1 %228, label %277, label %229, !dbg !12167

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12168
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12171
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12171
  call void @llvm.dbg.value(metadata i32 %231, metadata !11915, metadata !DIExpression()), !dbg !11925
  call void @llvm.dbg.value(metadata i32 %231, metadata !11915, metadata !DIExpression()), !dbg !11925
  br i1 %230, label %232, label %269, !dbg !12172

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12173
  %234 = and i32 %233, 33554432, !dbg !12173
  %235 = icmp eq i32 %234, 0, !dbg !12173
  br i1 %235, label %240, label %236, !dbg !12175

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12176
  %238 = sub i32 %237, %231, !dbg !12179
  %239 = icmp ugt i32 %238, 2, !dbg !12180
  br i1 %239, label %317, label %232, !dbg !12181, !llvm.loop !12182

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12184
  %242 = load i32, i32* %241, align 4, !dbg !12184
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12184
  %244 = load i32, i32* %243, align 4, !dbg !12184
  %245 = or i32 %244, %242, !dbg !12184
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12184
  %247 = load i32, i32* %246, align 4, !dbg !12184
  %248 = shl i32 %247, 6, !dbg !12184
  %249 = or i32 %245, %248, !dbg !12184
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12184
  %251 = load i32, i32* %250, align 4, !dbg !12184
  %252 = shl i32 %251, 15, !dbg !12184
  %253 = add i32 %252, -65536, !dbg !12184
  %254 = and i32 %253, -65536, !dbg !12184
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12184
  %256 = load i32, i32* %255, align 4, !dbg !12184
  %257 = shl i32 %256, 24, !dbg !12184
  %258 = or i32 %249, %257, !dbg !12184
  %259 = or i32 %258, %254, !dbg !12184
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12184
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12185
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12186
  call void @llvm.dbg.value(metadata i32 %260, metadata !11915, metadata !DIExpression()), !dbg !11925
  br label %261, !dbg !12187

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12188
  %263 = and i32 %262, 33554432, !dbg !12189
  %264 = icmp eq i32 %263, 0, !dbg !12189
  br i1 %264, label %265, label %316, !dbg !12187

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12190
  %267 = sub i32 %266, %260, !dbg !12193
  %268 = icmp ugt i32 %267, 2, !dbg !12194
  br i1 %268, label %317, label %261, !dbg !12195, !llvm.loop !12196

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12198
  %271 = and i32 %270, 33554432, !dbg !12198
  %272 = icmp eq i32 %271, 0, !dbg !12198
  br i1 %272, label %316, label %273, !dbg !12200

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12201
  %275 = sub i32 %274, %231, !dbg !12204
  %276 = icmp ugt i32 %275, 2, !dbg !12205
  br i1 %276, label %317, label %269, !dbg !12206, !llvm.loop !12207

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12209
  br i1 %278, label %317, label %279, !dbg !12212

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12213
  call void @llvm.dbg.value(metadata i32 %280, metadata !11916, metadata !DIExpression()), !dbg !11925
  %281 = and i32 %280, 4194304, !dbg !12215
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12217
  %283 = load i32, i32* %282, align 4, !dbg !12217
  %284 = icmp eq i32 %281, %283, !dbg !12218
  br i1 %284, label %285, label %317, !dbg !12219

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12220
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12221
  %288 = load i32, i32* %287, align 4, !dbg !12221
  %289 = icmp eq i32 %286, %288, !dbg !12222
  br i1 %289, label %290, label %317, !dbg !12223

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12224
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12225
  %293 = load i32, i32* %292, align 4, !dbg !12225
  %294 = shl i32 %293, 6, !dbg !12226
  %295 = icmp eq i32 %291, %294, !dbg !12227
  br i1 %295, label %296, label %317, !dbg !12228

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12229
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12230
  %299 = load i32, i32* %298, align 4, !dbg !12230
  %300 = shl i32 %299, 15, !dbg !12231
  %301 = add i32 %300, -65536, !dbg !12231
  %302 = and i32 %301, -65536, !dbg !12231
  %303 = icmp eq i32 %297, %302, !dbg !12232
  br i1 %303, label %304, label %317, !dbg !12233

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12234
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12235
  %307 = load i32, i32* %306, align 4, !dbg !12235
  %308 = shl i32 %307, 24, !dbg !12236
  %309 = icmp eq i32 %305, %308, !dbg !12237
  br i1 %309, label %310, label %317, !dbg !12238

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !12239
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12240
  %313 = load i32, i32* %312, align 4, !dbg !12240
  %314 = shl i32 %313, 28, !dbg !12241
  %315 = icmp eq i32 %311, %314, !dbg !12242
  br i1 %315, label %316, label %317, !dbg !12243

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !12244

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11925
  ret i32 %318, !dbg !12245
}

; Function Attrs: optsize
declare !dbg !12246 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.ztest_unit_test_stats* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12248 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12261, metadata !DIExpression()), !dbg !12264
  call void @llvm.dbg.value(metadata i32 %1, metadata !12262, metadata !DIExpression()), !dbg !12264
  %3 = icmp eq %struct.ztest_unit_test_stats* %0, null, !dbg !12265
  br i1 %3, label %115, label %4, !dbg !12267

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12268
  %6 = and i32 %5, 7, !dbg !12268
  %7 = icmp ult i32 %6, %1, !dbg !12270
  br i1 %7, label %8, label %13, !dbg !12271

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12272
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12272
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12274
  %11 = and i32 %10, 7, !dbg !12274
  %12 = icmp eq i32 %11, %1, !dbg !12276
  br i1 %12, label %13, label %115, !dbg !12277

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12278
  %15 = load i32, i32* %14, align 4, !dbg !12278
  %16 = and i32 %15, 2, !dbg !12280
  %17 = icmp eq i32 %16, 0, !dbg !12281
  br i1 %17, label %39, label %18, !dbg !12282

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12283
  %20 = icmp eq i32 %19, 0, !dbg !12286
  br i1 %20, label %25, label %21, !dbg !12287

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12288
  %23 = or i32 %22, 7168, !dbg !12288
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12288
  %24 = load i32, i32* %14, align 4, !dbg !12290
  br label %25, !dbg !12292

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12290
  %27 = and i32 %26, 8, !dbg !12293
  %28 = icmp eq i32 %27, 0, !dbg !12294
  br i1 %28, label %32, label %29, !dbg !12295

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12296
  %31 = or i32 %30, 57344, !dbg !12296
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12296
  br label %32, !dbg !12298

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12299
  %34 = and i32 %33, -241, !dbg !12299
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12299
  %36 = load i32, i32* %35, align 4, !dbg !12299
  %37 = or i32 %34, %36, !dbg !12299
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12299
  %38 = load i32, i32* %14, align 4, !dbg !12300
  br label %39, !dbg !12302

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12300
  %41 = and i32 %40, 1, !dbg !12303
  %42 = icmp eq i32 %41, 0, !dbg !12304
  br i1 %42, label %73, label %43, !dbg !12305

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12306
  %45 = load i32, i32* %44, align 4, !dbg !12306
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12309

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12310
  %48 = and i32 %47, 131072, !dbg !12313
  %49 = icmp eq i32 %48, 0, !dbg !12313
  br i1 %49, label %115, label %58, !dbg !12314

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12315
  %52 = and i32 %51, 33554432, !dbg !12319
  %53 = icmp eq i32 %52, 0, !dbg !12319
  br i1 %53, label %115, label %58, !dbg !12320

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12321
  %56 = and i32 %55, 2, !dbg !12324
  %57 = icmp eq i32 %56, 0, !dbg !12324
  br i1 %57, label %115, label %58, !dbg !12325

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12326
  %60 = and i32 %59, -4, !dbg !12326
  %61 = or i32 %60, %45, !dbg !12326
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12326
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12327
  call void @llvm.dbg.value(metadata i32 %62, metadata !12263, metadata !DIExpression()), !dbg !12264
  br label %63, !dbg !12328

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12329
  %65 = and i32 %64, 12, !dbg !12329
  %66 = load i32, i32* %44, align 4, !dbg !12330
  %67 = shl i32 %66, 2, !dbg !12331
  %68 = icmp eq i32 %65, %67, !dbg !12332
  br i1 %68, label %73, label %69, !dbg !12328

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12333
  %71 = sub i32 %70, %62, !dbg !12336
  %72 = icmp ugt i32 %71, 5000, !dbg !12337
  br i1 %72, label %115, label %63, !dbg !12338, !llvm.loop !12339

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12341
  %75 = and i32 %74, 7, !dbg !12341
  %76 = icmp ugt i32 %75, %1, !dbg !12343
  br i1 %76, label %77, label %82, !dbg !12344

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12345
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12345
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12347
  %80 = and i32 %79, 7, !dbg !12347
  %81 = icmp eq i32 %80, %1, !dbg !12349
  br i1 %81, label %82, label %115, !dbg !12350

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12351
  %84 = and i32 %83, 4, !dbg !12353
  %85 = icmp eq i32 %84, 0, !dbg !12354
  br i1 %85, label %93, label %86, !dbg !12355

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12356
  %88 = and i32 %87, -7169, !dbg !12356
  %89 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12356
  %90 = load i32, i32* %89, align 4, !dbg !12356
  %91 = or i32 %88, %90, !dbg !12356
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12356
  %92 = load i32, i32* %14, align 4, !dbg !12358
  br label %93, !dbg !12360

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12358
  %95 = and i32 %94, 8, !dbg !12361
  %96 = icmp eq i32 %95, 0, !dbg !12362
  br i1 %96, label %104, label %97, !dbg !12363

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12364
  %99 = and i32 %98, -57345, !dbg !12364
  %100 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12364
  %101 = load i32, i32* %100, align 4, !dbg !12364
  %102 = shl i32 %101, 3, !dbg !12364
  %103 = or i32 %102, %99, !dbg !12364
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12364
  br label %104, !dbg !12366

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12367
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12368
  %107 = lshr i32 %106, 4, !dbg !12369
  %108 = and i32 %107, 15, !dbg !12369
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12370
  %110 = load i8, i8* %109, align 1, !dbg !12370
  %111 = zext i8 %110 to i32, !dbg !12370
  %112 = lshr i32 %105, %111, !dbg !12371
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12372
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12373
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12374
  br label %115, !dbg !12375

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12264
  ret i32 %116, !dbg !12376
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12377 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12379, metadata !DIExpression()), !dbg !12383
  call void @llvm.dbg.value(metadata i32 0, metadata !12380, metadata !DIExpression()), !dbg !12383
  call void @llvm.dbg.value(metadata i32 0, metadata !12381, metadata !DIExpression()), !dbg !12383
  call void @llvm.dbg.value(metadata i32 0, metadata !12382, metadata !DIExpression()), !dbg !12383
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12384
  %2 = and i32 %1, 12, !dbg !12385
  %3 = icmp eq i32 %2, 8, !dbg !12386
  br i1 %3, label %4, label %21, !dbg !12386

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12387
  %6 = and i32 %5, 63, !dbg !12390
  call void @llvm.dbg.value(metadata i32 %6, metadata !12379, metadata !DIExpression()), !dbg !12383
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12391
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12393
  %9 = lshr i32 %8, 6, !dbg !12393
  %10 = and i32 %9, 511, !dbg !12393
  %11 = zext i32 %10 to i64, !dbg !12393
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !12393
  %13 = zext i32 %6 to i64, !dbg !12393
  %14 = udiv i64 %12, %13, !dbg !12393
  %15 = trunc i64 %14 to i32, !dbg !12393
  call void @llvm.dbg.value(metadata i32 %15, metadata !12380, metadata !DIExpression()), !dbg !12383
  call void @llvm.dbg.value(metadata i32 %15, metadata !12380, metadata !DIExpression()), !dbg !12383
  call void @llvm.dbg.value(metadata i32 %15, metadata !12380, metadata !DIExpression()), !dbg !12383
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12394
  %17 = lshr i32 %16, 15, !dbg !12395
  %18 = and i32 %17, 6, !dbg !12395
  %19 = add nuw nsw i32 %18, 2, !dbg !12395
  call void @llvm.dbg.value(metadata i32 %19, metadata !12381, metadata !DIExpression()), !dbg !12383
  %20 = udiv i32 %15, %19, !dbg !12396
  call void @llvm.dbg.value(metadata i32 %20, metadata !12382, metadata !DIExpression()), !dbg !12383
  br label %21, !dbg !12397

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !12398
  call void @llvm.dbg.value(metadata i32 %22, metadata !12382, metadata !DIExpression()), !dbg !12383
  ret i32 %22, !dbg !12399
}

; Function Attrs: optsize
declare !dbg !12400 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12403 {
  %4 = alloca %struct.ztest_unit_test_stats, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12407, metadata !DIExpression()), !dbg !12424
  call void @llvm.dbg.value(metadata i32 %1, metadata !12408, metadata !DIExpression()), !dbg !12424
  call void @llvm.dbg.value(metadata i32 %2, metadata !12409, metadata !DIExpression()), !dbg !12424
  %6 = bitcast %struct.ztest_unit_test_stats* %4 to i8*, !dbg !12425
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !12425
  call void @llvm.dbg.declare(metadata %struct.ztest_unit_test_stats* %4, metadata !12410, metadata !DIExpression()), !dbg !12426
  %7 = icmp eq i32 %0, 0, !dbg !12427
  br i1 %7, label %8, label %24, !dbg !12428

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !12429
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !12429
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12420, metadata !DIExpression()), !dbg !12429
  store volatile i32 0, i32* %5, align 4, !dbg !12429
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12429
  %11 = or i32 %10, 1, !dbg !12429
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12429
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12429
  %13 = and i32 %12, 1, !dbg !12429
  store volatile i32 %13, i32* %5, align 4, !dbg !12429
  %14 = load volatile i32, i32* %5, align 4, !dbg !12429
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !12430
  %15 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12431
  store i32 256, i32* %15, align 4, !dbg !12432
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12433
  store i32 2, i32* %16, align 4, !dbg !12434
  %17 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12435
  store i32 3, i32* %17, align 4, !dbg !12436
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12437
  store i32 0, i32* %18, align 4, !dbg !12438
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12439
  store i32 0, i32* %19, align 4, !dbg !12440
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12441
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12442
  %21 = and i32 %20, -123731969, !dbg !12442
  %22 = or i32 %2, %1, !dbg !12442
  %23 = or i32 %22, %21, !dbg !12442
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12442
  br label %24, !dbg !12443

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !12444
  ret void, !dbg !12444
}

; Function Attrs: optsize
declare !dbg !12445 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.ztest_unit_test_stats* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !12449 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12450
  ret void, !dbg !12451
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !12452 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12453
  ret void, !dbg !12454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !12455 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12456
  ret i32 %1, !dbg !12457
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !12458 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12459
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12460
  %3 = lshr i32 %2, 10, !dbg !12461
  %4 = and i32 %3, 7, !dbg !12461
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12462
  %6 = load i8, i8* %5, align 1, !dbg !12462
  %7 = zext i8 %6 to i32, !dbg !12462
  %8 = lshr i32 %1, %7, !dbg !12463
  ret i32 %8, !dbg !12464
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !12465 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12466
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12467
  %3 = lshr i32 %2, 13, !dbg !12468
  %4 = and i32 %3, 7, !dbg !12468
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12469
  %6 = load i8, i8* %5, align 1, !dbg !12469
  %7 = zext i8 %6 to i32, !dbg !12469
  %8 = lshr i32 %1, %7, !dbg !12470
  ret i32 %8, !dbg !12471
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12472 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12476, metadata !DIExpression()), !dbg !12477
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12478
  store i32 15, i32* %2, align 4, !dbg !12479
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12480
  %4 = and i32 %3, 262144, !dbg !12482
  %5 = icmp eq i32 %4, 0, !dbg !12483
  br i1 %5, label %8, label %6, !dbg !12484

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12485
  store i32 327680, i32* %7, align 4, !dbg !12487
  br label %15, !dbg !12488

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12489
  %10 = and i32 %9, 65536, !dbg !12491
  %11 = icmp eq i32 %10, 0, !dbg !12492
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12493
  br i1 %11, label %14, label %13, !dbg !12494

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12495
  br label %15, !dbg !12497

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12498
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12500
  %17 = and i32 %16, 1, !dbg !12502
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12503
  store i32 %17, i32* %18, align 4, !dbg !12505
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12506
  %20 = lshr i32 %19, 3, !dbg !12507
  %21 = and i32 %20, 31, !dbg !12507
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12508
  store i32 %21, i32* %22, align 4, !dbg !12509
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12510
  %24 = and i32 %23, 4, !dbg !12512
  %25 = icmp eq i32 %24, 0, !dbg !12513
  br i1 %25, label %28, label %26, !dbg !12514

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12515
  store i32 5, i32* %27, align 4, !dbg !12517
  br label %35, !dbg !12518

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12519
  %30 = and i32 %29, 1, !dbg !12521
  %31 = icmp eq i32 %30, 0, !dbg !12522
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12523
  br i1 %31, label %34, label %33, !dbg !12524

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12525
  br label %35, !dbg !12527

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12528
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12530
  %37 = and i32 %36, 1, !dbg !12532
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12533
  store i32 %37, i32* %38, align 4, !dbg !12535
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12536
  %40 = and i32 %39, 16777216, !dbg !12538
  %41 = icmp eq i32 %40, 0, !dbg !12539
  %42 = select i1 %41, i32 1, i32 2, !dbg !12540
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12541
  store i32 %42, i32* %43, align 4, !dbg !12543
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12544
  %45 = and i32 %44, 4194304, !dbg !12545
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12546
  store i32 %45, i32* %46, align 4, !dbg !12547
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12548
  %48 = and i32 %47, 63, !dbg !12549
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12550
  store i32 %48, i32* %49, align 4, !dbg !12551
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12552
  %51 = lshr i32 %50, 6, !dbg !12553
  %52 = and i32 %51, 511, !dbg !12553
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12554
  store i32 %52, i32* %53, align 4, !dbg !12555
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12556
  %55 = shl i32 %54, 1, !dbg !12557
  %56 = and i32 %55, 393216, !dbg !12557
  %57 = add nuw nsw i32 %56, 131072, !dbg !12557
  %58 = lshr exact i32 %57, 16, !dbg !12558
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12559
  store i32 %58, i32* %59, align 4, !dbg !12560
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12561
  %61 = lshr i32 %60, 24, !dbg !12562
  %62 = and i32 %61, 15, !dbg !12562
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12563
  store i32 %62, i32* %63, align 4, !dbg !12564
  ret void, !dbg !12565
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.ztest_unit_test_stats* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !12566 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12570, metadata !DIExpression()), !dbg !12572
  call void @llvm.dbg.value(metadata i32* %1, metadata !12571, metadata !DIExpression()), !dbg !12572
  %3 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12573
  store i32 15, i32* %3, align 4, !dbg !12574
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12575
  %5 = and i32 %4, 3, !dbg !12576
  %6 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12577
  store i32 %5, i32* %6, align 4, !dbg !12578
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12579
  %8 = and i32 %7, 240, !dbg !12580
  %9 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12581
  store i32 %8, i32* %9, align 4, !dbg !12582
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12583
  %11 = and i32 %10, 7168, !dbg !12584
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12585
  store i32 %11, i32* %12, align 4, !dbg !12586
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12587
  %14 = lshr i32 %13, 3, !dbg !12588
  %15 = and i32 %14, 7168, !dbg !12588
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12589
  store i32 %15, i32* %16, align 4, !dbg !12590
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12591
  %18 = and i32 %17, 7, !dbg !12592
  store i32 %18, i32* %1, align 4, !dbg !12593
  ret void, !dbg !12594
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12595 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12596
  %2 = and i32 %1, 128, !dbg !12596
  %3 = icmp eq i32 %2, 0, !dbg !12596
  br i1 %3, label %5, label %4, !dbg !12598

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !12599
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12601
  br label %5, !dbg !12602

5:                                                ; preds = %4, %0
  ret void, !dbg !12603
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12604 {
  ret void, !dbg !12605
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !12606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12609, metadata !DIExpression()), !dbg !12610
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !12611
  ret void, !dbg !12612
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !12613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12616, metadata !DIExpression()), !dbg !12618
  call void @llvm.dbg.value(metadata i32 1000, metadata !12617, metadata !DIExpression()), !dbg !12618
  %2 = udiv i32 %0, 1000, !dbg !12619
  %3 = add nsw i32 %2, -1, !dbg !12620
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12621
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12622
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12623
  ret void, !dbg !12624
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !12625 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12627, metadata !DIExpression()), !dbg !12629
  %3 = bitcast i32* %2 to i8*, !dbg !12630
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12630
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12628, metadata !DIExpression()), !dbg !12631
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12632
  store volatile i32 %4, i32* %2, align 4, !dbg !12631
  %5 = load volatile i32, i32* %2, align 4, !dbg !12633
  %6 = icmp eq i32 %0, -1, !dbg !12634
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12627, metadata !DIExpression()), !dbg !12629
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12629
  call void @llvm.dbg.value(metadata i32 %8, metadata !12627, metadata !DIExpression()), !dbg !12629
  br label %9, !dbg !12636

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12627, metadata !DIExpression()), !dbg !12629
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12637
  call void @llvm.dbg.value(metadata i32 undef, metadata !12627, metadata !DIExpression()), !dbg !12629
  %12 = shl i32 %11, 15, !dbg !12629
  %13 = ashr i32 %12, 31, !dbg !12629
  %14 = add i32 %13, %10, !dbg !12629
  call void @llvm.dbg.value(metadata i32 %14, metadata !12627, metadata !DIExpression()), !dbg !12629
  %15 = icmp eq i32 %14, 0, !dbg !12636
  br i1 %15, label %16, label %9, !dbg !12636

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12640
  ret void, !dbg !12640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !12641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12643, metadata !DIExpression()), !dbg !12644
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12645
  ret void, !dbg !12646
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !12647 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12652, metadata !DIExpression()), !dbg !12657
  call void @llvm.dbg.value(metadata i32 0, metadata !12655, metadata !DIExpression()), !dbg !12657
  call void @llvm.dbg.value(metadata i32 0, metadata !12656, metadata !DIExpression()), !dbg !12657
  %2 = icmp eq i32 %0, 0, !dbg !12658
  br i1 %2, label %50, label %3, !dbg !12660

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12661
  %5 = icmp eq i32 %4, 49152, !dbg !12664
  br i1 %5, label %6, label %15, !dbg !12665

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12655, metadata !DIExpression()), !dbg !12657
  %7 = add i32 %0, -64000001, !dbg !12666
  %8 = icmp ult i32 %7, 26000000, !dbg !12666
  br i1 %8, label %15, label %9, !dbg !12666

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !12669
  %11 = select i1 %10, i32 0, i32 3, !dbg !12671
  call void @llvm.dbg.value(metadata i32 %11, metadata !12655, metadata !DIExpression()), !dbg !12657
  %12 = add i32 %0, -30000001, !dbg !12672
  %13 = icmp ult i32 %12, 60000000, !dbg !12672
  %14 = select i1 %13, i32 1, i32 %11, !dbg !12672
  call void @llvm.dbg.value(metadata i32 %14, metadata !12655, metadata !DIExpression()), !dbg !12657
  br label %15, !dbg !12672

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !12657
  call void @llvm.dbg.value(metadata i32 %16, metadata !12655, metadata !DIExpression()), !dbg !12657
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12675
  %18 = icmp eq i32 %17, 32768, !dbg !12677
  br i1 %18, label %19, label %27, !dbg !12678

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !12679
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !12682
  br i1 %22, label %27, label %23, !dbg !12682

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !12683
  %25 = and i1 %24, %21, !dbg !12686
  %26 = select i1 %25, i32 1, i32 %16, !dbg !12686
  call void @llvm.dbg.value(metadata i32 %26, metadata !12655, metadata !DIExpression()), !dbg !12657
  br label %27, !dbg !12686

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !12687
  call void @llvm.dbg.value(metadata i32 %28, metadata !12655, metadata !DIExpression()), !dbg !12657
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12688
  %30 = icmp eq i32 %29, 16384, !dbg !12690
  br i1 %30, label %31, label %39, !dbg !12691

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !12692
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !12695
  br i1 %34, label %39, label %35, !dbg !12695

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !12696
  %37 = select i1 %36, i1 %33, i1 false, !dbg !12699
  %38 = select i1 %37, i32 1, i32 %28, !dbg !12699
  call void @llvm.dbg.value(metadata i32 %38, metadata !12655, metadata !DIExpression()), !dbg !12657
  br label %39, !dbg !12699

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !12687
  call void @llvm.dbg.value(metadata i32 %40, metadata !12655, metadata !DIExpression()), !dbg !12657
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #24, !dbg !12700
  call void @llvm.dbg.value(metadata i32 2, metadata !12653, metadata !DIExpression()), !dbg !12657
  br label %41, !dbg !12701

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !12687
  call void @llvm.dbg.value(metadata i32 %42, metadata !12653, metadata !DIExpression()), !dbg !12657
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !12702
  call void @llvm.dbg.value(metadata i32 %43, metadata !12654, metadata !DIExpression()), !dbg !12657
  %44 = add nsw i32 %42, -1, !dbg !12704
  call void @llvm.dbg.value(metadata i32 %44, metadata !12653, metadata !DIExpression()), !dbg !12657
  %45 = icmp ne i32 %43, %40, !dbg !12705
  %46 = icmp ne i32 %44, 0, !dbg !12706
  %47 = select i1 %45, i1 %46, i1 false, !dbg !12706
  br i1 %47, label %41, label %48, !dbg !12707, !llvm.loop !12708

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !12710
  call void @llvm.dbg.value(metadata i32 %51, metadata !12656, metadata !DIExpression()), !dbg !12657
  ret i32 %51, !dbg !12711
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !12712 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12714
  %2 = and i32 %1, 49152, !dbg !12714
  ret i32 %2, !dbg !12715
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !12716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12718, metadata !DIExpression()), !dbg !12719
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12720
  %3 = and i32 %2, -8, !dbg !12720
  %4 = or i32 %3, %0, !dbg !12720
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12720
  ret void, !dbg !12721
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !12722 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12723
  %2 = and i32 %1, 7, !dbg !12723
  ret i32 %2, !dbg !12724
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.ztest_suite_stats* nocapture noundef readonly %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !12725 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %0, metadata !12743, metadata !DIExpression()), !dbg !12747
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12744, metadata !DIExpression()), !dbg !12747
  call void @llvm.dbg.value(metadata i32 0, metadata !12745, metadata !DIExpression()), !dbg !12747
  call void @llvm.dbg.value(metadata i32 0, metadata !12746, metadata !DIExpression()), !dbg !12747
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12748
  %4 = icmp eq i32 %3, 0, !dbg !12750
  br i1 %4, label %5, label %21, !dbg !12751

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.ztest_suite_stats* noundef %0) #24, !dbg !12752
  call void @llvm.dbg.value(metadata i32 %6, metadata !12746, metadata !DIExpression()), !dbg !12747
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.198() #24, !dbg !12754
  %8 = icmp eq i32 %7, 1, !dbg !12756
  br i1 %8, label %13, label %9, !dbg !12757

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.199() #24, !dbg !12758
  br label %10, !dbg !12760

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.198() #24, !dbg !12761
  %12 = icmp eq i32 %11, 1, !dbg !12762
  br i1 %12, label %13, label %10, !dbg !12760, !llvm.loop !12763

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 0, !dbg !12765
  %15 = load i32, i32* %14, align 4, !dbg !12765
  %16 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 1, !dbg !12766
  %17 = load i32, i32* %16, align 4, !dbg !12766
  %18 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 2, !dbg !12767
  %19 = load i32, i32* %18, align 4, !dbg !12767
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.200(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !12768
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.ztest_suite_stats* noundef %1) #24, !dbg !12769
  call void @llvm.dbg.value(metadata i32 %20, metadata !12745, metadata !DIExpression()), !dbg !12747
  br label %21, !dbg !12770

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12771
  call void @llvm.dbg.value(metadata i32 %22, metadata !12745, metadata !DIExpression()), !dbg !12747
  ret i32 %22, !dbg !12772
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !12773 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12777, metadata !DIExpression()), !dbg !12778
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.202() #24, !dbg !12779
  %2 = icmp ne i32 %1, 0, !dbg !12781
  call void @llvm.dbg.value(metadata i1 %2, metadata !12777, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12778
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !12782
  %4 = icmp ne i32 %3, 0, !dbg !12784
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12785
  %6 = zext i1 %5 to i32, !dbg !12785
  call void @llvm.dbg.value(metadata i32 %6, metadata !12777, metadata !DIExpression()), !dbg !12778
  ret i32 %6, !dbg !12786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #8 !dbg !12787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12791, metadata !DIExpression()), !dbg !12794
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12792, metadata !DIExpression()), !dbg !12794
  call void @llvm.dbg.value(metadata i32 0, metadata !12793, metadata !DIExpression()), !dbg !12794
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12795
  %4 = load i32, i32* %3, align 4, !dbg !12795
  %5 = and i32 %4, 63, !dbg !12796
  %6 = udiv i32 %0, %5, !dbg !12797
  call void @llvm.dbg.value(metadata i32 %6, metadata !12793, metadata !DIExpression()), !dbg !12794
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12798
  %8 = load i32, i32* %7, align 4, !dbg !12798
  %9 = and i32 %8, 511, !dbg !12799
  %10 = mul i32 %9, %6, !dbg !12800
  call void @llvm.dbg.value(metadata i32 %10, metadata !12793, metadata !DIExpression()), !dbg !12794
  %11 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12801
  %12 = load i32, i32* %11, align 4, !dbg !12801
  %13 = lshr i32 %12, 15, !dbg !12802
  %14 = and i32 %13, 131070, !dbg !12802
  %15 = add nuw nsw i32 %14, 2, !dbg !12802
  %16 = udiv i32 %10, %15, !dbg !12803
  call void @llvm.dbg.value(metadata i32 %16, metadata !12793, metadata !DIExpression()), !dbg !12794
  ret i32 %16, !dbg !12804
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.198() unnamed_addr #15 !dbg !12805 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12806
  %2 = lshr i32 %1, 1, !dbg !12807
  %3 = and i32 %2, 1, !dbg !12807
  ret i32 %3, !dbg !12808
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.199() unnamed_addr #14 !dbg !12809 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12810
  %2 = or i32 %1, 1, !dbg !12810
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12810
  ret void, !dbg !12811
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.200(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12812 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12814, metadata !DIExpression()), !dbg !12818
  call void @llvm.dbg.value(metadata i32 %1, metadata !12815, metadata !DIExpression()), !dbg !12818
  call void @llvm.dbg.value(metadata i32 %2, metadata !12816, metadata !DIExpression()), !dbg !12818
  call void @llvm.dbg.value(metadata i32 %3, metadata !12817, metadata !DIExpression()), !dbg !12818
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12819
  %6 = and i32 %5, -4227072, !dbg !12819
  %7 = or i32 %1, %0, !dbg !12819
  %8 = shl i32 %2, 6, !dbg !12819
  %9 = or i32 %7, %8, !dbg !12819
  %10 = or i32 %9, %6, !dbg !12819
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12819
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12820
  %12 = and i32 %11, -196609, !dbg !12820
  %13 = or i32 %12, %3, !dbg !12820
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12820
  ret void, !dbg !12821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12826, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12827, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata i32 0, metadata !12828, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata i32 0, metadata !12829, metadata !DIExpression()), !dbg !12830
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12831
  %4 = load i32, i32* %3, align 4, !dbg !12831
  %5 = lshr i32 %4, 4, !dbg !12831
  %6 = and i32 %5, 15, !dbg !12831
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12831
  %8 = load i8, i8* %7, align 1, !dbg !12831
  %9 = zext i8 %8 to i32, !dbg !12831
  %10 = lshr i32 %0, %9, !dbg !12831
  call void @llvm.dbg.value(metadata i32 %10, metadata !12829, metadata !DIExpression()), !dbg !12830
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12832
  %12 = icmp ult i32 %11, %10, !dbg !12834
  br i1 %12, label %13, label %16, !dbg !12835

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12836
  call void @llvm.dbg.value(metadata i32 %14, metadata !12828, metadata !DIExpression()), !dbg !12830
  %15 = icmp eq i32 %14, 0, !dbg !12838
  br i1 %15, label %16, label %30, !dbg !12840

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.201() #24, !dbg !12841
  br label %17, !dbg !12843

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.202() #24, !dbg !12844
  %19 = icmp eq i32 %18, 1, !dbg !12845
  br i1 %19, label %20, label %17, !dbg !12843, !llvm.loop !12846

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12848
  tail call fastcc void @LL_RCC_SetAHBPrescaler.203(i32 noundef %21) #24, !dbg !12849
  tail call fastcc void @LL_RCC_SetSysClkSource.204() #24, !dbg !12850
  br label %22, !dbg !12851

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.205() #24, !dbg !12852
  %24 = icmp eq i32 %23, 8, !dbg !12853
  br i1 %24, label %25, label %22, !dbg !12851, !llvm.loop !12854

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12856
  %27 = load i32, i32* %26, align 4, !dbg !12856
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.206(i32 noundef %27) #24, !dbg !12857
  %28 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12858
  %29 = load i32, i32* %28, align 4, !dbg !12858
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.207(i32 noundef %29) #24, !dbg !12859
  br label %30, !dbg !12860

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12861
  %33 = icmp ugt i32 %32, %10, !dbg !12863
  br i1 %33, label %34, label %36, !dbg !12864

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12865
  call void @llvm.dbg.value(metadata i32 %35, metadata !12828, metadata !DIExpression()), !dbg !12830
  br label %36, !dbg !12867

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12830
  call void @llvm.dbg.value(metadata i32 %37, metadata !12828, metadata !DIExpression()), !dbg !12830
  %38 = icmp eq i32 %37, 0, !dbg !12868
  br i1 %38, label %39, label %40, !dbg !12870

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12871
  br label %40, !dbg !12873

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12874
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.201() unnamed_addr #14 !dbg !12875 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12876
  %2 = or i32 %1, 16777216, !dbg !12876
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12876
  ret void, !dbg !12877
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.202() unnamed_addr #15 !dbg !12878 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12879
  %2 = lshr i32 %1, 25, !dbg !12880
  %3 = and i32 %2, 1, !dbg !12880
  ret i32 %3, !dbg !12881
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.203(i32 noundef %0) unnamed_addr #14 !dbg !12882 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12884, metadata !DIExpression()), !dbg !12885
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12886
  %3 = and i32 %2, -241, !dbg !12886
  %4 = or i32 %3, %0, !dbg !12886
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12886
  ret void, !dbg !12887
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.204() unnamed_addr #14 !dbg !12888 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12890, metadata !DIExpression()), !dbg !12891
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12892
  %2 = and i32 %1, -4, !dbg !12892
  %3 = or i32 %2, 2, !dbg !12892
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12892
  ret void, !dbg !12893
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.205() unnamed_addr #15 !dbg !12894 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12895
  %2 = and i32 %1, 12, !dbg !12895
  ret i32 %2, !dbg !12896
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.206(i32 noundef %0) unnamed_addr #14 !dbg !12897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12899, metadata !DIExpression()), !dbg !12900
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12901
  %3 = and i32 %2, -7169, !dbg !12901
  %4 = or i32 %3, %0, !dbg !12901
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12901
  ret void, !dbg !12902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.207(i32 noundef %0) unnamed_addr #14 !dbg !12903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12905, metadata !DIExpression()), !dbg !12906
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12907
  %3 = and i32 %2, -57345, !dbg !12907
  %4 = or i32 %3, %0, !dbg !12907
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12907
  ret void, !dbg !12908
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12909 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12910
  %2 = lshr i32 %1, 27, !dbg !12911
  %3 = and i32 %2, 1, !dbg !12911
  ret i32 %3, !dbg !12912
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.ztest_suite_stats* nocapture noundef readonly %2, %struct.ztest_suite_stats* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12917, metadata !DIExpression()), !dbg !12923
  call void @llvm.dbg.value(metadata i32 %1, metadata !12918, metadata !DIExpression()), !dbg !12923
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %2, metadata !12919, metadata !DIExpression()), !dbg !12923
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %3, metadata !12920, metadata !DIExpression()), !dbg !12923
  call void @llvm.dbg.value(metadata i32 0, metadata !12921, metadata !DIExpression()), !dbg !12923
  call void @llvm.dbg.value(metadata i32 0, metadata !12922, metadata !DIExpression()), !dbg !12923
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12924
  %6 = icmp eq i32 %5, 0, !dbg !12926
  br i1 %6, label %7, label %27, !dbg !12927

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* noundef %2) #24, !dbg !12928
  call void @llvm.dbg.value(metadata i32 %8, metadata !12922, metadata !DIExpression()), !dbg !12923
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.208() #24, !dbg !12930
  %10 = icmp eq i32 %9, 1, !dbg !12932
  br i1 %10, label %19, label %11, !dbg !12933

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12934
  br i1 %12, label %13, label %14, !dbg !12937

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12938
  br label %15, !dbg !12940

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.209() #24, !dbg !12941
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.210() #24, !dbg !12943
  br label %16, !dbg !12944

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.208() #24, !dbg !12945
  %18 = icmp eq i32 %17, 1, !dbg !12946
  br i1 %18, label %19, label %16, !dbg !12944, !llvm.loop !12947

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 0, !dbg !12949
  %21 = load i32, i32* %20, align 4, !dbg !12949
  %22 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 1, !dbg !12950
  %23 = load i32, i32* %22, align 4, !dbg !12950
  %24 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 2, !dbg !12951
  %25 = load i32, i32* %24, align 4, !dbg !12951
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.200(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12952
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.ztest_suite_stats* noundef %3) #24, !dbg !12953
  call void @llvm.dbg.value(metadata i32 %26, metadata !12921, metadata !DIExpression()), !dbg !12923
  br label %27, !dbg !12954

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12955
  call void @llvm.dbg.value(metadata i32 %28, metadata !12921, metadata !DIExpression()), !dbg !12923
  ret i32 %28, !dbg !12956
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.208() unnamed_addr #15 !dbg !12957 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12958
  %2 = lshr i32 %1, 17, !dbg !12959
  %3 = and i32 %2, 1, !dbg !12959
  ret i32 %3, !dbg !12960
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12961 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12962
  %2 = or i32 %1, 262144, !dbg !12962
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12962
  ret void, !dbg !12963
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.209() unnamed_addr #14 !dbg !12964 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12965
  %2 = and i32 %1, -262145, !dbg !12965
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12965
  ret void, !dbg !12966
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.210() unnamed_addr #14 !dbg !12967 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12968
  %2 = or i32 %1, 65536, !dbg !12968
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12968
  ret void, !dbg !12969
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12970 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12973, metadata !DIExpression()), !dbg !12989
  call void @llvm.dbg.value(metadata i32 undef, metadata !12973, metadata !DIExpression()), !dbg !12989
  call void @llvm.dbg.value(metadata i32 undef, metadata !12973, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12989
  ret void, !dbg !12990
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12991 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12995, metadata !DIExpression()), !dbg !12997
  %2 = icmp eq i8* %0, null, !dbg !12998
  br i1 %2, label %29, label %3, !dbg !13000

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13001
  %5 = icmp eq i8 %4, 0, !dbg !13002
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13003
  br i1 %6, label %29, label %8, !dbg !13003

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12996, metadata !DIExpression()), !dbg !12997
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13004

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12996, metadata !DIExpression()), !dbg !12997
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13006
  br i1 %10, label %11, label %15, !dbg !13011

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13012
  %13 = load i8*, i8** %12, align 4, !dbg !13012
  %14 = icmp eq i8* %13, %0, !dbg !13013
  br i1 %14, label %29, label %15, !dbg !13014

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13015
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12996, metadata !DIExpression()), !dbg !12997
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13016
  br i1 %17, label %7, label %8, !dbg !13017, !llvm.loop !13018

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12996, metadata !DIExpression()), !dbg !12997
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13020
  br i1 %20, label %21, label %26, !dbg !13024

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13025
  %23 = load i8*, i8** %22, align 4, !dbg !13025
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13026
  %25 = icmp eq i32 %24, 0, !dbg !13027
  br i1 %25, label %29, label %26, !dbg !13028

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13029
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12996, metadata !DIExpression()), !dbg !12997
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13030
  br i1 %28, label %29, label %18, !dbg !13004, !llvm.loop !13031

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12997
  ret %struct.device* %30, !dbg !13033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !13034 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13038, metadata !DIExpression()), !dbg !13039
  %2 = icmp eq %struct.device* %0, null, !dbg !13040
  br i1 %2, label %14, label %3, !dbg !13042

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13043
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13043
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13044
  %7 = load i8, i8* %6, align 1, !dbg !13044
  %8 = and i8 %7, 1, !dbg !13044
  %9 = icmp eq i8 %8, 0, !dbg !13044
  br i1 %9, label %14, label %10, !dbg !13045

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13046
  %12 = load i8, i8* %11, align 1, !dbg !13046
  %13 = icmp eq i8 %12, 0, !dbg !13047
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13039
  ret i1 %15, !dbg !13048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !13049 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13054, metadata !DIExpression()), !dbg !13055
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13056
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13057
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13058 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13066, metadata !DIExpression()), !dbg !13071
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13067, metadata !DIExpression()), !dbg !13071
  call void @llvm.dbg.value(metadata i8* %2, metadata !13068, metadata !DIExpression()), !dbg !13071
  %5 = bitcast i32* %4 to i8*, !dbg !13072
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13072
  call void @llvm.dbg.value(metadata i32 0, metadata !13069, metadata !DIExpression()), !dbg !13071
  store i32 0, i32* %4, align 4, !dbg !13073
  call void @llvm.dbg.value(metadata i32* %4, metadata !13069, metadata !DIExpression(DW_OP_deref)), !dbg !13071
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13074
  call void @llvm.dbg.value(metadata i16* %6, metadata !13070, metadata !DIExpression()), !dbg !13071
  %7 = load i32, i32* %4, align 4, !dbg !13075
  call void @llvm.dbg.value(metadata i32 %7, metadata !13069, metadata !DIExpression()), !dbg !13071
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13076
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13077
  ret i32 %8, !dbg !13078
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13079 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13083, metadata !DIExpression()), !dbg !13089
  call void @llvm.dbg.value(metadata i32* %1, metadata !13084, metadata !DIExpression()), !dbg !13089
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13090
  %4 = load i16*, i16** %3, align 4, !dbg !13090
  call void @llvm.dbg.value(metadata i16* %4, metadata !13085, metadata !DIExpression()), !dbg !13089
  %5 = icmp eq i16* %4, null, !dbg !13091
  br i1 %5, label %14, label %6, !dbg !13092

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13093
  call void @llvm.dbg.value(metadata i32 %7, metadata !13086, metadata !DIExpression()), !dbg !13093
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13094
  %9 = load i16, i16* %8, align 2, !dbg !13094
  %10 = add i16 %9, -32767, !dbg !13095
  %11 = icmp ult i16 %10, 2, !dbg !13095
  %12 = add i32 %7, 1, !dbg !13096
  call void @llvm.dbg.value(metadata i32 %12, metadata !13086, metadata !DIExpression()), !dbg !13093
  br i1 %11, label %13, label %6, !dbg !13095, !llvm.loop !13098

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13101
  br label %14, !dbg !13102

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13104 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13108, metadata !DIExpression()), !dbg !13119
  call void @llvm.dbg.value(metadata i32 %1, metadata !13109, metadata !DIExpression()), !dbg !13119
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13110, metadata !DIExpression()), !dbg !13119
  call void @llvm.dbg.value(metadata i8* %3, metadata !13111, metadata !DIExpression()), !dbg !13119
  call void @llvm.dbg.value(metadata i32 0, metadata !13112, metadata !DIExpression()), !dbg !13120
  %5 = icmp eq i32 %1, 0, !dbg !13121
  br i1 %5, label %16, label %8, !dbg !13122

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13112, metadata !DIExpression()), !dbg !13120
  %7 = icmp eq i32 %15, %1, !dbg !13121
  br i1 %7, label %16, label %8, !dbg !13122, !llvm.loop !13123

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13112, metadata !DIExpression()), !dbg !13120
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13125
  %11 = load i16, i16* %10, align 2, !dbg !13125
  call void @llvm.dbg.value(metadata i16 %11, metadata !13114, metadata !DIExpression()), !dbg !13126
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13127
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13117, metadata !DIExpression()), !dbg !13126
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13128
  call void @llvm.dbg.value(metadata i32 %13, metadata !13118, metadata !DIExpression()), !dbg !13126
  %14 = icmp slt i32 %13, 0, !dbg !13129
  %15 = add nuw i32 %9, 1, !dbg !13131
  call void @llvm.dbg.value(metadata i32 %15, metadata !13112, metadata !DIExpression()), !dbg !13120
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #2 !dbg !13133 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13137, metadata !DIExpression()), !dbg !13140
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13138, metadata !DIExpression()), !dbg !13140
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13139, metadata !DIExpression()), !dbg !13140
  %2 = sext i16 %0 to i32, !dbg !13141
  %3 = icmp slt i16 %0, 1, !dbg !13143
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13144
  %6 = add nsw i32 %2, -1, !dbg !13144
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13144
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13144
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13138, metadata !DIExpression()), !dbg !13140
  ret %struct.device* %8, !dbg !13145
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13146 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13148, metadata !DIExpression()), !dbg !13153
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13149, metadata !DIExpression()), !dbg !13153
  call void @llvm.dbg.value(metadata i8* %2, metadata !13150, metadata !DIExpression()), !dbg !13153
  %5 = bitcast i32* %4 to i8*, !dbg !13154
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13154
  call void @llvm.dbg.value(metadata i32 0, metadata !13151, metadata !DIExpression()), !dbg !13153
  store i32 0, i32* %4, align 4, !dbg !13155
  call void @llvm.dbg.value(metadata i32* %4, metadata !13151, metadata !DIExpression(DW_OP_deref)), !dbg !13153
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13156
  call void @llvm.dbg.value(metadata i16* %6, metadata !13152, metadata !DIExpression()), !dbg !13153
  %7 = load i32, i32* %4, align 4, !dbg !13157
  call void @llvm.dbg.value(metadata i32 %7, metadata !13151, metadata !DIExpression()), !dbg !13153
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13158
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13159
  ret i32 %8, !dbg !13160
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13161 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13163, metadata !DIExpression()), !dbg !13168
  call void @llvm.dbg.value(metadata i32* %1, metadata !13164, metadata !DIExpression()), !dbg !13168
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13169
  %4 = load i16*, i16** %3, align 4, !dbg !13169
  call void @llvm.dbg.value(metadata i16* %4, metadata !13165, metadata !DIExpression()), !dbg !13168
  call void @llvm.dbg.value(metadata i32 0, metadata !13166, metadata !DIExpression()), !dbg !13168
  call void @llvm.dbg.value(metadata i32 0, metadata !13167, metadata !DIExpression()), !dbg !13168
  %5 = icmp eq i16* %4, null, !dbg !13170
  br i1 %5, label %22, label %6, !dbg !13172

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13166, metadata !DIExpression()), !dbg !13168
  call void @llvm.dbg.value(metadata i16* %8, metadata !13165, metadata !DIExpression()), !dbg !13168
  %9 = load i16, i16* %8, align 2, !dbg !13173
  %10 = icmp eq i16 %9, -32768, !dbg !13177
  call void @llvm.dbg.value(metadata i32 undef, metadata !13166, metadata !DIExpression()), !dbg !13168
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13178
  call void @llvm.dbg.value(metadata i16* %11, metadata !13165, metadata !DIExpression()), !dbg !13168
  %12 = zext i1 %10 to i32, !dbg !13179
  %13 = add i32 %7, %12, !dbg !13179
  call void @llvm.dbg.value(metadata i32 %13, metadata !13166, metadata !DIExpression()), !dbg !13168
  %14 = icmp eq i32 %13, 2, !dbg !13180
  br i1 %14, label %15, label %6, !dbg !13181

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13168
  call void @llvm.dbg.value(metadata i32 %16, metadata !13167, metadata !DIExpression()), !dbg !13168
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13182
  %18 = load i16, i16* %17, align 2, !dbg !13182
  %19 = icmp eq i16 %18, 32767, !dbg !13183
  %20 = add i32 %16, 1, !dbg !13184
  call void @llvm.dbg.value(metadata i32 %20, metadata !13167, metadata !DIExpression()), !dbg !13168
  br i1 %19, label %21, label %15, !dbg !13186, !llvm.loop !13187

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13189
  br label %22, !dbg !13190

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13191
  call void @llvm.dbg.value(metadata i16* %23, metadata !13165, metadata !DIExpression()), !dbg !13168
  ret i16* %23, !dbg !13192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !13193 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13196
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !13197
  ret i32* %2, !dbg !13198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #2 !dbg !13199 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13350, metadata !DIExpression()), !dbg !13353
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13351, metadata !DIExpression()), !dbg !13353
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13352, metadata !DIExpression()), !dbg !13353
  ret void, !dbg !13354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !13355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13359, metadata !DIExpression()), !dbg !13361
  call void @llvm.dbg.value(metadata i32 %1, metadata !13360, metadata !DIExpression()), !dbg !13361
  ret void, !dbg !13362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !13363 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13367, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata i32 %1, metadata !13368, metadata !DIExpression()), !dbg !13369
  ret void, !dbg !13370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !13371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13375, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata i8* %1, metadata !13376, metadata !DIExpression()), !dbg !13377
  ret i32 -134, !dbg !13378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !13379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13383, metadata !DIExpression()), !dbg !13385
  call void @llvm.dbg.value(metadata i8* %1, metadata !13384, metadata !DIExpression()), !dbg !13385
  ret i32 -134, !dbg !13386
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13390, metadata !DIExpression()), !dbg !13391
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13392, !srcloc !13398
  call void @llvm.dbg.value(metadata i32 undef, metadata !13395, metadata !DIExpression()) #23, !dbg !13399
  call void @llvm.dbg.value(metadata i32 undef, metadata !13396, metadata !DIExpression()) #23, !dbg !13399
  br label %3, !dbg !13400

3:                                                ; preds = %3, %1
  br label %3, !dbg !13401, !llvm.loop !13404
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13411, metadata !DIExpression()), !dbg !13413
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13412, metadata !DIExpression()), !dbg !13413
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.215, i32 0, i32 0), i32 noundef 69) #25, !dbg !13414
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13419
  unreachable, !dbg !13419
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13420 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13422, metadata !DIExpression()), !dbg !13423
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13424
  unreachable, !dbg !13424
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13427, metadata !DIExpression()), !dbg !13431
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13428, metadata !DIExpression()), !dbg !13431
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13432, !srcloc !13398
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13432
  call void @llvm.dbg.value(metadata i32 %4, metadata !13395, metadata !DIExpression()) #23, !dbg !13434
  call void @llvm.dbg.value(metadata i32 undef, metadata !13396, metadata !DIExpression()) #23, !dbg !13434
  call void @llvm.dbg.value(metadata i32 %4, metadata !13429, metadata !DIExpression()), !dbg !13431
  %5 = tail call fastcc %struct.k_thread* @k_current_get.218() #26, !dbg !13435
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13430, metadata !DIExpression()), !dbg !13431
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13436
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.219, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !13436
  %7 = icmp eq %struct.__esf* %1, null, !dbg !13441
  br i1 %7, label %20, label %8, !dbg !13443

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13444, metadata !DIExpression()), !dbg !13449
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13451
  %10 = load i32, i32* %9, align 4, !dbg !13451
  %11 = and i32 %10, 511, !dbg !13452
  %12 = icmp eq i32 %11, 0, !dbg !13453
  br i1 %12, label %14, label %13, !dbg !13454

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.220, i32 0, i32 0), i32 noundef 69) #25, !dbg !13455
  br label %14, !dbg !13461

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13462
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.221, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !13462
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13467
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13444, metadata !DIExpression()), !dbg !13468
  %16 = load i32, i32* %9, align 4, !dbg !13473
  %17 = and i32 %16, 511, !dbg !13474
  %18 = icmp eq i32 %17, 0, !dbg !13475
  br i1 %18, label %22, label %19, !dbg !13476

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !13477, metadata !DIExpression()) #23, !dbg !13480
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13483, !srcloc !13484
  br label %25, !dbg !13485

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13462
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.221, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !13462
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13467
  br label %22, !dbg !13486

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !13487
  call void @llvm.dbg.value(metadata i32 %4, metadata !13477, metadata !DIExpression()) #23, !dbg !13490
  call void @llvm.dbg.value(metadata i32 %4, metadata !13477, metadata !DIExpression()) #23, !dbg !13493
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13431
  br i1 %23, label %25, label %24, !dbg !13495

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.222(%struct.k_thread* noundef %5) #24, !dbg !13496
  br label %25, !dbg !13499

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !13499
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.218() unnamed_addr #11 !dbg !13500 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.230() #26, !dbg !13504
  ret %struct.k_thread* %1, !dbg !13505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #2 !dbg !13506 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13510, metadata !DIExpression()), !dbg !13511
  %2 = icmp ult i32 %0, 5, !dbg !13512
  br i1 %2, label %3, label %6, !dbg !13512

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13512
  %5 = load i8*, i8** %4, align 4, !dbg !13512
  br label %6, !dbg !13512

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.224, i32 0, i32 0), %1 ], !dbg !13513
  ret i8* %7, !dbg !13515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13516 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13520, metadata !DIExpression()), !dbg !13522
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13523
  br i1 %2, label %9, label %3, !dbg !13524

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13525
  call void @llvm.dbg.value(metadata i8* %4, metadata !13521, metadata !DIExpression()), !dbg !13522
  %5 = icmp eq i8* %4, null, !dbg !13526
  br i1 %5, label %9, label %6, !dbg !13528

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13529
  %8 = icmp eq i8 %7, 0, !dbg !13530
  br i1 %8, label %9, label %10, !dbg !13531

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.223, i32 0, i32 0), metadata !13521, metadata !DIExpression()), !dbg !13522
  br label %10, !dbg !13532

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.223, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13522
  call void @llvm.dbg.value(metadata i8* %11, metadata !13521, metadata !DIExpression()), !dbg !13522
  ret i8* %11, !dbg !13534
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.222(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13535 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13539, metadata !DIExpression()), !dbg !13540
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13541, !srcloc !13543
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13544
  ret void, !dbg !13545
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.230() unnamed_addr #11 !dbg !13546 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13547, !srcloc !13549
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13550
  ret %struct.k_thread* %1, !dbg !13551
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13552 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13556, metadata !DIExpression()), !dbg !13559
  call void @llvm.dbg.value(metadata i32 %1, metadata !13557, metadata !DIExpression()), !dbg !13559
  call void @llvm.dbg.value(metadata i32 %2, metadata !13558, metadata !DIExpression()), !dbg !13559
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13560
  ret void, !dbg !13561
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13562 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13566, metadata !DIExpression()), !dbg !13569
  call void @llvm.dbg.value(metadata i8* %1, metadata !13567, metadata !DIExpression()), !dbg !13569
  call void @llvm.dbg.value(metadata i32 %2, metadata !13568, metadata !DIExpression()), !dbg !13569
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13570
  ret void, !dbg !13571
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13572 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13573
  ret void, !dbg !13574
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13577, metadata !DIExpression()), !dbg !13578
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13579
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13580
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13581
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13582
  %4 = trunc i32 %0 to i8, !dbg !13583
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13584
  store i8 %4, i8* %5, align 4, !dbg !13585
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13586
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !13587
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13588
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13589
  store i8* %8, i8** %9, align 4, !dbg !13590
  ret void, !dbg !13591
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13594, metadata !DIExpression()), !dbg !13600
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13601
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13595, metadata !DIExpression()), !dbg !13600
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13602
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13596, metadata !DIExpression()), !dbg !13600
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.237, i32 0, i32 0), metadata !13599, metadata !DIExpression()), !dbg !13600
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13603
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13604
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.237, i32 0, i32 0)) #25, !dbg !13605
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !13606
  ret void, !dbg !13607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !13608 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13612, metadata !DIExpression()), !dbg !13613
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13614
  ret i8* %2, !dbg !13615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13616 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13621, metadata !DIExpression()), !dbg !13622
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13623
  %3 = load i8, i8* %2, align 1, !dbg !13624
  %4 = and i8 %3, -5, !dbg !13624
  store i8 %4, i8* %2, align 1, !dbg !13624
  ret void, !dbg !13625
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13626 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !13629
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13630
  %3 = ptrtoint i8* %2 to i32, !dbg !13639
  %4 = add i32 %3, 2048, !dbg !13640
  call void @llvm.dbg.value(metadata i32 %4, metadata !13634, metadata !DIExpression()) #23, !dbg !13641
  call void @llvm.dbg.value(metadata i32 %4, metadata !13642, metadata !DIExpression()) #23, !dbg !13645
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !13647, !srcloc !13648
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13649
  %6 = or i32 %5, 512, !dbg !13649
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13649
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -2, i32 noundef 255) #25, !dbg !13650
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -5, i32 noundef 0) #25, !dbg !13653
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -12, i32 noundef 0) #25, !dbg !13654
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -11, i32 noundef 0) #25, !dbg !13655
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -10, i32 noundef 0) #25, !dbg !13656
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -4, i32 noundef 0) #25, !dbg !13657
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13658
  %8 = or i32 %7, 458752, !dbg !13658
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13658
  tail call void @z_arm_fault_init() #25, !dbg !13659
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13660
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13661
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13664
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13665
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13666
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13667
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13667
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13628, metadata !DIExpression()), !dbg !13668
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !13669
  call void @z_device_state_init() #25, !dbg !13670
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !13671
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !13672
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !13673
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13674
  unreachable, !dbg !13674
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2191, metadata !DIExpression()), !dbg !13675
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13676
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13676
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2192, metadata !DIExpression()), !dbg !13675
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2192, metadata !DIExpression()), !dbg !13675
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13677
  br i1 %7, label %8, label %35, !dbg !13678

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2192, metadata !DIExpression()), !dbg !13675
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13679
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13679
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2202, metadata !DIExpression()), !dbg !13680
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13681
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13681
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13682
  call void @llvm.dbg.value(metadata i32 %14, metadata !2206, metadata !DIExpression()), !dbg !13680
  %15 = icmp eq %struct.device* %11, null, !dbg !13683
  br i1 %15, label %32, label %16, !dbg !13685

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13686
  br i1 %17, label %26, label %18, !dbg !13689

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13690
  call void @llvm.dbg.value(metadata i32 %19, metadata !2206, metadata !DIExpression()), !dbg !13680
  %20 = icmp ult i32 %19, 255, !dbg !13692
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13692
  call void @llvm.dbg.value(metadata i32 %21, metadata !2206, metadata !DIExpression()), !dbg !13680
  %22 = trunc i32 %21 to i8, !dbg !13693
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13694
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13694
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13695
  store i8 %22, i8* %25, align 1, !dbg !13696
  br label %26, !dbg !13697

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13698
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13698
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13699
  %30 = load i8, i8* %29, align 1, !dbg !13700
  %31 = or i8 %30, 1, !dbg !13700
  store i8 %31, i8* %29, align 1, !dbg !13700
  br label %32, !dbg !13701

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13702
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2192, metadata !DIExpression()), !dbg !13675
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13677
  br i1 %34, label %8, label %35, !dbg !13678, !llvm.loop !13703

35:                                               ; preds = %32, %1
  ret void, !dbg !13705
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.240(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !13706 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13708, metadata !DIExpression()), !dbg !13710
  call void @llvm.dbg.value(metadata i32 %1, metadata !13709, metadata !DIExpression()), !dbg !13710
  %3 = trunc i32 %1 to i8, !dbg !13711
  %4 = shl i8 %3, 4, !dbg !13711
  %5 = and i32 %0, 15, !dbg !13714
  %6 = add nsw i32 %5, -4, !dbg !13715
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13716
  store volatile i8 %4, i8* %7, align 1, !dbg !13717
  ret void, !dbg !13718
}

; Function Attrs: optsize
declare !dbg !13719 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !13720 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13723, metadata !DIExpression()), !dbg !13724
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13725
  store i8 1, i8* %2, align 1, !dbg !13726
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13727
  store i8 1, i8* %3, align 4, !dbg !13728
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13729
  store i32 0, i32* %4, align 4, !dbg !13730
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13731
  store i32 0, i32* %5, align 4, !dbg !13732
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13733
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13734
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13735
  ret void, !dbg !13736
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13737 {
  tail call void @z_sched_init() #25, !dbg !13742
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13743
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.241, i32 0, i32 0)) #25, !dbg !13744
  call void @llvm.dbg.value(metadata i8* %1, metadata !13741, metadata !DIExpression()), !dbg !13745
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13746
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13747
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !13748
  ret i8* %1, !dbg !13749
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !13750 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13754, metadata !DIExpression()), !dbg !13755
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13756
  unreachable, !dbg !13757
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13758 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13760, metadata !DIExpression()), !dbg !13763
  call void @llvm.dbg.value(metadata i8* %1, metadata !13761, metadata !DIExpression()), !dbg !13763
  call void @llvm.dbg.value(metadata i8* %2, metadata !13762, metadata !DIExpression()), !dbg !13763
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13764
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !13765
  tail call void @boot_banner() #25, !dbg !13766
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !13767
  tail call void @z_init_static_threads() #25, !dbg !13768
  tail call void @main() #25, !dbg !13769
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13770
  %5 = and i8 %4, -2, !dbg !13770
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13770
  ret void, !dbg !13771
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !13772 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13782, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.value(metadata i8* %1, metadata !13783, metadata !DIExpression()), !dbg !13784
  ret void, !dbg !13785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !13786 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13788, metadata !DIExpression()), !dbg !13790
  call void @llvm.dbg.value(metadata i8* %1, metadata !13789, metadata !DIExpression()), !dbg !13790
  ret void, !dbg !13791
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13792 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13793, !srcloc !13800
  call void @llvm.dbg.value(metadata i32 %1, metadata !13796, metadata !DIExpression()) #23, !dbg !13801
  %2 = icmp ne i32 %1, 0, !dbg !13802
  ret i1 %2, !dbg !13803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13804 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13805
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13806
  %3 = load i8, i8* %2, align 4, !dbg !13807
  %4 = or i8 %3, 1, !dbg !13807
  store i8 %4, i8* %2, align 4, !dbg !13807
  ret void, !dbg !13808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13809 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13810
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13811
  %3 = load i8, i8* %2, align 4, !dbg !13812
  %4 = and i8 %3, -2, !dbg !13812
  store i8 %4, i8* %2, align 4, !dbg !13812
  ret void, !dbg !13813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13814 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13815
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13816
  %3 = load i8, i8* %2, align 4, !dbg !13816
  %4 = and i8 %3, 1, !dbg !13817
  %5 = icmp ne i8 %4, 0, !dbg !13818
  ret i1 %5, !dbg !13819
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13820 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13824, metadata !DIExpression()), !dbg !13826
  call void @llvm.dbg.value(metadata i8* %1, metadata !13825, metadata !DIExpression()), !dbg !13826
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13827
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13829
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13824, metadata !DIExpression()), !dbg !13826
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13830
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13831
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13832
  store i8 0, i8* %8, align 1, !dbg !13833
  ret i32 0, !dbg !13834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #2 !dbg !13835 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13839, metadata !DIExpression()), !dbg !13840
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13841
  ret i8* %2, !dbg !13842
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13843 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13847, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.value(metadata i8* %1, metadata !13848, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.value(metadata i32 %2, metadata !13849, metadata !DIExpression()), !dbg !13850
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13851
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13852
  ret i32 0, !dbg !13853
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2215 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2332, metadata !DIExpression()), !dbg !13854
  call void @llvm.dbg.value(metadata i8* %1, metadata !2333, metadata !DIExpression()), !dbg !13854
  call void @llvm.dbg.value(metadata i32 %2, metadata !2334, metadata !DIExpression()), !dbg !13854
  call void @llvm.dbg.value(metadata i32 0, metadata !2335, metadata !DIExpression()), !dbg !13854
  call void @llvm.dbg.value(metadata i8 undef, metadata !2337, metadata !DIExpression()), !dbg !13854
  %4 = icmp eq i8* %1, null, !dbg !13855
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13857
  br i1 %6, label %46, label %7, !dbg !13857

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13858
  %9 = load i8, i8* %8, align 1, !dbg !13858
  call void @llvm.dbg.value(metadata i8 %9, metadata !2337, metadata !DIExpression()), !dbg !13854
  %10 = add i32 %2, -1, !dbg !13859
  call void @llvm.dbg.value(metadata i32 %10, metadata !2334, metadata !DIExpression()), !dbg !13854
  call void @llvm.dbg.value(metadata i8 0, metadata !2338, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.value(metadata i8 %9, metadata !2337, metadata !DIExpression()), !dbg !13854
  call void @llvm.dbg.value(metadata i32 0, metadata !2335, metadata !DIExpression()), !dbg !13854
  %11 = icmp eq i8 %9, 0, !dbg !13861
  br i1 %11, label %12, label %15, !dbg !13863

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13864
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13865
  store i8 0, i8* %14, align 1, !dbg !13866
  br label %46, !dbg !13867

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2338, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.value(metadata i8 %17, metadata !2337, metadata !DIExpression()), !dbg !13854
  call void @llvm.dbg.value(metadata i32 %18, metadata !2335, metadata !DIExpression()), !dbg !13854
  %19 = zext i8 %17 to i32, !dbg !13868
  %20 = zext i8 %16 to i32, !dbg !13869
  %21 = shl nuw i32 1, %20, !dbg !13869
  call void @llvm.dbg.value(metadata i32 %21, metadata !2336, metadata !DIExpression()), !dbg !13854
  %22 = and i32 %21, %19, !dbg !13871
  %23 = icmp eq i32 %22, 0, !dbg !13873
  br i1 %23, label %42, label %24, !dbg !13874

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13875
  %26 = sub i32 %10, %18, !dbg !13876
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13877
  %28 = load i8*, i8** %27, align 4, !dbg !13877
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13878
  %30 = load i32, i32* %29, align 4, !dbg !13878
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13879
  %32 = add i32 %31, %18, !dbg !13880
  call void @llvm.dbg.value(metadata i32 %32, metadata !2335, metadata !DIExpression()), !dbg !13854
  %33 = trunc i32 %21 to i8, !dbg !13881
  %34 = xor i8 %33, -1, !dbg !13881
  %35 = and i8 %17, %34, !dbg !13881
  call void @llvm.dbg.value(metadata i8 %35, metadata !2337, metadata !DIExpression()), !dbg !13854
  %36 = icmp eq i8 %35, 0, !dbg !13882
  br i1 %36, label %12, label %37, !dbg !13884

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13885
  %39 = sub i32 %10, %32, !dbg !13887
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.246, i32 0, i32 0), i32 noundef 1) #24, !dbg !13888
  %41 = add i32 %40, %32, !dbg !13889
  call void @llvm.dbg.value(metadata i32 %41, metadata !2335, metadata !DIExpression()), !dbg !13854
  br label %42, !dbg !13890

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13854
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13854
  call void @llvm.dbg.value(metadata i8 %44, metadata !2337, metadata !DIExpression()), !dbg !13854
  call void @llvm.dbg.value(metadata i32 %43, metadata !2335, metadata !DIExpression()), !dbg !13854
  %45 = add i8 %16, 1, !dbg !13891
  call void @llvm.dbg.value(metadata i8 %45, metadata !2338, metadata !DIExpression()), !dbg !13860
  br label %15, !dbg !13863

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.247, i32 0, i32 0), %3 ], !dbg !13854
  ret i8* %47, !dbg !13892
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13893 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13897, metadata !DIExpression()), !dbg !13902
  call void @llvm.dbg.value(metadata i32 %1, metadata !13898, metadata !DIExpression()), !dbg !13902
  call void @llvm.dbg.value(metadata i8* %2, metadata !13899, metadata !DIExpression()), !dbg !13902
  call void @llvm.dbg.value(metadata i32 %3, metadata !13900, metadata !DIExpression()), !dbg !13902
  %5 = icmp ult i32 %1, %3, !dbg !13903
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13903
  call void @llvm.dbg.value(metadata i32 %6, metadata !13901, metadata !DIExpression()), !dbg !13902
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13904
  ret i32 %6, !dbg !13905
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13906 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13910, metadata !DIExpression()), !dbg !13911
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13912
  ret void, !dbg !13913
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13914 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13923, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13924, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i32 %2, metadata !13925, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13926, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i8* %4, metadata !13927, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i8* %5, metadata !13928, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i8* %6, metadata !13929, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i32 %7, metadata !13930, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i32 %8, metadata !13931, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i8* %9, metadata !13932, metadata !DIExpression()), !dbg !13934
  %11 = icmp eq i32 %7, 15, !dbg !13935
  br i1 %11, label %12, label %15, !dbg !13935

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13935
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13935
  br i1 %14, label %19, label %18, !dbg !13935

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13935
  %17 = icmp ult i32 %16, 31, !dbg !13935
  br i1 %17, label %19, label %18, !dbg !13935

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.261, i32 0, i32 0), i32 noundef 536) #25, !dbg !13939
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.262, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13939
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.261, i32 0, i32 0), i32 noundef 536) #25, !dbg !13939
  unreachable, !dbg !13939

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13941
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #24, !dbg !13942
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13943
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13944
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13945
  call void @llvm.dbg.value(metadata i8* %22, metadata !13933, metadata !DIExpression()), !dbg !13934
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13946
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13947
  store i8* null, i8** %23, align 4, !dbg !13948
  %24 = icmp eq i8* %9, null, !dbg !13949
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13951
  br i1 %24, label %29, label %26, !dbg !13952

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13953
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13955
  store i8 0, i8* %28, align 1, !dbg !13956
  br label %30, !dbg !13957

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13958
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13960
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13960
  br i1 %32, label %36, label %33, !dbg !13962

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13963
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13963
  br label %36, !dbg !13964

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13934
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13965
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13967
  ret i8* %22, !dbg !13968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #2 !dbg !13969 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13973, metadata !DIExpression()), !dbg !13974
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13975
  ret i1 %2, !dbg !13976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #7 !dbg !13977 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13982, metadata !DIExpression()), !dbg !13983
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13984
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !13985
  ret void, !dbg !13986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13987 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13992, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.value(metadata i32 %1, metadata !13993, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.value(metadata i32 %2, metadata !13994, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.value(metadata i32 %3, metadata !13995, metadata !DIExpression()), !dbg !13996
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13997
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13998
  %6 = trunc i32 %3 to i8, !dbg !13999
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14000
  store i8 %6, i8* %7, align 4, !dbg !14001
  %8 = trunc i32 %2 to i8, !dbg !14002
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14003
  store i8 %8, i8* %9, align 1, !dbg !14004
  %10 = trunc i32 %1 to i8, !dbg !14005
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14006
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14006
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14006
  store i8 %10, i8* %13, align 2, !dbg !14007
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14008
  store i8 0, i8* %14, align 1, !dbg !14009
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14010
  ret void, !dbg !14011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !14012 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14016, metadata !DIExpression()), !dbg !14024
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14017, metadata !DIExpression()), !dbg !14024
  call void @llvm.dbg.value(metadata i32 %2, metadata !14018, metadata !DIExpression()), !dbg !14024
  call void @llvm.dbg.value(metadata i32 0, metadata !14023, metadata !DIExpression()), !dbg !14024
  %4 = add i32 %2, 7, !dbg !14025
  %5 = and i32 %4, -8, !dbg !14025
  %6 = add i32 %5, 64, !dbg !14025
  call void @llvm.dbg.value(metadata i32 %6, metadata !14019, metadata !DIExpression()), !dbg !14024
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.263(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14027
  call void @llvm.dbg.value(metadata i8* %7, metadata !14022, metadata !DIExpression()), !dbg !14024
  call void @llvm.dbg.value(metadata i32 %5, metadata !14020, metadata !DIExpression()), !dbg !14024
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14028
  call void @llvm.dbg.value(metadata i8* %8, metadata !14021, metadata !DIExpression()), !dbg !14024
  call void @llvm.dbg.value(metadata i32 0, metadata !14023, metadata !DIExpression()), !dbg !14024
  %9 = ptrtoint i8* %7 to i32, !dbg !14029
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !14030
  store i32 %9, i32* %10, align 4, !dbg !14031
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !14032
  store i32 %5, i32* %11, align 4, !dbg !14033
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !14034
  store i32 0, i32* %12, align 4, !dbg !14035
  call void @llvm.dbg.value(metadata i8* %8, metadata !14021, metadata !DIExpression()), !dbg !14024
  ret i8* %8, !dbg !14036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.263(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !14037 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14041, metadata !DIExpression()), !dbg !14042
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14043
  ret i8* %2, !dbg !14044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14045 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14050, metadata !DIExpression()), !dbg !14051
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14052
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14053
  ret void, !dbg !14054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14055 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14057, metadata !DIExpression()), !dbg !14058
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14059
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14060
  ret void, !dbg !14061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14062 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14066, metadata !DIExpression()), !dbg !14067
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14068
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14069
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14070
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14071
  ret void, !dbg !14072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14073 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14078, metadata !DIExpression()), !dbg !14079
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14080
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14081
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14082
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14083
  ret void, !dbg !14084
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14085 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14102, metadata !DIExpression()), !dbg !14103
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14093, metadata !DIExpression()), !dbg !14103
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14094, metadata !DIExpression()), !dbg !14103
  call void @llvm.dbg.value(metadata i32 %2, metadata !14095, metadata !DIExpression()), !dbg !14103
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14096, metadata !DIExpression()), !dbg !14103
  call void @llvm.dbg.value(metadata i8* %4, metadata !14097, metadata !DIExpression()), !dbg !14103
  call void @llvm.dbg.value(metadata i8* %5, metadata !14098, metadata !DIExpression()), !dbg !14103
  call void @llvm.dbg.value(metadata i8* %6, metadata !14099, metadata !DIExpression()), !dbg !14103
  call void @llvm.dbg.value(metadata i32 %7, metadata !14100, metadata !DIExpression()), !dbg !14103
  call void @llvm.dbg.value(metadata i32 %8, metadata !14101, metadata !DIExpression()), !dbg !14103
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14104, !srcloc !13800
  call void @llvm.dbg.value(metadata i32 %11, metadata !13796, metadata !DIExpression()) #23, !dbg !14109
  %12 = icmp eq i32 %11, 0, !dbg !14110
  br i1 %12, label %14, label %13, !dbg !14111

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.261, i32 0, i32 0), i32 noundef 647) #25, !dbg !14112
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.267, i32 0, i32 0)) #25, !dbg !14112
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.261, i32 0, i32 0), i32 noundef 647) #25, !dbg !14112
  unreachable, !dbg !14112

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14102, metadata !DIExpression()), !dbg !14103
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !14114
  %17 = icmp eq i64 %15, -1, !dbg !14115
  br i1 %17, label %19, label %18, !dbg !14117

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14118
  br label %19, !dbg !14120

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14121
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14122 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14127, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14126, metadata !DIExpression()), !dbg !14128
  %4 = icmp eq i64 %3, 0, !dbg !14129
  br i1 %4, label %5, label %6, !dbg !14131

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.268(%struct.k_thread* noundef %0) #24, !dbg !14132
  br label %7, !dbg !14134

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14135
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.268(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14138 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14142, metadata !DIExpression()), !dbg !14143
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14144, !srcloc !14146
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14147
  ret void, !dbg !14148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14149 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14152, metadata !DIExpression()), !dbg !14153
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14151, metadata !DIExpression()), !dbg !14153
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14154
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14155
  ret void, !dbg !14156
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14157 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14159, metadata !DIExpression()), !dbg !14179
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14180

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.261, i32 0, i32 0), i32 noundef 750) #25, !dbg !14184
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.272, i32 0, i32 0)) #25, !dbg !14184
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.261, i32 0, i32 0), i32 noundef 750) #25, !dbg !14184
  unreachable, !dbg !14184

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14159, metadata !DIExpression()), !dbg !14179
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14187
  br i1 %4, label %6, label %5, !dbg !14188

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14189
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14177, metadata !DIExpression()), !dbg !14190
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !14191

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14195
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14195
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14197
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14197
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14198
  %12 = load i32, i32* %11, align 4, !dbg !14198
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14199
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14199
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14200
  %16 = load i8*, i8** %15, align 4, !dbg !14200
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14201
  %18 = load i8*, i8** %17, align 4, !dbg !14201
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14202
  %20 = load i8*, i8** %19, align 4, !dbg !14202
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14203
  %22 = load i32, i32* %21, align 4, !dbg !14203
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14204
  %24 = load i32, i32* %23, align 4, !dbg !14204
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !14205
  %26 = load i8*, i8** %25, align 4, !dbg !14205
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !14206
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14207
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !14208
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !14209
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !14209
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14210
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14159, metadata !DIExpression()), !dbg !14179
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14211
  br i1 %32, label %1, label %2, !dbg !14180, !llvm.loop !14212

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.261, i32 0, i32 0), i32 noundef 781) #25, !dbg !14214
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.272, i32 0, i32 0)) #25, !dbg !14214
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.261, i32 0, i32 0), i32 noundef 781) #25, !dbg !14214
  unreachable, !dbg !14214

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !14177, metadata !DIExpression()), !dbg !14190
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14217
  br i1 %36, label %38, label %37, !dbg !14218

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !14219
  ret void, !dbg !14220

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !14221
  %40 = load i32, i32* %39, align 4, !dbg !14221
  %41 = icmp eq i32 %40, -1, !dbg !14224
  br i1 %41, label %50, label %42, !dbg !14225

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !14226
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !14226
  %45 = icmp sgt i32 %40, 0, !dbg !14228
  %46 = select i1 %45, i32 %40, i32 0, !dbg !14228
  %47 = zext i32 %46 to i64, !dbg !14228
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !14228
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !14229
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !14229
  br label %50, !dbg !14230

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !14231
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !14177, metadata !DIExpression()), !dbg !14190
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14232
  br i1 %52, label %33, label %34, !dbg !14191, !llvm.loop !14233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !14235 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14239, metadata !DIExpression()), !dbg !14240
  call void @llvm.dbg.value(metadata i64 %0, metadata !14241, metadata !DIExpression()), !dbg !14256
  call void @llvm.dbg.value(metadata i32 1000, metadata !14244, metadata !DIExpression()), !dbg !14256
  call void @llvm.dbg.value(metadata i32 10000, metadata !14245, metadata !DIExpression()), !dbg !14256
  call void @llvm.dbg.value(metadata i8 1, metadata !14246, metadata !DIExpression()), !dbg !14256
  call void @llvm.dbg.value(metadata i8 0, metadata !14247, metadata !DIExpression()), !dbg !14256
  call void @llvm.dbg.value(metadata i8 1, metadata !14248, metadata !DIExpression()), !dbg !14256
  call void @llvm.dbg.value(metadata i8 0, metadata !14249, metadata !DIExpression()), !dbg !14256
  call void @llvm.dbg.value(metadata i8 1, metadata !14250, metadata !DIExpression()), !dbg !14256
  call void @llvm.dbg.value(metadata i8 0, metadata !14251, metadata !DIExpression()), !dbg !14256
  call void @llvm.dbg.value(metadata i64 0, metadata !14252, metadata !DIExpression()), !dbg !14256
  call void @llvm.dbg.value(metadata i64 0, metadata !14252, metadata !DIExpression()), !dbg !14256
  %2 = mul i64 %0, 10, !dbg !14258
  ret i64 %2, !dbg !14264
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14265 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14267, metadata !DIExpression()), !dbg !14271
  call void @llvm.dbg.value(metadata i8* %1, metadata !14268, metadata !DIExpression()), !dbg !14271
  call void @llvm.dbg.value(metadata i8* %2, metadata !14269, metadata !DIExpression()), !dbg !14271
  call void @llvm.dbg.value(metadata i8* %3, metadata !14270, metadata !DIExpression()), !dbg !14271
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14272
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14273
  %7 = load i8, i8* %6, align 4, !dbg !14274
  %8 = or i8 %7, 4, !dbg !14274
  store i8 %8, i8* %6, align 4, !dbg !14274
  tail call void @z_thread_essential_clear() #24, !dbg !14275
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14276
  unreachable, !dbg !14276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14277 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14282, metadata !DIExpression()), !dbg !14284
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14285
  %3 = load i32, i32* %2, align 4, !dbg !14285
  call void @llvm.dbg.value(metadata i32 %3, metadata !14283, metadata !DIExpression()), !dbg !14284
  %4 = icmp eq i32 %3, 0, !dbg !14286
  br i1 %4, label %10, label %5, !dbg !14288

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14289
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14292
  %8 = zext i8 %7 to i32, !dbg !14293
  %9 = icmp eq i32 %6, %8, !dbg !14294
  br i1 %9, label %11, label %10, !dbg !14295

10:                                               ; preds = %5, %1
  br label %11, !dbg !14296

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14284
  ret i1 %12, !dbg !14297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !14298 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14300, metadata !DIExpression()), !dbg !14301
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14302
  %3 = load i32, i32* %2, align 4, !dbg !14302
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14304
  %5 = zext i8 %4 to i32, !dbg !14305
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14306
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14307
  %8 = or i32 %7, %5, !dbg !14308
  %9 = icmp eq i32 %3, %8, !dbg !14309
  br i1 %9, label %10, label %11, !dbg !14310

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14311
  br label %11, !dbg !14312

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14314 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14318, metadata !DIExpression()), !dbg !14319
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14320
  %3 = zext i8 %2 to i32, !dbg !14321
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14322
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14323
  %6 = or i32 %5, %3, !dbg !14324
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14325
  store i32 %6, i32* %7, align 4, !dbg !14326
  ret void, !dbg !14327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #2 !dbg !14328 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14332, metadata !DIExpression()), !dbg !14333
  ret i32 -134, !dbg !14334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #2 !dbg !14335 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14339, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata i32 %1, metadata !14340, metadata !DIExpression()), !dbg !14341
  ret i32 -134, !dbg !14342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #2 !dbg !14343 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14350, metadata !DIExpression()), !dbg !14352
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14351, metadata !DIExpression()), !dbg !14352
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14353
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14355
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14352
  ret i32 %6, !dbg !14356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #2 !dbg !14357 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14361, metadata !DIExpression()), !dbg !14362
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14363
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14362
  ret i32 %3, !dbg !14365
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14366 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14368
  ret void, !dbg !14369
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14370 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14372, metadata !DIExpression()), !dbg !14375
  call void @llvm.dbg.value(metadata i8* %1, metadata !14373, metadata !DIExpression()), !dbg !14375
  call void @llvm.dbg.value(metadata i8* %2, metadata !14374, metadata !DIExpression()), !dbg !14375
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14376
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14376
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14376
  %7 = load i8, i8* %6, align 2, !dbg !14376
  %8 = icmp sgt i8 %7, -1, !dbg !14376
  br i1 %8, label %10, label %9, !dbg !14379

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.283, i32 0, i32 0), i32 noundef 39) #25, !dbg !14380
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.283, i32 0, i32 0), i32 noundef 39) #25, !dbg !14380
  unreachable, !dbg !14380

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14382, !srcloc !14389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14385, metadata !DIExpression()) #23, !dbg !14390
  call void @llvm.dbg.value(metadata i32 undef, metadata !14386, metadata !DIExpression()) #23, !dbg !14390
  tail call fastcc void @k_cpu_idle() #24, !dbg !14391
  br label %10, !dbg !14392, !llvm.loop !14393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14395 {
  tail call void @arch_cpu_idle() #25, !dbg !14396
  ret void, !dbg !14397
}

; Function Attrs: optsize
declare !dbg !14398 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14399 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14403, metadata !DIExpression()), !dbg !14407
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14404, metadata !DIExpression()), !dbg !14407
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14408
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14408
  %5 = load i8, i8* %4, align 2, !dbg !14408
  call void @llvm.dbg.value(metadata i8 %5, metadata !14405, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14407
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14409
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14409
  %8 = load i8, i8* %7, align 2, !dbg !14409
  call void @llvm.dbg.value(metadata i8 %8, metadata !14406, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14407
  %9 = icmp eq i8 %8, %5, !dbg !14410
  %10 = sext i8 %5 to i32, !dbg !14412
  %11 = sext i8 %8 to i32, !dbg !14412
  %12 = sub nsw i32 %11, %10, !dbg !14412
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14412
  ret i32 %13, !dbg !14413
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14414 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14418, metadata !DIExpression()), !dbg !14419
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14420
  %3 = icmp eq i32 %2, 0, !dbg !14422
  br i1 %3, label %8, label %4, !dbg !14423

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14424
  %6 = add i32 %5, %2, !dbg !14426
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14427
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14428
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14429
  br label %8, !dbg !14430

8:                                                ; preds = %4, %1
  ret void, !dbg !14431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14432 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14436, metadata !DIExpression()), !dbg !14438
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14439
  call void @llvm.dbg.value(metadata i32 %1, metadata !14437, metadata !DIExpression()), !dbg !14438
  ret i32 %1, !dbg !14440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14445, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata i32 %1, metadata !14446, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata i32 0, metadata !14447, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !14463
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14465, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !14472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !14472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !14463
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14473
  br i1 %4, label %6, label %5, !dbg !14476

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14477
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14477
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14477
  unreachable, !dbg !14477

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !14472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !14463
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14479
  call void @llvm.dbg.value(metadata i32 undef, metadata !14453, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.value(metadata i32 undef, metadata !14447, metadata !DIExpression()), !dbg !14455
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14480
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14483
  %8 = icmp sgt i32 %0, 0, !dbg !14484
  %9 = icmp sgt i32 %7, 2, !dbg !14486
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14486
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14486
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14487
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14488
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !14496
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !14496
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14498
  br i1 %12, label %14, label %13, !dbg !14501

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14502
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14502
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14502
  unreachable, !dbg !14502

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14465
  call void @llvm.dbg.value(metadata i32 %15, metadata !14468, metadata !DIExpression()) #23, !dbg !14472
  call void @llvm.dbg.value(metadata i32 %15, metadata !14462, metadata !DIExpression()) #23, !dbg !14463
  call void @llvm.dbg.value(metadata i32 %15, metadata !14453, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !14496
  call void @llvm.dbg.value(metadata i32 undef, metadata !14504, metadata !DIExpression()) #23, !dbg !14507
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14509, !srcloc !14510
  call void @llvm.dbg.value(metadata i32 1, metadata !14447, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.value(metadata i32 undef, metadata !14447, metadata !DIExpression()), !dbg !14455
  ret void, !dbg !14511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #2 !dbg !14512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14514, metadata !DIExpression()), !dbg !14515
  call void @llvm.dbg.value(metadata i32 %0, metadata !14516, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14531
  call void @llvm.dbg.value(metadata i32 1000, metadata !14519, metadata !DIExpression()), !dbg !14531
  call void @llvm.dbg.value(metadata i32 10000, metadata !14520, metadata !DIExpression()), !dbg !14531
  call void @llvm.dbg.value(metadata i8 1, metadata !14521, metadata !DIExpression()), !dbg !14531
  call void @llvm.dbg.value(metadata i1 true, metadata !14522, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14531
  call void @llvm.dbg.value(metadata i1 true, metadata !14523, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14531
  call void @llvm.dbg.value(metadata i8 0, metadata !14524, metadata !DIExpression()), !dbg !14531
  call void @llvm.dbg.value(metadata i1 true, metadata !14525, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14531
  call void @llvm.dbg.value(metadata i1 false, metadata !14526, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14531
  call void @llvm.dbg.value(metadata i64 0, metadata !14527, metadata !DIExpression()), !dbg !14531
  call void @llvm.dbg.value(metadata i64 0, metadata !14527, metadata !DIExpression()), !dbg !14531
  %2 = mul i32 %0, 10, !dbg !14533
  ret i32 %2, !dbg !14539
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14542, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !14545
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14547, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !14549
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !14549
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !14545
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14550
  br i1 %3, label %5, label %4, !dbg !14551

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14552
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14552
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14552
  unreachable, !dbg !14552

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14547
  call void @llvm.dbg.value(metadata i32 %6, metadata !14468, metadata !DIExpression()) #23, !dbg !14549
  call void @llvm.dbg.value(metadata i32 %6, metadata !14462, metadata !DIExpression()) #23, !dbg !14545
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14553
  call void @llvm.dbg.value(metadata i32 %6, metadata !14543, metadata !DIExpression()), !dbg !14544
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14554
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14556
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14557
  br i1 %9, label %10, label %14, !dbg !14558

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14559
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !14561
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !14561
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14563
  br i1 %11, label %13, label %12, !dbg !14564

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14565
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14565
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14565
  unreachable, !dbg !14565

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14490, metadata !DIExpression()) #23, !dbg !14561
  call void @llvm.dbg.value(metadata i32 %6, metadata !14504, metadata !DIExpression()) #23, !dbg !14566
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14568, !srcloc !14510
  br label %33, !dbg !14569

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14570
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14571
  %16 = icmp eq i32 %15, 0, !dbg !14571
  br i1 %16, label %27, label %17, !dbg !14573

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14574
  br i1 %18, label %19, label %27, !dbg !14575

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14576
  %21 = icmp sgt i32 %20, %0, !dbg !14579
  br i1 %21, label %25, label %22, !dbg !14580

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14581
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14581
  call void @llvm.dbg.value(metadata i32 %24, metadata !14543, metadata !DIExpression()), !dbg !14544
  br label %28, !dbg !14583

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14584
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14584
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14586
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14544
  call void @llvm.dbg.value(metadata i32 %29, metadata !14543, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !14588
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !14588
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14590
  br i1 %30, label %32, label %31, !dbg !14591

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14592
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14592
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14592
  unreachable, !dbg !14592

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14490, metadata !DIExpression()) #23, !dbg !14588
  call void @llvm.dbg.value(metadata i32 %29, metadata !14504, metadata !DIExpression()) #23, !dbg !14593
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14595, !srcloc !14510
  br label %33, !dbg !14596

33:                                               ; preds = %32, %13
  ret void, !dbg !14596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14597 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14601, metadata !DIExpression()), !dbg !14603
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14604
  %3 = icmp eq i32 %2, 0, !dbg !14604
  br i1 %3, label %16, label %4, !dbg !14605

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14606
  br i1 %5, label %16, label %6, !dbg !14607

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14608
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14608
  %9 = load i8, i8* %8, align 2, !dbg !14608
  %10 = sext i8 %9 to i32, !dbg !14609
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14610
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !14611
  br i1 %12, label %16, label %13, !dbg !14612

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14613
  %15 = xor i1 %14, true, !dbg !14614
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14603
  call void @llvm.dbg.value(metadata i1 %17, metadata !14602, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14603
  ret i1 %17, !dbg !14615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14616 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()), !dbg !14622
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14623
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14621, metadata !DIExpression()), !dbg !14622
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14624
  br i1 %3, label %5, label %4, !dbg !14626

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14627
  br label %5, !dbg !14629

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14620, metadata !DIExpression()), !dbg !14622
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14630
  ret i32 %6, !dbg !14631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14632 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14634, metadata !DIExpression()), !dbg !14636
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14637
  %3 = load i8, i8* %2, align 1, !dbg !14637
  call void @llvm.dbg.value(metadata i8 %3, metadata !14635, metadata !DIExpression()), !dbg !14636
  %4 = and i8 %3, 31, !dbg !14638
  %5 = icmp ne i8 %4, 0, !dbg !14639
  ret i1 %5, !dbg !14640
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14641 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14643, metadata !DIExpression()), !dbg !14644
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14645
  br i1 %2, label %3, label %7, !dbg !14647

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14648, metadata !DIExpression()) #23, !dbg !14651
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14654
  %5 = load i8, i8* %4, align 1, !dbg !14655
  %6 = and i8 %5, 127, !dbg !14655
  store i8 %6, i8* %4, align 1, !dbg !14655
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14656, metadata !DIExpression()) #23, !dbg !14659
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14663
  br label %7, !dbg !14664

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14665, metadata !DIExpression()) #23, !dbg !14668
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14670
  %9 = load i8, i8* %8, align 1, !dbg !14671
  %10 = or i8 %9, -128, !dbg !14671
  store i8 %10, i8* %8, align 1, !dbg !14671
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14672, metadata !DIExpression()) #23, !dbg !14675
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14679, metadata !DIExpression()) #23, !dbg !14687
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14685, metadata !DIExpression()) #23, !dbg !14687
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14689
  br i1 %11, label %12, label %13, !dbg !14692

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !14693
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !14693
  unreachable, !dbg !14693

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14695
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14686, metadata !DIExpression()) #23, !dbg !14687
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14697
  br i1 %15, label %26, label %16, !dbg !14695

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14686, metadata !DIExpression()) #23, !dbg !14687
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14699
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14686, metadata !DIExpression()) #23, !dbg !14687
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14700
  %20 = icmp sgt i32 %19, 0, !dbg !14703
  br i1 %20, label %21, label %23, !dbg !14704

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14705
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14707
  br label %28, !dbg !14708

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14697
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14686, metadata !DIExpression()) #23, !dbg !14687
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14697
  br i1 %25, label %26, label %16, !dbg !14695, !llvm.loop !14709

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14711
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14712
  br label %28, !dbg !14713

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14714
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14715
  %31 = zext i1 %30 to i32, !dbg !14715
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14716
  ret void, !dbg !14717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14718 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14720, metadata !DIExpression()), !dbg !14721
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14722
  ret i1 %2, !dbg !14723
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14724 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14726, metadata !DIExpression()), !dbg !14728
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14727, metadata !DIExpression()), !dbg !14728
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14729
  br i1 %3, label %4, label %5, !dbg !14732

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14733
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14733
  unreachable, !dbg !14733

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14735
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14736
  ret void, !dbg !14737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #2 !dbg !14738 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14740, metadata !DIExpression()), !dbg !14741
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14742
  ret i1 %2, !dbg !14743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14744 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14748, metadata !DIExpression()), !dbg !14749
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14750
  br i1 %2, label %6, label %3, !dbg !14750

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14751
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14751
  br label %6, !dbg !14750

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14750
  ret %struct._dnode* %7, !dbg !14752
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14753 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14757, metadata !DIExpression()), !dbg !14761
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14758, metadata !DIExpression()), !dbg !14761
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14762
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14762
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14759, metadata !DIExpression()), !dbg !14761
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14763
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14764
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14765
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14766
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14767
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14768
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14769
  ret void, !dbg !14770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14771 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14775, metadata !DIExpression()), !dbg !14777
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14776, metadata !DIExpression()), !dbg !14777
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14778
  br i1 %3, label %6, label %4, !dbg !14779

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14780
  br label %6, !dbg !14779

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14779
  ret %struct._dnode* %7, !dbg !14781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14782 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14786, metadata !DIExpression()), !dbg !14789
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14787, metadata !DIExpression()), !dbg !14789
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14790
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14790
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14788, metadata !DIExpression()), !dbg !14789
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14791
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14792
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14793
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14794
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14795
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14796
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14797
  ret void, !dbg !14798
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14799 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14801, metadata !DIExpression()), !dbg !14803
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14804
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14811, metadata !DIExpression()) #23, !dbg !14813
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14814
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14815
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14815
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14802, metadata !DIExpression()), !dbg !14803
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14816, metadata !DIExpression()) #23, !dbg !14822
  call void @llvm.dbg.value(metadata i32 %0, metadata !14821, metadata !DIExpression()) #23, !dbg !14822
  %6 = icmp eq i32 %0, 0, !dbg !14825
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14827
  br i1 %6, label %8, label %18, !dbg !14828

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14829
  br i1 %9, label %10, label %11, !dbg !14832

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 137) #25, !dbg !14833
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !14833
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 137) #25, !dbg !14833
  unreachable, !dbg !14833

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14835
  br i1 %12, label %18, label %13, !dbg !14837

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14838
  br i1 %14, label %18, label %15, !dbg !14840

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14841
  %17 = icmp eq i32 %16, 0, !dbg !14841
  br i1 %17, label %21, label %18, !dbg !14843

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14844
  br i1 %19, label %21, label %20, !dbg !14847

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14848
  br label %21, !dbg !14850

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14827
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14827
  ret void, !dbg !14851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14852 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14856, metadata !DIExpression()), !dbg !14859
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14857, metadata !DIExpression()), !dbg !14859
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !14860
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14858, metadata !DIExpression()), !dbg !14859
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14857, metadata !DIExpression()), !dbg !14859
  ret %struct.k_thread* %3, !dbg !14861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14862 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14864, metadata !DIExpression()), !dbg !14865
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14866
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14867
  %4 = xor i1 %3, true, !dbg !14868
  ret i1 %4, !dbg !14869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14870 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14872, metadata !DIExpression()), !dbg !14873
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14874
  %3 = load i16, i16* %2, align 2, !dbg !14874
  %4 = icmp ult i16 %3, 128, !dbg !14875
  %5 = zext i1 %4 to i32, !dbg !14875
  ret i32 %5, !dbg !14876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14877 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14883, metadata !DIExpression()), !dbg !14884
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14885
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14886
  %4 = xor i1 %3, true, !dbg !14887
  ret i1 %4, !dbg !14888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14889 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14895, metadata !DIExpression()), !dbg !14896
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14897
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14897
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14898
  ret i1 %4, !dbg !14899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14900 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14902, metadata !DIExpression()), !dbg !14904
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14903, metadata !DIExpression()), !dbg !14904
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14905
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14905
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14906
  br i1 %5, label %9, label %6, !dbg !14907

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14908
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14908
  br label %9, !dbg !14907

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14907
  ret %struct._dnode* %10, !dbg !14909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14910 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14914, metadata !DIExpression()), !dbg !14915
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14916
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14916
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14917
  ret i1 %4, !dbg !14918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14919 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14923, metadata !DIExpression()), !dbg !14926
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14927
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14927
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14924, metadata !DIExpression()), !dbg !14926
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14928
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14928
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14925, metadata !DIExpression()), !dbg !14926
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14929
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14930
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14931
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14932
  tail call fastcc void @sys_dnode_init.294(%struct._dnode* noundef %0) #24, !dbg !14933
  ret void, !dbg !14934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.294(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14935 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14937, metadata !DIExpression()), !dbg !14938
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14939
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14940
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14941
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14942
  ret void, !dbg !14943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14944 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14948, metadata !DIExpression()), !dbg !14950
  call void @llvm.dbg.value(metadata i32 %1, metadata !14949, metadata !DIExpression()), !dbg !14950
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14951
  %4 = load i8, i8* %3, align 1, !dbg !14951
  %5 = zext i8 %4 to i32, !dbg !14952
  %6 = and i32 %5, %1, !dbg !14953
  %7 = icmp ne i32 %6, 0, !dbg !14954
  ret i1 %7, !dbg !14955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !14956 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14960, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.value(metadata i32 %1, metadata !14961, metadata !DIExpression()), !dbg !14962
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !14963
  ret i1 %3, !dbg !14964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !14965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14967, metadata !DIExpression()), !dbg !14969
  call void @llvm.dbg.value(metadata i32 %1, metadata !14968, metadata !DIExpression()), !dbg !14969
  %3 = icmp slt i32 %0, %1, !dbg !14970
  ret i1 %3, !dbg !14971
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14972 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14974, metadata !DIExpression()), !dbg !14978
  call void @llvm.dbg.value(metadata i32 0, metadata !14975, metadata !DIExpression()), !dbg !14979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !14980
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14982, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !14984
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !14984
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !14980
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14985
  br i1 %3, label %5, label %4, !dbg !14986

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14987
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14987
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14987
  unreachable, !dbg !14987

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !14984
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !14980
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14988
  call void @llvm.dbg.value(metadata i32 undef, metadata !14977, metadata !DIExpression()), !dbg !14979
  call void @llvm.dbg.value(metadata i32 undef, metadata !14975, metadata !DIExpression()), !dbg !14979
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14989
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !14994
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !14994
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14996
  br i1 %6, label %8, label %7, !dbg !14997

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14998
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14998
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14998
  unreachable, !dbg !14998

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14982
  call void @llvm.dbg.value(metadata i32 %9, metadata !14468, metadata !DIExpression()) #23, !dbg !14984
  call void @llvm.dbg.value(metadata i32 %9, metadata !14462, metadata !DIExpression()) #23, !dbg !14980
  call void @llvm.dbg.value(metadata i32 %9, metadata !14977, metadata !DIExpression()), !dbg !14979
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !14994
  call void @llvm.dbg.value(metadata i32 undef, metadata !14504, metadata !DIExpression()) #23, !dbg !14999
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15001, !srcloc !14510
  call void @llvm.dbg.value(metadata i32 1, metadata !14975, metadata !DIExpression()), !dbg !14979
  call void @llvm.dbg.value(metadata i32 undef, metadata !14975, metadata !DIExpression()), !dbg !14979
  ret void, !dbg !15002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15003 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15005, metadata !DIExpression()), !dbg !15006
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15007
  br i1 %2, label %27, label %3, !dbg !15009

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15010
  br i1 %4, label %5, label %27, !dbg !15011

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14665, metadata !DIExpression()) #23, !dbg !15012
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15015
  %7 = load i8, i8* %6, align 1, !dbg !15016
  %8 = or i8 %7, -128, !dbg !15016
  store i8 %8, i8* %6, align 1, !dbg !15016
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14672, metadata !DIExpression()) #23, !dbg !15017
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14679, metadata !DIExpression()) #23, !dbg !15019
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14685, metadata !DIExpression()) #23, !dbg !15019
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15021
  br i1 %9, label %10, label %11, !dbg !15022

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15023
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15023
  unreachable, !dbg !15023

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15024
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14686, metadata !DIExpression()) #23, !dbg !15019
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15025
  br i1 %13, label %24, label %14, !dbg !15024

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14686, metadata !DIExpression()) #23, !dbg !15019
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15026
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14686, metadata !DIExpression()) #23, !dbg !15019
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !15027
  %18 = icmp sgt i32 %17, 0, !dbg !15028
  br i1 %18, label %19, label %21, !dbg !15029

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15030
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !15031
  br label %26, !dbg !15032

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !15025
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14686, metadata !DIExpression()) #23, !dbg !15019
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15025
  br i1 %23, label %24, label %14, !dbg !15024, !llvm.loop !15033

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15035
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !15036
  br label %26, !dbg !15037

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15038
  br label %27, !dbg !15039

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15041 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15043, metadata !DIExpression()), !dbg !15044
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15045
  br i1 %2, label %6, label %3, !dbg !15046

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15047
  %5 = xor i1 %4, true, !dbg !15046
  br label %6, !dbg !15046

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15048
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15049 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15051, metadata !DIExpression()), !dbg !15055
  call void @llvm.dbg.value(metadata i32 0, metadata !15052, metadata !DIExpression()), !dbg !15056
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !15057
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15059, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15061
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !15061
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15057
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15062
  br i1 %3, label %5, label %4, !dbg !15063

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15064
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15064
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15064
  unreachable, !dbg !15064

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15061
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15057
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15065
  call void @llvm.dbg.value(metadata i32 undef, metadata !15054, metadata !DIExpression()), !dbg !15056
  call void @llvm.dbg.value(metadata i32 undef, metadata !15052, metadata !DIExpression()), !dbg !15056
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15066
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15069
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !15069
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15071
  br i1 %6, label %8, label %7, !dbg !15072

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15073
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15073
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15073
  unreachable, !dbg !15073

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15059
  call void @llvm.dbg.value(metadata i32 %9, metadata !14468, metadata !DIExpression()) #23, !dbg !15061
  call void @llvm.dbg.value(metadata i32 %9, metadata !14462, metadata !DIExpression()) #23, !dbg !15057
  call void @llvm.dbg.value(metadata i32 %9, metadata !15054, metadata !DIExpression()), !dbg !15056
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15069
  call void @llvm.dbg.value(metadata i32 undef, metadata !14504, metadata !DIExpression()) #23, !dbg !15074
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15076, !srcloc !14510
  call void @llvm.dbg.value(metadata i32 1, metadata !15052, metadata !DIExpression()), !dbg !15056
  call void @llvm.dbg.value(metadata i32 undef, metadata !15052, metadata !DIExpression()), !dbg !15056
  ret void, !dbg !15077
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15078 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15080, metadata !DIExpression()), !dbg !15082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !15083
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15085, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !15087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15083
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15088
  br i1 %3, label %5, label %4, !dbg !15089

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15090
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15090
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15090
  unreachable, !dbg !15090

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15085
  call void @llvm.dbg.value(metadata i32 %6, metadata !14468, metadata !DIExpression()) #23, !dbg !15087
  call void @llvm.dbg.value(metadata i32 %6, metadata !14462, metadata !DIExpression()) #23, !dbg !15083
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15091
  call void @llvm.dbg.value(metadata i32 %6, metadata !15081, metadata !DIExpression()), !dbg !15082
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15092
  br i1 %7, label %8, label %12, !dbg !15094

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15095
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !15095
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15098
  br i1 %9, label %11, label %10, !dbg !15099

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15100
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15100
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15100
  unreachable, !dbg !15100

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14490, metadata !DIExpression()) #23, !dbg !15095
  call void @llvm.dbg.value(metadata i32 %6, metadata !14504, metadata !DIExpression()) #23, !dbg !15101
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15103, !srcloc !14510
  br label %14, !dbg !15104

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.299(%struct.k_thread* noundef %0) #24, !dbg !15105
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15106
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15107
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15107
  br label %14, !dbg !15108

14:                                               ; preds = %12, %11
  ret void, !dbg !15108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15109 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15111, metadata !DIExpression()), !dbg !15112
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15113
  %3 = load i8, i8* %2, align 1, !dbg !15113
  %4 = and i8 %3, 4, !dbg !15114
  %5 = icmp eq i8 %4, 0, !dbg !15115
  ret i1 %5, !dbg !15116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.299(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15117 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15119, metadata !DIExpression()), !dbg !15120
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15121
  %3 = load i8, i8* %2, align 1, !dbg !15122
  %4 = and i8 %3, -5, !dbg !15122
  store i8 %4, i8* %2, align 1, !dbg !15122
  ret void, !dbg !15123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15124 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15127, metadata !DIExpression()), !dbg !15128
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15126, metadata !DIExpression()), !dbg !15128
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15129
  br i1 %4, label %5, label %12, !dbg !15131

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15132
  br i1 %6, label %7, label %12, !dbg !15133

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15134, metadata !DIExpression()) #23, !dbg !15140
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15139, metadata !DIExpression()) #23, !dbg !15140
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15143, metadata !DIExpression()) #23, !dbg !15148
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15150
  br i1 %8, label %10, label %9, !dbg !15153

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !15154
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15154
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !15154
  unreachable, !dbg !15154

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15134, metadata !DIExpression()) #23, !dbg !15140
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15156
  br label %16, !dbg !15157

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15158
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14495, metadata !DIExpression()) #23, !dbg !15158
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15161
  br i1 %13, label %15, label %14, !dbg !15162

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15163
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15163
  unreachable, !dbg !15163

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14490, metadata !DIExpression()) #23, !dbg !15158
  call void @llvm.dbg.value(metadata i32 %3, metadata !14504, metadata !DIExpression()) #23, !dbg !15164
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15166, !srcloc !14510
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15172, metadata !DIExpression()), !dbg !15173
  call void @llvm.dbg.value(metadata i32 %0, metadata !15174, metadata !DIExpression()), !dbg !15179
  %2 = icmp eq i32 %0, 0, !dbg !15181
  br i1 %2, label %3, label %6, !dbg !15182

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15183, !srcloc !15190
  call void @llvm.dbg.value(metadata i32 %4, metadata !15186, metadata !DIExpression()) #23, !dbg !15191
  %5 = icmp eq i32 %4, 0, !dbg !15192
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15173
  ret i1 %7, !dbg !15193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !15194 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15197
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15196, metadata !DIExpression()), !dbg !15198
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15199
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15200
  ret i1 %3, !dbg !15201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15204, metadata !DIExpression()), !dbg !15206
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15207
  call void @llvm.dbg.value(metadata i32 %2, metadata !15205, metadata !DIExpression()), !dbg !15206
  ret i32 %2, !dbg !15208
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15209 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15211, metadata !DIExpression()), !dbg !15215
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15216
  call void @llvm.dbg.value(metadata i32 0, metadata !15212, metadata !DIExpression()), !dbg !15217
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !15218
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15220, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15222
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !15222
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15218
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15223
  br i1 %4, label %6, label %5, !dbg !15224

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15225
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15225
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15225
  unreachable, !dbg !15225

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15220
  call void @llvm.dbg.value(metadata i32 %7, metadata !14468, metadata !DIExpression()) #23, !dbg !15222
  call void @llvm.dbg.value(metadata i32 %7, metadata !14462, metadata !DIExpression()) #23, !dbg !15218
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15226
  call void @llvm.dbg.value(metadata i32 %7, metadata !15214, metadata !DIExpression()), !dbg !15217
  call void @llvm.dbg.value(metadata i32 undef, metadata !15212, metadata !DIExpression()), !dbg !15217
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15227
  br i1 %8, label %9, label %13, !dbg !15231

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14648, metadata !DIExpression()) #23, !dbg !15232
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15235
  %11 = load i8, i8* %10, align 1, !dbg !15236
  %12 = and i8 %11, 127, !dbg !15236
  store i8 %12, i8* %10, align 1, !dbg !15236
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14656, metadata !DIExpression()) #23, !dbg !15237
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15239
  br label %13, !dbg !15240

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15241
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15242
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15243
  %16 = zext i1 %15 to i32, !dbg !15243
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !15244
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15245
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !15245
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15247
  br i1 %17, label %19, label %18, !dbg !15248

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15249
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15249
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15249
  unreachable, !dbg !15249

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14490, metadata !DIExpression()) #23, !dbg !15245
  call void @llvm.dbg.value(metadata i32 %7, metadata !14504, metadata !DIExpression()) #23, !dbg !15250
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15252, !srcloc !14510
  call void @llvm.dbg.value(metadata i32 1, metadata !15212, metadata !DIExpression()), !dbg !15217
  call void @llvm.dbg.value(metadata i32 undef, metadata !15212, metadata !DIExpression()), !dbg !15217
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15253
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15255
  br i1 %21, label %22, label %23, !dbg !15256

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15257
  br label %23, !dbg !15259

23:                                               ; preds = %22, %19
  ret void, !dbg !15260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15261 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15263, metadata !DIExpression()), !dbg !15264
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15265
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15266
  ret i32 %3, !dbg !15267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15268 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15270, metadata !DIExpression()), !dbg !15271
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15272
  %3 = load i8, i8* %2, align 1, !dbg !15273
  %4 = or i8 %3, 16, !dbg !15273
  store i8 %4, i8* %2, align 1, !dbg !15273
  ret void, !dbg !15274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15275 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15276, !srcloc !14471
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15276
  call void @llvm.dbg.value(metadata i32 %2, metadata !14468, metadata !DIExpression()) #23, !dbg !15278
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !15278
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15279
  ret void, !dbg !15280
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15283, metadata !DIExpression()), !dbg !15284
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15285
  br i1 %2, label %3, label %5, !dbg !15287

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15288
  br label %6, !dbg !15290

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14504, metadata !DIExpression()) #23, !dbg !15291
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15294, !srcloc !14510
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15296 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15298, metadata !DIExpression()), !dbg !15300
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !15301
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15303, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15305
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !15305
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15301
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15306
  br i1 %3, label %5, label %4, !dbg !15307

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15308
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15308
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15308
  unreachable, !dbg !15308

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15303
  call void @llvm.dbg.value(metadata i32 %6, metadata !14468, metadata !DIExpression()) #23, !dbg !15305
  call void @llvm.dbg.value(metadata i32 %6, metadata !14462, metadata !DIExpression()) #23, !dbg !15301
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15309
  call void @llvm.dbg.value(metadata i32 %6, metadata !15299, metadata !DIExpression()), !dbg !15300
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15310
  br i1 %7, label %12, label %8, !dbg !15312

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15313
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !15313
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15316
  br i1 %9, label %11, label %10, !dbg !15317

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15318
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15318
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15318
  unreachable, !dbg !15318

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14490, metadata !DIExpression()) #23, !dbg !15313
  call void @llvm.dbg.value(metadata i32 %6, metadata !14504, metadata !DIExpression()) #23, !dbg !15319
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15321, !srcloc !14510
  br label %14, !dbg !15322

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15323
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15324
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15325
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15325
  br label %14, !dbg !15326

14:                                               ; preds = %12, %11
  ret void, !dbg !15326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15327 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15329, metadata !DIExpression()), !dbg !15330
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15331
  %3 = load i8, i8* %2, align 1, !dbg !15331
  %4 = and i8 %3, 16, !dbg !15332
  %5 = icmp ne i8 %4, 0, !dbg !15333
  ret i1 %5, !dbg !15334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15335 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15337, metadata !DIExpression()), !dbg !15338
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15339
  %3 = load i8, i8* %2, align 1, !dbg !15340
  %4 = and i8 %3, -17, !dbg !15340
  store i8 %4, i8* %2, align 1, !dbg !15340
  ret void, !dbg !15341
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15342 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15352, metadata !DIExpression()), !dbg !15356
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15350, metadata !DIExpression()), !dbg !15356
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15351, metadata !DIExpression()), !dbg !15356
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15357
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15357
  br i1 %5, label %9, label %6, !dbg !15357

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !15357
  br i1 %7, label %9, label %8, !dbg !15360

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 773) #25, !dbg !15361
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 773) #25, !dbg !15361
  unreachable, !dbg !15361

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15353, metadata !DIExpression()), !dbg !15363
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !15364
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15366, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15368
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !15368
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15364
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15369
  br i1 %11, label %13, label %12, !dbg !15370

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15371
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15371
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15371
  unreachable, !dbg !15371

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15368
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15364
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15372
  call void @llvm.dbg.value(metadata i32 undef, metadata !15355, metadata !DIExpression()), !dbg !15363
  call void @llvm.dbg.value(metadata i32 undef, metadata !15353, metadata !DIExpression()), !dbg !15363
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15373
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !15376
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15378
  br i1 %14, label %16, label %15, !dbg !15379

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15380
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15380
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15380
  unreachable, !dbg !15380

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15366
  call void @llvm.dbg.value(metadata i32 %17, metadata !14468, metadata !DIExpression()) #23, !dbg !15368
  call void @llvm.dbg.value(metadata i32 %17, metadata !14462, metadata !DIExpression()) #23, !dbg !15364
  call void @llvm.dbg.value(metadata i32 %17, metadata !15355, metadata !DIExpression()), !dbg !15363
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14504, metadata !DIExpression()) #23, !dbg !15381
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15383, !srcloc !14510
  call void @llvm.dbg.value(metadata i32 1, metadata !15353, metadata !DIExpression()), !dbg !15363
  call void @llvm.dbg.value(metadata i32 undef, metadata !15353, metadata !DIExpression()), !dbg !15363
  ret void, !dbg !15384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15385 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15387, metadata !DIExpression()), !dbg !15388
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15389
  %3 = load i8, i8* %2, align 1, !dbg !15389
  %4 = and i8 %3, 1, !dbg !15390
  %5 = icmp ne i8 %4, 0, !dbg !15391
  ret i1 %5, !dbg !15392
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15393 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15397, metadata !DIExpression()), !dbg !15398
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15395, metadata !DIExpression()), !dbg !15398
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15396, metadata !DIExpression()), !dbg !15398
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !15399
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15400
  ret void, !dbg !15401
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15402 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15406, metadata !DIExpression()), !dbg !15408
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15407, metadata !DIExpression()), !dbg !15408
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15409
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15410
  %3 = icmp eq %union.anon* %1, null, !dbg !15411
  br i1 %3, label %24, label %4, !dbg !15413

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15414
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15416
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15417
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14679, metadata !DIExpression()) #23, !dbg !15418
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14685, metadata !DIExpression()) #23, !dbg !15418
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15420
  br i1 %7, label %8, label %9, !dbg !15421

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15422
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15422
  unreachable, !dbg !15422

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15423
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14686, metadata !DIExpression()) #23, !dbg !15418
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15424
  br i1 %11, label %22, label %12, !dbg !15423

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14686, metadata !DIExpression()) #23, !dbg !15418
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15425
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14686, metadata !DIExpression()) #23, !dbg !15418
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15426
  %16 = icmp sgt i32 %15, 0, !dbg !15427
  br i1 %16, label %17, label %19, !dbg !15428

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15429
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15430
  br label %24, !dbg !15431

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15424
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14686, metadata !DIExpression()) #23, !dbg !15418
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15424
  br i1 %21, label %22, label %12, !dbg !15423, !llvm.loop !15432

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15434
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15435
  br label %24, !dbg !15436

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15438 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15443, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15442, metadata !DIExpression()), !dbg !15444
  %4 = icmp eq i64 %3, -1, !dbg !15445
  br i1 %4, label %6, label %5, !dbg !15447

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.301(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15448
  br label %6, !dbg !15450

6:                                                ; preds = %5, %2
  ret void, !dbg !15451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.301(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15452 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15455, metadata !DIExpression()), !dbg !15456
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15454, metadata !DIExpression()), !dbg !15456
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15457
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15458
  ret void, !dbg !15459
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15460 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15462, metadata !DIExpression()), !dbg !15470
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15471
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15471
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15463, metadata !DIExpression()), !dbg !15470
  call void @llvm.dbg.value(metadata i32 0, metadata !15464, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !15473
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15475, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15477
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !15477
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15473
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15478
  br i1 %5, label %7, label %6, !dbg !15479

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15480
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15480
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15480
  unreachable, !dbg !15480

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15477
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15473
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15481
  call void @llvm.dbg.value(metadata i32 undef, metadata !15466, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 undef, metadata !15464, metadata !DIExpression()), !dbg !15472
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15482
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15483
  %10 = load i8, i8* %9, align 1, !dbg !15483
  %11 = and i8 %10, 40, !dbg !15484
  %12 = icmp eq i8 %11, 0, !dbg !15484
  call void @llvm.dbg.value(metadata i1 %12, metadata !15467, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15485
  br i1 %12, label %13, label %20, !dbg !15486

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15487
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !15487
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !15487
  %17 = icmp eq %union.anon* %16, null, !dbg !15491
  br i1 %17, label %19, label %18, !dbg !15492

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15493
  br label %19, !dbg !15495

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.299(%struct.k_thread* noundef nonnull %3) #24, !dbg !15496
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15497
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15498
  br label %20, !dbg !15499

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !15500
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15502
  br i1 %21, label %23, label %22, !dbg !15503

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15504
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15504
  unreachable, !dbg !15504

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15475
  call void @llvm.dbg.value(metadata i32 %24, metadata !14468, metadata !DIExpression()) #23, !dbg !15477
  call void @llvm.dbg.value(metadata i32 %24, metadata !14462, metadata !DIExpression()) #23, !dbg !15473
  call void @llvm.dbg.value(metadata i32 %24, metadata !15466, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15500
  call void @llvm.dbg.value(metadata i32 undef, metadata !14504, metadata !DIExpression()) #23, !dbg !15505
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15507, !srcloc !14510
  call void @llvm.dbg.value(metadata i32 1, metadata !15464, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 undef, metadata !15464, metadata !DIExpression()), !dbg !15472
  ret void, !dbg !15508
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15509 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15511, metadata !DIExpression()), !dbg !15512
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15513
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15514
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15515
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15516
  store %union.anon* null, %union.anon** %3, align 8, !dbg !15517
  ret void, !dbg !15518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15519 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15523, metadata !DIExpression()), !dbg !15524
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15525
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !15525
  %4 = icmp eq %union.anon* %3, null, !dbg !15525
  br i1 %4, label %5, label %6, !dbg !15528

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 726) #25, !dbg !15529
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 726) #25, !dbg !15529
  unreachable, !dbg !15529

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !15531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15532 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15534, metadata !DIExpression()), !dbg !15535
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15536
  %3 = load i8, i8* %2, align 1, !dbg !15537
  %4 = and i8 %3, -3, !dbg !15537
  store i8 %4, i8* %2, align 1, !dbg !15537
  ret void, !dbg !15538
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15539 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15541, metadata !DIExpression()), !dbg !15542
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15543
  br i1 %2, label %3, label %7, !dbg !15545

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14648, metadata !DIExpression()) #23, !dbg !15546
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15549
  %5 = load i8, i8* %4, align 1, !dbg !15550
  %6 = and i8 %5, 127, !dbg !15550
  store i8 %6, i8* %4, align 1, !dbg !15550
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14656, metadata !DIExpression()) #23, !dbg !15551
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15553
  br label %7, !dbg !15554

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15555
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15556
  %10 = zext i1 %9 to i32, !dbg !15556
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15557
  ret void, !dbg !15558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15559 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15561, metadata !DIExpression()), !dbg !15562
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15563
  %3 = load i8, i8* %2, align 1, !dbg !15564
  %4 = or i8 %3, 2, !dbg !15564
  store i8 %4, i8* %2, align 1, !dbg !15564
  ret void, !dbg !15565
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15566 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15568, metadata !DIExpression()), !dbg !15572
  call void @llvm.dbg.value(metadata i32 0, metadata !15569, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !15574
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15576, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15578
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !15578
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15574
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15579
  br i1 %3, label %5, label %4, !dbg !15580

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15581
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15581
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15581
  unreachable, !dbg !15581

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15578
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15574
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15582
  call void @llvm.dbg.value(metadata i32 undef, metadata !15571, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 undef, metadata !15569, metadata !DIExpression()), !dbg !15573
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15583
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15586
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !15586
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15588
  br i1 %6, label %8, label %7, !dbg !15589

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15590
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15590
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15590
  unreachable, !dbg !15590

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15576
  call void @llvm.dbg.value(metadata i32 %9, metadata !14468, metadata !DIExpression()) #23, !dbg !15578
  call void @llvm.dbg.value(metadata i32 %9, metadata !14462, metadata !DIExpression()) #23, !dbg !15574
  call void @llvm.dbg.value(metadata i32 %9, metadata !15571, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15586
  call void @llvm.dbg.value(metadata i32 undef, metadata !14504, metadata !DIExpression()) #23, !dbg !15591
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15593, !srcloc !14510
  call void @llvm.dbg.value(metadata i32 1, metadata !15569, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 undef, metadata !15569, metadata !DIExpression()), !dbg !15573
  ret void, !dbg !15594
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15595 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15601, metadata !DIExpression()), !dbg !15606
  call void @llvm.dbg.value(metadata i32 %0, metadata !15599, metadata !DIExpression()), !dbg !15606
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15600, metadata !DIExpression()), !dbg !15606
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15607
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15608
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15609
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15610
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15611
  call void @llvm.dbg.value(metadata i32 %6, metadata !15602, metadata !DIExpression()), !dbg !15606
  call void @llvm.dbg.value(metadata i32 0, metadata !15603, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !15613
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15615, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15617
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !15617
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15613
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15618
  br i1 %8, label %10, label %9, !dbg !15619

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15620
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15620
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15620
  unreachable, !dbg !15620

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15617
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15613
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15621
  call void @llvm.dbg.value(metadata i32 undef, metadata !15605, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.value(metadata i32 undef, metadata !15603, metadata !DIExpression()), !dbg !15612
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15622
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15626
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15627
  br i1 %13, label %14, label %15, !dbg !15628

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15629
  br label %15, !dbg !15631

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15632
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !15632
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15634
  br i1 %16, label %18, label %17, !dbg !15635

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15636
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15636
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15636
  unreachable, !dbg !15636

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15615
  call void @llvm.dbg.value(metadata i32 %19, metadata !14468, metadata !DIExpression()) #23, !dbg !15617
  call void @llvm.dbg.value(metadata i32 %19, metadata !14462, metadata !DIExpression()) #23, !dbg !15613
  call void @llvm.dbg.value(metadata i32 %19, metadata !15605, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15632
  call void @llvm.dbg.value(metadata i32 undef, metadata !14504, metadata !DIExpression()) #23, !dbg !15637
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15639, !srcloc !14510
  call void @llvm.dbg.value(metadata i32 1, metadata !15603, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.value(metadata i32 undef, metadata !15603, metadata !DIExpression()), !dbg !15612
  ret i32 %6, !dbg !15640
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15641 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15646, metadata !DIExpression()), !dbg !15649
  call void @llvm.dbg.value(metadata i64 undef, metadata !15648, metadata !DIExpression()), !dbg !15649
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15645, metadata !DIExpression()), !dbg !15649
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15647, metadata !DIExpression()), !dbg !15649
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15650
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15651
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15652
  br i1 %6, label %7, label %8, !dbg !15655

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 846) #25, !dbg !15656
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 846) #25, !dbg !15656
  unreachable, !dbg !15656

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !15658
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15660, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15662
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !15662
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15658
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15663
  br i1 %10, label %12, label %11, !dbg !15664

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15665
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15665
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15665
  unreachable, !dbg !15665

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15662
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15658
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15666
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15667
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !15668
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15143, metadata !DIExpression()) #23, !dbg !15669
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15671
  br i1 %14, label %16, label %15, !dbg !15672

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !15673
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15673
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !15673
  unreachable, !dbg !15673

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15134, metadata !DIExpression()) #23, !dbg !15674
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15139, metadata !DIExpression()) #23, !dbg !15674
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15143, metadata !DIExpression()) #23, !dbg !15676
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15678
  br i1 %17, label %19, label %18, !dbg !15679

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !15680
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15680
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !15680
  unreachable, !dbg !15680

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15134, metadata !DIExpression()) #23, !dbg !15674
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15681
  ret i32 %21, !dbg !15682
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15683 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15687, metadata !DIExpression()), !dbg !15692
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15688, metadata !DIExpression()), !dbg !15692
  call void @llvm.dbg.value(metadata i32 0, metadata !15689, metadata !DIExpression()), !dbg !15693
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !15694
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15696, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !15698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15694
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15699
  br i1 %3, label %5, label %4, !dbg !15700

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15701
  unreachable, !dbg !15701

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15694
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15702
  call void @llvm.dbg.value(metadata i32 undef, metadata !15691, metadata !DIExpression()), !dbg !15693
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15688, metadata !DIExpression()), !dbg !15692
  call void @llvm.dbg.value(metadata i32 undef, metadata !15689, metadata !DIExpression()), !dbg !15693
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15703
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15688, metadata !DIExpression()), !dbg !15692
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15706
  br i1 %8, label %10, label %9, !dbg !15708

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15709
  br label %10, !dbg !15711

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15712
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !15712
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15714
  br i1 %11, label %13, label %12, !dbg !15715

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15716
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15716
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15716
  unreachable, !dbg !15716

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15696
  call void @llvm.dbg.value(metadata i32 %14, metadata !14468, metadata !DIExpression()) #23, !dbg !15698
  call void @llvm.dbg.value(metadata i32 %14, metadata !14462, metadata !DIExpression()) #23, !dbg !15694
  call void @llvm.dbg.value(metadata i32 %14, metadata !15691, metadata !DIExpression()), !dbg !15693
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15712
  call void @llvm.dbg.value(metadata i32 undef, metadata !14504, metadata !DIExpression()) #23, !dbg !15717
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15719, !srcloc !14510
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15688, metadata !DIExpression()), !dbg !15692
  call void @llvm.dbg.value(metadata i32 undef, metadata !15689, metadata !DIExpression()), !dbg !15693
  ret %struct.k_thread* %7, !dbg !15720
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15721 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15723, metadata !DIExpression()), !dbg !15728
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15724, metadata !DIExpression()), !dbg !15728
  call void @llvm.dbg.value(metadata i32 0, metadata !15725, metadata !DIExpression()), !dbg !15729
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !15730
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15732, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15734
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !15734
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15730
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15735
  br i1 %3, label %5, label %4, !dbg !15736

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15737
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15737
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15737
  unreachable, !dbg !15737

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15734
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15730
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15738
  call void @llvm.dbg.value(metadata i32 undef, metadata !15727, metadata !DIExpression()), !dbg !15729
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15724, metadata !DIExpression()), !dbg !15728
  call void @llvm.dbg.value(metadata i32 undef, metadata !15725, metadata !DIExpression()), !dbg !15729
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15739
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15724, metadata !DIExpression()), !dbg !15728
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15742
  br i1 %8, label %11, label %9, !dbg !15744

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15745
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15747
  br label %11, !dbg !15748

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15749
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !15749
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15751
  br i1 %12, label %14, label %13, !dbg !15752

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15753
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15753
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15753
  unreachable, !dbg !15753

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15732
  call void @llvm.dbg.value(metadata i32 %15, metadata !14468, metadata !DIExpression()) #23, !dbg !15734
  call void @llvm.dbg.value(metadata i32 %15, metadata !14462, metadata !DIExpression()) #23, !dbg !15730
  call void @llvm.dbg.value(metadata i32 %15, metadata !15727, metadata !DIExpression()), !dbg !15729
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15749
  call void @llvm.dbg.value(metadata i32 undef, metadata !14504, metadata !DIExpression()) #23, !dbg !15754
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15756, !srcloc !14510
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15724, metadata !DIExpression()), !dbg !15728
  call void @llvm.dbg.value(metadata i32 undef, metadata !15725, metadata !DIExpression()), !dbg !15729
  ret %struct.k_thread* %7, !dbg !15757
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15758 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15760, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15568, metadata !DIExpression()) #23, !dbg !15762
  call void @llvm.dbg.value(metadata i32 0, metadata !15569, metadata !DIExpression()) #23, !dbg !15764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !15765
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15767, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15769
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !15769
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15765
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15770
  br i1 %3, label %5, label %4, !dbg !15771

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15772
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15772
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15772
  unreachable, !dbg !15772

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15769
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15765
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15773
  call void @llvm.dbg.value(metadata i32 undef, metadata !15571, metadata !DIExpression()) #23, !dbg !15764
  call void @llvm.dbg.value(metadata i32 undef, metadata !15569, metadata !DIExpression()) #23, !dbg !15764
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15774
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !15775
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15777
  br i1 %6, label %8, label %7, !dbg !15778

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15779
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15779
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15779
  unreachable, !dbg !15779

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15767
  call void @llvm.dbg.value(metadata i32 %9, metadata !14468, metadata !DIExpression()) #23, !dbg !15769
  call void @llvm.dbg.value(metadata i32 %9, metadata !14462, metadata !DIExpression()) #23, !dbg !15765
  call void @llvm.dbg.value(metadata i32 %9, metadata !15571, metadata !DIExpression()) #23, !dbg !15764
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15775
  call void @llvm.dbg.value(metadata i32 undef, metadata !14504, metadata !DIExpression()) #23, !dbg !15780
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15782, !srcloc !14510
  call void @llvm.dbg.value(metadata i32 1, metadata !15569, metadata !DIExpression()) #23, !dbg !15764
  call void @llvm.dbg.value(metadata i32 undef, metadata !15569, metadata !DIExpression()) #23, !dbg !15764
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15783
  ret void, !dbg !15784
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15785 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15787, metadata !DIExpression()), !dbg !15793
  call void @llvm.dbg.value(metadata i32 %1, metadata !15788, metadata !DIExpression()), !dbg !15793
  call void @llvm.dbg.value(metadata i8 0, metadata !15789, metadata !DIExpression()), !dbg !15793
  call void @llvm.dbg.value(metadata i32 0, metadata !15790, metadata !DIExpression()), !dbg !15794
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !15795
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15797, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15795
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15800
  br i1 %4, label %6, label %5, !dbg !15801

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15802
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15802
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15802
  unreachable, !dbg !15802

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15795
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15803
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()), !dbg !15794
  call void @llvm.dbg.value(metadata i8 poison, metadata !15789, metadata !DIExpression()), !dbg !15793
  call void @llvm.dbg.value(metadata i32 undef, metadata !15790, metadata !DIExpression()), !dbg !15794
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15804
  call void @llvm.dbg.value(metadata i1 %9, metadata !15789, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15793
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15807

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14648, metadata !DIExpression()) #23, !dbg !15808
  %14 = load i8, i8* %7, align 1, !dbg !15814
  %15 = and i8 %14, 127, !dbg !15814
  store i8 %15, i8* %7, align 1, !dbg !15814
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14656, metadata !DIExpression()) #23, !dbg !15815
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15817
  store i8 %12, i8* %11, align 2, !dbg !15818
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14665, metadata !DIExpression()) #23, !dbg !15819
  %16 = load i8, i8* %7, align 1, !dbg !15821
  %17 = or i8 %16, -128, !dbg !15821
  store i8 %17, i8* %7, align 1, !dbg !15821
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14672, metadata !DIExpression()) #23, !dbg !15822
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14679, metadata !DIExpression()) #23, !dbg !15824
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14685, metadata !DIExpression()) #23, !dbg !15824
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15826
  br i1 %18, label %19, label %20, !dbg !15827

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15828
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15828
  unreachable, !dbg !15828

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15829
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14686, metadata !DIExpression()) #23, !dbg !15824
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15830
  br i1 %22, label %32, label %23, !dbg !15829

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14686, metadata !DIExpression()) #23, !dbg !15824
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15831
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14686, metadata !DIExpression()) #23, !dbg !15824
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15832
  %27 = icmp sgt i32 %26, 0, !dbg !15833
  br i1 %27, label %28, label %29, !dbg !15834

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15835
  br label %33, !dbg !15836

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15830
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14686, metadata !DIExpression()) #23, !dbg !15824
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15830
  br i1 %31, label %32, label %23, !dbg !15829, !llvm.loop !15837

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15839
  br label %33, !dbg !15840

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15841
  br label %35, !dbg !15842

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15843
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15845
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !15845
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15847
  br i1 %36, label %38, label %37, !dbg !15848

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15849
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15849
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15849
  unreachable, !dbg !15849

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15797
  call void @llvm.dbg.value(metadata i32 %39, metadata !14468, metadata !DIExpression()) #23, !dbg !15799
  call void @llvm.dbg.value(metadata i32 %39, metadata !14462, metadata !DIExpression()) #23, !dbg !15795
  call void @llvm.dbg.value(metadata i32 %39, metadata !15792, metadata !DIExpression()), !dbg !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15845
  call void @llvm.dbg.value(metadata i32 undef, metadata !14504, metadata !DIExpression()) #23, !dbg !15850
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15852, !srcloc !14510
  call void @llvm.dbg.value(metadata i8 poison, metadata !15789, metadata !DIExpression()), !dbg !15793
  call void @llvm.dbg.value(metadata i32 undef, metadata !15790, metadata !DIExpression()), !dbg !15794
  ret i1 %9, !dbg !15853
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15854 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15858, metadata !DIExpression()), !dbg !15861
  call void @llvm.dbg.value(metadata i32 %1, metadata !15859, metadata !DIExpression()), !dbg !15861
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15862
  call void @llvm.dbg.value(metadata i1 %3, metadata !15860, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15861
  br i1 %3, label %4, label %12, !dbg !15863

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15865
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15866
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15866
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15866
  %9 = load i8, i8* %8, align 1, !dbg !15866
  %10 = icmp eq i8 %9, 0, !dbg !15867
  br i1 %10, label %11, label %12, !dbg !15868

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15869
  br label %12, !dbg !15871

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15872
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15873 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15875, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !15879
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15881, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15883
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !15883
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15879
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15884
  br i1 %2, label %4, label %3, !dbg !15885

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15886
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15886
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15886
  unreachable, !dbg !15886

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15883
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15879
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15887
  call void @llvm.dbg.value(metadata i32 undef, metadata !15877, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i32 undef, metadata !15875, metadata !DIExpression()), !dbg !15878
  tail call fastcc void @z_sched_lock() #24, !dbg !15888
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15891
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !15891
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15893
  br i1 %5, label %7, label %6, !dbg !15894

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15895
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15895
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15895
  unreachable, !dbg !15895

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15881
  call void @llvm.dbg.value(metadata i32 %8, metadata !14468, metadata !DIExpression()) #23, !dbg !15883
  call void @llvm.dbg.value(metadata i32 %8, metadata !14462, metadata !DIExpression()) #23, !dbg !15879
  call void @llvm.dbg.value(metadata i32 %8, metadata !15877, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15891
  call void @llvm.dbg.value(metadata i32 undef, metadata !14504, metadata !DIExpression()) #23, !dbg !15896
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15898, !srcloc !14510
  call void @llvm.dbg.value(metadata i32 1, metadata !15875, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i32 undef, metadata !15875, metadata !DIExpression()), !dbg !15878
  ret void, !dbg !15899
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15900 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15901, !srcloc !15190
  call void @llvm.dbg.value(metadata i32 %1, metadata !15186, metadata !DIExpression()) #23, !dbg !15906
  %2 = icmp eq i32 %1, 0, !dbg !15907
  br i1 %2, label %4, label %3, !dbg !15908

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.309, i32 0, i32 0), i32 noundef 253) #25, !dbg !15909
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !15909
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.309, i32 0, i32 0), i32 noundef 253) #25, !dbg !15909
  unreachable, !dbg !15909

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15911
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15911
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15911
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15911
  %9 = load i8, i8* %8, align 1, !dbg !15911
  %10 = icmp eq i8 %9, 1, !dbg !15911
  br i1 %10, label %11, label %12, !dbg !15914

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.309, i32 0, i32 0), i32 noundef 254) #25, !dbg !15915
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !15915
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.309, i32 0, i32 0), i32 noundef 254) #25, !dbg !15915
  unreachable, !dbg !15915

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15917
  store i8 %13, i8* %8, align 1, !dbg !15917
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15918, !srcloc !15920
  ret void, !dbg !15921
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15922 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15924, metadata !DIExpression()), !dbg !15927
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !15928
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15930, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15932
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !15932
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15928
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15933
  br i1 %2, label %4, label %3, !dbg !15934

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15935
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15935
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15935
  unreachable, !dbg !15935

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !15932
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !15928
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15936
  call void @llvm.dbg.value(metadata i32 undef, metadata !15926, metadata !DIExpression()), !dbg !15927
  call void @llvm.dbg.value(metadata i32 undef, metadata !15924, metadata !DIExpression()), !dbg !15927
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15937
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15937
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15937
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15937
  %9 = load i8, i8* %8, align 1, !dbg !15937
  %10 = icmp eq i8 %9, 0, !dbg !15937
  br i1 %10, label %11, label %12, !dbg !15942

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 999) #25, !dbg !15943
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !15943
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 999) #25, !dbg !15943
  unreachable, !dbg !15943

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15945, !srcloc !15190
  call void @llvm.dbg.value(metadata i32 %13, metadata !15186, metadata !DIExpression()) #23, !dbg !15950
  %14 = icmp eq i32 %13, 0, !dbg !15951
  br i1 %14, label %16, label %15, !dbg !15952

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15953
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !15953
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15953
  unreachable, !dbg !15953

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15955
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15956
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15956
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15956
  %21 = load i8, i8* %20, align 1, !dbg !15957
  %22 = add i8 %21, 1, !dbg !15957
  store i8 %22, i8* %20, align 1, !dbg !15957
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15958
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15959
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !15959
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15961
  br i1 %23, label %25, label %24, !dbg !15962

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15963
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15963
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15963
  unreachable, !dbg !15963

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15930
  call void @llvm.dbg.value(metadata i32 %26, metadata !14468, metadata !DIExpression()) #23, !dbg !15932
  call void @llvm.dbg.value(metadata i32 %26, metadata !14462, metadata !DIExpression()) #23, !dbg !15928
  call void @llvm.dbg.value(metadata i32 %26, metadata !15926, metadata !DIExpression()), !dbg !15927
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !15959
  call void @llvm.dbg.value(metadata i32 undef, metadata !14504, metadata !DIExpression()) #23, !dbg !15964
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15966, !srcloc !14510
  call void @llvm.dbg.value(metadata i32 1, metadata !15924, metadata !DIExpression()), !dbg !15927
  call void @llvm.dbg.value(metadata i32 undef, metadata !15924, metadata !DIExpression()), !dbg !15927
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15967
  ret void, !dbg !15968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15969 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15970
  ret %struct.k_thread* %1, !dbg !15971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15972 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15976, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15977, metadata !DIExpression()), !dbg !15981
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15982
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15978, metadata !DIExpression()), !dbg !15981
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15983
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15979, metadata !DIExpression()), !dbg !15981
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15984
  call void @llvm.dbg.value(metadata i32 %5, metadata !15980, metadata !DIExpression()), !dbg !15981
  %6 = icmp sgt i32 %5, 0, !dbg !15985
  br i1 %6, label %17, label %7, !dbg !15987

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15988
  br i1 %8, label %17, label %9, !dbg !15990

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15991
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15991
  %12 = load i32, i32* %11, align 8, !dbg !15991
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15993
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15993
  %15 = load i32, i32* %14, align 8, !dbg !15993
  %16 = icmp ult i32 %12, %15, !dbg !15994
  br label %17, !dbg !15995

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15996
  ret i1 %18, !dbg !15997
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15998 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16015, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16016, metadata !DIExpression()), !dbg !16030
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16031
  br i1 %4, label %5, label %6, !dbg !16034

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16035
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16035
  unreachable, !dbg !16035

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16037
  %8 = load i32, i32* %7, align 4, !dbg !16038
  %9 = add nsw i32 %8, 1, !dbg !16038
  store i32 %9, i32* %7, align 4, !dbg !16038
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16039
  store i32 %8, i32* %10, align 8, !dbg !16040
  %11 = load i32, i32* %7, align 4, !dbg !16041
  %12 = icmp eq i32 %11, 0, !dbg !16042
  br i1 %12, label %13, label %35, !dbg !16043

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16044
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16044
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16018, metadata !DIExpression()), !dbg !16044
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16044
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16044
  %17 = load i32, i32* %16, align 4, !dbg !16044
  %18 = shl i32 %17, 2, !dbg !16044
  %19 = alloca i8, i32 %18, align 8, !dbg !16044
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16044
  store i8* %19, i8** %20, align 4, !dbg !16044
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16044
  %22 = alloca i8, i32 %17, align 8, !dbg !16044
  store i8* %22, i8** %21, align 4, !dbg !16044
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16044
  store i32 -1, i32* %23, align 4, !dbg !16044
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16045
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16027, metadata !DIExpression()), !dbg !16046
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16017, metadata !DIExpression()), !dbg !16030
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16047
  br i1 %25, label %26, label %27, !dbg !16044

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16047
  br label %35, !dbg !16048

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !16017, metadata !DIExpression()), !dbg !16030
  %29 = load i32, i32* %7, align 4, !dbg !16049
  %30 = add nsw i32 %29, 1, !dbg !16049
  store i32 %30, i32* %7, align 4, !dbg !16049
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16051
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16051
  store i32 %29, i32* %32, align 8, !dbg !16052
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16045
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16027, metadata !DIExpression()), !dbg !16046
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16017, metadata !DIExpression()), !dbg !16030
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16047
  br i1 %34, label %26, label %27, !dbg !16044, !llvm.loop !16053

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16055
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16056
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !16057
  ret void, !dbg !16058
}

; Function Attrs: optsize
declare !dbg !16059 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16064 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16067 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16069, metadata !DIExpression()), !dbg !16071
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16070, metadata !DIExpression()), !dbg !16071
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16072
  br i1 %3, label %4, label %5, !dbg !16075

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16076
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16076
  unreachable, !dbg !16076

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16078
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16079
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !16080
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16081
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !16081
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !16083
  br i1 %10, label %11, label %13, !dbg !16084

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16085
  store i32 0, i32* %12, align 4, !dbg !16087
  br label %13, !dbg !16088

13:                                               ; preds = %11, %5
  ret void, !dbg !16089
}

; Function Attrs: optsize
declare !dbg !16090 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16091 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16095, metadata !DIExpression()), !dbg !16098
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16096, metadata !DIExpression()), !dbg !16098
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16099
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16100
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16097, metadata !DIExpression()), !dbg !16098
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16096, metadata !DIExpression()), !dbg !16098
  ret %struct.k_thread* %4, !dbg !16101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16102 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16106, metadata !DIExpression()), !dbg !16107
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16108
  ret %struct.rbnode* %2, !dbg !16109
}

; Function Attrs: optsize
declare !dbg !16110 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16113 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16123, metadata !DIExpression()), !dbg !16127
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16128
  %3 = load i32, i32* %2, align 4, !dbg !16128
  %4 = icmp eq i32 %3, 0, !dbg !16130
  br i1 %4, label %10, label %5, !dbg !16131

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16124, metadata !DIExpression()), !dbg !16127
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16132, !range !7451
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16133
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16125, metadata !DIExpression()), !dbg !16127
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16134
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16126, metadata !DIExpression()), !dbg !16127
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16124, metadata !DIExpression()), !dbg !16127
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16127
  ret %struct.k_thread* %11, !dbg !16135
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16136 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16140, metadata !DIExpression()), !dbg !16143
  call void @llvm.dbg.value(metadata i32 0, metadata !16141, metadata !DIExpression()), !dbg !16143
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16144
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16142, metadata !DIExpression()), !dbg !16143
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16145
  br i1 %3, label %8, label %4, !dbg !16146

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16147
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16149
  call void @llvm.dbg.value(metadata i32 1, metadata !16141, metadata !DIExpression()), !dbg !16143
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16144
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16142, metadata !DIExpression()), !dbg !16143
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16145
  br i1 %7, label %8, label %4, !dbg !16146, !llvm.loop !16150

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16143
  ret i32 %9, !dbg !16152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #8 !dbg !16153 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16155, metadata !DIExpression()), !dbg !16156
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16157
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16158
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16159
  ret %struct.k_thread* %4, !dbg !16160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !16161 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16170, metadata !DIExpression()), !dbg !16171
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16172
  tail call fastcc void @sys_dlist_init.314(%struct._dnode* noundef nonnull %2) #24, !dbg !16173
  ret void, !dbg !16174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.314(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16175 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16179, metadata !DIExpression()), !dbg !16180
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16181
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16182
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16183
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16184
  ret void, !dbg !16185
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16186 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16187
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16188
  ret void, !dbg !16189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16190 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16195, metadata !DIExpression()), !dbg !16196
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16197
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16197
  %4 = load i8, i8* %3, align 2, !dbg !16197
  %5 = sext i8 %4 to i32, !dbg !16198
  ret i32 %5, !dbg !16199
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16200 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16204, metadata !DIExpression()), !dbg !16207
  call void @llvm.dbg.value(metadata i32 %1, metadata !16205, metadata !DIExpression()), !dbg !16207
  %3 = add i32 %1, 16, !dbg !16208
  %4 = icmp ult i32 %3, 31, !dbg !16208
  br i1 %4, label %6, label %5, !dbg !16208

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16212
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.318, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !16212
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16212
  unreachable, !dbg !16212

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16214, !srcloc !15190
  call void @llvm.dbg.value(metadata i32 %7, metadata !15186, metadata !DIExpression()) #23, !dbg !16219
  %8 = icmp eq i32 %7, 0, !dbg !16220
  br i1 %8, label %10, label %9, !dbg !16221

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16222
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !16222
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16222
  unreachable, !dbg !16222

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16206, metadata !DIExpression()), !dbg !16207
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16224
  ret void, !dbg !16225
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16226 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16227
  br i1 %1, label %8, label %2, !dbg !16228

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16229
  br i1 %3, label %8, label %4, !dbg !16230

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16231
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16232
  %7 = xor i1 %6, true, !dbg !16230
  br label %8, !dbg !16230

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !16234 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16235, !range !6614
  %2 = icmp eq i8 %1, 0, !dbg !16235
  ret i1 %2, !dbg !16236
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16237 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16240, !srcloc !15190
  call void @llvm.dbg.value(metadata i32 %1, metadata !15186, metadata !DIExpression()) #23, !dbg !16245
  %2 = icmp eq i32 %1, 0, !dbg !16246
  br i1 %2, label %4, label %3, !dbg !16247

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16248
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !16248
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16248
  unreachable, !dbg !16248

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !16250
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16252, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !16254
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !16254
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !16250
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16255
  br i1 %6, label %8, label %7, !dbg !16256

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16257
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16257
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16257
  unreachable, !dbg !16257

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !16254
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !16250
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16258
  call void @llvm.dbg.value(metadata i32 undef, metadata !16239, metadata !DIExpression()), !dbg !16259
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16260
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14648, metadata !DIExpression()) #23, !dbg !16263
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16265
  %11 = load i8, i8* %10, align 1, !dbg !16266
  %12 = and i8 %11, 127, !dbg !16266
  store i8 %12, i8* %10, align 1, !dbg !16266
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14656, metadata !DIExpression()) #23, !dbg !16267
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !16269
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16270
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14665, metadata !DIExpression()) #23, !dbg !16271
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16273
  %15 = load i8, i8* %14, align 1, !dbg !16274
  %16 = or i8 %15, -128, !dbg !16274
  store i8 %16, i8* %14, align 1, !dbg !16274
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14672, metadata !DIExpression()) #23, !dbg !16275
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14679, metadata !DIExpression()) #23, !dbg !16277
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14685, metadata !DIExpression()) #23, !dbg !16277
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !16279
  br i1 %17, label %18, label %19, !dbg !16280

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !16281
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !16281
  unreachable, !dbg !16281

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16282
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14686, metadata !DIExpression()) #23, !dbg !16277
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16283
  br i1 %21, label %32, label %22, !dbg !16282

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14686, metadata !DIExpression()) #23, !dbg !16277
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16284
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14686, metadata !DIExpression()) #23, !dbg !16277
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16285
  %26 = icmp sgt i32 %25, 0, !dbg !16286
  br i1 %26, label %27, label %29, !dbg !16287

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16288
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16289
  br label %34, !dbg !16290

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !16283
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14686, metadata !DIExpression()) #23, !dbg !16277
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16283
  br i1 %31, label %32, label %22, !dbg !16282, !llvm.loop !16291

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16293
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16294
  br label %34, !dbg !16295

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !15134, metadata !DIExpression()) #23, !dbg !16297
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15139, metadata !DIExpression()) #23, !dbg !16297
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15143, metadata !DIExpression()) #23, !dbg !16299
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16301
  br i1 %35, label %37, label %36, !dbg !16302

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16303
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16303
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16303
  unreachable, !dbg !16303

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16252
  call void @llvm.dbg.value(metadata i32 %38, metadata !14468, metadata !DIExpression()) #23, !dbg !16254
  call void @llvm.dbg.value(metadata i32 %38, metadata !14462, metadata !DIExpression()) #23, !dbg !16250
  call void @llvm.dbg.value(metadata i32 %38, metadata !16239, metadata !DIExpression()), !dbg !16259
  call void @llvm.dbg.value(metadata i32 undef, metadata !15134, metadata !DIExpression()) #23, !dbg !16297
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16304
  ret void, !dbg !16305
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16306 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16310, metadata !DIExpression()), !dbg !16313
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16314, !srcloc !15190
  call void @llvm.dbg.value(metadata i32 %3, metadata !15186, metadata !DIExpression()) #23, !dbg !16319
  %4 = icmp eq i32 %3, 0, !dbg !16320
  br i1 %4, label %6, label %5, !dbg !16321

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16322
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !16322
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16322
  unreachable, !dbg !16322

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16324
  br i1 %7, label %8, label %10, !dbg !16326

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16327
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !16329
  br label %15, !dbg !16330

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16311, metadata !DIExpression()), !dbg !16313
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16331
  %12 = sext i32 %11 to i64, !dbg !16331
  call void @llvm.dbg.value(metadata i64 %12, metadata !16311, metadata !DIExpression()), !dbg !16313
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !16332
  %14 = trunc i64 %13 to i32, !dbg !16332
  call void @llvm.dbg.value(metadata i32 %14, metadata !16312, metadata !DIExpression()), !dbg !16313
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16313
  ret i32 %16, !dbg !16333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16334 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16338, metadata !DIExpression()), !dbg !16339
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16340, !srcloc !16342
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16343
  ret void, !dbg !16344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16345 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16349, metadata !DIExpression()), !dbg !16353
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16354, !srcloc !15190
  call void @llvm.dbg.value(metadata i32 %2, metadata !15186, metadata !DIExpression()) #23, !dbg !16359
  %3 = icmp eq i32 %2, 0, !dbg !16360
  br i1 %3, label %5, label %4, !dbg !16361

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16362
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !16362
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16362
  unreachable, !dbg !16362

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16364
  br i1 %6, label %7, label %8, !dbg !16366

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !16367
  br label %43, !dbg !16369

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16351, metadata !DIExpression()), !dbg !16353
  %9 = icmp sgt i64 %0, -3, !dbg !16370
  br i1 %9, label %10, label %14, !dbg !16372

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16373
  %12 = trunc i64 %0 to i32, !dbg !16375
  %13 = add i32 %11, %12, !dbg !16375
  call void @llvm.dbg.value(metadata i32 %13, metadata !16350, metadata !DIExpression()), !dbg !16353
  br label %17, !dbg !16376

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16377
  %16 = sub i32 -2, %15, !dbg !16377
  call void @llvm.dbg.value(metadata i32 %16, metadata !16350, metadata !DIExpression()), !dbg !16353
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16379
  call void @llvm.dbg.value(metadata i32 %18, metadata !16350, metadata !DIExpression()), !dbg !16353
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !16380
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16382, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !16384
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !16384
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !16380
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16385
  br i1 %20, label %22, label %21, !dbg !16386

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16387
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16387
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16387
  unreachable, !dbg !16387

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !16384
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !16380
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16388
  call void @llvm.dbg.value(metadata i32 undef, metadata !16352, metadata !DIExpression()), !dbg !16353
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16389
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16390
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !16391
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16392
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16393
  tail call fastcc void @z_add_thread_timeout.301(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !16393
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16394
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !16395
  call void @llvm.dbg.value(metadata i32 undef, metadata !15134, metadata !DIExpression()) #23, !dbg !16396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15139, metadata !DIExpression()) #23, !dbg !16396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15143, metadata !DIExpression()) #23, !dbg !16398
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16400
  br i1 %27, label %29, label %28, !dbg !16401

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16402
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16402
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16402
  unreachable, !dbg !16402

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16382
  call void @llvm.dbg.value(metadata i32 %30, metadata !14468, metadata !DIExpression()) #23, !dbg !16384
  call void @llvm.dbg.value(metadata i32 %30, metadata !14462, metadata !DIExpression()) #23, !dbg !16380
  call void @llvm.dbg.value(metadata i32 %30, metadata !16352, metadata !DIExpression()), !dbg !16353
  call void @llvm.dbg.value(metadata i32 undef, metadata !15134, metadata !DIExpression()) #23, !dbg !16396
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !16403
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16404
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !16404
  br i1 %33, label %34, label %35, !dbg !16407

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16408
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !16408
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16408
  unreachable, !dbg !16408

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16410
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16411
  %38 = zext i32 %37 to i64, !dbg !16411
  %39 = sub nsw i64 %36, %38, !dbg !16412
  call void @llvm.dbg.value(metadata i64 %39, metadata !16349, metadata !DIExpression()), !dbg !16353
  %40 = icmp sgt i64 %39, 0, !dbg !16413
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16413
  %42 = trunc i64 %41 to i32, !dbg !16413
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16353
  ret i32 %44, !dbg !16414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #2 !dbg !16415 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16417, metadata !DIExpression()), !dbg !16418
  call void @llvm.dbg.value(metadata i64 %0, metadata !14516, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i32 10000, metadata !14519, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i32 1000, metadata !14520, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i8 1, metadata !14521, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i1 false, metadata !14522, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16419
  call void @llvm.dbg.value(metadata i1 false, metadata !14523, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16419
  call void @llvm.dbg.value(metadata i8 0, metadata !14524, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i1 false, metadata !14525, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16419
  call void @llvm.dbg.value(metadata i1 true, metadata !14526, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16419
  call void @llvm.dbg.value(metadata i64 0, metadata !14527, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i64 0, metadata !14527, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i64 %0, metadata !14516, metadata !DIExpression()), !dbg !16419
  %2 = udiv i64 %0, 10, !dbg !16421
  ret i64 %2, !dbg !16425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16426 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16427, !srcloc !16429
  tail call void @z_impl_k_yield() #24, !dbg !16430
  ret void, !dbg !16431
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16432 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16436, metadata !DIExpression()), !dbg !16438
  %2 = sext i32 %0 to i64, !dbg !16439
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16440
  call void @llvm.dbg.value(metadata i64 %3, metadata !16437, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16438
  %4 = shl i64 %3, 32, !dbg !16441
  %5 = ashr exact i64 %4, 32, !dbg !16441
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16442
  call void @llvm.dbg.value(metadata i32 %6, metadata !16437, metadata !DIExpression()), !dbg !16438
  %7 = sext i32 %6 to i64, !dbg !16443
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16444
  %9 = trunc i64 %8 to i32, !dbg !16444
  ret i32 %9, !dbg !16445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !16446 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16448, metadata !DIExpression()), !dbg !16449
  call void @llvm.dbg.value(metadata i64 %0, metadata !14516, metadata !DIExpression()), !dbg !16450
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14519, metadata !DIExpression()), !dbg !16450
  call void @llvm.dbg.value(metadata i32 10000, metadata !14520, metadata !DIExpression()), !dbg !16450
  call void @llvm.dbg.value(metadata i8 1, metadata !14521, metadata !DIExpression()), !dbg !16450
  call void @llvm.dbg.value(metadata i1 false, metadata !14522, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16450
  call void @llvm.dbg.value(metadata i1 true, metadata !14523, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16450
  call void @llvm.dbg.value(metadata i8 0, metadata !14524, metadata !DIExpression()), !dbg !16450
  call void @llvm.dbg.value(metadata i1 false, metadata !14525, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16450
  call void @llvm.dbg.value(metadata i1 true, metadata !14526, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16450
  call void @llvm.dbg.value(metadata i64 0, metadata !14527, metadata !DIExpression()), !dbg !16450
  call void @llvm.dbg.value(metadata i64 0, metadata !14527, metadata !DIExpression()), !dbg !16450
  %2 = add i64 %0, 99, !dbg !16452
  call void @llvm.dbg.value(metadata i64 %2, metadata !14516, metadata !DIExpression()), !dbg !16450
  %3 = udiv i64 %2, 100, !dbg !16453
  ret i64 %3, !dbg !16454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #2 !dbg !16455 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16457, metadata !DIExpression()), !dbg !16458
  call void @llvm.dbg.value(metadata i64 %0, metadata !14516, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata i32 10000, metadata !14519, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14520, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata i8 1, metadata !14521, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata i1 false, metadata !14522, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16459
  call void @llvm.dbg.value(metadata i1 false, metadata !14523, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16459
  call void @llvm.dbg.value(metadata i8 0, metadata !14524, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata i1 true, metadata !14525, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16459
  call void @llvm.dbg.value(metadata i1 false, metadata !14526, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16459
  call void @llvm.dbg.value(metadata i64 0, metadata !14527, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata i64 0, metadata !14527, metadata !DIExpression()), !dbg !16459
  %2 = mul i64 %0, 100, !dbg !16461
  ret i64 %2, !dbg !16463
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16464 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16466, metadata !DIExpression()), !dbg !16467
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16468
  br i1 %2, label %14, label %3, !dbg !16470

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16471
  %5 = icmp slt i32 %4, 0, !dbg !16473
  br i1 %5, label %6, label %10, !dbg !16474

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16475
  %8 = load i8, i8* %7, align 1, !dbg !16475
  %9 = icmp eq i8 %8, 16, !dbg !16478
  br i1 %9, label %10, label %14, !dbg !16479

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16480
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16481
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16482, !srcloc !15190
  call void @llvm.dbg.value(metadata i32 %11, metadata !15186, metadata !DIExpression()) #23, !dbg !16486
  %12 = icmp eq i32 %11, 0, !dbg !16487
  br i1 %12, label %13, label %14, !dbg !16488

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16489
  br label %14, !dbg !16491

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16493 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16495, metadata !DIExpression()), !dbg !16496
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16497
  %3 = load i8, i8* %2, align 1, !dbg !16497
  %4 = and i8 %3, 2, !dbg !16498
  %5 = icmp ne i8 %4, 0, !dbg !16499
  ret i1 %5, !dbg !16500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16501 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16506
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16505, metadata !DIExpression()), !dbg !16507
  ret %struct.k_thread* %1, !dbg !16508
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16509 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16510, !srcloc !15190
  call void @llvm.dbg.value(metadata i32 %1, metadata !15186, metadata !DIExpression()) #23, !dbg !16513
  %2 = icmp eq i32 %1, 0, !dbg !16514
  br i1 %2, label %3, label %8, !dbg !16515

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16516
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16517
  %6 = icmp ne i32 %5, 0, !dbg !16515
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16518
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16519 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16521, metadata !DIExpression()), !dbg !16523
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !16524
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16526, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !16528
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !16528
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !16524
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16529
  br i1 %3, label %5, label %4, !dbg !16530

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16531
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16531
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16531
  unreachable, !dbg !16531

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16526
  call void @llvm.dbg.value(metadata i32 %6, metadata !14468, metadata !DIExpression()) #23, !dbg !16528
  call void @llvm.dbg.value(metadata i32 %6, metadata !14462, metadata !DIExpression()) #23, !dbg !16524
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16532
  call void @llvm.dbg.value(metadata i32 %6, metadata !16522, metadata !DIExpression()), !dbg !16523
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16533
  %8 = load i8, i8* %7, align 4, !dbg !16533
  %9 = and i8 %8, 1, !dbg !16535
  %10 = icmp eq i8 %9, 0, !dbg !16536
  br i1 %10, label %15, label %11, !dbg !16537

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !16538
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !16538
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16541
  br i1 %12, label %14, label %13, !dbg !16542

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16543
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16543
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16543
  unreachable, !dbg !16543

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14490, metadata !DIExpression()) #23, !dbg !16538
  call void @llvm.dbg.value(metadata i32 %6, metadata !14504, metadata !DIExpression()) #23, !dbg !16544
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16546, !srcloc !14510
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16547
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.325, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16547
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16547
  unreachable, !dbg !16547

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16551
  %17 = load i8, i8* %16, align 1, !dbg !16551
  %18 = and i8 %17, 8, !dbg !16553
  %19 = icmp eq i8 %18, 0, !dbg !16554
  br i1 %19, label %24, label %20, !dbg !16555

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !16556
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !16556
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16559
  br i1 %21, label %23, label %22, !dbg !16560

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16561
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16561
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16561
  unreachable, !dbg !16561

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14490, metadata !DIExpression()) #23, !dbg !16556
  call void @llvm.dbg.value(metadata i32 %6, metadata !14504, metadata !DIExpression()) #23, !dbg !16562
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16564, !srcloc !14510
  br label %39, !dbg !16565

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16566
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16567
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16569
  br i1 %26, label %27, label %35, !dbg !16570

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16571, !srcloc !15190
  call void @llvm.dbg.value(metadata i32 %28, metadata !15186, metadata !DIExpression()) #23, !dbg !16574
  %29 = icmp eq i32 %28, 0, !dbg !16575
  br i1 %29, label %30, label %35, !dbg !16576

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15134, metadata !DIExpression()) #23, !dbg !16577
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15139, metadata !DIExpression()) #23, !dbg !16577
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15143, metadata !DIExpression()) #23, !dbg !16580
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16582
  br i1 %31, label %33, label %32, !dbg !16583

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16584
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16584
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16584
  unreachable, !dbg !16584

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15134, metadata !DIExpression()) #23, !dbg !16577
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16585
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16586
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.326, i32 0, i32 0)) #25, !dbg !16586
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16586
  unreachable, !dbg !16586

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !16590
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !16590
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16592
  br i1 %36, label %38, label %37, !dbg !16593

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16594
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16594
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16594
  unreachable, !dbg !16594

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14490, metadata !DIExpression()) #23, !dbg !16590
  call void @llvm.dbg.value(metadata i32 %6, metadata !14504, metadata !DIExpression()) #23, !dbg !16595
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16597, !srcloc !14510
  br label %39, !dbg !16598

39:                                               ; preds = %38, %23
  ret void, !dbg !16598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16599 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16601, metadata !DIExpression()), !dbg !16602
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16603
  %3 = load i8, i8* %2, align 1, !dbg !16603
  %4 = and i8 %3, 8, !dbg !16605
  %5 = icmp eq i8 %4, 0, !dbg !16606
  br i1 %5, label %6, label %20, !dbg !16607

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16608
  %8 = or i8 %7, 8, !dbg !16608
  store i8 %8, i8* %2, align 1, !dbg !16608
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16610
  br i1 %9, label %10, label %12, !dbg !16612

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14648, metadata !DIExpression()) #23, !dbg !16613
  %11 = and i8 %8, 95, !dbg !16616
  store i8 %11, i8* %2, align 1, !dbg !16616
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14656, metadata !DIExpression()) #23, !dbg !16617
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16619
  br label %12, !dbg !16620

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16621
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16621
  %15 = icmp eq %union.anon* %14, null, !dbg !16623
  br i1 %15, label %17, label %16, !dbg !16624

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16625
  br label %17, !dbg !16627

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16628
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16629
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !16630
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16631
  br label %20, !dbg !16632

20:                                               ; preds = %17, %1
  ret void, !dbg !16633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16634 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16638, metadata !DIExpression()), !dbg !16640
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16641
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16639, metadata !DIExpression()), !dbg !16640
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16642
  br i1 %3, label %10, label %4, !dbg !16643

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16644
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16646
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16647, metadata !DIExpression()), !dbg !16653
  call void @llvm.dbg.value(metadata i32 0, metadata !16652, metadata !DIExpression()), !dbg !16653
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16655
  store i32 0, i32* %7, align 4, !dbg !16656
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16657
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16641
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16639, metadata !DIExpression()), !dbg !16640
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16642
  br i1 %9, label %10, label %4, !dbg !16643, !llvm.loop !16658

10:                                               ; preds = %4, %1
  ret void, !dbg !16660
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16661 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16666, metadata !DIExpression()), !dbg !16669
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16665, metadata !DIExpression()), !dbg !16669
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !16670
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16672, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !16674
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !16674
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !16670
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16675
  br i1 %4, label %6, label %5, !dbg !16676

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16677
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16677
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16677
  unreachable, !dbg !16677

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16672
  call void @llvm.dbg.value(metadata i32 %7, metadata !14468, metadata !DIExpression()) #23, !dbg !16674
  call void @llvm.dbg.value(metadata i32 %7, metadata !14462, metadata !DIExpression()) #23, !dbg !16670
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16678
  call void @llvm.dbg.value(metadata i32 %7, metadata !16667, metadata !DIExpression()), !dbg !16669
  call void @llvm.dbg.value(metadata i32 0, metadata !16668, metadata !DIExpression()), !dbg !16669
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16679
  %9 = load i8, i8* %8, align 1, !dbg !16679
  %10 = and i8 %9, 8, !dbg !16681
  %11 = icmp eq i8 %10, 0, !dbg !16682
  br i1 %11, label %12, label %35, !dbg !16683

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16666, metadata !DIExpression()), !dbg !16669
  %14 = icmp eq i64 %13, 0, !dbg !16684
  br i1 %14, label %35, label %15, !dbg !16686

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16687
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16689
  br i1 %17, label %35, label %18, !dbg !16690

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16691
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !16691
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16692
  %22 = icmp eq %union.anon* %20, %21, !dbg !16693
  br i1 %22, label %35, label %23, !dbg !16694

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16695, !srcloc !15190
  call void @llvm.dbg.value(metadata i32 %24, metadata !15186, metadata !DIExpression()) #23, !dbg !16701
  %25 = icmp eq i32 %24, 0, !dbg !16702
  br i1 %25, label %27, label %26, !dbg !16703

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16704
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.329, i32 0, i32 0)) #25, !dbg !16704
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16704
  unreachable, !dbg !16704

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16706
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16707
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #24, !dbg !16708
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16709
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16710
  call void @llvm.dbg.value(metadata i32 undef, metadata !15134, metadata !DIExpression()) #23, !dbg !16711
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15139, metadata !DIExpression()) #23, !dbg !16711
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15143, metadata !DIExpression()) #23, !dbg !16713
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16715
  br i1 %31, label %33, label %32, !dbg !16716

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16717
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16717
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16717
  unreachable, !dbg !16717

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15134, metadata !DIExpression()) #23, !dbg !16711
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16718
  call void @llvm.dbg.value(metadata i32 %34, metadata !16668, metadata !DIExpression()), !dbg !16669
  br label %40, !dbg !16719

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16720
  call void @llvm.dbg.value(metadata i32 %36, metadata !16668, metadata !DIExpression()), !dbg !16669
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !16721
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !16721
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16723
  br i1 %37, label %39, label %38, !dbg !16724

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16725
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16725
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16725
  unreachable, !dbg !16725

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14490, metadata !DIExpression()) #23, !dbg !16721
  call void @llvm.dbg.value(metadata i32 %7, metadata !14504, metadata !DIExpression()) #23, !dbg !16726
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16728, !srcloc !14510
  br label %40, !dbg !16729

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16669
  ret i32 %41, !dbg !16730
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16731 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16735, metadata !DIExpression()), !dbg !16743
  call void @llvm.dbg.value(metadata i32 %1, metadata !16736, metadata !DIExpression()), !dbg !16743
  call void @llvm.dbg.value(metadata i8* %2, metadata !16737, metadata !DIExpression()), !dbg !16743
  call void @llvm.dbg.value(metadata i8 0, metadata !16739, metadata !DIExpression()), !dbg !16743
  call void @llvm.dbg.value(metadata i32 0, metadata !16740, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14456, metadata !DIExpression()) #23, !dbg !16745
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16747, !srcloc !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !16749
  call void @llvm.dbg.value(metadata i32 undef, metadata !14469, metadata !DIExpression()) #23, !dbg !16749
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !16745
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16750
  br i1 %5, label %7, label %6, !dbg !16751

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16752
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16752
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16752
  unreachable, !dbg !16752

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14468, metadata !DIExpression()) #23, !dbg !16749
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()) #23, !dbg !16745
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16753
  call void @llvm.dbg.value(metadata i32 undef, metadata !16742, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.value(metadata i8 poison, metadata !16739, metadata !DIExpression()), !dbg !16743
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()), !dbg !16744
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16754
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16738, metadata !DIExpression()), !dbg !16743
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16757
  br i1 %10, label %15, label %11, !dbg !16759

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16760, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata i32 %1, metadata !16766, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata i8* %2, metadata !16767, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16647, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata i32 %1, metadata !16652, metadata !DIExpression()), !dbg !16771
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16773
  store i32 %1, i32* %12, align 4, !dbg !16774
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16775
  store i8* %2, i8** %13, align 4, !dbg !16776
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16777
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16778
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16779
  call void @llvm.dbg.value(metadata i8 1, metadata !16739, metadata !DIExpression()), !dbg !16743
  br label %15, !dbg !16780

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16739, metadata !DIExpression()), !dbg !16743
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !16781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14495, metadata !DIExpression()) #23, !dbg !16781
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16783
  br i1 %16, label %18, label %17, !dbg !16784

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16785
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16785
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16785
  unreachable, !dbg !16785

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16743
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16747
  call void @llvm.dbg.value(metadata i32 %20, metadata !14468, metadata !DIExpression()) #23, !dbg !16749
  call void @llvm.dbg.value(metadata i32 %20, metadata !14462, metadata !DIExpression()) #23, !dbg !16745
  call void @llvm.dbg.value(metadata i32 %20, metadata !16742, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()) #23, !dbg !16781
  call void @llvm.dbg.value(metadata i32 undef, metadata !14504, metadata !DIExpression()) #23, !dbg !16786
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16788, !srcloc !14510
  call void @llvm.dbg.value(metadata i8 poison, metadata !16739, metadata !DIExpression()), !dbg !16743
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()), !dbg !16744
  ret i1 %19, !dbg !16789
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16790 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()), !dbg !16801
  call void @llvm.dbg.value(metadata i64 undef, metadata !16798, metadata !DIExpression()), !dbg !16801
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16795, metadata !DIExpression()), !dbg !16801
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16797, metadata !DIExpression()), !dbg !16801
  call void @llvm.dbg.value(metadata i8** %4, metadata !16799, metadata !DIExpression()), !dbg !16801
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !16802
  call void @llvm.dbg.value(metadata i32 %6, metadata !16800, metadata !DIExpression()), !dbg !16801
  %7 = icmp eq i8** %4, null, !dbg !16803
  br i1 %7, label %12, label %8, !dbg !16805

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16806
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16808
  %11 = load i8*, i8** %10, align 4, !dbg !16808
  store i8* %11, i8** %4, align 4, !dbg !16809
  br label %12, !dbg !16810

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16811
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16812 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16814
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16815
  ret void, !dbg !16816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16817 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16827, metadata !DIExpression()), !dbg !16844
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16825, metadata !DIExpression()), !dbg !16844
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16826, metadata !DIExpression()), !dbg !16844
  %5 = icmp eq i64 %4, -1, !dbg !16845
  br i1 %5, label %63, label %6, !dbg !16847

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16848
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.334(%struct._dnode* noundef %7) #24, !dbg !16848
  br i1 %8, label %9, label %10, !dbg !16851

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 99) #25, !dbg !16852
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.338, i32 0, i32 0)) #25, !dbg !16852
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 99) #25, !dbg !16852
  unreachable, !dbg !16852

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16854
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16855
  call void @llvm.dbg.value(metadata i32 0, metadata !16828, metadata !DIExpression()), !dbg !16856
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !16864
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16866, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !16873
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !16873
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !16864
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16874
  br i1 %13, label %15, label %14, !dbg !16877

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !16878
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16878
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !16878
  unreachable, !dbg !16878

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16866
  call void @llvm.dbg.value(metadata i32 %16, metadata !16869, metadata !DIExpression()) #23, !dbg !16873
  call void @llvm.dbg.value(metadata i32 %16, metadata !16863, metadata !DIExpression()) #23, !dbg !16864
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16880
  call void @llvm.dbg.value(metadata i32 %16, metadata !16834, metadata !DIExpression()), !dbg !16856
  call void @llvm.dbg.value(metadata i32 undef, metadata !16828, metadata !DIExpression()), !dbg !16856
  %17 = icmp slt i64 %4, -1, !dbg !16881
  br i1 %17, label %18, label %24, !dbg !16882

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16883
  %20 = add i64 %4, %19, !dbg !16884
  %21 = sub i64 -2, %20, !dbg !16884
  call void @llvm.dbg.value(metadata i64 %21, metadata !16838, metadata !DIExpression()), !dbg !16885
  %22 = icmp sgt i64 %21, 1, !dbg !16886
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16886
  br label %29, !dbg !16887

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16888
  %26 = tail call fastcc i32 @elapsed.342() #24, !dbg !16890
  %27 = sext i32 %26 to i64, !dbg !16890
  %28 = add nsw i64 %25, %27, !dbg !16891
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16892
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16893
  store i64 %30, i64* %31, align 8, !dbg !16894
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16895
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16835, metadata !DIExpression()), !dbg !16897
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16898
  br i1 %33, label %48, label %34, !dbg !16898

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16899
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16835, metadata !DIExpression()), !dbg !16897
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16903
  %38 = load i64, i64* %37, align 8, !dbg !16903
  %39 = icmp slt i64 %35, %38, !dbg !16904
  br i1 %39, label %40, label %44, !dbg !16905

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16903
  %42 = sub nsw i64 %38, %35, !dbg !16906
  store i64 %42, i64* %41, align 8, !dbg !16906
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16908
  tail call fastcc void @sys_dlist_insert.343(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16909
  br label %49, !dbg !16910

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16911
  store i64 %45, i64* %31, align 8, !dbg !16911
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16912
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16835, metadata !DIExpression()), !dbg !16897
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16898
  br i1 %47, label %48, label %34, !dbg !16898, !llvm.loop !16913

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.344(%struct._dnode* noundef nonnull %7) #24, !dbg !16915
  br label %49, !dbg !16918

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16919
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16920
  br i1 %51, label %52, label %59, !dbg !16921

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16922
  call void @llvm.dbg.value(metadata i32 %53, metadata !16841, metadata !DIExpression()), !dbg !16923
  %54 = icmp ne i32 %53, 0, !dbg !16924
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16926
  br i1 %57, label %59, label %58, !dbg !16926

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16927
  br label %59, !dbg !16929

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !16936
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !16936
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16938
  br i1 %60, label %62, label %61, !dbg !16941

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !16942
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16942
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !16942
  unreachable, !dbg !16942

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16930, metadata !DIExpression()) #23, !dbg !16936
  call void @llvm.dbg.value(metadata i32 %16, metadata !16944, metadata !DIExpression()) #23, !dbg !16947
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16949, !srcloc !16950
  call void @llvm.dbg.value(metadata i32 undef, metadata !16828, metadata !DIExpression()), !dbg !16856
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.334(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16952 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16958, metadata !DIExpression()), !dbg !16959
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16960
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16960
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16961
  ret i1 %4, !dbg !16962
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.342() unnamed_addr #1 !dbg !16963 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16966
  %2 = icmp eq i32 %1, 0, !dbg !16967
  br i1 %2, label %3, label %5, !dbg !16966

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16968
  br label %5, !dbg !16966

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16966
  ret i32 %6, !dbg !16969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16970 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.349() #24, !dbg !16976
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16974, metadata !DIExpression()), !dbg !16977
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16978
  ret %struct._timeout* %2, !dbg !16979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.343(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16980 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16984, metadata !DIExpression()), !dbg !16988
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16985, metadata !DIExpression()), !dbg !16988
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16989
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16989
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16986, metadata !DIExpression()), !dbg !16988
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16990
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16991
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16992
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16993
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16994
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16995
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16996
  ret void, !dbg !16997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !16998 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17002, metadata !DIExpression()), !dbg !17004
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17005
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.347(%struct._dnode* noundef %2) #24, !dbg !17006
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17003, metadata !DIExpression()), !dbg !17004
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17007
  ret %struct._timeout* %4, !dbg !17008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.344(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17009 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17014, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17015, metadata !DIExpression()), !dbg !17017
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17018
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17016, metadata !DIExpression()), !dbg !17017
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17019
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17020
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17021
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17022
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17023
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17024
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17025
  ret void, !dbg !17026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17027 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17032
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17029, metadata !DIExpression()), !dbg !17033
  %2 = tail call fastcc i32 @elapsed.342() #24, !dbg !17034
  call void @llvm.dbg.value(metadata i32 %2, metadata !17030, metadata !DIExpression()), !dbg !17033
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17035
  br i1 %3, label %14, label %4, !dbg !17037

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17038
  %6 = load i64, i64* %5, align 8, !dbg !17038
  %7 = sext i32 %2 to i64, !dbg !17039
  %8 = sub nsw i64 %6, %7, !dbg !17040
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17041
  br i1 %9, label %14, label %10, !dbg !17042

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17043
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17043
  %13 = trunc i64 %12 to i32, !dbg !17043
  call void @llvm.dbg.value(metadata i32 %13, metadata !17031, metadata !DIExpression()), !dbg !17033
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17045
  call void @llvm.dbg.value(metadata i32 %15, metadata !17031, metadata !DIExpression()), !dbg !17033
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17046
  %17 = icmp ne i32 %16, 0, !dbg !17048
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17049
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17049
  call void @llvm.dbg.value(metadata i32 %20, metadata !17031, metadata !DIExpression()), !dbg !17033
  ret i32 %20, !dbg !17050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.347(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17051 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17055, metadata !DIExpression()), !dbg !17057
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17056, metadata !DIExpression()), !dbg !17057
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17058
  br i1 %2, label %5, label %3, !dbg !17059

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.348(%struct._dnode* noundef nonnull %0) #24, !dbg !17060
  br label %5, !dbg !17059

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17059
  ret %struct._dnode* %6, !dbg !17061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.348(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17062 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17064, metadata !DIExpression()), !dbg !17066
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17065, metadata !DIExpression()), !dbg !17066
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17067
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17068
  br i1 %3, label %7, label %4, !dbg !17069

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17070
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17070
  br label %7, !dbg !17069

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17069
  ret %struct._dnode* %8, !dbg !17071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.349() unnamed_addr #8 !dbg !17072 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17076, metadata !DIExpression()), !dbg !17077
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.350() #24, !dbg !17078
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17078
  ret %struct._dnode* %3, !dbg !17079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.350() unnamed_addr #8 !dbg !17080 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17084, metadata !DIExpression()), !dbg !17085
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17086
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17087
  ret i1 %2, !dbg !17088
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17089 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17093, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 -22, metadata !17094, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 0, metadata !17095, metadata !DIExpression()), !dbg !17099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !17100
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17102, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17104
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !17104
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17100
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17105
  br i1 %3, label %5, label %4, !dbg !17106

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17107
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17107
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17107
  unreachable, !dbg !17107

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17104
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17100
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17108
  call void @llvm.dbg.value(metadata i32 undef, metadata !17097, metadata !DIExpression()), !dbg !17099
  call void @llvm.dbg.value(metadata i32 -22, metadata !17094, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 undef, metadata !17095, metadata !DIExpression()), !dbg !17099
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17094, metadata !DIExpression()), !dbg !17098
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.334(%struct._dnode* noundef %6) #24, !dbg !17109
  br i1 %7, label %8, label %9, !dbg !17113

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17114
  call void @llvm.dbg.value(metadata i32 0, metadata !17094, metadata !DIExpression()), !dbg !17098
  br label %9, !dbg !17116

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17098
  call void @llvm.dbg.value(metadata i32 %10, metadata !17094, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17117
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !17117
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17119
  br i1 %11, label %13, label %12, !dbg !17120

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17121
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17121
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17121
  unreachable, !dbg !17121

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17102
  call void @llvm.dbg.value(metadata i32 %14, metadata !16869, metadata !DIExpression()) #23, !dbg !17104
  call void @llvm.dbg.value(metadata i32 %14, metadata !16863, metadata !DIExpression()) #23, !dbg !17100
  call void @llvm.dbg.value(metadata i32 %14, metadata !17097, metadata !DIExpression()), !dbg !17099
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17117
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()) #23, !dbg !17122
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17124, !srcloc !16950
  call void @llvm.dbg.value(metadata i32 %10, metadata !17094, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 undef, metadata !17095, metadata !DIExpression()), !dbg !17099
  ret i32 %10, !dbg !17125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17126 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17128, metadata !DIExpression()), !dbg !17129
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17130
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17132
  br i1 %3, label %10, label %4, !dbg !17133

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17134
  %6 = load i64, i64* %5, align 8, !dbg !17134
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17136
  %8 = load i64, i64* %7, align 8, !dbg !17137
  %9 = add nsw i64 %8, %6, !dbg !17137
  store i64 %9, i64* %7, align 8, !dbg !17137
  br label %10, !dbg !17138

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17139
  tail call fastcc void @sys_dlist_remove.353(%struct._dnode* noundef %11) #24, !dbg !17140
  ret void, !dbg !17141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.353(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17142 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17146, metadata !DIExpression()), !dbg !17149
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17150
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17150
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17147, metadata !DIExpression()), !dbg !17149
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17151
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17151
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17148, metadata !DIExpression()), !dbg !17149
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17152
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17153
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17154
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17155
  tail call fastcc void @sys_dnode_init.354(%struct._dnode* noundef %0) #24, !dbg !17156
  ret void, !dbg !17157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.354(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17158 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17160, metadata !DIExpression()), !dbg !17161
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17162
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17163
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17164
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17165
  ret void, !dbg !17166
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17167 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17173, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata i64 0, metadata !17174, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata i32 0, metadata !17175, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !17180
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17182, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17184
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !17184
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17180
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17185
  br i1 %3, label %5, label %4, !dbg !17186

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17187
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17187
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17187
  unreachable, !dbg !17187

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17184
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17180
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17188
  call void @llvm.dbg.value(metadata i32 undef, metadata !17177, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata i64 0, metadata !17174, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata i32 undef, metadata !17175, metadata !DIExpression()), !dbg !17179
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17189
  call void @llvm.dbg.value(metadata i64 %6, metadata !17174, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17192
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !17192
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17194
  br i1 %7, label %9, label %8, !dbg !17195

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17196
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17196
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17196
  unreachable, !dbg !17196

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17182
  call void @llvm.dbg.value(metadata i32 %10, metadata !16869, metadata !DIExpression()) #23, !dbg !17184
  call void @llvm.dbg.value(metadata i32 %10, metadata !16863, metadata !DIExpression()) #23, !dbg !17180
  call void @llvm.dbg.value(metadata i32 %10, metadata !17177, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17192
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()) #23, !dbg !17197
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17199, !srcloc !16950
  call void @llvm.dbg.value(metadata i64 %6, metadata !17174, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata i32 undef, metadata !17175, metadata !DIExpression()), !dbg !17179
  ret i64 %6, !dbg !17200
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17201 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17203, metadata !DIExpression()), !dbg !17207
  call void @llvm.dbg.value(metadata i64 0, metadata !17204, metadata !DIExpression()), !dbg !17207
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.355(%struct._timeout* noundef %0) #24, !dbg !17208
  br i1 %2, label %21, label %3, !dbg !17210

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17211
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17205, metadata !DIExpression()), !dbg !17212
  call void @llvm.dbg.value(metadata i64 0, metadata !17204, metadata !DIExpression()), !dbg !17207
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17213
  br i1 %5, label %16, label %6, !dbg !17215

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17205, metadata !DIExpression()), !dbg !17212
  call void @llvm.dbg.value(metadata i64 %8, metadata !17204, metadata !DIExpression()), !dbg !17207
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17216
  %10 = load i64, i64* %9, align 8, !dbg !17216
  %11 = add nsw i64 %10, %8, !dbg !17218
  call void @llvm.dbg.value(metadata i64 %11, metadata !17204, metadata !DIExpression()), !dbg !17207
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17219
  br i1 %12, label %16, label %13, !dbg !17221

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17222
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17205, metadata !DIExpression()), !dbg !17212
  call void @llvm.dbg.value(metadata i64 %11, metadata !17204, metadata !DIExpression()), !dbg !17207
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17213
  br i1 %15, label %16, label %6, !dbg !17215, !llvm.loop !17223

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17207
  call void @llvm.dbg.value(metadata i64 %17, metadata !17204, metadata !DIExpression()), !dbg !17207
  %18 = tail call fastcc i32 @elapsed.342() #24, !dbg !17225
  %19 = sext i32 %18 to i64, !dbg !17225
  %20 = sub nsw i64 %17, %19, !dbg !17226
  br label %21, !dbg !17227

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17207
  ret i64 %22, !dbg !17228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.355(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17229 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17233, metadata !DIExpression()), !dbg !17234
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17235
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.334(%struct._dnode* noundef %2) #24, !dbg !17236
  %4 = xor i1 %3, true, !dbg !17237
  ret i1 %4, !dbg !17238
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17239 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17241, metadata !DIExpression()), !dbg !17246
  call void @llvm.dbg.value(metadata i64 0, metadata !17242, metadata !DIExpression()), !dbg !17246
  call void @llvm.dbg.value(metadata i32 0, metadata !17243, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !17248
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17250, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17248
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17253
  br i1 %3, label %5, label %4, !dbg !17254

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17255
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17255
  unreachable, !dbg !17255

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17248
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17256
  call void @llvm.dbg.value(metadata i32 undef, metadata !17245, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.value(metadata i64 0, metadata !17242, metadata !DIExpression()), !dbg !17246
  call void @llvm.dbg.value(metadata i32 undef, metadata !17243, metadata !DIExpression()), !dbg !17247
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17257
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17260
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17242, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17246
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17261
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !17261
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17263
  br i1 %8, label %10, label %9, !dbg !17264

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17265
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17265
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17265
  unreachable, !dbg !17265

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17250
  call void @llvm.dbg.value(metadata i32 %11, metadata !16869, metadata !DIExpression()) #23, !dbg !17252
  call void @llvm.dbg.value(metadata i32 %11, metadata !16863, metadata !DIExpression()) #23, !dbg !17248
  call void @llvm.dbg.value(metadata i32 %11, metadata !17245, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17242, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17246
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17261
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()) #23, !dbg !17266
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17268, !srcloc !16950
  call void @llvm.dbg.value(metadata i32 undef, metadata !17243, metadata !DIExpression()), !dbg !17247
  %12 = add i64 %7, %6, !dbg !17269
  ret i64 %12, !dbg !17270
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17271 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17273, metadata !DIExpression()), !dbg !17277
  call void @llvm.dbg.value(metadata i32 0, metadata !17274, metadata !DIExpression()), !dbg !17278
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !17279
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17281, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17283
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !17283
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17279
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17284
  br i1 %2, label %4, label %3, !dbg !17285

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17286
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17286
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17286
  unreachable, !dbg !17286

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17283
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17279
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17287
  call void @llvm.dbg.value(metadata i32 undef, metadata !17276, metadata !DIExpression()), !dbg !17278
  call void @llvm.dbg.value(metadata i32 -1, metadata !17273, metadata !DIExpression()), !dbg !17277
  call void @llvm.dbg.value(metadata i32 undef, metadata !17274, metadata !DIExpression()), !dbg !17278
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17288
  call void @llvm.dbg.value(metadata i32 %5, metadata !17273, metadata !DIExpression()), !dbg !17277
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17291
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !17291
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17293
  br i1 %6, label %8, label %7, !dbg !17294

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17295
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17295
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17295
  unreachable, !dbg !17295

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17281
  call void @llvm.dbg.value(metadata i32 %9, metadata !16869, metadata !DIExpression()) #23, !dbg !17283
  call void @llvm.dbg.value(metadata i32 %9, metadata !16863, metadata !DIExpression()) #23, !dbg !17279
  call void @llvm.dbg.value(metadata i32 %9, metadata !17276, metadata !DIExpression()), !dbg !17278
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17291
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()) #23, !dbg !17296
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17298, !srcloc !16950
  call void @llvm.dbg.value(metadata i32 %5, metadata !17273, metadata !DIExpression()), !dbg !17277
  call void @llvm.dbg.value(metadata i32 undef, metadata !17274, metadata !DIExpression()), !dbg !17278
  ret i32 %5, !dbg !17299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17302, metadata !DIExpression()), !dbg !17312
  call void @llvm.dbg.value(metadata i1 %1, metadata !17303, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17312
  call void @llvm.dbg.value(metadata i32 0, metadata !17304, metadata !DIExpression()), !dbg !17313
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !17314
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17316, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17318
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !17318
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17314
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17319
  br i1 %4, label %6, label %5, !dbg !17320

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17321
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17321
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17321
  unreachable, !dbg !17321

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17318
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17314
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17322
  call void @llvm.dbg.value(metadata i32 undef, metadata !17306, metadata !DIExpression()), !dbg !17313
  call void @llvm.dbg.value(metadata i32 undef, metadata !17304, metadata !DIExpression()), !dbg !17313
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17323
  call void @llvm.dbg.value(metadata i32 %7, metadata !17307, metadata !DIExpression()), !dbg !17324
  call void @llvm.dbg.value(metadata i1 undef, metadata !17310, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17324
  %8 = icmp slt i32 %7, 2, !dbg !17325
  call void @llvm.dbg.value(metadata i1 %8, metadata !17311, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17324
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17326
  call void @llvm.dbg.value(metadata i1 %9, metadata !17310, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17324
  br i1 %10, label %14, label %11, !dbg !17326

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17328
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17328
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17330
  br label %14, !dbg !17331

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17332
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !17332
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17334
  br i1 %15, label %17, label %16, !dbg !17335

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17336
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17336
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17336
  unreachable, !dbg !17336

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17316
  call void @llvm.dbg.value(metadata i32 %18, metadata !16869, metadata !DIExpression()) #23, !dbg !17318
  call void @llvm.dbg.value(metadata i32 %18, metadata !16863, metadata !DIExpression()) #23, !dbg !17314
  call void @llvm.dbg.value(metadata i32 %18, metadata !17306, metadata !DIExpression()), !dbg !17313
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17332
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()) #23, !dbg !17337
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17339, !srcloc !16950
  call void @llvm.dbg.value(metadata i32 1, metadata !17304, metadata !DIExpression()), !dbg !17313
  call void @llvm.dbg.value(metadata i32 undef, metadata !17304, metadata !DIExpression()), !dbg !17313
  ret void, !dbg !17340
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17345, metadata !DIExpression()), !dbg !17350
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17351
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !17352
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17354, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17356
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !17356
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17352
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17357
  br i1 %3, label %5, label %4, !dbg !17358

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17359
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17359
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17359
  unreachable, !dbg !17359

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17356
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17352
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17360
  call void @llvm.dbg.value(metadata i32 undef, metadata !17346, metadata !DIExpression()), !dbg !17350
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17350
  call void @llvm.dbg.value(metadata i32 undef, metadata !17346, metadata !DIExpression()), !dbg !17350
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17361
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17362
  br i1 %7, label %37, label %8, !dbg !17363

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17350
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17364
  %14 = load i64, i64* %13, align 8, !dbg !17364
  %15 = sext i32 %11 to i64, !dbg !17365
  %16 = icmp sgt i64 %14, %15, !dbg !17366
  br i1 %16, label %35, label %17, !dbg !17367

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17347, metadata !DIExpression()), !dbg !17368
  %18 = trunc i64 %14 to i32, !dbg !17369
  call void @llvm.dbg.value(metadata i32 %18, metadata !17349, metadata !DIExpression()), !dbg !17368
  %19 = sext i32 %18 to i64, !dbg !17370
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17371
  %21 = add i64 %20, %19, !dbg !17371
  store i64 %21, i64* @curr_tick, align 8, !dbg !17371
  store i64 0, i64* %13, align 8, !dbg !17372
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17373
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17374
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !17374
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17376
  br i1 %22, label %24, label %23, !dbg !17377

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17378
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17378
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17378
  unreachable, !dbg !17378

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16930, metadata !DIExpression()) #23, !dbg !17374
  call void @llvm.dbg.value(metadata i32 %12, metadata !16944, metadata !DIExpression()) #23, !dbg !17379
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17381, !srcloc !16950
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17382
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17382
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17383
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !17384
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17386, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17388
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !17388
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17384
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17389
  br i1 %28, label %30, label %29, !dbg !17390

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17391
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17391
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17391
  unreachable, !dbg !17391

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17388
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17384
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17392
  call void @llvm.dbg.value(metadata i32 undef, metadata !17346, metadata !DIExpression()), !dbg !17350
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17393
  %32 = sub nsw i32 %31, %18, !dbg !17393
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17350
  call void @llvm.dbg.value(metadata i32 undef, metadata !17346, metadata !DIExpression()), !dbg !17350
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17361
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17362
  br i1 %34, label %37, label %8, !dbg !17363, !llvm.loop !17394

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17396
  store i64 %36, i64* %13, align 8, !dbg !17396
  br label %41, !dbg !17399

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17350
  %40 = sext i32 %39 to i64, !dbg !17400
  br label %41, !dbg !17400

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17400
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17401
  %45 = add i64 %44, %42, !dbg !17401
  store i64 %45, i64* @curr_tick, align 8, !dbg !17401
  store i32 0, i32* @announce_remaining, align 4, !dbg !17402
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17403
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17404
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17405
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !17405
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17407
  br i1 %47, label %49, label %48, !dbg !17408

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17409
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17409
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17409
  unreachable, !dbg !17409

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17350
  call void @llvm.dbg.value(metadata i32 %50, metadata !16930, metadata !DIExpression()) #23, !dbg !17405
  call void @llvm.dbg.value(metadata i32 %50, metadata !16944, metadata !DIExpression()) #23, !dbg !17410
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17412, !srcloc !16950
  ret void, !dbg !17413
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17414 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17418, metadata !DIExpression()), !dbg !17422
  call void @llvm.dbg.value(metadata i32 0, metadata !17419, metadata !DIExpression()), !dbg !17423
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !17424
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17426, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17428
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !17428
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17424
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17429
  br i1 %2, label %4, label %3, !dbg !17430

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17431
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17431
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17431
  unreachable, !dbg !17431

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17428
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17424
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17432
  call void @llvm.dbg.value(metadata i32 undef, metadata !17421, metadata !DIExpression()), !dbg !17423
  call void @llvm.dbg.value(metadata i64 0, metadata !17418, metadata !DIExpression()), !dbg !17422
  call void @llvm.dbg.value(metadata i32 undef, metadata !17419, metadata !DIExpression()), !dbg !17423
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17433
  %6 = tail call fastcc i32 @elapsed.342() #24, !dbg !17436
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17418, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17422
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17437
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !17437
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17439
  br i1 %7, label %9, label %8, !dbg !17440

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17441
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17441
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17441
  unreachable, !dbg !17441

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17426
  call void @llvm.dbg.value(metadata i32 %10, metadata !16869, metadata !DIExpression()) #23, !dbg !17428
  call void @llvm.dbg.value(metadata i32 %10, metadata !16863, metadata !DIExpression()) #23, !dbg !17424
  call void @llvm.dbg.value(metadata i32 %10, metadata !17421, metadata !DIExpression()), !dbg !17423
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17418, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17422
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17418, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17422
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17437
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()) #23, !dbg !17442
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17444, !srcloc !16950
  call void @llvm.dbg.value(metadata i32 undef, metadata !17419, metadata !DIExpression()), !dbg !17423
  %11 = sext i32 %6 to i64, !dbg !17436
  %12 = add i64 %5, %11, !dbg !17445
  ret i64 %12, !dbg !17446
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17447 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17448
  %2 = trunc i64 %1 to i32, !dbg !17449
  ret i32 %2, !dbg !17450
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17451 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17452
  ret i64 %1, !dbg !17453
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17454 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17456, metadata !DIExpression()), !dbg !17463
  %2 = icmp eq i32 %0, 0, !dbg !17464
  br i1 %2, label %10, label %3, !dbg !17466

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.362() #24, !dbg !17467
  call void @llvm.dbg.value(metadata i32 %4, metadata !17457, metadata !DIExpression()), !dbg !17463
  %5 = mul i32 %0, 84, !dbg !17468
  call void @llvm.dbg.value(metadata i32 %5, metadata !17458, metadata !DIExpression()), !dbg !17463
  br label %6, !dbg !17469

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.362() #24, !dbg !17470
  call void @llvm.dbg.value(metadata i32 %7, metadata !17459, metadata !DIExpression()), !dbg !17471
  %8 = sub i32 %7, %4, !dbg !17472
  %9 = icmp ult i32 %8, %5, !dbg !17474
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17475
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.362() unnamed_addr #1 !dbg !17476 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.363() #24, !dbg !17477
  ret i32 %1, !dbg !17478
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.363() unnamed_addr #1 !dbg !17479 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17480
  ret i32 %1, !dbg !17481
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17482 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17486, metadata !DIExpression()), !dbg !17488
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17489

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17490
  br label %14, !dbg !17494

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17487, metadata !DIExpression()), !dbg !17488
  %6 = icmp slt i64 %2, -1, !dbg !17495
  br i1 %6, label %7, label %9, !dbg !17498

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17499
  br label %14, !dbg !17500

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17502
  %11 = icmp ugt i64 %2, 1, !dbg !17503
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17503
  %13 = add nsw i64 %10, %12, !dbg !17504
  br label %14, !dbg !17505

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17506
  ret i64 %15, !dbg !17507
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17508 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.366, i32 0, i32 0)) #25, !dbg !17510
  ret void, !dbg !17511
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!924, !2, !2500, !27, !177, !209, !2502, !2504, !2538, !2540, !218, !268, !2542, !2545, !2556, !2602, !2604, !2632, !2660, !2703, !2775, !2820, !297, !458, !2848, !494, !504, !529, !696, !731, !956, !2853, !1092, !1158, !1466, !1690, !2891, !1803, !1893, !2893, !2978, !3042, !1944, !3045, !1951, !2323, !3063, !2343, !3065, !2461, !3068}
!llvm.ident = !{!3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070}
!llvm.module.flags = !{!3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "z_ztest_suite_node_stats_framework_tests", scope: !27, file: !111, line: 10, type: !149, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !108, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/testsuite/integration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_NODE", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_STATS", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_ZTEST_UNIT_TEST", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_ZTEST_TEST_RULE", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 68)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 69)
!104 = !DIEnumerator(name: "K_OBJ_LAST", value: 70)
!105 = !{!106, !107}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !{!109, !155, !25, !173}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "z_ztest_test_node_framework_tests", scope: !27, file: !111, line: 10, type: !112, isLocal: true, isDefinition: true, align: 32)
!111 = !DIFile(filename: "zephyr/samples/subsys/testsuite/integration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !115)
!114 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/include/zephyr/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !121, !127, !133, !136, !139, !146}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !114, line: 179, baseType: !117, size: 32)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !113, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_setup_t", file: !114, line: 141, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!106}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !113, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_before_t", file: !114, line: 148, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!131 = !DISubroutineType(types: !132)
!132 = !{null, !106}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !113, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_after_t", file: !114, line: 155, baseType: !130)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !113, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_teardown_t", file: !114, line: 162, baseType: !130)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !113, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_predicate_t", file: !114, line: 171, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!143 = !DISubroutineType(types: !144)
!144 = !{!145, !13}
!145 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !113, file: !114, line: 197, baseType: !147, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !150)
!150 = !{!151, !153, !154}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !149, file: !114, line: 116, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !149, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !149, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!155 = !DIGlobalVariableExpression(var: !156, expr: !DIExpression())
!156 = distinct !DIGlobalVariable(name: "z_ztest_unit_test__framework_tests__test_assert", scope: !27, file: !111, line: 18, type: !157, isLocal: true, isDefinition: true, align: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !158)
!158 = !{!159, !160, !161, !162, !163}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !157, file: !114, line: 98, baseType: !118, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !157, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !157, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !157, file: !114, line: 104, baseType: !164, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !167)
!167 = !{!168, !169, !170, !171, !172}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !166, file: !114, line: 125, baseType: !152, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !166, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !166, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !166, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !166, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "z_ztest_unit_test_stats_framework_tests_test_assert", scope: !27, file: !111, line: 18, type: !166, isLocal: false, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !177, file: !200, line: 18, type: !201, isLocal: false, isDefinition: true)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !179, globals: !199, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!179 = !{!22, !106, !24, !180, !182, !184, !185, !107, !187, !188, !190, !192, !193, !194, !197, !118}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !186, line: 214, baseType: !32)
!186 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !196)
!196 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !198)
!198 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!199 = !{!175}
!200 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !202, file: !203, line: 17, baseType: !118, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "_char_out", scope: !209, file: !212, line: 54, type: !213, isLocal: false, isDefinition: true)
!209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !211, splitDebugInlining: false, nameTableKind: None)
!210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!211 = !{!207}
!212 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DISubroutineType(types: !215)
!215 = !{!107, !107}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !218, file: !235, line: 56, type: !236, isLocal: true, isDefinition: true, align: 32)
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !220, globals: !234, splitDebugInlining: false, nameTableKind: None)
!219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!220 = !{!221}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 379, baseType: !224)
!223 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 224, elements: !225)
!225 = !{!226, !228, !229, !230, !231, !232, !233}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !224, file: !223, line: 372, baseType: !227, size: 32)
!227 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !152)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !224, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !224, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !224, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !224, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !224, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !224, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!234 = !{!216}
!235 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !239)
!238 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!239 = !{!240, !265}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !237, file: !238, line: 60, baseType: !241, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{!107, !244}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = !{!249, !250, !251, !252, !258, !259}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !246, file: !247, line: 380, baseType: !118, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !246, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !246, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !246, file: !247, line: 386, baseType: !253, size: 32, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !255)
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !254, file: !247, line: 359, baseType: !195, size: 8)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !254, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !246, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !246, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !247, line: 43, baseType: !263)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !264)
!264 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !237, file: !238, line: 65, baseType: !244, size: 32, offset: 32)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !268, file: !271, line: 71, type: !272, isLocal: true, isDefinition: true, align: 32)
!268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !269, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !270, splitDebugInlining: false, nameTableKind: None)
!269 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!270 = !{!266}
!271 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !274)
!274 = !{!275, !294}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !273, file: !238, line: 60, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{!107, !279}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !282)
!282 = !{!283, !284, !285, !286, !292, !293}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !281, file: !247, line: 380, baseType: !118, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !281, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !281, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !281, file: !247, line: 386, baseType: !287, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !289)
!289 = !{!290, !291}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !288, file: !247, line: 359, baseType: !195, size: 8)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !288, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !281, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !281, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !238, line: 65, baseType: !279, size: 32, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !297, file: !304, line: 17, type: !451, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!299 = !{!185, !107, !152, !106}
!300 = !{!295, !301, !447}
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !303, file: !304, line: 198, type: !433, isLocal: true, isDefinition: true)
!303 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !304, file: !304, line: 175, type: !305, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !428)
!304 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !DISubroutineType(types: !306)
!306 = !{null, !307}
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = !{!311, !377, !390, !391, !392, !396, !397, !403, !423}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !308, file: !309, line: 247, baseType: !312, size: 384)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !313)
!313 = !{!314, !342, !350, !351, !352, !363, !364, !365}
!314 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 60, baseType: !315, size: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 60, size: 64, elements: !316)
!316 = !{!317, !333}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !315, file: !309, line: 61, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !320)
!319 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !321)
!321 = !{!322, !328}
!322 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 38, baseType: !323, size: 32)
!323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 38, size: 32, elements: !324)
!324 = !{!325, !327}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !323, file: !319, line: 39, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !323, file: !319, line: 40, baseType: !326, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 42, baseType: !329, size: 32, offset: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 42, size: 32, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !329, file: !319, line: 43, baseType: !326, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !329, file: !319, line: 44, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !315, file: !309, line: 62, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !336)
!335 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !334, file: !335, line: 50, baseType: !338, size: 64)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 64, elements: !340)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!340 = !{!341}
!341 = !DISubrange(count: 2)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !312, file: !309, line: 68, baseType: !343, size: 32, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !346)
!345 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !347)
!347 = !{!348}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !346, file: !345, line: 232, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !320)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !312, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !312, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!352 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 90, baseType: !353, size: 16, offset: 112)
!353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 90, size: 16, elements: !354)
!354 = !{!355, !362}
!355 = !DIDerivedType(tag: DW_TAG_member, scope: !353, file: !309, line: 91, baseType: !356, size: 16)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !353, file: !309, line: 91, size: 16, elements: !357)
!357 = !{!358, !361}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !356, file: !309, line: 96, baseType: !359, size: 8)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !360)
!360 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !356, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !353, file: !309, line: 100, baseType: !197, size: 16)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !312, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !312, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !312, file: !309, line: 131, baseType: !366, size: 192, offset: 192)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !367)
!367 = !{!368, !369, !375}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !366, file: !345, line: 245, baseType: !318, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !366, file: !345, line: 246, baseType: !370, size: 32, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DISubroutineType(types: !373)
!373 = !{null, !374}
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !366, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !191)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !308, file: !309, line: 250, baseType: !378, size: 288, offset: 384)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !378, file: !379, line: 26, baseType: !152, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !378, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !378, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !378, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !378, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !378, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !378, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !378, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !378, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !308, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !308, file: !309, line: 256, baseType: !344, size: 64, offset: 704)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !308, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !394)
!394 = !{!395}
!395 = !DISubrange(count: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !308, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !308, file: !309, line: 300, baseType: !398, size: 96, offset: 1056)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !399)
!399 = !{!400, !401, !402}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !398, file: !309, line: 153, baseType: !22, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !398, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !398, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !308, file: !309, line: 325, baseType: !404, size: 32, offset: 1152)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 32)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !407)
!406 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!407 = !{!408, !417, !418}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !405, file: !406, line: 5074, baseType: !409, size: 96)
!409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !411)
!410 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!411 = !{!412, !415, !416}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !409, file: !410, line: 57, baseType: !413, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 32)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !410, line: 57, flags: DIFlagFwdDecl)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !409, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !409, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !405, file: !406, line: 5075, baseType: !344, size: 64, offset: 96)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !405, file: !406, line: 5076, baseType: !419, size: 32, offset: 160)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !419, file: !420, line: 52, baseType: !22, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !308, file: !309, line: 343, baseType: !424, size: 64, offset: 1184)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !425)
!425 = !{!426, !427}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !424, file: !379, line: 63, baseType: !152, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !424, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!428 = !{!429, !430, !431, !432}
!429 = !DILocalVariable(name: "thread", arg: 1, scope: !303, file: !304, line: 175, type: !307)
!430 = !DILocalVariable(name: "region_num", scope: !303, file: !304, line: 200, type: !195)
!431 = !DILocalVariable(name: "guard_start", scope: !303, file: !304, line: 265, type: !22)
!432 = !DILocalVariable(name: "guard_size", scope: !303, file: !304, line: 266, type: !185)
!433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 96, elements: !445)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !436)
!435 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!436 = !{!437, !438, !439}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !434, file: !435, line: 53, baseType: !22, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !434, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !434, file: !435, line: 55, baseType: !440, size: 32, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !442)
!441 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !443)
!443 = !{!444}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !442, file: !441, line: 150, baseType: !152, size: 32)
!445 = !{!446}
!446 = !DISubrange(count: 1)
!447 = !DIGlobalVariableExpression(var: !448, expr: !DIExpression())
!448 = distinct !DIGlobalVariable(name: "static_regions", scope: !297, file: !304, line: 62, type: !449, isLocal: true, isDefinition: true)
!449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, size: 96, elements: !445)
!450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !434)
!451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !453)
!453 = !{!454, !455}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !452, file: !203, line: 17, baseType: !118, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !452, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !458, file: !491, line: 39, type: !195, isLocal: true, isDefinition: true)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !460, globals: !490, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!460 = !{!461, !106, !107, !478, !195}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !463, line: 1226, baseType: !464)
!463 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 1213, size: 352, elements: !465)
!465 = !{!466, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !464, file: !463, line: 1215, baseType: !467, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !464, file: !463, line: 1216, baseType: !227, size: 32, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !464, file: !463, line: 1217, baseType: !227, size: 32, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !464, file: !463, line: 1218, baseType: !227, size: 32, offset: 96)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !464, file: !463, line: 1219, baseType: !227, size: 32, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !464, file: !463, line: 1220, baseType: !227, size: 32, offset: 160)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !464, file: !463, line: 1221, baseType: !227, size: 32, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !464, file: !463, line: 1222, baseType: !227, size: 32, offset: 224)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !464, file: !463, line: 1223, baseType: !227, size: 32, offset: 256)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !464, file: !463, line: 1224, baseType: !227, size: 32, offset: 288)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !464, file: !463, line: 1225, baseType: !227, size: 32, offset: 320)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !482)
!481 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!482 = !{!483, !484, !485}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !480, file: !481, line: 29, baseType: !152, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !480, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !480, file: !481, line: 37, baseType: !486, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !487)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !488)
!488 = !{!489}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !487, file: !441, line: 143, baseType: !152, size: 32)
!490 = !{!456}
!491 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !494, file: !501, line: 21, type: !213, isLocal: true, isDefinition: true)
!494 = distinct !DICompileUnit(language: DW_LANG_C99, file: !495, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !496, globals: !500, splitDebugInlining: false, nameTableKind: None)
!495 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!496 = !{!497, !107, !106}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !499, line: 22, baseType: !107)
!499 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!500 = !{!492}
!501 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !504, file: !509, line: 13, type: !526, isLocal: true, isDefinition: true)
!504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !505, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !506, splitDebugInlining: false, nameTableKind: None)
!505 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!506 = !{!507, !502}
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "mpu_config", scope: !504, file: !509, line: 37, type: !510, isLocal: false, isDefinition: true)
!509 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !481, line: 41, size: 64, elements: !512)
!512 = !{!513, !514}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !511, file: !481, line: 43, baseType: !152, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !511, file: !481, line: 45, baseType: !515, size: 32, offset: 32)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !518)
!518 = !{!519, !520, !521}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !517, file: !481, line: 29, baseType: !152, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !517, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !517, file: !481, line: 37, baseType: !522, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !524)
!524 = !{!525}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !523, file: !441, line: 143, baseType: !152, size: 32)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 192, elements: !340)
!527 = !DIGlobalVariableExpression(var: !528, expr: !DIExpression())
!528 = distinct !DIGlobalVariable(name: "phase", scope: !529, file: !533, line: 61, type: !532, isLocal: false, isDefinition: true)
!529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !531, retainedTypes: !558, globals: !568, splitDebugInlining: false, nameTableKind: None)
!530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!531 = !{!532, !541, !549, !30, !554}
!532 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_phase", file: !533, line: 40, baseType: !32, size: 32, elements: !534)
!533 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537, !538, !539, !540}
!535 = !DIEnumerator(name: "TEST_PHASE_SETUP", value: 0)
!536 = !DIEnumerator(name: "TEST_PHASE_BEFORE", value: 1)
!537 = !DIEnumerator(name: "TEST_PHASE_TEST", value: 2)
!538 = !DIEnumerator(name: "TEST_PHASE_AFTER", value: 3)
!539 = !DIEnumerator(name: "TEST_PHASE_TEARDOWN", value: 4)
!540 = !DIEnumerator(name: "TEST_PHASE_FRAMEWORK", value: 5)
!541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_result", file: !533, line: 226, baseType: !32, size: 32, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548}
!543 = !DIEnumerator(name: "ZTEST_RESULT_PENDING", value: 0)
!544 = !DIEnumerator(name: "ZTEST_RESULT_PASS", value: 1)
!545 = !DIEnumerator(name: "ZTEST_RESULT_FAIL", value: 2)
!546 = !DIEnumerator(name: "ZTEST_RESULT_SKIP", value: 3)
!547 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_SKIP", value: 4)
!548 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_FAIL", value: 5)
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_status", file: !533, line: 52, baseType: !32, size: 32, elements: !550)
!550 = !{!551, !552, !553}
!551 = !DIEnumerator(name: "ZTEST_STATUS_OK", value: 0)
!552 = !DIEnumerator(name: "ZTEST_STATUS_HAS_FAILURE", value: 1)
!553 = !DIEnumerator(name: "ZTEST_STATUS_CRITICAL_ERROR", value: 2)
!554 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_expected_result", file: !114, line: 36, baseType: !32, size: 32, elements: !555)
!555 = !{!556, !557}
!556 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_FAIL", value: 0)
!557 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_SKIP", value: 1)
!558 = !{!106, !107, !185, !559, !564, !152, !566}
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !560, line: 46, baseType: !561)
!560 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!562 = !DISubroutineType(types: !563)
!563 = !{null, !106, !106, !106}
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !565, line: 46, baseType: !376)
!565 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !567)
!567 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!568 = !{!527, !569, !571, !573, !582, !584, !688, !691}
!569 = !DIGlobalVariableExpression(var: !570, expr: !DIExpression())
!570 = distinct !DIGlobalVariable(name: "test_result", scope: !529, file: !533, line: 234, type: !541, isLocal: true, isDefinition: true)
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "current_test_failed_assumption", scope: !529, file: !533, line: 294, type: !145, isLocal: true, isDefinition: true)
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(name: "ztest_thread_stack", scope: !529, file: !533, line: 430, type: !575, isLocal: false, isDefinition: true, align: 512)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 8704, elements: !580)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !578)
!577 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!578 = !{!579}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !576, file: !577, line: 48, baseType: !120, size: 8)
!580 = !{!581}
!581 = !DISubrange(count: 1088)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "test_status", scope: !529, file: !533, line: 63, type: !549, isLocal: true, isDefinition: true)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "ztest_thread", scope: !529, file: !533, line: 17, type: !586, isLocal: true, isDefinition: true)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !587)
!587 = !{!588, !646, !658, !659, !660, !661, !662, !668, !683}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !586, file: !309, line: 247, baseType: !589, size: 384)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !590)
!590 = !{!591, !615, !622, !623, !624, !633, !634, !635}
!591 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 60, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 60, size: 64, elements: !593)
!593 = !{!594, !609}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !592, file: !309, line: 61, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !597)
!597 = !{!598, !604}
!598 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 38, baseType: !599, size: 32)
!599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 38, size: 32, elements: !600)
!600 = !{!601, !603}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !599, file: !319, line: 39, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !599, file: !319, line: 40, baseType: !602, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 42, baseType: !605, size: 32, offset: 32)
!605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 42, size: 32, elements: !606)
!606 = !{!607, !608}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !605, file: !319, line: 43, baseType: !602, size: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !605, file: !319, line: 44, baseType: !602, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !592, file: !309, line: 62, baseType: !610, size: 64)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !611)
!611 = !{!612}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !610, file: !335, line: 50, baseType: !613, size: 64)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !614, size: 64, elements: !340)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !589, file: !309, line: 68, baseType: !616, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !619)
!619 = !{!620}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !618, file: !345, line: 232, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !596)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !589, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !589, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!624 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 90, baseType: !625, size: 16, offset: 112)
!625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 90, size: 16, elements: !626)
!626 = !{!627, !632}
!627 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !309, line: 91, baseType: !628, size: 16)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !625, file: !309, line: 91, size: 16, elements: !629)
!629 = !{!630, !631}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !628, file: !309, line: 96, baseType: !359, size: 8)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !628, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !625, file: !309, line: 100, baseType: !197, size: 16)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !589, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !589, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !589, file: !309, line: 131, baseType: !636, size: 192, offset: 192)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !637)
!637 = !{!638, !639, !645}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !636, file: !345, line: 245, baseType: !595, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !636, file: !345, line: 246, baseType: !640, size: 32, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !641)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DISubroutineType(types: !643)
!643 = !{null, !644}
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !636, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !586, file: !309, line: 250, baseType: !647, size: 288, offset: 384)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !648)
!648 = !{!649, !650, !651, !652, !653, !654, !655, !656, !657}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !647, file: !379, line: 26, baseType: !152, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !647, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !647, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !647, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !647, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !647, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !647, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !647, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !647, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !586, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !586, file: !309, line: 256, baseType: !617, size: 64, offset: 704)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !586, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !586, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !586, file: !309, line: 300, baseType: !663, size: 96, offset: 1056)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !664)
!664 = !{!665, !666, !667}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !663, file: !309, line: 153, baseType: !22, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !663, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !663, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !586, file: !309, line: 325, baseType: !669, size: 32, offset: 1152)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !671)
!671 = !{!672, !678, !679}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !670, file: !406, line: 5074, baseType: !673, size: 96)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !673, file: !410, line: 57, baseType: !413, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !673, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !673, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !670, file: !406, line: 5075, baseType: !617, size: 64, offset: 96)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !670, file: !406, line: 5076, baseType: !680, size: 32, offset: 160)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !680, file: !420, line: 52, baseType: !22, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !586, file: !309, line: 343, baseType: !684, size: 64, offset: 1184)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !684, file: !379, line: 63, baseType: !152, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !684, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "tc_start_time", scope: !529, file: !690, line: 95, type: !152, isLocal: true, isDefinition: true)
!690 = !DIFile(filename: "zephyr/subsys/testsuite/include/zephyr/tc_util.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "tc_spend_time", scope: !529, file: !690, line: 96, type: !152, isLocal: true, isDefinition: true)
!693 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "ztest_api", scope: !696, file: !699, line: 70, type: !700, isLocal: false, isDefinition: true)
!696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !698, splitDebugInlining: false, nameTableKind: None)
!697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!698 = !{!694}
!699 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_arch_api", file: !114, line: 499, size: 96, elements: !702)
!702 = !{!703, !704, !725}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "run_all", scope: !701, file: !114, line: 500, baseType: !16, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "should_suite_run", scope: !701, file: !114, line: 501, baseType: !705, size: 32, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!706 = !DISubroutineType(types: !707)
!707 = !{!145, !13, !708}
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !710)
!710 = !{!711, !712, !713, !714, !715, !716, !717}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !709, file: !114, line: 179, baseType: !117, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !709, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !709, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !709, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !709, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !709, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !709, file: !114, line: 197, baseType: !718, size: 32, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !721)
!721 = !{!722, !723, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !720, file: !114, line: 116, baseType: !152, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !720, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !720, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "should_test_run", scope: !701, file: !114, line: 502, baseType: !726, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DISubroutineType(types: !728)
!728 = !{!145, !118, !118}
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !731, file: !835, line: 72, type: !919, isLocal: true, isDefinition: true)
!731 = distinct !DICompileUnit(language: DW_LANG_C99, file: !732, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !733, retainedTypes: !821, globals: !832, splitDebugInlining: false, nameTableKind: None)
!732 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!733 = !{!30, !734}
!734 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !223, line: 65, baseType: !107, size: 32, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820}
!736 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!737 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!738 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!739 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!740 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!741 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!742 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!743 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!744 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!745 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!746 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!747 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!748 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!749 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!750 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!751 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!752 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!753 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!754 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!755 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!756 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!757 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!758 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!759 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!760 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!761 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!762 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!763 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!764 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!765 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!766 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!767 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!768 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!769 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!770 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!771 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!772 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!773 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!774 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!775 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!776 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!777 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!778 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!779 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!780 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!781 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!782 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!783 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!784 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!785 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!786 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!787 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!788 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!789 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!790 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!791 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!792 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!793 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!794 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!795 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!796 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!797 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!798 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!799 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!800 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!801 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!802 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!803 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!804 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!805 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!806 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!807 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!808 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!809 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!810 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!811 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!812 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!813 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!814 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!815 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!816 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!817 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!818 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!819 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!820 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!821 = !{!185, !107, !106, !822}
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !223, line: 364, baseType: !824)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 356, size: 192, elements: !825)
!825 = !{!826, !827, !828, !829, !830, !831}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !824, file: !223, line: 358, baseType: !227, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !824, file: !223, line: 359, baseType: !227, size: 32, offset: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !824, file: !223, line: 360, baseType: !227, size: 32, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !824, file: !223, line: 361, baseType: !227, size: 32, offset: 96)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !824, file: !223, line: 362, baseType: !227, size: 32, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !824, file: !223, line: 363, baseType: !227, size: 32, offset: 160)
!832 = !{!833, !839, !855, !866, !883, !729, !885, !899, !901, !903, !905, !907, !909, !911, !913, !915, !917}
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !731, file: !835, line: 424, type: !836, isLocal: false, isDefinition: true, align: 16)
!835 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 64, elements: !837)
!837 = !{!838}
!838 = !DISubrange(count: 4)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !731, file: !835, line: 424, type: !841, isLocal: false, isDefinition: true, align: 32)
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !843)
!843 = !{!844, !845, !846, !847, !853, !854}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !842, file: !247, line: 380, baseType: !118, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !842, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !842, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !842, file: !247, line: 386, baseType: !848, size: 32, offset: 96)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 32)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !850)
!850 = !{!851, !852}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !849, file: !247, line: 359, baseType: !195, size: 8)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !849, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !842, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !842, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !731, file: !835, line: 424, type: !857, isLocal: true, isDefinition: true, align: 32)
!857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !859)
!859 = !{!860, !865}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !858, file: !238, line: 60, baseType: !861, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 32)
!862 = !DISubroutineType(types: !863)
!863 = !{!107, !864}
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !858, file: !238, line: 65, baseType: !864, size: 32, offset: 32)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "exti_data", scope: !731, file: !835, line: 423, type: !868, isLocal: true, isDefinition: true)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !835, line: 107, size: 1472, elements: !869)
!869 = !{!870}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !868, file: !835, line: 109, baseType: !871, size: 1472)
!871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !872, size: 1472, elements: !881)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !835, line: 101, size: 64, elements: !873)
!873 = !{!874, !880}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !872, file: !835, line: 102, baseType: !875, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !876, line: 63, baseType: !877)
!876 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 32)
!878 = !DISubroutineType(types: !879)
!879 = !{null, !107, !106}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !872, file: !835, line: 103, baseType: !106, size: 32, offset: 32)
!881 = !{!882}
!882 = !DISubrange(count: 23)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !731, file: !835, line: 424, type: !849, isLocal: true, isDefinition: true, align: 8)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !887, file: !835, line: 493, type: !892, isLocal: true, isDefinition: true, align: 32)
!887 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !835, file: !835, line: 460, type: !888, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !890)
!888 = !DISubroutineType(types: !889)
!889 = !{null, !864}
!890 = !{!891}
!891 = !DILocalVariable(name: "dev", arg: 1, scope: !887, file: !835, line: 460, type: !864)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !893)
!893 = !{!894, !896, !897, !898}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !892, file: !10, line: 55, baseType: !895, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !892, file: !10, line: 57, baseType: !895, size: 32, offset: 32)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !892, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !892, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !887, file: !835, line: 497, type: !892, isLocal: true, isDefinition: true, align: 32)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !887, file: !835, line: 507, type: !892, isLocal: true, isDefinition: true, align: 32)
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !887, file: !835, line: 512, type: !892, isLocal: true, isDefinition: true, align: 32)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !887, file: !835, line: 516, type: !892, isLocal: true, isDefinition: true, align: 32)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !887, file: !835, line: 523, type: !892, isLocal: true, isDefinition: true, align: 32)
!909 = !DIGlobalVariableExpression(var: !910, expr: !DIExpression())
!910 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !887, file: !835, line: 527, type: !892, isLocal: true, isDefinition: true, align: 32)
!911 = !DIGlobalVariableExpression(var: !912, expr: !DIExpression())
!912 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !887, file: !835, line: 581, type: !892, isLocal: true, isDefinition: true, align: 32)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !887, file: !835, line: 586, type: !892, isLocal: true, isDefinition: true, align: 32)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !887, file: !835, line: 591, type: !892, isLocal: true, isDefinition: true, align: 32)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !887, file: !835, line: 595, type: !892, isLocal: true, isDefinition: true, align: 32)
!919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 736, elements: !881)
!920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !921)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !223, line: 154, baseType: !734)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !924, file: !929, line: 22, type: !951, isLocal: false, isDefinition: true, align: 16)
!924 = distinct !DICompileUnit(language: DW_LANG_C99, file: !925, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !926, splitDebugInlining: false, nameTableKind: None)
!925 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!926 = !{!927, !922, !933, !935, !937, !939, !941, !943, !945, !947, !949}
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !924, file: !929, line: 17, type: !930, isLocal: false, isDefinition: true, align: 16)
!929 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 192, elements: !931)
!931 = !{!932}
!932 = !DISubrange(count: 12)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !924, file: !929, line: 29, type: !836, isLocal: false, isDefinition: true, align: 16)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !924, file: !929, line: 36, type: !836, isLocal: false, isDefinition: true, align: 16)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !924, file: !929, line: 43, type: !836, isLocal: false, isDefinition: true, align: 16)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !924, file: !929, line: 50, type: !836, isLocal: false, isDefinition: true, align: 16)
!941 = !DIGlobalVariableExpression(var: !942, expr: !DIExpression())
!942 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !924, file: !929, line: 57, type: !836, isLocal: false, isDefinition: true, align: 16)
!943 = !DIGlobalVariableExpression(var: !944, expr: !DIExpression())
!944 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !924, file: !929, line: 64, type: !836, isLocal: false, isDefinition: true, align: 16)
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !924, file: !929, line: 71, type: !836, isLocal: false, isDefinition: true, align: 16)
!947 = !DIGlobalVariableExpression(var: !948, expr: !DIExpression())
!948 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !924, file: !929, line: 78, type: !836, isLocal: false, isDefinition: true, align: 16)
!949 = !DIGlobalVariableExpression(var: !950, expr: !DIExpression())
!950 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !924, file: !929, line: 85, type: !836, isLocal: false, isDefinition: true, align: 16)
!951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 48, elements: !952)
!952 = !{!953}
!953 = !DISubrange(count: 3)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !956, file: !1018, line: 398, type: !1051, isLocal: true, isDefinition: true)
!956 = distinct !DICompileUnit(language: DW_LANG_C99, file: !957, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !958, retainedTypes: !971, globals: !1015, splitDebugInlining: false, nameTableKind: None)
!957 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!958 = !{!959, !30, !964}
!959 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !960, line: 197, baseType: !32, size: 32, elements: !961)
!960 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!961 = !{!962, !963}
!962 = !DIEnumerator(name: "SUCCESS", value: 0)
!963 = !DIEnumerator(name: "ERROR", value: 1)
!964 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !965, line: 44, baseType: !32, size: 32, elements: !966)
!965 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!966 = !{!967, !968, !969, !970}
!967 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!968 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!969 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!970 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!971 = !{!106, !107, !152, !972, !1008, !1014}
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 510, baseType: !974)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 477, size: 1216, elements: !975)
!975 = !{!976, !977, !978, !979, !980, !981, !982, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !974, file: !223, line: 479, baseType: !227, size: 32)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !974, file: !223, line: 480, baseType: !227, size: 32, offset: 32)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !974, file: !223, line: 481, baseType: !227, size: 32, offset: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !974, file: !223, line: 482, baseType: !227, size: 32, offset: 96)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !974, file: !223, line: 483, baseType: !227, size: 32, offset: 128)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !974, file: !223, line: 484, baseType: !227, size: 32, offset: 160)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !974, file: !223, line: 485, baseType: !983, size: 64, offset: 192)
!983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 64, elements: !340)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !974, file: !223, line: 486, baseType: !227, size: 32, offset: 256)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !974, file: !223, line: 487, baseType: !227, size: 32, offset: 288)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !974, file: !223, line: 488, baseType: !983, size: 64, offset: 320)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !974, file: !223, line: 489, baseType: !227, size: 32, offset: 384)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !974, file: !223, line: 490, baseType: !227, size: 32, offset: 416)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !974, file: !223, line: 491, baseType: !983, size: 64, offset: 448)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !974, file: !223, line: 492, baseType: !227, size: 32, offset: 512)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !974, file: !223, line: 493, baseType: !227, size: 32, offset: 544)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !974, file: !223, line: 494, baseType: !983, size: 64, offset: 576)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !974, file: !223, line: 495, baseType: !227, size: 32, offset: 640)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !974, file: !223, line: 496, baseType: !227, size: 32, offset: 672)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !974, file: !223, line: 497, baseType: !983, size: 64, offset: 704)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !974, file: !223, line: 498, baseType: !227, size: 32, offset: 768)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !974, file: !223, line: 499, baseType: !227, size: 32, offset: 800)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !974, file: !223, line: 500, baseType: !983, size: 64, offset: 832)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !974, file: !223, line: 501, baseType: !227, size: 32, offset: 896)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !974, file: !223, line: 502, baseType: !227, size: 32, offset: 928)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !974, file: !223, line: 503, baseType: !983, size: 64, offset: 960)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !974, file: !223, line: 504, baseType: !227, size: 32, offset: 1024)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !974, file: !223, line: 505, baseType: !227, size: 32, offset: 1056)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !974, file: !223, line: 506, baseType: !152, size: 32, offset: 1088)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !974, file: !223, line: 507, baseType: !227, size: 32, offset: 1120)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !974, file: !223, line: 508, baseType: !227, size: 32, offset: 1152)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !974, file: !223, line: 509, baseType: !227, size: 32, offset: 1184)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1010, line: 343, size: 64, elements: !1011)
!1010 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1011 = !{!1012, !1013}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1009, file: !1010, line: 344, baseType: !152, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1009, file: !1010, line: 345, baseType: !152, size: 32, offset: 32)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!1015 = !{!1016, !1022, !1038, !1049, !954}
!1016 = !DIGlobalVariableExpression(var: !1017, expr: !DIExpression())
!1017 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !956, file: !1018, line: 752, type: !1019, isLocal: false, isDefinition: true, align: 16)
!1018 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 848, elements: !1020)
!1020 = !{!1021}
!1021 = !DISubrange(count: 53)
!1022 = !DIGlobalVariableExpression(var: !1023, expr: !DIExpression())
!1023 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !956, file: !1018, line: 752, type: !1024, isLocal: false, isDefinition: true, align: 32)
!1024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1025)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1026)
!1026 = !{!1027, !1028, !1029, !1030, !1036, !1037}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1025, file: !247, line: 380, baseType: !118, size: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1025, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1025, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1025, file: !247, line: 386, baseType: !1031, size: 32, offset: 96)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1033)
!1033 = !{!1034, !1035}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1032, file: !247, line: 359, baseType: !195, size: 8)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1032, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1025, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1025, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1038 = !DIGlobalVariableExpression(var: !1039, expr: !DIExpression())
!1039 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !956, file: !1018, line: 752, type: !1040, isLocal: true, isDefinition: true, align: 32)
!1040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1041)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1042)
!1042 = !{!1043, !1048}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1041, file: !238, line: 60, baseType: !1044, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!107, !1047}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1041, file: !238, line: 65, baseType: !1047, size: 32, offset: 32)
!1049 = !DIGlobalVariableExpression(var: !1050, expr: !DIExpression())
!1050 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !956, file: !1018, line: 752, type: !1032, isLocal: true, isDefinition: true, align: 8)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !965, line: 100, size: 224, elements: !1052)
!1052 = !{!1053, !1059, !1060, !1069, !1074, !1079, !1085}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1051, file: !965, line: 101, baseType: !1054, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !965, line: 76, baseType: !1055)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!107, !1047, !1058}
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !965, line: 56, baseType: !106)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1051, file: !965, line: 102, baseType: !1054, size: 32, offset: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1051, file: !965, line: 103, baseType: !1061, size: 32, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !965, line: 83, baseType: !1062)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!107, !1047, !1058, !1065, !106}
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !965, line: 72, baseType: !1066)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{null, !1047, !1058, !106}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1051, file: !965, line: 104, baseType: !1070, size: 32, offset: 96)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !965, line: 79, baseType: !1071)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 32)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!107, !1047, !1058, !1014}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1051, file: !965, line: 105, baseType: !1075, size: 32, offset: 128)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !965, line: 88, baseType: !1076)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!964, !1047, !1058}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1051, file: !965, line: 106, baseType: !1080, size: 32, offset: 160)
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !965, line: 92, baseType: !1081)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!107, !1047, !1058, !1084}
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !965, line: 64, baseType: !106)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1051, file: !965, line: 107, baseType: !1086, size: 32, offset: 192)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !965, line: 96, baseType: !1087)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!107, !1047, !1058, !106}
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1092, file: !1149, line: 603, type: !1151, isLocal: true, isDefinition: true, align: 32)
!1092 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1093, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1094, globals: !1146, splitDebugInlining: false, nameTableKind: None)
!1093 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!1094 = !{!106, !107, !1095}
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1097)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1098, line: 336, size: 160, elements: !1099)
!1098 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1099 = !{!1100, !1120, !1124, !1128, !1141}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1097, file: !1098, line: 365, baseType: !1101, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!107, !1104, !1119}
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1107)
!1107 = !{!1108, !1109, !1110, !1111, !1117, !1118}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1106, file: !247, line: 380, baseType: !118, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1106, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1106, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1106, file: !247, line: 386, baseType: !1112, size: 32, offset: 96)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1114)
!1114 = !{!1115, !1116}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1113, file: !247, line: 359, baseType: !195, size: 8)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1113, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1106, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1106, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1097, file: !1098, line: 366, baseType: !1121, size: 32, offset: 32)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 32)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{null, !1104, !196}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1097, file: !1098, line: 374, baseType: !1125, size: 32, offset: 64)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!107, !1104}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1097, file: !1098, line: 377, baseType: !1129, size: 32, offset: 96)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 32)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!107, !1104, !1132}
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1134)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1098, line: 122, size: 64, elements: !1135)
!1135 = !{!1136, !1137, !1138, !1139, !1140}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1134, file: !1098, line: 123, baseType: !152, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1134, file: !1098, line: 124, baseType: !195, size: 8, offset: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1134, file: !1098, line: 125, baseType: !195, size: 8, offset: 40)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1134, file: !1098, line: 126, baseType: !195, size: 8, offset: 48)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1134, file: !1098, line: 127, baseType: !195, size: 8, offset: 56)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1097, file: !1098, line: 379, baseType: !1142, size: 32, offset: 128)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!107, !1104, !1145}
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!1146 = !{!1090, !1147}
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1092, file: !1149, line: 38, type: !1150, isLocal: true, isDefinition: true)
!1149 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1104)
!1151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1153)
!1153 = !{!1154, !1155}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1152, file: !238, line: 60, baseType: !1125, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1152, file: !238, line: 65, baseType: !1104, size: 32, offset: 32)
!1156 = !DIGlobalVariableExpression(var: !1157, expr: !DIExpression())
!1157 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1158, file: !1329, line: 762, type: !1441, isLocal: true, isDefinition: true)
!1158 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1159, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1160, retainedTypes: !1178, globals: !1326, splitDebugInlining: false, nameTableKind: None)
!1159 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!1160 = !{!30, !1161, !1167, !1172, !964}
!1161 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1162, line: 506, baseType: !32, size: 32, elements: !1163)
!1162 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1163 = !{!1164, !1165, !1166}
!1164 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1165 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1166 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1167 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1162, line: 512, baseType: !32, size: 32, elements: !1168)
!1168 = !{!1169, !1170, !1171}
!1169 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1170 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1171 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1172 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !876, line: 43, baseType: !32, size: 32, elements: !1173)
!1173 = !{!1174, !1175, !1176, !1177}
!1174 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1175 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1176 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1177 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1178 = !{!106, !107, !1179, !1249, !1254, !1214, !1167, !1161, !1259, !1260, !152, !1274, !1229, !193, !1286, !1287}
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1162, line: 523, size: 288, elements: !1182)
!1182 = !{!1183, !1204, !1210, !1215, !1219, !1220, !1221, !1225, !1245}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1181, file: !1162, line: 524, baseType: !1184, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 32)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!107, !1187, !1202, !1203}
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1190)
!1190 = !{!1191, !1192, !1193, !1194, !1200, !1201}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1189, file: !247, line: 380, baseType: !118, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1189, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1189, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1189, file: !247, line: 386, baseType: !1195, size: 32, offset: 96)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1197)
!1197 = !{!1198, !1199}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1196, file: !247, line: 359, baseType: !195, size: 8)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1196, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1189, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1189, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1162, line: 237, baseType: !195)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1162, line: 257, baseType: !152)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1181, file: !1162, line: 530, baseType: !1205, size: 32, offset: 32)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!107, !1187, !1208}
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1162, line: 229, baseType: !152)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1181, file: !1162, line: 532, baseType: !1211, size: 32, offset: 64)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!107, !1187, !1214, !1209}
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1162, line: 216, baseType: !152)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1181, file: !1162, line: 535, baseType: !1216, size: 32, offset: 96)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!107, !1187, !1214}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1181, file: !1162, line: 537, baseType: !1216, size: 32, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1181, file: !1162, line: 539, baseType: !1216, size: 32, offset: 160)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1181, file: !1162, line: 541, baseType: !1222, size: 32, offset: 192)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!107, !1187, !1202, !1161, !1167}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1181, file: !1162, line: 544, baseType: !1226, size: 32, offset: 224)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 32)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!107, !1187, !1229, !145}
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1162, line: 478, size: 96, elements: !1231)
!1231 = !{!1232, !1239, !1244}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1230, file: !1162, line: 482, baseType: !1233, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1234, line: 33, baseType: !1235)
!1234 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1234, line: 29, size: 32, elements: !1236)
!1236 = !{!1237}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1235, file: !1234, line: 30, baseType: !1238, size: 32)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1230, file: !1162, line: 485, baseType: !1240, size: 32, offset: 32)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1162, line: 464, baseType: !1241)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 32)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{null, !1187, !1229, !1214}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1230, file: !1162, line: 493, baseType: !1214, size: 32, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1181, file: !1162, line: 547, baseType: !1246, size: 32, offset: 256)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 32)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{!152, !1187}
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1251)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1162, line: 428, size: 32, elements: !1252)
!1252 = !{!1253}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1251, file: !1162, line: 434, baseType: !1214, size: 32)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1162, line: 441, size: 32, elements: !1257)
!1257 = !{!1258}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1256, file: !1162, line: 447, baseType: !1214, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 396, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 385, size: 320, elements: !1263)
!1263 = !{!1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1262, file: !223, line: 387, baseType: !227, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1262, file: !223, line: 388, baseType: !227, size: 32, offset: 32)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1262, file: !223, line: 389, baseType: !227, size: 32, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1262, file: !223, line: 390, baseType: !227, size: 32, offset: 96)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1262, file: !223, line: 391, baseType: !227, size: 32, offset: 128)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1262, file: !223, line: 392, baseType: !227, size: 32, offset: 160)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1262, file: !223, line: 393, baseType: !227, size: 32, offset: 192)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1262, file: !223, line: 394, baseType: !227, size: 32, offset: 224)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1262, file: !223, line: 395, baseType: !1273, size: 64, offset: 256)
!1273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 64, elements: !340)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !223, line: 411, baseType: !1276)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 402, size: 320, elements: !1277)
!1277 = !{!1278, !1279, !1280, !1282, !1283, !1284, !1285}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1276, file: !223, line: 404, baseType: !227, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1276, file: !223, line: 405, baseType: !227, size: 32, offset: 32)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1276, file: !223, line: 406, baseType: !1281, size: 128, offset: 64)
!1281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !837)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1276, file: !223, line: 407, baseType: !152, size: 32, offset: 192)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1276, file: !223, line: 408, baseType: !227, size: 32, offset: 224)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1276, file: !223, line: 409, baseType: !227, size: 32, offset: 256)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1276, file: !223, line: 410, baseType: !227, size: 32, offset: 288)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !965, line: 100, size: 224, elements: !1290)
!1290 = !{!1291, !1296, !1297, !1306, !1311, !1316, !1321}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1289, file: !965, line: 101, baseType: !1292, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !965, line: 76, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!107, !1187, !1058}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1289, file: !965, line: 102, baseType: !1292, size: 32, offset: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1289, file: !965, line: 103, baseType: !1298, size: 32, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !965, line: 83, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 32)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!107, !1187, !1058, !1302, !106}
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !965, line: 72, baseType: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 32)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{null, !1187, !1058, !106}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1289, file: !965, line: 104, baseType: !1307, size: 32, offset: 96)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !965, line: 79, baseType: !1308)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 32)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{!107, !1187, !1058, !1014}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1289, file: !965, line: 105, baseType: !1312, size: 32, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !965, line: 88, baseType: !1313)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 32)
!1314 = !DISubroutineType(types: !1315)
!1315 = !{!964, !1187, !1058}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1289, file: !965, line: 106, baseType: !1317, size: 32, offset: 160)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !965, line: 92, baseType: !1318)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 32)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!107, !1187, !1058, !1084}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1289, file: !965, line: 107, baseType: !1322, size: 32, offset: 192)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !965, line: 96, baseType: !1323)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 32)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!107, !1187, !1058, !106}
!1326 = !{!1327, !1333, !1335, !1345, !1347, !1349, !1351, !1356, !1358, !1360, !1365, !1367, !1369, !1371, !1373, !1375, !1377, !1379, !1381, !1383, !1385, !1387, !1389, !1391, !1393, !1407, !1409, !1411, !1413, !1415, !1417, !1419, !1421, !1423, !1425, !1427, !1429, !1431, !1433, !1435, !1156, !1437, !1439, !1452, !1454, !1456, !1458, !1460, !1462}
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1158, file: !1329, line: 762, type: !1330, isLocal: false, isDefinition: true, align: 16)
!1329 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 112, elements: !1331)
!1331 = !{!1332}
!1332 = !DISubrange(count: 7)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1158, file: !1329, line: 762, type: !1188, isLocal: false, isDefinition: true, align: 32)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1158, file: !1329, line: 762, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1338)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1339)
!1339 = !{!1340, !1344}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1338, file: !238, line: 60, baseType: !1341, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!107, !1187}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1338, file: !238, line: 65, baseType: !1187, size: 32, offset: 32)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1158, file: !1329, line: 766, type: !1330, isLocal: false, isDefinition: true, align: 16)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1158, file: !1329, line: 766, type: !1188, isLocal: false, isDefinition: true, align: 32)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1158, file: !1329, line: 766, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1158, file: !1329, line: 770, type: !1353, isLocal: false, isDefinition: true, align: 16)
!1353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 96, elements: !1354)
!1354 = !{!1355}
!1355 = !DISubrange(count: 6)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1158, file: !1329, line: 770, type: !1188, isLocal: false, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1158, file: !1329, line: 770, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1158, file: !1329, line: 774, type: !1362, isLocal: false, isDefinition: true, align: 16)
!1362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 80, elements: !1363)
!1363 = !{!1364}
!1364 = !DISubrange(count: 5)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1158, file: !1329, line: 774, type: !1188, isLocal: false, isDefinition: true, align: 32)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1158, file: !1329, line: 774, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1158, file: !1329, line: 778, type: !1362, isLocal: false, isDefinition: true, align: 16)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1158, file: !1329, line: 778, type: !1188, isLocal: false, isDefinition: true, align: 32)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1158, file: !1329, line: 778, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1158, file: !1329, line: 782, type: !1362, isLocal: false, isDefinition: true, align: 16)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1158, file: !1329, line: 782, type: !1188, isLocal: false, isDefinition: true, align: 32)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1158, file: !1329, line: 782, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1158, file: !1329, line: 786, type: !1362, isLocal: false, isDefinition: true, align: 16)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1158, file: !1329, line: 786, type: !1188, isLocal: false, isDefinition: true, align: 32)
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1158, file: !1329, line: 786, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1158, file: !1329, line: 790, type: !1362, isLocal: false, isDefinition: true, align: 16)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1158, file: !1329, line: 790, type: !1188, isLocal: false, isDefinition: true, align: 32)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1158, file: !1329, line: 790, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1158, file: !1329, line: 762, type: !1395, isLocal: true, isDefinition: true)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1396, line: 237, size: 128, elements: !1397)
!1396 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1397 = !{!1398, !1399, !1400}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1395, file: !1396, line: 239, baseType: !1256, size: 32)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1395, file: !1396, line: 241, baseType: !1187, size: 32, offset: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1395, file: !1396, line: 243, baseType: !1401, size: 64, offset: 64)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1234, line: 40, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1234, line: 35, size: 64, elements: !1403)
!1403 = !{!1404, !1406}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1402, file: !1234, line: 36, baseType: !1405, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1402, file: !1234, line: 37, baseType: !1405, size: 32, offset: 32)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1158, file: !1329, line: 762, type: !1196, isLocal: true, isDefinition: true, align: 8)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1158, file: !1329, line: 766, type: !1395, isLocal: true, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1158, file: !1329, line: 766, type: !1196, isLocal: true, isDefinition: true, align: 8)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1158, file: !1329, line: 770, type: !1395, isLocal: true, isDefinition: true)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1158, file: !1329, line: 770, type: !1196, isLocal: true, isDefinition: true, align: 8)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1158, file: !1329, line: 774, type: !1395, isLocal: true, isDefinition: true)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1158, file: !1329, line: 774, type: !1196, isLocal: true, isDefinition: true, align: 8)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1158, file: !1329, line: 778, type: !1395, isLocal: true, isDefinition: true)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1158, file: !1329, line: 778, type: !1196, isLocal: true, isDefinition: true, align: 8)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1158, file: !1329, line: 782, type: !1395, isLocal: true, isDefinition: true)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1158, file: !1329, line: 782, type: !1196, isLocal: true, isDefinition: true, align: 8)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1158, file: !1329, line: 786, type: !1395, isLocal: true, isDefinition: true)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1158, file: !1329, line: 786, type: !1196, isLocal: true, isDefinition: true, align: 8)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1158, file: !1329, line: 790, type: !1395, isLocal: true, isDefinition: true)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1158, file: !1329, line: 790, type: !1196, isLocal: true, isDefinition: true, align: 8)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1158, file: !1329, line: 656, type: !1180, isLocal: true, isDefinition: true)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1158, file: !1329, line: 766, type: !1441, isLocal: true, isDefinition: true)
!1441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1442)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1396, line: 224, size: 160, elements: !1443)
!1443 = !{!1444, !1445, !1446, !1447}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1442, file: !1396, line: 226, baseType: !1251, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1442, file: !1396, line: 228, baseType: !1014, size: 32, offset: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1442, file: !1396, line: 230, baseType: !107, size: 32, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1442, file: !1396, line: 231, baseType: !1448, size: 64, offset: 96)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1010, line: 343, size: 64, elements: !1449)
!1449 = !{!1450, !1451}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1448, file: !1010, line: 344, baseType: !152, size: 32)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1448, file: !1010, line: 345, baseType: !152, size: 32, offset: 32)
!1452 = !DIGlobalVariableExpression(var: !1453, expr: !DIExpression())
!1453 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1158, file: !1329, line: 770, type: !1441, isLocal: true, isDefinition: true)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1158, file: !1329, line: 774, type: !1441, isLocal: true, isDefinition: true)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1158, file: !1329, line: 778, type: !1441, isLocal: true, isDefinition: true)
!1458 = !DIGlobalVariableExpression(var: !1459, expr: !DIExpression())
!1459 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1158, file: !1329, line: 782, type: !1441, isLocal: true, isDefinition: true)
!1460 = !DIGlobalVariableExpression(var: !1461, expr: !DIExpression())
!1461 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1158, file: !1329, line: 786, type: !1441, isLocal: true, isDefinition: true)
!1462 = !DIGlobalVariableExpression(var: !1463, expr: !DIExpression())
!1463 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1158, file: !1329, line: 790, type: !1441, isLocal: true, isDefinition: true)
!1464 = !DIGlobalVariableExpression(var: !1465, expr: !DIExpression())
!1465 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1466, file: !1605, line: 44, type: !1683, isLocal: false, isDefinition: true)
!1466 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1467, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1468, retainedTypes: !1501, globals: !1602, splitDebugInlining: false, nameTableKind: None)
!1467 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!1468 = !{!30, !1469, !1476, !1483, !1490, !1496, !964}
!1469 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1098, line: 47, baseType: !32, size: 32, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474, !1475}
!1471 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1472 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1473 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1474 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1475 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1476 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1098, line: 75, baseType: !32, size: 32, elements: !1477)
!1477 = !{!1478, !1479, !1480, !1481, !1482}
!1478 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1479 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1480 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1481 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1482 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1483 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1098, line: 92, baseType: !32, size: 32, elements: !1484)
!1484 = !{!1485, !1486, !1487, !1488, !1489}
!1485 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1486 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1487 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1488 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1489 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1490 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1098, line: 84, baseType: !32, size: 32, elements: !1491)
!1491 = !{!1492, !1493, !1494, !1495}
!1492 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1493 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1494 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1495 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1496 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1098, line: 107, baseType: !32, size: 32, elements: !1497)
!1497 = !{!1498, !1499, !1500}
!1498 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1499 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1500 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1501 = !{!106, !107, !1502, !196, !195, !1551, !152, !1058, !1562, !197, !566, !1601}
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1098, line: 336, size: 160, elements: !1505)
!1505 = !{!1506, !1525, !1529, !1533, !1546}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1504, file: !1098, line: 365, baseType: !1507, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 32)
!1508 = !DISubroutineType(types: !1509)
!1509 = !{!107, !1510, !1119}
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1512)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1513)
!1513 = !{!1514, !1515, !1516, !1517, !1523, !1524}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1512, file: !247, line: 380, baseType: !118, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1512, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1512, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1512, file: !247, line: 386, baseType: !1518, size: 32, offset: 96)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1520)
!1520 = !{!1521, !1522}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1519, file: !247, line: 359, baseType: !195, size: 8)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1519, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1512, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1512, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1504, file: !1098, line: 366, baseType: !1526, size: 32, offset: 32)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{null, !1510, !196}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1504, file: !1098, line: 374, baseType: !1530, size: 32, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!107, !1510}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1504, file: !1098, line: 377, baseType: !1534, size: 32, offset: 96)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 32)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!107, !1510, !1537}
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1539)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1098, line: 122, size: 64, elements: !1540)
!1540 = !{!1541, !1542, !1543, !1544, !1545}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1539, file: !1098, line: 123, baseType: !152, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1539, file: !1098, line: 124, baseType: !195, size: 8, offset: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1539, file: !1098, line: 125, baseType: !195, size: 8, offset: 40)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1539, file: !1098, line: 126, baseType: !195, size: 8, offset: 48)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1539, file: !1098, line: 127, baseType: !195, size: 8, offset: 56)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1504, file: !1098, line: 379, baseType: !1547, size: 32, offset: 128)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!107, !1510, !1550}
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !223, line: 648, baseType: !1553)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 639, size: 224, elements: !1554)
!1554 = !{!1555, !1556, !1557, !1558, !1559, !1560, !1561}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1553, file: !223, line: 641, baseType: !227, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1553, file: !223, line: 642, baseType: !227, size: 32, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1553, file: !223, line: 643, baseType: !227, size: 32, offset: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1553, file: !223, line: 644, baseType: !227, size: 32, offset: 96)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1553, file: !223, line: 645, baseType: !227, size: 32, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1553, file: !223, line: 646, baseType: !227, size: 32, offset: 160)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1553, file: !223, line: 647, baseType: !227, size: 32, offset: 192)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1564)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !965, line: 100, size: 224, elements: !1565)
!1565 = !{!1566, !1571, !1572, !1581, !1586, !1591, !1596}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1564, file: !965, line: 101, baseType: !1567, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !965, line: 76, baseType: !1568)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 32)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{!107, !1510, !1058}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1564, file: !965, line: 102, baseType: !1567, size: 32, offset: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1564, file: !965, line: 103, baseType: !1573, size: 32, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !965, line: 83, baseType: !1574)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 32)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{!107, !1510, !1058, !1577, !106}
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !965, line: 72, baseType: !1578)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{null, !1510, !1058, !106}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1564, file: !965, line: 104, baseType: !1582, size: 32, offset: 96)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !965, line: 79, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!107, !1510, !1058, !1014}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1564, file: !965, line: 105, baseType: !1587, size: 32, offset: 128)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !965, line: 88, baseType: !1588)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 32)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!964, !1510, !1058}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1564, file: !965, line: 106, baseType: !1592, size: 32, offset: 160)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !965, line: 92, baseType: !1593)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!107, !1510, !1058, !1084}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1564, file: !965, line: 107, baseType: !1597, size: 32, offset: 192)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !965, line: 96, baseType: !1598)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{!107, !1510, !1058, !106}
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!1602 = !{!1464, !1603, !1609, !1611, !1618, !1620, !1664, !1667, !1669, !1672, !1675, !1677}
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1466, file: !1605, line: 1914, type: !1606, isLocal: false, isDefinition: true, align: 16)
!1605 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 128, elements: !1607)
!1607 = !{!1608}
!1608 = !DISubrange(count: 8)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1466, file: !1605, line: 1914, type: !1511, isLocal: false, isDefinition: true, align: 32)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1466, file: !1605, line: 1914, type: !1613, isLocal: true, isDefinition: true, align: 32)
!1613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1614)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1615)
!1615 = !{!1616, !1617}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1614, file: !238, line: 60, baseType: !1530, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1614, file: !238, line: 65, baseType: !1510, size: 32, offset: 32)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1466, file: !1605, line: 1914, type: !1519, isLocal: true, isDefinition: true, align: 8)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1466, file: !1605, line: 1914, type: !1622, isLocal: true, isDefinition: true)
!1622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1623)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1624, line: 22, size: 224, elements: !1625)
!1624 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1625 = !{!1626, !1627, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1623, file: !1624, line: 24, baseType: !1551, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1623, file: !1624, line: 26, baseType: !1628, size: 32, offset: 32)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1630)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1010, line: 343, size: 64, elements: !1631)
!1631 = !{!1632, !1633}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1630, file: !1010, line: 344, baseType: !152, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1630, file: !1010, line: 345, baseType: !152, size: 32, offset: 32)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1623, file: !1624, line: 28, baseType: !185, size: 32, offset: 64)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1623, file: !1624, line: 30, baseType: !145, size: 8, offset: 96)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1623, file: !1624, line: 32, baseType: !107, size: 32, offset: 128)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1623, file: !1624, line: 34, baseType: !145, size: 8, offset: 160)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1623, file: !1624, line: 36, baseType: !145, size: 8, offset: 168)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1623, file: !1624, line: 38, baseType: !145, size: 8, offset: 176)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1623, file: !1624, line: 40, baseType: !145, size: 8, offset: 184)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1623, file: !1624, line: 41, baseType: !1642, size: 32, offset: 192)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1644)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1645, line: 60, size: 64, elements: !1646)
!1645 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1646 = !{!1647, !1663}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1644, file: !1645, line: 69, baseType: !1648, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 32)
!1649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1650)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1645, line: 50, size: 64, elements: !1651)
!1651 = !{!1652, !1661, !1662}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1650, file: !1645, line: 52, baseType: !1653, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1655)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1656, line: 37, baseType: !1657)
!1656 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1656, line: 32, size: 64, elements: !1658)
!1658 = !{!1659, !1660}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1657, file: !1656, line: 34, baseType: !152, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1657, file: !1656, line: 36, baseType: !152, size: 32, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1650, file: !1645, line: 54, baseType: !195, size: 8, offset: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1650, file: !1645, line: 56, baseType: !195, size: 8, offset: 40)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1644, file: !1645, line: 71, baseType: !195, size: 8, offset: 32)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1466, file: !1605, line: 1914, type: !1666, isLocal: true, isDefinition: true)
!1666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1629, size: 64, elements: !445)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1466, file: !1605, line: 1914, type: !1643, isLocal: true, isDefinition: true)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1466, file: !1605, line: 1914, type: !1671, isLocal: true, isDefinition: true)
!1671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1649, size: 64, elements: !445)
!1672 = !DIGlobalVariableExpression(var: !1673, expr: !DIExpression())
!1673 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1466, file: !1605, line: 1914, type: !1674, isLocal: true, isDefinition: true)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1654, size: 128, elements: !340)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1466, file: !1605, line: 1539, type: !1503, isLocal: true, isDefinition: true)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1466, file: !1605, line: 1914, type: !1679, isLocal: true, isDefinition: true)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1624, line: 74, size: 64, elements: !1680)
!1680 = !{!1681, !1682}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1679, file: !1624, line: 76, baseType: !152, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1679, file: !1624, line: 78, baseType: !1510, size: 32, offset: 32)
!1683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1684)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !1685)
!1685 = !{!1686, !1687}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1684, file: !203, line: 17, baseType: !118, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1684, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1690, file: !1766, line: 65, type: !227, isLocal: true, isDefinition: true)
!1690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1692, retainedTypes: !1693, globals: !1763, splitDebugInlining: false, nameTableKind: None)
!1691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!1692 = !{!734}
!1693 = !{!564, !1694, !895, !195, !152, !1702, !1733}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !1696)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !1697)
!1697 = !{!1698, !1699, !1700, !1701}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1696, file: !463, line: 766, baseType: !227, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1696, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1696, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1696, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !1704)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !1705)
!1705 = !{!1706, !1708, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1723, !1728, !1732}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1704, file: !463, line: 413, baseType: !1707, size: 256)
!1707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 256, elements: !1607)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1704, file: !463, line: 414, baseType: !1709, size: 768, offset: 256)
!1709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 768, elements: !1710)
!1710 = !{!1711}
!1711 = !DISubrange(count: 24)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1704, file: !463, line: 415, baseType: !1707, size: 256, offset: 1024)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1704, file: !463, line: 416, baseType: !1709, size: 768, offset: 1280)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1704, file: !463, line: 417, baseType: !1707, size: 256, offset: 2048)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1704, file: !463, line: 418, baseType: !1709, size: 768, offset: 2304)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1704, file: !463, line: 419, baseType: !1707, size: 256, offset: 3072)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1704, file: !463, line: 420, baseType: !1709, size: 768, offset: 3328)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1704, file: !463, line: 421, baseType: !1707, size: 256, offset: 4096)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1704, file: !463, line: 422, baseType: !1720, size: 1792, offset: 4352)
!1720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 1792, elements: !1721)
!1721 = !{!1722}
!1722 = !DISubrange(count: 56)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1704, file: !463, line: 423, baseType: !1724, size: 1920, offset: 6144)
!1724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1725, size: 1920, elements: !1726)
!1725 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!1726 = !{!1727}
!1727 = !DISubrange(count: 240)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1704, file: !463, line: 424, baseType: !1729, size: 20608, offset: 8064)
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 20608, elements: !1730)
!1730 = !{!1731}
!1731 = !DISubrange(count: 644)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1704, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 32)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !1735)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !1736)
!1736 = !{!1737, !1738, !1739, !1740, !1741, !1742, !1743, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1754, !1755, !1756, !1758, !1760, !1762}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1735, file: !463, line: 447, baseType: !467, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1735, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1735, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1735, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1735, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1735, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1735, file: !463, line: 453, baseType: !1744, size: 96, offset: 192)
!1744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1725, size: 96, elements: !931)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1735, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1735, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1735, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1735, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1735, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1735, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1735, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1735, file: !463, line: 461, baseType: !1753, size: 64, offset: 512)
!1753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 64, elements: !340)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1735, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1735, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1735, file: !463, line: 464, baseType: !1757, size: 128, offset: 640)
!1757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 128, elements: !837)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1735, file: !463, line: 465, baseType: !1759, size: 160, offset: 768)
!1759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 160, elements: !1363)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1735, file: !463, line: 466, baseType: !1761, size: 160, offset: 928)
!1761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 160, elements: !1363)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1735, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!1763 = !{!1764, !1790, !1795, !1797, !1799, !1688}
!1764 = !DIGlobalVariableExpression(var: !1765, expr: !DIExpression())
!1765 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1690, file: !1766, line: 285, type: !1767, isLocal: true, isDefinition: true, align: 32)
!1766 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1768)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1769)
!1769 = !{!1770, !1789}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1768, file: !238, line: 60, baseType: !1771, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 32)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!107, !1774}
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1776)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1777)
!1777 = !{!1778, !1779, !1780, !1781, !1787, !1788}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1776, file: !247, line: 380, baseType: !118, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1776, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1776, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1776, file: !247, line: 386, baseType: !1782, size: 32, offset: 96)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 32)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1784)
!1784 = !{!1785, !1786}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1783, file: !247, line: 359, baseType: !195, size: 8)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1783, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1776, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1776, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1768, file: !238, line: 65, baseType: !1774, size: 32, offset: 32)
!1790 = !DIGlobalVariableExpression(var: !1791, expr: !DIExpression())
!1791 = distinct !DIGlobalVariable(name: "lock", scope: !1690, file: !1766, line: 34, type: !1792, isLocal: true, isDefinition: true)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !1793)
!1793 = !{!1794}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1792, file: !420, line: 52, baseType: !22, size: 32)
!1795 = !DIGlobalVariableExpression(var: !1796, expr: !DIExpression())
!1796 = distinct !DIGlobalVariable(name: "last_load", scope: !1690, file: !1766, line: 36, type: !152, isLocal: true, isDefinition: true)
!1797 = !DIGlobalVariableExpression(var: !1798, expr: !DIExpression())
!1798 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1690, file: !1766, line: 48, type: !152, isLocal: true, isDefinition: true)
!1799 = !DIGlobalVariableExpression(var: !1800, expr: !DIExpression())
!1800 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1690, file: !1766, line: 54, type: !152, isLocal: true, isDefinition: true)
!1801 = !DIGlobalVariableExpression(var: !1802, expr: !DIExpression())
!1802 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1803, file: !1885, line: 22, type: !1887, isLocal: true, isDefinition: true)
!1803 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1804, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1805, retainedTypes: !1806, globals: !1882, splitDebugInlining: false, nameTableKind: None)
!1804 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!1805 = !{!1161, !1167}
!1806 = !{!1807, !1871, !1876, !1214, !1167, !1161, !1881, !106}
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 32)
!1808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1809)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1162, line: 523, size: 288, elements: !1810)
!1810 = !{!1811, !1830, !1834, !1838, !1842, !1843, !1844, !1848, !1867}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1809, file: !1162, line: 524, baseType: !1812, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 32)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!107, !1815, !1202, !1203}
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 32)
!1816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1817)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1818)
!1818 = !{!1819, !1820, !1821, !1822, !1828, !1829}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1817, file: !247, line: 380, baseType: !118, size: 32)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1817, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1817, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1817, file: !247, line: 386, baseType: !1823, size: 32, offset: 96)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1825)
!1825 = !{!1826, !1827}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1824, file: !247, line: 359, baseType: !195, size: 8)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1824, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1817, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1817, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1809, file: !1162, line: 530, baseType: !1831, size: 32, offset: 32)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 32)
!1832 = !DISubroutineType(types: !1833)
!1833 = !{!107, !1815, !1208}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1809, file: !1162, line: 532, baseType: !1835, size: 32, offset: 64)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 32)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!107, !1815, !1214, !1209}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1809, file: !1162, line: 535, baseType: !1839, size: 32, offset: 96)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{!107, !1815, !1214}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1809, file: !1162, line: 537, baseType: !1839, size: 32, offset: 128)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1809, file: !1162, line: 539, baseType: !1839, size: 32, offset: 160)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1809, file: !1162, line: 541, baseType: !1845, size: 32, offset: 192)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1846 = !DISubroutineType(types: !1847)
!1847 = !{!107, !1815, !1202, !1161, !1167}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1809, file: !1162, line: 544, baseType: !1849, size: 32, offset: 224)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = !DISubroutineType(types: !1851)
!1851 = !{!107, !1815, !1852, !145}
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 32)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1162, line: 478, size: 96, elements: !1854)
!1854 = !{!1855, !1861, !1866}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1853, file: !1162, line: 482, baseType: !1856, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1234, line: 33, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1234, line: 29, size: 32, elements: !1858)
!1858 = !{!1859}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1857, file: !1234, line: 30, baseType: !1860, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1853, file: !1162, line: 485, baseType: !1862, size: 32, offset: 32)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1162, line: 464, baseType: !1863)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = !DISubroutineType(types: !1865)
!1865 = !{null, !1815, !1852, !1214}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1853, file: !1162, line: 493, baseType: !1214, size: 32, offset: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1809, file: !1162, line: 547, baseType: !1868, size: 32, offset: 256)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!152, !1815}
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1873)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1162, line: 428, size: 32, elements: !1874)
!1874 = !{!1875}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1873, file: !1162, line: 434, baseType: !1214, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1162, line: 441, size: 32, elements: !1879)
!1879 = !{!1880}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1878, file: !1162, line: 447, baseType: !1214, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 32)
!1882 = !{!1883, !1801}
!1883 = !DIGlobalVariableExpression(var: !1884, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1884 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1803, file: !1885, line: 37, type: !1886, isLocal: true, isDefinition: true)
!1885 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1888, size: 352, elements: !1889)
!1888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1815)
!1889 = !{!1890}
!1890 = !DISubrange(count: 11)
!1891 = !DIGlobalVariableExpression(var: !1892, expr: !DIExpression())
!1892 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1893, file: !1934, line: 139, type: !1941, isLocal: false, isDefinition: true)
!1893 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1894, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1895, globals: !1931, splitDebugInlining: false, nameTableKind: None)
!1894 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!1895 = !{!1896}
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 510, baseType: !1898)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 477, size: 1216, elements: !1899)
!1899 = !{!1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1898, file: !223, line: 479, baseType: !227, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1898, file: !223, line: 480, baseType: !227, size: 32, offset: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1898, file: !223, line: 481, baseType: !227, size: 32, offset: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1898, file: !223, line: 482, baseType: !227, size: 32, offset: 96)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1898, file: !223, line: 483, baseType: !227, size: 32, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1898, file: !223, line: 484, baseType: !227, size: 32, offset: 160)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1898, file: !223, line: 485, baseType: !983, size: 64, offset: 192)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1898, file: !223, line: 486, baseType: !227, size: 32, offset: 256)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1898, file: !223, line: 487, baseType: !227, size: 32, offset: 288)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1898, file: !223, line: 488, baseType: !983, size: 64, offset: 320)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1898, file: !223, line: 489, baseType: !227, size: 32, offset: 384)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1898, file: !223, line: 490, baseType: !227, size: 32, offset: 416)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1898, file: !223, line: 491, baseType: !983, size: 64, offset: 448)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1898, file: !223, line: 492, baseType: !227, size: 32, offset: 512)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1898, file: !223, line: 493, baseType: !227, size: 32, offset: 544)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1898, file: !223, line: 494, baseType: !983, size: 64, offset: 576)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1898, file: !223, line: 495, baseType: !227, size: 32, offset: 640)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1898, file: !223, line: 496, baseType: !227, size: 32, offset: 672)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1898, file: !223, line: 497, baseType: !983, size: 64, offset: 704)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1898, file: !223, line: 498, baseType: !227, size: 32, offset: 768)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1898, file: !223, line: 499, baseType: !227, size: 32, offset: 800)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1898, file: !223, line: 500, baseType: !983, size: 64, offset: 832)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1898, file: !223, line: 501, baseType: !227, size: 32, offset: 896)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1898, file: !223, line: 502, baseType: !227, size: 32, offset: 928)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1898, file: !223, line: 503, baseType: !983, size: 64, offset: 960)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1898, file: !223, line: 504, baseType: !227, size: 32, offset: 1024)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1898, file: !223, line: 505, baseType: !227, size: 32, offset: 1056)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1898, file: !223, line: 506, baseType: !152, size: 32, offset: 1088)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1898, file: !223, line: 507, baseType: !227, size: 32, offset: 1120)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1898, file: !223, line: 508, baseType: !227, size: 32, offset: 1152)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1898, file: !223, line: 509, baseType: !227, size: 32, offset: 1184)
!1931 = !{!1932, !1935, !1891}
!1932 = !DIGlobalVariableExpression(var: !1933, expr: !DIExpression())
!1933 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1893, file: !1934, line: 137, type: !152, isLocal: false, isDefinition: true)
!1934 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1935 = !DIGlobalVariableExpression(var: !1936, expr: !DIExpression())
!1936 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1893, file: !1934, line: 138, type: !1937, isLocal: false, isDefinition: true)
!1937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1938, size: 128, elements: !1939)
!1938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!1939 = !{!1940}
!1940 = !DISubrange(count: 16)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1938, size: 64, elements: !1607)
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1944, file: !1947, line: 23, type: !1948, isLocal: false, isDefinition: true)
!1944 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1945, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !1946, splitDebugInlining: false, nameTableKind: None)
!1945 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!1946 = !{!1942}
!1947 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!1949 = !DIGlobalVariableExpression(var: !1950, expr: !DIExpression())
!1950 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1951, file: !1955, line: 37, type: !2208, isLocal: false, isDefinition: true)
!1951 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1952, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1953, retainedTypes: !1962, globals: !2035, splitDebugInlining: false, nameTableKind: None)
!1952 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!1953 = !{!1954, !30, !734}
!1954 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1955, line: 63, baseType: !32, size: 32, elements: !1956)
!1955 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1956 = !{!1957, !1958, !1959, !1960, !1961}
!1957 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1958 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1959 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1960 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1961 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1962 = !{!185, !106, !107, !1963, !193, !152, !1993, !895, !195, !2018}
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1965)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1966, line: 51, size: 64, elements: !1967)
!1966 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1967 = !{!1968, !1988}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1965, file: !1966, line: 52, baseType: !1969, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1966, line: 38, baseType: !1970)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 32)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!107, !1973, !194, !197}
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1975)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1976)
!1976 = !{!1977, !1978, !1979, !1980, !1986, !1987}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1975, file: !247, line: 380, baseType: !118, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1975, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1975, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1975, file: !247, line: 386, baseType: !1981, size: 32, offset: 96)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 32)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1983)
!1983 = !{!1984, !1985}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1982, file: !247, line: 359, baseType: !195, size: 8)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1982, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1975, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1975, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1965, file: !1966, line: 53, baseType: !1989, size: 32, offset: 32)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1966, line: 47, baseType: !1990)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 32)
!1991 = !DISubroutineType(types: !1992)
!1992 = !{!107, !1973, !194, !197, !152}
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !1995)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !1996)
!1996 = !{!1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1995, file: !463, line: 447, baseType: !467, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1995, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1995, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1995, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1995, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1995, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1995, file: !463, line: 453, baseType: !1744, size: 96, offset: 192)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1995, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1995, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1995, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1995, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1995, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1995, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1995, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1995, file: !463, line: 461, baseType: !1753, size: 64, offset: 512)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1995, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1995, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1995, file: !463, line: 464, baseType: !1757, size: 128, offset: 640)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1995, file: !463, line: 465, baseType: !1759, size: 160, offset: 768)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1995, file: !463, line: 466, baseType: !1761, size: 160, offset: 928)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1995, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2020)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2021)
!2021 = !{!2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2020, file: !463, line: 413, baseType: !1707, size: 256)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2020, file: !463, line: 414, baseType: !1709, size: 768, offset: 256)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2020, file: !463, line: 415, baseType: !1707, size: 256, offset: 1024)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2020, file: !463, line: 416, baseType: !1709, size: 768, offset: 1280)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2020, file: !463, line: 417, baseType: !1707, size: 256, offset: 2048)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2020, file: !463, line: 418, baseType: !1709, size: 768, offset: 2304)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2020, file: !463, line: 419, baseType: !1707, size: 256, offset: 3072)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2020, file: !463, line: 420, baseType: !1709, size: 768, offset: 3328)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2020, file: !463, line: 421, baseType: !1707, size: 256, offset: 4096)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2020, file: !463, line: 422, baseType: !1720, size: 1792, offset: 4352)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2020, file: !463, line: 423, baseType: !1724, size: 1920, offset: 6144)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2020, file: !463, line: 424, baseType: !1729, size: 20608, offset: 8064)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2020, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2035 = !{!1949, !2036, !2162, !2168, !2170, !2173, !2178, !2180, !2185}
!2036 = !DIGlobalVariableExpression(var: !2037, expr: !DIExpression())
!2037 = distinct !DIGlobalVariable(name: "_kernel", scope: !1951, file: !1955, line: 40, type: !2038, isLocal: false, isDefinition: true)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !345, line: 158, size: 288, elements: !2039)
!2039 = !{!2040, !2157}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2038, file: !345, line: 159, baseType: !2041, size: 192)
!2041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2042, size: 192, elements: !445)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !345, line: 100, size: 192, elements: !2043)
!2043 = !{!2044, !2045, !2046, !2150, !2151, !2152, !2153}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2042, file: !345, line: 102, baseType: !152, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2042, file: !345, line: 105, baseType: !193, size: 32, offset: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2042, file: !345, line: 108, baseType: !2047, size: 32, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 32)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2049)
!2049 = !{!2050, !2108, !2120, !2121, !2122, !2123, !2124, !2130, !2145}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2048, file: !309, line: 247, baseType: !2051, size: 384)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2052)
!2052 = !{!2053, !2077, !2084, !2085, !2086, !2095, !2096, !2097}
!2053 = !DIDerivedType(tag: DW_TAG_member, scope: !2051, file: !309, line: 60, baseType: !2054, size: 64)
!2054 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2051, file: !309, line: 60, size: 64, elements: !2055)
!2055 = !{!2056, !2071}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2054, file: !309, line: 61, baseType: !2057, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2059)
!2059 = !{!2060, !2066}
!2060 = !DIDerivedType(tag: DW_TAG_member, scope: !2058, file: !319, line: 38, baseType: !2061, size: 32)
!2061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2058, file: !319, line: 38, size: 32, elements: !2062)
!2062 = !{!2063, !2065}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2061, file: !319, line: 39, baseType: !2064, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2061, file: !319, line: 40, baseType: !2064, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, scope: !2058, file: !319, line: 42, baseType: !2067, size: 32, offset: 32)
!2067 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2058, file: !319, line: 42, size: 32, elements: !2068)
!2068 = !{!2069, !2070}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2067, file: !319, line: 43, baseType: !2064, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2067, file: !319, line: 44, baseType: !2064, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2054, file: !309, line: 62, baseType: !2072, size: 64)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2073)
!2073 = !{!2074}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2072, file: !335, line: 50, baseType: !2075, size: 64)
!2075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2076, size: 64, elements: !340)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2051, file: !309, line: 68, baseType: !2078, size: 32, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 32)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2080)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2081)
!2081 = !{!2082}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2080, file: !345, line: 232, baseType: !2083, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2058)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2051, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2051, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2086 = !DIDerivedType(tag: DW_TAG_member, scope: !2051, file: !309, line: 90, baseType: !2087, size: 16, offset: 112)
!2087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2051, file: !309, line: 90, size: 16, elements: !2088)
!2088 = !{!2089, !2094}
!2089 = !DIDerivedType(tag: DW_TAG_member, scope: !2087, file: !309, line: 91, baseType: !2090, size: 16)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2087, file: !309, line: 91, size: 16, elements: !2091)
!2091 = !{!2092, !2093}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2090, file: !309, line: 96, baseType: !359, size: 8)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2090, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2087, file: !309, line: 100, baseType: !197, size: 16)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2051, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2051, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2051, file: !309, line: 131, baseType: !2098, size: 192, offset: 192)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2099)
!2099 = !{!2100, !2101, !2107}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2098, file: !345, line: 245, baseType: !2057, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2098, file: !345, line: 246, baseType: !2102, size: 32, offset: 64)
!2102 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2103)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{null, !2106}
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2098, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2048, file: !309, line: 250, baseType: !2109, size: 288, offset: 384)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2110)
!2110 = !{!2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2109, file: !379, line: 26, baseType: !152, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2109, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2109, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2109, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2109, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2109, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2109, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2109, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2109, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2048, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2048, file: !309, line: 256, baseType: !2079, size: 64, offset: 704)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2048, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2048, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2048, file: !309, line: 300, baseType: !2125, size: 96, offset: 1056)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2126)
!2126 = !{!2127, !2128, !2129}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2125, file: !309, line: 153, baseType: !22, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2125, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2125, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2048, file: !309, line: 325, baseType: !2131, size: 32, offset: 1152)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 32)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2133)
!2133 = !{!2134, !2140, !2141}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2132, file: !406, line: 5074, baseType: !2135, size: 96)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2136)
!2136 = !{!2137, !2138, !2139}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2135, file: !410, line: 57, baseType: !413, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2135, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2135, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2132, file: !406, line: 5075, baseType: !2079, size: 64, offset: 96)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2132, file: !406, line: 5076, baseType: !2142, size: 32, offset: 160)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2143)
!2143 = !{!2144}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2142, file: !420, line: 52, baseType: !22, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2048, file: !309, line: 343, baseType: !2146, size: 64, offset: 1184)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2147)
!2147 = !{!2148, !2149}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2146, file: !379, line: 63, baseType: !152, size: 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2146, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2042, file: !345, line: 111, baseType: !2047, size: 32, offset: 96)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2042, file: !345, line: 124, baseType: !107, size: 32, offset: 128)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2042, file: !345, line: 127, baseType: !195, size: 8, offset: 160)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2042, file: !345, line: 153, baseType: !2154, offset: 168)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2155, line: 33, elements: !2156)
!2155 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2156 = !{}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2038, file: !345, line: 170, baseType: !2158, size: 96, offset: 192)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !2159)
!2159 = !{!2160, !2161}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2158, file: !345, line: 86, baseType: !2047, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2158, file: !345, line: 90, baseType: !2083, size: 64, offset: 32)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1951, file: !1955, line: 43, type: !2164, isLocal: false, isDefinition: true, align: 512)
!2164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2165, size: 8704, elements: !580)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !2166)
!2166 = !{!2167}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2165, file: !577, line: 48, baseType: !120, size: 8)
!2168 = !DIGlobalVariableExpression(var: !2169, expr: !DIExpression())
!2169 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1951, file: !1955, line: 44, type: !2048, isLocal: false, isDefinition: true)
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1951, file: !1955, line: 48, type: !2172, isLocal: false, isDefinition: true)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2048, size: 1280, elements: !445)
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1951, file: !1955, line: 86, type: !2175, isLocal: false, isDefinition: true, align: 512)
!2175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2165, size: 16896, elements: !2176)
!2176 = !{!446, !2177}
!2177 = !DISubrange(count: 2112)
!2178 = !DIGlobalVariableExpression(var: !2179, expr: !DIExpression())
!2179 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1951, file: !1955, line: 217, type: !145, isLocal: false, isDefinition: true)
!2180 = !DIGlobalVariableExpression(var: !2181, expr: !DIExpression())
!2181 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1951, file: !1955, line: 50, type: !2182, isLocal: true, isDefinition: true, align: 512)
!2182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2165, size: 3072, elements: !2183)
!2183 = !{!446, !2184}
!2184 = !DISubrange(count: 384)
!2185 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression())
!2186 = distinct !DIGlobalVariable(name: "levels", scope: !2187, file: !1955, line: 232, type: !2207, isLocal: true, isDefinition: true)
!2187 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1955, file: !1955, line: 230, type: !2188, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !2190)
!2188 = !DISubroutineType(types: !2189)
!2189 = !{null, !1954}
!2190 = !{!2191, !2192, !2202, !2206}
!2191 = !DILocalVariable(name: "level", arg: 1, scope: !2187, file: !1955, line: 230, type: !1954)
!2192 = !DILocalVariable(name: "entry", scope: !2187, file: !1955, line: 244, type: !2193)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2195)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !2196)
!2196 = !{!2197, !2201}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2195, file: !238, line: 60, baseType: !2198, size: 32)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 32)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!107, !1973}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2195, file: !238, line: 65, baseType: !1973, size: 32, offset: 32)
!2202 = !DILocalVariable(name: "dev", scope: !2203, file: !1955, line: 247, type: !1973)
!2203 = distinct !DILexicalBlock(scope: !2204, file: !1955, line: 246, column: 64)
!2204 = distinct !DILexicalBlock(scope: !2205, file: !1955, line: 246, column: 2)
!2205 = distinct !DILexicalBlock(scope: !2187, file: !1955, line: 246, column: 2)
!2206 = !DILocalVariable(name: "rc", scope: !2203, file: !1955, line: 248, type: !107)
!2207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2193, size: 192, elements: !1354)
!2208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2209)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !2210)
!2210 = !{!2211, !2212}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2209, file: !203, line: 17, baseType: !118, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2209, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!2213 = !DIGlobalVariableExpression(var: !2214, expr: !DIExpression())
!2214 = distinct !DIGlobalVariable(name: "states_str", scope: !2215, file: !2216, line: 276, type: !2340, isLocal: true, isDefinition: true)
!2215 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2216, file: !2216, line: 271, type: !2217, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2331)
!2216 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2217 = !DISubroutineType(types: !2218)
!2218 = !{!118, !2219, !193, !185}
!2219 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2220)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2222)
!2222 = !{!2223, !2281, !2293, !2294, !2295, !2296, !2297, !2303, !2318}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2221, file: !309, line: 247, baseType: !2224, size: 384)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2225)
!2225 = !{!2226, !2250, !2257, !2258, !2259, !2268, !2269, !2270}
!2226 = !DIDerivedType(tag: DW_TAG_member, scope: !2224, file: !309, line: 60, baseType: !2227, size: 64)
!2227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2224, file: !309, line: 60, size: 64, elements: !2228)
!2228 = !{!2229, !2244}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2227, file: !309, line: 61, baseType: !2230, size: 64)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2231)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2232)
!2232 = !{!2233, !2239}
!2233 = !DIDerivedType(tag: DW_TAG_member, scope: !2231, file: !319, line: 38, baseType: !2234, size: 32)
!2234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2231, file: !319, line: 38, size: 32, elements: !2235)
!2235 = !{!2236, !2238}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2234, file: !319, line: 39, baseType: !2237, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2234, file: !319, line: 40, baseType: !2237, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, scope: !2231, file: !319, line: 42, baseType: !2240, size: 32, offset: 32)
!2240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2231, file: !319, line: 42, size: 32, elements: !2241)
!2241 = !{!2242, !2243}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2240, file: !319, line: 43, baseType: !2237, size: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2240, file: !319, line: 44, baseType: !2237, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2227, file: !309, line: 62, baseType: !2245, size: 64)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2246)
!2246 = !{!2247}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2245, file: !335, line: 50, baseType: !2248, size: 64)
!2248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2249, size: 64, elements: !340)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2224, file: !309, line: 68, baseType: !2251, size: 32, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2253)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2254)
!2254 = !{!2255}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2253, file: !345, line: 232, baseType: !2256, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2231)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2224, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2224, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2259 = !DIDerivedType(tag: DW_TAG_member, scope: !2224, file: !309, line: 90, baseType: !2260, size: 16, offset: 112)
!2260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2224, file: !309, line: 90, size: 16, elements: !2261)
!2261 = !{!2262, !2267}
!2262 = !DIDerivedType(tag: DW_TAG_member, scope: !2260, file: !309, line: 91, baseType: !2263, size: 16)
!2263 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2260, file: !309, line: 91, size: 16, elements: !2264)
!2264 = !{!2265, !2266}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2263, file: !309, line: 96, baseType: !359, size: 8)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2263, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2260, file: !309, line: 100, baseType: !197, size: 16)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2224, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2224, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2224, file: !309, line: 131, baseType: !2271, size: 192, offset: 192)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2272)
!2272 = !{!2273, !2274, !2280}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2271, file: !345, line: 245, baseType: !2230, size: 64)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2271, file: !345, line: 246, baseType: !2275, size: 32, offset: 64)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2276)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 32)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{null, !2279}
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2271, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2221, file: !309, line: 250, baseType: !2282, size: 288, offset: 384)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2283)
!2283 = !{!2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2282, file: !379, line: 26, baseType: !152, size: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2282, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2282, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2282, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2282, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2282, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2282, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2282, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2282, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2221, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2221, file: !309, line: 256, baseType: !2252, size: 64, offset: 704)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2221, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2221, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2221, file: !309, line: 300, baseType: !2298, size: 96, offset: 1056)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2299)
!2299 = !{!2300, !2301, !2302}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2298, file: !309, line: 153, baseType: !22, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2298, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2298, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2221, file: !309, line: 325, baseType: !2304, size: 32, offset: 1152)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 32)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2306)
!2306 = !{!2307, !2313, !2314}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2305, file: !406, line: 5074, baseType: !2308, size: 96)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2309)
!2309 = !{!2310, !2311, !2312}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2308, file: !410, line: 57, baseType: !413, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2308, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2308, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2305, file: !406, line: 5075, baseType: !2252, size: 64, offset: 96)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2305, file: !406, line: 5076, baseType: !2315, size: 32, offset: 160)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2316)
!2316 = !{!2317}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2315, file: !420, line: 52, baseType: !22, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2221, file: !309, line: 343, baseType: !2319, size: 64, offset: 1184)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2320)
!2320 = !{!2321, !2322}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2319, file: !379, line: 63, baseType: !152, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2319, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2323 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2324, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2325, globals: !2327, splitDebugInlining: false, nameTableKind: None)
!2324 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2325 = !{!106, !118, !564, !195, !22, !107, !2326, !24, !185, !193, !152, !566}
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 32)
!2327 = !{!2213, !2328}
!2328 = !DIGlobalVariableExpression(var: !2329, expr: !DIExpression())
!2329 = distinct !DIGlobalVariable(name: "states_sz", scope: !2215, file: !2216, line: 279, type: !2330, isLocal: true, isDefinition: true)
!2330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1886, size: 256, elements: !1607)
!2331 = !{!2332, !2333, !2334, !2335, !2336, !2337, !2338}
!2332 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2215, file: !2216, line: 271, type: !2219)
!2333 = !DILocalVariable(name: "buf", arg: 2, scope: !2215, file: !2216, line: 271, type: !193)
!2334 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2215, file: !2216, line: 271, type: !185)
!2335 = !DILocalVariable(name: "off", scope: !2215, file: !2216, line: 273, type: !185)
!2336 = !DILocalVariable(name: "bit", scope: !2215, file: !2216, line: 274, type: !195)
!2337 = !DILocalVariable(name: "thread_state", scope: !2215, file: !2216, line: 275, type: !195)
!2338 = !DILocalVariable(name: "index", scope: !2339, file: !2216, line: 293, type: !195)
!2339 = distinct !DILexicalBlock(scope: !2215, file: !2216, line: 293, column: 2)
!2340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !1607)
!2341 = !DIGlobalVariableExpression(var: !2342, expr: !DIExpression())
!2342 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2343, file: !2454, line: 56, type: !2441, isLocal: false, isDefinition: true)
!2343 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2344, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2345, globals: !2451, splitDebugInlining: false, nameTableKind: None)
!2344 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2345 = !{!2346, !193, !106, !2449, !194, !564, !895, !107, !152, !566, !2450}
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 32)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2348)
!2348 = !{!2349, !2407, !2419, !2420, !2421, !2422, !2423, !2429, !2444}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2347, file: !309, line: 247, baseType: !2350, size: 384)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2351)
!2351 = !{!2352, !2376, !2383, !2384, !2385, !2394, !2395, !2396}
!2352 = !DIDerivedType(tag: DW_TAG_member, scope: !2350, file: !309, line: 60, baseType: !2353, size: 64)
!2353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2350, file: !309, line: 60, size: 64, elements: !2354)
!2354 = !{!2355, !2370}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2353, file: !309, line: 61, baseType: !2356, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2357)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2358)
!2358 = !{!2359, !2365}
!2359 = !DIDerivedType(tag: DW_TAG_member, scope: !2357, file: !319, line: 38, baseType: !2360, size: 32)
!2360 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2357, file: !319, line: 38, size: 32, elements: !2361)
!2361 = !{!2362, !2364}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2360, file: !319, line: 39, baseType: !2363, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2360, file: !319, line: 40, baseType: !2363, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, scope: !2357, file: !319, line: 42, baseType: !2366, size: 32, offset: 32)
!2366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2357, file: !319, line: 42, size: 32, elements: !2367)
!2367 = !{!2368, !2369}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2366, file: !319, line: 43, baseType: !2363, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2366, file: !319, line: 44, baseType: !2363, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2353, file: !309, line: 62, baseType: !2371, size: 64)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2372)
!2372 = !{!2373}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2371, file: !335, line: 50, baseType: !2374, size: 64)
!2374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2375, size: 64, elements: !340)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2350, file: !309, line: 68, baseType: !2377, size: 32, offset: 64)
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2379)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2380)
!2380 = !{!2381}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2379, file: !345, line: 232, baseType: !2382, size: 64)
!2382 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2357)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2350, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2350, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2385 = !DIDerivedType(tag: DW_TAG_member, scope: !2350, file: !309, line: 90, baseType: !2386, size: 16, offset: 112)
!2386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2350, file: !309, line: 90, size: 16, elements: !2387)
!2387 = !{!2388, !2393}
!2388 = !DIDerivedType(tag: DW_TAG_member, scope: !2386, file: !309, line: 91, baseType: !2389, size: 16)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2386, file: !309, line: 91, size: 16, elements: !2390)
!2390 = !{!2391, !2392}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2389, file: !309, line: 96, baseType: !359, size: 8)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2389, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2386, file: !309, line: 100, baseType: !197, size: 16)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2350, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2350, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2350, file: !309, line: 131, baseType: !2397, size: 192, offset: 192)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2398)
!2398 = !{!2399, !2400, !2406}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2397, file: !345, line: 245, baseType: !2356, size: 64)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2397, file: !345, line: 246, baseType: !2401, size: 32, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2402)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 32)
!2403 = !DISubroutineType(types: !2404)
!2404 = !{null, !2405}
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2397, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2347, file: !309, line: 250, baseType: !2408, size: 288, offset: 384)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2409)
!2409 = !{!2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2408, file: !379, line: 26, baseType: !152, size: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2408, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2408, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2408, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2408, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2408, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2408, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2408, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2408, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2347, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2347, file: !309, line: 256, baseType: !2378, size: 64, offset: 704)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2347, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2347, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2347, file: !309, line: 300, baseType: !2424, size: 96, offset: 1056)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2425)
!2425 = !{!2426, !2427, !2428}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2424, file: !309, line: 153, baseType: !22, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2424, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2424, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2347, file: !309, line: 325, baseType: !2430, size: 32, offset: 1152)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 32)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2432)
!2432 = !{!2433, !2439, !2440}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2431, file: !406, line: 5074, baseType: !2434, size: 96)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2435)
!2435 = !{!2436, !2437, !2438}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2434, file: !410, line: 57, baseType: !413, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2434, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2434, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2431, file: !406, line: 5075, baseType: !2378, size: 64, offset: 96)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2431, file: !406, line: 5076, baseType: !2441, size: 32, offset: 160)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2442)
!2442 = !{!2443}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2441, file: !420, line: 52, baseType: !22, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2347, file: !309, line: 343, baseType: !2445, size: 64, offset: 1184)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2446)
!2446 = !{!2447, !2448}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2445, file: !379, line: 63, baseType: !152, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2445, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 32)
!2451 = !{!2341, !2452, !2455, !2457}
!2452 = !DIGlobalVariableExpression(var: !2453, expr: !DIExpression())
!2453 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2343, file: !2454, line: 404, type: !107, isLocal: true, isDefinition: true)
!2454 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2455 = !DIGlobalVariableExpression(var: !2456, expr: !DIExpression())
!2456 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2343, file: !2454, line: 405, type: !107, isLocal: true, isDefinition: true)
!2457 = !DIGlobalVariableExpression(var: !2458, expr: !DIExpression())
!2458 = distinct !DIGlobalVariable(name: "pending_current", scope: !2343, file: !2454, line: 425, type: !2346, isLocal: true, isDefinition: true)
!2459 = !DIGlobalVariableExpression(var: !2460, expr: !DIExpression())
!2460 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2461, file: !2491, line: 19, type: !2497, isLocal: true, isDefinition: true)
!2461 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2462, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2463, globals: !2488, splitDebugInlining: false, nameTableKind: None)
!2462 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2463 = !{!564, !106, !895, !152, !566, !107, !2464, !193, !376}
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 32)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2466)
!2466 = !{!2467, !2482, !2487}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2465, file: !345, line: 245, baseType: !2468, size: 64)
!2468 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2469)
!2469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2470)
!2470 = !{!2471, !2477}
!2471 = !DIDerivedType(tag: DW_TAG_member, scope: !2469, file: !319, line: 38, baseType: !2472, size: 32)
!2472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2469, file: !319, line: 38, size: 32, elements: !2473)
!2473 = !{!2474, !2476}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2472, file: !319, line: 39, baseType: !2475, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2472, file: !319, line: 40, baseType: !2475, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, scope: !2469, file: !319, line: 42, baseType: !2478, size: 32, offset: 32)
!2478 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2469, file: !319, line: 42, size: 32, elements: !2479)
!2479 = !{!2480, !2481}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2478, file: !319, line: 43, baseType: !2475, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2478, file: !319, line: 44, baseType: !2475, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2465, file: !345, line: 246, baseType: !2483, size: 32, offset: 64)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2484)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 32)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{null, !2464}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2465, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2488 = !{!2489, !2459, !2492, !2494}
!2489 = !DIGlobalVariableExpression(var: !2490, expr: !DIExpression())
!2490 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2461, file: !2491, line: 15, type: !566, isLocal: true, isDefinition: true)
!2491 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2492 = !DIGlobalVariableExpression(var: !2493, expr: !DIExpression())
!2493 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2461, file: !2491, line: 25, type: !107, isLocal: true, isDefinition: true)
!2494 = !DIGlobalVariableExpression(var: !2495, expr: !DIExpression())
!2495 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2461, file: !2491, line: 17, type: !2496, isLocal: true, isDefinition: true)
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2469)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2498)
!2498 = !{!2499}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2497, file: !420, line: 52, baseType: !22, size: 32)
!2500 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2501, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2501 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2502 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2503, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2503 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2505, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2506, retainedTypes: !2526, splitDebugInlining: false, nameTableKind: None)
!2505 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2506 = !{!2507, !2515}
!2507 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2508, line: 69, baseType: !32, size: 32, elements: !2509)
!2508 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2509 = !{!2510, !2511, !2512, !2513, !2514}
!2510 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2511 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2512 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2513 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2514 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2515 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2508, line: 56, baseType: !32, size: 32, elements: !2516)
!2516 = !{!2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525}
!2517 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2518 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2519 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2520 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2521 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2522 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2523 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2524 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2525 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2526 = !{!107, !2507, !2515, !2527, !360, !264, !2529, !2530, !196, !198, !118, !185, !106, !22, !32, !187, !2532, !2533, !189, !188, !191, !190, !2528, !2534, !2535, !2536, !2537}
!2527 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2508, line: 31, baseType: !2528)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !191)
!2529 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !186, line: 329, baseType: !32)
!2530 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2508, line: 32, baseType: !2531)
!2531 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !567)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !186, line: 145, baseType: !107)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 32)
!2538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2540 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2541, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2541 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2542 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2543, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2544, splitDebugInlining: false, nameTableKind: None)
!2543 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2544 = !{!118, !196, !107, !32}
!2545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2546, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2547, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2546 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2547 = !{!2548, !30}
!2548 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2549, line: 27, baseType: !32, size: 32, elements: !2550)
!2549 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2550 = !{!2551, !2552, !2553, !2554, !2555}
!2551 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2552 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2553 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2554 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2555 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2557, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2558, retainedTypes: !2559, splitDebugInlining: false, nameTableKind: None)
!2557 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2558 = !{!734, !2548, !30}
!2559 = !{!921, !2560, !106, !107, !895, !152, !195, !2577}
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2562)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2563)
!2563 = !{!2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2562, file: !463, line: 413, baseType: !1707, size: 256)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2562, file: !463, line: 414, baseType: !1709, size: 768, offset: 256)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2562, file: !463, line: 415, baseType: !1707, size: 256, offset: 1024)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2562, file: !463, line: 416, baseType: !1709, size: 768, offset: 1280)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2562, file: !463, line: 417, baseType: !1707, size: 256, offset: 2048)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2562, file: !463, line: 418, baseType: !1709, size: 768, offset: 2304)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2562, file: !463, line: 419, baseType: !1707, size: 256, offset: 3072)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2562, file: !463, line: 420, baseType: !1709, size: 768, offset: 3328)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2562, file: !463, line: 421, baseType: !1707, size: 256, offset: 4096)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2562, file: !463, line: 422, baseType: !1720, size: 1792, offset: 4352)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2562, file: !463, line: 423, baseType: !1724, size: 1920, offset: 6144)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2562, file: !463, line: 424, baseType: !1729, size: 20608, offset: 8064)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2562, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2579)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2580)
!2580 = !{!2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2579, file: !463, line: 447, baseType: !467, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2579, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2579, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2579, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2579, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2579, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2579, file: !463, line: 453, baseType: !1744, size: 96, offset: 192)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2579, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2579, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2579, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2579, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2579, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2579, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2579, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2579, file: !463, line: 461, baseType: !1753, size: 64, offset: 512)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2579, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2579, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2579, file: !463, line: 464, baseType: !1757, size: 128, offset: 640)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2579, file: !463, line: 465, baseType: !1759, size: 160, offset: 768)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2579, file: !463, line: 466, baseType: !1761, size: 160, offset: 928)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2579, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2602 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2603, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2603 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2604 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2605, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2606, splitDebugInlining: false, nameTableKind: None)
!2605 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2606 = !{!106, !107, !22, !2607}
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2609)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2610)
!2610 = !{!2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2609, file: !463, line: 447, baseType: !467, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2609, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2609, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2609, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2609, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2609, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2609, file: !463, line: 453, baseType: !1744, size: 96, offset: 192)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2609, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2609, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2609, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2609, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2609, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2609, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2609, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2609, file: !463, line: 461, baseType: !1753, size: 64, offset: 512)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2609, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2609, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2609, file: !463, line: 464, baseType: !1757, size: 128, offset: 640)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2609, file: !463, line: 465, baseType: !1759, size: 160, offset: 768)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2609, file: !463, line: 466, baseType: !1761, size: 160, offset: 928)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2609, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2632 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2633, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2634, splitDebugInlining: false, nameTableKind: None)
!2633 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2634 = !{!2635, !106, !107}
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2637)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2638)
!2638 = !{!2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2637, file: !463, line: 447, baseType: !467, size: 32)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2637, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2637, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2637, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2637, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2637, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2637, file: !463, line: 453, baseType: !1744, size: 96, offset: 192)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2637, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2637, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2637, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2637, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2637, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2637, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2637, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2637, file: !463, line: 461, baseType: !1753, size: 64, offset: 512)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2637, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2637, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2637, file: !463, line: 464, baseType: !1757, size: 128, offset: 640)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2637, file: !463, line: 465, baseType: !1759, size: 160, offset: 768)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2637, file: !463, line: 466, baseType: !1761, size: 160, offset: 928)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2637, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2660 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2661, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2662, splitDebugInlining: false, nameTableKind: None)
!2661 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2662 = !{!2663, !152, !106, !107}
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 32)
!2664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2665, line: 98, size: 256, elements: !2666)
!2665 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2666 = !{!2667, !2672, !2677, !2682, !2687, !2692, !2697, !2702}
!2667 = !DIDerivedType(tag: DW_TAG_member, scope: !2664, file: !2665, line: 99, baseType: !2668, size: 32)
!2668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2664, file: !2665, line: 99, size: 32, elements: !2669)
!2669 = !{!2670, !2671}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2668, file: !2665, line: 99, baseType: !152, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2668, file: !2665, line: 99, baseType: !152, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, scope: !2664, file: !2665, line: 100, baseType: !2673, size: 32, offset: 32)
!2673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2664, file: !2665, line: 100, size: 32, elements: !2674)
!2674 = !{!2675, !2676}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2673, file: !2665, line: 100, baseType: !152, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2673, file: !2665, line: 100, baseType: !152, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, scope: !2664, file: !2665, line: 101, baseType: !2678, size: 32, offset: 64)
!2678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2664, file: !2665, line: 101, size: 32, elements: !2679)
!2679 = !{!2680, !2681}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2678, file: !2665, line: 101, baseType: !152, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2678, file: !2665, line: 101, baseType: !152, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, scope: !2664, file: !2665, line: 102, baseType: !2683, size: 32, offset: 96)
!2683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2664, file: !2665, line: 102, size: 32, elements: !2684)
!2684 = !{!2685, !2686}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2683, file: !2665, line: 102, baseType: !152, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2683, file: !2665, line: 102, baseType: !152, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, scope: !2664, file: !2665, line: 103, baseType: !2688, size: 32, offset: 128)
!2688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2664, file: !2665, line: 103, size: 32, elements: !2689)
!2689 = !{!2690, !2691}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2688, file: !2665, line: 103, baseType: !152, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2688, file: !2665, line: 103, baseType: !152, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, scope: !2664, file: !2665, line: 104, baseType: !2693, size: 32, offset: 160)
!2693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2664, file: !2665, line: 104, size: 32, elements: !2694)
!2694 = !{!2695, !2696}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2693, file: !2665, line: 104, baseType: !152, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2693, file: !2665, line: 104, baseType: !152, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, scope: !2664, file: !2665, line: 105, baseType: !2698, size: 32, offset: 192)
!2698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2664, file: !2665, line: 105, size: 32, elements: !2699)
!2699 = !{!2700, !2701}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2698, file: !2665, line: 105, baseType: !152, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2698, file: !2665, line: 105, baseType: !152, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2664, file: !2665, line: 106, baseType: !152, size: 32, offset: 224)
!2703 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2704, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2547, retainedTypes: !2705, splitDebugInlining: false, nameTableKind: None)
!2704 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2705 = !{!2706, !106, !107, !2731, !2774, !152}
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2708)
!2708 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2709)
!2709 = !{!2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2708, file: !463, line: 447, baseType: !467, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2708, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2708, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2708, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2708, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2708, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2708, file: !463, line: 453, baseType: !1744, size: 96, offset: 192)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2708, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2708, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2708, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2708, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2708, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2708, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2708, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2708, file: !463, line: 461, baseType: !1753, size: 64, offset: 512)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2708, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2708, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2708, file: !463, line: 464, baseType: !1757, size: 128, offset: 640)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2708, file: !463, line: 465, baseType: !1759, size: 160, offset: 768)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2708, file: !463, line: 466, baseType: !1761, size: 160, offset: 928)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2708, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2665, line: 141, baseType: !2733)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2665, line: 97, size: 256, elements: !2734)
!2734 = !{!2735}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2733, file: !2665, line: 107, baseType: !2736, size: 256)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2665, line: 98, size: 256, elements: !2737)
!2737 = !{!2738, !2743, !2748, !2753, !2758, !2763, !2768, !2773}
!2738 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !2665, line: 99, baseType: !2739, size: 32)
!2739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !2665, line: 99, size: 32, elements: !2740)
!2740 = !{!2741, !2742}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2739, file: !2665, line: 99, baseType: !152, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2739, file: !2665, line: 99, baseType: !152, size: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !2665, line: 100, baseType: !2744, size: 32, offset: 32)
!2744 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !2665, line: 100, size: 32, elements: !2745)
!2745 = !{!2746, !2747}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2744, file: !2665, line: 100, baseType: !152, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2744, file: !2665, line: 100, baseType: !152, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !2665, line: 101, baseType: !2749, size: 32, offset: 64)
!2749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !2665, line: 101, size: 32, elements: !2750)
!2750 = !{!2751, !2752}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2749, file: !2665, line: 101, baseType: !152, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2749, file: !2665, line: 101, baseType: !152, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !2665, line: 102, baseType: !2754, size: 32, offset: 96)
!2754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !2665, line: 102, size: 32, elements: !2755)
!2755 = !{!2756, !2757}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2754, file: !2665, line: 102, baseType: !152, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2754, file: !2665, line: 102, baseType: !152, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !2665, line: 103, baseType: !2759, size: 32, offset: 128)
!2759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !2665, line: 103, size: 32, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2759, file: !2665, line: 103, baseType: !152, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2759, file: !2665, line: 103, baseType: !152, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !2665, line: 104, baseType: !2764, size: 32, offset: 160)
!2764 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !2665, line: 104, size: 32, elements: !2765)
!2765 = !{!2766, !2767}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2764, file: !2665, line: 104, baseType: !152, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2764, file: !2665, line: 104, baseType: !152, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !2665, line: 105, baseType: !2769, size: 32, offset: 192)
!2769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !2665, line: 105, size: 32, elements: !2770)
!2770 = !{!2771, !2772}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2769, file: !2665, line: 105, baseType: !152, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2769, file: !2665, line: 105, baseType: !152, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2736, file: !2665, line: 106, baseType: !152, size: 32, offset: 224)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!2775 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2776, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1692, retainedTypes: !2777, splitDebugInlining: false, nameTableKind: None)
!2776 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2777 = !{!921, !895, !195, !152, !2778, !2795}
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2780)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2781)
!2781 = !{!2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2780, file: !463, line: 413, baseType: !1707, size: 256)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2780, file: !463, line: 414, baseType: !1709, size: 768, offset: 256)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2780, file: !463, line: 415, baseType: !1707, size: 256, offset: 1024)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2780, file: !463, line: 416, baseType: !1709, size: 768, offset: 1280)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2780, file: !463, line: 417, baseType: !1707, size: 256, offset: 2048)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2780, file: !463, line: 418, baseType: !1709, size: 768, offset: 2304)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2780, file: !463, line: 419, baseType: !1707, size: 256, offset: 3072)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2780, file: !463, line: 420, baseType: !1709, size: 768, offset: 3328)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2780, file: !463, line: 421, baseType: !1707, size: 256, offset: 4096)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2780, file: !463, line: 422, baseType: !1720, size: 1792, offset: 4352)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2780, file: !463, line: 423, baseType: !1724, size: 1920, offset: 6144)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2780, file: !463, line: 424, baseType: !1729, size: 20608, offset: 8064)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2780, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2797)
!2797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2798)
!2798 = !{!2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2797, file: !463, line: 447, baseType: !467, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2797, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2797, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2797, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2797, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2797, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2797, file: !463, line: 453, baseType: !1744, size: 96, offset: 192)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2797, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2797, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2797, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2797, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2797, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2797, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2797, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2797, file: !463, line: 461, baseType: !1753, size: 64, offset: 512)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2797, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2797, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2797, file: !463, line: 464, baseType: !1757, size: 128, offset: 640)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2797, file: !463, line: 465, baseType: !1759, size: 160, offset: 768)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2797, file: !463, line: 466, baseType: !1761, size: 160, offset: 928)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2797, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2820 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2821, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2822, splitDebugInlining: false, nameTableKind: None)
!2821 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2822 = !{!2823, !106, !107}
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2825)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2826)
!2826 = !{!2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2825, file: !463, line: 447, baseType: !467, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2825, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2825, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2825, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2825, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2825, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2825, file: !463, line: 453, baseType: !1744, size: 96, offset: 192)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2825, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2825, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2825, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2825, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2825, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2825, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2825, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2825, file: !463, line: 461, baseType: !1753, size: 64, offset: 512)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2825, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2825, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2825, file: !463, line: 464, baseType: !1757, size: 128, offset: 640)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2825, file: !463, line: 465, baseType: !1759, size: 160, offset: 768)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2825, file: !463, line: 466, baseType: !1761, size: 160, offset: 928)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2825, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2848 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2849, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2850, splitDebugInlining: false, nameTableKind: None)
!2849 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2850 = !{!120, !193, !185, !1119, !2851, !196, !106}
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 32)
!2852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!2853 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2854, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2855, splitDebugInlining: false, nameTableKind: None)
!2854 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2855 = !{!2856}
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 510, baseType: !2858)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 477, size: 1216, elements: !2859)
!2859 = !{!2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2858, file: !223, line: 479, baseType: !227, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2858, file: !223, line: 480, baseType: !227, size: 32, offset: 32)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2858, file: !223, line: 481, baseType: !227, size: 32, offset: 64)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2858, file: !223, line: 482, baseType: !227, size: 32, offset: 96)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2858, file: !223, line: 483, baseType: !227, size: 32, offset: 128)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2858, file: !223, line: 484, baseType: !227, size: 32, offset: 160)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2858, file: !223, line: 485, baseType: !983, size: 64, offset: 192)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2858, file: !223, line: 486, baseType: !227, size: 32, offset: 256)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2858, file: !223, line: 487, baseType: !227, size: 32, offset: 288)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2858, file: !223, line: 488, baseType: !983, size: 64, offset: 320)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2858, file: !223, line: 489, baseType: !227, size: 32, offset: 384)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2858, file: !223, line: 490, baseType: !227, size: 32, offset: 416)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2858, file: !223, line: 491, baseType: !983, size: 64, offset: 448)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2858, file: !223, line: 492, baseType: !227, size: 32, offset: 512)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2858, file: !223, line: 493, baseType: !227, size: 32, offset: 544)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2858, file: !223, line: 494, baseType: !983, size: 64, offset: 576)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2858, file: !223, line: 495, baseType: !227, size: 32, offset: 640)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2858, file: !223, line: 496, baseType: !227, size: 32, offset: 672)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2858, file: !223, line: 497, baseType: !983, size: 64, offset: 704)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2858, file: !223, line: 498, baseType: !227, size: 32, offset: 768)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2858, file: !223, line: 499, baseType: !227, size: 32, offset: 800)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2858, file: !223, line: 500, baseType: !983, size: 64, offset: 832)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2858, file: !223, line: 501, baseType: !227, size: 32, offset: 896)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2858, file: !223, line: 502, baseType: !227, size: 32, offset: 928)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2858, file: !223, line: 503, baseType: !983, size: 64, offset: 960)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2858, file: !223, line: 504, baseType: !227, size: 32, offset: 1024)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2858, file: !223, line: 505, baseType: !227, size: 32, offset: 1056)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2858, file: !223, line: 506, baseType: !152, size: 32, offset: 1088)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2858, file: !223, line: 507, baseType: !227, size: 32, offset: 1120)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2858, file: !223, line: 508, baseType: !227, size: 32, offset: 1152)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2858, file: !223, line: 509, baseType: !227, size: 32, offset: 1184)
!2891 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2892, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2892 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2893 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2894, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2895, retainedTypes: !2911, splitDebugInlining: false, nameTableKind: None)
!2894 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2895 = !{!2896, !2903, !2907}
!2896 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2897, line: 38, baseType: !32, size: 32, elements: !2898)
!2897 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2898 = !{!2899, !2900, !2901, !2902}
!2899 = !DIEnumerator(name: "HAL_OK", value: 0)
!2900 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2901 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2902 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2903 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !960, line: 184, baseType: !32, size: 32, elements: !2904)
!2904 = !{!2905, !2906}
!2905 = !DIEnumerator(name: "RESET", value: 0)
!2906 = !DIEnumerator(name: "SET", value: 1)
!2907 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !960, line: 190, baseType: !32, size: 32, elements: !2908)
!2908 = !{!2909, !2910}
!2909 = !DIEnumerator(name: "DISABLE", value: 0)
!2910 = !DIEnumerator(name: "ENABLE", value: 1)
!2911 = !{!106, !2912, !195, !152, !1601, !2947, !2953, !2964, !197, !2965, !566}
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 510, baseType: !2914)
!2914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 477, size: 1216, elements: !2915)
!2915 = !{!2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2914, file: !223, line: 479, baseType: !227, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2914, file: !223, line: 480, baseType: !227, size: 32, offset: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2914, file: !223, line: 481, baseType: !227, size: 32, offset: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2914, file: !223, line: 482, baseType: !227, size: 32, offset: 96)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2914, file: !223, line: 483, baseType: !227, size: 32, offset: 128)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2914, file: !223, line: 484, baseType: !227, size: 32, offset: 160)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2914, file: !223, line: 485, baseType: !983, size: 64, offset: 192)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2914, file: !223, line: 486, baseType: !227, size: 32, offset: 256)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2914, file: !223, line: 487, baseType: !227, size: 32, offset: 288)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2914, file: !223, line: 488, baseType: !983, size: 64, offset: 320)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2914, file: !223, line: 489, baseType: !227, size: 32, offset: 384)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2914, file: !223, line: 490, baseType: !227, size: 32, offset: 416)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2914, file: !223, line: 491, baseType: !983, size: 64, offset: 448)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2914, file: !223, line: 492, baseType: !227, size: 32, offset: 512)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2914, file: !223, line: 493, baseType: !227, size: 32, offset: 544)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2914, file: !223, line: 494, baseType: !983, size: 64, offset: 576)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2914, file: !223, line: 495, baseType: !227, size: 32, offset: 640)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2914, file: !223, line: 496, baseType: !227, size: 32, offset: 672)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2914, file: !223, line: 497, baseType: !983, size: 64, offset: 704)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2914, file: !223, line: 498, baseType: !227, size: 32, offset: 768)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2914, file: !223, line: 499, baseType: !227, size: 32, offset: 800)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2914, file: !223, line: 500, baseType: !983, size: 64, offset: 832)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2914, file: !223, line: 501, baseType: !227, size: 32, offset: 896)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2914, file: !223, line: 502, baseType: !227, size: 32, offset: 928)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2914, file: !223, line: 503, baseType: !983, size: 64, offset: 960)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2914, file: !223, line: 504, baseType: !227, size: 32, offset: 1024)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2914, file: !223, line: 505, baseType: !227, size: 32, offset: 1056)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2914, file: !223, line: 506, baseType: !152, size: 32, offset: 1088)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2914, file: !223, line: 507, baseType: !227, size: 32, offset: 1120)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2914, file: !223, line: 508, baseType: !227, size: 32, offset: 1152)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2914, file: !223, line: 509, baseType: !227, size: 32, offset: 1184)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 471, baseType: !2949)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 467, size: 64, elements: !2950)
!2950 = !{!2951, !2952}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2949, file: !223, line: 469, baseType: !227, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2949, file: !223, line: 470, baseType: !227, size: 32, offset: 32)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 32)
!2954 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 379, baseType: !2955)
!2955 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 224, elements: !2956)
!2956 = !{!2957, !2958, !2959, !2960, !2961, !2962, !2963}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2955, file: !223, line: 372, baseType: !227, size: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2955, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2955, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2955, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2955, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2955, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2955, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 32)
!2966 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 396, baseType: !2967)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 385, size: 320, elements: !2968)
!2968 = !{!2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2967, file: !223, line: 387, baseType: !227, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2967, file: !223, line: 388, baseType: !227, size: 32, offset: 32)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2967, file: !223, line: 389, baseType: !227, size: 32, offset: 64)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2967, file: !223, line: 390, baseType: !227, size: 32, offset: 96)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2967, file: !223, line: 391, baseType: !227, size: 32, offset: 128)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2967, file: !223, line: 392, baseType: !227, size: 32, offset: 160)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2967, file: !223, line: 393, baseType: !227, size: 32, offset: 192)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2967, file: !223, line: 394, baseType: !227, size: 32, offset: 224)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2967, file: !223, line: 395, baseType: !1273, size: 64, offset: 256)
!2978 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2979, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2980, retainedTypes: !2981, splitDebugInlining: false, nameTableKind: None)
!2979 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!2980 = !{!959}
!2981 = !{!2982, !152, !2990, !2996, !3007}
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !2984)
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !2985)
!2985 = !{!2986, !2987, !2988, !2989}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2984, file: !463, line: 766, baseType: !227, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2984, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2984, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2984, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 471, baseType: !2992)
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 467, size: 64, elements: !2993)
!2993 = !{!2994, !2995}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2992, file: !223, line: 469, baseType: !227, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2992, file: !223, line: 470, baseType: !227, size: 32, offset: 32)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 32)
!2997 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 379, baseType: !2998)
!2998 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 224, elements: !2999)
!2999 = !{!3000, !3001, !3002, !3003, !3004, !3005, !3006}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2998, file: !223, line: 372, baseType: !227, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2998, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2998, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2998, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2998, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2998, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2998, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!3007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 32)
!3008 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 510, baseType: !3009)
!3009 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 477, size: 1216, elements: !3010)
!3010 = !{!3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041}
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3009, file: !223, line: 479, baseType: !227, size: 32)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3009, file: !223, line: 480, baseType: !227, size: 32, offset: 32)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3009, file: !223, line: 481, baseType: !227, size: 32, offset: 64)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3009, file: !223, line: 482, baseType: !227, size: 32, offset: 96)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3009, file: !223, line: 483, baseType: !227, size: 32, offset: 128)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3009, file: !223, line: 484, baseType: !227, size: 32, offset: 160)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3009, file: !223, line: 485, baseType: !983, size: 64, offset: 192)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3009, file: !223, line: 486, baseType: !227, size: 32, offset: 256)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3009, file: !223, line: 487, baseType: !227, size: 32, offset: 288)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3009, file: !223, line: 488, baseType: !983, size: 64, offset: 320)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3009, file: !223, line: 489, baseType: !227, size: 32, offset: 384)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3009, file: !223, line: 490, baseType: !227, size: 32, offset: 416)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3009, file: !223, line: 491, baseType: !983, size: 64, offset: 448)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3009, file: !223, line: 492, baseType: !227, size: 32, offset: 512)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3009, file: !223, line: 493, baseType: !227, size: 32, offset: 544)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3009, file: !223, line: 494, baseType: !983, size: 64, offset: 576)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3009, file: !223, line: 495, baseType: !227, size: 32, offset: 640)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3009, file: !223, line: 496, baseType: !227, size: 32, offset: 672)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3009, file: !223, line: 497, baseType: !983, size: 64, offset: 704)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3009, file: !223, line: 498, baseType: !227, size: 32, offset: 768)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3009, file: !223, line: 499, baseType: !227, size: 32, offset: 800)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3009, file: !223, line: 500, baseType: !983, size: 64, offset: 832)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3009, file: !223, line: 501, baseType: !227, size: 32, offset: 896)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3009, file: !223, line: 502, baseType: !227, size: 32, offset: 928)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3009, file: !223, line: 503, baseType: !983, size: 64, offset: 960)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3009, file: !223, line: 504, baseType: !227, size: 32, offset: 1024)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3009, file: !223, line: 505, baseType: !227, size: 32, offset: 1056)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3009, file: !223, line: 506, baseType: !152, size: 32, offset: 1088)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3009, file: !223, line: 507, baseType: !227, size: 32, offset: 1120)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3009, file: !223, line: 508, baseType: !227, size: 32, offset: 1152)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3009, file: !223, line: 509, baseType: !227, size: 32, offset: 1184)
!3042 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3043, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3044, splitDebugInlining: false, nameTableKind: None)
!3043 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!3044 = !{!106, !185}
!3045 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3046, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3047, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3046 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!3047 = !{!3048, !3055, !2548, !30}
!3048 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3049, line: 14, baseType: !32, size: 32, elements: !3050)
!3049 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3050 = !{!3051, !3052, !3053, !3054}
!3051 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3052 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3053 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3054 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3055 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3049, line: 42, baseType: !32, size: 32, elements: !3056)
!3056 = !{!3057, !3058, !3059, !3060, !3061, !3062}
!3057 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3058 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3059 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3060 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3061 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3062 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3063 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3064, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3064 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!3065 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3066, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3067, splitDebugInlining: false, nameTableKind: None)
!3066 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!3067 = !{!22, !106, !107}
!3068 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3069, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3069 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!3070 = !{!"Ubuntu clang version 14.0.6"}
!3071 = !{i32 7, !"Dwarf Version", i32 4}
!3072 = !{i32 2, !"Debug Info Version", i32 3}
!3073 = !{i32 1, !"wchar_size", i32 4}
!3074 = !{i32 1, !"min_enum_size", i32 4}
!3075 = !{i32 1, !"branch-target-enforcement", i32 0}
!3076 = !{i32 1, !"sign-return-address", i32 0}
!3077 = !{i32 1, !"sign-return-address-all", i32 0}
!3078 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3079 = !{i32 7, !"frame-pointer", i32 2}
!3080 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3081, file: !3081, line: 26, type: !3082, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2500, retainedNodes: !2156)
!3081 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3082 = !DISubroutineType(types: !3083)
!3083 = !{null}
!3084 = !DILocation(line: 28, column: 1, scope: !3080)
!3085 = !{i64 2155037845, i64 2155037865, i64 2155037928}
!3086 = !DILocation(line: 29, column: 1, scope: !3080)
!3087 = !{i64 2155038260, i64 2155038280, i64 2155038343}
!3088 = !DILocation(line: 30, column: 1, scope: !3080)
!3089 = !{i64 2155038679, i64 2155038699, i64 2155038762}
!3090 = !DILocation(line: 31, column: 1, scope: !3080)
!3091 = !{i64 2155039098, i64 2155039118, i64 2155039181}
!3092 = !DILocation(line: 33, column: 1, scope: !3080)
!3093 = !{i64 2155039390, i64 2155039410, i64 2155039473}
!3094 = !DILocation(line: 35, column: 1, scope: !3080)
!3095 = !{i64 2155039715, i64 2155039735, i64 2155039798}
!3096 = !DILocation(line: 50, column: 1, scope: !3080)
!3097 = !{i64 2155040142, i64 2155040162, i64 2155040225}
!3098 = !DILocation(line: 54, column: 1, scope: !3080)
!3099 = !{i64 2155040581, i64 2155040601, i64 2155040664}
!3100 = !DILocation(line: 61, column: 1, scope: !3080)
!3101 = !{i64 2155040898, i64 2155040918, i64 2155040981}
!3102 = !DILocation(line: 63, column: 1, scope: !3080)
!3103 = !{i64 2155041278, i64 2155041298, i64 2155041361}
!3104 = !DILocation(line: 64, column: 1, scope: !3080)
!3105 = !{i64 2155041800, i64 2155041820, i64 2155041883}
!3106 = !DILocation(line: 65, column: 1, scope: !3080)
!3107 = !{i64 2155046359, i64 2155046379, i64 2155046442}
!3108 = !DILocation(line: 66, column: 1, scope: !3080)
!3109 = !{i64 2155046841, i64 2155046861, i64 2155046924}
!3110 = !DILocation(line: 67, column: 1, scope: !3080)
!3111 = !{i64 2155047348, i64 2155047368, i64 2155047431}
!3112 = !DILocation(line: 68, column: 1, scope: !3080)
!3113 = !{i64 2155047836, i64 2155047856, i64 2155047919}
!3114 = !DILocation(line: 70, column: 1, scope: !3080)
!3115 = !{i64 2155048304, i64 2155048324, i64 2155048387}
!3116 = !DILocation(line: 71, column: 1, scope: !3080)
!3117 = !{i64 2155048746, i64 2155048766, i64 2155048829}
!3118 = !DILocation(line: 72, column: 1, scope: !3080)
!3119 = !{i64 2155049204, i64 2155049224, i64 2155049287}
!3120 = !DILocation(line: 79, column: 1, scope: !3080)
!3121 = !{i64 2155049658, i64 2155049678, i64 2155049741}
!3122 = !DILocation(line: 80, column: 1, scope: !3080)
!3123 = !{i64 2155050169, i64 2155050189, i64 2155050252}
!3124 = !DILocation(line: 82, column: 1, scope: !3080)
!3125 = !{i64 2155050660, i64 2155050680, i64 2155050743}
!3126 = !DILocation(line: 97, column: 1, scope: !3080)
!3127 = !{i64 2155050997, i64 2155051017, i64 2155051080}
!3128 = !DILocation(line: 99, column: 1, scope: !3080)
!3129 = !{i64 2155051215, i64 2155051235, i64 2155051298}
!3130 = !DILocation(line: 102, column: 1, scope: !3080)
!3131 = !{i64 2155051472, i64 2155051492, i64 2155051555}
!3132 = !DILocation(line: 105, column: 1, scope: !3080)
!3133 = !{i64 2155051712, i64 2155051732, i64 2155051795}
!3134 = !DILocation(line: 115, column: 1, scope: !3080)
!3135 = !{i64 2155052051, i64 2155052071, i64 2155052134}
!3136 = !DILocation(line: 118, column: 1, scope: !3080)
!3137 = !{i64 2155052395, i64 2155052415, i64 2155052478}
!3138 = !DILocation(line: 32, column: 1, scope: !3139)
!3139 = !DILexicalBlockFile(scope: !3080, file: !3140, discriminator: 0)
!3140 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3141 = !{i64 2155052751, i64 2155052771, i64 2155052834}
!3142 = !DILocation(line: 33, column: 1, scope: !3139)
!3143 = !{i64 2155053263, i64 2155053283, i64 2155053346}
!3144 = !DILocation(line: 53, column: 1, scope: !3139)
!3145 = !{i64 2155053771, i64 2155053791, i64 2155053854}
!3146 = !DILocation(line: 54, column: 1, scope: !3139)
!3147 = !{i64 2155054189, i64 2155054209, i64 2155054272}
!3148 = !DILocation(line: 55, column: 1, scope: !3139)
!3149 = !{i64 2155054607, i64 2155054627, i64 2155054690}
!3150 = !DILocation(line: 56, column: 1, scope: !3139)
!3151 = !{i64 2155055025, i64 2155055045, i64 2155055108}
!3152 = !DILocation(line: 57, column: 1, scope: !3139)
!3153 = !{i64 2155055443, i64 2155055463, i64 2155055526}
!3154 = !DILocation(line: 58, column: 1, scope: !3139)
!3155 = !{i64 2155059922, i64 2155059942, i64 2155060005}
!3156 = !DILocation(line: 59, column: 1, scope: !3139)
!3157 = !{i64 2155060340, i64 2155060360, i64 2155060423}
!3158 = !DILocation(line: 60, column: 1, scope: !3139)
!3159 = !{i64 2155060764, i64 2155060784, i64 2155060847}
!3160 = !DILocation(line: 61, column: 1, scope: !3139)
!3161 = !{i64 2155061081, i64 2155061101, i64 2155061164}
!3162 = !DILocation(line: 70, column: 1, scope: !3139)
!3163 = !{i64 2155061310, i64 2155061330, i64 2155061393}
!3164 = !DILocation(line: 72, column: 1, scope: !3139)
!3165 = !{i64 2155061642, i64 2155061662, i64 2155061725}
!3166 = !DILocation(line: 73, column: 1, scope: !3139)
!3167 = !{i64 2155062092, i64 2155062112, i64 2155062175}
!3168 = !DILocation(line: 74, column: 1, scope: !3139)
!3169 = !{i64 2155062542, i64 2155062562, i64 2155062625}
!3170 = !DILocation(line: 75, column: 1, scope: !3139)
!3171 = !{i64 2155062992, i64 2155063012, i64 2155063075}
!3172 = !DILocation(line: 76, column: 1, scope: !3139)
!3173 = !{i64 2155063442, i64 2155063462, i64 2155063525}
!3174 = !DILocation(line: 77, column: 1, scope: !3139)
!3175 = !{i64 2155063892, i64 2155063912, i64 2155063975}
!3176 = !DILocation(line: 78, column: 1, scope: !3139)
!3177 = !{i64 2155064342, i64 2155064362, i64 2155064425}
!3178 = !DILocation(line: 79, column: 1, scope: !3139)
!3179 = !{i64 2155064792, i64 2155064812, i64 2155064875}
!3180 = !DILocation(line: 80, column: 1, scope: !3139)
!3181 = !{i64 2155065245, i64 2155065265, i64 2155065328}
!3182 = !DILocation(line: 84, column: 1, scope: !3139)
!3183 = !{i64 2155065577, i64 2155065597, i64 2155065660}
!3184 = !DILocation(line: 91, column: 1, scope: !3139)
!3185 = !{i64 2155065974, i64 2155065994, i64 2155066057}
!3186 = !DILocation(line: 93, column: 1, scope: !3139)
!3187 = !{i64 2155066341, i64 2155066361, i64 2155066424}
!3188 = !DILocation(line: 106, column: 1, scope: !3139)
!3189 = !{i64 2155066611, i64 2155066631, i64 2155066694}
!3190 = !DILocation(line: 11, column: 1, scope: !3191)
!3191 = !DILexicalBlockFile(scope: !3080, file: !3192, discriminator: 0)
!3192 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3193 = distinct !DISubprogram(name: "_framework_tests_test_assert_wrapper", scope: !111, file: !111, line: 18, type: !131, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3194)
!3194 = !{!3195}
!3195 = !DILocalVariable(name: "data", arg: 1, scope: !3193, file: !111, line: 18, type: !106)
!3196 = !DILocation(line: 0, scope: !3193)
!3197 = !DILocation(line: 18, column: 1, scope: !3193)
!3198 = distinct !DISubprogram(name: "cbvprintf_package", scope: !200, file: !200, line: 233, type: !3199, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3208)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{!107, !106, !185, !152, !118, !3201}
!3201 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3202, line: 99, baseType: !3203)
!3202 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3203 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3202, line: 40, baseType: !3204)
!3204 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !200, baseType: !3205)
!3205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3206)
!3206 = !{!3207}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3205, file: !200, line: 18, baseType: !106, size: 32)
!3208 = !{!3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3244, !3253, !3256, !3257, !3260, !3263, !3266, !3269, !3275}
!3209 = !DILocalVariable(name: "packaged", arg: 1, scope: !3198, file: !200, line: 233, type: !106)
!3210 = !DILocalVariable(name: "len", arg: 2, scope: !3198, file: !200, line: 233, type: !185)
!3211 = !DILocalVariable(name: "flags", arg: 3, scope: !3198, file: !200, line: 233, type: !152)
!3212 = !DILocalVariable(name: "fmt", arg: 4, scope: !3198, file: !200, line: 234, type: !118)
!3213 = !DILocalVariable(name: "ap", arg: 5, scope: !3198, file: !200, line: 234, type: !3201)
!3214 = !DILocalVariable(name: "buf0", scope: !3198, file: !200, line: 247, type: !194)
!3215 = !DILocalVariable(name: "buf", scope: !3198, file: !200, line: 248, type: !194)
!3216 = !DILocalVariable(name: "size", scope: !3198, file: !200, line: 249, type: !32)
!3217 = !DILocalVariable(name: "align", scope: !3198, file: !200, line: 250, type: !32)
!3218 = !DILocalVariable(name: "str_ptr_pos", scope: !3198, file: !200, line: 251, type: !3219)
!3219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !1939)
!3220 = !DILocalVariable(name: "str_ptr_arg", scope: !3198, file: !200, line: 252, type: !3219)
!3221 = !DILocalVariable(name: "s_idx", scope: !3198, file: !200, line: 253, type: !32)
!3222 = !DILocalVariable(name: "s_rw_cnt", scope: !3198, file: !200, line: 254, type: !32)
!3223 = !DILocalVariable(name: "s_ro_cnt", scope: !3198, file: !200, line: 255, type: !32)
!3224 = !DILocalVariable(name: "arg_idx", scope: !3198, file: !200, line: 256, type: !107)
!3225 = !DILocalVariable(name: "i", scope: !3198, file: !200, line: 257, type: !32)
!3226 = !DILocalVariable(name: "s", scope: !3198, file: !200, line: 258, type: !118)
!3227 = !DILocalVariable(name: "parsing", scope: !3198, file: !200, line: 259, type: !145)
!3228 = !DILocalVariable(name: "rws_pos_en", scope: !3198, file: !200, line: 263, type: !145)
!3229 = !DILocalVariable(name: "fros_cnt", scope: !3198, file: !200, line: 268, type: !107)
!3230 = !DILocalVariable(name: "is_str_arg", scope: !3198, file: !200, line: 269, type: !145)
!3231 = !DILocalVariable(name: "pkg_hdr", scope: !3198, file: !200, line: 270, type: !3232)
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 32)
!3233 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3234, line: 78, size: 32, elements: !3235)
!3234 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3235 = !{!3236, !3243}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3233, file: !3234, line: 80, baseType: !3237, size: 32)
!3237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3234, line: 45, size: 32, elements: !3238)
!3238 = !{!3239, !3240, !3241, !3242}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3237, file: !3234, line: 47, baseType: !195, size: 8)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3237, file: !3234, line: 50, baseType: !195, size: 8, offset: 8)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3237, file: !3234, line: 53, baseType: !195, size: 8, offset: 16)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3237, file: !3234, line: 56, baseType: !195, size: 8, offset: 24)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3233, file: !3234, line: 82, baseType: !106, size: 32)
!3244 = !DILocalVariable(name: "v", scope: !3245, file: !200, line: 567, type: !3249)
!3245 = distinct !DILexicalBlock(scope: !3246, file: !200, line: 562, column: 14)
!3246 = distinct !DILexicalBlock(scope: !3247, file: !200, line: 481, column: 18)
!3247 = distinct !DILexicalBlock(scope: !3248, file: !200, line: 466, column: 3)
!3248 = distinct !DILexicalBlock(scope: !3198, file: !200, line: 343, column: 15)
!3249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3198, file: !200, line: 567, size: 64, elements: !3250)
!3250 = !{!3251, !3252}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3249, file: !200, line: 567, baseType: !183, size: 64)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3249, file: !200, line: 567, baseType: !181, size: 64)
!3253 = !DILocalVariable(name: "is_ro", scope: !3254, file: !200, line: 620, type: !145)
!3254 = distinct !DILexicalBlock(scope: !3255, file: !200, line: 613, column: 19)
!3255 = distinct !DILexicalBlock(scope: !3248, file: !200, line: 613, column: 7)
!3256 = !DILocalVariable(name: "do_ro", scope: !3254, file: !200, line: 621, type: !145)
!3257 = !DILocalVariable(name: "s_ptr_idx", scope: !3258, file: !200, line: 626, type: !152)
!3258 = distinct !DILexicalBlock(scope: !3259, file: !200, line: 625, column: 11)
!3259 = distinct !DILexicalBlock(scope: !3254, file: !200, line: 623, column: 8)
!3260 = !DILocalVariable(name: "v", scope: !3261, file: !200, line: 684, type: !107)
!3261 = distinct !DILexicalBlock(scope: !3262, file: !200, line: 683, column: 35)
!3262 = distinct !DILexicalBlock(scope: !3255, file: !200, line: 683, column: 14)
!3263 = !DILocalVariable(name: "v", scope: !3264, file: !200, line: 691, type: !189)
!3264 = distinct !DILexicalBlock(scope: !3265, file: !200, line: 690, column: 36)
!3265 = distinct !DILexicalBlock(scope: !3262, file: !200, line: 690, column: 14)
!3266 = !DILocalVariable(name: "v", scope: !3267, file: !200, line: 698, type: !191)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !200, line: 697, column: 41)
!3268 = distinct !DILexicalBlock(scope: !3265, file: !200, line: 697, column: 14)
!3269 = !DILocalVariable(name: "pos", scope: !3270, file: !200, line: 762, type: !195)
!3270 = distinct !DILexicalBlock(scope: !3271, file: !200, line: 757, column: 31)
!3271 = distinct !DILexicalBlock(scope: !3272, file: !200, line: 757, column: 3)
!3272 = distinct !DILexicalBlock(scope: !3273, file: !200, line: 757, column: 3)
!3273 = distinct !DILexicalBlock(scope: !3274, file: !200, line: 756, column: 16)
!3274 = distinct !DILexicalBlock(scope: !3198, file: !200, line: 756, column: 6)
!3275 = !DILabel(scope: !3254, name: "process_string", file: !200, line: 615)
!3276 = !DILocation(line: 0, scope: !3198)
!3277 = !DILocation(line: 251, column: 2, scope: !3198)
!3278 = !DILocation(line: 251, column: 10, scope: !3198)
!3279 = !DILocation(line: 252, column: 2, scope: !3198)
!3280 = !DILocation(line: 252, column: 10, scope: !3198)
!3281 = !DILocation(line: 263, column: 29, scope: !3198)
!3282 = !DILocation(line: 263, column: 21, scope: !3198)
!3283 = !DILocation(line: 268, column: 21, scope: !3198)
!3284 = !DILocation(line: 268, column: 19, scope: !3198)
!3285 = !DILocation(line: 273, column: 6, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3198, file: !200, line: 273, column: 6)
!3287 = !DILocation(line: 273, column: 26, scope: !3286)
!3288 = !DILocation(line: 273, column: 6, scope: !3198)
!3289 = !DILocation(line: 297, column: 6, scope: !3198)
!3290 = !DILocation(line: 305, column: 11, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3198, file: !200, line: 305, column: 6)
!3292 = !DILocation(line: 305, column: 6, scope: !3198)
!3293 = !DILocation(line: 327, column: 19, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3198, file: !200, line: 327, column: 6)
!3295 = !DILocation(line: 327, column: 22, scope: !3294)
!3296 = !DILocation(line: 327, column: 33, scope: !3294)
!3297 = !DILocation(line: 327, column: 50, scope: !3294)
!3298 = !DILocation(line: 327, column: 6, scope: !3198)
!3299 = !DILocation(line: 338, column: 9, scope: !3198)
!3300 = !DILocation(line: 341, column: 2, scope: !3198)
!3301 = !DILocation(line: 472, column: 8, scope: !3247)
!3302 = !DILocation(line: 473, column: 14, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3304, file: !200, line: 473, column: 9)
!3304 = distinct !DILexicalBlock(scope: !3305, file: !200, line: 472, column: 18)
!3305 = distinct !DILexicalBlock(scope: !3247, file: !200, line: 472, column: 8)
!3306 = !DILocation(line: 473, column: 9, scope: !3304)
!3307 = !DILocation(line: 479, column: 5, scope: !3304)
!3308 = !DILocation(line: 468, column: 9, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3247, file: !200, line: 468, column: 8)
!3310 = !DILocation(line: 468, column: 8, scope: !3309)
!3311 = !DILocation(line: 468, column: 15, scope: !3309)
!3312 = !DILocation(line: 468, column: 8, scope: !3247)
!3313 = distinct !{!3313, !3314, !3315}
!3314 = !DILocation(line: 343, column: 2, scope: !3198)
!3315 = !DILocation(line: 712, column: 2, scope: !3198)
!3316 = !DILocation(line: 481, column: 4, scope: !3247)
!3317 = !DILocation(line: 484, column: 12, scope: !3246)
!3318 = !DILocation(line: 485, column: 5, scope: !3246)
!3319 = !DILocation(line: 505, column: 5, scope: !3246)
!3320 = !DILocation(line: 518, column: 5, scope: !3246)
!3321 = !DILocation(line: 523, column: 5, scope: !3246)
!3322 = !DILocation(line: 532, column: 9, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3246, file: !200, line: 532, column: 9)
!3324 = !DILocation(line: 532, column: 17, scope: !3323)
!3325 = !DILocation(line: 532, column: 9, scope: !3246)
!3326 = !DILocation(line: 533, column: 10, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3328, file: !200, line: 533, column: 10)
!3328 = distinct !DILexicalBlock(scope: !3323, file: !200, line: 532, column: 25)
!3329 = !DILocation(line: 533, column: 18, scope: !3327)
!3330 = !DILocation(line: 0, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3245, file: !200, line: 569, column: 9)
!3332 = !DILocation(line: 0, scope: !3245)
!3333 = !DILocation(line: 579, column: 20, scope: !3245)
!3334 = !DILocation(line: 579, column: 11, scope: !3245)
!3335 = !DILocation(line: 580, column: 9, scope: !3245)
!3336 = !DILocation(line: 582, column: 21, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3338, file: !200, line: 582, column: 10)
!3338 = distinct !DILexicalBlock(scope: !3339, file: !200, line: 580, column: 23)
!3339 = distinct !DILexicalBlock(scope: !3245, file: !200, line: 580, column: 9)
!3340 = !DILocation(line: 582, column: 28, scope: !3337)
!3341 = !DILocation(line: 582, column: 10, scope: !3338)
!3342 = !DILocation(line: 0, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3344, file: !200, line: 587, column: 17)
!3344 = distinct !DILexicalBlock(scope: !3338, file: !200, line: 585, column: 10)
!3345 = !DILocation(line: 593, column: 9, scope: !3245)
!3346 = !DILocation(line: 600, column: 5, scope: !3246)
!3347 = !DILocation(line: 605, column: 18, scope: !3248)
!3348 = !DILocation(line: 605, column: 9, scope: !3248)
!3349 = !DILocation(line: 608, column: 20, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3248, file: !200, line: 608, column: 7)
!3351 = !DILocation(line: 608, column: 23, scope: !3350)
!3352 = !DILocation(line: 608, column: 34, scope: !3350)
!3353 = !DILocation(line: 608, column: 41, scope: !3350)
!3354 = !DILocation(line: 608, column: 7, scope: !3248)
!3355 = !DILocation(line: 613, column: 7, scope: !3248)
!3356 = !DILocation(line: 614, column: 8, scope: !3254)
!3357 = !DILocation(line: 614, column: 4, scope: !3254)
!3358 = !DILocation(line: 256, column: 6, scope: !3198)
!3359 = !DILocation(line: 254, column: 15, scope: !3198)
!3360 = !DILocation(line: 320, column: 7, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3291, file: !200, line: 305, column: 20)
!3362 = !DILocation(line: 615, column: 1, scope: !3254)
!3363 = !DILocation(line: 616, column: 8, scope: !3254)
!3364 = !DILocation(line: 617, column: 5, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3366, file: !200, line: 616, column: 22)
!3366 = distinct !DILexicalBlock(scope: !3254, file: !200, line: 616, column: 8)
!3367 = !DILocation(line: 617, column: 25, scope: !3365)
!3368 = !DILocation(line: 618, column: 4, scope: !3365)
!3369 = !DILocation(line: 620, column: 26, scope: !3254)
!3370 = !DILocation(line: 620, column: 29, scope: !3254)
!3371 = !DILocation(line: 620, column: 17, scope: !3254)
!3372 = !DILocation(line: 620, column: 43, scope: !3254)
!3373 = !DILocation(line: 0, scope: !3254)
!3374 = !DILocation(line: 623, column: 14, scope: !3259)
!3375 = !DILocation(line: 626, column: 26, scope: !3258)
!3376 = !DILocation(line: 626, column: 37, scope: !3258)
!3377 = !DILocation(line: 0, scope: !3258)
!3378 = !DILocation(line: 634, column: 15, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3258, file: !200, line: 634, column: 9)
!3380 = !DILocation(line: 635, column: 6, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3382, file: !200, line: 635, column: 6)
!3382 = distinct !DILexicalBlock(scope: !3383, file: !200, line: 635, column: 6)
!3383 = distinct !DILexicalBlock(scope: !3384, file: !200, line: 635, column: 6)
!3384 = distinct !DILexicalBlock(scope: !3379, file: !200, line: 634, column: 44)
!3385 = !DILocation(line: 639, column: 15, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3258, file: !200, line: 639, column: 9)
!3387 = !DILocation(line: 639, column: 9, scope: !3258)
!3388 = !DILocation(line: 640, column: 6, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3390, file: !200, line: 640, column: 6)
!3390 = distinct !DILexicalBlock(scope: !3391, file: !200, line: 640, column: 6)
!3391 = distinct !DILexicalBlock(scope: !3392, file: !200, line: 640, column: 6)
!3392 = distinct !DILexicalBlock(scope: !3386, file: !200, line: 639, column: 43)
!3393 = !DILocation(line: 644, column: 9, scope: !3258)
!3394 = !DILocation(line: 649, column: 27, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3396, file: !200, line: 644, column: 23)
!3396 = distinct !DILexicalBlock(scope: !3258, file: !200, line: 644, column: 9)
!3397 = !DILocation(line: 649, column: 6, scope: !3395)
!3398 = !DILocation(line: 649, column: 25, scope: !3395)
!3399 = !DILocation(line: 650, column: 27, scope: !3395)
!3400 = !DILocation(line: 650, column: 6, scope: !3395)
!3401 = !DILocation(line: 650, column: 25, scope: !3395)
!3402 = !DILocation(line: 651, column: 10, scope: !3395)
!3403 = !DILocation(line: 653, column: 26, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3405, file: !200, line: 651, column: 17)
!3405 = distinct !DILexicalBlock(scope: !3395, file: !200, line: 651, column: 10)
!3406 = !DILocation(line: 654, column: 15, scope: !3404)
!3407 = !DILocation(line: 655, column: 6, scope: !3404)
!3408 = !DILocation(line: 656, column: 15, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3405, file: !200, line: 655, column: 13)
!3410 = !DILocation(line: 658, column: 16, scope: !3396)
!3411 = !DILocation(line: 663, column: 10, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !200, line: 658, column: 23)
!3413 = distinct !DILexicalBlock(scope: !3396, file: !200, line: 658, column: 16)
!3414 = !DILocation(line: 664, column: 5, scope: !3412)
!3415 = !DILocation(line: 664, column: 16, scope: !3413)
!3416 = !DILocation(line: 669, column: 10, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3418, file: !200, line: 664, column: 28)
!3418 = distinct !DILexicalBlock(scope: !3413, file: !200, line: 664, column: 16)
!3419 = !DILocation(line: 670, column: 5, scope: !3417)
!3420 = !DILocation(line: 675, column: 13, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3418, file: !200, line: 670, column: 12)
!3422 = !DILocation(line: 675, column: 27, scope: !3421)
!3423 = !DILocation(line: 675, column: 10, scope: !3421)
!3424 = !DILocation(line: 678, column: 10, scope: !3258)
!3425 = !DILocation(line: 680, column: 8, scope: !3254)
!3426 = !DILocation(line: 683, column: 14, scope: !3255)
!3427 = !DILocation(line: 684, column: 12, scope: !3261)
!3428 = !DILocation(line: 0, scope: !3261)
!3429 = !DILocation(line: 686, column: 8, scope: !3261)
!3430 = !DILocation(line: 687, column: 5, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3432, file: !200, line: 686, column: 22)
!3432 = distinct !DILexicalBlock(scope: !3261, file: !200, line: 686, column: 8)
!3433 = !DILocation(line: 687, column: 17, scope: !3431)
!3434 = !DILocation(line: 688, column: 4, scope: !3431)
!3435 = !DILocation(line: 698, column: 18, scope: !3267)
!3436 = !DILocation(line: 0, scope: !3267)
!3437 = !DILocation(line: 700, column: 8, scope: !3267)
!3438 = !DILocation(line: 704, column: 6, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3440, file: !200, line: 703, column: 12)
!3440 = distinct !DILexicalBlock(scope: !3441, file: !200, line: 701, column: 9)
!3441 = distinct !DILexicalBlock(scope: !3442, file: !200, line: 700, column: 22)
!3442 = distinct !DILexicalBlock(scope: !3267, file: !200, line: 700, column: 8)
!3443 = !DILocation(line: 704, column: 24, scope: !3439)
!3444 = !DILocation(line: 706, column: 4, scope: !3441)
!3445 = !DILocation(line: 709, column: 4, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !200, line: 709, column: 4)
!3447 = distinct !DILexicalBlock(scope: !3448, file: !200, line: 709, column: 4)
!3448 = distinct !DILexicalBlock(scope: !3449, file: !200, line: 709, column: 4)
!3449 = distinct !DILexicalBlock(scope: !3268, file: !200, line: 708, column: 10)
!3450 = !DILocation(line: 0, scope: !3262)
!3451 = !DILocation(line: 0, scope: !3248)
!3452 = !DILocation(line: 720, column: 6, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3198, file: !200, line: 720, column: 6)
!3454 = !DILocation(line: 720, column: 17, scope: !3453)
!3455 = !DILocation(line: 720, column: 31, scope: !3453)
!3456 = !DILocation(line: 720, column: 6, scope: !3198)
!3457 = !DILocation(line: 721, column: 3, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3459, file: !200, line: 721, column: 3)
!3459 = distinct !DILexicalBlock(scope: !3460, file: !200, line: 721, column: 3)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !200, line: 721, column: 3)
!3461 = distinct !DILexicalBlock(scope: !3453, file: !200, line: 720, column: 38)
!3462 = !DILocation(line: 729, column: 6, scope: !3198)
!3463 = !DILocation(line: 730, column: 21, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3465, file: !200, line: 729, column: 20)
!3465 = distinct !DILexicalBlock(scope: !3198, file: !200, line: 729, column: 6)
!3466 = !DILocation(line: 730, column: 27, scope: !3464)
!3467 = !DILocation(line: 730, column: 3, scope: !3464)
!3468 = !DILocation(line: 737, column: 22, scope: !3198)
!3469 = !DILocation(line: 737, column: 20, scope: !3198)
!3470 = !DILocation(line: 0, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3198, file: !200, line: 739, column: 6)
!3472 = !DILocation(line: 745, column: 17, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3471, file: !200, line: 743, column: 9)
!3474 = !DILocation(line: 745, column: 25, scope: !3473)
!3475 = !DILocation(line: 746, column: 17, scope: !3473)
!3476 = !DILocation(line: 746, column: 28, scope: !3473)
!3477 = !DILocation(line: 749, column: 29, scope: !3198)
!3478 = !DILocation(line: 749, column: 16, scope: !3198)
!3479 = !DILocation(line: 749, column: 27, scope: !3198)
!3480 = !DILocation(line: 756, column: 6, scope: !3274)
!3481 = !DILocation(line: 756, column: 6, scope: !3198)
!3482 = !DILocation(line: 757, column: 3, scope: !3272)
!3483 = !DILocation(line: 758, column: 10, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3270, file: !200, line: 758, column: 8)
!3485 = !DILocation(line: 758, column: 25, scope: !3484)
!3486 = !DILocation(line: 758, column: 8, scope: !3270)
!3487 = !DILocation(line: 0, scope: !3270)
!3488 = !DILocation(line: 765, column: 8, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3270, file: !200, line: 765, column: 8)
!3490 = !DILocation(line: 765, column: 19, scope: !3489)
!3491 = !DILocation(line: 765, column: 23, scope: !3489)
!3492 = !DILocation(line: 765, column: 8, scope: !3270)
!3493 = !DILocation(line: 762, column: 33, scope: !3270)
!3494 = !DILocation(line: 769, column: 8, scope: !3270)
!3495 = !DILocation(line: 769, column: 11, scope: !3270)
!3496 = !DILocation(line: 757, column: 27, scope: !3271)
!3497 = !DILocation(line: 757, column: 17, scope: !3271)
!3498 = distinct !{!3498, !3482, !3499}
!3499 = !DILocation(line: 770, column: 3, scope: !3272)
!3500 = !DILocation(line: 774, column: 16, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3502, file: !200, line: 774, column: 2)
!3502 = distinct !DILexicalBlock(scope: !3198, file: !200, line: 774, column: 2)
!3503 = !DILocation(line: 774, column: 2, scope: !3502)
!3504 = !DILocation(line: 776, column: 16, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3506, file: !200, line: 776, column: 7)
!3506 = distinct !DILexicalBlock(scope: !3501, file: !200, line: 774, column: 30)
!3507 = !DILocation(line: 776, column: 19, scope: !3505)
!3508 = !DILocation(line: 776, column: 34, scope: !3505)
!3509 = !DILocation(line: 776, column: 7, scope: !3506)
!3510 = !DILocation(line: 780, column: 7, scope: !3506)
!3511 = !DILocation(line: 782, column: 13, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !200, line: 780, column: 19)
!3513 = distinct !DILexicalBlock(scope: !3506, file: !200, line: 780, column: 7)
!3514 = !DILocation(line: 782, column: 8, scope: !3512)
!3515 = !DILocation(line: 782, column: 11, scope: !3512)
!3516 = !DILocation(line: 783, column: 3, scope: !3512)
!3517 = !DILocation(line: 785, column: 26, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3513, file: !200, line: 783, column: 10)
!3519 = !DILocation(line: 785, column: 41, scope: !3518)
!3520 = !DILocation(line: 785, column: 24, scope: !3518)
!3521 = !DILocation(line: 785, column: 8, scope: !3518)
!3522 = !DILocation(line: 787, column: 52, scope: !3518)
!3523 = !DILocation(line: 789, column: 11, scope: !3518)
!3524 = !DILocation(line: 789, column: 21, scope: !3518)
!3525 = !DILocation(line: 0, scope: !3513)
!3526 = !DILocation(line: 793, column: 7, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3506, file: !200, line: 793, column: 7)
!3528 = !DILocation(line: 793, column: 18, scope: !3527)
!3529 = !DILocation(line: 793, column: 22, scope: !3527)
!3530 = !DILocation(line: 793, column: 29, scope: !3527)
!3531 = !DILocation(line: 793, column: 7, scope: !3506)
!3532 = !DILocation(line: 797, column: 12, scope: !3506)
!3533 = !DILocation(line: 797, column: 7, scope: !3506)
!3534 = !DILocation(line: 797, column: 10, scope: !3506)
!3535 = !DILocation(line: 799, column: 3, scope: !3506)
!3536 = !DILocation(line: 800, column: 7, scope: !3506)
!3537 = !DILocation(line: 801, column: 2, scope: !3506)
!3538 = !DILocation(line: 338, column: 4, scope: !3198)
!3539 = !DILocation(line: 774, column: 26, scope: !3501)
!3540 = distinct !{!3540, !3503, !3541}
!3541 = !DILocation(line: 801, column: 2, scope: !3502)
!3542 = !DILocation(line: 808, column: 9, scope: !3198)
!3543 = !DILocation(line: 808, column: 2, scope: !3198)
!3544 = !DILocation(line: 813, column: 1, scope: !3198)
!3545 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !200, file: !200, line: 33, type: !3546, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3548)
!3546 = !DISubroutineType(types: !3547)
!3547 = !{!145, !118}
!3548 = !{!3549}
!3549 = !DILocalVariable(name: "addr", arg: 1, scope: !3545, file: !200, line: 33, type: !118)
!3550 = !DILocation(line: 0, scope: !3545)
!3551 = !DILocation(line: 41, column: 9, scope: !3545)
!3552 = !DILocation(line: 41, column: 2, scope: !3545)
!3553 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3554, file: !3554, line: 24, type: !143, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3555)
!3554 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3555 = !{!3556}
!3556 = !DILocalVariable(name: "addr", arg: 1, scope: !3553, file: !3554, line: 24, type: !13)
!3557 = !DILocation(line: 0, scope: !3553)
!3558 = !DILocation(line: 49, column: 30, scope: !3553)
!3559 = !DILocation(line: 49, column: 57, scope: !3553)
!3560 = !DILocation(line: 49, column: 2, scope: !3553)
!3561 = distinct !DISubprogram(name: "cbprintf_package", scope: !200, file: !200, line: 815, type: !3562, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3564)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{!107, !106, !185, !152, !118, null}
!3564 = !{!3565, !3566, !3567, !3568, !3569, !3570}
!3565 = !DILocalVariable(name: "packaged", arg: 1, scope: !3561, file: !200, line: 815, type: !106)
!3566 = !DILocalVariable(name: "len", arg: 2, scope: !3561, file: !200, line: 815, type: !185)
!3567 = !DILocalVariable(name: "flags", arg: 3, scope: !3561, file: !200, line: 815, type: !152)
!3568 = !DILocalVariable(name: "format", arg: 4, scope: !3561, file: !200, line: 816, type: !118)
!3569 = !DILocalVariable(name: "ap", scope: !3561, file: !200, line: 818, type: !3201)
!3570 = !DILocalVariable(name: "ret", scope: !3561, file: !200, line: 819, type: !107)
!3571 = !DILocation(line: 0, scope: !3561)
!3572 = !DILocation(line: 818, column: 2, scope: !3561)
!3573 = !DILocation(line: 818, column: 10, scope: !3561)
!3574 = !DILocation(line: 821, column: 2, scope: !3561)
!3575 = !DILocation(line: 822, column: 8, scope: !3561)
!3576 = !DILocation(line: 823, column: 2, scope: !3561)
!3577 = !DILocation(line: 825, column: 1, scope: !3561)
!3578 = !DILocation(line: 824, column: 2, scope: !3561)
!3579 = distinct !DISubprogram(name: "cbpprintf_external", scope: !200, file: !200, line: 827, type: !3580, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3590)
!3580 = !DISubroutineType(types: !3581)
!3581 = !{!107, !3582, !3586, !106, !106}
!3582 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3234, line: 297, baseType: !3583)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 32)
!3584 = !DISubroutineType(types: !3585)
!3585 = !{!107, null}
!3586 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3234, line: 328, baseType: !3587)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 32)
!3588 = !DISubroutineType(types: !3589)
!3589 = !{!107, !3582, !106, !118, !3201}
!3590 = !{!3591, !3592, !3593, !3594, !3595, !3596, !3602, !3603, !3604, !3605, !3606, !3607, !3608, !3609}
!3591 = !DILocalVariable(name: "out", arg: 1, scope: !3579, file: !200, line: 827, type: !3582)
!3592 = !DILocalVariable(name: "formatter", arg: 2, scope: !3579, file: !200, line: 828, type: !3586)
!3593 = !DILocalVariable(name: "ctx", arg: 3, scope: !3579, file: !200, line: 829, type: !106)
!3594 = !DILocalVariable(name: "packaged", arg: 4, scope: !3579, file: !200, line: 829, type: !106)
!3595 = !DILocalVariable(name: "buf", scope: !3579, file: !200, line: 831, type: !194)
!3596 = !DILocalVariable(name: "hdr", scope: !3579, file: !200, line: 832, type: !3597)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 32)
!3598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3234, line: 96, size: 64, elements: !3599)
!3599 = !{!3600, !3601}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3598, file: !3234, line: 98, baseType: !3233, size: 32)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3598, file: !3234, line: 101, baseType: !193, size: 32, offset: 32)
!3602 = !DILocalVariable(name: "s", scope: !3579, file: !200, line: 833, type: !193)
!3603 = !DILocalVariable(name: "ps", scope: !3579, file: !200, line: 833, type: !192)
!3604 = !DILocalVariable(name: "i", scope: !3579, file: !200, line: 834, type: !32)
!3605 = !DILocalVariable(name: "args_size", scope: !3579, file: !200, line: 834, type: !32)
!3606 = !DILocalVariable(name: "s_nbr", scope: !3579, file: !200, line: 834, type: !32)
!3607 = !DILocalVariable(name: "ros_nbr", scope: !3579, file: !200, line: 834, type: !32)
!3608 = !DILocalVariable(name: "rws_nbr", scope: !3579, file: !200, line: 834, type: !32)
!3609 = !DILocalVariable(name: "s_idx", scope: !3579, file: !200, line: 834, type: !32)
!3610 = !DILocation(line: 0, scope: !3579)
!3611 = !DILocation(line: 836, column: 10, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3579, file: !200, line: 836, column: 6)
!3613 = !DILocation(line: 836, column: 6, scope: !3579)
!3614 = !DILocation(line: 842, column: 28, scope: !3579)
!3615 = !DILocation(line: 842, column: 14, scope: !3579)
!3616 = !DILocation(line: 852, column: 16, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3618, file: !200, line: 852, column: 2)
!3618 = distinct !DILexicalBlock(scope: !3579, file: !200, line: 852, column: 2)
!3619 = !DILocation(line: 852, column: 2, scope: !3618)
!3620 = !DILocation(line: 841, column: 28, scope: !3579)
!3621 = !DILocation(line: 841, column: 14, scope: !3579)
!3622 = !DILocation(line: 841, column: 32, scope: !3579)
!3623 = !DILocation(line: 847, column: 19, scope: !3579)
!3624 = !DILocation(line: 843, column: 28, scope: !3579)
!3625 = !DILocation(line: 843, column: 14, scope: !3579)
!3626 = !DILocation(line: 847, column: 31, scope: !3579)
!3627 = !DILocation(line: 844, column: 28, scope: !3579)
!3628 = !DILocation(line: 844, column: 14, scope: !3579)
!3629 = !DILocation(line: 847, column: 45, scope: !3579)
!3630 = !DILocation(line: 847, column: 41, scope: !3579)
!3631 = !DILocation(line: 854, column: 24, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3617, file: !200, line: 852, column: 30)
!3633 = !DILocation(line: 854, column: 11, scope: !3632)
!3634 = !DILocation(line: 855, column: 30, scope: !3632)
!3635 = !DILocation(line: 855, column: 22, scope: !3632)
!3636 = !DILocation(line: 855, column: 8, scope: !3632)
!3637 = !DILocation(line: 857, column: 7, scope: !3632)
!3638 = !DILocation(line: 859, column: 8, scope: !3632)
!3639 = !DILocation(line: 859, column: 18, scope: !3632)
!3640 = !DILocation(line: 859, column: 5, scope: !3632)
!3641 = !DILocation(line: 852, column: 26, scope: !3617)
!3642 = distinct !{!3642, !3619, !3643}
!3643 = !DILocation(line: 860, column: 2, scope: !3618)
!3644 = !DILocation(line: 863, column: 6, scope: !3579)
!3645 = !DILocation(line: 866, column: 56, scope: !3579)
!3646 = !DILocation(line: 866, column: 9, scope: !3579)
!3647 = !DILocation(line: 866, column: 2, scope: !3579)
!3648 = !DILocation(line: 867, column: 1, scope: !3579)
!3649 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !200, file: !200, line: 179, type: !3650, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3652)
!3650 = !DISubroutineType(types: !3651)
!3651 = !{!107, !3582, !3586, !106, !118, !106}
!3652 = !{!3653, !3654, !3655, !3656, !3657, !3658}
!3653 = !DILocalVariable(name: "out", arg: 1, scope: !3649, file: !200, line: 179, type: !3582)
!3654 = !DILocalVariable(name: "formatter", arg: 2, scope: !3649, file: !200, line: 180, type: !3586)
!3655 = !DILocalVariable(name: "ctx", arg: 3, scope: !3649, file: !200, line: 181, type: !106)
!3656 = !DILocalVariable(name: "fmt", arg: 4, scope: !3649, file: !200, line: 182, type: !118)
!3657 = !DILocalVariable(name: "buf", arg: 5, scope: !3649, file: !200, line: 182, type: !106)
!3658 = !DILocalVariable(name: "u", scope: !3649, file: !200, line: 187, type: !3659)
!3659 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3649, file: !200, line: 184, size: 32, elements: !3660)
!3660 = !{!3661, !3662}
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3659, file: !200, line: 185, baseType: !3201, size: 32)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3659, file: !200, line: 186, baseType: !106, size: 32)
!3663 = !DILocation(line: 0, scope: !3649)
!3664 = !DILocation(line: 191, column: 9, scope: !3649)
!3665 = !DILocation(line: 191, column: 2, scope: !3649)
!3666 = distinct !DISubprogram(name: "is_ptr", scope: !200, file: !200, line: 881, type: !3667, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3669)
!3667 = !DISubroutineType(types: !3668)
!3668 = !{!145, !118, !107}
!3669 = !{!3670, !3671, !3672, !3673, !3674}
!3670 = !DILocalVariable(name: "fmt", arg: 1, scope: !3666, file: !200, line: 881, type: !118)
!3671 = !DILocalVariable(name: "n", arg: 2, scope: !3666, file: !200, line: 881, type: !107)
!3672 = !DILocalVariable(name: "c", scope: !3666, file: !200, line: 883, type: !120)
!3673 = !DILocalVariable(name: "mod", scope: !3666, file: !200, line: 884, type: !145)
!3674 = !DILocalVariable(name: "cnt", scope: !3666, file: !200, line: 885, type: !107)
!3675 = !DILocation(line: 0, scope: !3666)
!3676 = !DILocation(line: 887, column: 14, scope: !3666)
!3677 = !DILocation(line: 887, column: 22, scope: !3666)
!3678 = !DILocation(line: 887, column: 2, scope: !3666)
!3679 = !DILocation(line: 887, column: 18, scope: !3666)
!3680 = !DILocation(line: 888, column: 7, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3666, file: !200, line: 887, column: 31)
!3682 = !DILocation(line: 889, column: 12, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3684, file: !200, line: 889, column: 8)
!3684 = distinct !DILexicalBlock(scope: !3685, file: !200, line: 888, column: 12)
!3685 = distinct !DILexicalBlock(scope: !3681, file: !200, line: 888, column: 7)
!3686 = !DILocation(line: 889, column: 8, scope: !3684)
!3687 = !DILocation(line: 890, column: 11, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3689, file: !200, line: 890, column: 9)
!3689 = distinct !DILexicalBlock(scope: !3683, file: !200, line: 889, column: 18)
!3690 = !DILocation(line: 890, column: 9, scope: !3689)
!3691 = !DILocation(line: 892, column: 16, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3688, file: !200, line: 892, column: 16)
!3693 = !DILocation(line: 892, column: 16, scope: !3688)
!3694 = !DILocation(line: 895, column: 15, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3683, file: !200, line: 895, column: 15)
!3696 = !DILocation(line: 895, column: 15, scope: !3683)
!3697 = !DILocation(line: 900, column: 9, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3681, file: !200, line: 900, column: 7)
!3699 = !DILocation(line: 900, column: 7, scope: !3681)
!3700 = distinct !{!3700, !3678, !3701}
!3701 = !DILocation(line: 903, column: 2, scope: !3666)
!3702 = !DILocation(line: 906, column: 1, scope: !3666)
!3703 = distinct !DISubprogram(name: "is_fmt_spec", scope: !200, file: !200, line: 873, type: !3704, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3706)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{!145, !120}
!3706 = !{!3707}
!3707 = !DILocalVariable(name: "c", arg: 1, scope: !3703, file: !200, line: 873, type: !120)
!3708 = !DILocation(line: 0, scope: !3703)
!3709 = !DILocation(line: 875, column: 19, scope: !3703)
!3710 = !DILocation(line: 875, column: 2, scope: !3703)
!3711 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !200, file: !200, line: 908, type: !3712, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3718)
!3712 = !DISubroutineType(types: !3713)
!3713 = !{!107, !106, !185, !3714, !106, !152, !2774, !185}
!3714 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3234, line: 308, baseType: !3715)
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3716, size: 32)
!3716 = !DISubroutineType(types: !3717)
!3717 = !{!107, !13, !185, !106}
!3718 = !{!3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3736, !3737, !3738, !3739, !3740, !3746, !3749, !3750, !3751, !3753, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3769, !3772, !3773, !3774, !3775, !3776, !3777, !3779, !3782, !3783, !3784}
!3719 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3711, file: !200, line: 908, type: !106)
!3720 = !DILocalVariable(name: "in_len", arg: 2, scope: !3711, file: !200, line: 909, type: !185)
!3721 = !DILocalVariable(name: "cb", arg: 3, scope: !3711, file: !200, line: 910, type: !3714)
!3722 = !DILocalVariable(name: "ctx", arg: 4, scope: !3711, file: !200, line: 911, type: !106)
!3723 = !DILocalVariable(name: "flags", arg: 5, scope: !3711, file: !200, line: 912, type: !152)
!3724 = !DILocalVariable(name: "strl", arg: 6, scope: !3711, file: !200, line: 913, type: !2774)
!3725 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3711, file: !200, line: 914, type: !185)
!3726 = !DILocalVariable(name: "buf", scope: !3711, file: !200, line: 918, type: !194)
!3727 = !DILocalVariable(name: "buf32", scope: !3711, file: !200, line: 919, type: !1014)
!3728 = !DILocalVariable(name: "args_size", scope: !3711, file: !200, line: 920, type: !32)
!3729 = !DILocalVariable(name: "ros_nbr", scope: !3711, file: !200, line: 920, type: !32)
!3730 = !DILocalVariable(name: "rws_nbr", scope: !3711, file: !200, line: 920, type: !32)
!3731 = !DILocalVariable(name: "fmt_present", scope: !3711, file: !200, line: 921, type: !145)
!3732 = !DILocalVariable(name: "rw_cpy", scope: !3711, file: !200, line: 922, type: !145)
!3733 = !DILocalVariable(name: "ro_cpy", scope: !3711, file: !200, line: 923, type: !145)
!3734 = !DILocalVariable(name: "in_desc", scope: !3711, file: !200, line: 924, type: !3735)
!3735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 32)
!3736 = !DILocalVariable(name: "out_len", scope: !3711, file: !200, line: 960, type: !107)
!3737 = !DILocalVariable(name: "fmt", scope: !3711, file: !200, line: 965, type: !118)
!3738 = !DILocalVariable(name: "str_pos", scope: !3711, file: !200, line: 966, type: !194)
!3739 = !DILocalVariable(name: "strl_cnt", scope: !3711, file: !200, line: 967, type: !185)
!3740 = !DILocalVariable(name: "i", scope: !3741, file: !200, line: 973, type: !107)
!3741 = distinct !DILexicalBlock(scope: !3742, file: !200, line: 973, column: 4)
!3742 = distinct !DILexicalBlock(scope: !3743, file: !200, line: 972, column: 15)
!3743 = distinct !DILexicalBlock(scope: !3744, file: !200, line: 972, column: 7)
!3744 = distinct !DILexicalBlock(scope: !3745, file: !200, line: 970, column: 18)
!3745 = distinct !DILexicalBlock(scope: !3711, file: !200, line: 970, column: 6)
!3746 = !DILocalVariable(name: "str", scope: !3747, file: !200, line: 974, type: !118)
!3747 = distinct !DILexicalBlock(scope: !3748, file: !200, line: 973, column: 38)
!3748 = distinct !DILexicalBlock(scope: !3741, file: !200, line: 973, column: 4)
!3749 = !DILocalVariable(name: "len", scope: !3747, file: !200, line: 975, type: !107)
!3750 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3744, file: !200, line: 990, type: !145)
!3751 = !DILocalVariable(name: "i", scope: !3752, file: !200, line: 995, type: !107)
!3752 = distinct !DILexicalBlock(scope: !3744, file: !200, line: 995, column: 3)
!3753 = !DILocalVariable(name: "arg_idx", scope: !3754, file: !200, line: 996, type: !195)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !200, line: 995, column: 37)
!3755 = distinct !DILexicalBlock(scope: !3752, file: !200, line: 995, column: 3)
!3756 = !DILocalVariable(name: "arg_pos", scope: !3754, file: !200, line: 997, type: !195)
!3757 = !DILocalVariable(name: "str", scope: !3754, file: !200, line: 998, type: !118)
!3758 = !DILocalVariable(name: "is_ro", scope: !3754, file: !200, line: 999, type: !145)
!3759 = !DILocalVariable(name: "len", scope: !3754, file: !200, line: 1000, type: !107)
!3760 = !DILocalVariable(name: "out_desc", scope: !3711, file: !200, line: 1038, type: !3237)
!3761 = !DILocalVariable(name: "cpy_str_pos", scope: !3711, file: !200, line: 1040, type: !3219)
!3762 = !DILocalVariable(name: "keep_str_pos", scope: !3711, file: !200, line: 1042, type: !3219)
!3763 = !DILocalVariable(name: "scpy_cnt", scope: !3711, file: !200, line: 1043, type: !195)
!3764 = !DILocalVariable(name: "keep_cnt", scope: !3711, file: !200, line: 1044, type: !195)
!3765 = !DILocalVariable(name: "dst", scope: !3711, file: !200, line: 1045, type: !194)
!3766 = !DILocalVariable(name: "rv", scope: !3711, file: !200, line: 1046, type: !107)
!3767 = !DILocalVariable(name: "i", scope: !3768, file: !200, line: 1074, type: !107)
!3768 = distinct !DILexicalBlock(scope: !3711, file: !200, line: 1074, column: 2)
!3769 = !DILocalVariable(name: "arg_idx", scope: !3770, file: !200, line: 1075, type: !195)
!3770 = distinct !DILexicalBlock(scope: !3771, file: !200, line: 1074, column: 36)
!3771 = distinct !DILexicalBlock(scope: !3768, file: !200, line: 1074, column: 2)
!3772 = !DILocalVariable(name: "arg_pos", scope: !3770, file: !200, line: 1076, type: !195)
!3773 = !DILocalVariable(name: "str", scope: !3770, file: !200, line: 1077, type: !118)
!3774 = !DILocalVariable(name: "is_ro", scope: !3770, file: !200, line: 1078, type: !145)
!3775 = !DILocalVariable(name: "in_desc_backup", scope: !3711, file: !200, line: 1114, type: !3237)
!3776 = !DILocalVariable(name: "strs_len", scope: !3711, file: !200, line: 1134, type: !185)
!3777 = !DILocalVariable(name: "i", scope: !3778, file: !200, line: 1143, type: !107)
!3778 = distinct !DILexicalBlock(scope: !3711, file: !200, line: 1143, column: 2)
!3779 = !DILocalVariable(name: "loc", scope: !3780, file: !200, line: 1144, type: !195)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !200, line: 1143, column: 37)
!3781 = distinct !DILexicalBlock(scope: !3778, file: !200, line: 1143, column: 2)
!3782 = !DILocalVariable(name: "str", scope: !3780, file: !200, line: 1145, type: !118)
!3783 = !DILocalVariable(name: "str_len", scope: !3780, file: !200, line: 1146, type: !197)
!3784 = !DILabel(scope: !3785, name: "calculate_string_length", file: !200, line: 1021)
!3785 = distinct !DILexicalBlock(scope: !3786, file: !200, line: 1020, column: 56)
!3786 = distinct !DILexicalBlock(scope: !3787, file: !200, line: 1020, column: 15)
!3787 = distinct !DILexicalBlock(scope: !3754, file: !200, line: 1014, column: 8)
!3788 = !DILocation(line: 0, scope: !3711)
!3789 = !DILocation(line: 916, column: 2, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3791, file: !200, line: 916, column: 2)
!3791 = distinct !DILexicalBlock(scope: !3711, file: !200, line: 916, column: 2)
!3792 = !DILocation(line: 916, column: 2, scope: !3791)
!3793 = !DILocation(line: 916, column: 2, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3790, file: !200, line: 916, column: 2)
!3795 = !DILocation(line: 919, column: 20, scope: !3711)
!3796 = !DILocation(line: 921, column: 27, scope: !3711)
!3797 = !DILocation(line: 921, column: 21, scope: !3711)
!3798 = !DILocation(line: 926, column: 18, scope: !3711)
!3799 = !DILocation(line: 926, column: 11, scope: !3711)
!3800 = !DILocation(line: 926, column: 34, scope: !3711)
!3801 = !DILocation(line: 931, column: 21, scope: !3711)
!3802 = !DILocation(line: 931, column: 12, scope: !3711)
!3803 = !DILocation(line: 932, column: 11, scope: !3711)
!3804 = !DILocation(line: 932, column: 19, scope: !3711)
!3805 = !DILocation(line: 938, column: 21, scope: !3711)
!3806 = !DILocation(line: 938, column: 12, scope: !3711)
!3807 = !DILocation(line: 939, column: 19, scope: !3711)
!3808 = !DILocation(line: 939, column: 23, scope: !3711)
!3809 = !DILocation(line: 946, column: 14, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3711, file: !200, line: 946, column: 6)
!3811 = !DILocation(line: 947, column: 7, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !200, line: 947, column: 7)
!3813 = distinct !DILexicalBlock(scope: !3810, file: !200, line: 946, column: 26)
!3814 = !DILocation(line: 947, column: 7, scope: !3813)
!3815 = !DILocation(line: 948, column: 4, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3812, file: !200, line: 947, column: 11)
!3817 = !DILocation(line: 949, column: 3, scope: !3816)
!3818 = !DILocation(line: 958, column: 23, scope: !3711)
!3819 = !DILocation(line: 958, column: 14, scope: !3711)
!3820 = !DILocation(line: 958, column: 27, scope: !3711)
!3821 = !DILocation(line: 965, column: 41, scope: !3711)
!3822 = !DILocation(line: 965, column: 20, scope: !3711)
!3823 = !DILocation(line: 966, column: 22, scope: !3711)
!3824 = !DILocation(line: 970, column: 9, scope: !3745)
!3825 = !DILocation(line: 970, column: 6, scope: !3711)
!3826 = !DILocation(line: 972, column: 7, scope: !3744)
!3827 = !DILocation(line: 0, scope: !3741)
!3828 = !DILocation(line: 973, column: 4, scope: !3741)
!3829 = !DILocation(line: 974, column: 46, scope: !3747)
!3830 = !DILocation(line: 974, column: 40, scope: !3747)
!3831 = !DILocation(line: 974, column: 23, scope: !3747)
!3832 = !DILocation(line: 0, scope: !3747)
!3833 = !DILocation(line: 975, column: 15, scope: !3747)
!3834 = !DILocation(line: 978, column: 14, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3747, file: !200, line: 978, column: 9)
!3836 = !DILocation(line: 979, column: 25, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3835, file: !200, line: 978, column: 38)
!3838 = !DILocation(line: 979, column: 19, scope: !3837)
!3839 = !DILocation(line: 979, column: 6, scope: !3837)
!3840 = !DILocation(line: 979, column: 23, scope: !3837)
!3841 = !DILocation(line: 980, column: 5, scope: !3837)
!3842 = !DILocation(line: 981, column: 13, scope: !3747)
!3843 = !DILocation(line: 982, column: 12, scope: !3747)
!3844 = !DILocation(line: 973, column: 34, scope: !3748)
!3845 = !DILocation(line: 973, column: 22, scope: !3748)
!3846 = distinct !{!3846, !3828, !3847}
!3847 = !DILocation(line: 983, column: 4, scope: !3741)
!3848 = !DILocation(line: 985, column: 16, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !200, line: 985, column: 8)
!3850 = distinct !DILexicalBlock(scope: !3743, file: !200, line: 984, column: 10)
!3851 = !DILocation(line: 967, column: 9, scope: !3711)
!3852 = !DILocation(line: 971, column: 11, scope: !3744)
!3853 = !DILocation(line: 0, scope: !3744)
!3854 = !DILocation(line: 0, scope: !3752)
!3855 = !DILocation(line: 995, column: 21, scope: !3755)
!3856 = !DILocation(line: 995, column: 3, scope: !3752)
!3857 = !DILocation(line: 990, column: 34, scope: !3744)
!3858 = !DILocation(line: 990, column: 26, scope: !3744)
!3859 = !DILocation(line: 996, column: 30, scope: !3754)
!3860 = !DILocation(line: 0, scope: !3754)
!3861 = !DILocation(line: 997, column: 30, scope: !3754)
!3862 = !DILocation(line: 997, column: 22, scope: !3754)
!3863 = !DILocation(line: 998, column: 39, scope: !3754)
!3864 = !DILocation(line: 998, column: 22, scope: !3754)
!3865 = !DILocation(line: 999, column: 17, scope: !3754)
!3866 = !DILocation(line: 1002, column: 20, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3754, file: !200, line: 1002, column: 8)
!3868 = !DILocation(line: 996, column: 22, scope: !3754)
!3869 = !DILocation(line: 1002, column: 35, scope: !3867)
!3870 = !DILocation(line: 1002, column: 23, scope: !3867)
!3871 = !DILocation(line: 1002, column: 8, scope: !3754)
!3872 = !DILocation(line: 1003, column: 5, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3874, file: !200, line: 1003, column: 5)
!3874 = distinct !DILexicalBlock(scope: !3875, file: !200, line: 1003, column: 5)
!3875 = distinct !DILexicalBlock(scope: !3876, file: !200, line: 1003, column: 5)
!3876 = distinct !DILexicalBlock(scope: !3877, file: !200, line: 1003, column: 5)
!3877 = distinct !DILexicalBlock(scope: !3867, file: !200, line: 1002, column: 45)
!3878 = !DILocation(line: 1010, column: 13, scope: !3877)
!3879 = !DILocation(line: 1011, column: 5, scope: !3877)
!3880 = !DILocation(line: 1014, column: 8, scope: !3754)
!3881 = !DILocation(line: 1015, column: 9, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3787, file: !200, line: 1014, column: 15)
!3883 = !DILocation(line: 1018, column: 14, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !200, line: 1017, column: 12)
!3885 = distinct !DILexicalBlock(scope: !3882, file: !200, line: 1015, column: 9)
!3886 = !DILocation(line: 1020, column: 4, scope: !3882)
!3887 = !DILocation(line: 1020, column: 15, scope: !3787)
!3888 = !DILocation(line: 1021, column: 1, scope: !3785)
!3889 = !DILocation(line: 1022, column: 11, scope: !3785)
!3890 = !DILocation(line: 1025, column: 14, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3785, file: !200, line: 1025, column: 9)
!3892 = !DILocation(line: 1026, column: 25, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3891, file: !200, line: 1025, column: 38)
!3894 = !DILocation(line: 1026, column: 19, scope: !3893)
!3895 = !DILocation(line: 1026, column: 6, scope: !3893)
!3896 = !DILocation(line: 1026, column: 23, scope: !3893)
!3897 = !DILocation(line: 1027, column: 5, scope: !3893)
!3898 = !DILocation(line: 1031, column: 21, scope: !3785)
!3899 = !DILocation(line: 1031, column: 13, scope: !3785)
!3900 = !DILocation(line: 1032, column: 4, scope: !3785)
!3901 = !DILocation(line: 995, column: 33, scope: !3755)
!3902 = distinct !{!3902, !3856, !3903}
!3903 = !DILocation(line: 1033, column: 3, scope: !3752)
!3904 = !DILocation(line: 1040, column: 10, scope: !3711)
!3905 = !DILocation(line: 1042, column: 10, scope: !3711)
!3906 = !DILocation(line: 1052, column: 6, scope: !3711)
!3907 = !DILocation(line: 1055, column: 9, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3909, file: !200, line: 1052, column: 14)
!3909 = distinct !DILexicalBlock(scope: !3711, file: !200, line: 1052, column: 6)
!3910 = !DILocation(line: 1056, column: 2, scope: !3908)
!3911 = !DILocation(line: 1056, column: 21, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3909, file: !200, line: 1056, column: 13)
!3913 = !DILocation(line: 1066, column: 3, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3915, file: !200, line: 1065, column: 11)
!3915 = distinct !DILexicalBlock(scope: !3711, file: !200, line: 1065, column: 6)
!3916 = !DILocation(line: 1067, column: 2, scope: !3914)
!3917 = !DILocation(line: 1068, column: 10, scope: !3711)
!3918 = !DILocation(line: 0, scope: !3768)
!3919 = !DILocation(line: 1074, column: 20, scope: !3771)
!3920 = !DILocation(line: 1074, column: 2, scope: !3768)
!3921 = !DILocation(line: 1110, column: 24, scope: !3711)
!3922 = !DILocation(line: 1053, column: 12, scope: !3908)
!3923 = !DILocation(line: 1054, column: 12, scope: !3908)
!3924 = !DILocation(line: 1108, column: 30, scope: !3711)
!3925 = !DILocation(line: 1108, column: 40, scope: !3711)
!3926 = !DILocation(line: 1108, column: 38, scope: !3711)
!3927 = !DILocation(line: 1109, column: 31, scope: !3711)
!3928 = !DILocation(line: 1109, column: 24, scope: !3711)
!3929 = !DILocation(line: 1110, column: 31, scope: !3711)
!3930 = !DILocation(line: 1114, column: 31, scope: !3711)
!3931 = !DILocation(line: 1114, column: 48, scope: !3711)
!3932 = !DILocation(line: 1115, column: 13, scope: !3711)
!3933 = !DILocation(line: 1118, column: 7, scope: !3711)
!3934 = !DILocation(line: 1119, column: 9, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3711, file: !200, line: 1119, column: 6)
!3936 = !DILocation(line: 1119, column: 6, scope: !3711)
!3937 = !DILocation(line: 1075, column: 29, scope: !3770)
!3938 = !DILocation(line: 1075, column: 21, scope: !3770)
!3939 = !DILocation(line: 0, scope: !3770)
!3940 = !DILocation(line: 1076, column: 29, scope: !3770)
!3941 = !DILocation(line: 1076, column: 21, scope: !3770)
!3942 = !DILocation(line: 1077, column: 38, scope: !3770)
!3943 = !DILocation(line: 1077, column: 21, scope: !3770)
!3944 = !DILocation(line: 1078, column: 16, scope: !3770)
!3945 = !DILocation(line: 1080, column: 19, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3770, file: !200, line: 1080, column: 7)
!3947 = !DILocation(line: 1080, column: 34, scope: !3946)
!3948 = !DILocation(line: 1080, column: 22, scope: !3946)
!3949 = !DILocation(line: 1080, column: 7, scope: !3770)
!3950 = !DILocation(line: 1084, column: 7, scope: !3770)
!3951 = !DILocation(line: 1085, column: 8, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !200, line: 1084, column: 14)
!3953 = distinct !DILexicalBlock(scope: !3770, file: !200, line: 1084, column: 7)
!3954 = !DILocation(line: 1086, column: 5, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3956, file: !200, line: 1086, column: 5)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !200, line: 1086, column: 5)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !200, line: 1085, column: 49)
!3958 = distinct !DILexicalBlock(scope: !3952, file: !200, line: 1085, column: 8)
!3959 = !DILocation(line: 1086, column: 5, scope: !3956)
!3960 = !DILocation(line: 1086, column: 5, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3955, file: !200, line: 1086, column: 5)
!3962 = !DILocation(line: 1087, column: 25, scope: !3957)
!3963 = !DILocation(line: 1087, column: 5, scope: !3957)
!3964 = !DILocation(line: 1088, column: 4, scope: !3957)
!3965 = !DILocation(line: 1088, column: 15, scope: !3958)
!3966 = !DILocation(line: 1089, column: 5, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3968, file: !200, line: 1089, column: 5)
!3968 = distinct !DILexicalBlock(scope: !3969, file: !200, line: 1089, column: 5)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !200, line: 1088, column: 61)
!3970 = distinct !DILexicalBlock(scope: !3958, file: !200, line: 1088, column: 15)
!3971 = !DILocation(line: 1089, column: 5, scope: !3968)
!3972 = !DILocation(line: 1089, column: 5, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3967, file: !200, line: 1089, column: 5)
!3974 = !DILocation(line: 1090, column: 26, scope: !3969)
!3975 = !DILocation(line: 1090, column: 5, scope: !3969)
!3976 = !DILocation(line: 1091, column: 4, scope: !3969)
!3977 = !DILocation(line: 1095, column: 8, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3953, file: !200, line: 1094, column: 10)
!3979 = !DILocation(line: 1096, column: 5, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !200, line: 1096, column: 5)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !200, line: 1096, column: 5)
!3982 = distinct !DILexicalBlock(scope: !3983, file: !200, line: 1095, column: 49)
!3983 = distinct !DILexicalBlock(scope: !3978, file: !200, line: 1095, column: 8)
!3984 = !DILocation(line: 1096, column: 5, scope: !3981)
!3985 = !DILocation(line: 1096, column: 5, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3980, file: !200, line: 1096, column: 5)
!3987 = !DILocation(line: 1097, column: 25, scope: !3982)
!3988 = !DILocation(line: 1097, column: 5, scope: !3982)
!3989 = !DILocation(line: 1098, column: 4, scope: !3982)
!3990 = !DILocation(line: 1099, column: 5, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3992, file: !200, line: 1099, column: 5)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !200, line: 1099, column: 5)
!3993 = distinct !DILexicalBlock(scope: !3983, file: !200, line: 1098, column: 11)
!3994 = !DILocation(line: 1099, column: 5, scope: !3992)
!3995 = !DILocation(line: 1099, column: 5, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3991, file: !200, line: 1099, column: 5)
!3997 = !DILocation(line: 1100, column: 26, scope: !3993)
!3998 = !DILocation(line: 1100, column: 5, scope: !3993)
!3999 = !DILocation(line: 1100, column: 30, scope: !3993)
!4000 = !DILocation(line: 1101, column: 26, scope: !3993)
!4001 = !DILocation(line: 1101, column: 5, scope: !3993)
!4002 = !DILocation(line: 0, scope: !3953)
!4003 = !DILocation(line: 1074, column: 32, scope: !3771)
!4004 = distinct !{!4004, !3920, !4005}
!4005 = !DILocation(line: 1104, column: 2, scope: !3768)
!4006 = !DILocation(line: 1124, column: 13, scope: !3711)
!4007 = !DILocation(line: 1127, column: 10, scope: !3711)
!4008 = !DILocation(line: 1127, column: 7, scope: !3711)
!4009 = !DILocation(line: 1128, column: 9, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !3711, file: !200, line: 1128, column: 6)
!4011 = !DILocation(line: 1128, column: 6, scope: !3711)
!4012 = !DILocation(line: 1134, column: 27, scope: !3711)
!4013 = !DILocation(line: 1136, column: 7, scope: !3711)
!4014 = !DILocation(line: 1137, column: 9, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !3711, file: !200, line: 1137, column: 6)
!4016 = !DILocation(line: 1137, column: 6, scope: !3711)
!4017 = !DILocation(line: 1131, column: 10, scope: !3711)
!4018 = !DILocation(line: 1140, column: 10, scope: !3711)
!4019 = !DILocation(line: 0, scope: !3778)
!4020 = !DILocation(line: 1143, column: 20, scope: !3781)
!4021 = !DILocation(line: 1143, column: 2, scope: !3778)
!4022 = !DILocation(line: 1144, column: 3, scope: !3780)
!4023 = !DILocation(line: 1144, column: 17, scope: !3780)
!4024 = !DILocation(line: 0, scope: !3780)
!4025 = !DILocation(line: 1144, column: 11, scope: !3780)
!4026 = !DILocation(line: 1145, column: 38, scope: !3780)
!4027 = !DILocation(line: 1145, column: 21, scope: !3780)
!4028 = !DILocation(line: 1146, column: 22, scope: !3780)
!4029 = !DILocation(line: 1146, column: 29, scope: !3780)
!4030 = !DILocation(line: 1148, column: 8, scope: !3780)
!4031 = !DILocation(line: 1149, column: 10, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !3780, file: !200, line: 1149, column: 7)
!4033 = !DILocation(line: 1149, column: 7, scope: !3780)
!4034 = !DILocation(line: 1154, column: 8, scope: !3780)
!4035 = !DILocation(line: 1155, column: 10, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !3780, file: !200, line: 1155, column: 7)
!4037 = !DILocation(line: 1155, column: 7, scope: !3780)
!4038 = !DILocation(line: 1159, column: 2, scope: !3781)
!4039 = !DILocation(line: 1152, column: 11, scope: !3780)
!4040 = !DILocation(line: 1158, column: 11, scope: !3780)
!4041 = !DILocation(line: 1143, column: 33, scope: !3781)
!4042 = distinct !{!4042, !4021, !4043}
!4043 = !DILocation(line: 1159, column: 2, scope: !3778)
!4044 = !DILocation(line: 1162, column: 8, scope: !3711)
!4045 = !DILocation(line: 1164, column: 2, scope: !3711)
!4046 = !DILocation(line: 1165, column: 1, scope: !3711)
!4047 = distinct !DISubprogram(name: "get_package_len", scope: !200, file: !200, line: 196, type: !4048, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4050)
!4048 = !DISubroutineType(types: !4049)
!4049 = !{!185, !106}
!4050 = !{!4051, !4052, !4053, !4054, !4055, !4056, !4057}
!4051 = !DILocalVariable(name: "packaged", arg: 1, scope: !4047, file: !200, line: 196, type: !106)
!4052 = !DILocalVariable(name: "buf", scope: !4047, file: !200, line: 200, type: !194)
!4053 = !DILocalVariable(name: "start", scope: !4047, file: !200, line: 201, type: !194)
!4054 = !DILocalVariable(name: "args_size", scope: !4047, file: !200, line: 202, type: !32)
!4055 = !DILocalVariable(name: "s_nbr", scope: !4047, file: !200, line: 202, type: !32)
!4056 = !DILocalVariable(name: "ros_nbr", scope: !4047, file: !200, line: 202, type: !32)
!4057 = !DILocalVariable(name: "i", scope: !4058, file: !200, line: 215, type: !107)
!4058 = distinct !DILexicalBlock(scope: !4047, file: !200, line: 215, column: 2)
!4059 = !DILocation(line: 0, scope: !4047)
!4060 = !DILocation(line: 198, column: 2, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4062, file: !200, line: 198, column: 2)
!4062 = distinct !DILexicalBlock(scope: !4047, file: !200, line: 198, column: 2)
!4063 = !DILocation(line: 198, column: 2, scope: !4062)
!4064 = !DILocation(line: 198, column: 2, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4061, file: !200, line: 198, column: 2)
!4066 = !DILocation(line: 204, column: 14, scope: !4047)
!4067 = !DILocation(line: 204, column: 21, scope: !4047)
!4068 = !DILocation(line: 205, column: 14, scope: !4047)
!4069 = !DILocation(line: 206, column: 14, scope: !4047)
!4070 = !DILocation(line: 209, column: 6, scope: !4047)
!4071 = !DILocation(line: 212, column: 6, scope: !4047)
!4072 = !DILocation(line: 0, scope: !4058)
!4073 = !DILocation(line: 215, column: 20, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4058, file: !200, line: 215, column: 2)
!4075 = !DILocation(line: 215, column: 2, scope: !4058)
!4076 = !DILocation(line: 220, column: 33, scope: !4047)
!4077 = !DILocation(line: 220, column: 2, scope: !4047)
!4078 = !DILocation(line: 216, column: 6, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4074, file: !200, line: 215, column: 34)
!4080 = !DILocation(line: 217, column: 10, scope: !4079)
!4081 = !DILocation(line: 217, column: 36, scope: !4079)
!4082 = !DILocation(line: 217, column: 7, scope: !4079)
!4083 = !DILocation(line: 215, column: 30, scope: !4074)
!4084 = distinct !{!4084, !4075, !4085}
!4085 = !DILocation(line: 218, column: 2, scope: !4058)
!4086 = distinct !DISubprogram(name: "append_string", scope: !200, file: !200, line: 223, type: !4087, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4089)
!4087 = !DISubroutineType(types: !4088)
!4088 = !{!107, !3714, !106, !118, !197}
!4089 = !{!4090, !4091, !4092, !4093}
!4090 = !DILocalVariable(name: "cb", arg: 1, scope: !4086, file: !200, line: 223, type: !3714)
!4091 = !DILocalVariable(name: "ctx", arg: 2, scope: !4086, file: !200, line: 223, type: !106)
!4092 = !DILocalVariable(name: "str", arg: 3, scope: !4086, file: !200, line: 223, type: !118)
!4093 = !DILocalVariable(name: "strl", arg: 4, scope: !4086, file: !200, line: 223, type: !197)
!4094 = !DILocation(line: 0, scope: !4086)
!4095 = !DILocation(line: 225, column: 9, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4086, file: !200, line: 225, column: 6)
!4097 = !DILocation(line: 225, column: 6, scope: !4086)
!4098 = !DILocation(line: 226, column: 14, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4096, file: !200, line: 225, column: 18)
!4100 = !DILocation(line: 226, column: 12, scope: !4099)
!4101 = !DILocation(line: 226, column: 3, scope: !4099)
!4102 = !DILocation(line: 229, column: 14, scope: !4086)
!4103 = !DILocation(line: 229, column: 9, scope: !4086)
!4104 = !DILocation(line: 229, column: 27, scope: !4086)
!4105 = !DILocation(line: 229, column: 39, scope: !4086)
!4106 = !DILocation(line: 230, column: 17, scope: !4086)
!4107 = !DILocation(line: 230, column: 9, scope: !4086)
!4108 = !DILocation(line: 230, column: 2, scope: !4086)
!4109 = !DILocation(line: 231, column: 1, scope: !4086)
!4110 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !212, file: !212, line: 45, type: !214, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4111)
!4111 = !{!4112}
!4112 = !DILocalVariable(name: "c", arg: 1, scope: !4110, file: !212, line: 45, type: !107)
!4113 = !DILocation(line: 0, scope: !4110)
!4114 = !DILocation(line: 50, column: 2, scope: !4110)
!4115 = distinct !DISubprogram(name: "__printk_hook_install", scope: !212, file: !212, line: 63, type: !4116, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4118)
!4116 = !DISubroutineType(types: !4117)
!4117 = !{null, !213}
!4118 = !{!4119}
!4119 = !DILocalVariable(name: "fn", arg: 1, scope: !4115, file: !212, line: 63, type: !213)
!4120 = !DILocation(line: 0, scope: !4115)
!4121 = !DILocation(line: 65, column: 12, scope: !4115)
!4122 = !DILocation(line: 66, column: 1, scope: !4115)
!4123 = distinct !DISubprogram(name: "__printk_get_hook", scope: !212, file: !212, line: 76, type: !125, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !2156)
!4124 = !DILocation(line: 78, column: 9, scope: !4123)
!4125 = !DILocation(line: 78, column: 2, scope: !4123)
!4126 = distinct !DISubprogram(name: "vprintk", scope: !212, file: !212, line: 113, type: !4127, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4135)
!4127 = !DISubroutineType(types: !4128)
!4128 = !{null, !118, !4129}
!4129 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3202, line: 99, baseType: !4130)
!4130 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3202, line: 40, baseType: !4131)
!4131 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !212, baseType: !4132)
!4132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4133)
!4133 = !{!4134}
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4132, file: !212, line: 79, baseType: !106, size: 32)
!4135 = !{!4136, !4137, !4138}
!4136 = !DILocalVariable(name: "fmt", arg: 1, scope: !4126, file: !212, line: 113, type: !118)
!4137 = !DILocalVariable(name: "ap", arg: 2, scope: !4126, file: !212, line: 113, type: !4129)
!4138 = !DILocalVariable(name: "ctx", scope: !4139, file: !212, line: 121, type: !4141)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !212, line: 120, column: 27)
!4140 = distinct !DILexicalBlock(scope: !4126, file: !212, line: 120, column: 6)
!4141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !212, line: 81, size: 32, elements: !4142)
!4142 = !{!4143, !4144}
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4141, file: !212, line: 85, baseType: !32, size: 32)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4141, file: !212, line: 86, baseType: !4145, offset: 32)
!4145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !4146)
!4146 = !{!4147}
!4147 = !DISubrange(count: 0)
!4148 = !DILocation(line: 0, scope: !4126)
!4149 = !DILocation(line: 148, column: 3, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4140, file: !212, line: 138, column: 9)
!4151 = !DILocation(line: 155, column: 1, scope: !4126)
!4152 = distinct !DISubprogram(name: "char_out", scope: !212, file: !212, line: 107, type: !4153, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4155)
!4153 = !DISubroutineType(types: !4154)
!4154 = !{!107, !107, !106}
!4155 = !{!4156, !4157}
!4156 = !DILocalVariable(name: "c", arg: 1, scope: !4152, file: !212, line: 107, type: !107)
!4157 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4152, file: !212, line: 107, type: !106)
!4158 = !DILocation(line: 0, scope: !4152)
!4159 = !DILocation(line: 110, column: 9, scope: !4152)
!4160 = !DILocation(line: 110, column: 2, scope: !4152)
!4161 = distinct !DISubprogram(name: "cbvprintf", scope: !3234, file: !3234, line: 739, type: !4162, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4164)
!4162 = !DISubroutineType(types: !4163)
!4163 = !{!107, !3582, !106, !118, !4129}
!4164 = !{!4165, !4166, !4167, !4168}
!4165 = !DILocalVariable(name: "out", arg: 1, scope: !4161, file: !3234, line: 739, type: !3582)
!4166 = !DILocalVariable(name: "ctx", arg: 2, scope: !4161, file: !3234, line: 739, type: !106)
!4167 = !DILocalVariable(name: "format", arg: 3, scope: !4161, file: !3234, line: 739, type: !118)
!4168 = !DILocalVariable(name: "ap", arg: 4, scope: !4161, file: !3234, line: 739, type: !4129)
!4169 = !DILocation(line: 0, scope: !4161)
!4170 = !DILocation(line: 741, column: 9, scope: !4161)
!4171 = !DILocation(line: 741, column: 2, scope: !4161)
!4172 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !212, file: !212, line: 157, type: !4173, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4175)
!4173 = !DISubroutineType(types: !4174)
!4174 = !{null, !193, !185}
!4175 = !{!4176, !4177, !4178}
!4176 = !DILocalVariable(name: "c", arg: 1, scope: !4172, file: !212, line: 157, type: !193)
!4177 = !DILocalVariable(name: "n", arg: 2, scope: !4172, file: !212, line: 157, type: !185)
!4178 = !DILocalVariable(name: "i", scope: !4172, file: !212, line: 159, type: !185)
!4179 = !DILocation(line: 0, scope: !4172)
!4180 = !DILocation(line: 164, column: 16, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !212, line: 164, column: 2)
!4182 = distinct !DILexicalBlock(scope: !4172, file: !212, line: 164, column: 2)
!4183 = !DILocation(line: 164, column: 2, scope: !4182)
!4184 = !DILocation(line: 165, column: 3, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4181, file: !212, line: 164, column: 26)
!4186 = !DILocation(line: 165, column: 13, scope: !4185)
!4187 = !DILocation(line: 164, column: 22, scope: !4181)
!4188 = distinct !{!4188, !4183, !4189}
!4189 = !DILocation(line: 166, column: 2, scope: !4182)
!4190 = !DILocation(line: 171, column: 1, scope: !4172)
!4191 = distinct !DISubprogram(name: "printk", scope: !212, file: !212, line: 203, type: !4192, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4194)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{null, !118, null}
!4194 = !{!4195, !4196}
!4195 = !DILocalVariable(name: "fmt", arg: 1, scope: !4191, file: !212, line: 203, type: !118)
!4196 = !DILocalVariable(name: "ap", scope: !4191, file: !212, line: 205, type: !4129)
!4197 = !DILocation(line: 0, scope: !4191)
!4198 = !DILocation(line: 205, column: 2, scope: !4191)
!4199 = !DILocation(line: 205, column: 10, scope: !4191)
!4200 = !DILocation(line: 207, column: 2, scope: !4191)
!4201 = !DILocation(line: 209, column: 2, scope: !4191)
!4202 = !DILocation(line: 211, column: 2, scope: !4191)
!4203 = !DILocation(line: 212, column: 1, scope: !4191)
!4204 = distinct !DISubprogram(name: "snprintk", scope: !212, file: !212, line: 239, type: !4205, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4207)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!107, !193, !185, !118, null}
!4207 = !{!4208, !4209, !4210, !4211, !4212}
!4208 = !DILocalVariable(name: "str", arg: 1, scope: !4204, file: !212, line: 239, type: !193)
!4209 = !DILocalVariable(name: "size", arg: 2, scope: !4204, file: !212, line: 239, type: !185)
!4210 = !DILocalVariable(name: "fmt", arg: 3, scope: !4204, file: !212, line: 239, type: !118)
!4211 = !DILocalVariable(name: "ap", scope: !4204, file: !212, line: 241, type: !4129)
!4212 = !DILocalVariable(name: "ret", scope: !4204, file: !212, line: 242, type: !107)
!4213 = !DILocation(line: 0, scope: !4204)
!4214 = !DILocation(line: 241, column: 2, scope: !4204)
!4215 = !DILocation(line: 241, column: 10, scope: !4204)
!4216 = !DILocation(line: 244, column: 2, scope: !4204)
!4217 = !DILocation(line: 245, column: 8, scope: !4204)
!4218 = !DILocation(line: 246, column: 2, scope: !4204)
!4219 = !DILocation(line: 249, column: 1, scope: !4204)
!4220 = !DILocation(line: 248, column: 2, scope: !4204)
!4221 = distinct !DISubprogram(name: "vsnprintk", scope: !212, file: !212, line: 251, type: !4222, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4224)
!4222 = !DISubroutineType(types: !4223)
!4223 = !{!107, !193, !185, !118, !4129}
!4224 = !{!4225, !4226, !4227, !4228, !4229}
!4225 = !DILocalVariable(name: "str", arg: 1, scope: !4221, file: !212, line: 251, type: !193)
!4226 = !DILocalVariable(name: "size", arg: 2, scope: !4221, file: !212, line: 251, type: !185)
!4227 = !DILocalVariable(name: "fmt", arg: 3, scope: !4221, file: !212, line: 251, type: !118)
!4228 = !DILocalVariable(name: "ap", arg: 4, scope: !4221, file: !212, line: 251, type: !4129)
!4229 = !DILocalVariable(name: "ctx", scope: !4221, file: !212, line: 253, type: !4230)
!4230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !212, line: 217, size: 96, elements: !4231)
!4231 = !{!4232, !4233, !4234}
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4230, file: !212, line: 218, baseType: !193, size: 32)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4230, file: !212, line: 219, baseType: !107, size: 32, offset: 32)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4230, file: !212, line: 220, baseType: !107, size: 32, offset: 64)
!4235 = !DILocation(line: 0, scope: !4221)
!4236 = !DILocation(line: 253, column: 2, scope: !4221)
!4237 = !DILocation(line: 253, column: 21, scope: !4221)
!4238 = !DILocation(line: 253, column: 27, scope: !4221)
!4239 = !DILocation(line: 255, column: 2, scope: !4221)
!4240 = !DILocation(line: 257, column: 10, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4221, file: !212, line: 257, column: 6)
!4242 = !DILocation(line: 257, column: 22, scope: !4241)
!4243 = !DILocation(line: 257, column: 16, scope: !4241)
!4244 = !DILocation(line: 257, column: 6, scope: !4221)
!4245 = !DILocation(line: 258, column: 3, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4241, file: !212, line: 257, column: 27)
!4247 = !DILocation(line: 258, column: 18, scope: !4246)
!4248 = !DILocation(line: 259, column: 2, scope: !4246)
!4249 = !DILocation(line: 262, column: 1, scope: !4221)
!4250 = !DILocation(line: 261, column: 2, scope: !4221)
!4251 = distinct !DISubprogram(name: "str_out", scope: !212, file: !212, line: 223, type: !4252, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4255)
!4252 = !DISubroutineType(types: !4253)
!4253 = !{!107, !107, !4254}
!4254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4230, size: 32)
!4255 = !{!4256, !4257}
!4256 = !DILocalVariable(name: "c", arg: 1, scope: !4251, file: !212, line: 223, type: !107)
!4257 = !DILocalVariable(name: "ctx", arg: 2, scope: !4251, file: !212, line: 223, type: !4254)
!4258 = !DILocation(line: 0, scope: !4251)
!4259 = !DILocation(line: 225, column: 11, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4251, file: !212, line: 225, column: 6)
!4261 = !DILocation(line: 225, column: 15, scope: !4260)
!4262 = !DILocation(line: 0, scope: !4260)
!4263 = !DILocation(line: 225, column: 23, scope: !4260)
!4264 = !DILocation(line: 225, column: 45, scope: !4260)
!4265 = !DILocation(line: 225, column: 37, scope: !4260)
!4266 = !DILocation(line: 225, column: 6, scope: !4251)
!4267 = !DILocation(line: 226, column: 8, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4260, file: !212, line: 225, column: 50)
!4269 = !DILocation(line: 226, column: 13, scope: !4268)
!4270 = !DILocation(line: 227, column: 3, scope: !4268)
!4271 = !DILocation(line: 230, column: 29, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4251, file: !212, line: 230, column: 6)
!4273 = !DILocation(line: 230, column: 17, scope: !4272)
!4274 = !DILocation(line: 230, column: 6, scope: !4251)
!4275 = !DILocation(line: 231, column: 22, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4272, file: !212, line: 230, column: 34)
!4277 = !DILocation(line: 231, column: 3, scope: !4276)
!4278 = !DILocation(line: 231, column: 26, scope: !4276)
!4279 = !DILocation(line: 232, column: 2, scope: !4276)
!4280 = !DILocation(line: 233, column: 28, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4272, file: !212, line: 232, column: 9)
!4282 = !DILocation(line: 233, column: 22, scope: !4281)
!4283 = !DILocation(line: 233, column: 3, scope: !4281)
!4284 = !DILocation(line: 233, column: 26, scope: !4281)
!4285 = !DILocation(line: 237, column: 1, scope: !4251)
!4286 = distinct !DISubprogram(name: "z_thread_entry", scope: !4287, file: !4287, line: 30, type: !4288, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2502, retainedNodes: !4290)
!4287 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4288 = !DISubroutineType(types: !4289)
!4289 = !{null, !559, !106, !106, !106}
!4290 = !{!4291, !4292, !4293, !4294}
!4291 = !DILocalVariable(name: "entry", arg: 1, scope: !4286, file: !4287, line: 30, type: !559)
!4292 = !DILocalVariable(name: "p1", arg: 2, scope: !4286, file: !4287, line: 31, type: !106)
!4293 = !DILocalVariable(name: "p2", arg: 3, scope: !4286, file: !4287, line: 31, type: !106)
!4294 = !DILocalVariable(name: "p3", arg: 4, scope: !4286, file: !4287, line: 31, type: !106)
!4295 = !DILocation(line: 0, scope: !4286)
!4296 = !DILocation(line: 36, column: 2, scope: !4286)
!4297 = !DILocation(line: 38, column: 17, scope: !4286)
!4298 = !DILocation(line: 38, column: 2, scope: !4286)
!4299 = !DILocation(line: 45, column: 2, scope: !4286)
!4300 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !4301, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2502, retainedNodes: !2156)
!4301 = !DISubroutineType(types: !4302)
!4302 = !{!4303}
!4303 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !4304)
!4304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4305, size: 32)
!4305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !4306)
!4306 = !{!4307, !4365, !4377, !4378, !4379, !4380, !4381, !4387, !4402}
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4305, file: !309, line: 247, baseType: !4308, size: 384)
!4308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !4309)
!4309 = !{!4310, !4334, !4341, !4342, !4343, !4352, !4353, !4354}
!4310 = !DIDerivedType(tag: DW_TAG_member, scope: !4308, file: !309, line: 60, baseType: !4311, size: 64)
!4311 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4308, file: !309, line: 60, size: 64, elements: !4312)
!4312 = !{!4313, !4328}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4311, file: !309, line: 61, baseType: !4314, size: 64)
!4314 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !4315)
!4315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !4316)
!4316 = !{!4317, !4323}
!4317 = !DIDerivedType(tag: DW_TAG_member, scope: !4315, file: !319, line: 38, baseType: !4318, size: 32)
!4318 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4315, file: !319, line: 38, size: 32, elements: !4319)
!4319 = !{!4320, !4322}
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4318, file: !319, line: 39, baseType: !4321, size: 32)
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4315, size: 32)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4318, file: !319, line: 40, baseType: !4321, size: 32)
!4323 = !DIDerivedType(tag: DW_TAG_member, scope: !4315, file: !319, line: 42, baseType: !4324, size: 32, offset: 32)
!4324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4315, file: !319, line: 42, size: 32, elements: !4325)
!4325 = !{!4326, !4327}
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4324, file: !319, line: 43, baseType: !4321, size: 32)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4324, file: !319, line: 44, baseType: !4321, size: 32)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4311, file: !309, line: 62, baseType: !4329, size: 64)
!4329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !4330)
!4330 = !{!4331}
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4329, file: !335, line: 50, baseType: !4332, size: 64)
!4332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4333, size: 64, elements: !340)
!4333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4329, size: 32)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4308, file: !309, line: 68, baseType: !4335, size: 32, offset: 64)
!4335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4336, size: 32)
!4336 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !4337)
!4337 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !4338)
!4338 = !{!4339}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4337, file: !345, line: 232, baseType: !4340, size: 64)
!4340 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !4315)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4308, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4308, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!4343 = !DIDerivedType(tag: DW_TAG_member, scope: !4308, file: !309, line: 90, baseType: !4344, size: 16, offset: 112)
!4344 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4308, file: !309, line: 90, size: 16, elements: !4345)
!4345 = !{!4346, !4351}
!4346 = !DIDerivedType(tag: DW_TAG_member, scope: !4344, file: !309, line: 91, baseType: !4347, size: 16)
!4347 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4344, file: !309, line: 91, size: 16, elements: !4348)
!4348 = !{!4349, !4350}
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4347, file: !309, line: 96, baseType: !359, size: 8)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4347, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4344, file: !309, line: 100, baseType: !197, size: 16)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4308, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4308, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4308, file: !309, line: 131, baseType: !4355, size: 192, offset: 192)
!4355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !4356)
!4356 = !{!4357, !4358, !4364}
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4355, file: !345, line: 245, baseType: !4314, size: 64)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4355, file: !345, line: 246, baseType: !4359, size: 32, offset: 64)
!4359 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !4360)
!4360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4361, size: 32)
!4361 = !DISubroutineType(types: !4362)
!4362 = !{null, !4363}
!4363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4355, size: 32)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4355, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4305, file: !309, line: 250, baseType: !4366, size: 288, offset: 384)
!4366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !4367)
!4367 = !{!4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376}
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4366, file: !379, line: 26, baseType: !152, size: 32)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4366, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4366, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4366, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4366, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4366, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4366, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4366, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4366, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4305, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4305, file: !309, line: 256, baseType: !4336, size: 64, offset: 704)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4305, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4305, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4305, file: !309, line: 300, baseType: !4382, size: 96, offset: 1056)
!4382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !4383)
!4383 = !{!4384, !4385, !4386}
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4382, file: !309, line: 153, baseType: !22, size: 32)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4382, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4382, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4305, file: !309, line: 325, baseType: !4388, size: 32, offset: 1152)
!4388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4389, size: 32)
!4389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !4390)
!4390 = !{!4391, !4397, !4398}
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4389, file: !406, line: 5074, baseType: !4392, size: 96)
!4392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !4393)
!4393 = !{!4394, !4395, !4396}
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4392, file: !410, line: 57, baseType: !413, size: 32)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4392, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4392, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4389, file: !406, line: 5075, baseType: !4336, size: 64, offset: 96)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4389, file: !406, line: 5076, baseType: !4399, size: 32, offset: 160)
!4399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !4400)
!4400 = !{!4401}
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4399, file: !420, line: 52, baseType: !22, size: 32)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4305, file: !309, line: 343, baseType: !4403, size: 64, offset: 1184)
!4403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !4404)
!4404 = !{!4405, !4406}
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4403, file: !379, line: 63, baseType: !152, size: 32)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4403, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!4407 = !DILocation(line: 535, column: 9, scope: !4300)
!4408 = !DILocation(line: 535, column: 2, scope: !4300)
!4409 = distinct !DISubprogram(name: "k_thread_abort", scope: !4410, file: !4410, line: 188, type: !4411, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2502, retainedNodes: !4413)
!4410 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!4411 = !DISubroutineType(types: !4412)
!4412 = !{null, !4303}
!4413 = !{!4414}
!4414 = !DILocalVariable(name: "thread", arg: 1, scope: !4409, file: !4410, line: 188, type: !4303)
!4415 = !DILocation(line: 0, scope: !4409)
!4416 = !DILocation(line: 197, column: 2, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4409, file: !4410, line: 197, column: 2)
!4418 = !{i64 2154747135}
!4419 = !DILocation(line: 198, column: 2, scope: !4409)
!4420 = !DILocation(line: 199, column: 1, scope: !4409)
!4421 = distinct !DISubprogram(name: "z_current_get", scope: !4410, file: !4410, line: 173, type: !4301, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2502, retainedNodes: !2156)
!4422 = !DILocation(line: 180, column: 2, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4421, file: !4410, line: 180, column: 2)
!4424 = !{i64 2154747067}
!4425 = !DILocation(line: 181, column: 9, scope: !4421)
!4426 = !DILocation(line: 181, column: 2, scope: !4421)
!4427 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2508, file: !2508, line: 1338, type: !4428, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !4436)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{!107, !3582, !106, !118, !4430, !152}
!4430 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3202, line: 99, baseType: !4431)
!4431 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3202, line: 40, baseType: !4432)
!4432 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2508, baseType: !4433)
!4433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4434)
!4434 = !{!4435}
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4433, file: !2508, baseType: !106, size: 32)
!4436 = !{!4437, !4438, !4439, !4440, !4441, !4442, !4446, !4447, !4448, !4450, !4455, !4498, !4501, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4513, !4514, !4515, !4519, !4522, !4524, !4527, !4528, !4529, !4534, !4540, !4543, !4547, !4553, !4557, !4560, !4562, !4565}
!4437 = !DILocalVariable(name: "out", arg: 1, scope: !4427, file: !2508, line: 1338, type: !3582)
!4438 = !DILocalVariable(name: "ctx", arg: 2, scope: !4427, file: !2508, line: 1338, type: !106)
!4439 = !DILocalVariable(name: "fp", arg: 3, scope: !4427, file: !2508, line: 1338, type: !118)
!4440 = !DILocalVariable(name: "ap", arg: 4, scope: !4427, file: !2508, line: 1339, type: !4430)
!4441 = !DILocalVariable(name: "flags", arg: 5, scope: !4427, file: !2508, line: 1339, type: !152)
!4442 = !DILocalVariable(name: "buf", scope: !4427, file: !2508, line: 1341, type: !4443)
!4443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 176, elements: !4444)
!4444 = !{!4445}
!4445 = !DISubrange(count: 22)
!4446 = !DILocalVariable(name: "count", scope: !4427, file: !2508, line: 1342, type: !185)
!4447 = !DILocalVariable(name: "sint", scope: !4427, file: !2508, line: 1343, type: !2527)
!4448 = !DILocalVariable(name: "tagged_ap", scope: !4427, file: !2508, line: 1345, type: !4449)
!4449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!4450 = !DILocalVariable(name: "rc", scope: !4451, file: !2508, line: 1377, type: !107)
!4451 = distinct !DILexicalBlock(scope: !4452, file: !2508, line: 1377, column: 4)
!4452 = distinct !DILexicalBlock(scope: !4453, file: !2508, line: 1376, column: 19)
!4453 = distinct !DILexicalBlock(scope: !4454, file: !2508, line: 1376, column: 7)
!4454 = distinct !DILexicalBlock(scope: !4427, file: !2508, line: 1375, column: 19)
!4455 = !DILocalVariable(name: "state", scope: !4454, file: !2508, line: 1395, type: !4456)
!4456 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4427, file: !2508, line: 1392, size: 192, elements: !4457)
!4457 = !{!4458, !4466}
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4456, file: !2508, line: 1393, baseType: !4459, size: 64)
!4459 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2508, line: 166, size: 64, elements: !4460)
!4460 = !{!4461, !4462, !4463, !4464, !4465}
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4459, file: !2508, line: 168, baseType: !2527, size: 64)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4459, file: !2508, line: 171, baseType: !2530, size: 64)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4459, file: !2508, line: 174, baseType: !183, size: 64)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4459, file: !2508, line: 177, baseType: !181, size: 64)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4459, file: !2508, line: 180, baseType: !106, size: 32)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4456, file: !2508, line: 1394, baseType: !4467, size: 96, offset: 64)
!4467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2508, line: 189, size: 96, elements: !4468)
!4468 = !{!4469, !4470, !4471, !4472, !4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488, !4493}
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4467, file: !2508, line: 191, baseType: !145, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4467, file: !2508, line: 194, baseType: !145, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4467, file: !2508, line: 197, baseType: !145, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4467, file: !2508, line: 200, baseType: !145, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4467, file: !2508, line: 203, baseType: !145, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4467, file: !2508, line: 206, baseType: !145, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4467, file: !2508, line: 209, baseType: !145, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4467, file: !2508, line: 212, baseType: !145, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4467, file: !2508, line: 219, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4467, file: !2508, line: 222, baseType: !145, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4467, file: !2508, line: 229, baseType: !145, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4467, file: !2508, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4467, file: !2508, line: 238, baseType: !145, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4467, file: !2508, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4467, file: !2508, line: 244, baseType: !145, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4467, file: !2508, line: 247, baseType: !145, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4467, file: !2508, line: 252, baseType: !145, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4467, file: !2508, line: 257, baseType: !145, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4467, file: !2508, line: 260, baseType: !196, size: 8, offset: 24)
!4488 = !DIDerivedType(tag: DW_TAG_member, scope: !4467, file: !2508, line: 262, baseType: !4489, size: 32, offset: 32)
!4489 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4467, file: !2508, line: 262, size: 32, elements: !4490)
!4490 = !{!4491, !4492}
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4489, file: !2508, line: 267, baseType: !107, size: 32)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4489, file: !2508, line: 289, baseType: !107, size: 32)
!4493 = !DIDerivedType(tag: DW_TAG_member, scope: !4467, file: !2508, line: 292, baseType: !4494, size: 32, offset: 64)
!4494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4467, file: !2508, line: 292, size: 32, elements: !4495)
!4495 = !{!4496, !4497}
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4494, file: !2508, line: 297, baseType: !107, size: 32)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4494, file: !2508, line: 306, baseType: !107, size: 32)
!4498 = !DILocalVariable(name: "conv", scope: !4454, file: !2508, line: 1400, type: !4499)
!4499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4500)
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4467, size: 32)
!4501 = !DILocalVariable(name: "value", scope: !4454, file: !2508, line: 1401, type: !4502)
!4502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4503)
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4459, size: 32)
!4504 = !DILocalVariable(name: "sp", scope: !4454, file: !2508, line: 1402, type: !118)
!4505 = !DILocalVariable(name: "width", scope: !4454, file: !2508, line: 1403, type: !107)
!4506 = !DILocalVariable(name: "precision", scope: !4454, file: !2508, line: 1404, type: !107)
!4507 = !DILocalVariable(name: "bps", scope: !4454, file: !2508, line: 1405, type: !118)
!4508 = !DILocalVariable(name: "bpe", scope: !4454, file: !2508, line: 1406, type: !118)
!4509 = !DILocalVariable(name: "sign", scope: !4454, file: !2508, line: 1407, type: !120)
!4510 = !DILocalVariable(name: "arg", scope: !4511, file: !2508, line: 1432, type: !107)
!4511 = distinct !DILexicalBlock(scope: !4512, file: !2508, line: 1431, column: 24)
!4512 = distinct !DILexicalBlock(scope: !4454, file: !2508, line: 1431, column: 7)
!4513 = !DILocalVariable(name: "specifier_cat", scope: !4454, file: !2508, line: 1468, type: !2507)
!4514 = !DILocalVariable(name: "length_mod", scope: !4454, file: !2508, line: 1470, type: !2515)
!4515 = !DILocalVariable(name: "rc", scope: !4516, file: !2508, line: 1575, type: !107)
!4516 = distinct !DILexicalBlock(scope: !4517, file: !2508, line: 1575, column: 4)
!4517 = distinct !DILexicalBlock(scope: !4518, file: !2508, line: 1574, column: 43)
!4518 = distinct !DILexicalBlock(scope: !4454, file: !2508, line: 1574, column: 7)
!4519 = !DILocalVariable(name: "rc", scope: !4520, file: !2508, line: 1584, type: !107)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !2508, line: 1584, column: 4)
!4521 = distinct !DILexicalBlock(scope: !4454, file: !2508, line: 1582, column: 28)
!4522 = !DILocalVariable(name: "len", scope: !4523, file: !2508, line: 1589, type: !185)
!4523 = distinct !DILexicalBlock(scope: !4521, file: !2508, line: 1586, column: 13)
!4524 = !DILocalVariable(name: "len", scope: !4525, file: !2508, line: 1641, type: !185)
!4525 = distinct !DILexicalBlock(scope: !4526, file: !2508, line: 1640, column: 24)
!4526 = distinct !DILexicalBlock(scope: !4521, file: !2508, line: 1640, column: 8)
!4527 = !DILocalVariable(name: "nj_len", scope: !4454, file: !2508, line: 1722, type: !185)
!4528 = !DILocalVariable(name: "pad_len", scope: !4454, file: !2508, line: 1723, type: !107)
!4529 = !DILocalVariable(name: "pad", scope: !4530, file: !2508, line: 1751, type: !120)
!4530 = distinct !DILexicalBlock(scope: !4531, file: !2508, line: 1750, column: 26)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !2508, line: 1750, column: 8)
!4532 = distinct !DILexicalBlock(scope: !4533, file: !2508, line: 1747, column: 18)
!4533 = distinct !DILexicalBlock(scope: !4454, file: !2508, line: 1747, column: 7)
!4534 = !DILocalVariable(name: "rc", scope: !4535, file: !2508, line: 1758, type: !107)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !2508, line: 1758, column: 7)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !2508, line: 1757, column: 21)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !2508, line: 1757, column: 10)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !2508, line: 1756, column: 26)
!4539 = distinct !DILexicalBlock(scope: !4530, file: !2508, line: 1756, column: 9)
!4540 = !DILocalVariable(name: "rc", scope: !4541, file: !2508, line: 1765, type: !107)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !2508, line: 1765, column: 6)
!4542 = distinct !DILexicalBlock(scope: !4530, file: !2508, line: 1764, column: 25)
!4543 = !DILocalVariable(name: "rc", scope: !4544, file: !2508, line: 1774, type: !107)
!4544 = distinct !DILexicalBlock(scope: !4545, file: !2508, line: 1774, column: 4)
!4545 = distinct !DILexicalBlock(scope: !4546, file: !2508, line: 1773, column: 18)
!4546 = distinct !DILexicalBlock(scope: !4454, file: !2508, line: 1773, column: 7)
!4547 = !DILocalVariable(name: "rc", scope: !4548, file: !2508, line: 1819, type: !107)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !2508, line: 1819, column: 5)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !2508, line: 1818, column: 44)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !2508, line: 1818, column: 8)
!4551 = distinct !DILexicalBlock(scope: !4552, file: !2508, line: 1817, column: 10)
!4552 = distinct !DILexicalBlock(scope: !4454, file: !2508, line: 1777, column: 7)
!4553 = !DILocalVariable(name: "rc", scope: !4554, file: !2508, line: 1823, type: !107)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !2508, line: 1823, column: 5)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !2508, line: 1822, column: 26)
!4556 = distinct !DILexicalBlock(scope: !4551, file: !2508, line: 1822, column: 8)
!4557 = !DILocalVariable(name: "rc", scope: !4558, file: !2508, line: 1828, type: !107)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !2508, line: 1828, column: 5)
!4559 = distinct !DILexicalBlock(scope: !4551, file: !2508, line: 1827, column: 26)
!4560 = !DILocalVariable(name: "rc", scope: !4561, file: !2508, line: 1831, type: !107)
!4561 = distinct !DILexicalBlock(scope: !4551, file: !2508, line: 1831, column: 4)
!4562 = !DILocalVariable(name: "rc", scope: !4563, file: !2508, line: 1836, type: !107)
!4563 = distinct !DILexicalBlock(scope: !4564, file: !2508, line: 1836, column: 4)
!4564 = distinct !DILexicalBlock(scope: !4454, file: !2508, line: 1835, column: 21)
!4565 = !DILabel(scope: !4521, name: "prec_int_pad0", file: !2508, line: 1634)
!4566 = !DILocation(line: 0, scope: !4427)
!4567 = !DILocation(line: 1341, column: 2, scope: !4427)
!4568 = !DILocation(line: 1341, column: 7, scope: !4427)
!4569 = !DILocation(line: 1375, column: 2, scope: !4427)
!4570 = !DILocation(line: 1342, column: 9, scope: !4427)
!4571 = !DILocation(line: 1375, column: 9, scope: !4427)
!4572 = !DILocation(line: 1377, column: 4, scope: !4451)
!4573 = !DILocation(line: 0, scope: !4451)
!4574 = !DILocation(line: 1377, column: 4, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4451, file: !2508, line: 1377, column: 4)
!4576 = distinct !{!4576, !4569, !4577}
!4577 = !DILocation(line: 1839, column: 2, scope: !4427)
!4578 = !DILocation(line: 1392, column: 3, scope: !4454)
!4579 = !DILocation(line: 1395, column: 5, scope: !4454)
!4580 = !DILocation(line: 0, scope: !4454)
!4581 = !DILocation(line: 1409, column: 8, scope: !4454)
!4582 = !DILocation(line: 1414, column: 13, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4454, file: !2508, line: 1414, column: 7)
!4584 = !DILocation(line: 1414, column: 7, scope: !4454)
!4585 = !DILocation(line: 1415, column: 12, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4583, file: !2508, line: 1414, column: 25)
!4587 = !DILocation(line: 1417, column: 14, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4586, file: !2508, line: 1417, column: 8)
!4589 = !DILocation(line: 1417, column: 8, scope: !4586)
!4590 = !DILocation(line: 1418, column: 21, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4588, file: !2508, line: 1417, column: 19)
!4592 = !DILocation(line: 1419, column: 13, scope: !4591)
!4593 = !DILocation(line: 1420, column: 4, scope: !4591)
!4594 = !DILocation(line: 1421, column: 20, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4583, file: !2508, line: 1421, column: 14)
!4596 = !DILocation(line: 1421, column: 14, scope: !4583)
!4597 = !DILocation(line: 1431, column: 13, scope: !4512)
!4598 = !DILocation(line: 1431, column: 7, scope: !4454)
!4599 = !DILocation(line: 1432, column: 14, scope: !4511)
!4600 = !DILocation(line: 0, scope: !4511)
!4601 = !DILocation(line: 1434, column: 12, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4511, file: !2508, line: 1434, column: 8)
!4603 = !DILocation(line: 1434, column: 8, scope: !4511)
!4604 = !DILocation(line: 1435, column: 24, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4602, file: !2508, line: 1434, column: 17)
!4606 = !DILocation(line: 1436, column: 4, scope: !4605)
!4607 = !DILocation(line: 1439, column: 20, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4512, file: !2508, line: 1439, column: 14)
!4609 = !DILocation(line: 1439, column: 14, scope: !4512)
!4610 = !DILocation(line: 1469, column: 37, scope: !4454)
!4611 = !DILocation(line: 1448, column: 20, scope: !4454)
!4612 = !DILocation(line: 1449, column: 22, scope: !4454)
!4613 = !DILocation(line: 1471, column: 34, scope: !4454)
!4614 = !DILocation(line: 1478, column: 7, scope: !4454)
!4615 = !DILocation(line: 1479, column: 4, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4617, file: !2508, line: 1478, column: 40)
!4617 = distinct !DILexicalBlock(scope: !4454, file: !2508, line: 1478, column: 7)
!4618 = !DILocation(line: 1484, column: 19, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4616, file: !2508, line: 1479, column: 24)
!4620 = !DILocation(line: 1484, column: 17, scope: !4619)
!4621 = !DILocation(line: 1485, column: 5, scope: !4619)
!4622 = !DILocation(line: 1492, column: 20, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !2508, line: 1491, column: 12)
!4624 = distinct !DILexicalBlock(scope: !4619, file: !2508, line: 1487, column: 9)
!4625 = !DILocation(line: 1492, column: 18, scope: !4623)
!4626 = !DILocation(line: 1494, column: 5, scope: !4619)
!4627 = !DILocation(line: 1497, column: 23, scope: !4619)
!4628 = !DILocation(line: 1496, column: 17, scope: !4619)
!4629 = !DILocation(line: 1498, column: 5, scope: !4619)
!4630 = !DILocation(line: 1501, column: 23, scope: !4619)
!4631 = !DILocation(line: 1500, column: 17, scope: !4619)
!4632 = !DILocation(line: 1502, column: 5, scope: !4619)
!4633 = !DILocation(line: 1513, column: 23, scope: !4619)
!4634 = !DILocation(line: 1513, column: 6, scope: !4619)
!4635 = !DILocation(line: 1512, column: 17, scope: !4619)
!4636 = !DILocation(line: 1514, column: 5, scope: !4619)
!4637 = !DILocation(line: 0, scope: !4619)
!4638 = !DILocation(line: 1516, column: 8, scope: !4616)
!4639 = !DILocation(line: 1517, column: 19, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4641, file: !2508, line: 1516, column: 33)
!4641 = distinct !DILexicalBlock(scope: !4616, file: !2508, line: 1516, column: 8)
!4642 = !DILocation(line: 1517, column: 17, scope: !4640)
!4643 = !DILocation(line: 1518, column: 4, scope: !4640)
!4644 = !DILocation(line: 1519, column: 19, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !2508, line: 1518, column: 39)
!4646 = distinct !DILexicalBlock(scope: !4641, file: !2508, line: 1518, column: 15)
!4647 = !DILocation(line: 1519, column: 17, scope: !4645)
!4648 = !DILocation(line: 1520, column: 4, scope: !4645)
!4649 = !DILocation(line: 1522, column: 4, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !2508, line: 1521, column: 47)
!4651 = distinct !DILexicalBlock(scope: !4617, file: !2508, line: 1521, column: 14)
!4652 = !DILocation(line: 1527, column: 19, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4650, file: !2508, line: 1522, column: 24)
!4654 = !DILocation(line: 1527, column: 17, scope: !4653)
!4655 = !DILocation(line: 1528, column: 5, scope: !4653)
!4656 = !DILocation(line: 0, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4653, file: !2508, line: 1530, column: 9)
!4658 = !DILocation(line: 1540, column: 23, scope: !4653)
!4659 = !DILocation(line: 1539, column: 17, scope: !4653)
!4660 = !DILocation(line: 1542, column: 5, scope: !4653)
!4661 = !DILocation(line: 1545, column: 23, scope: !4653)
!4662 = !DILocation(line: 1544, column: 17, scope: !4653)
!4663 = !DILocation(line: 1547, column: 5, scope: !4653)
!4664 = !DILocation(line: 1551, column: 23, scope: !4653)
!4665 = !DILocation(line: 1551, column: 6, scope: !4653)
!4666 = !DILocation(line: 1550, column: 17, scope: !4653)
!4667 = !DILocation(line: 1552, column: 5, scope: !4653)
!4668 = !DILocation(line: 0, scope: !4653)
!4669 = !DILocation(line: 1554, column: 8, scope: !4650)
!4670 = !DILocation(line: 1555, column: 19, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4672, file: !2508, line: 1554, column: 33)
!4672 = distinct !DILexicalBlock(scope: !4650, file: !2508, line: 1554, column: 8)
!4673 = !DILocation(line: 1555, column: 17, scope: !4671)
!4674 = !DILocation(line: 1556, column: 4, scope: !4671)
!4675 = !DILocation(line: 1557, column: 19, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4677, file: !2508, line: 1556, column: 39)
!4677 = distinct !DILexicalBlock(scope: !4672, file: !2508, line: 1556, column: 15)
!4678 = !DILocation(line: 1557, column: 17, scope: !4676)
!4679 = !DILocation(line: 1558, column: 4, scope: !4676)
!4680 = !DILocation(line: 0, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !2508, line: 1560, column: 8)
!4682 = distinct !DILexicalBlock(scope: !4683, file: !2508, line: 1559, column: 45)
!4683 = distinct !DILexicalBlock(scope: !4651, file: !2508, line: 1559, column: 14)
!4684 = !DILocation(line: 1566, column: 17, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4686, file: !2508, line: 1565, column: 46)
!4686 = distinct !DILexicalBlock(scope: !4683, file: !2508, line: 1565, column: 14)
!4687 = !DILocation(line: 1566, column: 15, scope: !4685)
!4688 = !DILocation(line: 1567, column: 3, scope: !4685)
!4689 = !DILocation(line: 1574, column: 21, scope: !4518)
!4690 = !DILocation(line: 1575, column: 4, scope: !4516)
!4691 = !DILocation(line: 0, scope: !4516)
!4692 = !DILocation(line: 1575, column: 4, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4516, file: !2508, line: 1575, column: 4)
!4694 = !DILocation(line: 1582, column: 17, scope: !4454)
!4695 = !DILocation(line: 1582, column: 3, scope: !4454)
!4696 = !DILocation(line: 1584, column: 4, scope: !4520)
!4697 = !DILocation(line: 0, scope: !4520)
!4698 = !DILocation(line: 1584, column: 4, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4520, file: !2508, line: 1584, column: 4)
!4700 = !DILocation(line: 1587, column: 31, scope: !4523)
!4701 = !DILocation(line: 1591, column: 18, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4523, file: !2508, line: 1591, column: 8)
!4703 = !DILocation(line: 1591, column: 8, scope: !4523)
!4704 = !DILocation(line: 1592, column: 11, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4702, file: !2508, line: 1591, column: 24)
!4706 = !DILocation(line: 0, scope: !4523)
!4707 = !DILocation(line: 1593, column: 4, scope: !4705)
!4708 = !DILocation(line: 1594, column: 11, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4702, file: !2508, line: 1593, column: 11)
!4710 = !DILocation(line: 1604, column: 51, scope: !4521)
!4711 = !DILocation(line: 1604, column: 13, scope: !4521)
!4712 = !DILocation(line: 1604, column: 11, scope: !4521)
!4713 = !DILocation(line: 1606, column: 4, scope: !4521)
!4714 = !DILocation(line: 1609, column: 14, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4521, file: !2508, line: 1609, column: 8)
!4716 = !DILocation(line: 1609, column: 8, scope: !4521)
!4717 = !DILocation(line: 1619, column: 18, scope: !4521)
!4718 = !DILocation(line: 1620, column: 13, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4521, file: !2508, line: 1620, column: 8)
!4720 = !DILocation(line: 1620, column: 8, scope: !4521)
!4721 = !DILocation(line: 1622, column: 36, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4719, file: !2508, line: 1620, column: 18)
!4723 = !DILocation(line: 1622, column: 17, scope: !4722)
!4724 = !DILocation(line: 1623, column: 4, scope: !4722)
!4725 = !DILocation(line: 1632, column: 29, scope: !4521)
!4726 = !DILocation(line: 1632, column: 10, scope: !4521)
!4727 = !DILocation(line: 1632, column: 4, scope: !4521)
!4728 = !DILocation(line: 1407, column: 8, scope: !4454)
!4729 = !DILocation(line: 0, scope: !4521)
!4730 = !DILocation(line: 1634, column: 3, scope: !4521)
!4731 = !DILocation(line: 1640, column: 18, scope: !4526)
!4732 = !DILocation(line: 1640, column: 8, scope: !4521)
!4733 = !DILocation(line: 1729, column: 13, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4454, file: !2508, line: 1729, column: 7)
!4735 = !DILocation(line: 1641, column: 22, scope: !4525)
!4736 = !DILocation(line: 0, scope: !4525)
!4737 = !DILocation(line: 1646, column: 21, scope: !4525)
!4738 = !DILocation(line: 1649, column: 13, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4525, file: !2508, line: 1649, column: 9)
!4740 = !DILocation(line: 1649, column: 9, scope: !4525)
!4741 = !DILocation(line: 1650, column: 35, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4739, file: !2508, line: 1649, column: 34)
!4743 = !DILocation(line: 1650, column: 23, scope: !4742)
!4744 = !DILocation(line: 1651, column: 5, scope: !4742)
!4745 = !DILocation(line: 1660, column: 15, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4521, file: !2508, line: 1660, column: 8)
!4747 = !DILocation(line: 1660, column: 19, scope: !4746)
!4748 = !DILocation(line: 1660, column: 8, scope: !4521)
!4749 = !DILocation(line: 1661, column: 23, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4746, file: !2508, line: 1660, column: 28)
!4751 = !DILocation(line: 1661, column: 11, scope: !4750)
!4752 = !DILocation(line: 1665, column: 22, scope: !4750)
!4753 = !DILocation(line: 1666, column: 21, scope: !4750)
!4754 = !DILocation(line: 1668, column: 5, scope: !4750)
!4755 = !DILocation(line: 1677, column: 30, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4757, file: !2508, line: 1676, column: 49)
!4757 = distinct !DILexicalBlock(scope: !4521, file: !2508, line: 1676, column: 8)
!4758 = !DILocation(line: 1677, column: 5, scope: !4756)
!4759 = !DILocation(line: 1680, column: 4, scope: !4521)
!4760 = !DILocation(line: 0, scope: !4702)
!4761 = !DILocation(line: 1597, column: 14, scope: !4523)
!4762 = !DILocation(line: 1699, column: 11, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4454, file: !2508, line: 1699, column: 7)
!4764 = !DILocation(line: 1699, column: 7, scope: !4454)
!4765 = !DILocation(line: 1725, column: 7, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4454, file: !2508, line: 1725, column: 7)
!4767 = !DILocation(line: 1725, column: 12, scope: !4766)
!4768 = !DILocation(line: 1747, column: 13, scope: !4533)
!4769 = !DILocation(line: 1747, column: 7, scope: !4454)
!4770 = !DILocation(line: 1722, column: 24, scope: !4454)
!4771 = !DILocation(line: 1725, column: 7, scope: !4454)
!4772 = !DILocation(line: 1729, column: 7, scope: !4454)
!4773 = !DILocation(line: 1736, column: 13, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4454, file: !2508, line: 1736, column: 7)
!4775 = !DILocation(line: 1735, column: 19, scope: !4454)
!4776 = !DILocation(line: 1736, column: 7, scope: !4454)
!4777 = !DILocation(line: 1748, column: 10, scope: !4532)
!4778 = !DILocation(line: 1750, column: 15, scope: !4531)
!4779 = !DILocation(line: 1750, column: 8, scope: !4532)
!4780 = !DILocation(line: 0, scope: !4530)
!4781 = !DILocation(line: 1756, column: 15, scope: !4539)
!4782 = !DILocation(line: 1756, column: 9, scope: !4530)
!4783 = !DILocation(line: 1758, column: 7, scope: !4535)
!4784 = !DILocation(line: 0, scope: !4535)
!4785 = !DILocation(line: 1758, column: 7, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4535, file: !2508, line: 1758, column: 7)
!4787 = !DILocation(line: 1764, column: 5, scope: !4530)
!4788 = !DILocation(line: 0, scope: !4532)
!4789 = !DILocation(line: 1764, column: 20, scope: !4530)
!4790 = !DILocation(line: 1764, column: 17, scope: !4530)
!4791 = !DILocation(line: 1765, column: 6, scope: !4541)
!4792 = !DILocation(line: 0, scope: !4541)
!4793 = !DILocation(line: 1765, column: 6, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4541, file: !2508, line: 1765, column: 6)
!4795 = distinct !{!4795, !4787, !4796}
!4796 = !DILocation(line: 1766, column: 5, scope: !4530)
!4797 = !DILocation(line: 1773, column: 12, scope: !4546)
!4798 = !DILocation(line: 1773, column: 7, scope: !4454)
!4799 = !DILocation(line: 1773, column: 7, scope: !4546)
!4800 = !DILocation(line: 1774, column: 4, scope: !4544)
!4801 = !DILocation(line: 0, scope: !4544)
!4802 = !DILocation(line: 1774, column: 4, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4544, file: !2508, line: 1774, column: 4)
!4804 = !DILocation(line: 1818, column: 8, scope: !4550)
!4805 = !DILocation(line: 1818, column: 27, scope: !4550)
!4806 = !DILocation(line: 1818, column: 25, scope: !4550)
!4807 = !DILocation(line: 1818, column: 8, scope: !4551)
!4808 = !DILocation(line: 1819, column: 5, scope: !4548)
!4809 = !DILocation(line: 0, scope: !4548)
!4810 = !DILocation(line: 1819, column: 5, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4548, file: !2508, line: 1819, column: 5)
!4812 = !DILocation(line: 1822, column: 14, scope: !4556)
!4813 = !DILocation(line: 1822, column: 8, scope: !4551)
!4814 = !DILocation(line: 1823, column: 5, scope: !4554)
!4815 = !DILocation(line: 0, scope: !4554)
!4816 = !DILocation(line: 1823, column: 5, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4554, file: !2508, line: 1823, column: 5)
!4818 = !DILocation(line: 1826, column: 20, scope: !4551)
!4819 = !DILocation(line: 1827, column: 4, scope: !4551)
!4820 = !DILocation(line: 0, scope: !4551)
!4821 = !DILocation(line: 1827, column: 21, scope: !4551)
!4822 = !DILocation(line: 1827, column: 18, scope: !4551)
!4823 = !DILocation(line: 1828, column: 5, scope: !4558)
!4824 = !DILocation(line: 0, scope: !4558)
!4825 = !DILocation(line: 1828, column: 5, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4558, file: !2508, line: 1828, column: 5)
!4827 = distinct !{!4827, !4819, !4828}
!4828 = !DILocation(line: 1829, column: 4, scope: !4551)
!4829 = !DILocation(line: 1831, column: 4, scope: !4561)
!4830 = !DILocation(line: 0, scope: !4561)
!4831 = !DILocation(line: 1831, column: 4, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4561, file: !2508, line: 1831, column: 4)
!4833 = !DILocation(line: 1835, column: 16, scope: !4454)
!4834 = !DILocation(line: 1835, column: 3, scope: !4454)
!4835 = !DILocation(line: 1836, column: 4, scope: !4563)
!4836 = !DILocation(line: 0, scope: !4563)
!4837 = !DILocation(line: 1836, column: 4, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4563, file: !2508, line: 1836, column: 4)
!4839 = !DILocation(line: 1837, column: 4, scope: !4564)
!4840 = distinct !{!4840, !4834, !4841}
!4841 = !DILocation(line: 1838, column: 3, scope: !4454)
!4842 = !DILocation(line: 1844, column: 1, scope: !4427)
!4843 = distinct !DISubprogram(name: "extract_conversion", scope: !2508, file: !2508, line: 642, type: !4844, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !4846)
!4844 = !DISubroutineType(types: !4845)
!4845 = !{!118, !4500, !118}
!4846 = !{!4847, !4848}
!4847 = !DILocalVariable(name: "conv", arg: 1, scope: !4843, file: !2508, line: 642, type: !4500)
!4848 = !DILocalVariable(name: "sp", arg: 2, scope: !4843, file: !2508, line: 643, type: !118)
!4849 = !DILocation(line: 0, scope: !4843)
!4850 = !DILocation(line: 645, column: 10, scope: !4843)
!4851 = !DILocation(line: 653, column: 2, scope: !4843)
!4852 = !DILocation(line: 654, column: 6, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4843, file: !2508, line: 654, column: 6)
!4854 = !DILocation(line: 654, column: 10, scope: !4853)
!4855 = !DILocation(line: 654, column: 6, scope: !4843)
!4856 = !DILocation(line: 655, column: 24, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4853, file: !2508, line: 654, column: 18)
!4858 = !DILocation(line: 655, column: 19, scope: !4857)
!4859 = !DILocation(line: 656, column: 3, scope: !4857)
!4860 = !DILocation(line: 659, column: 7, scope: !4843)
!4861 = !DILocation(line: 660, column: 7, scope: !4843)
!4862 = !DILocation(line: 661, column: 7, scope: !4843)
!4863 = !DILocation(line: 662, column: 7, scope: !4843)
!4864 = !DILocation(line: 663, column: 7, scope: !4843)
!4865 = !DILocation(line: 665, column: 2, scope: !4843)
!4866 = !DILocation(line: 666, column: 1, scope: !4843)
!4867 = distinct !DISubprogram(name: "outs", scope: !2508, file: !2508, line: 1319, type: !4868, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !4870)
!4868 = !DISubroutineType(types: !4869)
!4869 = !{!107, !3582, !106, !118, !118}
!4870 = !{!4871, !4872, !4873, !4874, !4875, !4876}
!4871 = !DILocalVariable(name: "out", arg: 1, scope: !4867, file: !2508, line: 1319, type: !3582)
!4872 = !DILocalVariable(name: "ctx", arg: 2, scope: !4867, file: !2508, line: 1320, type: !106)
!4873 = !DILocalVariable(name: "sp", arg: 3, scope: !4867, file: !2508, line: 1321, type: !118)
!4874 = !DILocalVariable(name: "ep", arg: 4, scope: !4867, file: !2508, line: 1322, type: !118)
!4875 = !DILocalVariable(name: "count", scope: !4867, file: !2508, line: 1324, type: !185)
!4876 = !DILocalVariable(name: "rc", scope: !4877, file: !2508, line: 1327, type: !107)
!4877 = distinct !DILexicalBlock(scope: !4867, file: !2508, line: 1326, column: 45)
!4878 = !DILocation(line: 0, scope: !4867)
!4879 = !DILocation(line: 1326, column: 2, scope: !4867)
!4880 = !DILocation(line: 1324, column: 9, scope: !4867)
!4881 = !DILocation(line: 1326, column: 13, scope: !4867)
!4882 = !DILocation(line: 1326, column: 19, scope: !4867)
!4883 = !DILocation(line: 1327, column: 21, scope: !4877)
!4884 = !DILocation(line: 1326, column: 36, scope: !4867)
!4885 = !DILocation(line: 1326, column: 39, scope: !4867)
!4886 = !DILocation(line: 1327, column: 24, scope: !4877)
!4887 = !DILocation(line: 1327, column: 16, scope: !4877)
!4888 = !DILocation(line: 1327, column: 12, scope: !4877)
!4889 = !DILocation(line: 0, scope: !4877)
!4890 = !DILocation(line: 1329, column: 10, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4877, file: !2508, line: 1329, column: 7)
!4892 = !DILocation(line: 1329, column: 7, scope: !4877)
!4893 = distinct !{!4893, !4879, !4894}
!4894 = !DILocation(line: 1333, column: 2, scope: !4867)
!4895 = !DILocation(line: 1336, column: 1, scope: !4867)
!4896 = distinct !DISubprogram(name: "encode_uint", scope: !2508, file: !2508, line: 788, type: !4897, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !4899)
!4897 = !DISubroutineType(types: !4898)
!4898 = !{!193, !2530, !4500, !193, !118}
!4899 = !{!4900, !4901, !4902, !4903, !4904, !4905, !4907, !4908}
!4900 = !DILocalVariable(name: "value", arg: 1, scope: !4896, file: !2508, line: 788, type: !2530)
!4901 = !DILocalVariable(name: "conv", arg: 2, scope: !4896, file: !2508, line: 789, type: !4500)
!4902 = !DILocalVariable(name: "bps", arg: 3, scope: !4896, file: !2508, line: 790, type: !193)
!4903 = !DILocalVariable(name: "bpe", arg: 4, scope: !4896, file: !2508, line: 791, type: !118)
!4904 = !DILocalVariable(name: "upcase", scope: !4896, file: !2508, line: 793, type: !145)
!4905 = !DILocalVariable(name: "radix", scope: !4896, file: !2508, line: 794, type: !4906)
!4906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4907 = !DILocalVariable(name: "bp", scope: !4896, file: !2508, line: 795, type: !193)
!4908 = !DILocalVariable(name: "lsv", scope: !4909, file: !2508, line: 798, type: !32)
!4909 = distinct !DILexicalBlock(scope: !4896, file: !2508, line: 797, column: 5)
!4910 = !DILocation(line: 0, scope: !4896)
!4911 = !DILocation(line: 793, column: 35, scope: !4896)
!4912 = !DILocation(line: 793, column: 24, scope: !4896)
!4913 = !DILocation(line: 793, column: 16, scope: !4896)
!4914 = !DILocation(line: 794, column: 29, scope: !4896)
!4915 = !DILocation(line: 795, column: 24, scope: !4896)
!4916 = !DILocation(line: 795, column: 17, scope: !4896)
!4917 = !DILocation(line: 797, column: 2, scope: !4896)
!4918 = !DILocation(line: 802, column: 9, scope: !4909)
!4919 = !DILocation(line: 798, column: 22, scope: !4909)
!4920 = !DILocation(line: 0, scope: !4909)
!4921 = !DILocation(line: 800, column: 16, scope: !4909)
!4922 = !DILocation(line: 800, column: 11, scope: !4909)
!4923 = !DILocation(line: 800, column: 4, scope: !4909)
!4924 = !DILocation(line: 800, column: 9, scope: !4909)
!4925 = !DILocation(line: 803, column: 18, scope: !4896)
!4926 = !DILocation(line: 803, column: 24, scope: !4896)
!4927 = !DILocation(line: 803, column: 2, scope: !4909)
!4928 = distinct !{!4928, !4917, !4929}
!4929 = !DILocation(line: 803, column: 37, scope: !4896)
!4930 = !DILocation(line: 808, column: 12, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4896, file: !2508, line: 808, column: 6)
!4932 = !DILocation(line: 808, column: 6, scope: !4896)
!4933 = !DILocation(line: 809, column: 7, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4931, file: !2508, line: 808, column: 23)
!4935 = !DILocation(line: 813, column: 3, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4937, file: !2508, line: 811, column: 27)
!4937 = distinct !DILexicalBlock(scope: !4938, file: !2508, line: 811, column: 14)
!4938 = distinct !DILexicalBlock(scope: !4934, file: !2508, line: 809, column: 7)
!4939 = !DILocation(line: 0, scope: !4938)
!4940 = !DILocation(line: 818, column: 2, scope: !4896)
!4941 = distinct !DISubprogram(name: "store_count", scope: !2508, file: !2508, line: 1280, type: !4942, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !4946)
!4942 = !DISubroutineType(types: !4943)
!4943 = !{null, !4944, !106, !107}
!4944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4945, size: 32)
!4945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4467)
!4946 = !{!4947, !4948, !4949}
!4947 = !DILocalVariable(name: "conv", arg: 1, scope: !4941, file: !2508, line: 1280, type: !4944)
!4948 = !DILocalVariable(name: "dp", arg: 2, scope: !4941, file: !2508, line: 1281, type: !106)
!4949 = !DILocalVariable(name: "count", arg: 3, scope: !4941, file: !2508, line: 1282, type: !107)
!4950 = !DILocation(line: 0, scope: !4941)
!4951 = !DILocation(line: 1284, column: 38, scope: !4941)
!4952 = !DILocation(line: 1284, column: 2, scope: !4941)
!4953 = !DILocation(line: 1286, column: 4, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4941, file: !2508, line: 1284, column: 50)
!4955 = !DILocation(line: 1286, column: 14, scope: !4954)
!4956 = !DILocation(line: 1287, column: 3, scope: !4954)
!4957 = !DILocation(line: 1289, column: 24, scope: !4954)
!4958 = !DILocation(line: 1289, column: 22, scope: !4954)
!4959 = !DILocation(line: 1290, column: 3, scope: !4954)
!4960 = !DILocation(line: 1292, column: 18, scope: !4954)
!4961 = !DILocation(line: 1292, column: 4, scope: !4954)
!4962 = !DILocation(line: 1292, column: 16, scope: !4954)
!4963 = !DILocation(line: 1293, column: 3, scope: !4954)
!4964 = !DILocation(line: 1295, column: 4, scope: !4954)
!4965 = !DILocation(line: 1295, column: 15, scope: !4954)
!4966 = !DILocation(line: 1296, column: 3, scope: !4954)
!4967 = !DILocation(line: 1298, column: 22, scope: !4954)
!4968 = !DILocation(line: 1298, column: 4, scope: !4954)
!4969 = !DILocation(line: 1298, column: 20, scope: !4954)
!4970 = !DILocation(line: 1299, column: 3, scope: !4954)
!4971 = !DILocation(line: 1301, column: 21, scope: !4954)
!4972 = !DILocation(line: 1301, column: 4, scope: !4954)
!4973 = !DILocation(line: 1301, column: 19, scope: !4954)
!4974 = !DILocation(line: 1302, column: 3, scope: !4954)
!4975 = !DILocation(line: 1304, column: 4, scope: !4954)
!4976 = !DILocation(line: 1304, column: 17, scope: !4954)
!4977 = !DILocation(line: 1305, column: 3, scope: !4954)
!4978 = !DILocation(line: 1307, column: 4, scope: !4954)
!4979 = !DILocation(line: 1307, column: 20, scope: !4954)
!4980 = !DILocation(line: 1308, column: 3, scope: !4954)
!4981 = !DILocation(line: 1316, column: 1, scope: !4941)
!4982 = distinct !DISubprogram(name: "isupper", scope: !4983, file: !4983, line: 16, type: !214, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !4984)
!4983 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4984 = !{!4985}
!4985 = !DILocalVariable(name: "a", arg: 1, scope: !4982, file: !4983, line: 16, type: !107)
!4986 = !DILocation(line: 0, scope: !4982)
!4987 = !DILocation(line: 18, column: 29, scope: !4982)
!4988 = !DILocation(line: 18, column: 45, scope: !4982)
!4989 = !DILocation(line: 18, column: 2, scope: !4982)
!4990 = distinct !DISubprogram(name: "conversion_radix", scope: !2508, file: !2508, line: 761, type: !4991, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !4993)
!4991 = !DISubroutineType(types: !4992)
!4992 = !{!185, !120}
!4993 = !{!4994}
!4994 = !DILocalVariable(name: "specifier", arg: 1, scope: !4990, file: !2508, line: 761, type: !120)
!4995 = !DILocation(line: 0, scope: !4990)
!4996 = !DILocation(line: 763, column: 2, scope: !4990)
!4997 = !DILocation(line: 770, column: 3, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4990, file: !2508, line: 763, column: 21)
!4999 = !DILocation(line: 774, column: 3, scope: !4998)
!5000 = !DILocation(line: 0, scope: !4998)
!5001 = !DILocation(line: 776, column: 1, scope: !4990)
!5002 = distinct !DISubprogram(name: "extract_flags", scope: !2508, file: !2508, line: 339, type: !4844, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !5003)
!5003 = !{!5004, !5005, !5006}
!5004 = !DILocalVariable(name: "conv", arg: 1, scope: !5002, file: !2508, line: 339, type: !4500)
!5005 = !DILocalVariable(name: "sp", arg: 2, scope: !5002, file: !2508, line: 340, type: !118)
!5006 = !DILocalVariable(name: "loop", scope: !5002, file: !2508, line: 342, type: !145)
!5007 = !DILocation(line: 0, scope: !5002)
!5008 = !DILocation(line: 344, column: 2, scope: !5002)
!5009 = !DILocation(line: 345, column: 11, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5002, file: !2508, line: 344, column: 5)
!5011 = !DILocation(line: 345, column: 3, scope: !5010)
!5012 = !DILocation(line: 351, column: 4, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5010, file: !2508, line: 345, column: 16)
!5014 = !DILocation(line: 354, column: 4, scope: !5013)
!5015 = !DILocation(line: 357, column: 4, scope: !5013)
!5016 = !DILocation(line: 360, column: 4, scope: !5013)
!5017 = !DILocation(line: 0, scope: !5013)
!5018 = !DILocation(line: 370, column: 12, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5002, file: !2508, line: 370, column: 6)
!5020 = !DILocation(line: 370, column: 22, scope: !5019)
!5021 = !DILocation(line: 371, column: 19, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5019, file: !2508, line: 370, column: 42)
!5023 = !DILocation(line: 372, column: 2, scope: !5022)
!5024 = !DILocation(line: 376, column: 2, scope: !5002)
!5025 = distinct !DISubprogram(name: "extract_width", scope: !2508, file: !2508, line: 388, type: !4844, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !5026)
!5026 = !{!5027, !5028, !5029, !5030}
!5027 = !DILocalVariable(name: "conv", arg: 1, scope: !5025, file: !2508, line: 388, type: !4500)
!5028 = !DILocalVariable(name: "sp", arg: 2, scope: !5025, file: !2508, line: 389, type: !118)
!5029 = !DILocalVariable(name: "wp", scope: !5025, file: !2508, line: 398, type: !118)
!5030 = !DILocalVariable(name: "width", scope: !5025, file: !2508, line: 399, type: !185)
!5031 = !DILocation(line: 0, scope: !5025)
!5032 = !DILocation(line: 391, column: 8, scope: !5025)
!5033 = !DILocation(line: 391, column: 22, scope: !5025)
!5034 = !DILocation(line: 393, column: 6, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5025, file: !2508, line: 393, column: 6)
!5036 = !DILocation(line: 393, column: 10, scope: !5035)
!5037 = !DILocation(line: 393, column: 6, scope: !5025)
!5038 = !DILocation(line: 394, column: 20, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5035, file: !2508, line: 393, column: 18)
!5040 = !DILocation(line: 395, column: 10, scope: !5039)
!5041 = !DILocation(line: 395, column: 3, scope: !5039)
!5042 = !DILocation(line: 399, column: 17, scope: !5025)
!5043 = !DILocation(line: 401, column: 6, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5025, file: !2508, line: 401, column: 6)
!5045 = !DILocation(line: 401, column: 9, scope: !5044)
!5046 = !DILocation(line: 401, column: 6, scope: !5025)
!5047 = !DILocation(line: 402, column: 23, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5044, file: !2508, line: 401, column: 16)
!5049 = !DILocation(line: 403, column: 9, scope: !5048)
!5050 = !DILocation(line: 403, column: 21, scope: !5048)
!5051 = !DILocation(line: 405, column: 11, scope: !5048)
!5052 = !DILocation(line: 404, column: 21, scope: !5048)
!5053 = !DILocation(line: 406, column: 2, scope: !5048)
!5054 = !DILocation(line: 409, column: 1, scope: !5025)
!5055 = distinct !DISubprogram(name: "extract_prec", scope: !2508, file: !2508, line: 420, type: !4844, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !5056)
!5056 = !{!5057, !5058, !5059}
!5057 = !DILocalVariable(name: "conv", arg: 1, scope: !5055, file: !2508, line: 420, type: !4500)
!5058 = !DILocalVariable(name: "sp", arg: 2, scope: !5055, file: !2508, line: 421, type: !118)
!5059 = !DILocalVariable(name: "prec", scope: !5055, file: !2508, line: 435, type: !185)
!5060 = !DILocation(line: 0, scope: !5055)
!5061 = !DILocation(line: 423, column: 24, scope: !5055)
!5062 = !DILocation(line: 423, column: 28, scope: !5055)
!5063 = !DILocation(line: 423, column: 8, scope: !5055)
!5064 = !DILocation(line: 423, column: 21, scope: !5055)
!5065 = !DILocation(line: 425, column: 6, scope: !5055)
!5066 = !DILocation(line: 428, column: 2, scope: !5055)
!5067 = !DILocation(line: 430, column: 6, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5055, file: !2508, line: 430, column: 6)
!5069 = !DILocation(line: 430, column: 10, scope: !5068)
!5070 = !DILocation(line: 430, column: 6, scope: !5055)
!5071 = !DILocation(line: 431, column: 19, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5068, file: !2508, line: 430, column: 18)
!5073 = !DILocation(line: 432, column: 10, scope: !5072)
!5074 = !DILocation(line: 432, column: 3, scope: !5072)
!5075 = !DILocation(line: 435, column: 16, scope: !5055)
!5076 = !DILocation(line: 437, column: 8, scope: !5055)
!5077 = !DILocation(line: 437, column: 19, scope: !5055)
!5078 = !DILocation(line: 439, column: 10, scope: !5055)
!5079 = !DILocation(line: 438, column: 20, scope: !5055)
!5080 = !DILocation(line: 441, column: 9, scope: !5055)
!5081 = !DILocation(line: 442, column: 1, scope: !5055)
!5082 = distinct !DISubprogram(name: "extract_length", scope: !2508, file: !2508, line: 453, type: !4844, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !5083)
!5083 = !{!5084, !5085}
!5084 = !DILocalVariable(name: "conv", arg: 1, scope: !5082, file: !2508, line: 453, type: !4500)
!5085 = !DILocalVariable(name: "sp", arg: 2, scope: !5082, file: !2508, line: 454, type: !118)
!5086 = !DILocation(line: 0, scope: !5082)
!5087 = !DILocation(line: 456, column: 10, scope: !5082)
!5088 = !DILocation(line: 456, column: 2, scope: !5082)
!5089 = !DILocation(line: 458, column: 8, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5091, file: !2508, line: 458, column: 7)
!5091 = distinct !DILexicalBlock(scope: !5082, file: !2508, line: 456, column: 15)
!5092 = !DILocation(line: 458, column: 7, scope: !5090)
!5093 = !DILocation(line: 458, column: 13, scope: !5090)
!5094 = !DILocation(line: 0, scope: !5090)
!5095 = !DILocation(line: 458, column: 7, scope: !5091)
!5096 = !DILocation(line: 459, column: 21, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5090, file: !2508, line: 458, column: 21)
!5098 = !DILocation(line: 460, column: 4, scope: !5097)
!5099 = !DILocation(line: 461, column: 3, scope: !5097)
!5100 = !DILocation(line: 462, column: 21, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5090, file: !2508, line: 461, column: 10)
!5102 = !DILocation(line: 466, column: 8, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5091, file: !2508, line: 466, column: 7)
!5104 = !DILocation(line: 466, column: 7, scope: !5103)
!5105 = !DILocation(line: 466, column: 13, scope: !5103)
!5106 = !DILocation(line: 0, scope: !5103)
!5107 = !DILocation(line: 466, column: 7, scope: !5091)
!5108 = !DILocation(line: 467, column: 21, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5103, file: !2508, line: 466, column: 21)
!5110 = !DILocation(line: 468, column: 4, scope: !5109)
!5111 = !DILocation(line: 469, column: 3, scope: !5109)
!5112 = !DILocation(line: 470, column: 21, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5103, file: !2508, line: 469, column: 10)
!5114 = !DILocation(line: 474, column: 9, scope: !5091)
!5115 = !DILocation(line: 474, column: 20, scope: !5091)
!5116 = !DILocation(line: 475, column: 3, scope: !5091)
!5117 = !DILocation(line: 476, column: 3, scope: !5091)
!5118 = !DILocation(line: 478, column: 9, scope: !5091)
!5119 = !DILocation(line: 478, column: 20, scope: !5091)
!5120 = !DILocation(line: 479, column: 3, scope: !5091)
!5121 = !DILocation(line: 480, column: 3, scope: !5091)
!5122 = !DILocation(line: 482, column: 9, scope: !5091)
!5123 = !DILocation(line: 482, column: 20, scope: !5091)
!5124 = !DILocation(line: 483, column: 3, scope: !5091)
!5125 = !DILocation(line: 484, column: 3, scope: !5091)
!5126 = !DILocation(line: 486, column: 9, scope: !5091)
!5127 = !DILocation(line: 486, column: 20, scope: !5091)
!5128 = !DILocation(line: 487, column: 3, scope: !5091)
!5129 = !DILocation(line: 492, column: 21, scope: !5091)
!5130 = !DILocation(line: 493, column: 3, scope: !5091)
!5131 = !DILocation(line: 495, column: 9, scope: !5091)
!5132 = !DILocation(line: 495, column: 20, scope: !5091)
!5133 = !DILocation(line: 496, column: 3, scope: !5091)
!5134 = !DILocation(line: 498, column: 2, scope: !5082)
!5135 = distinct !DISubprogram(name: "extract_specifier", scope: !2508, file: !2508, line: 513, type: !4844, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !5136)
!5136 = !{!5137, !5138, !5139, !5140}
!5137 = !DILocalVariable(name: "conv", arg: 1, scope: !5135, file: !2508, line: 513, type: !4500)
!5138 = !DILocalVariable(name: "sp", arg: 2, scope: !5135, file: !2508, line: 514, type: !118)
!5139 = !DILocalVariable(name: "unsupported", scope: !5135, file: !2508, line: 516, type: !145)
!5140 = !DILabel(scope: !5141, name: "int_conv", file: !2508, line: 526)
!5141 = distinct !DILexicalBlock(scope: !5135, file: !2508, line: 520, column: 27)
!5142 = !DILocation(line: 0, scope: !5135)
!5143 = !DILocation(line: 518, column: 20, scope: !5135)
!5144 = !DILocation(line: 518, column: 8, scope: !5135)
!5145 = !DILocation(line: 518, column: 18, scope: !5135)
!5146 = !DILocation(line: 520, column: 2, scope: !5135)
!5147 = !DILocation(line: 525, column: 3, scope: !5141)
!5148 = !DILocation(line: 0, scope: !5141)
!5149 = !DILocation(line: 526, column: 1, scope: !5141)
!5150 = !DILocation(line: 528, column: 24, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5141, file: !2508, line: 528, column: 7)
!5152 = !DILocation(line: 528, column: 7, scope: !5141)
!5153 = !DILocation(line: 535, column: 23, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5141, file: !2508, line: 535, column: 7)
!5155 = !DILocation(line: 535, column: 7, scope: !5141)
!5156 = !DILocation(line: 536, column: 36, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5154, file: !2508, line: 535, column: 31)
!5158 = !DILocation(line: 537, column: 3, scope: !5157)
!5159 = !DILocation(line: 570, column: 9, scope: !5141)
!5160 = !DILocation(line: 570, column: 23, scope: !5141)
!5161 = !DILocation(line: 575, column: 4, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5163, file: !2508, line: 573, column: 48)
!5163 = distinct !DILexicalBlock(scope: !5141, file: !2508, line: 573, column: 7)
!5164 = !DILocation(line: 603, column: 9, scope: !5141)
!5165 = !DILocation(line: 603, column: 23, scope: !5141)
!5166 = !DILocation(line: 605, column: 24, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5141, file: !2508, line: 605, column: 7)
!5168 = !DILocation(line: 605, column: 7, scope: !5141)
!5169 = !DILocation(line: 612, column: 9, scope: !5141)
!5170 = !DILocation(line: 612, column: 23, scope: !5141)
!5171 = !DILocation(line: 619, column: 24, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5141, file: !2508, line: 619, column: 7)
!5173 = !DILocation(line: 619, column: 7, scope: !5141)
!5174 = !DILocation(line: 625, column: 9, scope: !5141)
!5175 = !DILocation(line: 625, column: 17, scope: !5141)
!5176 = !DILocation(line: 626, column: 3, scope: !5141)
!5177 = !DILocation(line: 629, column: 20, scope: !5135)
!5178 = !DILocation(line: 629, column: 8, scope: !5135)
!5179 = !DILocation(line: 518, column: 23, scope: !5135)
!5180 = !DILocation(line: 631, column: 2, scope: !5135)
!5181 = distinct !DISubprogram(name: "extract_decimal", scope: !2508, file: !2508, line: 318, type: !5182, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !5184)
!5182 = !DISubroutineType(types: !5183)
!5183 = !{!185, !184}
!5184 = !{!5185, !5186, !5187}
!5185 = !DILocalVariable(name: "str", arg: 1, scope: !5181, file: !2508, line: 318, type: !184)
!5186 = !DILocalVariable(name: "sp", scope: !5181, file: !2508, line: 320, type: !118)
!5187 = !DILocalVariable(name: "val", scope: !5181, file: !2508, line: 321, type: !185)
!5188 = !DILocation(line: 0, scope: !5181)
!5189 = !DILocation(line: 320, column: 19, scope: !5181)
!5190 = !DILocation(line: 323, column: 37, scope: !5181)
!5191 = !DILocation(line: 323, column: 17, scope: !5181)
!5192 = !DILocation(line: 323, column: 9, scope: !5181)
!5193 = !DILocation(line: 323, column: 2, scope: !5181)
!5194 = !DILocation(line: 324, column: 13, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5181, file: !2508, line: 323, column: 43)
!5196 = !DILocation(line: 324, column: 24, scope: !5195)
!5197 = !DILocation(line: 324, column: 19, scope: !5195)
!5198 = !DILocation(line: 324, column: 27, scope: !5195)
!5199 = distinct !{!5199, !5193, !5200}
!5200 = !DILocation(line: 325, column: 2, scope: !5181)
!5201 = !DILocation(line: 326, column: 7, scope: !5181)
!5202 = !DILocation(line: 327, column: 2, scope: !5181)
!5203 = distinct !DISubprogram(name: "isdigit", scope: !4983, file: !4983, line: 43, type: !214, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !5204)
!5204 = !{!5205}
!5205 = !DILocalVariable(name: "a", arg: 1, scope: !5203, file: !4983, line: 43, type: !107)
!5206 = !DILocation(line: 0, scope: !5203)
!5207 = !DILocation(line: 45, column: 29, scope: !5203)
!5208 = !DILocation(line: 45, column: 45, scope: !5203)
!5209 = !DILocation(line: 45, column: 2, scope: !5203)
!5210 = distinct !DISubprogram(name: "assert_post_action", scope: !5211, file: !5211, line: 26, type: !5212, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !5214)
!5211 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5212 = !DISubroutineType(types: !5213)
!5213 = !{null, !118, !32}
!5214 = !{!5215, !5216}
!5215 = !DILocalVariable(name: "file", arg: 1, scope: !5210, file: !5211, line: 26, type: !118)
!5216 = !DILocalVariable(name: "line", arg: 2, scope: !5210, file: !5211, line: 26, type: !32)
!5217 = !DILocation(line: 0, scope: !5210)
!5218 = !DILocation(line: 43, column: 2, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5210, file: !5211, line: 43, column: 2)
!5220 = !{i64 2154752479, i64 2154752495, i64 2154752521, i64 2154752549, i64 2154752569}
!5221 = !DILocation(line: 44, column: 1, scope: !5210)
!5222 = distinct !DISubprogram(name: "assert_print", scope: !5211, file: !5211, line: 46, type: !4192, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !5223)
!5223 = !{!5224, !5225}
!5224 = !DILocalVariable(name: "fmt", arg: 1, scope: !5222, file: !5211, line: 46, type: !118)
!5225 = !DILocalVariable(name: "ap", scope: !5222, file: !5211, line: 48, type: !5226)
!5226 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3202, line: 99, baseType: !5227)
!5227 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3202, line: 40, baseType: !5228)
!5228 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5211, baseType: !5229)
!5229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5230)
!5230 = !{!5231}
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5229, file: !5211, line: 48, baseType: !106, size: 32)
!5232 = !DILocation(line: 0, scope: !5222)
!5233 = !DILocation(line: 48, column: 2, scope: !5222)
!5234 = !DILocation(line: 48, column: 10, scope: !5222)
!5235 = !DILocation(line: 50, column: 2, scope: !5222)
!5236 = !DILocation(line: 52, column: 2, scope: !5222)
!5237 = !DILocation(line: 54, column: 2, scope: !5222)
!5238 = !DILocation(line: 55, column: 1, scope: !5222)
!5239 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5240, file: !5240, line: 9, type: !3082, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2540, retainedNodes: !2156)
!5240 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!5241 = !DILocation(line: 11, column: 1, scope: !5239)
!5242 = !{i64 2147567119, i64 2147567162, i64 2147567202}
!5243 = !DILocation(line: 12, column: 1, scope: !5239)
!5244 = !{i64 2147571346, i64 2147571389, i64 2147571429}
!5245 = !DILocation(line: 13, column: 1, scope: !5239)
!5246 = !{i64 2147571555, i64 2147571598, i64 2147571638}
!5247 = !DILocation(line: 14, column: 1, scope: !5239)
!5248 = !{i64 2147571724, i64 2147571767, i64 2147571807}
!5249 = !DILocation(line: 15, column: 1, scope: !5239)
!5250 = !{i64 2147571887, i64 2147571930, i64 2147571970}
!5251 = !DILocation(line: 16, column: 1, scope: !5239)
!5252 = !{i64 2147572071, i64 2147572114, i64 2147572154}
!5253 = !DILocation(line: 17, column: 1, scope: !5239)
!5254 = !{i64 2147572250, i64 2147572293, i64 2147572333}
!5255 = !DILocation(line: 18, column: 1, scope: !5239)
!5256 = !{i64 2147572492, i64 2147572535, i64 2147572575}
!5257 = !DILocation(line: 19, column: 1, scope: !5239)
!5258 = !{i64 2147572727, i64 2147572770, i64 2147572810}
!5259 = !DILocation(line: 20, column: 1, scope: !5239)
!5260 = !{i64 2147572914, i64 2147572957, i64 2147572997}
!5261 = !DILocation(line: 21, column: 1, scope: !5239)
!5262 = !{i64 2147573130, i64 2147573173, i64 2147573213}
!5263 = !DILocation(line: 22, column: 1, scope: !5239)
!5264 = !{i64 2147573333, i64 2147573376, i64 2147573416}
!5265 = !DILocation(line: 23, column: 1, scope: !5239)
!5266 = !{i64 2147573536, i64 2147573579, i64 2147573619}
!5267 = !DILocation(line: 24, column: 1, scope: !5239)
!5268 = !{i64 2147573711, i64 2147573754, i64 2147573794}
!5269 = !DILocation(line: 25, column: 1, scope: !5239)
!5270 = !{i64 2147573919, i64 2147573962, i64 2147574002}
!5271 = !DILocation(line: 26, column: 1, scope: !5239)
!5272 = !{i64 2147574123, i64 2147574166, i64 2147574206}
!5273 = !DILocation(line: 27, column: 1, scope: !5239)
!5274 = !{i64 2147574316, i64 2147574359, i64 2147574399}
!5275 = !DILocation(line: 28, column: 1, scope: !5239)
!5276 = !{i64 2147574518, i64 2147574561, i64 2147574601}
!5277 = !DILocation(line: 29, column: 1, scope: !5239)
!5278 = !{i64 2147574717, i64 2147574760, i64 2147574800}
!5279 = !DILocation(line: 30, column: 1, scope: !5239)
!5280 = !{i64 2147574944, i64 2147574987, i64 2147575027}
!5281 = !DILocation(line: 31, column: 1, scope: !5239)
!5282 = !{i64 2147575146, i64 2147575189, i64 2147575229}
!5283 = !DILocation(line: 32, column: 1, scope: !5239)
!5284 = !{i64 2147575361, i64 2147575404, i64 2147575444}
!5285 = !DILocation(line: 33, column: 1, scope: !5239)
!5286 = !{i64 2147575578, i64 2147575621, i64 2147575661}
!5287 = !DILocation(line: 34, column: 1, scope: !5239)
!5288 = !{i64 2147575750, i64 2147575793, i64 2147575833}
!5289 = !DILocation(line: 35, column: 1, scope: !5239)
!5290 = !{i64 2147575952, i64 2147575995, i64 2147576035}
!5291 = !DILocation(line: 36, column: 1, scope: !5239)
!5292 = !{i64 2147576178, i64 2147576221, i64 2147576261}
!5293 = !DILocation(line: 37, column: 1, scope: !5239)
!5294 = !{i64 2147576377, i64 2147576420, i64 2147576460}
!5295 = !DILocation(line: 38, column: 1, scope: !5239)
!5296 = !{i64 2147576552, i64 2147576595, i64 2147576635}
!5297 = !DILocation(line: 39, column: 1, scope: !5239)
!5298 = !{i64 2147576805, i64 2147576848, i64 2147576888}
!5299 = !DILocation(line: 40, column: 1, scope: !5239)
!5300 = !{i64 2147577046, i64 2147577089, i64 2147577129}
!5301 = !DILocation(line: 41, column: 1, scope: !5239)
!5302 = !{i64 2147577281, i64 2147577324, i64 2147577364}
!5303 = !DILocation(line: 42, column: 1, scope: !5239)
!5304 = !{i64 2147577513, i64 2147577556, i64 2147577596}
!5305 = !DILocation(line: 43, column: 1, scope: !5239)
!5306 = !{i64 2147577739, i64 2147577782, i64 2147577822}
!5307 = !DILocation(line: 44, column: 1, scope: !5239)
!5308 = !{i64 2147577965, i64 2147578008, i64 2147578048}
!5309 = !DILocation(line: 45, column: 1, scope: !5239)
!5310 = !{i64 2147578191, i64 2147578234, i64 2147578274}
!5311 = !DILocation(line: 46, column: 1, scope: !5239)
!5312 = !{i64 2147578426, i64 2147578469, i64 2147578509}
!5313 = !DILocation(line: 47, column: 1, scope: !5239)
!5314 = !{i64 2147578652, i64 2147578695, i64 2147578735}
!5315 = !DILocation(line: 48, column: 1, scope: !5239)
!5316 = !{i64 2147578899, i64 2147578942, i64 2147578982}
!5317 = !DILocation(line: 49, column: 1, scope: !5239)
!5318 = !{i64 2147579128, i64 2147579171, i64 2147579211}
!5319 = !DILocation(line: 50, column: 1, scope: !5239)
!5320 = !{i64 2147579360, i64 2147579403, i64 2147579443}
!5321 = !DILocation(line: 51, column: 1, scope: !5239)
!5322 = !{i64 2147579604, i64 2147579647, i64 2147579687}
!5323 = !DILocation(line: 52, column: 1, scope: !5239)
!5324 = !{i64 2147579842, i64 2147579885, i64 2147579925}
!5325 = !DILocation(line: 53, column: 1, scope: !5239)
!5326 = !{i64 2147584177, i64 2147584220, i64 2147584260}
!5327 = !DILocation(line: 54, column: 1, scope: !5239)
!5328 = !{i64 2147584415, i64 2147584458, i64 2147584498}
!5329 = !DILocation(line: 55, column: 1, scope: !5239)
!5330 = !{i64 2147584668, i64 2147584711, i64 2147584751}
!5331 = !DILocation(line: 56, column: 1, scope: !5239)
!5332 = !{i64 2147584912, i64 2147584955, i64 2147584995}
!5333 = !DILocation(line: 57, column: 1, scope: !5239)
!5334 = !{i64 2147585147, i64 2147585190, i64 2147585230}
!5335 = !DILocation(line: 58, column: 1, scope: !5239)
!5336 = !{i64 2147585397, i64 2147585440, i64 2147585480}
!5337 = !DILocation(line: 59, column: 1, scope: !5239)
!5338 = !{i64 2147585644, i64 2147585687, i64 2147585727}
!5339 = !DILocation(line: 60, column: 1, scope: !5239)
!5340 = !{i64 2147585879, i64 2147585922, i64 2147585962}
!5341 = !DILocation(line: 61, column: 1, scope: !5239)
!5342 = !{i64 2147586114, i64 2147586157, i64 2147586197}
!5343 = !DILocation(line: 62, column: 1, scope: !5239)
!5344 = !{i64 2147586349, i64 2147586392, i64 2147586432}
!5345 = !DILocation(line: 63, column: 1, scope: !5239)
!5346 = !{i64 2147586587, i64 2147586630, i64 2147586670}
!5347 = !DILocation(line: 64, column: 1, scope: !5239)
!5348 = !{i64 2147586828, i64 2147586871, i64 2147586911}
!5349 = !DILocation(line: 65, column: 1, scope: !5239)
!5350 = !{i64 2147587108, i64 2147587151, i64 2147587191}
!5351 = !DILocation(line: 66, column: 1, scope: !5239)
!5352 = !{i64 2147587367, i64 2147587410, i64 2147587450}
!5353 = !DILocation(line: 67, column: 1, scope: !5239)
!5354 = !{i64 2147587596, i64 2147587639, i64 2147587679}
!5355 = !DILocation(line: 68, column: 1, scope: !5239)
!5356 = !{i64 2147587822, i64 2147587865, i64 2147587905}
!5357 = !DILocation(line: 69, column: 1, scope: !5239)
!5358 = !{i64 2147588060, i64 2147588103, i64 2147588143}
!5359 = !DILocation(line: 70, column: 1, scope: !5239)
!5360 = !{i64 2147588289, i64 2147588332, i64 2147588372}
!5361 = !DILocation(line: 71, column: 1, scope: !5239)
!5362 = !{i64 2147588497, i64 2147588540, i64 2147588580}
!5363 = !DILocation(line: 72, column: 1, scope: !5239)
!5364 = !{i64 2147588708, i64 2147588751, i64 2147588791}
!5365 = !DILocation(line: 73, column: 1, scope: !5239)
!5366 = !{i64 2147588943, i64 2147588986, i64 2147589026}
!5367 = !DILocation(line: 74, column: 1, scope: !5239)
!5368 = !{i64 2147589172, i64 2147589215, i64 2147589255}
!5369 = !DILocation(line: 75, column: 1, scope: !5239)
!5370 = !{i64 2147589389, i64 2147589432, i64 2147589472}
!5371 = !DILocation(line: 76, column: 1, scope: !5239)
!5372 = !{i64 2147589618, i64 2147589661, i64 2147589701}
!5373 = !DILocation(line: 77, column: 1, scope: !5239)
!5374 = !{i64 2147589856, i64 2147589899, i64 2147589939}
!5375 = !DILocation(line: 78, column: 1, scope: !5239)
!5376 = !{i64 2147590088, i64 2147590131, i64 2147590171}
!5377 = !DILocation(line: 79, column: 1, scope: !5239)
!5378 = !{i64 2147590314, i64 2147590357, i64 2147590397}
!5379 = !DILocation(line: 80, column: 1, scope: !5239)
!5380 = !{i64 2147590531, i64 2147590574, i64 2147590614}
!5381 = !DILocation(line: 81, column: 1, scope: !5239)
!5382 = !{i64 2147590763, i64 2147590806, i64 2147590846}
!5383 = !DILocation(line: 82, column: 1, scope: !5239)
!5384 = !{i64 2147590989, i64 2147591032, i64 2147591072}
!5385 = !DILocation(line: 83, column: 1, scope: !5239)
!5386 = !{i64 2147591203, i64 2147591246, i64 2147591286}
!5387 = !DILocation(line: 84, column: 1, scope: !5239)
!5388 = !{i64 2147591423, i64 2147591466, i64 2147591506}
!5389 = !DILocation(line: 85, column: 1, scope: !5239)
!5390 = !{i64 2147591655, i64 2147591698, i64 2147591738}
!5391 = !DILocation(line: 86, column: 1, scope: !5239)
!5392 = !{i64 2147591863, i64 2147591906, i64 2147591946}
!5393 = !DILocation(line: 87, column: 1, scope: !5239)
!5394 = !{i64 2147592068, i64 2147592111, i64 2147592151}
!5395 = !DILocation(line: 88, column: 1, scope: !5239)
!5396 = !{i64 2147596346, i64 2147596389, i64 2147596429}
!5397 = !DILocation(line: 89, column: 1, scope: !5239)
!5398 = !{i64 2147596560, i64 2147596603, i64 2147596643}
!5399 = !DILocation(line: 90, column: 1, scope: !5239)
!5400 = !{i64 2147596786, i64 2147596829, i64 2147596869}
!5401 = !DILocation(line: 91, column: 1, scope: !5239)
!5402 = !{i64 2147597006, i64 2147597049, i64 2147597089}
!5403 = !DILocation(line: 92, column: 1, scope: !5239)
!5404 = !{i64 2147597211, i64 2147597254, i64 2147597294}
!5405 = !DILocation(line: 93, column: 1, scope: !5239)
!5406 = !{i64 2147597443, i64 2147597486, i64 2147597526}
!5407 = !DILocation(line: 94, column: 1, scope: !5239)
!5408 = !{i64 2147597678, i64 2147597721, i64 2147597761}
!5409 = !DILocation(line: 95, column: 1, scope: !5239)
!5410 = !{i64 2147597928, i64 2147597971, i64 2147598011}
!5411 = !DILocation(line: 96, column: 1, scope: !5239)
!5412 = !{i64 2147598178, i64 2147598221, i64 2147598261}
!5413 = !DILocation(line: 97, column: 1, scope: !5239)
!5414 = !{i64 2147598416, i64 2147598459, i64 2147598499}
!5415 = !DILocation(line: 98, column: 1, scope: !5239)
!5416 = !{i64 2147598627, i64 2147598670, i64 2147598710}
!5417 = !DILocation(line: 99, column: 1, scope: !5239)
!5418 = !{i64 2147598844, i64 2147598887, i64 2147598927}
!5419 = !DILocation(line: 100, column: 1, scope: !5239)
!5420 = !{i64 2147599040, i64 2147599083, i64 2147599123}
!5421 = !DILocation(line: 101, column: 1, scope: !5239)
!5422 = !{i64 2147599242, i64 2147599285, i64 2147599325}
!5423 = !DILocation(line: 102, column: 1, scope: !5239)
!5424 = !{i64 2147599435, i64 2147599478, i64 2147599518}
!5425 = !DILocation(line: 103, column: 1, scope: !5239)
!5426 = !{i64 2147599643, i64 2147599686, i64 2147599726}
!5427 = !DILocation(line: 104, column: 1, scope: !5239)
!5428 = !{i64 2147599839, i64 2147599882, i64 2147599922}
!5429 = !DILocation(line: 105, column: 1, scope: !5239)
!5430 = !{i64 2147600047, i64 2147600090, i64 2147600130}
!5431 = !DILocation(line: 106, column: 1, scope: !5239)
!5432 = !{i64 2147600258, i64 2147600301, i64 2147600341}
!5433 = !DILocation(line: 107, column: 1, scope: !5239)
!5434 = !{i64 2147600457, i64 2147600500, i64 2147600540}
!5435 = !DILocation(line: 108, column: 1, scope: !5239)
!5436 = !{i64 2147600632, i64 2147600675, i64 2147600715}
!5437 = !DILocation(line: 109, column: 1, scope: !5239)
!5438 = !{i64 2147600816, i64 2147600859, i64 2147600899}
!5439 = !DILocation(line: 110, column: 1, scope: !5239)
!5440 = !{i64 2147601018, i64 2147601061, i64 2147601101}
!5441 = !DILocation(line: 111, column: 1, scope: !5239)
!5442 = !{i64 2147601217, i64 2147601260, i64 2147601300}
!5443 = !DILocation(line: 112, column: 1, scope: !5239)
!5444 = !{i64 2147601422, i64 2147601465, i64 2147601505}
!5445 = !DILocation(line: 113, column: 1, scope: !5239)
!5446 = !{i64 2147601615, i64 2147601658, i64 2147601698}
!5447 = !DILocation(line: 114, column: 1, scope: !5239)
!5448 = !{i64 2147601781, i64 2147601824, i64 2147601864}
!5449 = !DILocation(line: 115, column: 1, scope: !5239)
!5450 = !{i64 2147601965, i64 2147602008, i64 2147602048}
!5451 = !DILocation(line: 116, column: 1, scope: !5239)
!5452 = !{i64 2147602155, i64 2147602198, i64 2147602238}
!5453 = !DILocation(line: 117, column: 1, scope: !5239)
!5454 = !{i64 2147602339, i64 2147602382, i64 2147602422}
!5455 = !DILocation(line: 118, column: 1, scope: !5239)
!5456 = !{i64 2147602553, i64 2147602596, i64 2147602636}
!5457 = !DILocation(line: 119, column: 1, scope: !5239)
!5458 = !{i64 2147602764, i64 2147602807, i64 2147602847}
!5459 = !DILocation(line: 120, column: 1, scope: !5239)
!5460 = !{i64 2147602987, i64 2147603030, i64 2147603070}
!5461 = !DILocation(line: 121, column: 1, scope: !5239)
!5462 = !{i64 2147603171, i64 2147603214, i64 2147603254}
!5463 = !DILocation(line: 122, column: 1, scope: !5239)
!5464 = !{i64 2147603385, i64 2147603428, i64 2147603468}
!5465 = !DILocation(line: 123, column: 1, scope: !5239)
!5466 = !{i64 2147603551, i64 2147603594, i64 2147603634}
!5467 = !DILocation(line: 124, column: 1, scope: !5239)
!5468 = !{i64 2147603732, i64 2147603775, i64 2147603815}
!5469 = !DILocation(line: 125, column: 1, scope: !5239)
!5470 = !{i64 2147603925, i64 2147603968, i64 2147604008}
!5471 = !DILocation(line: 126, column: 1, scope: !5239)
!5472 = !{i64 2147604151, i64 2147604194, i64 2147604234}
!5473 = !DILocation(line: 127, column: 1, scope: !5239)
!5474 = !{i64 2147604365, i64 2147604408, i64 2147604448}
!5475 = !DILocation(line: 128, column: 1, scope: !5239)
!5476 = !{i64 2147604591, i64 2147604634, i64 2147604674}
!5477 = !DILocation(line: 129, column: 1, scope: !5239)
!5478 = !{i64 2147604808, i64 2147604851, i64 2147604891}
!5479 = !DILocation(line: 130, column: 1, scope: !5239)
!5480 = !{i64 2147605085, i64 2147605128, i64 2147605168}
!5481 = !DILocation(line: 131, column: 1, scope: !5239)
!5482 = !{i64 2147605311, i64 2147605354, i64 2147605394}
!5483 = !DILocation(line: 132, column: 1, scope: !5239)
!5484 = !{i64 2147609580, i64 2147609623, i64 2147609663}
!5485 = !DILocation(line: 133, column: 1, scope: !5239)
!5486 = !{i64 2147609776, i64 2147609819, i64 2147609859}
!5487 = !DILocation(line: 134, column: 1, scope: !5239)
!5488 = !{i64 2147610041, i64 2147610084, i64 2147610124}
!5489 = !DILocation(line: 135, column: 1, scope: !5239)
!5490 = !{i64 2147610255, i64 2147610298, i64 2147610338}
!5491 = !DILocation(line: 136, column: 1, scope: !5239)
!5492 = !{i64 2147610430, i64 2147610473, i64 2147610513}
!5493 = !DILocation(line: 137, column: 1, scope: !5239)
!5494 = !{i64 2147610684, i64 2147610727, i64 2147610767}
!5495 = !DILocation(line: 138, column: 1, scope: !5239)
!5496 = !{i64 2147610883, i64 2147610926, i64 2147610966}
!5497 = !DILocation(line: 139, column: 1, scope: !5239)
!5498 = !{i64 2147611125, i64 2147611168, i64 2147611208}
!5499 = !DILocation(line: 140, column: 1, scope: !5239)
!5500 = !{i64 2147611288, i64 2147611331, i64 2147611371}
!5501 = !DILocation(line: 141, column: 1, scope: !5239)
!5502 = !{i64 2147611475, i64 2147611518, i64 2147611558}
!5503 = !DILocation(line: 142, column: 1, scope: !5239)
!5504 = !{i64 2147611683, i64 2147611726, i64 2147611766}
!5505 = !DILocation(line: 143, column: 1, scope: !5239)
!5506 = !{i64 2147611879, i64 2147611922, i64 2147611962}
!5507 = !DILocation(line: 144, column: 1, scope: !5239)
!5508 = !{i64 2147612072, i64 2147612115, i64 2147612155}
!5509 = !DILocation(line: 145, column: 1, scope: !5239)
!5510 = !{i64 2147612255, i64 2147612298, i64 2147612338}
!5511 = !DILocation(line: 146, column: 1, scope: !5239)
!5512 = !{i64 2147612469, i64 2147612512, i64 2147612552}
!5513 = !DILocation(line: 147, column: 1, scope: !5239)
!5514 = !{i64 2147612680, i64 2147612723, i64 2147612763}
!5515 = !DILocation(line: 148, column: 1, scope: !5239)
!5516 = !{i64 2147612900, i64 2147612943, i64 2147612983}
!5517 = !DILocation(line: 149, column: 1, scope: !5239)
!5518 = !{i64 2147613107, i64 2147613150, i64 2147613190}
!5519 = !DILocation(line: 150, column: 1, scope: !5239)
!5520 = !{i64 2147613380, i64 2147613423, i64 2147613463}
!5521 = !DILocation(line: 151, column: 1, scope: !5239)
!5522 = !{i64 2147613628, i64 2147613671, i64 2147613711}
!5523 = !DILocation(line: 152, column: 1, scope: !5239)
!5524 = !{i64 2147613827, i64 2147613870, i64 2147613910}
!5525 = !DILocation(line: 153, column: 1, scope: !5239)
!5526 = !{i64 2147614062, i64 2147614105, i64 2147614145}
!5527 = !DILocation(line: 154, column: 1, scope: !5239)
!5528 = !{i64 2147614312, i64 2147614355, i64 2147614395}
!5529 = !DILocation(line: 155, column: 1, scope: !5239)
!5530 = !{i64 2147614514, i64 2147614557, i64 2147614597}
!5531 = !DILocation(line: 156, column: 1, scope: !5239)
!5532 = !{i64 2147614737, i64 2147614780, i64 2147614820}
!5533 = !DILocation(line: 157, column: 1, scope: !5239)
!5534 = !{i64 2147614951, i64 2147614994, i64 2147615034}
!5535 = !DILocation(line: 158, column: 1, scope: !5239)
!5536 = !{i64 2147615195, i64 2147615238, i64 2147615278}
!5537 = !DILocation(line: 159, column: 1, scope: !5239)
!5538 = !{i64 2147615424, i64 2147615467, i64 2147615507}
!5539 = !DILocation(line: 160, column: 1, scope: !5239)
!5540 = !{i64 2147615653, i64 2147615696, i64 2147615736}
!5541 = !DILocation(line: 161, column: 1, scope: !5239)
!5542 = !{i64 2147615861, i64 2147615904, i64 2147615944}
!5543 = !DILocation(line: 162, column: 1, scope: !5239)
!5544 = !{i64 2147616099, i64 2147616142, i64 2147616182}
!5545 = !DILocation(line: 163, column: 1, scope: !5239)
!5546 = !{i64 2147616325, i64 2147616368, i64 2147616408}
!5547 = !DILocation(line: 164, column: 1, scope: !5239)
!5548 = !{i64 2147616584, i64 2147616627, i64 2147616667}
!5549 = !DILocation(line: 165, column: 1, scope: !5239)
!5550 = !{i64 2147616804, i64 2147616847, i64 2147616887}
!5551 = !DILocation(line: 166, column: 1, scope: !5239)
!5552 = !{i64 2147617036, i64 2147617079, i64 2147617119}
!5553 = !DILocation(line: 167, column: 1, scope: !5239)
!5554 = !{i64 2147617277, i64 2147617320, i64 2147617360}
!5555 = !DILocation(line: 168, column: 1, scope: !5239)
!5556 = !{i64 2147617518, i64 2147617561, i64 2147617601}
!5557 = !DILocation(line: 169, column: 1, scope: !5239)
!5558 = !{i64 2147617741, i64 2147617784, i64 2147617824}
!5559 = !DILocation(line: 170, column: 1, scope: !5239)
!5560 = !{i64 2147622019, i64 2147622062, i64 2147622102}
!5561 = !DILocation(line: 171, column: 1, scope: !5239)
!5562 = !{i64 2147622260, i64 2147622303, i64 2147622343}
!5563 = !DILocation(line: 172, column: 1, scope: !5239)
!5564 = !{i64 2147622447, i64 2147622490, i64 2147622530}
!5565 = !DILocation(line: 173, column: 1, scope: !5239)
!5566 = !{i64 2147622634, i64 2147622677, i64 2147622717}
!5567 = !DILocation(line: 174, column: 1, scope: !5239)
!5568 = !{i64 2147622797, i64 2147622840, i64 2147622880}
!5569 = !DILocation(line: 175, column: 1, scope: !5239)
!5570 = !{i64 2147623002, i64 2147623045, i64 2147623085}
!5571 = !DILocation(line: 176, column: 1, scope: !5239)
!5572 = !{i64 2147623195, i64 2147623238, i64 2147623278}
!5573 = !DILocation(line: 177, column: 1, scope: !5239)
!5574 = !{i64 2147623454, i64 2147623497, i64 2147623537}
!5575 = !DILocation(line: 178, column: 1, scope: !5239)
!5576 = !{i64 2147623677, i64 2147623720, i64 2147623760}
!5577 = !DILocation(line: 179, column: 1, scope: !5239)
!5578 = !{i64 2147623906, i64 2147623949, i64 2147623989}
!5579 = !DILocation(line: 180, column: 1, scope: !5239)
!5580 = !{i64 2147624120, i64 2147624163, i64 2147624203}
!5581 = !DILocation(line: 181, column: 1, scope: !5239)
!5582 = !{i64 2147624322, i64 2147624365, i64 2147624405}
!5583 = !DILocation(line: 182, column: 1, scope: !5239)
!5584 = !{i64 2147624518, i64 2147624561, i64 2147624601}
!5585 = !DILocation(line: 183, column: 1, scope: !5239)
!5586 = !{i64 2147624730, i64 2147624773, i64 2147624813}
!5587 = !DILocation(line: 184, column: 1, scope: !5239)
!5588 = !{i64 2147624951, i64 2147624994, i64 2147625034}
!5589 = !DILocation(line: 185, column: 1, scope: !5239)
!5590 = !{i64 2147625165, i64 2147625208, i64 2147625248}
!5591 = !DILocation(line: 186, column: 1, scope: !5239)
!5592 = !{i64 2147625355, i64 2147625398, i64 2147625438}
!5593 = !DILocation(line: 187, column: 1, scope: !5239)
!5594 = !{i64 2147625554, i64 2147625597, i64 2147625637}
!5595 = !DILocation(line: 188, column: 1, scope: !5239)
!5596 = !{i64 2147625759, i64 2147625802, i64 2147625842}
!5597 = !DILocation(line: 189, column: 1, scope: !5239)
!5598 = !{i64 2147625979, i64 2147626022, i64 2147626062}
!5599 = !DILocation(line: 190, column: 1, scope: !5239)
!5600 = !{i64 2147626180, i64 2147626223, i64 2147626263}
!5601 = !DILocation(line: 191, column: 1, scope: !5239)
!5602 = !{i64 2147626379, i64 2147626422, i64 2147626462}
!5603 = !DILocation(line: 192, column: 1, scope: !5239)
!5604 = !{i64 2147626584, i64 2147626627, i64 2147626667}
!5605 = !DILocation(line: 193, column: 1, scope: !5239)
!5606 = !{i64 2147626753, i64 2147626796, i64 2147626836}
!5607 = !DILocation(line: 194, column: 1, scope: !5239)
!5608 = !{i64 2147626937, i64 2147626980, i64 2147627020}
!5609 = !DILocation(line: 195, column: 1, scope: !5239)
!5610 = !{i64 2147627121, i64 2147627164, i64 2147627204}
!5611 = !DILocation(line: 196, column: 1, scope: !5239)
!5612 = !{i64 2147627308, i64 2147627351, i64 2147627391}
!5613 = !DILocation(line: 197, column: 1, scope: !5239)
!5614 = !{i64 2147627492, i64 2147627535, i64 2147627575}
!5615 = !DILocation(line: 198, column: 1, scope: !5239)
!5616 = !{i64 2147627679, i64 2147627722, i64 2147627762}
!5617 = !DILocation(line: 199, column: 1, scope: !5239)
!5618 = !{i64 2147627891, i64 2147627934, i64 2147627974}
!5619 = !DILocation(line: 200, column: 1, scope: !5239)
!5620 = !{i64 2147628129, i64 2147628172, i64 2147628212}
!5621 = !DILocation(line: 201, column: 1, scope: !5239)
!5622 = !{i64 2147628359, i64 2147628402, i64 2147628442}
!5623 = !DILocation(line: 202, column: 1, scope: !5239)
!5624 = !{i64 2147628588, i64 2147628631, i64 2147628671}
!5625 = !DILocation(line: 203, column: 1, scope: !5239)
!5626 = !{i64 2147628775, i64 2147628818, i64 2147628858}
!5627 = !DILocation(line: 204, column: 1, scope: !5239)
!5628 = !{i64 2147628971, i64 2147629014, i64 2147629054}
!5629 = !DILocation(line: 205, column: 1, scope: !5239)
!5630 = !{i64 2147629179, i64 2147629222, i64 2147629262}
!5631 = !DILocation(line: 206, column: 1, scope: !5239)
!5632 = !{i64 2147629391, i64 2147629434, i64 2147629474}
!5633 = !DILocation(line: 207, column: 1, scope: !5239)
!5634 = !{i64 2147629590, i64 2147629633, i64 2147629673}
!5635 = !DILocation(line: 208, column: 1, scope: !5239)
!5636 = !{i64 2147629828, i64 2147629871, i64 2147629911}
!5637 = !DILocation(line: 209, column: 1, scope: !5239)
!5638 = !{i64 2147630024, i64 2147630067, i64 2147630107}
!5639 = !DILocation(line: 210, column: 1, scope: !5239)
!5640 = !{i64 2147630226, i64 2147630269, i64 2147630309}
!5641 = !DILocation(line: 211, column: 1, scope: !5239)
!5642 = !{i64 2147630419, i64 2147630462, i64 2147630502}
!5643 = !DILocation(line: 212, column: 1, scope: !5239)
!5644 = !{i64 2147630653, i64 2147630696, i64 2147630736}
!5645 = !DILocation(line: 213, column: 1, scope: !5239)
!5646 = !{i64 2147630816, i64 2147630859, i64 2147630899}
!5647 = !DILocation(line: 214, column: 1, scope: !5239)
!5648 = !{i64 2147631055, i64 2147631098, i64 2147631138}
!5649 = !DILocation(line: 215, column: 1, scope: !5239)
!5650 = !{i64 2147635355, i64 2147635398, i64 2147635438}
!5651 = !DILocation(line: 216, column: 1, scope: !5239)
!5652 = !{i64 2147635591, i64 2147635634, i64 2147635674}
!5653 = !DILocation(line: 217, column: 1, scope: !5239)
!5654 = !{i64 2147635821, i64 2147635864, i64 2147635904}
!5655 = !DILocation(line: 218, column: 1, scope: !5239)
!5656 = !{i64 2147636008, i64 2147636051, i64 2147636091}
!5657 = !DILocation(line: 219, column: 1, scope: !5239)
!5658 = !{i64 2147636207, i64 2147636250, i64 2147636290}
!5659 = !DILocation(line: 220, column: 1, scope: !5239)
!5660 = !{i64 2147636478, i64 2147636521, i64 2147636561}
!5661 = !DILocation(line: 221, column: 1, scope: !5239)
!5662 = !{i64 2147636653, i64 2147636696, i64 2147636736}
!5663 = !DILocation(line: 222, column: 1, scope: !5239)
!5664 = !{i64 2147636887, i64 2147636930, i64 2147636970}
!5665 = !DILocation(line: 223, column: 1, scope: !5239)
!5666 = !{i64 2147637095, i64 2147637138, i64 2147637178}
!5667 = !DILocation(line: 224, column: 1, scope: !5239)
!5668 = !{i64 2147637313, i64 2147637356, i64 2147637396}
!5669 = !DILocation(line: 225, column: 1, scope: !5239)
!5670 = !{i64 2147637503, i64 2147637546, i64 2147637586}
!5671 = !DILocation(line: 226, column: 1, scope: !5239)
!5672 = !{i64 2147637735, i64 2147637778, i64 2147637818}
!5673 = !DILocation(line: 227, column: 1, scope: !5239)
!5674 = !{i64 2147637955, i64 2147637998, i64 2147638038}
!5675 = !DILocation(line: 228, column: 1, scope: !5239)
!5676 = !{i64 2147638151, i64 2147638194, i64 2147638234}
!5677 = !DILocation(line: 229, column: 1, scope: !5239)
!5678 = !{i64 2147638357, i64 2147638400, i64 2147638440}
!5679 = !DILocation(line: 230, column: 1, scope: !5239)
!5680 = !{i64 2147638562, i64 2147638605, i64 2147638645}
!5681 = !DILocation(line: 231, column: 1, scope: !5239)
!5682 = !{i64 2147638776, i64 2147638819, i64 2147638859}
!5683 = !DILocation(line: 232, column: 1, scope: !5239)
!5684 = !{i64 2147639002, i64 2147639045, i64 2147639085}
!5685 = !DILocation(line: 233, column: 1, scope: !5239)
!5686 = !{i64 2147639210, i64 2147639253, i64 2147639293}
!5687 = !DILocation(line: 234, column: 1, scope: !5239)
!5688 = !{i64 2147639406, i64 2147639449, i64 2147639489}
!5689 = !DILocation(line: 235, column: 1, scope: !5239)
!5690 = !{i64 2147639638, i64 2147639681, i64 2147639721}
!5691 = !DILocation(line: 236, column: 1, scope: !5239)
!5692 = !{i64 2147639822, i64 2147639865, i64 2147639905}
!5693 = !DILocation(line: 237, column: 1, scope: !5239)
!5694 = !{i64 2147640031, i64 2147640074, i64 2147640114}
!5695 = !DILocation(line: 238, column: 1, scope: !5239)
!5696 = !{i64 2147640239, i64 2147640282, i64 2147640322}
!5697 = !DILocation(line: 239, column: 1, scope: !5239)
!5698 = !{i64 2147640435, i64 2147640478, i64 2147640518}
!5699 = !DILocation(line: 240, column: 1, scope: !5239)
!5700 = !{i64 2147640619, i64 2147640662, i64 2147640702}
!5701 = !DILocation(line: 241, column: 1, scope: !5239)
!5702 = !{i64 2147640845, i64 2147640888, i64 2147640928}
!5703 = !DILocation(line: 242, column: 1, scope: !5239)
!5704 = !{i64 2147641071, i64 2147641114, i64 2147641154}
!5705 = !DILocation(line: 243, column: 1, scope: !5239)
!5706 = !{i64 2147641297, i64 2147641340, i64 2147641380}
!5707 = !DILocation(line: 244, column: 1, scope: !5239)
!5708 = !{i64 2147641523, i64 2147641566, i64 2147641606}
!5709 = !DILocation(line: 245, column: 1, scope: !5239)
!5710 = !{i64 2147641749, i64 2147641792, i64 2147641832}
!5711 = !DILocation(line: 246, column: 1, scope: !5239)
!5712 = !{i64 2147641981, i64 2147642024, i64 2147642064}
!5713 = !DILocation(line: 247, column: 1, scope: !5239)
!5714 = !{i64 2147642219, i64 2147642262, i64 2147642302}
!5715 = !DILocation(line: 248, column: 1, scope: !5239)
!5716 = !{i64 2147642439, i64 2147642482, i64 2147642522}
!5717 = !DILocation(line: 249, column: 1, scope: !5239)
!5718 = !{i64 2147642683, i64 2147642726, i64 2147642766}
!5719 = !DILocation(line: 250, column: 1, scope: !5239)
!5720 = !{i64 2147642924, i64 2147642967, i64 2147643007}
!5721 = !DILocation(line: 251, column: 1, scope: !5239)
!5722 = !{i64 2147643159, i64 2147643202, i64 2147643242}
!5723 = !DILocation(line: 252, column: 1, scope: !5239)
!5724 = !{i64 2147643391, i64 2147643434, i64 2147643474}
!5725 = !DILocation(line: 253, column: 1, scope: !5239)
!5726 = !{i64 2147643593, i64 2147643636, i64 2147643676}
!5727 = !DILocation(line: 254, column: 1, scope: !5239)
!5728 = !{i64 2147643843, i64 2147643886, i64 2147643926}
!5729 = !DILocation(line: 255, column: 1, scope: !5239)
!5730 = !{i64 2147648142, i64 2147648185, i64 2147648225}
!5731 = !DILocation(line: 256, column: 1, scope: !5239)
!5732 = !{i64 2147648350, i64 2147648393, i64 2147648433}
!5733 = !DILocation(line: 257, column: 1, scope: !5239)
!5734 = !{i64 2147648546, i64 2147648589, i64 2147648629}
!5735 = !DILocation(line: 258, column: 1, scope: !5239)
!5736 = !{i64 2147648730, i64 2147648773, i64 2147648813}
!5737 = !DILocation(line: 259, column: 1, scope: !5239)
!5738 = !{i64 2147648947, i64 2147648990, i64 2147649030}
!5739 = !DILocation(line: 260, column: 1, scope: !5239)
!5740 = !{i64 2147649152, i64 2147649195, i64 2147649235}
!5741 = !DILocation(line: 261, column: 1, scope: !5239)
!5742 = !{i64 2147649387, i64 2147649430, i64 2147649470}
!5743 = !DILocation(line: 262, column: 1, scope: !5239)
!5744 = !{i64 2147649610, i64 2147649653, i64 2147649693}
!5745 = !DILocation(line: 263, column: 1, scope: !5239)
!5746 = !{i64 2147649834, i64 2147649877, i64 2147649917}
!5747 = !DILocation(line: 264, column: 1, scope: !5239)
!5748 = !{i64 2147650072, i64 2147650115, i64 2147650155}
!5749 = !DILocation(line: 265, column: 1, scope: !5239)
!5750 = !{i64 2147650310, i64 2147650353, i64 2147650393}
!5751 = !DILocation(line: 266, column: 1, scope: !5239)
!5752 = !{i64 2147650527, i64 2147650570, i64 2147650610}
!5753 = !DILocation(line: 267, column: 1, scope: !5239)
!5754 = !{i64 2147650732, i64 2147650775, i64 2147650815}
!5755 = !DILocation(line: 268, column: 1, scope: !5239)
!5756 = !{i64 2147650925, i64 2147650968, i64 2147651008}
!5757 = !DILocation(line: 269, column: 1, scope: !5239)
!5758 = !{i64 2147651178, i64 2147651221, i64 2147651261}
!5759 = !DILocation(line: 270, column: 1, scope: !5239)
!5760 = !{i64 2147651386, i64 2147651429, i64 2147651469}
!5761 = !DILocation(line: 271, column: 1, scope: !5239)
!5762 = !{i64 2147651582, i64 2147651625, i64 2147651665}
!5763 = !DILocation(line: 272, column: 1, scope: !5239)
!5764 = !{i64 2147651796, i64 2147651839, i64 2147651879}
!5765 = !DILocation(line: 273, column: 1, scope: !5239)
!5766 = !{i64 2147652004, i64 2147652047, i64 2147652087}
!5767 = !DILocation(line: 274, column: 1, scope: !5239)
!5768 = !{i64 2147652194, i64 2147652237, i64 2147652277}
!5769 = !DILocation(line: 275, column: 1, scope: !5239)
!5770 = !{i64 2147652408, i64 2147652451, i64 2147652491}
!5771 = !DILocation(line: 276, column: 1, scope: !5239)
!5772 = !{i64 2147652670, i64 2147652713, i64 2147652753}
!5773 = !DILocation(line: 277, column: 1, scope: !5239)
!5774 = !{i64 2147652881, i64 2147652924, i64 2147652964}
!5775 = !DILocation(line: 278, column: 1, scope: !5239)
!5776 = !{i64 2147653125, i64 2147653168, i64 2147653208}
!5777 = !DILocation(line: 279, column: 1, scope: !5239)
!5778 = !{i64 2147653336, i64 2147653379, i64 2147653419}
!5779 = !DILocation(line: 280, column: 1, scope: !5239)
!5780 = !{i64 2147653565, i64 2147653608, i64 2147653648}
!5781 = !DILocation(line: 281, column: 1, scope: !5239)
!5782 = !{i64 2147653830, i64 2147653873, i64 2147653913}
!5783 = !DILocation(line: 282, column: 1, scope: !5239)
!5784 = !{i64 2147654035, i64 2147654078, i64 2147654118}
!5785 = !DILocation(line: 283, column: 1, scope: !5239)
!5786 = !{i64 2147654231, i64 2147654274, i64 2147654314}
!5787 = !DILocation(line: 284, column: 1, scope: !5239)
!5788 = !{i64 2147654454, i64 2147654497, i64 2147654537}
!5789 = !DILocation(line: 285, column: 1, scope: !5239)
!5790 = !{i64 2147654617, i64 2147654660, i64 2147654700}
!5791 = !DILocation(line: 286, column: 1, scope: !5239)
!5792 = !{i64 2147654822, i64 2147654865, i64 2147654905}
!5793 = !DILocation(line: 287, column: 1, scope: !5239)
!5794 = !{i64 2147655042, i64 2147655085, i64 2147655125}
!5795 = !DILocation(line: 288, column: 1, scope: !5239)
!5796 = !{i64 2147655256, i64 2147655299, i64 2147655339}
!5797 = !DILocation(line: 289, column: 1, scope: !5239)
!5798 = !{i64 2147655500, i64 2147655543, i64 2147655583}
!5799 = !DILocation(line: 290, column: 1, scope: !5239)
!5800 = !{i64 2147655732, i64 2147655775, i64 2147655815}
!5801 = !DILocation(line: 291, column: 1, scope: !5239)
!5802 = !{i64 2147655946, i64 2147655989, i64 2147656029}
!5803 = !DILocation(line: 292, column: 1, scope: !5239)
!5804 = !{i64 2147656157, i64 2147656200, i64 2147656240}
!5805 = !DILocation(line: 293, column: 1, scope: !5239)
!5806 = !{i64 2147656350, i64 2147656393, i64 2147656433}
!5807 = !DILocation(line: 294, column: 1, scope: !5239)
!5808 = !{i64 2147656549, i64 2147656592, i64 2147656632}
!5809 = !DILocation(line: 295, column: 1, scope: !5239)
!5810 = !{i64 2147656721, i64 2147656764, i64 2147656804}
!5811 = !DILocation(line: 296, column: 1, scope: !5239)
!5812 = !{i64 2147660975, i64 2147661018, i64 2147661058}
!5813 = !DILocation(line: 297, column: 1, scope: !5239)
!5814 = !{i64 2147661147, i64 2147661190, i64 2147661230}
!5815 = !DILocation(line: 298, column: 1, scope: !5239)
!5816 = !{i64 2147661337, i64 2147661380, i64 2147661420}
!5817 = !DILocation(line: 299, column: 1, scope: !5239)
!5818 = !{i64 2147661530, i64 2147661573, i64 2147661613}
!5819 = !DILocation(line: 300, column: 1, scope: !5239)
!5820 = !{i64 2147661726, i64 2147661769, i64 2147661809}
!5821 = !DILocation(line: 301, column: 1, scope: !5239)
!5822 = !{i64 2147661889, i64 2147661932, i64 2147661972}
!5823 = !DILocation(line: 302, column: 1, scope: !5239)
!5824 = !{i64 2147662091, i64 2147662134, i64 2147662174}
!5825 = !DILocation(line: 303, column: 1, scope: !5239)
!5826 = !{i64 2147662302, i64 2147662345, i64 2147662385}
!5827 = !DILocation(line: 304, column: 1, scope: !5239)
!5828 = !{i64 2147662507, i64 2147662550, i64 2147662590}
!5829 = !DILocation(line: 305, column: 1, scope: !5239)
!5830 = !{i64 2147662715, i64 2147662758, i64 2147662798}
!5831 = !DILocation(line: 306, column: 1, scope: !5239)
!5832 = !{i64 2147662908, i64 2147662951, i64 2147662991}
!5833 = !DILocation(line: 307, column: 1, scope: !5239)
!5834 = !{i64 2147663146, i64 2147663189, i64 2147663229}
!5835 = !DILocation(line: 308, column: 1, scope: !5239)
!5836 = !{i64 2147663333, i64 2147663376, i64 2147663416}
!5837 = !DILocation(line: 309, column: 1, scope: !5239)
!5838 = !{i64 2147663502, i64 2147663545, i64 2147663585}
!5839 = !DILocation(line: 310, column: 1, scope: !5239)
!5840 = !{i64 2147663695, i64 2147663738, i64 2147663778}
!5841 = !DILocation(line: 311, column: 1, scope: !5239)
!5842 = !{i64 2147663900, i64 2147663943, i64 2147663983}
!5843 = !DILocation(line: 312, column: 1, scope: !5239)
!5844 = !{i64 2147664111, i64 2147664154, i64 2147664194}
!5845 = !DILocation(line: 313, column: 1, scope: !5239)
!5846 = !{i64 2147664334, i64 2147664377, i64 2147664417}
!5847 = !DILocation(line: 314, column: 1, scope: !5239)
!5848 = !{i64 2147664548, i64 2147664591, i64 2147664631}
!5849 = !DILocation(line: 315, column: 1, scope: !5239)
!5850 = !{i64 2147664766, i64 2147664809, i64 2147664849}
!5851 = !DILocation(line: 316, column: 1, scope: !5239)
!5852 = !{i64 2147664980, i64 2147665023, i64 2147665063}
!5853 = !DILocation(line: 317, column: 1, scope: !5239)
!5854 = !{i64 2147665194, i64 2147665237, i64 2147665277}
!5855 = !DILocation(line: 318, column: 1, scope: !5239)
!5856 = !{i64 2147665411, i64 2147665454, i64 2147665494}
!5857 = !DILocation(line: 319, column: 1, scope: !5239)
!5858 = !{i64 2147665625, i64 2147665668, i64 2147665708}
!5859 = !DILocation(line: 320, column: 1, scope: !5239)
!5860 = !{i64 2147665866, i64 2147665909, i64 2147665949}
!5861 = !DILocation(line: 321, column: 1, scope: !5239)
!5862 = !{i64 2147666032, i64 2147666075, i64 2147666115}
!5863 = !DILocation(line: 322, column: 1, scope: !5239)
!5864 = !{i64 2147666259, i64 2147666302, i64 2147666342}
!5865 = !DILocation(line: 323, column: 1, scope: !5239)
!5866 = !{i64 2147666476, i64 2147666519, i64 2147666559}
!5867 = !DILocation(line: 324, column: 1, scope: !5239)
!5868 = !{i64 2147666702, i64 2147666745, i64 2147666785}
!5869 = !DILocation(line: 325, column: 1, scope: !5239)
!5870 = !{i64 2147666907, i64 2147666950, i64 2147666990}
!5871 = !DILocation(line: 326, column: 1, scope: !5239)
!5872 = !{i64 2147667124, i64 2147667167, i64 2147667207}
!5873 = !DILocation(line: 327, column: 1, scope: !5239)
!5874 = !{i64 2147667416, i64 2147667459, i64 2147667499}
!5875 = !DILocation(line: 328, column: 1, scope: !5239)
!5876 = !{i64 2147667648, i64 2147667691, i64 2147667731}
!5877 = !DILocation(line: 329, column: 1, scope: !5239)
!5878 = !{i64 2147667865, i64 2147667908, i64 2147667948}
!5879 = !DILocation(line: 330, column: 1, scope: !5239)
!5880 = !{i64 2147668072, i64 2147668115, i64 2147668155}
!5881 = !DILocation(line: 331, column: 1, scope: !5239)
!5882 = !{i64 2147668273, i64 2147668316, i64 2147668356}
!5883 = !DILocation(line: 332, column: 1, scope: !5239)
!5884 = !{i64 2147668505, i64 2147668548, i64 2147668588}
!5885 = !DILocation(line: 333, column: 1, scope: !5239)
!5886 = !{i64 2147668713, i64 2147668756, i64 2147668796}
!5887 = !DILocation(line: 334, column: 1, scope: !5239)
!5888 = !{i64 2147668903, i64 2147668946, i64 2147668986}
!5889 = !DILocation(line: 335, column: 1, scope: !5239)
!5890 = !{i64 2147669129, i64 2147669172, i64 2147669212}
!5891 = !DILocation(line: 336, column: 1, scope: !5239)
!5892 = !{i64 2147669318, i64 2147669361, i64 2147669401}
!5893 = !DILocation(line: 337, column: 1, scope: !5239)
!5894 = !{i64 2147669589, i64 2147669632, i64 2147669672}
!5895 = !DILocation(line: 338, column: 1, scope: !5239)
!5896 = !{i64 2147669809, i64 2147669852, i64 2147669892}
!5897 = !DILocation(line: 339, column: 1, scope: !5239)
!5898 = !{i64 2147674123, i64 2147674166, i64 2147674206}
!5899 = !DILocation(line: 340, column: 1, scope: !5239)
!5900 = !{i64 2147674331, i64 2147674374, i64 2147674414}
!5901 = !DILocation(line: 341, column: 1, scope: !5239)
!5902 = !{i64 2147674563, i64 2147674606, i64 2147674646}
!5903 = !DILocation(line: 342, column: 1, scope: !5239)
!5904 = !{i64 2147674774, i64 2147674817, i64 2147674857}
!5905 = !DILocation(line: 343, column: 1, scope: !5239)
!5906 = !{i64 2147674964, i64 2147675007, i64 2147675047}
!5907 = !DILocation(line: 344, column: 1, scope: !5239)
!5908 = !{i64 2147675178, i64 2147675221, i64 2147675261}
!5909 = !DILocation(line: 345, column: 1, scope: !5239)
!5910 = !{i64 2147675377, i64 2147675420, i64 2147675460}
!5911 = !DILocation(line: 346, column: 1, scope: !5239)
!5912 = !{i64 2147675564, i64 2147675607, i64 2147675647}
!5913 = !DILocation(line: 347, column: 1, scope: !5239)
!5914 = !{i64 2147675760, i64 2147675803, i64 2147675843}
!5915 = !DILocation(line: 348, column: 1, scope: !5239)
!5916 = !{i64 2147675968, i64 2147676011, i64 2147676051}
!5917 = !DILocation(line: 349, column: 1, scope: !5239)
!5918 = !{i64 2147676197, i64 2147676240, i64 2147676280}
!5919 = !DILocation(line: 350, column: 1, scope: !5239)
!5920 = !{i64 2147676399, i64 2147676442, i64 2147676482}
!5921 = !DILocation(line: 351, column: 1, scope: !5239)
!5922 = !{i64 2147676598, i64 2147676641, i64 2147676681}
!5923 = !DILocation(line: 352, column: 1, scope: !5239)
!5924 = !{i64 2147676815, i64 2147676858, i64 2147676898}
!5925 = !DILocation(line: 354, column: 1, scope: !5239)
!5926 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !235, file: !235, line: 30, type: !242, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5927)
!5927 = !{!5928, !5929}
!5928 = !DILocalVariable(name: "arg", arg: 1, scope: !5926, file: !235, line: 30, type: !244)
!5929 = !DILocalVariable(name: "key", scope: !5926, file: !235, line: 32, type: !152)
!5930 = !DILocation(line: 0, scope: !5926)
!5931 = !DILocation(line: 37, column: 2, scope: !5926)
!5932 = !DILocation(line: 38, column: 2, scope: !5926)
!5933 = !DILocation(line: 55, column: 2, scope: !5934, inlinedAt: !5941)
!5934 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5935, file: !5935, line: 42, type: !5936, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5938)
!5935 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5936 = !DISubroutineType(types: !5937)
!5937 = !{!32}
!5938 = !{!5939, !5940}
!5939 = !DILocalVariable(name: "key", scope: !5934, file: !5935, line: 44, type: !32)
!5940 = !DILocalVariable(name: "tmp", scope: !5934, file: !5935, line: 53, type: !32)
!5941 = distinct !DILocation(line: 40, column: 8, scope: !5926)
!5942 = !{i64 2135963}
!5943 = !DILocation(line: 0, scope: !5934, inlinedAt: !5941)
!5944 = !DILocalVariable(name: "key", arg: 1, scope: !5945, file: !5935, line: 84, type: !32)
!5945 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5935, file: !5935, line: 84, type: !5946, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5948)
!5946 = !DISubroutineType(types: !5947)
!5947 = !{null, !32}
!5948 = !{!5944}
!5949 = !DILocation(line: 0, scope: !5945, inlinedAt: !5950)
!5950 = distinct !DILocation(line: 47, column: 2, scope: !5926)
!5951 = !DILocation(line: 95, column: 2, scope: !5945, inlinedAt: !5950)
!5952 = !{i64 2136780}
!5953 = !DILocation(line: 51, column: 18, scope: !5926)
!5954 = !DILocation(line: 53, column: 2, scope: !5926)
!5955 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5956, file: !5956, line: 1609, type: !3082, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2156)
!5956 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5957 = !DILocation(line: 1611, column: 3, scope: !5955)
!5958 = !DILocation(line: 1612, column: 1, scope: !5955)
!5959 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5956, file: !5956, line: 1629, type: !3082, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2156)
!5960 = !DILocation(line: 1631, column: 3, scope: !5959)
!5961 = !DILocation(line: 1632, column: 1, scope: !5959)
!5962 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !271, file: !271, line: 26, type: !277, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !268, retainedNodes: !5963)
!5963 = !{!5964}
!5964 = !DILocalVariable(name: "dev", arg: 1, scope: !5962, file: !271, line: 26, type: !279)
!5965 = !DILocation(line: 0, scope: !5962)
!5966 = !DILocation(line: 68, column: 2, scope: !5962)
!5967 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !5968, file: !5968, line: 14, type: !4192, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5969)
!5968 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5969 = !{!5970, !5971}
!5970 = !DILocalVariable(name: "fmt", arg: 1, scope: !5967, file: !5968, line: 14, type: !118)
!5971 = !DILocalVariable(name: "ap", scope: !5967, file: !5968, line: 16, type: !5972)
!5972 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3202, line: 99, baseType: !5973)
!5973 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3202, line: 40, baseType: !5974)
!5974 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5968, baseType: !5975)
!5975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5976)
!5976 = !{!5977}
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5975, file: !5968, line: 16, baseType: !106, size: 32)
!5978 = !DILocation(line: 0, scope: !5967)
!5979 = !DILocation(line: 16, column: 2, scope: !5967)
!5980 = !DILocation(line: 16, column: 10, scope: !5967)
!5981 = !DILocation(line: 18, column: 2, scope: !5967)
!5982 = !DILocation(line: 19, column: 2, scope: !5967)
!5983 = !DILocation(line: 20, column: 2, scope: !5967)
!5984 = !DILocation(line: 21, column: 1, scope: !5967)
!5985 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !5968, file: !5968, line: 23, type: !5986, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5988)
!5986 = !DISubroutineType(types: !5987)
!5987 = !{null, !118, !5972}
!5988 = !{!5989, !5990}
!5989 = !DILocalVariable(name: "fmt", arg: 1, scope: !5985, file: !5968, line: 23, type: !118)
!5990 = !DILocalVariable(name: "ap", arg: 2, scope: !5985, file: !5968, line: 23, type: !5972)
!5991 = !DILocation(line: 0, scope: !5985)
!5992 = !DILocation(line: 25, column: 2, scope: !5985)
!5993 = !DILocation(line: 26, column: 1, scope: !5985)
!5994 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !5968, file: !5968, line: 52, type: !5995, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5997)
!5995 = !DISubroutineType(types: !5996)
!5996 = !{null, !107, !13, !185}
!5997 = !{!5998, !5999, !6000, !6001}
!5998 = !DILocalVariable(name: "level", arg: 1, scope: !5994, file: !5968, line: 52, type: !107)
!5999 = !DILocalVariable(name: "data", arg: 2, scope: !5994, file: !5968, line: 52, type: !13)
!6000 = !DILocalVariable(name: "size", arg: 3, scope: !5994, file: !5968, line: 52, type: !185)
!6001 = !DILocalVariable(name: "data_buffer", scope: !5994, file: !5968, line: 54, type: !118)
!6002 = !DILocation(line: 0, scope: !5994)
!6003 = !DILocation(line: 55, column: 14, scope: !5994)
!6004 = !DILocation(line: 55, column: 2, scope: !5994)
!6005 = !DILocation(line: 56, column: 3, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5994, file: !5968, line: 55, column: 20)
!6007 = !DILocation(line: 57, column: 3, scope: !6006)
!6008 = !DILocation(line: 59, column: 7, scope: !6006)
!6009 = distinct !{!6009, !6004, !6010}
!6010 = !DILocation(line: 65, column: 2, scope: !5994)
!6011 = !DILocation(line: 66, column: 1, scope: !5994)
!6012 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6013, file: !6013, line: 175, type: !6014, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !6016)
!6013 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6014 = !DISubroutineType(types: !6015)
!6015 = !{!120, !107}
!6016 = !{!6017}
!6017 = !DILocalVariable(name: "level", arg: 1, scope: !6012, file: !6013, line: 175, type: !107)
!6018 = !DILocation(line: 0, scope: !6012)
!6019 = !DILocation(line: 177, column: 2, scope: !6012)
!6020 = !DILocation(line: 189, column: 1, scope: !6012)
!6021 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !5968, file: !5968, line: 28, type: !6022, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !6024)
!6022 = !DISubroutineType(types: !6023)
!6023 = !{null, !118, !185}
!6024 = !{!6025, !6026, !6027, !6029, !6031}
!6025 = !DILocalVariable(name: "data", arg: 1, scope: !6021, file: !5968, line: 28, type: !118)
!6026 = !DILocalVariable(name: "length", arg: 2, scope: !6021, file: !5968, line: 28, type: !185)
!6027 = !DILocalVariable(name: "i", scope: !6028, file: !5968, line: 30, type: !185)
!6028 = distinct !DILexicalBlock(scope: !6021, file: !5968, line: 30, column: 2)
!6029 = !DILocalVariable(name: "i", scope: !6030, file: !5968, line: 40, type: !185)
!6030 = distinct !DILexicalBlock(scope: !6021, file: !5968, line: 40, column: 2)
!6031 = !DILocalVariable(name: "c", scope: !6032, file: !5968, line: 42, type: !196)
!6032 = distinct !DILexicalBlock(scope: !6033, file: !5968, line: 41, column: 19)
!6033 = distinct !DILexicalBlock(scope: !6034, file: !5968, line: 41, column: 7)
!6034 = distinct !DILexicalBlock(scope: !6035, file: !5968, line: 40, column: 54)
!6035 = distinct !DILexicalBlock(scope: !6030, file: !5968, line: 40, column: 2)
!6036 = !DILocation(line: 0, scope: !6021)
!6037 = !DILocation(line: 0, scope: !6028)
!6038 = !DILocation(line: 30, column: 2, scope: !6028)
!6039 = !DILocation(line: 38, column: 2, scope: !6021)
!6040 = !DILocation(line: 0, scope: !6030)
!6041 = !DILocation(line: 40, column: 2, scope: !6030)
!6042 = !DILocation(line: 31, column: 9, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6044, file: !5968, line: 31, column: 7)
!6044 = distinct !DILexicalBlock(scope: !6045, file: !5968, line: 30, column: 54)
!6045 = distinct !DILexicalBlock(scope: !6028, file: !5968, line: 30, column: 2)
!6046 = !DILocation(line: 31, column: 7, scope: !6044)
!6047 = !DILocation(line: 32, column: 35, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6043, file: !5968, line: 31, column: 19)
!6049 = !DILocation(line: 32, column: 20, scope: !6048)
!6050 = !DILocation(line: 32, column: 4, scope: !6048)
!6051 = !DILocation(line: 33, column: 3, scope: !6048)
!6052 = !DILocation(line: 34, column: 4, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6043, file: !5968, line: 33, column: 10)
!6054 = !DILocation(line: 30, column: 50, scope: !6045)
!6055 = !DILocation(line: 30, column: 24, scope: !6045)
!6056 = distinct !{!6056, !6038, !6057}
!6057 = !DILocation(line: 36, column: 2, scope: !6028)
!6058 = !DILocation(line: 49, column: 2, scope: !6021)
!6059 = !DILocation(line: 50, column: 1, scope: !6021)
!6060 = !DILocation(line: 41, column: 9, scope: !6033)
!6061 = !DILocation(line: 41, column: 7, scope: !6034)
!6062 = !DILocation(line: 42, column: 22, scope: !6032)
!6063 = !DILocation(line: 0, scope: !6032)
!6064 = !DILocation(line: 44, column: 25, scope: !6032)
!6065 = !DILocation(line: 44, column: 17, scope: !6032)
!6066 = !DILocation(line: 44, column: 33, scope: !6032)
!6067 = !DILocation(line: 44, column: 4, scope: !6032)
!6068 = !DILocation(line: 45, column: 3, scope: !6032)
!6069 = !DILocation(line: 46, column: 4, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6033, file: !5968, line: 45, column: 10)
!6071 = !DILocation(line: 40, column: 50, scope: !6035)
!6072 = !DILocation(line: 40, column: 24, scope: !6035)
!6073 = distinct !{!6073, !6041, !6074}
!6074 = !DILocation(line: 48, column: 2, scope: !6030)
!6075 = distinct !DISubprogram(name: "isprint", scope: !4983, file: !4983, line: 37, type: !214, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !6076)
!6076 = !{!6077}
!6077 = !DILocalVariable(name: "c", arg: 1, scope: !6075, file: !4983, line: 37, type: !107)
!6078 = !DILocation(line: 0, scope: !6075)
!6079 = !DILocation(line: 39, column: 38, scope: !6075)
!6080 = !DILocation(line: 39, column: 2, scope: !6075)
!6081 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6082, file: !6082, line: 57, type: !6083, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !6129)
!6082 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6083 = !DISubroutineType(types: !6084)
!6084 = !{null, !32, !6085}
!6085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6086, size: 32)
!6086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6087)
!6087 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2665, line: 141, baseType: !6088)
!6088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2665, line: 97, size: 256, elements: !6089)
!6089 = !{!6090}
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6088, file: !2665, line: 107, baseType: !6091, size: 256)
!6091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2665, line: 98, size: 256, elements: !6092)
!6092 = !{!6093, !6098, !6103, !6108, !6113, !6118, !6123, !6128}
!6093 = !DIDerivedType(tag: DW_TAG_member, scope: !6091, file: !2665, line: 99, baseType: !6094, size: 32)
!6094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6091, file: !2665, line: 99, size: 32, elements: !6095)
!6095 = !{!6096, !6097}
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6094, file: !2665, line: 99, baseType: !152, size: 32)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6094, file: !2665, line: 99, baseType: !152, size: 32)
!6098 = !DIDerivedType(tag: DW_TAG_member, scope: !6091, file: !2665, line: 100, baseType: !6099, size: 32, offset: 32)
!6099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6091, file: !2665, line: 100, size: 32, elements: !6100)
!6100 = !{!6101, !6102}
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6099, file: !2665, line: 100, baseType: !152, size: 32)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6099, file: !2665, line: 100, baseType: !152, size: 32)
!6103 = !DIDerivedType(tag: DW_TAG_member, scope: !6091, file: !2665, line: 101, baseType: !6104, size: 32, offset: 64)
!6104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6091, file: !2665, line: 101, size: 32, elements: !6105)
!6105 = !{!6106, !6107}
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6104, file: !2665, line: 101, baseType: !152, size: 32)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6104, file: !2665, line: 101, baseType: !152, size: 32)
!6108 = !DIDerivedType(tag: DW_TAG_member, scope: !6091, file: !2665, line: 102, baseType: !6109, size: 32, offset: 96)
!6109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6091, file: !2665, line: 102, size: 32, elements: !6110)
!6110 = !{!6111, !6112}
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6109, file: !2665, line: 102, baseType: !152, size: 32)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6109, file: !2665, line: 102, baseType: !152, size: 32)
!6113 = !DIDerivedType(tag: DW_TAG_member, scope: !6091, file: !2665, line: 103, baseType: !6114, size: 32, offset: 128)
!6114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6091, file: !2665, line: 103, size: 32, elements: !6115)
!6115 = !{!6116, !6117}
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6114, file: !2665, line: 103, baseType: !152, size: 32)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6114, file: !2665, line: 103, baseType: !152, size: 32)
!6118 = !DIDerivedType(tag: DW_TAG_member, scope: !6091, file: !2665, line: 104, baseType: !6119, size: 32, offset: 160)
!6119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6091, file: !2665, line: 104, size: 32, elements: !6120)
!6120 = !{!6121, !6122}
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6119, file: !2665, line: 104, baseType: !152, size: 32)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6119, file: !2665, line: 104, baseType: !152, size: 32)
!6123 = !DIDerivedType(tag: DW_TAG_member, scope: !6091, file: !2665, line: 105, baseType: !6124, size: 32, offset: 192)
!6124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6091, file: !2665, line: 105, size: 32, elements: !6125)
!6125 = !{!6126, !6127}
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6124, file: !2665, line: 105, baseType: !152, size: 32)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6124, file: !2665, line: 105, baseType: !152, size: 32)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6091, file: !2665, line: 106, baseType: !152, size: 32, offset: 224)
!6129 = !{!6130, !6131}
!6130 = !DILocalVariable(name: "reason", arg: 1, scope: !6081, file: !6082, line: 57, type: !32)
!6131 = !DILocalVariable(name: "esf", arg: 2, scope: !6081, file: !6082, line: 57, type: !6085)
!6132 = !DILocation(line: 0, scope: !6081)
!6133 = !DILocation(line: 60, column: 10, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6081, file: !6082, line: 60, column: 6)
!6135 = !DILocation(line: 60, column: 6, scope: !6081)
!6136 = !DILocation(line: 61, column: 3, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6134, file: !6082, line: 60, column: 19)
!6138 = !DILocation(line: 62, column: 2, scope: !6137)
!6139 = !DILocation(line: 63, column: 2, scope: !6081)
!6140 = !DILocation(line: 64, column: 1, scope: !6081)
!6141 = distinct !DISubprogram(name: "esf_dump", scope: !6082, file: !6082, line: 20, type: !6142, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !6144)
!6142 = !DISubroutineType(types: !6143)
!6143 = !{null, !6085}
!6144 = !{!6145}
!6145 = !DILocalVariable(name: "esf", arg: 1, scope: !6141, file: !6082, line: 20, type: !6085)
!6146 = !DILocation(line: 0, scope: !6141)
!6147 = !DILocation(line: 22, column: 2, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6149, file: !6082, line: 22, column: 2)
!6149 = distinct !DILexicalBlock(scope: !6150, file: !6082, line: 22, column: 2)
!6150 = distinct !DILexicalBlock(scope: !6151, file: !6082, line: 22, column: 2)
!6151 = distinct !DILexicalBlock(scope: !6141, file: !6082, line: 22, column: 2)
!6152 = !DILocation(line: 24, column: 2, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6154, file: !6082, line: 24, column: 2)
!6154 = distinct !DILexicalBlock(scope: !6155, file: !6082, line: 24, column: 2)
!6155 = distinct !DILexicalBlock(scope: !6156, file: !6082, line: 24, column: 2)
!6156 = distinct !DILexicalBlock(scope: !6141, file: !6082, line: 24, column: 2)
!6157 = !DILocation(line: 26, column: 2, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6159, file: !6082, line: 26, column: 2)
!6159 = distinct !DILexicalBlock(scope: !6160, file: !6082, line: 26, column: 2)
!6160 = distinct !DILexicalBlock(scope: !6161, file: !6082, line: 26, column: 2)
!6161 = distinct !DILexicalBlock(scope: !6141, file: !6082, line: 26, column: 2)
!6162 = !DILocation(line: 53, column: 2, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6164, file: !6082, line: 53, column: 2)
!6164 = distinct !DILexicalBlock(scope: !6165, file: !6082, line: 53, column: 2)
!6165 = distinct !DILexicalBlock(scope: !6166, file: !6082, line: 53, column: 2)
!6166 = distinct !DILexicalBlock(scope: !6141, file: !6082, line: 53, column: 2)
!6167 = !DILocation(line: 55, column: 1, scope: !6141)
!6168 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6082, file: !6082, line: 82, type: !6169, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !6184)
!6169 = !DISubroutineType(types: !6170)
!6170 = !{null, !6085, !6171}
!6171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6172, size: 32)
!6172 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6173)
!6173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6174)
!6174 = !{!6175, !6176, !6177, !6178, !6179, !6180, !6181, !6182, !6183}
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6173, file: !379, line: 26, baseType: !152, size: 32)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6173, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6173, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6173, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6173, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6173, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6173, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6173, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6173, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6184 = !{!6185, !6186, !6187}
!6185 = !DILocalVariable(name: "esf", arg: 1, scope: !6168, file: !6082, line: 82, type: !6085)
!6186 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6168, file: !6082, line: 82, type: !6171)
!6187 = !DILocalVariable(name: "reason", scope: !6168, file: !6082, line: 88, type: !32)
!6188 = !DILocation(line: 0, scope: !6168)
!6189 = !DILocation(line: 88, column: 35, scope: !6168)
!6190 = !DILocation(line: 108, column: 2, scope: !6168)
!6191 = !DILocation(line: 131, column: 1, scope: !6168)
!6192 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6082, file: !6082, line: 133, type: !131, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !6193)
!6193 = !{!6194, !6195, !6196}
!6194 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6192, file: !6082, line: 133, type: !106)
!6195 = !DILocalVariable(name: "ssf_contents", scope: !6192, file: !6082, line: 135, type: !1014)
!6196 = !DILocalVariable(name: "oops_esf", scope: !6192, file: !6082, line: 136, type: !6087)
!6197 = !DILocation(line: 0, scope: !6192)
!6198 = !DILocation(line: 136, column: 2, scope: !6192)
!6199 = !DILocation(line: 136, column: 15, scope: !6192)
!6200 = !DILocation(line: 139, column: 22, scope: !6192)
!6201 = !DILocation(line: 139, column: 17, scope: !6192)
!6202 = !DILocation(line: 139, column: 20, scope: !6192)
!6203 = !DILocation(line: 141, column: 2, scope: !6192)
!6204 = !DILocation(line: 142, column: 2, scope: !6192)
!6205 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6206, file: !6206, line: 40, type: !5946, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !6207)
!6206 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6207 = !{!6208}
!6208 = !DILocalVariable(name: "irq", arg: 1, scope: !6205, file: !6206, line: 40, type: !32)
!6209 = !DILocation(line: 0, scope: !6205)
!6210 = !DILocation(line: 42, column: 2, scope: !6205)
!6211 = !DILocation(line: 43, column: 1, scope: !6205)
!6212 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !463, file: !463, line: 1684, type: !6213, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !6215)
!6213 = !DISubroutineType(types: !6214)
!6214 = !{null, !921}
!6215 = !{!6216}
!6216 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6212, file: !463, line: 1684, type: !921)
!6217 = !DILocation(line: 0, scope: !6212)
!6218 = !DILocation(line: 1686, column: 23, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6212, file: !463, line: 1686, column: 7)
!6220 = !DILocation(line: 1686, column: 7, scope: !6212)
!6221 = !DILocation(line: 1688, column: 5, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6219, file: !463, line: 1687, column: 3)
!6223 = !{i64 2151028189}
!6224 = !DILocation(line: 1689, column: 81, scope: !6222)
!6225 = !DILocation(line: 1689, column: 60, scope: !6222)
!6226 = !DILocation(line: 1689, column: 34, scope: !6222)
!6227 = !DILocation(line: 1689, column: 5, scope: !6222)
!6228 = !DILocation(line: 1689, column: 43, scope: !6222)
!6229 = !DILocation(line: 1690, column: 5, scope: !6222)
!6230 = !{i64 2151028303}
!6231 = !DILocation(line: 1691, column: 3, scope: !6222)
!6232 = !DILocation(line: 1692, column: 1, scope: !6212)
!6233 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6206, file: !6206, line: 45, type: !5946, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !6234)
!6234 = !{!6235}
!6235 = !DILocalVariable(name: "irq", arg: 1, scope: !6233, file: !6206, line: 45, type: !32)
!6236 = !DILocation(line: 0, scope: !6233)
!6237 = !DILocation(line: 47, column: 2, scope: !6233)
!6238 = !DILocation(line: 48, column: 1, scope: !6233)
!6239 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !463, file: !463, line: 1722, type: !6213, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !6240)
!6240 = !{!6241}
!6241 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6239, file: !463, line: 1722, type: !921)
!6242 = !DILocation(line: 0, scope: !6239)
!6243 = !DILocation(line: 1724, column: 23, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6239, file: !463, line: 1724, column: 7)
!6245 = !DILocation(line: 1724, column: 7, scope: !6239)
!6246 = !DILocation(line: 1726, column: 81, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6244, file: !463, line: 1725, column: 3)
!6248 = !DILocation(line: 1726, column: 60, scope: !6247)
!6249 = !DILocation(line: 1726, column: 34, scope: !6247)
!6250 = !DILocation(line: 1726, column: 5, scope: !6247)
!6251 = !DILocation(line: 1726, column: 43, scope: !6247)
!6252 = !DILocation(line: 271, column: 3, scope: !6253, inlinedAt: !6255)
!6253 = distinct !DISubprogram(name: "__DSB", scope: !6254, file: !6254, line: 269, type: !3082, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !2156)
!6254 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6255 = distinct !DILocation(line: 1727, column: 5, scope: !6247)
!6256 = !{i64 3482572}
!6257 = !DILocation(line: 260, column: 3, scope: !6258, inlinedAt: !6259)
!6258 = distinct !DISubprogram(name: "__ISB", scope: !6254, file: !6254, line: 258, type: !3082, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !2156)
!6259 = distinct !DILocation(line: 1728, column: 5, scope: !6247)
!6260 = !{i64 3482289}
!6261 = !DILocation(line: 1729, column: 3, scope: !6247)
!6262 = !DILocation(line: 1730, column: 1, scope: !6239)
!6263 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6206, file: !6206, line: 50, type: !6264, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !6266)
!6264 = !DISubroutineType(types: !6265)
!6265 = !{!107, !32}
!6266 = !{!6267}
!6267 = !DILocalVariable(name: "irq", arg: 1, scope: !6263, file: !6206, line: 50, type: !32)
!6268 = !DILocation(line: 0, scope: !6263)
!6269 = !DILocation(line: 52, column: 20, scope: !6263)
!6270 = !DILocation(line: 52, column: 9, scope: !6263)
!6271 = !DILocation(line: 52, column: 41, scope: !6263)
!6272 = !DILocation(line: 52, column: 39, scope: !6263)
!6273 = !DILocation(line: 52, column: 2, scope: !6263)
!6274 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6206, file: !6206, line: 64, type: !6275, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !6277)
!6275 = !DISubroutineType(types: !6276)
!6276 = !{null, !32, !32, !152}
!6277 = !{!6278, !6279, !6280}
!6278 = !DILocalVariable(name: "irq", arg: 1, scope: !6274, file: !6206, line: 64, type: !32)
!6279 = !DILocalVariable(name: "prio", arg: 2, scope: !6274, file: !6206, line: 64, type: !32)
!6280 = !DILocalVariable(name: "flags", arg: 3, scope: !6274, file: !6206, line: 64, type: !152)
!6281 = !DILocation(line: 0, scope: !6274)
!6282 = !DILocation(line: 83, column: 8, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6284, file: !6206, line: 82, column: 9)
!6284 = distinct !DILexicalBlock(scope: !6274, file: !6206, line: 76, column: 6)
!6285 = !DILocation(line: 91, column: 2, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6287, file: !6206, line: 91, column: 2)
!6287 = distinct !DILexicalBlock(scope: !6274, file: !6206, line: 91, column: 2)
!6288 = !DILocation(line: 91, column: 2, scope: !6287)
!6289 = !DILocation(line: 91, column: 2, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6286, file: !6206, line: 91, column: 2)
!6291 = !DILocation(line: 95, column: 2, scope: !6274)
!6292 = !DILocation(line: 96, column: 1, scope: !6274)
!6293 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6294, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !6296)
!6294 = !DISubroutineType(types: !6295)
!6295 = !{null, !921, !152}
!6296 = !{!6297, !6298}
!6297 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6293, file: !463, line: 1814, type: !921)
!6298 = !DILocalVariable(name: "priority", arg: 2, scope: !6293, file: !463, line: 1814, type: !152)
!6299 = !DILocation(line: 0, scope: !6293)
!6300 = !DILocation(line: 0, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6293, file: !463, line: 1816, column: 7)
!6302 = !DILocation(line: 1816, column: 7, scope: !6293)
!6303 = !DILocation(line: 1824, column: 1, scope: !6293)
!6304 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6206, file: !6206, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !6305)
!6305 = !{!6306}
!6306 = !DILocalVariable(name: "unused", arg: 1, scope: !6304, file: !6206, line: 155, type: !13)
!6307 = !DILocation(line: 0, scope: !6304)
!6308 = !DILocation(line: 159, column: 2, scope: !6304)
!6309 = !DILocation(line: 160, column: 1, scope: !6304)
!6310 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6311, file: !6311, line: 87, type: !3082, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !2156)
!6311 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6312 = !DILocation(line: 89, column: 2, scope: !6310)
!6313 = !DILocation(line: 90, column: 2, scope: !6310)
!6314 = !DILocation(line: 91, column: 1, scope: !6310)
!6315 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6311, file: !6311, line: 23, type: !3082, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!6316 = !DISubprogram(name: "z_arm_int_exit", scope: !6317, file: !6317, line: 153, type: !3082, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!6317 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6318 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6319, file: !6319, line: 256, type: !3082, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !2156)
!6319 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6320 = !DILocation(line: 258, column: 2, scope: !6318)
!6321 = !DILocation(line: 260, column: 2, scope: !6318)
!6322 = !DILocation(line: 262, column: 2, scope: !6318)
!6323 = !DILocation(line: 263, column: 2, scope: !6318)
!6324 = !DILocation(line: 267, column: 2, scope: !6318)
!6325 = !DILocation(line: 268, column: 2, scope: !6318)
!6326 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6319, file: !6319, line: 53, type: !3082, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !2156)
!6327 = !DILocation(line: 55, column: 12, scope: !6326)
!6328 = !DILocation(line: 271, column: 3, scope: !6329, inlinedAt: !6330)
!6329 = distinct !DISubprogram(name: "__DSB", scope: !6254, file: !6254, line: 269, type: !3082, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !2156)
!6330 = distinct !DILocation(line: 56, column: 2, scope: !6326)
!6331 = !{i64 3481243}
!6332 = !DILocation(line: 260, column: 3, scope: !6333, inlinedAt: !6334)
!6333 = distinct !DISubprogram(name: "__ISB", scope: !6254, file: !6254, line: 258, type: !3082, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !2156)
!6334 = distinct !DILocation(line: 57, column: 2, scope: !6326)
!6335 = !{i64 3480960}
!6336 = !DILocation(line: 58, column: 1, scope: !6326)
!6337 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6319, file: !6319, line: 96, type: !3082, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !2156)
!6338 = !DILocation(line: 103, column: 13, scope: !6337)
!6339 = !DILocation(line: 975, column: 3, scope: !6340, inlinedAt: !6345)
!6340 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6254, file: !6254, line: 971, type: !6341, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !6343)
!6341 = !DISubroutineType(types: !6342)
!6342 = !{!152}
!6343 = !{!6344}
!6344 = !DILocalVariable(name: "result", scope: !6340, file: !6254, line: 973, type: !152)
!6345 = distinct !DILocation(line: 189, column: 16, scope: !6337)
!6346 = !{i64 3502073}
!6347 = !DILocation(line: 0, scope: !6340, inlinedAt: !6345)
!6348 = !DILocation(line: 189, column: 32, scope: !6337)
!6349 = !DILocalVariable(name: "control", arg: 1, scope: !6350, file: !6254, line: 1001, type: !152)
!6350 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6254, file: !6254, line: 1001, type: !6351, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !6353)
!6351 = !DISubroutineType(types: !6352)
!6352 = !{null, !152}
!6353 = !{!6349}
!6354 = !DILocation(line: 0, scope: !6350, inlinedAt: !6355)
!6355 = distinct !DILocation(line: 189, column: 2, scope: !6337)
!6356 = !DILocation(line: 1003, column: 3, scope: !6350, inlinedAt: !6355)
!6357 = !{i64 3502793}
!6358 = !DILocation(line: 260, column: 3, scope: !6333, inlinedAt: !6359)
!6359 = distinct !DILocation(line: 1004, column: 3, scope: !6350, inlinedAt: !6355)
!6360 = !DILocation(line: 191, column: 1, scope: !6337)
!6361 = distinct !DISubprogram(name: "arch_swap", scope: !6362, file: !6362, line: 33, type: !6264, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !6363)
!6362 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6363 = !{!6364}
!6364 = !DILocalVariable(name: "key", arg: 1, scope: !6361, file: !6362, line: 33, type: !32)
!6365 = !DILocation(line: 0, scope: !6361)
!6366 = !DILocation(line: 36, column: 2, scope: !6361)
!6367 = !DILocation(line: 36, column: 17, scope: !6361)
!6368 = !DILocation(line: 36, column: 25, scope: !6361)
!6369 = !DILocation(line: 37, column: 37, scope: !6361)
!6370 = !DILocation(line: 37, column: 17, scope: !6361)
!6371 = !DILocation(line: 37, column: 35, scope: !6361)
!6372 = !DILocation(line: 41, column: 12, scope: !6361)
!6373 = !DILocalVariable(name: "key", arg: 1, scope: !6374, file: !5935, line: 84, type: !32)
!6374 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5935, file: !5935, line: 84, type: !5946, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !6375)
!6375 = !{!6373}
!6376 = !DILocation(line: 0, scope: !6374, inlinedAt: !6377)
!6377 = distinct !DILocation(line: 44, column: 2, scope: !6361)
!6378 = !DILocation(line: 95, column: 2, scope: !6374, inlinedAt: !6377)
!6379 = !{i64 2243307}
!6380 = !DILocation(line: 53, column: 9, scope: !6361)
!6381 = !DILocation(line: 53, column: 24, scope: !6361)
!6382 = !DILocation(line: 53, column: 2, scope: !6361)
!6383 = distinct !DISubprogram(name: "arch_new_thread", scope: !6384, file: !6384, line: 56, type: !6385, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !6495)
!6384 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6385 = !DISubroutineType(types: !6386)
!6386 = !{null, !6387, !6490, !193, !559, !106, !106, !106}
!6387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6388, size: 32)
!6388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !6389)
!6389 = !{!6390, !6448, !6460, !6461, !6462, !6463, !6464, !6470, !6485}
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6388, file: !309, line: 247, baseType: !6391, size: 384)
!6391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !6392)
!6392 = !{!6393, !6417, !6424, !6425, !6426, !6435, !6436, !6437}
!6393 = !DIDerivedType(tag: DW_TAG_member, scope: !6391, file: !309, line: 60, baseType: !6394, size: 64)
!6394 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6391, file: !309, line: 60, size: 64, elements: !6395)
!6395 = !{!6396, !6411}
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6394, file: !309, line: 61, baseType: !6397, size: 64)
!6397 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !6398)
!6398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !6399)
!6399 = !{!6400, !6406}
!6400 = !DIDerivedType(tag: DW_TAG_member, scope: !6398, file: !319, line: 38, baseType: !6401, size: 32)
!6401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6398, file: !319, line: 38, size: 32, elements: !6402)
!6402 = !{!6403, !6405}
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6401, file: !319, line: 39, baseType: !6404, size: 32)
!6404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6398, size: 32)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6401, file: !319, line: 40, baseType: !6404, size: 32)
!6406 = !DIDerivedType(tag: DW_TAG_member, scope: !6398, file: !319, line: 42, baseType: !6407, size: 32, offset: 32)
!6407 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6398, file: !319, line: 42, size: 32, elements: !6408)
!6408 = !{!6409, !6410}
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6407, file: !319, line: 43, baseType: !6404, size: 32)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6407, file: !319, line: 44, baseType: !6404, size: 32)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6394, file: !309, line: 62, baseType: !6412, size: 64)
!6412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !6413)
!6413 = !{!6414}
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6412, file: !335, line: 50, baseType: !6415, size: 64)
!6415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6416, size: 64, elements: !340)
!6416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6412, size: 32)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6391, file: !309, line: 68, baseType: !6418, size: 32, offset: 64)
!6418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6419, size: 32)
!6419 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !6420)
!6420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !6421)
!6421 = !{!6422}
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6420, file: !345, line: 232, baseType: !6423, size: 64)
!6423 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !6398)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6391, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6391, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!6426 = !DIDerivedType(tag: DW_TAG_member, scope: !6391, file: !309, line: 90, baseType: !6427, size: 16, offset: 112)
!6427 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6391, file: !309, line: 90, size: 16, elements: !6428)
!6428 = !{!6429, !6434}
!6429 = !DIDerivedType(tag: DW_TAG_member, scope: !6427, file: !309, line: 91, baseType: !6430, size: 16)
!6430 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6427, file: !309, line: 91, size: 16, elements: !6431)
!6431 = !{!6432, !6433}
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6430, file: !309, line: 96, baseType: !359, size: 8)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6430, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6427, file: !309, line: 100, baseType: !197, size: 16)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6391, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6391, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6391, file: !309, line: 131, baseType: !6438, size: 192, offset: 192)
!6438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !6439)
!6439 = !{!6440, !6441, !6447}
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6438, file: !345, line: 245, baseType: !6397, size: 64)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6438, file: !345, line: 246, baseType: !6442, size: 32, offset: 64)
!6442 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !6443)
!6443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6444, size: 32)
!6444 = !DISubroutineType(types: !6445)
!6445 = !{null, !6446}
!6446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6438, size: 32)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6438, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6388, file: !309, line: 250, baseType: !6449, size: 288, offset: 384)
!6449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6450)
!6450 = !{!6451, !6452, !6453, !6454, !6455, !6456, !6457, !6458, !6459}
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6449, file: !379, line: 26, baseType: !152, size: 32)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6449, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6449, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6449, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6449, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6449, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6449, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6449, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6449, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6388, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6388, file: !309, line: 256, baseType: !6419, size: 64, offset: 704)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6388, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6388, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6388, file: !309, line: 300, baseType: !6465, size: 96, offset: 1056)
!6465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !6466)
!6466 = !{!6467, !6468, !6469}
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6465, file: !309, line: 153, baseType: !22, size: 32)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6465, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6465, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6388, file: !309, line: 325, baseType: !6471, size: 32, offset: 1152)
!6471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6472, size: 32)
!6472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !6473)
!6473 = !{!6474, !6480, !6481}
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6472, file: !406, line: 5074, baseType: !6475, size: 96)
!6475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !6476)
!6476 = !{!6477, !6478, !6479}
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6475, file: !410, line: 57, baseType: !413, size: 32)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6475, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6475, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6472, file: !406, line: 5075, baseType: !6419, size: 64, offset: 96)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6472, file: !406, line: 5076, baseType: !6482, size: 32, offset: 160)
!6482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !6483)
!6483 = !{!6484}
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6482, file: !420, line: 52, baseType: !22, size: 32)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6388, file: !309, line: 343, baseType: !6486, size: 64, offset: 1184)
!6486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !6487)
!6487 = !{!6488, !6489}
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6486, file: !379, line: 63, baseType: !152, size: 32)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6486, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!6490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6491, size: 32)
!6491 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !6492)
!6492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !6493)
!6493 = !{!6494}
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6492, file: !577, line: 48, baseType: !120, size: 8)
!6495 = !{!6496, !6497, !6498, !6499, !6500, !6501, !6502, !6503}
!6496 = !DILocalVariable(name: "thread", arg: 1, scope: !6383, file: !6384, line: 56, type: !6387)
!6497 = !DILocalVariable(name: "stack", arg: 2, scope: !6383, file: !6384, line: 56, type: !6490)
!6498 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6383, file: !6384, line: 57, type: !193)
!6499 = !DILocalVariable(name: "entry", arg: 4, scope: !6383, file: !6384, line: 57, type: !559)
!6500 = !DILocalVariable(name: "p1", arg: 5, scope: !6383, file: !6384, line: 58, type: !106)
!6501 = !DILocalVariable(name: "p2", arg: 6, scope: !6383, file: !6384, line: 58, type: !106)
!6502 = !DILocalVariable(name: "p3", arg: 7, scope: !6383, file: !6384, line: 58, type: !106)
!6503 = !DILocalVariable(name: "iframe", scope: !6383, file: !6384, line: 60, type: !2663)
!6504 = !DILocation(line: 0, scope: !6383)
!6505 = !DILocation(line: 85, column: 11, scope: !6383)
!6506 = !DILocation(line: 93, column: 10, scope: !6383)
!6507 = !DILocation(line: 98, column: 13, scope: !6383)
!6508 = !DILocation(line: 100, column: 15, scope: !6383)
!6509 = !DILocation(line: 100, column: 10, scope: !6383)
!6510 = !DILocation(line: 100, column: 13, scope: !6383)
!6511 = !DILocation(line: 101, column: 15, scope: !6383)
!6512 = !DILocation(line: 101, column: 10, scope: !6383)
!6513 = !DILocation(line: 101, column: 13, scope: !6383)
!6514 = !DILocation(line: 102, column: 15, scope: !6383)
!6515 = !DILocation(line: 102, column: 10, scope: !6383)
!6516 = !DILocation(line: 102, column: 13, scope: !6383)
!6517 = !DILocation(line: 103, column: 15, scope: !6383)
!6518 = !DILocation(line: 103, column: 10, scope: !6383)
!6519 = !DILocation(line: 103, column: 13, scope: !6383)
!6520 = !DILocation(line: 106, column: 10, scope: !6383)
!6521 = !DILocation(line: 106, column: 15, scope: !6383)
!6522 = !DILocation(line: 122, column: 29, scope: !6383)
!6523 = !DILocation(line: 122, column: 23, scope: !6383)
!6524 = !DILocation(line: 122, column: 27, scope: !6383)
!6525 = !DILocation(line: 123, column: 15, scope: !6383)
!6526 = !DILocation(line: 123, column: 23, scope: !6383)
!6527 = !DILocation(line: 143, column: 1, scope: !6383)
!6528 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6384, file: !6384, line: 385, type: !6529, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !6532)
!6529 = !DISubroutineType(types: !6530)
!6530 = !{!152, !6531, !6531}
!6531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!6532 = !{!6533, !6534, !6535, !6538}
!6533 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6528, file: !6384, line: 385, type: !6531)
!6534 = !DILocalVariable(name: "psp", arg: 2, scope: !6528, file: !6384, line: 385, type: !6531)
!6535 = !DILocalVariable(name: "thread", scope: !6528, file: !6384, line: 388, type: !6536)
!6536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6537, size: 32)
!6537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6388)
!6538 = !DILocalVariable(name: "guard_len", scope: !6528, file: !6384, line: 405, type: !152)
!6539 = !DILocation(line: 0, scope: !6528)
!6540 = !DILocation(line: 388, column: 34, scope: !6528)
!6541 = !DILocation(line: 390, column: 13, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6528, file: !6384, line: 390, column: 6)
!6543 = !DILocation(line: 390, column: 6, scope: !6528)
!6544 = !DILocation(line: 438, column: 6, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6528, file: !6384, line: 438, column: 6)
!6546 = !DILocation(line: 438, column: 6, scope: !6528)
!6547 = !DILocation(line: 442, column: 3, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6545, file: !6384, line: 440, column: 22)
!6549 = !DILocation(line: 455, column: 1, scope: !6528)
!6550 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6384, file: !6384, line: 530, type: !6551, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !6553)
!6551 = !DISubroutineType(types: !6552)
!6552 = !{null, !6387, !193, !559}
!6553 = !{!6554, !6555, !6556}
!6554 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6550, file: !6384, line: 530, type: !6387)
!6555 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6550, file: !6384, line: 530, type: !193)
!6556 = !DILocalVariable(name: "_main", arg: 3, scope: !6550, file: !6384, line: 531, type: !559)
!6557 = !DILocation(line: 0, scope: !6550)
!6558 = !DILocation(line: 535, column: 11, scope: !6550)
!6559 = !DILocation(line: 560, column: 2, scope: !6550)
!6560 = !DILocation(line: 576, column: 2, scope: !6550)
!6561 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6562 = !DILocation(line: 603, column: 2, scope: !6550)
!6563 = distinct !DISubprogram(name: "z_arm_fault", scope: !6564, file: !6564, line: 1036, type: !6565, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6580)
!6564 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6565 = !DISubroutineType(types: !6566)
!6566 = !{null, !152, !152, !152, !6567}
!6567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6568, size: 32)
!6568 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6569)
!6569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6570)
!6570 = !{!6571, !6572, !6573, !6574, !6575, !6576, !6577, !6578, !6579}
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6569, file: !379, line: 26, baseType: !152, size: 32)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6569, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6569, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6569, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6569, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6569, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6569, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6569, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6569, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6580 = !{!6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590}
!6581 = !DILocalVariable(name: "msp", arg: 1, scope: !6563, file: !6564, line: 1036, type: !152)
!6582 = !DILocalVariable(name: "psp", arg: 2, scope: !6563, file: !6564, line: 1036, type: !152)
!6583 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6563, file: !6564, line: 1036, type: !152)
!6584 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6563, file: !6564, line: 1037, type: !6567)
!6585 = !DILocalVariable(name: "reason", scope: !6563, file: !6564, line: 1039, type: !152)
!6586 = !DILocalVariable(name: "fault", scope: !6563, file: !6564, line: 1040, type: !107)
!6587 = !DILocalVariable(name: "recoverable", scope: !6563, file: !6564, line: 1041, type: !145)
!6588 = !DILocalVariable(name: "nested_exc", scope: !6563, file: !6564, line: 1041, type: !145)
!6589 = !DILocalVariable(name: "esf", scope: !6563, file: !6564, line: 1042, type: !2731)
!6590 = !DILocalVariable(name: "esf_copy", scope: !6563, file: !6564, line: 1047, type: !2732)
!6591 = !DILocation(line: 0, scope: !6563)
!6592 = !DILocation(line: 1040, column: 19, scope: !6563)
!6593 = !DILocation(line: 1041, column: 2, scope: !6563)
!6594 = !DILocation(line: 1047, column: 2, scope: !6563)
!6595 = !DILocation(line: 1047, column: 15, scope: !6563)
!6596 = !DILocalVariable(name: "key", arg: 1, scope: !6597, file: !5935, line: 84, type: !32)
!6597 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5935, file: !5935, line: 84, type: !5946, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6598)
!6598 = !{!6596}
!6599 = !DILocation(line: 0, scope: !6597, inlinedAt: !6600)
!6600 = distinct !DILocation(line: 1050, column: 2, scope: !6563)
!6601 = !DILocation(line: 95, column: 2, scope: !6597, inlinedAt: !6600)
!6602 = !{i64 2276551}
!6603 = !DILocation(line: 1055, column: 9, scope: !6563)
!6604 = !DILocation(line: 1056, column: 2, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6606, file: !6564, line: 1056, column: 2)
!6606 = distinct !DILexicalBlock(scope: !6563, file: !6564, line: 1056, column: 2)
!6607 = !DILocation(line: 1056, column: 2, scope: !6606)
!6608 = !DILocation(line: 1056, column: 2, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6605, file: !6564, line: 1056, column: 2)
!6610 = !DILocation(line: 1040, column: 24, scope: !6563)
!6611 = !DILocation(line: 1063, column: 11, scope: !6563)
!6612 = !DILocation(line: 1064, column: 6, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6563, file: !6564, line: 1064, column: 6)
!6614 = !{i8 0, i8 2}
!6615 = !DILocation(line: 1064, column: 6, scope: !6563)
!6616 = !DILocation(line: 1070, column: 20, scope: !6563)
!6617 = !DILocation(line: 1070, column: 2, scope: !6563)
!6618 = !DILocation(line: 1089, column: 6, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6563, file: !6564, line: 1089, column: 6)
!6620 = !DILocation(line: 0, scope: !6619)
!6621 = !DILocation(line: 1089, column: 6, scope: !6563)
!6622 = !DILocation(line: 1090, column: 28, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6624, file: !6564, line: 1090, column: 7)
!6624 = distinct !DILexicalBlock(scope: !6619, file: !6564, line: 1089, column: 18)
!6625 = !DILocation(line: 1090, column: 44, scope: !6623)
!6626 = !DILocation(line: 1090, column: 7, scope: !6624)
!6627 = !DILocation(line: 1091, column: 24, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6623, file: !6564, line: 1090, column: 50)
!6629 = !DILocation(line: 1092, column: 3, scope: !6628)
!6630 = !DILocation(line: 1094, column: 23, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6619, file: !6564, line: 1093, column: 9)
!6632 = !DILocation(line: 1097, column: 2, scope: !6563)
!6633 = !DILocation(line: 1098, column: 1, scope: !6563)
!6634 = distinct !DISubprogram(name: "get_esf", scope: !6564, file: !6564, line: 894, type: !6635, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6638)
!6635 = !DISubroutineType(types: !6636)
!6636 = !{!2731, !152, !152, !152, !6637}
!6637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!6638 = !{!6639, !6640, !6641, !6642, !6643, !6644}
!6639 = !DILocalVariable(name: "msp", arg: 1, scope: !6634, file: !6564, line: 894, type: !152)
!6640 = !DILocalVariable(name: "psp", arg: 2, scope: !6634, file: !6564, line: 894, type: !152)
!6641 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6634, file: !6564, line: 894, type: !152)
!6642 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6634, file: !6564, line: 895, type: !6637)
!6643 = !DILocalVariable(name: "alternative_state_exc", scope: !6634, file: !6564, line: 897, type: !145)
!6644 = !DILocalVariable(name: "ptr_esf", scope: !6634, file: !6564, line: 898, type: !2731)
!6645 = !DILocation(line: 0, scope: !6634)
!6646 = !DILocation(line: 900, column: 14, scope: !6634)
!6647 = !DILocation(line: 902, column: 49, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6634, file: !6564, line: 902, column: 6)
!6649 = !DILocation(line: 902, column: 6, scope: !6634)
!6650 = !DILocation(line: 983, column: 44, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6634, file: !6564, line: 983, column: 6)
!6652 = !DILocation(line: 985, column: 3, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6654, file: !6564, line: 985, column: 3)
!6654 = distinct !DILexicalBlock(scope: !6655, file: !6564, line: 985, column: 3)
!6655 = distinct !DILexicalBlock(scope: !6656, file: !6564, line: 985, column: 3)
!6656 = distinct !DILexicalBlock(scope: !6657, file: !6564, line: 985, column: 3)
!6657 = distinct !DILexicalBlock(scope: !6651, file: !6564, line: 984, column: 47)
!6658 = !DILocation(line: 986, column: 3, scope: !6657)
!6659 = !DILocation(line: 983, column: 18, scope: !6651)
!6660 = !DILocation(line: 991, column: 7, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6662, file: !6564, line: 990, column: 30)
!6662 = distinct !DILexicalBlock(scope: !6634, file: !6564, line: 990, column: 6)
!6663 = !DILocation(line: 998, column: 16, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6665, file: !6564, line: 995, column: 10)
!6665 = distinct !DILexicalBlock(scope: !6661, file: !6564, line: 991, column: 7)
!6666 = !DILocation(line: 1002, column: 2, scope: !6634)
!6667 = !DILocation(line: 1003, column: 1, scope: !6634)
!6668 = distinct !DISubprogram(name: "fault_handle", scope: !6564, file: !6564, line: 786, type: !6669, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6671)
!6669 = !DISubroutineType(types: !6670)
!6670 = !{!152, !2731, !107, !6637}
!6671 = !{!6672, !6673, !6674, !6675}
!6672 = !DILocalVariable(name: "esf", arg: 1, scope: !6668, file: !6564, line: 786, type: !2731)
!6673 = !DILocalVariable(name: "fault", arg: 2, scope: !6668, file: !6564, line: 786, type: !107)
!6674 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6668, file: !6564, line: 786, type: !6637)
!6675 = !DILocalVariable(name: "reason", scope: !6668, file: !6564, line: 788, type: !152)
!6676 = !DILocation(line: 0, scope: !6668)
!6677 = !DILocation(line: 790, column: 15, scope: !6668)
!6678 = !DILocation(line: 792, column: 2, scope: !6668)
!6679 = !DILocation(line: 794, column: 12, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6668, file: !6564, line: 792, column: 17)
!6681 = !DILocation(line: 795, column: 3, scope: !6680)
!6682 = !DILocation(line: 800, column: 12, scope: !6680)
!6683 = !DILocation(line: 801, column: 3, scope: !6680)
!6684 = !DILocation(line: 803, column: 12, scope: !6680)
!6685 = !DILocation(line: 804, column: 3, scope: !6680)
!6686 = !DILocation(line: 806, column: 12, scope: !6680)
!6687 = !DILocation(line: 807, column: 3, scope: !6680)
!6688 = !DILocation(line: 814, column: 3, scope: !6680)
!6689 = !DILocation(line: 815, column: 3, scope: !6680)
!6690 = !DILocation(line: 820, column: 3, scope: !6680)
!6691 = !DILocation(line: 821, column: 3, scope: !6680)
!6692 = !DILocation(line: 829, column: 2, scope: !6668)
!6693 = distinct !DISubprogram(name: "hard_fault", scope: !6564, file: !6564, line: 709, type: !6694, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6696)
!6694 = !DISubroutineType(types: !6695)
!6695 = !{!152, !2731, !6637}
!6696 = !{!6697, !6698, !6699}
!6697 = !DILocalVariable(name: "esf", arg: 1, scope: !6693, file: !6564, line: 709, type: !2731)
!6698 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6693, file: !6564, line: 709, type: !6637)
!6699 = !DILocalVariable(name: "reason", scope: !6693, file: !6564, line: 711, type: !152)
!6700 = !DILocation(line: 0, scope: !6693)
!6701 = !DILocation(line: 713, column: 2, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6703, file: !6564, line: 713, column: 2)
!6703 = distinct !DILexicalBlock(scope: !6704, file: !6564, line: 713, column: 2)
!6704 = distinct !DILexicalBlock(scope: !6705, file: !6564, line: 713, column: 2)
!6705 = distinct !DILexicalBlock(scope: !6693, file: !6564, line: 713, column: 2)
!6706 = !DILocation(line: 732, column: 15, scope: !6693)
!6707 = !DILocation(line: 734, column: 12, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6693, file: !6564, line: 734, column: 6)
!6709 = !DILocation(line: 734, column: 17, scope: !6708)
!6710 = !DILocation(line: 734, column: 41, scope: !6708)
!6711 = !DILocation(line: 734, column: 6, scope: !6693)
!6712 = !DILocation(line: 735, column: 3, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6714, file: !6564, line: 735, column: 3)
!6714 = distinct !DILexicalBlock(scope: !6715, file: !6564, line: 735, column: 3)
!6715 = distinct !DILexicalBlock(scope: !6716, file: !6564, line: 735, column: 3)
!6716 = distinct !DILexicalBlock(scope: !6717, file: !6564, line: 735, column: 3)
!6717 = distinct !DILexicalBlock(scope: !6708, file: !6564, line: 734, column: 47)
!6718 = !DILocation(line: 736, column: 2, scope: !6717)
!6719 = !DILocation(line: 736, column: 19, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6708, file: !6564, line: 736, column: 13)
!6721 = !DILocation(line: 736, column: 49, scope: !6720)
!6722 = !DILocation(line: 736, column: 13, scope: !6708)
!6723 = !DILocation(line: 737, column: 3, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6725, file: !6564, line: 737, column: 3)
!6725 = distinct !DILexicalBlock(scope: !6726, file: !6564, line: 737, column: 3)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !6564, line: 737, column: 3)
!6727 = distinct !DILexicalBlock(scope: !6728, file: !6564, line: 737, column: 3)
!6728 = distinct !DILexicalBlock(scope: !6720, file: !6564, line: 736, column: 55)
!6729 = !DILocation(line: 738, column: 2, scope: !6728)
!6730 = !DILocation(line: 738, column: 19, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6720, file: !6564, line: 738, column: 13)
!6732 = !DILocation(line: 738, column: 24, scope: !6731)
!6733 = !DILocation(line: 738, column: 47, scope: !6731)
!6734 = !DILocation(line: 738, column: 13, scope: !6720)
!6735 = !DILocation(line: 739, column: 3, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6737, file: !6564, line: 739, column: 3)
!6737 = distinct !DILexicalBlock(scope: !6738, file: !6564, line: 739, column: 3)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !6564, line: 739, column: 3)
!6739 = distinct !DILexicalBlock(scope: !6740, file: !6564, line: 739, column: 3)
!6740 = distinct !DILexicalBlock(scope: !6731, file: !6564, line: 738, column: 53)
!6741 = !DILocation(line: 740, column: 7, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6740, file: !6564, line: 740, column: 7)
!6743 = !DILocation(line: 740, column: 7, scope: !6740)
!6744 = !DILocation(line: 741, column: 4, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !6564, line: 741, column: 4)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !6564, line: 741, column: 4)
!6747 = distinct !DILexicalBlock(scope: !6748, file: !6564, line: 741, column: 4)
!6748 = distinct !DILexicalBlock(scope: !6749, file: !6564, line: 741, column: 4)
!6749 = distinct !DILexicalBlock(scope: !6742, file: !6564, line: 740, column: 38)
!6750 = !DILocation(line: 742, column: 24, scope: !6749)
!6751 = !DILocation(line: 743, column: 3, scope: !6749)
!6752 = !DILocation(line: 743, column: 20, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6742, file: !6564, line: 743, column: 14)
!6754 = !DILocation(line: 743, column: 25, scope: !6753)
!6755 = !DILocation(line: 743, column: 52, scope: !6753)
!6756 = !DILocation(line: 743, column: 14, scope: !6742)
!6757 = !DILocation(line: 744, column: 13, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6753, file: !6564, line: 743, column: 58)
!6759 = !DILocation(line: 745, column: 3, scope: !6758)
!6760 = !DILocation(line: 745, column: 20, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6753, file: !6564, line: 745, column: 14)
!6762 = !DILocation(line: 745, column: 25, scope: !6761)
!6763 = !DILocation(line: 745, column: 52, scope: !6761)
!6764 = !DILocation(line: 745, column: 14, scope: !6753)
!6765 = !DILocation(line: 746, column: 13, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6761, file: !6564, line: 745, column: 58)
!6767 = !DILocation(line: 747, column: 3, scope: !6766)
!6768 = !DILocation(line: 747, column: 20, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6761, file: !6564, line: 747, column: 14)
!6770 = !DILocation(line: 747, column: 52, scope: !6769)
!6771 = !DILocation(line: 747, column: 14, scope: !6761)
!6772 = !DILocation(line: 748, column: 13, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6769, file: !6564, line: 747, column: 58)
!6774 = !DILocation(line: 754, column: 4, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6776, file: !6564, line: 754, column: 4)
!6776 = distinct !DILexicalBlock(scope: !6777, file: !6564, line: 754, column: 4)
!6777 = distinct !DILexicalBlock(scope: !6778, file: !6564, line: 754, column: 4)
!6778 = distinct !DILexicalBlock(scope: !6769, file: !6564, line: 753, column: 10)
!6779 = !DILocation(line: 758, column: 3, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6781, file: !6564, line: 758, column: 3)
!6781 = distinct !DILexicalBlock(scope: !6782, file: !6564, line: 758, column: 3)
!6782 = distinct !DILexicalBlock(scope: !6783, file: !6564, line: 758, column: 3)
!6783 = distinct !DILexicalBlock(scope: !6731, file: !6564, line: 757, column: 9)
!6784 = !DILocation(line: 766, column: 2, scope: !6693)
!6785 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6564, file: !6564, line: 229, type: !6669, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6786)
!6786 = !{!6787, !6788, !6789, !6790, !6791, !6792, !6795}
!6787 = !DILocalVariable(name: "esf", arg: 1, scope: !6785, file: !6564, line: 229, type: !2731)
!6788 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6785, file: !6564, line: 229, type: !107)
!6789 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6785, file: !6564, line: 230, type: !6637)
!6790 = !DILocalVariable(name: "reason", scope: !6785, file: !6564, line: 232, type: !152)
!6791 = !DILocalVariable(name: "mmfar", scope: !6785, file: !6564, line: 233, type: !152)
!6792 = !DILocalVariable(name: "temp", scope: !6793, file: !6564, line: 254, type: !152)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !6564, line: 244, column: 48)
!6794 = distinct !DILexicalBlock(scope: !6785, file: !6564, line: 244, column: 6)
!6795 = !DILocalVariable(name: "min_stack_ptr", scope: !6796, file: !6564, line: 309, type: !152)
!6796 = distinct !DILexicalBlock(scope: !6797, file: !6564, line: 308, column: 43)
!6797 = distinct !DILexicalBlock(scope: !6798, file: !6564, line: 308, column: 7)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !6564, line: 289, column: 40)
!6799 = distinct !DILexicalBlock(scope: !6785, file: !6564, line: 288, column: 6)
!6800 = !DILocation(line: 0, scope: !6785)
!6801 = !DILocation(line: 235, column: 2, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6803, file: !6564, line: 235, column: 2)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !6564, line: 235, column: 2)
!6804 = distinct !DILexicalBlock(scope: !6805, file: !6564, line: 235, column: 2)
!6805 = distinct !DILexicalBlock(scope: !6785, file: !6564, line: 235, column: 2)
!6806 = !DILocation(line: 237, column: 12, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6785, file: !6564, line: 237, column: 6)
!6808 = !DILocation(line: 237, column: 17, scope: !6807)
!6809 = !DILocation(line: 237, column: 41, scope: !6807)
!6810 = !DILocation(line: 237, column: 6, scope: !6785)
!6811 = !DILocation(line: 238, column: 3, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6813, file: !6564, line: 238, column: 3)
!6813 = distinct !DILexicalBlock(scope: !6814, file: !6564, line: 238, column: 3)
!6814 = distinct !DILexicalBlock(scope: !6815, file: !6564, line: 238, column: 3)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !6564, line: 238, column: 3)
!6816 = distinct !DILexicalBlock(scope: !6807, file: !6564, line: 237, column: 47)
!6817 = !DILocation(line: 240, column: 2, scope: !6816)
!6818 = !DILocation(line: 241, column: 12, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6785, file: !6564, line: 241, column: 6)
!6820 = !DILocation(line: 241, column: 17, scope: !6819)
!6821 = !DILocation(line: 241, column: 43, scope: !6819)
!6822 = !DILocation(line: 241, column: 6, scope: !6785)
!6823 = !DILocation(line: 242, column: 3, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6825, file: !6564, line: 242, column: 3)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !6564, line: 242, column: 3)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !6564, line: 242, column: 3)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !6564, line: 242, column: 3)
!6828 = distinct !DILexicalBlock(scope: !6819, file: !6564, line: 241, column: 49)
!6829 = !DILocation(line: 243, column: 2, scope: !6828)
!6830 = !DILocation(line: 244, column: 12, scope: !6794)
!6831 = !DILocation(line: 244, column: 17, scope: !6794)
!6832 = !DILocation(line: 244, column: 42, scope: !6794)
!6833 = !DILocation(line: 244, column: 6, scope: !6785)
!6834 = !DILocation(line: 245, column: 3, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !6564, line: 245, column: 3)
!6836 = distinct !DILexicalBlock(scope: !6837, file: !6564, line: 245, column: 3)
!6837 = distinct !DILexicalBlock(scope: !6838, file: !6564, line: 245, column: 3)
!6838 = distinct !DILexicalBlock(scope: !6793, file: !6564, line: 245, column: 3)
!6839 = !DILocation(line: 254, column: 24, scope: !6793)
!6840 = !DILocation(line: 0, scope: !6793)
!6841 = !DILocation(line: 256, column: 13, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6793, file: !6564, line: 256, column: 7)
!6843 = !DILocation(line: 256, column: 18, scope: !6842)
!6844 = !DILocation(line: 256, column: 44, scope: !6842)
!6845 = !DILocation(line: 256, column: 7, scope: !6793)
!6846 = !DILocation(line: 258, column: 4, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6848, file: !6564, line: 258, column: 4)
!6848 = distinct !DILexicalBlock(scope: !6849, file: !6564, line: 258, column: 4)
!6849 = distinct !DILexicalBlock(scope: !6850, file: !6564, line: 258, column: 4)
!6850 = distinct !DILexicalBlock(scope: !6851, file: !6564, line: 258, column: 4)
!6851 = distinct !DILexicalBlock(scope: !6842, file: !6564, line: 256, column: 50)
!6852 = !DILocation(line: 259, column: 24, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6851, file: !6564, line: 259, column: 8)
!6854 = !DILocation(line: 259, column: 8, scope: !6851)
!6855 = !DILocation(line: 261, column: 15, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6853, file: !6564, line: 259, column: 30)
!6857 = !DILocation(line: 262, column: 4, scope: !6856)
!6858 = !DILocation(line: 265, column: 12, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6785, file: !6564, line: 265, column: 6)
!6860 = !DILocation(line: 265, column: 17, scope: !6859)
!6861 = !DILocation(line: 265, column: 42, scope: !6859)
!6862 = !DILocation(line: 265, column: 6, scope: !6785)
!6863 = !DILocation(line: 266, column: 3, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6865, file: !6564, line: 266, column: 3)
!6865 = distinct !DILexicalBlock(scope: !6866, file: !6564, line: 266, column: 3)
!6866 = distinct !DILexicalBlock(scope: !6867, file: !6564, line: 266, column: 3)
!6867 = distinct !DILexicalBlock(scope: !6868, file: !6564, line: 266, column: 3)
!6868 = distinct !DILexicalBlock(scope: !6859, file: !6564, line: 265, column: 48)
!6869 = !DILocation(line: 267, column: 2, scope: !6868)
!6870 = !DILocation(line: 269, column: 12, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6785, file: !6564, line: 269, column: 6)
!6872 = !DILocation(line: 269, column: 17, scope: !6871)
!6873 = !DILocation(line: 269, column: 41, scope: !6871)
!6874 = !DILocation(line: 269, column: 6, scope: !6785)
!6875 = !DILocation(line: 270, column: 3, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !6564, line: 270, column: 3)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !6564, line: 270, column: 3)
!6878 = distinct !DILexicalBlock(scope: !6879, file: !6564, line: 270, column: 3)
!6879 = distinct !DILexicalBlock(scope: !6880, file: !6564, line: 270, column: 3)
!6880 = distinct !DILexicalBlock(scope: !6871, file: !6564, line: 269, column: 47)
!6881 = !DILocation(line: 272, column: 2, scope: !6880)
!6882 = !DILocation(line: 288, column: 12, scope: !6799)
!6883 = !DILocation(line: 288, column: 17, scope: !6799)
!6884 = !DILocation(line: 288, column: 41, scope: !6799)
!6885 = !DILocation(line: 289, column: 9, scope: !6799)
!6886 = !DILocation(line: 289, column: 14, scope: !6799)
!6887 = !DILocation(line: 288, column: 6, scope: !6785)
!6888 = !DILocation(line: 308, column: 12, scope: !6797)
!6889 = !DILocation(line: 308, column: 17, scope: !6797)
!6890 = !DILocation(line: 308, column: 7, scope: !6798)
!6891 = !DILocation(line: 310, column: 6, scope: !6796)
!6892 = !DILocation(line: 309, column: 29, scope: !6796)
!6893 = !DILocation(line: 0, scope: !6796)
!6894 = !DILocation(line: 312, column: 8, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6796, file: !6564, line: 312, column: 8)
!6896 = !DILocation(line: 312, column: 8, scope: !6796)
!6897 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6898, file: !6254, line: 1099, type: !152)
!6898 = distinct !DISubprogram(name: "__set_PSP", scope: !6254, file: !6254, line: 1099, type: !6351, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6899)
!6899 = !{!6897}
!6900 = !DILocation(line: 0, scope: !6898, inlinedAt: !6901)
!6901 = distinct !DILocation(line: 338, column: 5, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6895, file: !6564, line: 312, column: 23)
!6903 = !DILocation(line: 1101, column: 3, scope: !6898, inlinedAt: !6901)
!6904 = !{i64 3532212}
!6905 = !DILocation(line: 341, column: 4, scope: !6902)
!6906 = !DILocation(line: 342, column: 5, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !6564, line: 342, column: 5)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !6564, line: 342, column: 5)
!6909 = distinct !DILexicalBlock(scope: !6895, file: !6564, line: 341, column: 11)
!6910 = !DILocation(line: 342, column: 5, scope: !6908)
!6911 = !DILocation(line: 342, column: 5, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6907, file: !6564, line: 342, column: 5)
!6913 = !DILocation(line: 360, column: 12, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6785, file: !6564, line: 360, column: 6)
!6915 = !DILocation(line: 360, column: 17, scope: !6914)
!6916 = !DILocation(line: 360, column: 41, scope: !6914)
!6917 = !DILocation(line: 360, column: 6, scope: !6785)
!6918 = !DILocation(line: 361, column: 14, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6914, file: !6564, line: 360, column: 47)
!6920 = !DILocation(line: 362, column: 2, scope: !6919)
!6921 = !DILocation(line: 366, column: 12, scope: !6785)
!6922 = !DILocation(line: 369, column: 15, scope: !6785)
!6923 = !DILocation(line: 371, column: 2, scope: !6785)
!6924 = distinct !DISubprogram(name: "bus_fault", scope: !6564, file: !6564, line: 383, type: !6925, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6927)
!6925 = !DISubroutineType(types: !6926)
!6926 = !{!107, !2731, !107, !6637}
!6927 = !{!6928, !6929, !6930, !6931, !6932}
!6928 = !DILocalVariable(name: "esf", arg: 1, scope: !6924, file: !6564, line: 383, type: !2731)
!6929 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6924, file: !6564, line: 383, type: !107)
!6930 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6924, file: !6564, line: 383, type: !6637)
!6931 = !DILocalVariable(name: "reason", scope: !6924, file: !6564, line: 385, type: !152)
!6932 = !DILocalVariable(name: "bfar", scope: !6933, file: !6564, line: 405, type: !152)
!6933 = distinct !DILexicalBlock(scope: !6934, file: !6564, line: 395, column: 42)
!6934 = distinct !DILexicalBlock(scope: !6924, file: !6564, line: 395, column: 6)
!6935 = !DILocation(line: 0, scope: !6924)
!6936 = !DILocation(line: 387, column: 2, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6938, file: !6564, line: 387, column: 2)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !6564, line: 387, column: 2)
!6939 = distinct !DILexicalBlock(scope: !6940, file: !6564, line: 387, column: 2)
!6940 = distinct !DILexicalBlock(scope: !6924, file: !6564, line: 387, column: 2)
!6941 = !DILocation(line: 389, column: 11, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6924, file: !6564, line: 389, column: 6)
!6943 = !DILocation(line: 389, column: 16, scope: !6942)
!6944 = !DILocation(line: 389, column: 6, scope: !6924)
!6945 = !DILocation(line: 390, column: 3, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6947, file: !6564, line: 390, column: 3)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !6564, line: 390, column: 3)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !6564, line: 390, column: 3)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !6564, line: 390, column: 3)
!6950 = distinct !DILexicalBlock(scope: !6942, file: !6564, line: 389, column: 39)
!6951 = !DILocation(line: 391, column: 2, scope: !6950)
!6952 = !DILocation(line: 392, column: 11, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6924, file: !6564, line: 392, column: 6)
!6954 = !DILocation(line: 392, column: 16, scope: !6953)
!6955 = !DILocation(line: 392, column: 6, scope: !6924)
!6956 = !DILocation(line: 393, column: 3, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !6564, line: 393, column: 3)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !6564, line: 393, column: 3)
!6959 = distinct !DILexicalBlock(scope: !6960, file: !6564, line: 393, column: 3)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !6564, line: 393, column: 3)
!6961 = distinct !DILexicalBlock(scope: !6953, file: !6564, line: 392, column: 41)
!6962 = !DILocation(line: 394, column: 2, scope: !6961)
!6963 = !DILocation(line: 395, column: 11, scope: !6934)
!6964 = !DILocation(line: 395, column: 16, scope: !6934)
!6965 = !DILocation(line: 395, column: 6, scope: !6924)
!6966 = !DILocation(line: 396, column: 3, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !6564, line: 396, column: 3)
!6968 = distinct !DILexicalBlock(scope: !6969, file: !6564, line: 396, column: 3)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !6564, line: 396, column: 3)
!6970 = distinct !DILexicalBlock(scope: !6933, file: !6564, line: 396, column: 3)
!6971 = !DILocation(line: 405, column: 3, scope: !6933)
!6972 = !DILocation(line: 0, scope: !6933)
!6973 = !DILocation(line: 407, column: 13, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6933, file: !6564, line: 407, column: 7)
!6975 = !DILocation(line: 407, column: 18, scope: !6974)
!6976 = !DILocation(line: 407, column: 44, scope: !6974)
!6977 = !DILocation(line: 407, column: 7, scope: !6933)
!6978 = !DILocation(line: 408, column: 4, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6980, file: !6564, line: 408, column: 4)
!6980 = distinct !DILexicalBlock(scope: !6981, file: !6564, line: 408, column: 4)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !6564, line: 408, column: 4)
!6982 = distinct !DILexicalBlock(scope: !6983, file: !6564, line: 408, column: 4)
!6983 = distinct !DILexicalBlock(scope: !6974, file: !6564, line: 407, column: 50)
!6984 = !DILocation(line: 409, column: 24, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6983, file: !6564, line: 409, column: 8)
!6986 = !DILocation(line: 409, column: 8, scope: !6983)
!6987 = !DILocation(line: 411, column: 15, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6985, file: !6564, line: 409, column: 30)
!6989 = !DILocation(line: 412, column: 4, scope: !6988)
!6990 = !DILocation(line: 415, column: 11, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6924, file: !6564, line: 415, column: 6)
!6992 = !DILocation(line: 415, column: 16, scope: !6991)
!6993 = !DILocation(line: 415, column: 6, scope: !6924)
!6994 = !DILocation(line: 416, column: 3, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6996, file: !6564, line: 416, column: 3)
!6996 = distinct !DILexicalBlock(scope: !6997, file: !6564, line: 416, column: 3)
!6997 = distinct !DILexicalBlock(scope: !6998, file: !6564, line: 416, column: 3)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !6564, line: 416, column: 3)
!6999 = distinct !DILexicalBlock(scope: !6991, file: !6564, line: 415, column: 44)
!7000 = !DILocation(line: 417, column: 2, scope: !6999)
!7001 = !DILocation(line: 418, column: 12, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6924, file: !6564, line: 418, column: 6)
!7003 = !DILocation(line: 418, column: 17, scope: !7002)
!7004 = !DILocation(line: 418, column: 41, scope: !7002)
!7005 = !DILocation(line: 418, column: 6, scope: !6924)
!7006 = !DILocation(line: 423, column: 18, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !7002, file: !6564, line: 423, column: 13)
!7008 = !DILocation(line: 423, column: 23, scope: !7007)
!7009 = !DILocation(line: 423, column: 13, scope: !7002)
!7010 = !DILocation(line: 0, scope: !7002)
!7011 = !DILocation(line: 524, column: 12, scope: !6924)
!7012 = !DILocation(line: 526, column: 15, scope: !6924)
!7013 = !DILocation(line: 528, column: 2, scope: !6924)
!7014 = distinct !DISubprogram(name: "usage_fault", scope: !6564, file: !6564, line: 539, type: !7015, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !7019)
!7015 = !DISubroutineType(types: !7016)
!7016 = !{!152, !7017}
!7017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7018, size: 32)
!7018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2732)
!7019 = !{!7020, !7021}
!7020 = !DILocalVariable(name: "esf", arg: 1, scope: !7014, file: !6564, line: 539, type: !7017)
!7021 = !DILocalVariable(name: "reason", scope: !7014, file: !6564, line: 541, type: !152)
!7022 = !DILocation(line: 0, scope: !7014)
!7023 = !DILocation(line: 543, column: 2, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !6564, line: 543, column: 2)
!7025 = distinct !DILexicalBlock(scope: !7026, file: !6564, line: 543, column: 2)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !6564, line: 543, column: 2)
!7027 = distinct !DILexicalBlock(scope: !7014, file: !6564, line: 543, column: 2)
!7028 = !DILocation(line: 546, column: 12, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7014, file: !6564, line: 546, column: 6)
!7030 = !DILocation(line: 546, column: 17, scope: !7029)
!7031 = !DILocation(line: 546, column: 43, scope: !7029)
!7032 = !DILocation(line: 546, column: 6, scope: !7014)
!7033 = !DILocation(line: 547, column: 3, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7035, file: !6564, line: 547, column: 3)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !6564, line: 547, column: 3)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !6564, line: 547, column: 3)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !6564, line: 547, column: 3)
!7038 = distinct !DILexicalBlock(scope: !7029, file: !6564, line: 546, column: 49)
!7039 = !DILocation(line: 548, column: 2, scope: !7038)
!7040 = !DILocation(line: 549, column: 12, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7014, file: !6564, line: 549, column: 6)
!7042 = !DILocation(line: 549, column: 17, scope: !7041)
!7043 = !DILocation(line: 549, column: 43, scope: !7041)
!7044 = !DILocation(line: 549, column: 6, scope: !7014)
!7045 = !DILocation(line: 550, column: 3, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7047, file: !6564, line: 550, column: 3)
!7047 = distinct !DILexicalBlock(scope: !7048, file: !6564, line: 550, column: 3)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !6564, line: 550, column: 3)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !6564, line: 550, column: 3)
!7050 = distinct !DILexicalBlock(scope: !7041, file: !6564, line: 549, column: 49)
!7051 = !DILocation(line: 551, column: 2, scope: !7050)
!7052 = !DILocation(line: 567, column: 12, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7014, file: !6564, line: 567, column: 6)
!7054 = !DILocation(line: 567, column: 17, scope: !7053)
!7055 = !DILocation(line: 567, column: 38, scope: !7053)
!7056 = !DILocation(line: 567, column: 6, scope: !7014)
!7057 = !DILocation(line: 568, column: 3, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !6564, line: 568, column: 3)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !6564, line: 568, column: 3)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !6564, line: 568, column: 3)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !6564, line: 568, column: 3)
!7062 = distinct !DILexicalBlock(scope: !7053, file: !6564, line: 567, column: 44)
!7063 = !DILocation(line: 569, column: 2, scope: !7062)
!7064 = !DILocation(line: 570, column: 12, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7014, file: !6564, line: 570, column: 6)
!7066 = !DILocation(line: 570, column: 17, scope: !7065)
!7067 = !DILocation(line: 570, column: 39, scope: !7065)
!7068 = !DILocation(line: 570, column: 6, scope: !7014)
!7069 = !DILocation(line: 571, column: 3, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7071, file: !6564, line: 571, column: 3)
!7071 = distinct !DILexicalBlock(scope: !7072, file: !6564, line: 571, column: 3)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !6564, line: 571, column: 3)
!7073 = distinct !DILexicalBlock(scope: !7074, file: !6564, line: 571, column: 3)
!7074 = distinct !DILexicalBlock(scope: !7065, file: !6564, line: 570, column: 45)
!7075 = !DILocation(line: 572, column: 2, scope: !7074)
!7076 = !DILocation(line: 573, column: 12, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7014, file: !6564, line: 573, column: 6)
!7078 = !DILocation(line: 573, column: 17, scope: !7077)
!7079 = !DILocation(line: 573, column: 42, scope: !7077)
!7080 = !DILocation(line: 573, column: 6, scope: !7014)
!7081 = !DILocation(line: 574, column: 3, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !6564, line: 574, column: 3)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !6564, line: 574, column: 3)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !6564, line: 574, column: 3)
!7085 = distinct !DILexicalBlock(scope: !7086, file: !6564, line: 574, column: 3)
!7086 = distinct !DILexicalBlock(scope: !7077, file: !6564, line: 573, column: 48)
!7087 = !DILocation(line: 575, column: 2, scope: !7086)
!7088 = !DILocation(line: 576, column: 12, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7014, file: !6564, line: 576, column: 6)
!7090 = !DILocation(line: 576, column: 17, scope: !7089)
!7091 = !DILocation(line: 576, column: 44, scope: !7089)
!7092 = !DILocation(line: 576, column: 6, scope: !7014)
!7093 = !DILocation(line: 577, column: 3, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7095, file: !6564, line: 577, column: 3)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !6564, line: 577, column: 3)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !6564, line: 577, column: 3)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !6564, line: 577, column: 3)
!7098 = distinct !DILexicalBlock(scope: !7089, file: !6564, line: 576, column: 50)
!7099 = !DILocation(line: 578, column: 2, scope: !7098)
!7100 = !DILocation(line: 581, column: 12, scope: !7014)
!7101 = !DILocation(line: 583, column: 2, scope: !7014)
!7102 = distinct !DISubprogram(name: "debug_monitor", scope: !6564, file: !6564, line: 632, type: !7103, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !7105)
!7103 = !DISubroutineType(types: !7104)
!7104 = !{null, !2731, !6637}
!7105 = !{!7106, !7107}
!7106 = !DILocalVariable(name: "esf", arg: 1, scope: !7102, file: !6564, line: 632, type: !2731)
!7107 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7102, file: !6564, line: 632, type: !6637)
!7108 = !DILocation(line: 0, scope: !7102)
!7109 = !DILocation(line: 634, column: 15, scope: !7102)
!7110 = !DILocation(line: 636, column: 2, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7112, file: !6564, line: 636, column: 2)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !6564, line: 636, column: 2)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !6564, line: 636, column: 2)
!7114 = distinct !DILexicalBlock(scope: !7102, file: !6564, line: 636, column: 2)
!7115 = !DILocation(line: 652, column: 1, scope: !7102)
!7116 = distinct !DISubprogram(name: "reserved_exception", scope: !6564, file: !6564, line: 776, type: !7117, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !7119)
!7117 = !DISubroutineType(types: !7118)
!7118 = !{null, !7017, !107}
!7119 = !{!7120, !7121}
!7120 = !DILocalVariable(name: "esf", arg: 1, scope: !7116, file: !6564, line: 776, type: !7017)
!7121 = !DILocalVariable(name: "fault", arg: 2, scope: !7116, file: !6564, line: 776, type: !107)
!7122 = !DILocation(line: 0, scope: !7116)
!7123 = !DILocation(line: 780, column: 2, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7125, file: !6564, line: 780, column: 2)
!7125 = distinct !DILexicalBlock(scope: !7126, file: !6564, line: 780, column: 2)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !6564, line: 780, column: 2)
!7127 = distinct !DILexicalBlock(scope: !7116, file: !6564, line: 780, column: 2)
!7128 = !DILocation(line: 783, column: 1, scope: !7116)
!7129 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6564, file: !6564, line: 658, type: !7130, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !7132)
!7130 = !DISubroutineType(types: !7131)
!7131 = !{!145, !2731}
!7132 = !{!7133, !7134, !7135}
!7133 = !DILocalVariable(name: "esf", arg: 1, scope: !7129, file: !6564, line: 658, type: !2731)
!7134 = !DILocalVariable(name: "ret_addr", scope: !7129, file: !6564, line: 660, type: !2774)
!7135 = !DILocalVariable(name: "fault_insn", scope: !7129, file: !6564, line: 686, type: !197)
!7136 = !DILocation(line: 0, scope: !7129)
!7137 = !DILocation(line: 660, column: 46, scope: !7129)
!7138 = !DILocation(line: 660, column: 23, scope: !7129)
!7139 = !DILocation(line: 682, column: 11, scope: !7129)
!7140 = !DILocation(line: 271, column: 3, scope: !7141, inlinedAt: !7142)
!7141 = distinct !DISubprogram(name: "__DSB", scope: !6254, file: !6254, line: 269, type: !3082, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !2156)
!7142 = distinct !DILocation(line: 683, column: 2, scope: !7129)
!7143 = !{i64 3508347}
!7144 = !DILocation(line: 260, column: 3, scope: !7145, inlinedAt: !7146)
!7145 = distinct !DISubprogram(name: "__ISB", scope: !6254, file: !6254, line: 258, type: !3082, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !2156)
!7146 = distinct !DILocation(line: 684, column: 2, scope: !7129)
!7147 = !{i64 3508064}
!7148 = !DILocation(line: 686, column: 35, scope: !7129)
!7149 = !DILocation(line: 686, column: 24, scope: !7129)
!7150 = !DILocation(line: 688, column: 11, scope: !7129)
!7151 = !DILocation(line: 271, column: 3, scope: !7141, inlinedAt: !7152)
!7152 = distinct !DILocation(line: 689, column: 2, scope: !7129)
!7153 = !DILocation(line: 260, column: 3, scope: !7145, inlinedAt: !7154)
!7154 = distinct !DILocation(line: 690, column: 2, scope: !7129)
!7155 = !DILocation(line: 693, column: 45, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7129, file: !6564, line: 693, column: 6)
!7157 = !DILocation(line: 699, column: 1, scope: !7129)
!7158 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6564, file: !6564, line: 1107, type: !3082, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !2156)
!7159 = !DILocation(line: 1111, column: 11, scope: !7158)
!7160 = !DILocation(line: 1136, column: 1, scope: !7158)
!7161 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7162, file: !7162, line: 26, type: !3082, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2775, retainedNodes: !7163)
!7162 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7163 = !{!7164}
!7164 = !DILocalVariable(name: "irq", scope: !7161, file: !7162, line: 28, type: !107)
!7165 = !DILocation(line: 0, scope: !7161)
!7166 = !DILocation(line: 30, column: 2, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7161, file: !7162, line: 30, column: 2)
!7168 = !DILocation(line: 31, column: 3, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7170, file: !7162, line: 30, column: 39)
!7170 = distinct !DILexicalBlock(scope: !7167, file: !7162, line: 30, column: 2)
!7171 = !DILocation(line: 30, column: 35, scope: !7170)
!7172 = !DILocation(line: 30, column: 13, scope: !7170)
!7173 = distinct !{!7173, !7166, !7174}
!7174 = !DILocation(line: 32, column: 2, scope: !7167)
!7175 = !DILocation(line: 33, column: 1, scope: !7161)
!7176 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6294, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2775, retainedNodes: !7177)
!7177 = !{!7178, !7179}
!7178 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7176, file: !463, line: 1814, type: !921)
!7179 = !DILocalVariable(name: "priority", arg: 2, scope: !7176, file: !463, line: 1814, type: !152)
!7180 = !DILocation(line: 0, scope: !7176)
!7181 = !DILocation(line: 1816, column: 7, scope: !7176)
!7182 = !DILocation(line: 0, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7176, file: !463, line: 1816, column: 7)
!7184 = !DILocation(line: 1824, column: 1, scope: !7176)
!7185 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7186, file: !7186, line: 27, type: !7187, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !7293)
!7186 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7187 = !DISubroutineType(types: !7188)
!7188 = !{null, !7189}
!7189 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !7190)
!7190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7191, size: 32)
!7191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !7192)
!7192 = !{!7193, !7251, !7263, !7264, !7265, !7266, !7267, !7273, !7288}
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7191, file: !309, line: 247, baseType: !7194, size: 384)
!7194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !7195)
!7195 = !{!7196, !7220, !7227, !7228, !7229, !7238, !7239, !7240}
!7196 = !DIDerivedType(tag: DW_TAG_member, scope: !7194, file: !309, line: 60, baseType: !7197, size: 64)
!7197 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7194, file: !309, line: 60, size: 64, elements: !7198)
!7198 = !{!7199, !7214}
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7197, file: !309, line: 61, baseType: !7200, size: 64)
!7200 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !7201)
!7201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !7202)
!7202 = !{!7203, !7209}
!7203 = !DIDerivedType(tag: DW_TAG_member, scope: !7201, file: !319, line: 38, baseType: !7204, size: 32)
!7204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7201, file: !319, line: 38, size: 32, elements: !7205)
!7205 = !{!7206, !7208}
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7204, file: !319, line: 39, baseType: !7207, size: 32)
!7207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7201, size: 32)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7204, file: !319, line: 40, baseType: !7207, size: 32)
!7209 = !DIDerivedType(tag: DW_TAG_member, scope: !7201, file: !319, line: 42, baseType: !7210, size: 32, offset: 32)
!7210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7201, file: !319, line: 42, size: 32, elements: !7211)
!7211 = !{!7212, !7213}
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7210, file: !319, line: 43, baseType: !7207, size: 32)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7210, file: !319, line: 44, baseType: !7207, size: 32)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7197, file: !309, line: 62, baseType: !7215, size: 64)
!7215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !7216)
!7216 = !{!7217}
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7215, file: !335, line: 50, baseType: !7218, size: 64)
!7218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7219, size: 64, elements: !340)
!7219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7215, size: 32)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7194, file: !309, line: 68, baseType: !7221, size: 32, offset: 64)
!7221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7222, size: 32)
!7222 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !7223)
!7223 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !7224)
!7224 = !{!7225}
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7223, file: !345, line: 232, baseType: !7226, size: 64)
!7226 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !7201)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7194, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7194, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!7229 = !DIDerivedType(tag: DW_TAG_member, scope: !7194, file: !309, line: 90, baseType: !7230, size: 16, offset: 112)
!7230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7194, file: !309, line: 90, size: 16, elements: !7231)
!7231 = !{!7232, !7237}
!7232 = !DIDerivedType(tag: DW_TAG_member, scope: !7230, file: !309, line: 91, baseType: !7233, size: 16)
!7233 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7230, file: !309, line: 91, size: 16, elements: !7234)
!7234 = !{!7235, !7236}
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7233, file: !309, line: 96, baseType: !359, size: 8)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7233, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7230, file: !309, line: 100, baseType: !197, size: 16)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7194, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7194, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7194, file: !309, line: 131, baseType: !7241, size: 192, offset: 192)
!7241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !7242)
!7242 = !{!7243, !7244, !7250}
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7241, file: !345, line: 245, baseType: !7200, size: 64)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7241, file: !345, line: 246, baseType: !7245, size: 32, offset: 64)
!7245 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !7246)
!7246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7247, size: 32)
!7247 = !DISubroutineType(types: !7248)
!7248 = !{null, !7249}
!7249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7241, size: 32)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7241, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7191, file: !309, line: 250, baseType: !7252, size: 288, offset: 384)
!7252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !7253)
!7253 = !{!7254, !7255, !7256, !7257, !7258, !7259, !7260, !7261, !7262}
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7252, file: !379, line: 26, baseType: !152, size: 32)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7252, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7252, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7252, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7252, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7252, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7252, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7252, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7252, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7191, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7191, file: !309, line: 256, baseType: !7222, size: 64, offset: 704)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7191, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7191, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7191, file: !309, line: 300, baseType: !7268, size: 96, offset: 1056)
!7268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !7269)
!7269 = !{!7270, !7271, !7272}
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7268, file: !309, line: 153, baseType: !22, size: 32)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7268, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7268, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7191, file: !309, line: 325, baseType: !7274, size: 32, offset: 1152)
!7274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7275, size: 32)
!7275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !7276)
!7276 = !{!7277, !7283, !7284}
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7275, file: !406, line: 5074, baseType: !7278, size: 96)
!7278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !7279)
!7279 = !{!7280, !7281, !7282}
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7278, file: !410, line: 57, baseType: !413, size: 32)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7278, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7278, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7275, file: !406, line: 5075, baseType: !7222, size: 64, offset: 96)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7275, file: !406, line: 5076, baseType: !7285, size: 32, offset: 160)
!7285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !7286)
!7286 = !{!7287}
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7285, file: !420, line: 52, baseType: !22, size: 32)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7191, file: !309, line: 343, baseType: !7289, size: 64, offset: 1184)
!7289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !7290)
!7290 = !{!7291, !7292}
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7289, file: !379, line: 63, baseType: !152, size: 32)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7289, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!7293 = !{!7294}
!7294 = !DILocalVariable(name: "thread", arg: 1, scope: !7185, file: !7186, line: 27, type: !7189)
!7295 = !DILocation(line: 0, scope: !7185)
!7296 = !DILocation(line: 29, column: 6, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7185, file: !7186, line: 29, column: 6)
!7298 = !DILocation(line: 29, column: 15, scope: !7297)
!7299 = !DILocation(line: 29, column: 6, scope: !7185)
!7300 = !DILocation(line: 1031, column: 3, scope: !7301, inlinedAt: !7304)
!7301 = distinct !DISubprogram(name: "__get_IPSR", scope: !6254, file: !6254, line: 1027, type: !6341, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !7302)
!7302 = !{!7303}
!7303 = !DILocalVariable(name: "result", scope: !7301, file: !6254, line: 1029, type: !152)
!7304 = distinct !DILocation(line: 48, column: 10, scope: !7305, inlinedAt: !7309)
!7305 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7306, file: !7306, line: 46, type: !7307, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !2156)
!7306 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7307 = !DISubroutineType(types: !7308)
!7308 = !{!145}
!7309 = distinct !DILocation(line: 30, column: 7, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7311, file: !7186, line: 30, column: 7)
!7311 = distinct !DILexicalBlock(scope: !7297, file: !7186, line: 29, column: 26)
!7312 = !{i64 3497195}
!7313 = !DILocation(line: 0, scope: !7301, inlinedAt: !7304)
!7314 = !DILocation(line: 48, column: 9, scope: !7305, inlinedAt: !7309)
!7315 = !DILocation(line: 30, column: 7, scope: !7311)
!7316 = !DILocation(line: 42, column: 14, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7310, file: !7186, line: 30, column: 25)
!7318 = !DILocation(line: 48, column: 15, scope: !7317)
!7319 = !DILocation(line: 49, column: 3, scope: !7317)
!7320 = !DILocation(line: 52, column: 2, scope: !7185)
!7321 = !DILocation(line: 53, column: 1, scope: !7185)
!7322 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !304, file: !304, line: 127, type: !3082, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2156)
!7323 = !DILocation(line: 134, column: 2, scope: !7322)
!7324 = !DILocation(line: 156, column: 1, scope: !7322)
!7325 = !DILocation(line: 0, scope: !303)
!7326 = !DILocation(line: 289, column: 36, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !303, file: !304, line: 285, column: 2)
!7328 = !DILocation(line: 289, column: 42, scope: !7327)
!7329 = !DILocation(line: 300, column: 36, scope: !303)
!7330 = !DILocation(line: 301, column: 35, scope: !303)
!7331 = !DILocation(line: 302, column: 37, scope: !303)
!7332 = !DILocation(line: 311, column: 2, scope: !303)
!7333 = !DILocation(line: 316, column: 1, scope: !303)
!7334 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !491, file: !491, line: 180, type: !3082, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2156)
!7335 = !DILocation(line: 188, column: 12, scope: !7334)
!7336 = !DILocation(line: 271, column: 3, scope: !7337, inlinedAt: !7338)
!7337 = distinct !DISubprogram(name: "__DSB", scope: !6254, file: !6254, line: 269, type: !3082, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2156)
!7338 = distinct !DILocation(line: 192, column: 2, scope: !7334)
!7339 = !{i64 3669011}
!7340 = !DILocation(line: 260, column: 3, scope: !7341, inlinedAt: !7342)
!7341 = distinct !DISubprogram(name: "__ISB", scope: !6254, file: !6254, line: 258, type: !3082, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2156)
!7342 = distinct !DILocation(line: 193, column: 2, scope: !7334)
!7343 = !{i64 3668728}
!7344 = !DILocation(line: 194, column: 1, scope: !7334)
!7345 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !491, file: !491, line: 199, type: !3082, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2156)
!7346 = !DILocation(line: 282, column: 3, scope: !7347, inlinedAt: !7348)
!7347 = distinct !DISubprogram(name: "__DMB", scope: !6254, file: !6254, line: 280, type: !3082, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2156)
!7348 = distinct !DILocation(line: 202, column: 2, scope: !7345)
!7349 = !{i64 3669287}
!7350 = !DILocation(line: 205, column: 12, scope: !7345)
!7351 = !DILocation(line: 206, column: 1, scope: !7345)
!7352 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !491, file: !491, line: 275, type: !7353, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7366)
!7353 = !DISubroutineType(types: !7354)
!7354 = !{null, !7355, !1938, !6531, !6531}
!7355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7356, size: 32)
!7356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7357)
!7357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !7358)
!7358 = !{!7359, !7360, !7361}
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7357, file: !435, line: 53, baseType: !22, size: 32)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7357, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7357, file: !435, line: 55, baseType: !7362, size: 32, offset: 64)
!7362 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !7363)
!7363 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !7364)
!7364 = !{!7365}
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7363, file: !441, line: 150, baseType: !152, size: 32)
!7366 = !{!7367, !7368, !7369, !7370}
!7367 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7352, file: !491, line: 276, type: !7355)
!7368 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7352, file: !491, line: 276, type: !1938)
!7369 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7352, file: !491, line: 277, type: !6531)
!7370 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7352, file: !491, line: 277, type: !6531)
!7371 = !DILocation(line: 0, scope: !7352)
!7372 = !DILocation(line: 279, column: 6, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7352, file: !491, line: 279, column: 6)
!7374 = !DILocation(line: 280, column: 57, scope: !7373)
!7375 = !DILocation(line: 279, column: 6, scope: !7352)
!7376 = !DILocation(line: 282, column: 3, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7378, file: !491, line: 282, column: 3)
!7378 = distinct !DILexicalBlock(scope: !7379, file: !491, line: 282, column: 3)
!7379 = distinct !DILexicalBlock(scope: !7380, file: !491, line: 282, column: 3)
!7380 = distinct !DILexicalBlock(scope: !7373, file: !491, line: 280, column: 69)
!7381 = !DILocation(line: 285, column: 1, scope: !7352)
!7382 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7383, file: !7383, line: 220, type: !7384, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7386)
!7383 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7384 = !DISubroutineType(types: !7385)
!7385 = !{!107, !7355, !1938, !6531, !6531}
!7386 = !{!7387, !7388, !7389, !7390, !7391}
!7387 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7382, file: !7383, line: 221, type: !7355)
!7388 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7382, file: !7383, line: 221, type: !1938)
!7389 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7382, file: !7383, line: 222, type: !6531)
!7390 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7382, file: !7383, line: 223, type: !6531)
!7391 = !DILocalVariable(name: "mpu_reg_index", scope: !7382, file: !7383, line: 225, type: !107)
!7392 = !DILocation(line: 0, scope: !7382)
!7393 = !DILocation(line: 225, column: 22, scope: !7382)
!7394 = !DILocation(line: 233, column: 18, scope: !7382)
!7395 = !DILocation(line: 236, column: 23, scope: !7382)
!7396 = !DILocation(line: 236, column: 21, scope: !7382)
!7397 = !DILocation(line: 238, column: 2, scope: !7382)
!7398 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !491, file: !491, line: 105, type: !7399, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7401)
!7399 = !DISubroutineType(types: !7400)
!7400 = !{!107, !7355, !195, !195, !145}
!7401 = !{!7402, !7403, !7404, !7405, !7406, !7407}
!7402 = !DILocalVariable(name: "regions", arg: 1, scope: !7398, file: !491, line: 106, type: !7355)
!7403 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7398, file: !491, line: 106, type: !195)
!7404 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7398, file: !491, line: 106, type: !195)
!7405 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7398, file: !491, line: 107, type: !145)
!7406 = !DILocalVariable(name: "i", scope: !7398, file: !491, line: 109, type: !107)
!7407 = !DILocalVariable(name: "reg_index", scope: !7398, file: !491, line: 110, type: !107)
!7408 = !DILocation(line: 0, scope: !7398)
!7409 = !DILocation(line: 110, column: 18, scope: !7398)
!7410 = !DILocation(line: 112, column: 16, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7412, file: !491, line: 112, column: 2)
!7412 = distinct !DILexicalBlock(scope: !7398, file: !491, line: 112, column: 2)
!7413 = !DILocation(line: 112, column: 2, scope: !7412)
!7414 = !DILocation(line: 113, column: 7, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7416, file: !491, line: 113, column: 7)
!7416 = distinct !DILexicalBlock(scope: !7411, file: !491, line: 112, column: 36)
!7417 = !DILocation(line: 113, column: 18, scope: !7415)
!7418 = !DILocation(line: 113, column: 23, scope: !7415)
!7419 = !DILocation(line: 113, column: 7, scope: !7416)
!7420 = !DILocation(line: 118, column: 23, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7416, file: !491, line: 118, column: 7)
!7422 = !DILocation(line: 119, column: 7, scope: !7421)
!7423 = !DILocation(line: 118, column: 7, scope: !7416)
!7424 = !DILocation(line: 120, column: 4, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7426, file: !491, line: 120, column: 4)
!7426 = distinct !DILexicalBlock(scope: !7427, file: !491, line: 120, column: 4)
!7427 = distinct !DILexicalBlock(scope: !7428, file: !491, line: 120, column: 4)
!7428 = distinct !DILexicalBlock(scope: !7429, file: !491, line: 120, column: 4)
!7429 = distinct !DILexicalBlock(scope: !7421, file: !491, line: 119, column: 45)
!7430 = !DILocation(line: 121, column: 4, scope: !7429)
!7431 = !DILocation(line: 124, column: 36, scope: !7416)
!7432 = !DILocation(line: 124, column: 15, scope: !7416)
!7433 = !DILocation(line: 126, column: 17, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7416, file: !491, line: 126, column: 7)
!7435 = !DILocation(line: 126, column: 7, scope: !7416)
!7436 = !DILocation(line: 131, column: 12, scope: !7416)
!7437 = !DILocation(line: 132, column: 2, scope: !7416)
!7438 = !DILocation(line: 112, column: 32, scope: !7411)
!7439 = distinct !{!7439, !7413, !7440}
!7440 = !DILocation(line: 132, column: 2, scope: !7412)
!7441 = !DILocation(line: 135, column: 1, scope: !7398)
!7442 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7383, file: !7383, line: 63, type: !7443, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7445)
!7443 = !DISubroutineType(types: !7444)
!7444 = !{!107, !7355}
!7445 = !{!7446, !7447}
!7446 = !DILocalVariable(name: "part", arg: 1, scope: !7442, file: !7383, line: 63, type: !7355)
!7447 = !DILocalVariable(name: "partition_is_valid", scope: !7442, file: !7383, line: 70, type: !107)
!7448 = !DILocation(line: 0, scope: !7442)
!7449 = !DILocation(line: 71, column: 11, scope: !7442)
!7450 = !DILocation(line: 71, column: 37, scope: !7442)
!7451 = !{i32 0, i32 33}
!7452 = !DILocation(line: 72, column: 3, scope: !7442)
!7453 = !DILocation(line: 71, column: 30, scope: !7442)
!7454 = !DILocation(line: 75, column: 11, scope: !7442)
!7455 = !DILocation(line: 75, column: 17, scope: !7442)
!7456 = !DILocation(line: 75, column: 38, scope: !7442)
!7457 = !DILocation(line: 77, column: 2, scope: !7442)
!7458 = distinct !DISubprogram(name: "mpu_configure_region", scope: !491, file: !491, line: 79, type: !7459, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7461)
!7459 = !DISubroutineType(types: !7460)
!7460 = !{!107, !1938, !7355}
!7461 = !{!7462, !7463, !7464}
!7462 = !DILocalVariable(name: "index", arg: 1, scope: !7458, file: !491, line: 79, type: !1938)
!7463 = !DILocalVariable(name: "new_region", arg: 2, scope: !7458, file: !491, line: 80, type: !7355)
!7464 = !DILocalVariable(name: "region_conf", scope: !7458, file: !491, line: 82, type: !480)
!7465 = !DILocation(line: 0, scope: !7458)
!7466 = !DILocation(line: 82, column: 2, scope: !7458)
!7467 = !DILocation(line: 82, column: 24, scope: !7458)
!7468 = !DILocation(line: 87, column: 33, scope: !7458)
!7469 = !DILocation(line: 87, column: 14, scope: !7458)
!7470 = !DILocation(line: 87, column: 19, scope: !7458)
!7471 = !DILocation(line: 91, column: 55, scope: !7458)
!7472 = !DILocation(line: 92, column: 16, scope: !7458)
!7473 = !DILocation(line: 92, column: 53, scope: !7458)
!7474 = !DILocation(line: 91, column: 2, scope: !7458)
!7475 = !DILocation(line: 95, column: 9, scope: !7458)
!7476 = !DILocation(line: 97, column: 1, scope: !7458)
!7477 = !DILocation(line: 95, column: 2, scope: !7458)
!7478 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7383, file: !7383, line: 113, type: !7479, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7484)
!7479 = !DISubroutineType(types: !7480)
!7480 = !{null, !7481, !7482, !152, !152}
!7481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 32)
!7482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7483, size: 32)
!7483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7362)
!7484 = !{!7485, !7486, !7487, !7488}
!7485 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7478, file: !7383, line: 114, type: !7481)
!7486 = !DILocalVariable(name: "attr", arg: 2, scope: !7478, file: !7383, line: 115, type: !7482)
!7487 = !DILocalVariable(name: "base", arg: 3, scope: !7478, file: !7383, line: 115, type: !152)
!7488 = !DILocalVariable(name: "size", arg: 4, scope: !7478, file: !7383, line: 115, type: !152)
!7489 = !DILocation(line: 0, scope: !7478)
!7490 = !DILocation(line: 127, column: 23, scope: !7478)
!7491 = !DILocation(line: 127, column: 35, scope: !7478)
!7492 = !DILocation(line: 127, column: 33, scope: !7478)
!7493 = !DILocation(line: 127, column: 10, scope: !7478)
!7494 = !DILocation(line: 127, column: 15, scope: !7478)
!7495 = !DILocation(line: 129, column: 1, scope: !7478)
!7496 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !491, file: !491, line: 57, type: !7497, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7499)
!7497 = !DISubroutineType(types: !7498)
!7498 = !{!107, !1938, !478}
!7499 = !{!7500, !7501}
!7500 = !DILocalVariable(name: "index", arg: 1, scope: !7496, file: !491, line: 57, type: !1938)
!7501 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7496, file: !491, line: 58, type: !478)
!7502 = !DILocation(line: 0, scope: !7496)
!7503 = !DILocation(line: 61, column: 6, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7496, file: !491, line: 61, column: 6)
!7505 = !DILocation(line: 61, column: 12, scope: !7504)
!7506 = !DILocation(line: 61, column: 6, scope: !7496)
!7507 = !DILocation(line: 64, column: 3, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !491, line: 64, column: 3)
!7509 = distinct !DILexicalBlock(scope: !7510, file: !491, line: 64, column: 3)
!7510 = distinct !DILexicalBlock(scope: !7511, file: !491, line: 64, column: 3)
!7511 = distinct !DILexicalBlock(scope: !7512, file: !491, line: 64, column: 3)
!7512 = distinct !DILexicalBlock(scope: !7504, file: !491, line: 61, column: 40)
!7513 = !DILocation(line: 65, column: 3, scope: !7512)
!7514 = !DILocation(line: 71, column: 2, scope: !7496)
!7515 = !DILocation(line: 73, column: 2, scope: !7496)
!7516 = !DILocation(line: 74, column: 1, scope: !7496)
!7517 = distinct !DISubprogram(name: "region_init", scope: !7383, file: !7383, line: 29, type: !7518, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7520)
!7518 = !DISubroutineType(types: !7519)
!7519 = !{null, !6531, !478}
!7520 = !{!7521, !7522}
!7521 = !DILocalVariable(name: "index", arg: 1, scope: !7517, file: !7383, line: 29, type: !6531)
!7522 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7517, file: !7383, line: 30, type: !478)
!7523 = !DILocation(line: 0, scope: !7517)
!7524 = !DILocation(line: 33, column: 2, scope: !7517)
!7525 = !DILocation(line: 47, column: 28, scope: !7517)
!7526 = !DILocation(line: 47, column: 33, scope: !7517)
!7527 = !DILocation(line: 48, column: 26, scope: !7517)
!7528 = !DILocation(line: 47, column: 12, scope: !7517)
!7529 = !DILocation(line: 49, column: 32, scope: !7517)
!7530 = !DILocation(line: 49, column: 37, scope: !7517)
!7531 = !DILocation(line: 49, column: 12, scope: !7517)
!7532 = !DILocation(line: 53, column: 1, scope: !7517)
!7533 = distinct !DISubprogram(name: "set_region_number", scope: !7534, file: !7534, line: 32, type: !6351, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7535)
!7534 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7535 = !{!7536}
!7536 = !DILocalVariable(name: "index", arg: 1, scope: !7533, file: !7534, line: 32, type: !152)
!7537 = !DILocation(line: 0, scope: !7533)
!7538 = !DILocation(line: 34, column: 11, scope: !7533)
!7539 = !DILocation(line: 35, column: 1, scope: !7533)
!7540 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7383, file: !7383, line: 88, type: !7541, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7543)
!7541 = !DISubroutineType(types: !7542)
!7542 = !{!152, !152}
!7543 = !{!7544}
!7544 = !DILocalVariable(name: "size", arg: 1, scope: !7540, file: !7383, line: 88, type: !152)
!7545 = !DILocation(line: 0, scope: !7540)
!7546 = !DILocation(line: 91, column: 11, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7540, file: !7383, line: 91, column: 6)
!7548 = !DILocation(line: 91, column: 6, scope: !7540)
!7549 = !DILocation(line: 100, column: 11, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7540, file: !7383, line: 100, column: 6)
!7551 = !DILocation(line: 100, column: 6, scope: !7540)
!7552 = !DILocation(line: 104, column: 35, scope: !7540)
!7553 = !DILocation(line: 104, column: 16, scope: !7540)
!7554 = !DILocation(line: 104, column: 50, scope: !7540)
!7555 = !DILocation(line: 104, column: 72, scope: !7540)
!7556 = !DILocation(line: 104, column: 2, scope: !7540)
!7557 = !DILocation(line: 106, column: 1, scope: !7540)
!7558 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !491, file: !491, line: 307, type: !7559, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7561)
!7559 = !DISubroutineType(types: !7560)
!7560 = !{null, !7355, !195}
!7561 = !{!7562, !7563}
!7562 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7558, file: !491, line: 308, type: !7355)
!7563 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7558, file: !491, line: 308, type: !195)
!7564 = !DILocation(line: 0, scope: !7558)
!7565 = !DILocation(line: 310, column: 6, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7558, file: !491, line: 310, column: 6)
!7567 = !DILocation(line: 311, column: 3, scope: !7566)
!7568 = !DILocation(line: 310, column: 6, scope: !7558)
!7569 = !DILocation(line: 313, column: 3, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7571, file: !491, line: 313, column: 3)
!7571 = distinct !DILexicalBlock(scope: !7572, file: !491, line: 313, column: 3)
!7572 = distinct !DILexicalBlock(scope: !7573, file: !491, line: 313, column: 3)
!7573 = distinct !DILexicalBlock(scope: !7566, file: !491, line: 311, column: 15)
!7574 = !DILocation(line: 316, column: 1, scope: !7558)
!7575 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7383, file: !7383, line: 249, type: !7576, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7578)
!7576 = !DISubroutineType(types: !7577)
!7577 = !{!107, !7355, !195}
!7578 = !{!7579, !7580, !7581, !7582}
!7579 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7575, file: !7383, line: 250, type: !7355)
!7580 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7575, file: !7383, line: 250, type: !195)
!7581 = !DILocalVariable(name: "mpu_reg_index", scope: !7575, file: !7383, line: 252, type: !107)
!7582 = !DILocalVariable(name: "i", scope: !7583, file: !7383, line: 264, type: !107)
!7583 = distinct !DILexicalBlock(scope: !7584, file: !7383, line: 264, column: 3)
!7584 = distinct !DILexicalBlock(scope: !7585, file: !7383, line: 261, column: 32)
!7585 = distinct !DILexicalBlock(scope: !7575, file: !7383, line: 261, column: 6)
!7586 = !DILocation(line: 0, scope: !7575)
!7587 = !DILocation(line: 252, column: 22, scope: !7575)
!7588 = !DILocation(line: 258, column: 18, scope: !7575)
!7589 = !DILocation(line: 261, column: 20, scope: !7585)
!7590 = !DILocation(line: 261, column: 6, scope: !7575)
!7591 = !DILocation(line: 0, scope: !7583)
!7592 = !DILocation(line: 265, column: 4, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7594, file: !7383, line: 264, column: 59)
!7594 = distinct !DILexicalBlock(scope: !7583, file: !7383, line: 264, column: 3)
!7595 = !DILocation(line: 264, column: 55, scope: !7594)
!7596 = !DILocation(line: 264, column: 33, scope: !7594)
!7597 = !DILocation(line: 264, column: 3, scope: !7583)
!7598 = distinct !{!7598, !7597, !7599}
!7599 = !DILocation(line: 266, column: 3, scope: !7583)
!7600 = !DILocation(line: 269, column: 2, scope: !7575)
!7601 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7602, file: !7602, line: 218, type: !6351, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7603)
!7602 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7603 = !{!7604}
!7604 = !DILocalVariable(name: "rnr", arg: 1, scope: !7601, file: !7602, line: 218, type: !152)
!7605 = !DILocation(line: 0, scope: !7601)
!7606 = !DILocation(line: 220, column: 12, scope: !7601)
!7607 = !DILocation(line: 221, column: 13, scope: !7601)
!7608 = !DILocation(line: 222, column: 1, scope: !7601)
!7609 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !491, file: !491, line: 326, type: !7610, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7612)
!7610 = !DISubroutineType(types: !7611)
!7611 = !{!107}
!7612 = !{!7613}
!7613 = !DILocalVariable(name: "r_index", scope: !7609, file: !491, line: 328, type: !152)
!7614 = !DILocation(line: 330, column: 17, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7609, file: !491, line: 330, column: 6)
!7616 = !DILocation(line: 330, column: 29, scope: !7615)
!7617 = !DILocation(line: 330, column: 6, scope: !7609)
!7618 = !DILocation(line: 337, column: 3, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7620, file: !491, line: 337, column: 3)
!7620 = distinct !DILexicalBlock(scope: !7621, file: !491, line: 337, column: 3)
!7621 = distinct !DILexicalBlock(scope: !7622, file: !491, line: 337, column: 3)
!7622 = distinct !DILexicalBlock(scope: !7615, file: !491, line: 330, column: 50)
!7623 = !DILocation(line: 347, column: 2, scope: !7609)
!7624 = !DILocation(line: 0, scope: !7609)
!7625 = !DILocation(line: 364, column: 29, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7627, file: !491, line: 364, column: 2)
!7627 = distinct !DILexicalBlock(scope: !7609, file: !491, line: 364, column: 2)
!7628 = !DILocation(line: 364, column: 2, scope: !7627)
!7629 = !DILocation(line: 365, column: 25, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7626, file: !491, line: 364, column: 66)
!7631 = !DILocation(line: 365, column: 3, scope: !7630)
!7632 = !DILocation(line: 364, column: 62, scope: !7626)
!7633 = distinct !{!7633, !7628, !7634}
!7634 = !DILocation(line: 366, column: 2, scope: !7627)
!7635 = !DILocation(line: 369, column: 23, scope: !7609)
!7636 = !DILocation(line: 369, column: 21, scope: !7609)
!7637 = !DILocation(line: 372, column: 2, scope: !7609)
!7638 = !DILocation(line: 433, column: 2, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7640, file: !491, line: 433, column: 2)
!7640 = distinct !DILexicalBlock(scope: !7609, file: !491, line: 433, column: 2)
!7641 = !DILocation(line: 433, column: 2, scope: !7640)
!7642 = !DILocation(line: 433, column: 2, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7639, file: !491, line: 433, column: 2)
!7644 = !DILocation(line: 444, column: 1, scope: !7609)
!7645 = distinct !DISubprogram(name: "strcpy", scope: !7646, file: !7646, line: 20, type: !7647, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7651)
!7646 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7647 = !DISubroutineType(types: !7648)
!7648 = !{!193, !7649, !7650}
!7649 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !193)
!7650 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !118)
!7651 = !{!7652, !7653, !7654}
!7652 = !DILocalVariable(name: "d", arg: 1, scope: !7645, file: !7646, line: 20, type: !7649)
!7653 = !DILocalVariable(name: "s", arg: 2, scope: !7645, file: !7646, line: 20, type: !7650)
!7654 = !DILocalVariable(name: "dest", scope: !7645, file: !7646, line: 22, type: !193)
!7655 = !DILocation(line: 0, scope: !7645)
!7656 = !DILocation(line: 24, column: 9, scope: !7645)
!7657 = !DILocation(line: 24, column: 12, scope: !7645)
!7658 = !DILocation(line: 24, column: 2, scope: !7645)
!7659 = !DILocation(line: 25, column: 6, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7645, file: !7646, line: 24, column: 21)
!7661 = !DILocation(line: 26, column: 4, scope: !7660)
!7662 = !DILocation(line: 27, column: 4, scope: !7660)
!7663 = distinct !{!7663, !7658, !7664}
!7664 = !DILocation(line: 28, column: 2, scope: !7645)
!7665 = !DILocation(line: 30, column: 5, scope: !7645)
!7666 = !DILocation(line: 32, column: 2, scope: !7645)
!7667 = distinct !DISubprogram(name: "strncpy", scope: !7646, file: !7646, line: 42, type: !7668, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7670)
!7668 = !DISubroutineType(types: !7669)
!7669 = !{!193, !7649, !7650, !185}
!7670 = !{!7671, !7672, !7673, !7674}
!7671 = !DILocalVariable(name: "d", arg: 1, scope: !7667, file: !7646, line: 42, type: !7649)
!7672 = !DILocalVariable(name: "s", arg: 2, scope: !7667, file: !7646, line: 42, type: !7650)
!7673 = !DILocalVariable(name: "n", arg: 3, scope: !7667, file: !7646, line: 42, type: !185)
!7674 = !DILocalVariable(name: "dest", scope: !7667, file: !7646, line: 44, type: !193)
!7675 = !DILocation(line: 0, scope: !7667)
!7676 = !DILocation(line: 46, column: 12, scope: !7667)
!7677 = !DILocation(line: 46, column: 17, scope: !7667)
!7678 = !DILocation(line: 46, column: 20, scope: !7667)
!7679 = !DILocation(line: 46, column: 23, scope: !7667)
!7680 = !DILocation(line: 46, column: 2, scope: !7667)
!7681 = !DILocation(line: 47, column: 6, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7667, file: !7646, line: 46, column: 32)
!7683 = !DILocation(line: 48, column: 4, scope: !7682)
!7684 = !DILocation(line: 49, column: 4, scope: !7682)
!7685 = !DILocation(line: 50, column: 4, scope: !7682)
!7686 = distinct !{!7686, !7680, !7687}
!7687 = !DILocation(line: 51, column: 2, scope: !7667)
!7688 = !DILocation(line: 54, column: 6, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7667, file: !7646, line: 53, column: 16)
!7690 = !DILocation(line: 55, column: 4, scope: !7689)
!7691 = !DILocation(line: 56, column: 4, scope: !7689)
!7692 = !DILocation(line: 53, column: 11, scope: !7667)
!7693 = !DILocation(line: 53, column: 2, scope: !7667)
!7694 = distinct !{!7694, !7693, !7695}
!7695 = !DILocation(line: 57, column: 2, scope: !7667)
!7696 = !DILocation(line: 59, column: 2, scope: !7667)
!7697 = distinct !DISubprogram(name: "strchr", scope: !7646, file: !7646, line: 69, type: !7698, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7700)
!7698 = !DISubroutineType(types: !7699)
!7699 = !{!193, !118, !107}
!7700 = !{!7701, !7702, !7703}
!7701 = !DILocalVariable(name: "s", arg: 1, scope: !7697, file: !7646, line: 69, type: !118)
!7702 = !DILocalVariable(name: "c", arg: 2, scope: !7697, file: !7646, line: 69, type: !107)
!7703 = !DILocalVariable(name: "tmp", scope: !7697, file: !7646, line: 71, type: !120)
!7704 = !DILocation(line: 0, scope: !7697)
!7705 = !DILocation(line: 73, column: 2, scope: !7697)
!7706 = !DILocation(line: 73, column: 10, scope: !7697)
!7707 = !DILocation(line: 73, column: 13, scope: !7697)
!7708 = !DILocation(line: 73, column: 21, scope: !7697)
!7709 = !DILocation(line: 74, column: 4, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7697, file: !7646, line: 73, column: 38)
!7711 = distinct !{!7711, !7705, !7712}
!7712 = !DILocation(line: 75, column: 2, scope: !7697)
!7713 = !DILocation(line: 77, column: 9, scope: !7697)
!7714 = !DILocation(line: 77, column: 2, scope: !7697)
!7715 = distinct !DISubprogram(name: "strrchr", scope: !7646, file: !7646, line: 87, type: !7698, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7716)
!7716 = !{!7717, !7718, !7719}
!7717 = !DILocalVariable(name: "s", arg: 1, scope: !7715, file: !7646, line: 87, type: !118)
!7718 = !DILocalVariable(name: "c", arg: 2, scope: !7715, file: !7646, line: 87, type: !107)
!7719 = !DILocalVariable(name: "match", scope: !7715, file: !7646, line: 89, type: !193)
!7720 = !DILocation(line: 0, scope: !7715)
!7721 = !DILocation(line: 91, column: 2, scope: !7715)
!7722 = !DILocation(line: 92, column: 7, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7724, file: !7646, line: 92, column: 7)
!7724 = distinct !DILexicalBlock(scope: !7715, file: !7646, line: 91, column: 5)
!7725 = !DILocation(line: 92, column: 10, scope: !7723)
!7726 = !DILocation(line: 92, column: 7, scope: !7724)
!7727 = !DILocation(line: 95, column: 13, scope: !7715)
!7728 = !DILocation(line: 95, column: 2, scope: !7724)
!7729 = distinct !{!7729, !7721, !7730}
!7730 = !DILocation(line: 95, column: 15, scope: !7715)
!7731 = !DILocation(line: 97, column: 2, scope: !7715)
!7732 = distinct !DISubprogram(name: "strlen", scope: !7646, file: !7646, line: 107, type: !7733, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7735)
!7733 = !DISubroutineType(types: !7734)
!7734 = !{!185, !118}
!7735 = !{!7736, !7737}
!7736 = !DILocalVariable(name: "s", arg: 1, scope: !7732, file: !7646, line: 107, type: !118)
!7737 = !DILocalVariable(name: "n", scope: !7732, file: !7646, line: 109, type: !185)
!7738 = !DILocation(line: 0, scope: !7732)
!7739 = !DILocation(line: 111, column: 9, scope: !7732)
!7740 = !DILocation(line: 111, column: 12, scope: !7732)
!7741 = !DILocation(line: 111, column: 2, scope: !7732)
!7742 = !DILocation(line: 112, column: 4, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7732, file: !7646, line: 111, column: 21)
!7744 = !DILocation(line: 113, column: 4, scope: !7743)
!7745 = distinct !{!7745, !7741, !7746}
!7746 = !DILocation(line: 114, column: 2, scope: !7732)
!7747 = !DILocation(line: 116, column: 2, scope: !7732)
!7748 = distinct !DISubprogram(name: "strnlen", scope: !7646, file: !7646, line: 126, type: !7749, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7751)
!7749 = !DISubroutineType(types: !7750)
!7750 = !{!185, !118, !185}
!7751 = !{!7752, !7753, !7754}
!7752 = !DILocalVariable(name: "s", arg: 1, scope: !7748, file: !7646, line: 126, type: !118)
!7753 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7748, file: !7646, line: 126, type: !185)
!7754 = !DILocalVariable(name: "n", scope: !7748, file: !7646, line: 128, type: !185)
!7755 = !DILocation(line: 0, scope: !7748)
!7756 = !DILocation(line: 130, column: 9, scope: !7748)
!7757 = !DILocation(line: 130, column: 12, scope: !7748)
!7758 = !DILocation(line: 130, column: 20, scope: !7748)
!7759 = !DILocation(line: 130, column: 2, scope: !7748)
!7760 = !DILocation(line: 131, column: 4, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7748, file: !7646, line: 130, column: 35)
!7762 = !DILocation(line: 132, column: 4, scope: !7761)
!7763 = distinct !{!7763, !7759, !7764}
!7764 = !DILocation(line: 133, column: 2, scope: !7748)
!7765 = !DILocation(line: 135, column: 2, scope: !7748)
!7766 = distinct !DISubprogram(name: "strcmp", scope: !7646, file: !7646, line: 145, type: !7767, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7769)
!7767 = !DISubroutineType(types: !7768)
!7768 = !{!107, !118, !118}
!7769 = !{!7770, !7771}
!7770 = !DILocalVariable(name: "s1", arg: 1, scope: !7766, file: !7646, line: 145, type: !118)
!7771 = !DILocalVariable(name: "s2", arg: 2, scope: !7766, file: !7646, line: 145, type: !118)
!7772 = !DILocation(line: 0, scope: !7766)
!7773 = !DILocation(line: 147, column: 10, scope: !7766)
!7774 = !DILocation(line: 147, column: 17, scope: !7766)
!7775 = !DILocation(line: 147, column: 14, scope: !7766)
!7776 = !DILocation(line: 147, column: 22, scope: !7766)
!7777 = !DILocation(line: 148, column: 5, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7766, file: !7646, line: 147, column: 40)
!7779 = !DILocation(line: 149, column: 5, scope: !7778)
!7780 = distinct !{!7780, !7781, !7782}
!7781 = !DILocation(line: 147, column: 2, scope: !7766)
!7782 = !DILocation(line: 150, column: 2, scope: !7766)
!7783 = !DILocation(line: 152, column: 9, scope: !7766)
!7784 = !DILocation(line: 152, column: 15, scope: !7766)
!7785 = !DILocation(line: 152, column: 13, scope: !7766)
!7786 = !DILocation(line: 152, column: 2, scope: !7766)
!7787 = distinct !DISubprogram(name: "strncmp", scope: !7646, file: !7646, line: 162, type: !7788, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7790)
!7788 = !DISubroutineType(types: !7789)
!7789 = !{!107, !118, !118, !185}
!7790 = !{!7791, !7792, !7793}
!7791 = !DILocalVariable(name: "s1", arg: 1, scope: !7787, file: !7646, line: 162, type: !118)
!7792 = !DILocalVariable(name: "s2", arg: 2, scope: !7787, file: !7646, line: 162, type: !118)
!7793 = !DILocalVariable(name: "n", arg: 3, scope: !7787, file: !7646, line: 162, type: !185)
!7794 = !DILocation(line: 0, scope: !7787)
!7795 = !DILocation(line: 164, column: 17, scope: !7787)
!7796 = !DILocation(line: 164, column: 21, scope: !7787)
!7797 = !DILocation(line: 164, column: 28, scope: !7787)
!7798 = !DILocation(line: 164, column: 25, scope: !7787)
!7799 = !DILocation(line: 164, column: 33, scope: !7787)
!7800 = !DILocation(line: 165, column: 5, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7787, file: !7646, line: 164, column: 51)
!7802 = !DILocation(line: 166, column: 5, scope: !7801)
!7803 = !DILocation(line: 167, column: 4, scope: !7801)
!7804 = distinct !{!7804, !7805, !7806}
!7805 = !DILocation(line: 164, column: 2, scope: !7787)
!7806 = !DILocation(line: 168, column: 2, scope: !7787)
!7807 = !DILocation(line: 170, column: 25, scope: !7787)
!7808 = !DILocation(line: 170, column: 31, scope: !7787)
!7809 = !DILocation(line: 170, column: 29, scope: !7787)
!7810 = !DILocation(line: 170, column: 9, scope: !7787)
!7811 = !DILocation(line: 170, column: 2, scope: !7787)
!7812 = distinct !DISubprogram(name: "strtok_r", scope: !7646, file: !7646, line: 180, type: !7813, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7815)
!7813 = !DISubroutineType(types: !7814)
!7814 = !{!193, !193, !118, !192}
!7815 = !{!7816, !7817, !7818, !7819, !7820}
!7816 = !DILocalVariable(name: "str", arg: 1, scope: !7812, file: !7646, line: 180, type: !193)
!7817 = !DILocalVariable(name: "sep", arg: 2, scope: !7812, file: !7646, line: 180, type: !118)
!7818 = !DILocalVariable(name: "state", arg: 3, scope: !7812, file: !7646, line: 180, type: !192)
!7819 = !DILocalVariable(name: "start", scope: !7812, file: !7646, line: 182, type: !193)
!7820 = !DILocalVariable(name: "end", scope: !7812, file: !7646, line: 182, type: !193)
!7821 = !DILocation(line: 0, scope: !7812)
!7822 = !DILocation(line: 184, column: 10, scope: !7812)
!7823 = !DILocation(line: 184, column: 22, scope: !7812)
!7824 = !DILocation(line: 187, column: 9, scope: !7812)
!7825 = !DILocation(line: 187, column: 16, scope: !7812)
!7826 = !DILocation(line: 187, column: 19, scope: !7812)
!7827 = !DILocation(line: 187, column: 2, scope: !7812)
!7828 = !DILocation(line: 188, column: 8, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7812, file: !7646, line: 187, column: 40)
!7830 = distinct !{!7830, !7827, !7831}
!7831 = !DILocation(line: 189, column: 2, scope: !7812)
!7832 = !DILocation(line: 198, column: 9, scope: !7812)
!7833 = !DILocation(line: 198, column: 18, scope: !7812)
!7834 = !DILocation(line: 198, column: 17, scope: !7812)
!7835 = !DILocation(line: 198, column: 2, scope: !7812)
!7836 = !DILocation(line: 199, column: 6, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7812, file: !7646, line: 198, column: 37)
!7838 = !DILocation(line: 198, column: 14, scope: !7812)
!7839 = distinct !{!7839, !7835, !7840}
!7840 = !DILocation(line: 200, column: 2, scope: !7812)
!7841 = !DILocation(line: 203, column: 8, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7843, file: !7646, line: 202, column: 20)
!7843 = distinct !DILexicalBlock(scope: !7812, file: !7646, line: 202, column: 6)
!7844 = !DILocation(line: 204, column: 16, scope: !7842)
!7845 = !DILocation(line: 205, column: 2, scope: !7842)
!7846 = !DILocation(line: 210, column: 1, scope: !7812)
!7847 = distinct !DISubprogram(name: "strcat", scope: !7646, file: !7646, line: 212, type: !7647, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7848)
!7848 = !{!7849, !7850}
!7849 = !DILocalVariable(name: "dest", arg: 1, scope: !7847, file: !7646, line: 212, type: !7649)
!7850 = !DILocalVariable(name: "src", arg: 2, scope: !7847, file: !7646, line: 212, type: !7650)
!7851 = !DILocation(line: 0, scope: !7847)
!7852 = !DILocation(line: 214, column: 16, scope: !7847)
!7853 = !DILocation(line: 214, column: 14, scope: !7847)
!7854 = !DILocation(line: 214, column: 2, scope: !7847)
!7855 = !DILocation(line: 215, column: 2, scope: !7847)
!7856 = distinct !DISubprogram(name: "strncat", scope: !7646, file: !7646, line: 218, type: !7668, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7857)
!7857 = !{!7858, !7859, !7860, !7861, !7862}
!7858 = !DILocalVariable(name: "dest", arg: 1, scope: !7856, file: !7646, line: 218, type: !7649)
!7859 = !DILocalVariable(name: "src", arg: 2, scope: !7856, file: !7646, line: 218, type: !7650)
!7860 = !DILocalVariable(name: "n", arg: 3, scope: !7856, file: !7646, line: 219, type: !185)
!7861 = !DILocalVariable(name: "orig_dest", scope: !7856, file: !7646, line: 221, type: !193)
!7862 = !DILocalVariable(name: "len", scope: !7856, file: !7646, line: 222, type: !185)
!7863 = !DILocation(line: 0, scope: !7856)
!7864 = !DILocation(line: 222, column: 15, scope: !7856)
!7865 = !DILocation(line: 224, column: 7, scope: !7856)
!7866 = !DILocation(line: 225, column: 14, scope: !7856)
!7867 = !DILocation(line: 225, column: 19, scope: !7856)
!7868 = !DILocation(line: 225, column: 11, scope: !7856)
!7869 = !DILocation(line: 225, column: 23, scope: !7856)
!7870 = !DILocation(line: 225, column: 28, scope: !7856)
!7871 = !DILocation(line: 225, column: 2, scope: !7856)
!7872 = !DILocation(line: 226, column: 17, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7856, file: !7646, line: 225, column: 38)
!7874 = !DILocation(line: 226, column: 8, scope: !7873)
!7875 = !DILocation(line: 226, column: 11, scope: !7873)
!7876 = distinct !{!7876, !7871, !7877}
!7877 = !DILocation(line: 227, column: 2, scope: !7856)
!7878 = !DILocation(line: 228, column: 8, scope: !7856)
!7879 = !DILocation(line: 230, column: 2, scope: !7856)
!7880 = distinct !DISubprogram(name: "memcmp", scope: !7646, file: !7646, line: 239, type: !7881, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7883)
!7881 = !DISubroutineType(types: !7882)
!7882 = !{!107, !13, !13, !185}
!7883 = !{!7884, !7885, !7886, !7887, !7888}
!7884 = !DILocalVariable(name: "m1", arg: 1, scope: !7880, file: !7646, line: 239, type: !13)
!7885 = !DILocalVariable(name: "m2", arg: 2, scope: !7880, file: !7646, line: 239, type: !13)
!7886 = !DILocalVariable(name: "n", arg: 3, scope: !7880, file: !7646, line: 239, type: !185)
!7887 = !DILocalVariable(name: "c1", scope: !7880, file: !7646, line: 241, type: !118)
!7888 = !DILocalVariable(name: "c2", scope: !7880, file: !7646, line: 242, type: !118)
!7889 = !DILocation(line: 0, scope: !7880)
!7890 = !DILocation(line: 244, column: 7, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7880, file: !7646, line: 244, column: 6)
!7892 = !DILocation(line: 244, column: 6, scope: !7880)
!7893 = !DILocation(line: 248, column: 10, scope: !7880)
!7894 = !DILocation(line: 248, column: 14, scope: !7880)
!7895 = !DILocation(line: 248, column: 19, scope: !7880)
!7896 = !DILocation(line: 248, column: 2, scope: !7880)
!7897 = !DILocation(line: 248, column: 23, scope: !7880)
!7898 = !DILocation(line: 248, column: 30, scope: !7880)
!7899 = !DILocation(line: 248, column: 27, scope: !7880)
!7900 = !DILocation(line: 249, column: 5, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7880, file: !7646, line: 248, column: 36)
!7902 = !DILocation(line: 250, column: 5, scope: !7901)
!7903 = distinct !{!7903, !7896, !7904}
!7904 = !DILocation(line: 251, column: 2, scope: !7880)
!7905 = !DILocation(line: 253, column: 9, scope: !7880)
!7906 = !DILocation(line: 253, column: 15, scope: !7880)
!7907 = !DILocation(line: 253, column: 13, scope: !7880)
!7908 = !DILocation(line: 253, column: 2, scope: !7880)
!7909 = !DILocation(line: 254, column: 1, scope: !7880)
!7910 = distinct !DISubprogram(name: "memmove", scope: !7646, file: !7646, line: 263, type: !7911, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7913)
!7911 = !DISubroutineType(types: !7912)
!7912 = !{!106, !106, !13, !185}
!7913 = !{!7914, !7915, !7916, !7917, !7918}
!7914 = !DILocalVariable(name: "d", arg: 1, scope: !7910, file: !7646, line: 263, type: !106)
!7915 = !DILocalVariable(name: "s", arg: 2, scope: !7910, file: !7646, line: 263, type: !13)
!7916 = !DILocalVariable(name: "n", arg: 3, scope: !7910, file: !7646, line: 263, type: !185)
!7917 = !DILocalVariable(name: "dest", scope: !7910, file: !7646, line: 265, type: !193)
!7918 = !DILocalVariable(name: "src", scope: !7910, file: !7646, line: 266, type: !118)
!7919 = !DILocation(line: 0, scope: !7910)
!7920 = !DILocation(line: 268, column: 21, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7910, file: !7646, line: 268, column: 6)
!7922 = !DILocation(line: 268, column: 28, scope: !7921)
!7923 = !DILocation(line: 268, column: 6, scope: !7910)
!7924 = !DILocation(line: 280, column: 12, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7921, file: !7646, line: 278, column: 9)
!7926 = !DILocation(line: 280, column: 3, scope: !7925)
!7927 = !DILocation(line: 275, column: 5, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7929, file: !7646, line: 274, column: 17)
!7929 = distinct !DILexicalBlock(scope: !7921, file: !7646, line: 268, column: 33)
!7930 = !DILocation(line: 276, column: 14, scope: !7928)
!7931 = !DILocation(line: 276, column: 4, scope: !7928)
!7932 = !DILocation(line: 276, column: 12, scope: !7928)
!7933 = !DILocation(line: 274, column: 12, scope: !7929)
!7934 = !DILocation(line: 274, column: 3, scope: !7929)
!7935 = distinct !{!7935, !7934, !7936}
!7936 = !DILocation(line: 277, column: 3, scope: !7929)
!7937 = !DILocation(line: 281, column: 12, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7925, file: !7646, line: 280, column: 17)
!7939 = !DILocation(line: 281, column: 10, scope: !7938)
!7940 = !DILocation(line: 282, column: 8, scope: !7938)
!7941 = !DILocation(line: 283, column: 7, scope: !7938)
!7942 = !DILocation(line: 284, column: 5, scope: !7938)
!7943 = distinct !{!7943, !7926, !7944}
!7944 = !DILocation(line: 285, column: 3, scope: !7925)
!7945 = !DILocation(line: 288, column: 2, scope: !7910)
!7946 = distinct !DISubprogram(name: "memcpy", scope: !7646, file: !7646, line: 298, type: !7947, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7951)
!7947 = !DISubroutineType(types: !7948)
!7948 = !{!106, !7949, !7950, !185}
!7949 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7950 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7951 = !{!7952, !7953, !7954, !7955, !7956}
!7952 = !DILocalVariable(name: "d", arg: 1, scope: !7946, file: !7646, line: 298, type: !7949)
!7953 = !DILocalVariable(name: "s", arg: 2, scope: !7946, file: !7646, line: 298, type: !7950)
!7954 = !DILocalVariable(name: "n", arg: 3, scope: !7946, file: !7646, line: 298, type: !185)
!7955 = !DILocalVariable(name: "d_byte", scope: !7946, file: !7646, line: 302, type: !1119)
!7956 = !DILocalVariable(name: "s_byte", scope: !7946, file: !7646, line: 303, type: !2851)
!7957 = !DILocation(line: 0, scope: !7946)
!7958 = !DILocation(line: 337, column: 11, scope: !7946)
!7959 = !DILocation(line: 337, column: 2, scope: !7946)
!7960 = !DILocation(line: 338, column: 25, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7946, file: !7646, line: 337, column: 16)
!7962 = !DILocation(line: 338, column: 17, scope: !7961)
!7963 = !DILocation(line: 338, column: 11, scope: !7961)
!7964 = !DILocation(line: 338, column: 15, scope: !7961)
!7965 = !DILocation(line: 339, column: 4, scope: !7961)
!7966 = distinct !{!7966, !7959, !7967}
!7967 = !DILocation(line: 340, column: 2, scope: !7946)
!7968 = !DILocation(line: 342, column: 2, scope: !7946)
!7969 = distinct !DISubprogram(name: "memset", scope: !7646, file: !7646, line: 352, type: !7970, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7972)
!7970 = !DISubroutineType(types: !7971)
!7971 = !{!106, !106, !107, !185}
!7972 = !{!7973, !7974, !7975, !7976, !7977}
!7973 = !DILocalVariable(name: "buf", arg: 1, scope: !7969, file: !7646, line: 352, type: !106)
!7974 = !DILocalVariable(name: "c", arg: 2, scope: !7969, file: !7646, line: 352, type: !107)
!7975 = !DILocalVariable(name: "n", arg: 3, scope: !7969, file: !7646, line: 352, type: !185)
!7976 = !DILocalVariable(name: "d_byte", scope: !7969, file: !7646, line: 356, type: !1119)
!7977 = !DILocalVariable(name: "c_byte", scope: !7969, file: !7646, line: 357, type: !196)
!7978 = !DILocation(line: 0, scope: !7969)
!7979 = !DILocation(line: 357, column: 25, scope: !7969)
!7980 = !DILocation(line: 389, column: 11, scope: !7969)
!7981 = !DILocation(line: 389, column: 2, scope: !7969)
!7982 = !DILocation(line: 390, column: 11, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7969, file: !7646, line: 389, column: 16)
!7984 = !DILocation(line: 390, column: 15, scope: !7983)
!7985 = !DILocation(line: 391, column: 4, scope: !7983)
!7986 = distinct !{!7986, !7981, !7987}
!7987 = !DILocation(line: 392, column: 2, scope: !7969)
!7988 = !DILocation(line: 394, column: 2, scope: !7969)
!7989 = distinct !DISubprogram(name: "memchr", scope: !7646, file: !7646, line: 404, type: !7990, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7992)
!7990 = !DISubroutineType(types: !7991)
!7991 = !{!106, !13, !107, !185}
!7992 = !{!7993, !7994, !7995, !7996}
!7993 = !DILocalVariable(name: "s", arg: 1, scope: !7989, file: !7646, line: 404, type: !13)
!7994 = !DILocalVariable(name: "c", arg: 2, scope: !7989, file: !7646, line: 404, type: !107)
!7995 = !DILocalVariable(name: "n", arg: 3, scope: !7989, file: !7646, line: 404, type: !185)
!7996 = !DILocalVariable(name: "p", scope: !7997, file: !7646, line: 407, type: !2851)
!7997 = distinct !DILexicalBlock(scope: !7998, file: !7646, line: 406, column: 14)
!7998 = distinct !DILexicalBlock(scope: !7989, file: !7646, line: 406, column: 6)
!7999 = !DILocation(line: 0, scope: !7989)
!8000 = !DILocation(line: 406, column: 8, scope: !7998)
!8001 = !DILocation(line: 406, column: 6, scope: !7989)
!8002 = !DILocation(line: 409, column: 3, scope: !7997)
!8003 = !DILocation(line: 0, scope: !7997)
!8004 = !DILocation(line: 410, column: 8, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !7646, line: 410, column: 8)
!8006 = distinct !DILexicalBlock(scope: !7997, file: !7646, line: 409, column: 6)
!8007 = !DILocation(line: 410, column: 13, scope: !8005)
!8008 = !DILocation(line: 410, column: 8, scope: !8006)
!8009 = distinct !{!8009, !8002, !8010}
!8010 = !DILocation(line: 414, column: 20, scope: !7997)
!8011 = !DILocation(line: 417, column: 2, scope: !7989)
!8012 = !DILocation(line: 418, column: 1, scope: !7989)
!8013 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !501, file: !501, line: 23, type: !4116, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8014)
!8014 = !{!8015}
!8015 = !DILocalVariable(name: "hook", arg: 1, scope: !8013, file: !501, line: 23, type: !213)
!8016 = !DILocation(line: 0, scope: !8013)
!8017 = !DILocation(line: 25, column: 15, scope: !8013)
!8018 = !DILocation(line: 26, column: 1, scope: !8013)
!8019 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !501, file: !501, line: 14, type: !214, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8020)
!8020 = !{!8021}
!8021 = !DILocalVariable(name: "c", arg: 1, scope: !8019, file: !501, line: 14, type: !107)
!8022 = !DILocation(line: 0, scope: !8019)
!8023 = !DILocation(line: 18, column: 2, scope: !8019)
!8024 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !501, file: !501, line: 28, type: !8025, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8027)
!8025 = !DISubroutineType(types: !8026)
!8026 = !{!107, !107, !497}
!8027 = !{!8028, !8029}
!8028 = !DILocalVariable(name: "c", arg: 1, scope: !8024, file: !501, line: 28, type: !107)
!8029 = !DILocalVariable(name: "stream", arg: 2, scope: !8024, file: !501, line: 28, type: !497)
!8030 = !DILocation(line: 0, scope: !8024)
!8031 = !DILocation(line: 30, column: 27, scope: !8024)
!8032 = !DILocation(line: 30, column: 50, scope: !8024)
!8033 = !DILocation(line: 30, column: 9, scope: !8024)
!8034 = !DILocation(line: 30, column: 2, scope: !8024)
!8035 = distinct !DISubprogram(name: "fputc", scope: !501, file: !501, line: 41, type: !8025, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8036)
!8036 = !{!8037, !8038}
!8037 = !DILocalVariable(name: "c", arg: 1, scope: !8035, file: !501, line: 41, type: !107)
!8038 = !DILocalVariable(name: "stream", arg: 2, scope: !8035, file: !501, line: 41, type: !497)
!8039 = !DILocation(line: 0, scope: !8035)
!8040 = !DILocation(line: 43, column: 9, scope: !8035)
!8041 = !DILocation(line: 43, column: 2, scope: !8035)
!8042 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8043, file: !8043, line: 72, type: !8025, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8044)
!8043 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!8044 = !{!8045, !8046}
!8045 = !DILocalVariable(name: "c", arg: 1, scope: !8042, file: !8043, line: 72, type: !107)
!8046 = !DILocalVariable(name: "stream", arg: 2, scope: !8042, file: !8043, line: 72, type: !497)
!8047 = !DILocation(line: 0, scope: !8042)
!8048 = !DILocation(line: 81, column: 2, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8042, file: !8043, line: 81, column: 2)
!8050 = !{i64 2154812684}
!8051 = !DILocation(line: 82, column: 9, scope: !8042)
!8052 = !DILocation(line: 82, column: 2, scope: !8042)
!8053 = distinct !DISubprogram(name: "fputs", scope: !501, file: !501, line: 46, type: !8054, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8057)
!8054 = !DISubroutineType(types: !8055)
!8055 = !{!107, !7650, !8056}
!8056 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !497)
!8057 = !{!8058, !8059, !8060, !8061}
!8058 = !DILocalVariable(name: "s", arg: 1, scope: !8053, file: !501, line: 46, type: !7650)
!8059 = !DILocalVariable(name: "stream", arg: 2, scope: !8053, file: !501, line: 46, type: !8056)
!8060 = !DILocalVariable(name: "len", scope: !8053, file: !501, line: 48, type: !107)
!8061 = !DILocalVariable(name: "ret", scope: !8053, file: !501, line: 49, type: !107)
!8062 = !DILocation(line: 0, scope: !8053)
!8063 = !DILocation(line: 48, column: 12, scope: !8053)
!8064 = !DILocation(line: 51, column: 8, scope: !8053)
!8065 = !DILocation(line: 53, column: 13, scope: !8053)
!8066 = !DILocation(line: 53, column: 9, scope: !8053)
!8067 = !DILocation(line: 53, column: 2, scope: !8053)
!8068 = distinct !DISubprogram(name: "fwrite", scope: !501, file: !501, line: 99, type: !8069, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8071)
!8069 = !DISubroutineType(types: !8070)
!8070 = !{!185, !7950, !185, !185, !8056}
!8071 = !{!8072, !8073, !8074, !8075}
!8072 = !DILocalVariable(name: "ptr", arg: 1, scope: !8068, file: !501, line: 99, type: !7950)
!8073 = !DILocalVariable(name: "size", arg: 2, scope: !8068, file: !501, line: 99, type: !185)
!8074 = !DILocalVariable(name: "nitems", arg: 3, scope: !8068, file: !501, line: 99, type: !185)
!8075 = !DILocalVariable(name: "stream", arg: 4, scope: !8068, file: !501, line: 100, type: !8056)
!8076 = !DILocation(line: 0, scope: !8068)
!8077 = !DILocation(line: 102, column: 9, scope: !8068)
!8078 = !DILocation(line: 102, column: 2, scope: !8068)
!8079 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8043, file: !8043, line: 96, type: !8069, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8080)
!8080 = !{!8081, !8082, !8083, !8084}
!8081 = !DILocalVariable(name: "ptr", arg: 1, scope: !8079, file: !8043, line: 96, type: !7950)
!8082 = !DILocalVariable(name: "size", arg: 2, scope: !8079, file: !8043, line: 96, type: !185)
!8083 = !DILocalVariable(name: "nitems", arg: 3, scope: !8079, file: !8043, line: 96, type: !185)
!8084 = !DILocalVariable(name: "stream", arg: 4, scope: !8079, file: !8043, line: 96, type: !8056)
!8085 = !DILocation(line: 0, scope: !8079)
!8086 = !DILocation(line: 107, column: 2, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8079, file: !8043, line: 107, column: 2)
!8088 = !{i64 2154812788}
!8089 = !DILocation(line: 108, column: 9, scope: !8079)
!8090 = !DILocation(line: 108, column: 2, scope: !8079)
!8091 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !501, file: !501, line: 56, type: !8069, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8092)
!8092 = !{!8093, !8094, !8095, !8096, !8097, !8098, !8099, !8100}
!8093 = !DILocalVariable(name: "ptr", arg: 1, scope: !8091, file: !501, line: 56, type: !7950)
!8094 = !DILocalVariable(name: "size", arg: 2, scope: !8091, file: !501, line: 56, type: !185)
!8095 = !DILocalVariable(name: "nitems", arg: 3, scope: !8091, file: !501, line: 57, type: !185)
!8096 = !DILocalVariable(name: "stream", arg: 4, scope: !8091, file: !501, line: 57, type: !8056)
!8097 = !DILocalVariable(name: "i", scope: !8091, file: !501, line: 59, type: !185)
!8098 = !DILocalVariable(name: "j", scope: !8091, file: !501, line: 60, type: !185)
!8099 = !DILocalVariable(name: "p", scope: !8091, file: !501, line: 61, type: !2851)
!8100 = !DILabel(scope: !8091, name: "done", file: !501, line: 82)
!8101 = !DILocation(line: 0, scope: !8091)
!8102 = !DILocation(line: 63, column: 14, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8091, file: !501, line: 63, column: 6)
!8104 = !DILocation(line: 63, column: 24, scope: !8103)
!8105 = !DILocation(line: 72, column: 3, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8091, file: !501, line: 70, column: 5)
!8107 = !DILocation(line: 0, scope: !8106)
!8108 = !DILocation(line: 73, column: 8, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8110, file: !501, line: 73, column: 8)
!8110 = distinct !DILexicalBlock(scope: !8106, file: !501, line: 72, column: 6)
!8111 = !DILocation(line: 73, column: 29, scope: !8109)
!8112 = !DILocation(line: 73, column: 27, scope: !8109)
!8113 = !DILocation(line: 73, column: 21, scope: !8109)
!8114 = !DILocation(line: 73, column: 33, scope: !8109)
!8115 = !DILocation(line: 73, column: 8, scope: !8110)
!8116 = !DILocation(line: 76, column: 5, scope: !8110)
!8117 = !DILocation(line: 77, column: 14, scope: !8106)
!8118 = !DILocation(line: 77, column: 3, scope: !8110)
!8119 = distinct !{!8119, !8105, !8120}
!8120 = !DILocation(line: 77, column: 17, scope: !8106)
!8121 = !DILocation(line: 79, column: 4, scope: !8106)
!8122 = !DILocation(line: 80, column: 13, scope: !8091)
!8123 = !DILocation(line: 80, column: 2, scope: !8106)
!8124 = distinct !{!8124, !8125, !8126}
!8125 = !DILocation(line: 70, column: 2, scope: !8091)
!8126 = !DILocation(line: 80, column: 16, scope: !8091)
!8127 = !DILocation(line: 82, column: 1, scope: !8091)
!8128 = !DILocation(line: 83, column: 17, scope: !8091)
!8129 = !DILocation(line: 83, column: 2, scope: !8091)
!8130 = !DILocation(line: 84, column: 1, scope: !8091)
!8131 = distinct !DISubprogram(name: "puts", scope: !501, file: !501, line: 106, type: !8132, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8134)
!8132 = !DISubroutineType(types: !8133)
!8133 = !{!107, !118}
!8134 = !{!8135}
!8135 = !DILocalVariable(name: "s", arg: 1, scope: !8131, file: !501, line: 106, type: !118)
!8136 = !DILocation(line: 0, scope: !8131)
!8137 = !DILocation(line: 108, column: 6, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8131, file: !501, line: 108, column: 6)
!8139 = !DILocation(line: 108, column: 23, scope: !8138)
!8140 = !DILocation(line: 108, column: 6, scope: !8131)
!8141 = !DILocation(line: 112, column: 9, scope: !8131)
!8142 = !DILocation(line: 112, column: 29, scope: !8131)
!8143 = !DILocation(line: 112, column: 2, scope: !8131)
!8144 = !DILocation(line: 113, column: 1, scope: !8131)
!8145 = distinct !DISubprogram(name: "end_report", scope: !533, file: !533, line: 67, type: !3082, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8146 = !DILocation(line: 69, column: 6, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8145, file: !533, line: 69, column: 6)
!8148 = !DILocation(line: 0, scope: !8147)
!8149 = !DILocation(line: 74, column: 1, scope: !8145)
!8150 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_start", scope: !533, file: !533, line: 159, type: !3082, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8151 = !DILocation(line: 183, column: 1, scope: !8150)
!8152 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_stop", scope: !533, file: !533, line: 185, type: !3082, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8153 = !DILocation(line: 196, column: 1, scope: !8152)
!8154 = distinct !DISubprogram(name: "ztest_skip_failed_assumption", scope: !533, file: !533, line: 295, type: !3082, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8155 = !DILocation(line: 298, column: 34, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8157, file: !533, line: 297, column: 47)
!8157 = distinct !DILexicalBlock(scope: !8154, file: !533, line: 297, column: 6)
!8158 = !DILocation(line: 300, column: 2, scope: !8154)
!8159 = !DILocation(line: 301, column: 1, scope: !8154)
!8160 = distinct !DISubprogram(name: "ztest_test_skip", scope: !533, file: !533, line: 476, type: !3082, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8161 = !DILocation(line: 478, column: 10, scope: !8160)
!8162 = !DILocation(line: 478, column: 2, scope: !8160)
!8163 = !DILocation(line: 480, column: 15, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8160, file: !533, line: 478, column: 17)
!8165 = !DILocation(line: 481, column: 3, scope: !8164)
!8166 = !DILocation(line: 484, column: 15, scope: !8164)
!8167 = !DILocation(line: 485, column: 3, scope: !8164)
!8168 = !DILocation(line: 486, column: 3, scope: !8164)
!8169 = !DILocation(line: 489, column: 9, scope: !8164)
!8170 = !DILocation(line: 488, column: 3, scope: !8164)
!8171 = !DILocation(line: 490, column: 15, scope: !8164)
!8172 = !DILocation(line: 491, column: 3, scope: !8164)
!8173 = !DILocation(line: 493, column: 1, scope: !8160)
!8174 = distinct !DISubprogram(name: "test_finalize", scope: !533, file: !533, line: 432, type: !3082, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8175 = !DILocation(line: 435, column: 3, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8177, file: !533, line: 434, column: 41)
!8177 = distinct !DILexicalBlock(scope: !8174, file: !533, line: 434, column: 6)
!8178 = !DILocation(line: 436, column: 18, scope: !8176)
!8179 = !DILocation(line: 436, column: 3, scope: !8176)
!8180 = !DILocation(line: 438, column: 1, scope: !8174)
!8181 = distinct !DISubprogram(name: "get_friendly_phase_name", scope: !533, file: !533, line: 274, type: !8182, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8184)
!8182 = !DISubroutineType(types: !8183)
!8183 = !{!118, !532}
!8184 = !{!8185}
!8185 = !DILocalVariable(name: "phase", arg: 1, scope: !8181, file: !533, line: 274, type: !532)
!8186 = !DILocation(line: 0, scope: !8181)
!8187 = !DILocation(line: 276, column: 2, scope: !8181)
!8188 = !DILocation(line: 0, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8181, file: !533, line: 276, column: 17)
!8190 = !DILocation(line: 292, column: 1, scope: !8181)
!8191 = distinct !DISubprogram(name: "k_thread_abort", scope: !4410, file: !4410, line: 188, type: !8192, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8196)
!8192 = !DISubroutineType(types: !8193)
!8193 = !{null, !8194}
!8194 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !8195)
!8195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!8196 = !{!8197}
!8197 = !DILocalVariable(name: "thread", arg: 1, scope: !8191, file: !4410, line: 188, type: !8194)
!8198 = !DILocation(line: 0, scope: !8191)
!8199 = !DILocation(line: 197, column: 2, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8191, file: !4410, line: 197, column: 2)
!8201 = !{i64 2154774487}
!8202 = !DILocation(line: 198, column: 2, scope: !8191)
!8203 = !DILocation(line: 199, column: 1, scope: !8191)
!8204 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !8205, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8205 = !DISubroutineType(types: !8206)
!8206 = !{!8194}
!8207 = !DILocation(line: 535, column: 9, scope: !8204)
!8208 = !DILocation(line: 535, column: 2, scope: !8204)
!8209 = distinct !DISubprogram(name: "z_current_get", scope: !4410, file: !4410, line: 173, type: !8205, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8210 = !DILocation(line: 180, column: 2, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8209, file: !4410, line: 180, column: 2)
!8212 = !{i64 2154774419}
!8213 = !DILocation(line: 181, column: 9, scope: !8209)
!8214 = !DILocation(line: 181, column: 2, scope: !8209)
!8215 = distinct !DISubprogram(name: "ztest_test_fail", scope: !533, file: !533, line: 440, type: !3082, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8216 = !DILocation(line: 442, column: 10, scope: !8215)
!8217 = !DILocation(line: 442, column: 2, scope: !8215)
!8218 = !DILocation(line: 444, column: 15, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8215, file: !533, line: 442, column: 17)
!8220 = !DILocation(line: 445, column: 3, scope: !8219)
!8221 = !DILocation(line: 448, column: 15, scope: !8219)
!8222 = !DILocation(line: 449, column: 3, scope: !8219)
!8223 = !DILocation(line: 450, column: 3, scope: !8219)
!8224 = !DILocation(line: 453, column: 9, scope: !8219)
!8225 = !DILocation(line: 452, column: 3, scope: !8219)
!8226 = !DILocation(line: 454, column: 15, scope: !8219)
!8227 = !DILocation(line: 455, column: 3, scope: !8219)
!8228 = !DILocation(line: 457, column: 1, scope: !8215)
!8229 = distinct !DISubprogram(name: "ztest_test_pass", scope: !533, file: !533, line: 459, type: !3082, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8230 = !DILocation(line: 461, column: 10, scope: !8229)
!8231 = !DILocation(line: 461, column: 2, scope: !8229)
!8232 = !DILocation(line: 463, column: 15, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8229, file: !533, line: 461, column: 17)
!8234 = !DILocation(line: 465, column: 3, scope: !8233)
!8235 = !DILocation(line: 468, column: 9, scope: !8233)
!8236 = !DILocation(line: 467, column: 3, scope: !8233)
!8237 = !DILocation(line: 469, column: 15, scope: !8233)
!8238 = !DILocation(line: 470, column: 7, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8233, file: !533, line: 470, column: 7)
!8240 = !DILocation(line: 470, column: 13, scope: !8239)
!8241 = !DILocation(line: 470, column: 7, scope: !8233)
!8242 = !DILocation(line: 0, scope: !8233)
!8243 = !DILocation(line: 474, column: 1, scope: !8229)
!8244 = distinct !DISubprogram(name: "ztest_simple_1cpu_before", scope: !533, file: !533, line: 495, type: !131, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8245)
!8245 = !{!8246}
!8246 = !DILocalVariable(name: "data", arg: 1, scope: !8244, file: !533, line: 495, type: !106)
!8247 = !DILocation(line: 0, scope: !8244)
!8248 = !DILocation(line: 498, column: 2, scope: !8244)
!8249 = !DILocation(line: 499, column: 1, scope: !8244)
!8250 = distinct !DISubprogram(name: "z_test_1cpu_start", scope: !8251, file: !8251, line: 24, type: !3082, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8251 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!8252 = !DILocation(line: 32, column: 2, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8250, file: !8251, line: 32, column: 2)
!8254 = !{i64 2154896874}
!8255 = !DILocation(line: 34, column: 1, scope: !8250)
!8256 = distinct !DISubprogram(name: "ztest_simple_1cpu_after", scope: !533, file: !533, line: 501, type: !131, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8257)
!8257 = !{!8258}
!8258 = !DILocalVariable(name: "data", arg: 1, scope: !8256, file: !533, line: 501, type: !106)
!8259 = !DILocation(line: 0, scope: !8256)
!8260 = !DILocation(line: 504, column: 2, scope: !8256)
!8261 = !DILocation(line: 505, column: 1, scope: !8256)
!8262 = distinct !DISubprogram(name: "z_test_1cpu_stop", scope: !8251, file: !8251, line: 47, type: !3082, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8263 = !DILocation(line: 55, column: 2, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8262, file: !8251, line: 55, column: 2)
!8265 = !{i64 2154896942}
!8266 = !DILocation(line: 57, column: 1, scope: !8262)
!8267 = distinct !DISubprogram(name: "z_ztest_get_next_test", scope: !533, file: !533, line: 617, type: !8268, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8287)
!8268 = !DISubroutineType(types: !8269)
!8269 = !{!8270, !118, !8270}
!8270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8271, size: 32)
!8271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !8272)
!8272 = !{!8273, !8274, !8275, !8276, !8277}
!8273 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8271, file: !114, line: 98, baseType: !118, size: 32)
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8271, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!8275 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !8271, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!8276 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !8271, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!8277 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8271, file: !114, line: 104, baseType: !8278, size: 32, offset: 128)
!8278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8279)
!8279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8280, size: 32)
!8280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !8281)
!8281 = !{!8282, !8283, !8284, !8285, !8286}
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8280, file: !114, line: 125, baseType: !152, size: 32)
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8280, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8280, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !8280, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !8280, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!8287 = !{!8288, !8289, !8290}
!8288 = !DILocalVariable(name: "suite", arg: 1, scope: !8267, file: !533, line: 617, type: !118)
!8289 = !DILocalVariable(name: "prev", arg: 2, scope: !8267, file: !533, line: 617, type: !8270)
!8290 = !DILocalVariable(name: "test", scope: !8267, file: !533, line: 619, type: !8270)
!8291 = !DILocation(line: 0, scope: !8267)
!8292 = !DILocation(line: 619, column: 39, scope: !8267)
!8293 = !DILocation(line: 619, column: 33, scope: !8267)
!8294 = !DILocation(line: 621, column: 14, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8296, file: !533, line: 621, column: 2)
!8296 = distinct !DILexicalBlock(scope: !8267, file: !533, line: 621, column: 2)
!8297 = !DILocation(line: 621, column: 2, scope: !8296)
!8298 = !DILocation(line: 622, column: 27, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8300, file: !533, line: 622, column: 7)
!8300 = distinct !DILexicalBlock(scope: !8295, file: !533, line: 621, column: 51)
!8301 = !DILocation(line: 622, column: 7, scope: !8299)
!8302 = !DILocation(line: 622, column: 44, scope: !8299)
!8303 = !DILocation(line: 622, column: 7, scope: !8300)
!8304 = !DILocation(line: 621, column: 43, scope: !8295)
!8305 = distinct !{!8305, !8297, !8306}
!8306 = !DILocation(line: 625, column: 2, scope: !8296)
!8307 = !DILocation(line: 627, column: 1, scope: !8267)
!8308 = distinct !DISubprogram(name: "z_ztest_run_test_suite", scope: !533, file: !533, line: 764, type: !8132, scopeLine: 765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8309)
!8309 = !{!8310}
!8310 = !DILocalVariable(name: "name", arg: 1, scope: !8308, file: !533, line: 764, type: !118)
!8311 = !DILocation(line: 0, scope: !8308)
!8312 = !DILocation(line: 766, column: 36, scope: !8308)
!8313 = !DILocation(line: 766, column: 9, scope: !8308)
!8314 = !DILocation(line: 766, column: 2, scope: !8308)
!8315 = distinct !DISubprogram(name: "ztest_find_test_suite", scope: !533, file: !533, line: 604, type: !8316, scopeLine: 605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8335)
!8316 = !DISubroutineType(types: !8317)
!8317 = !{!8318, !118}
!8318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8319, size: 32)
!8319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !8320)
!8320 = !{!8321, !8322, !8323, !8324, !8325, !8326, !8327}
!8321 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8319, file: !114, line: 179, baseType: !117, size: 32)
!8322 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !8319, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!8323 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !8319, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!8324 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !8319, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !8319, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !8319, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!8327 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8319, file: !114, line: 197, baseType: !8328, size: 32, offset: 192)
!8328 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8329)
!8329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8330, size: 32)
!8330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !8331)
!8331 = !{!8332, !8333, !8334}
!8332 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8330, file: !114, line: 116, baseType: !152, size: 32)
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8330, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!8334 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8330, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!8335 = !{!8336, !8337}
!8336 = !DILocalVariable(name: "name", arg: 1, scope: !8315, file: !533, line: 604, type: !118)
!8337 = !DILocalVariable(name: "node", scope: !8315, file: !533, line: 606, type: !8318)
!8338 = !DILocation(line: 0, scope: !8315)
!8339 = !DILocation(line: 608, column: 2, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8315, file: !533, line: 608, column: 2)
!8341 = !DILocation(line: 609, column: 26, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !533, line: 609, column: 7)
!8343 = distinct !DILexicalBlock(scope: !8344, file: !533, line: 608, column: 87)
!8344 = distinct !DILexicalBlock(scope: !8340, file: !533, line: 608, column: 2)
!8345 = !DILocation(line: 609, column: 7, scope: !8342)
!8346 = !DILocation(line: 609, column: 32, scope: !8342)
!8347 = !DILocation(line: 609, column: 7, scope: !8343)
!8348 = !DILocation(line: 608, column: 79, scope: !8344)
!8349 = !DILocation(line: 608, column: 49, scope: !8344)
!8350 = distinct !{!8350, !8339, !8351}
!8351 = !DILocation(line: 612, column: 2, scope: !8340)
!8352 = !DILocation(line: 615, column: 1, scope: !8315)
!8353 = distinct !DISubprogram(name: "z_ztest_run_test_suite_ptr", scope: !533, file: !533, line: 652, type: !8354, scopeLine: 653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8356)
!8354 = !DISubroutineType(types: !8355)
!8355 = !{!107, !8318}
!8356 = !{!8357, !8358, !8359, !8360, !8361, !8362}
!8357 = !DILocalVariable(name: "suite", arg: 1, scope: !8353, file: !533, line: 652, type: !8318)
!8358 = !DILocalVariable(name: "test", scope: !8353, file: !533, line: 654, type: !8270)
!8359 = !DILocalVariable(name: "data", scope: !8353, file: !533, line: 655, type: !106)
!8360 = !DILocalVariable(name: "fail", scope: !8353, file: !533, line: 656, type: !107)
!8361 = !DILocalVariable(name: "tc_result", scope: !8353, file: !533, line: 657, type: !107)
!8362 = !DILocalVariable(name: "i", scope: !8363, file: !533, line: 692, type: !107)
!8363 = distinct !DILexicalBlock(scope: !8353, file: !533, line: 692, column: 2)
!8364 = !DILocation(line: 0, scope: !8353)
!8365 = !DILocation(line: 663, column: 12, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8353, file: !533, line: 663, column: 6)
!8367 = !DILocation(line: 663, column: 6, scope: !8353)
!8368 = !DILocation(line: 664, column: 15, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8366, file: !533, line: 663, column: 21)
!8370 = !DILocation(line: 665, column: 3, scope: !8369)
!8371 = !DILocation(line: 679, column: 2, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8353, file: !533, line: 679, column: 2)
!8373 = !DILocation(line: 680, column: 33, scope: !8353)
!8374 = !DILocation(line: 681, column: 14, scope: !8353)
!8375 = !DILocation(line: 682, column: 8, scope: !8353)
!8376 = !DILocation(line: 688, column: 55, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8353, file: !533, line: 688, column: 6)
!8378 = !DILocation(line: 688, column: 61, scope: !8377)
!8379 = !DILocation(line: 688, column: 6, scope: !8353)
!8380 = !DILocation(line: 689, column: 10, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8377, file: !533, line: 688, column: 70)
!8382 = !DILocation(line: 690, column: 2, scope: !8381)
!8383 = !DILocation(line: 0, scope: !8363)
!8384 = !DILocation(line: 727, column: 3, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8386, file: !533, line: 692, column: 46)
!8386 = distinct !DILexicalBlock(scope: !8363, file: !533, line: 692, column: 2)
!8387 = !DILocation(line: 0, scope: !8385)
!8388 = !DILocation(line: 727, column: 48, scope: !8385)
!8389 = !DILocation(line: 727, column: 19, scope: !8385)
!8390 = !DILocation(line: 727, column: 61, scope: !8385)
!8391 = !DILocation(line: 728, column: 41, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8393, file: !533, line: 728, column: 8)
!8393 = distinct !DILexicalBlock(scope: !8385, file: !533, line: 727, column: 71)
!8394 = !DILocation(line: 728, column: 53, scope: !8392)
!8395 = !DILocation(line: 728, column: 8, scope: !8392)
!8396 = !DILocation(line: 728, column: 8, scope: !8393)
!8397 = !DILocation(line: 729, column: 11, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8392, file: !533, line: 728, column: 60)
!8399 = !DILocation(line: 729, column: 18, scope: !8398)
!8400 = !DILocation(line: 729, column: 27, scope: !8398)
!8401 = !DILocation(line: 730, column: 17, scope: !8398)
!8402 = !DILocation(line: 731, column: 9, scope: !8398)
!8403 = !DILocation(line: 732, column: 12, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8405, file: !533, line: 731, column: 31)
!8405 = distinct !DILexicalBlock(scope: !8398, file: !533, line: 731, column: 9)
!8406 = !DILocation(line: 732, column: 19, scope: !8404)
!8407 = !DILocation(line: 733, column: 5, scope: !8404)
!8408 = !DILocation(line: 734, column: 12, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8410, file: !533, line: 733, column: 38)
!8410 = distinct !DILexicalBlock(scope: !8405, file: !533, line: 733, column: 16)
!8411 = !DILocation(line: 734, column: 19, scope: !8409)
!8412 = !DILocation(line: 735, column: 5, scope: !8409)
!8413 = !DILocation(line: 736, column: 12, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8415, file: !533, line: 735, column: 38)
!8415 = distinct !DILexicalBlock(scope: !8410, file: !533, line: 735, column: 16)
!8416 = !DILocation(line: 736, column: 19, scope: !8414)
!8417 = !DILocation(line: 737, column: 5, scope: !8414)
!8418 = !DILocation(line: 0, scope: !8405)
!8419 = !DILocation(line: 739, column: 19, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8398, file: !533, line: 739, column: 9)
!8421 = !DILocation(line: 739, column: 9, scope: !8398)
!8422 = !DILocation(line: 744, column: 31, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8393, file: !533, line: 744, column: 8)
!8424 = !DILocation(line: 744, column: 43, scope: !8423)
!8425 = !DILocation(line: 744, column: 8, scope: !8393)
!8426 = distinct !{!8426, !8384, !8427}
!8427 = !DILocation(line: 747, column: 3, scope: !8385)
!8428 = !DILocation(line: 750, column: 7, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8385, file: !533, line: 750, column: 7)
!8430 = !DILocation(line: 750, column: 38, scope: !8429)
!8431 = !DILocation(line: 751, column: 16, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8429, file: !533, line: 750, column: 52)
!8433 = !DILocation(line: 752, column: 3, scope: !8432)
!8434 = !DILocation(line: 755, column: 2, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8436, file: !533, line: 755, column: 2)
!8436 = distinct !DILexicalBlock(scope: !8353, file: !533, line: 755, column: 2)
!8437 = !DILocation(line: 0, scope: !8435)
!8438 = !DILocation(line: 756, column: 8, scope: !8353)
!8439 = !DILocation(line: 757, column: 13, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8353, file: !533, line: 757, column: 6)
!8441 = !DILocation(line: 757, column: 22, scope: !8440)
!8442 = !DILocation(line: 757, column: 6, scope: !8353)
!8443 = !DILocation(line: 758, column: 3, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8440, file: !533, line: 757, column: 31)
!8445 = !DILocation(line: 759, column: 2, scope: !8444)
!8446 = !DILocation(line: 762, column: 1, scope: !8353)
!8447 = distinct !DISubprogram(name: "run_test", scope: !533, file: !533, line: 521, type: !8448, scopeLine: 522, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8450)
!8448 = !DISubroutineType(types: !8449)
!8449 = !{!107, !8318, !8270, !106}
!8450 = !{!8451, !8452, !8453, !8454}
!8451 = !DILocalVariable(name: "suite", arg: 1, scope: !8447, file: !533, line: 521, type: !8318)
!8452 = !DILocalVariable(name: "test", arg: 2, scope: !8447, file: !533, line: 521, type: !8270)
!8453 = !DILocalVariable(name: "data", arg: 3, scope: !8447, file: !533, line: 521, type: !106)
!8454 = !DILocalVariable(name: "ret", scope: !8447, file: !533, line: 523, type: !107)
!8455 = !DILocation(line: 0, scope: !8447)
!8456 = !DILocation(line: 528, column: 2, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8447, file: !533, line: 528, column: 2)
!8458 = !DILocation(line: 530, column: 8, scope: !8447)
!8459 = !DILocation(line: 536, column: 3, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8461, file: !533, line: 535, column: 41)
!8461 = distinct !DILexicalBlock(scope: !8447, file: !533, line: 535, column: 6)
!8462 = !DILocation(line: 539, column: 32, scope: !8460)
!8463 = !DILocation(line: 539, column: 39, scope: !8460)
!8464 = !DILocation(line: 541, column: 11, scope: !8460)
!8465 = !DILocation(line: 541, column: 26, scope: !8460)
!8466 = !DILocation(line: 537, column: 3, scope: !8460)
!8467 = !DILocation(line: 543, column: 3, scope: !8460)
!8468 = !DILocation(line: 544, column: 13, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8460, file: !533, line: 544, column: 7)
!8470 = !DILocation(line: 544, column: 18, scope: !8469)
!8471 = !DILocation(line: 544, column: 7, scope: !8460)
!8472 = !DILocation(line: 545, column: 4, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8469, file: !533, line: 544, column: 27)
!8474 = !DILocation(line: 546, column: 3, scope: !8473)
!8475 = !DILocation(line: 548, column: 7, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8460, file: !533, line: 548, column: 7)
!8477 = !DILocation(line: 548, column: 46, scope: !8476)
!8478 = !DILocation(line: 550, column: 4, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8476, file: !533, line: 549, column: 47)
!8480 = !DILocation(line: 551, column: 4, scope: !8479)
!8481 = !DILocation(line: 552, column: 3, scope: !8479)
!8482 = !DILocation(line: 564, column: 8, scope: !8447)
!8483 = !DILocation(line: 565, column: 13, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8447, file: !533, line: 565, column: 6)
!8485 = !DILocation(line: 565, column: 19, scope: !8484)
!8486 = !DILocation(line: 565, column: 6, scope: !8447)
!8487 = !DILocation(line: 566, column: 3, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8484, file: !533, line: 565, column: 28)
!8489 = !DILocation(line: 567, column: 2, scope: !8488)
!8490 = !DILocation(line: 568, column: 2, scope: !8447)
!8491 = !DILocation(line: 570, column: 2, scope: !8447)
!8492 = !DILocation(line: 571, column: 6, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8447, file: !533, line: 571, column: 6)
!8494 = !DILocation(line: 571, column: 28, scope: !8493)
!8495 = !DILocation(line: 571, column: 35, scope: !8493)
!8496 = !DILocation(line: 571, column: 20, scope: !8493)
!8497 = !DILocation(line: 571, column: 6, scope: !8447)
!8498 = !DILocation(line: 572, column: 34, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8493, file: !533, line: 571, column: 54)
!8500 = !DILocation(line: 573, column: 2, scope: !8499)
!8501 = !DILocation(line: 575, column: 8, scope: !8447)
!8502 = !DILocation(line: 583, column: 6, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8447, file: !533, line: 583, column: 6)
!8504 = !DILocation(line: 583, column: 39, scope: !8503)
!8505 = !DILocation(line: 585, column: 46, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8503, file: !533, line: 585, column: 13)
!8507 = !DILocation(line: 590, column: 10, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8509, file: !533, line: 589, column: 54)
!8509 = distinct !DILexicalBlock(scope: !8447, file: !533, line: 589, column: 6)
!8510 = !DILocation(line: 593, column: 8, scope: !8447)
!8511 = !DILocation(line: 594, column: 2, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8447, file: !533, line: 594, column: 2)
!8513 = !DILocation(line: 595, column: 10, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8447, file: !533, line: 595, column: 6)
!8515 = !DILocation(line: 595, column: 21, scope: !8514)
!8516 = !DILocation(line: 595, column: 24, scope: !8514)
!8517 = !DILocation(line: 595, column: 6, scope: !8447)
!8518 = !DILocation(line: 596, column: 15, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8514, file: !533, line: 595, column: 56)
!8520 = !DILocation(line: 597, column: 2, scope: !8519)
!8521 = !DILocation(line: 599, column: 2, scope: !8447)
!8522 = distinct !DISubprogram(name: "get_start_time_cyc", scope: !690, file: !690, line: 98, type: !3082, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8523 = !DILocation(line: 100, column: 18, scope: !8522)
!8524 = !DILocation(line: 100, column: 16, scope: !8522)
!8525 = !DILocation(line: 101, column: 1, scope: !8522)
!8526 = distinct !DISubprogram(name: "k_thread_create", scope: !4410, file: !4410, line: 24, type: !8527, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8535)
!8527 = !DISubroutineType(types: !8528)
!8528 = !{!8194, !8195, !8529, !185, !559, !106, !106, !106, !107, !152, !8531}
!8529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8530, size: 32)
!8530 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !576)
!8531 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !8532)
!8532 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !8533)
!8533 = !{!8534}
!8534 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8532, file: !565, line: 66, baseType: !564, size: 64)
!8535 = !{!8536, !8537, !8538, !8539, !8540, !8541, !8542, !8543, !8544, !8545}
!8536 = !DILocalVariable(name: "new_thread", arg: 1, scope: !8526, file: !4410, line: 24, type: !8195)
!8537 = !DILocalVariable(name: "stack", arg: 2, scope: !8526, file: !4410, line: 24, type: !8529)
!8538 = !DILocalVariable(name: "stack_size", arg: 3, scope: !8526, file: !4410, line: 24, type: !185)
!8539 = !DILocalVariable(name: "entry", arg: 4, scope: !8526, file: !4410, line: 24, type: !559)
!8540 = !DILocalVariable(name: "p1", arg: 5, scope: !8526, file: !4410, line: 24, type: !106)
!8541 = !DILocalVariable(name: "p2", arg: 6, scope: !8526, file: !4410, line: 24, type: !106)
!8542 = !DILocalVariable(name: "p3", arg: 7, scope: !8526, file: !4410, line: 24, type: !106)
!8543 = !DILocalVariable(name: "prio", arg: 8, scope: !8526, file: !4410, line: 24, type: !107)
!8544 = !DILocalVariable(name: "options", arg: 9, scope: !8526, file: !4410, line: 24, type: !152)
!8545 = !DILocalVariable(name: "delay", arg: 10, scope: !8526, file: !4410, line: 24, type: !8531)
!8546 = !DILocation(line: 0, scope: !8526)
!8547 = !DILocation(line: 49, column: 2, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8526, file: !4410, line: 49, column: 2)
!8549 = !{i64 2154773875}
!8550 = !DILocation(line: 50, column: 9, scope: !8526)
!8551 = !DILocation(line: 50, column: 2, scope: !8526)
!8552 = distinct !DISubprogram(name: "k_object_access_grant", scope: !8553, file: !8553, line: 24, type: !8554, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8556)
!8553 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!8554 = !DISubroutineType(types: !8555)
!8555 = !{null, !13, !8195}
!8556 = !{!8557, !8558}
!8557 = !DILocalVariable(name: "object", arg: 1, scope: !8552, file: !8553, line: 24, type: !13)
!8558 = !DILocalVariable(name: "thread", arg: 2, scope: !8552, file: !8553, line: 24, type: !8195)
!8559 = !DILocation(line: 0, scope: !8552)
!8560 = !DILocation(line: 34, column: 2, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8552, file: !8553, line: 34, column: 2)
!8562 = !{i64 2154290295}
!8563 = !DILocation(line: 36, column: 1, scope: !8552)
!8564 = distinct !DISubprogram(name: "k_thread_name_set", scope: !4410, file: !4410, line: 391, type: !8565, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8567)
!8565 = !DISubroutineType(types: !8566)
!8566 = !{!107, !8194, !118}
!8567 = !{!8568, !8569}
!8568 = !DILocalVariable(name: "thread", arg: 1, scope: !8564, file: !4410, line: 391, type: !8194)
!8569 = !DILocalVariable(name: "str", arg: 2, scope: !8564, file: !4410, line: 391, type: !118)
!8570 = !DILocation(line: 0, scope: !8564)
!8571 = !DILocation(line: 400, column: 2, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8564, file: !4410, line: 400, column: 2)
!8573 = !{i64 2154775303}
!8574 = !DILocation(line: 401, column: 9, scope: !8564)
!8575 = !DILocation(line: 401, column: 2, scope: !8564)
!8576 = distinct !DISubprogram(name: "k_thread_start", scope: !4410, file: !4410, line: 205, type: !8192, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8577)
!8577 = !{!8578}
!8578 = !DILocalVariable(name: "thread", arg: 1, scope: !8576, file: !4410, line: 205, type: !8194)
!8579 = !DILocation(line: 0, scope: !8576)
!8580 = !DILocation(line: 214, column: 2, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8576, file: !4410, line: 214, column: 2)
!8582 = !{i64 2154774555}
!8583 = !DILocation(line: 215, column: 2, scope: !8576)
!8584 = !DILocation(line: 216, column: 1, scope: !8576)
!8585 = distinct !DISubprogram(name: "k_thread_join", scope: !4410, file: !4410, line: 74, type: !8586, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8588)
!8586 = !DISubroutineType(types: !8587)
!8587 = !{!107, !8195, !8531}
!8588 = !{!8589, !8590}
!8589 = !DILocalVariable(name: "thread", arg: 1, scope: !8585, file: !4410, line: 74, type: !8195)
!8590 = !DILocalVariable(name: "timeout", arg: 2, scope: !8585, file: !4410, line: 74, type: !8531)
!8591 = !DILocation(line: 0, scope: !8585)
!8592 = !DILocation(line: 83, column: 2, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8585, file: !4410, line: 83, column: 2)
!8594 = !{i64 2154774011}
!8595 = !DILocation(line: 84, column: 9, scope: !8585)
!8596 = !DILocation(line: 84, column: 2, scope: !8585)
!8597 = distinct !DISubprogram(name: "run_test_rules", scope: !533, file: !533, line: 207, type: !8598, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8600)
!8598 = !DISubroutineType(types: !8599)
!8599 = !{null, !145, !8270, !106}
!8600 = !{!8601, !8602, !8603, !8604}
!8601 = !DILocalVariable(name: "is_before", arg: 1, scope: !8597, file: !533, line: 207, type: !145)
!8602 = !DILocalVariable(name: "test", arg: 2, scope: !8597, file: !533, line: 207, type: !8270)
!8603 = !DILocalVariable(name: "data", arg: 3, scope: !8597, file: !533, line: 207, type: !106)
!8604 = !DILocalVariable(name: "rule", scope: !8605, file: !533, line: 209, type: !8606)
!8605 = distinct !DILexicalBlock(scope: !8597, file: !533, line: 209, column: 2)
!8606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8607, size: 32)
!8607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_test_rule", file: !114, line: 437, size: 64, elements: !8608)
!8608 = !{!8609, !8616}
!8609 = !DIDerivedType(tag: DW_TAG_member, name: "before_each", scope: !8607, file: !114, line: 438, baseType: !8610, size: 32)
!8610 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_rule_cb", file: !114, line: 434, baseType: !8611)
!8611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8612, size: 32)
!8612 = !DISubroutineType(types: !8613)
!8613 = !{null, !8614, !106}
!8614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8615, size: 32)
!8615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8271)
!8616 = !DIDerivedType(tag: DW_TAG_member, name: "after_each", scope: !8607, file: !114, line: 439, baseType: !8610, size: 32, offset: 32)
!8617 = !DILocation(line: 0, scope: !8597)
!8618 = !DILocation(line: 0, scope: !8605)
!8619 = !DILocation(line: 209, column: 2, scope: !8605)
!8620 = !DILocation(line: 217, column: 1, scope: !8597)
!8621 = !DILocation(line: 211, column: 17, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8623, file: !533, line: 211, column: 7)
!8623 = distinct !DILexicalBlock(scope: !8624, file: !533, line: 210, column: 49)
!8624 = distinct !DILexicalBlock(scope: !8605, file: !533, line: 209, column: 2)
!8625 = !DILocation(line: 211, column: 26, scope: !8622)
!8626 = !DILocation(line: 211, column: 20, scope: !8622)
!8627 = !DILocation(line: 211, column: 7, scope: !8623)
!8628 = !DILocation(line: 213, column: 34, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8622, file: !533, line: 213, column: 14)
!8630 = !DILocation(line: 213, column: 28, scope: !8629)
!8631 = !DILocation(line: 213, column: 14, scope: !8622)
!8632 = !DILocation(line: 0, scope: !8622)
!8633 = !DILocation(line: 210, column: 41, scope: !8624)
!8634 = !DILocation(line: 210, column: 12, scope: !8624)
!8635 = distinct !{!8635, !8619, !8636}
!8636 = !DILocation(line: 216, column: 2, scope: !8605)
!8637 = distinct !DISubprogram(name: "get_test_duration_ms", scope: !690, file: !690, line: 103, type: !3082, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8638)
!8638 = !{!8639}
!8639 = !DILocalVariable(name: "spend_cycle", scope: !8637, file: !690, line: 105, type: !152)
!8640 = !DILocation(line: 105, column: 25, scope: !8637)
!8641 = !DILocation(line: 105, column: 44, scope: !8637)
!8642 = !DILocation(line: 105, column: 42, scope: !8637)
!8643 = !DILocation(line: 0, scope: !8637)
!8644 = !DILocation(line: 107, column: 18, scope: !8637)
!8645 = !DILocation(line: 107, column: 16, scope: !8637)
!8646 = !DILocation(line: 108, column: 1, scope: !8637)
!8647 = distinct !DISubprogram(name: "cleanup_test", scope: !533, file: !533, line: 76, type: !8648, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8650)
!8648 = !DISubroutineType(types: !8649)
!8649 = !{!107, !8270}
!8650 = !{!8651, !8652, !8653}
!8651 = !DILocalVariable(name: "test", arg: 1, scope: !8647, file: !533, line: 76, type: !8270)
!8652 = !DILocalVariable(name: "ret", scope: !8647, file: !533, line: 78, type: !107)
!8653 = !DILocalVariable(name: "mock_status", scope: !8647, file: !533, line: 79, type: !107)
!8654 = !DILocation(line: 0, scope: !8647)
!8655 = !DILocation(line: 89, column: 3, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8657, file: !533, line: 88, column: 41)
!8657 = distinct !DILexicalBlock(scope: !8647, file: !533, line: 88, column: 6)
!8658 = !DILocation(line: 103, column: 2, scope: !8647)
!8659 = distinct !DISubprogram(name: "get_final_test_result", scope: !533, file: !533, line: 236, type: !8660, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8662)
!8660 = !DISubroutineType(types: !8661)
!8661 = !{!107, !8614, !107}
!8662 = !{!8663, !8664, !8665, !8666}
!8663 = !DILocalVariable(name: "test", arg: 1, scope: !8659, file: !533, line: 236, type: !8614)
!8664 = !DILocalVariable(name: "ret", arg: 2, scope: !8659, file: !533, line: 236, type: !107)
!8665 = !DILocalVariable(name: "expected_result", scope: !8659, file: !533, line: 238, type: !554)
!8666 = !DILocalVariable(name: "expectation", scope: !8667, file: !533, line: 240, type: !8668)
!8667 = distinct !DILexicalBlock(scope: !8659, file: !533, line: 240, column: 2)
!8668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8669, size: 32)
!8669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_expected_result_entry", file: !114, line: 47, size: 96, elements: !8670)
!8670 = !{!8671, !8672, !8673}
!8671 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8669, file: !114, line: 48, baseType: !118, size: 32)
!8672 = !DIDerivedType(tag: DW_TAG_member, name: "test_name", scope: !8669, file: !114, line: 49, baseType: !118, size: 32, offset: 32)
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "expected_result", scope: !8669, file: !114, line: 50, baseType: !554, size: 32, offset: 64)
!8674 = !DILocation(line: 0, scope: !8659)
!8675 = !DILocation(line: 0, scope: !8667)
!8676 = !DILocation(line: 240, column: 2, scope: !8667)
!8677 = !DILocation(line: 243, column: 27, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8679, file: !533, line: 243, column: 7)
!8679 = distinct !DILexicalBlock(scope: !8680, file: !533, line: 242, column: 75)
!8680 = distinct !DILexicalBlock(scope: !8667, file: !533, line: 240, column: 2)
!8681 = !DILocation(line: 243, column: 44, scope: !8678)
!8682 = !DILocation(line: 243, column: 7, scope: !8678)
!8683 = !DILocation(line: 243, column: 50, scope: !8678)
!8684 = !DILocation(line: 243, column: 55, scope: !8678)
!8685 = !DILocation(line: 244, column: 27, scope: !8678)
!8686 = !DILocation(line: 244, column: 50, scope: !8678)
!8687 = !DILocation(line: 244, column: 7, scope: !8678)
!8688 = !DILocation(line: 244, column: 67, scope: !8678)
!8689 = !DILocation(line: 243, column: 7, scope: !8679)
!8690 = !DILocation(line: 242, column: 60, scope: !8680)
!8691 = !DILocation(line: 242, column: 19, scope: !8680)
!8692 = distinct !{!8692, !8676, !8693}
!8693 = !DILocation(line: 248, column: 2, scope: !8667)
!8694 = !DILocation(line: 245, column: 35, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8678, file: !533, line: 244, column: 73)
!8696 = !DILocation(line: 250, column: 6, scope: !8659)
!8697 = !DILocation(line: 255, column: 15, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8699, file: !533, line: 250, column: 53)
!8699 = distinct !DILexicalBlock(scope: !8659, file: !533, line: 250, column: 6)
!8700 = !DILocation(line: 255, column: 10, scope: !8698)
!8701 = !DILocation(line: 255, column: 3, scope: !8698)
!8702 = !DILocation(line: 262, column: 15, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8704, file: !533, line: 257, column: 53)
!8704 = distinct !DILexicalBlock(scope: !8659, file: !533, line: 257, column: 6)
!8705 = !DILocation(line: 262, column: 10, scope: !8703)
!8706 = !DILocation(line: 262, column: 3, scope: !8703)
!8707 = !DILocation(line: 266, column: 1, scope: !8659)
!8708 = distinct !DISubprogram(name: "TC_RESULT_TO_STR", scope: !690, file: !690, line: 81, type: !8709, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8711)
!8709 = !DISubroutineType(types: !8710)
!8710 = !{!118, !107}
!8711 = !{!8712}
!8712 = !DILocalVariable(name: "result", arg: 1, scope: !8708, file: !690, line: 81, type: !107)
!8713 = !DILocation(line: 0, scope: !8708)
!8714 = !DILocation(line: 83, column: 2, scope: !8708)
!8715 = !DILocation(line: 0, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8708, file: !690, line: 83, column: 18)
!8717 = !DILocation(line: 93, column: 1, scope: !8708)
!8718 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6341, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8719 = !DILocation(line: 1677, column: 9, scope: !8718)
!8720 = !DILocation(line: 1677, column: 2, scope: !8718)
!8721 = distinct !DISubprogram(name: "k_cyc_to_ms_ceil32", scope: !8722, file: !8722, line: 809, type: !7541, scopeLine: 810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8723)
!8722 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8723 = !{!8724}
!8724 = !DILocalVariable(name: "t", arg: 1, scope: !8721, file: !8722, line: 809, type: !152)
!8725 = !DILocation(line: 0, scope: !8721)
!8726 = !DILocation(line: 812, column: 17, scope: !8721)
!8727 = !DILocalVariable(name: "t", arg: 1, scope: !8728, file: !8722, line: 102, type: !566)
!8728 = distinct !DISubprogram(name: "z_tmcvt", scope: !8722, file: !8722, line: 102, type: !8729, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8731)
!8729 = !DISubroutineType(types: !8730)
!8730 = !{!566, !566, !152, !152, !145, !145, !145, !145}
!8731 = !{!8727, !8732, !8733, !8734, !8735, !8736, !8737, !8738, !8739, !8740, !8741}
!8732 = !DILocalVariable(name: "from_hz", arg: 2, scope: !8728, file: !8722, line: 102, type: !152)
!8733 = !DILocalVariable(name: "to_hz", arg: 3, scope: !8728, file: !8722, line: 103, type: !152)
!8734 = !DILocalVariable(name: "const_hz", arg: 4, scope: !8728, file: !8722, line: 103, type: !145)
!8735 = !DILocalVariable(name: "result32", arg: 5, scope: !8728, file: !8722, line: 104, type: !145)
!8736 = !DILocalVariable(name: "round_up", arg: 6, scope: !8728, file: !8722, line: 104, type: !145)
!8737 = !DILocalVariable(name: "round_off", arg: 7, scope: !8728, file: !8722, line: 105, type: !145)
!8738 = !DILocalVariable(name: "mul_ratio", scope: !8728, file: !8722, line: 107, type: !145)
!8739 = !DILocalVariable(name: "div_ratio", scope: !8728, file: !8722, line: 109, type: !145)
!8740 = !DILocalVariable(name: "off", scope: !8728, file: !8722, line: 116, type: !566)
!8741 = !DILocalVariable(name: "rdivisor", scope: !8742, file: !8722, line: 119, type: !152)
!8742 = distinct !DILexicalBlock(scope: !8743, file: !8722, line: 118, column: 18)
!8743 = distinct !DILexicalBlock(scope: !8728, file: !8722, line: 118, column: 6)
!8744 = !DILocation(line: 0, scope: !8728, inlinedAt: !8745)
!8745 = distinct !DILocation(line: 812, column: 9, scope: !8721)
!8746 = !DILocation(line: 135, column: 5, scope: !8747, inlinedAt: !8745)
!8747 = distinct !DILexicalBlock(scope: !8748, file: !8722, line: 134, column: 17)
!8748 = distinct !DILexicalBlock(scope: !8728, file: !8722, line: 134, column: 6)
!8749 = !DILocation(line: 136, column: 16, scope: !8750, inlinedAt: !8745)
!8750 = distinct !DILexicalBlock(scope: !8747, file: !8722, line: 136, column: 7)
!8751 = !DILocation(line: 812, column: 9, scope: !8721)
!8752 = !DILocation(line: 812, column: 2, scope: !8721)
!8753 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8754, file: !8754, line: 24, type: !6341, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8754 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8755 = !DILocation(line: 26, column: 9, scope: !8753)
!8756 = !DILocation(line: 26, column: 2, scope: !8753)
!8757 = distinct !DISubprogram(name: "test_cb", scope: !533, file: !533, line: 507, type: !562, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8758)
!8758 = !{!8759, !8760, !8761, !8762, !8763}
!8759 = !DILocalVariable(name: "a", arg: 1, scope: !8757, file: !533, line: 507, type: !106)
!8760 = !DILocalVariable(name: "b", arg: 2, scope: !8757, file: !533, line: 507, type: !106)
!8761 = !DILocalVariable(name: "c", arg: 3, scope: !8757, file: !533, line: 507, type: !106)
!8762 = !DILocalVariable(name: "suite", scope: !8757, file: !533, line: 509, type: !8318)
!8763 = !DILocalVariable(name: "test", scope: !8757, file: !533, line: 510, type: !8270)
!8764 = !DILocation(line: 0, scope: !8757)
!8765 = !DILocation(line: 510, column: 33, scope: !8757)
!8766 = !DILocation(line: 512, column: 14, scope: !8757)
!8767 = !DILocation(line: 513, column: 2, scope: !8757)
!8768 = !DILocation(line: 514, column: 13, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8757, file: !533, line: 514, column: 6)
!8770 = !DILocation(line: 514, column: 6, scope: !8769)
!8771 = !DILocation(line: 514, column: 6, scope: !8757)
!8772 = !DILocation(line: 515, column: 3, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8769, file: !533, line: 514, column: 21)
!8774 = !DILocation(line: 516, column: 2, scope: !8773)
!8775 = !DILocation(line: 517, column: 2, scope: !8757)
!8776 = !DILocation(line: 518, column: 14, scope: !8757)
!8777 = !DILocation(line: 519, column: 1, scope: !8757)
!8778 = distinct !DISubprogram(name: "run_test_functions", scope: !533, file: !533, line: 219, type: !8779, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8781)
!8779 = !DISubroutineType(types: !8780)
!8780 = !{null, !8318, !8270, !106}
!8781 = !{!8782, !8783, !8784}
!8782 = !DILocalVariable(name: "suite", arg: 1, scope: !8778, file: !533, line: 219, type: !8318)
!8783 = !DILocalVariable(name: "test", arg: 2, scope: !8778, file: !533, line: 219, type: !8270)
!8784 = !DILocalVariable(name: "data", arg: 3, scope: !8778, file: !533, line: 220, type: !106)
!8785 = !DILocation(line: 0, scope: !8778)
!8786 = !DILocation(line: 222, column: 8, scope: !8778)
!8787 = !DILocation(line: 223, column: 8, scope: !8778)
!8788 = !DILocation(line: 223, column: 2, scope: !8778)
!8789 = !DILocation(line: 224, column: 1, scope: !8778)
!8790 = distinct !DISubprogram(name: "z_impl_ztest_run_test_suites", scope: !533, file: !533, line: 929, type: !8791, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8793)
!8791 = !DISubroutineType(types: !8792)
!8792 = !{!107, !13}
!8793 = !{!8794, !8795, !8796}
!8794 = !DILocalVariable(name: "state", arg: 1, scope: !8790, file: !533, line: 929, type: !13)
!8795 = !DILocalVariable(name: "count", scope: !8790, file: !533, line: 931, type: !107)
!8796 = !DILocalVariable(name: "ptr", scope: !8797, file: !533, line: 954, type: !8318)
!8797 = distinct !DILexicalBlock(scope: !8790, file: !533, line: 954, column: 2)
!8798 = !DILocation(line: 0, scope: !8790)
!8799 = !DILocation(line: 933, column: 6, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8790, file: !533, line: 933, column: 6)
!8801 = !DILocation(line: 933, column: 18, scope: !8800)
!8802 = !DILocation(line: 933, column: 6, scope: !8790)
!8803 = !DILocation(line: 0, scope: !8797)
!8804 = !DILocation(line: 954, column: 2, scope: !8797)
!8805 = !DILocation(line: 956, column: 12, scope: !8806)
!8806 = distinct !DILexicalBlock(scope: !8807, file: !533, line: 955, column: 48)
!8807 = distinct !DILexicalBlock(scope: !8797, file: !533, line: 954, column: 2)
!8808 = !DILocation(line: 956, column: 9, scope: !8806)
!8809 = !DILocation(line: 960, column: 7, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8806, file: !533, line: 960, column: 7)
!8811 = !DILocation(line: 960, column: 19, scope: !8810)
!8812 = !DILocation(line: 955, column: 41, scope: !8807)
!8813 = !DILocation(line: 960, column: 50, scope: !8810)
!8814 = distinct !{!8814, !8804, !8815}
!8815 = !DILocation(line: 964, column: 2, scope: !8797)
!8816 = !DILocation(line: 967, column: 2, scope: !8790)
!8817 = !DILocation(line: 969, column: 2, scope: !8790)
!8818 = !DILocation(line: 970, column: 1, scope: !8790)
!8819 = distinct !DISubprogram(name: "__ztest_run_test_suite", scope: !533, file: !533, line: 907, type: !8820, scopeLine: 908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8822)
!8820 = !DISubroutineType(types: !8821)
!8821 = !{!107, !8318, !13}
!8822 = !{!8823, !8824, !8825, !8826, !8827, !8829}
!8823 = !DILocalVariable(name: "ptr", arg: 1, scope: !8819, file: !533, line: 907, type: !8318)
!8824 = !DILocalVariable(name: "state", arg: 2, scope: !8819, file: !533, line: 907, type: !13)
!8825 = !DILocalVariable(name: "stats", scope: !8819, file: !533, line: 909, type: !8329)
!8826 = !DILocalVariable(name: "count", scope: !8819, file: !533, line: 910, type: !107)
!8827 = !DILocalVariable(name: "i", scope: !8828, file: !533, line: 914, type: !107)
!8828 = distinct !DILexicalBlock(scope: !8819, file: !533, line: 914, column: 2)
!8829 = !DILocalVariable(name: "fail", scope: !8830, file: !533, line: 916, type: !107)
!8830 = distinct !DILexicalBlock(scope: !8831, file: !533, line: 915, column: 47)
!8831 = distinct !DILexicalBlock(scope: !8832, file: !533, line: 915, column: 7)
!8832 = distinct !DILexicalBlock(scope: !8833, file: !533, line: 914, column: 47)
!8833 = distinct !DILexicalBlock(scope: !8828, file: !533, line: 914, column: 2)
!8834 = !DILocation(line: 0, scope: !8819)
!8835 = !DILocation(line: 909, column: 41, scope: !8819)
!8836 = !DILocation(line: 912, column: 2, scope: !8819)
!8837 = !DILocation(line: 0, scope: !8828)
!8838 = !DILocation(line: 915, column: 7, scope: !8831)
!8839 = !DILocation(line: 915, column: 7, scope: !8832)
!8840 = !DILocation(line: 916, column: 15, scope: !8830)
!8841 = !DILocation(line: 0, scope: !8830)
!8842 = !DILocation(line: 919, column: 20, scope: !8830)
!8843 = !DILocation(line: 920, column: 31, scope: !8830)
!8844 = !DILocation(line: 920, column: 25, scope: !8830)
!8845 = !DILocation(line: 921, column: 3, scope: !8830)
!8846 = !DILocation(line: 0, scope: !8831)
!8847 = !DILocation(line: 926, column: 2, scope: !8819)
!8848 = distinct !DISubprogram(name: "__ztest_show_suite_summary", scope: !533, file: !533, line: 886, type: !3082, scopeLine: 887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8849)
!8849 = !{!8850}
!8850 = !DILocalVariable(name: "ptr", scope: !8851, file: !533, line: 894, type: !8318)
!8851 = distinct !DILexicalBlock(scope: !8848, file: !533, line: 894, column: 2)
!8852 = !DILocation(line: 892, column: 2, scope: !8848)
!8853 = !DILocation(line: 0, scope: !8851)
!8854 = !DILocation(line: 894, column: 2, scope: !8851)
!8855 = !DILocation(line: 903, column: 2, scope: !8848)
!8856 = !DILocation(line: 905, column: 1, scope: !8848)
!8857 = !DILocation(line: 898, column: 3, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8859, file: !533, line: 895, column: 48)
!8859 = distinct !DILexicalBlock(scope: !8851, file: !533, line: 894, column: 2)
!8860 = !DILocation(line: 895, column: 41, scope: !8859)
!8861 = !DILocation(line: 895, column: 11, scope: !8859)
!8862 = distinct !{!8862, !8854, !8863}
!8863 = !DILocation(line: 902, column: 2, scope: !8851)
!8864 = distinct !DISubprogram(name: "__ztest_show_suite_summary_verbose", scope: !533, file: !533, line: 852, type: !8865, scopeLine: 853, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8867)
!8865 = !DISubroutineType(types: !8866)
!8866 = !{null, !8318}
!8867 = !{!8868, !8869, !8870, !8871}
!8868 = !DILocalVariable(name: "suite", arg: 1, scope: !8864, file: !533, line: 852, type: !8318)
!8869 = !DILocalVariable(name: "test", scope: !8864, file: !533, line: 854, type: !8270)
!8870 = !DILocalVariable(name: "tc_result", scope: !8864, file: !533, line: 855, type: !107)
!8871 = !DILocalVariable(name: "flush_frequency", scope: !8864, file: !533, line: 856, type: !107)
!8872 = !DILocation(line: 0, scope: !8864)
!8873 = !DILocation(line: 858, column: 2, scope: !8864)
!8874 = !DILocation(line: 860, column: 47, scope: !8864)
!8875 = !DILocation(line: 860, column: 18, scope: !8864)
!8876 = !DILocation(line: 860, column: 60, scope: !8864)
!8877 = !DILocation(line: 860, column: 2, scope: !8864)
!8878 = !DILocation(line: 861, column: 13, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8880, file: !533, line: 861, column: 7)
!8880 = distinct !DILexicalBlock(scope: !8864, file: !533, line: 860, column: 70)
!8881 = !DILocation(line: 861, column: 20, scope: !8879)
!8882 = !DILocation(line: 861, column: 47, scope: !8879)
!8883 = !DILocation(line: 861, column: 31, scope: !8879)
!8884 = !DILocation(line: 861, column: 7, scope: !8880)
!8885 = !DILocation(line: 863, column: 27, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8879, file: !533, line: 863, column: 14)
!8887 = !DILocation(line: 863, column: 38, scope: !8886)
!8888 = !DILocation(line: 0, scope: !8879)
!8889 = !DILocation(line: 869, column: 3, scope: !8880)
!8890 = distinct !{!8890, !8877, !8891}
!8891 = !DILocation(line: 880, column: 2, scope: !8864)
!8892 = !DILocation(line: 881, column: 2, scope: !8864)
!8893 = !DILocation(line: 883, column: 1, scope: !8864)
!8894 = distinct !DISubprogram(name: "__ztest_show_suite_summary_oneline", scope: !533, file: !533, line: 801, type: !8865, scopeLine: 802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8895)
!8895 = !{!8896, !8897, !8898, !8899, !8900, !8901, !8902, !8903, !8904, !8905, !8906, !8907, !8908, !8909}
!8896 = !DILocalVariable(name: "suite", arg: 1, scope: !8894, file: !533, line: 801, type: !8318)
!8897 = !DILocalVariable(name: "distinct_pass", scope: !8894, file: !533, line: 803, type: !107)
!8898 = !DILocalVariable(name: "distinct_fail", scope: !8894, file: !533, line: 803, type: !107)
!8899 = !DILocalVariable(name: "distinct_skip", scope: !8894, file: !533, line: 803, type: !107)
!8900 = !DILocalVariable(name: "distinct_total", scope: !8894, file: !533, line: 803, type: !107)
!8901 = !DILocalVariable(name: "effective_total", scope: !8894, file: !533, line: 804, type: !107)
!8902 = !DILocalVariable(name: "expanded_pass", scope: !8894, file: !533, line: 805, type: !107)
!8903 = !DILocalVariable(name: "expanded_passrate", scope: !8894, file: !533, line: 805, type: !107)
!8904 = !DILocalVariable(name: "passrate_major", scope: !8894, file: !533, line: 806, type: !107)
!8905 = !DILocalVariable(name: "passrate_minor", scope: !8894, file: !533, line: 806, type: !107)
!8906 = !DILocalVariable(name: "passrate_tail", scope: !8894, file: !533, line: 806, type: !107)
!8907 = !DILocalVariable(name: "suite_result", scope: !8894, file: !533, line: 807, type: !107)
!8908 = !DILocalVariable(name: "test", scope: !8894, file: !533, line: 809, type: !8270)
!8909 = !DILocalVariable(name: "suite_duration_worst_ms", scope: !8894, file: !533, line: 810, type: !32)
!8910 = !DILocation(line: 0, scope: !8894)
!8911 = !DILocation(line: 813, column: 47, scope: !8894)
!8912 = !DILocation(line: 813, column: 18, scope: !8894)
!8913 = !DILocation(line: 813, column: 60, scope: !8894)
!8914 = !DILocation(line: 813, column: 2, scope: !8894)
!8915 = !DILocation(line: 814, column: 17, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8894, file: !533, line: 813, column: 70)
!8917 = !DILocation(line: 815, column: 36, scope: !8916)
!8918 = !DILocation(line: 815, column: 43, scope: !8916)
!8919 = !DILocation(line: 815, column: 27, scope: !8916)
!8920 = !DILocation(line: 816, column: 20, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8916, file: !533, line: 816, column: 7)
!8922 = !DILocation(line: 816, column: 47, scope: !8921)
!8923 = !DILocation(line: 816, column: 31, scope: !8921)
!8924 = !DILocation(line: 816, column: 7, scope: !8916)
!8925 = !DILocation(line: 817, column: 17, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8921, file: !533, line: 816, column: 58)
!8927 = !DILocation(line: 818, column: 3, scope: !8926)
!8928 = !DILocation(line: 818, column: 27, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8921, file: !533, line: 818, column: 14)
!8930 = !DILocation(line: 818, column: 38, scope: !8929)
!8931 = !DILocation(line: 818, column: 14, scope: !8921)
!8932 = !DILocation(line: 819, column: 17, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8929, file: !533, line: 818, column: 65)
!8934 = !DILocation(line: 820, column: 3, scope: !8933)
!8935 = !DILocation(line: 821, column: 17, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8929, file: !533, line: 820, column: 10)
!8937 = distinct !{!8937, !8914, !8938}
!8938 = !DILocation(line: 823, column: 2, scope: !8894)
!8939 = !DILocation(line: 825, column: 20, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8894, file: !533, line: 825, column: 6)
!8941 = !DILocation(line: 825, column: 6, scope: !8894)
!8942 = !DILocation(line: 829, column: 33, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8940, file: !533, line: 828, column: 9)
!8944 = !DILocation(line: 829, column: 18, scope: !8943)
!8945 = !DILocation(line: 830, column: 36, scope: !8943)
!8946 = !DILocation(line: 831, column: 33, scope: !8943)
!8947 = !DILocation(line: 832, column: 37, scope: !8943)
!8948 = !DILocation(line: 833, column: 38, scope: !8943)
!8949 = !DILocation(line: 834, column: 56, scope: !8943)
!8950 = !DILocation(line: 834, column: 39, scope: !8943)
!8951 = !DILocation(line: 834, column: 64, scope: !8943)
!8952 = !DILocation(line: 835, column: 78, scope: !8943)
!8953 = !DILocation(line: 835, column: 61, scope: !8943)
!8954 = !DILocation(line: 836, column: 21, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8943, file: !533, line: 836, column: 7)
!8956 = !DILocation(line: 836, column: 7, scope: !8943)
!8957 = !DILocation(line: 0, scope: !8940)
!8958 = !DILocation(line: 841, column: 2, scope: !8894)
!8959 = !DILocation(line: 849, column: 1, scope: !8894)
!8960 = distinct !DISubprogram(name: "__ztest_init_unit_test_result_for_suite", scope: !533, file: !533, line: 773, type: !8865, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8961)
!8961 = !{!8962, !8963}
!8962 = !DILocalVariable(name: "suite", arg: 1, scope: !8960, file: !533, line: 773, type: !8318)
!8963 = !DILocalVariable(name: "test", scope: !8960, file: !533, line: 775, type: !8270)
!8964 = !DILocation(line: 0, scope: !8960)
!8965 = !DILocation(line: 777, column: 47, scope: !8960)
!8966 = !DILocation(line: 777, column: 18, scope: !8960)
!8967 = !DILocation(line: 777, column: 60, scope: !8960)
!8968 = !DILocation(line: 777, column: 2, scope: !8960)
!8969 = !DILocation(line: 778, column: 9, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8960, file: !533, line: 777, column: 70)
!8971 = !DILocation(line: 778, column: 16, scope: !8970)
!8972 = !DILocation(line: 778, column: 26, scope: !8970)
!8973 = !DILocation(line: 779, column: 9, scope: !8970)
!8974 = !DILocation(line: 779, column: 16, scope: !8970)
!8975 = !DILocation(line: 779, column: 27, scope: !8970)
!8976 = !DILocation(line: 780, column: 9, scope: !8970)
!8977 = !DILocation(line: 780, column: 16, scope: !8970)
!8978 = !DILocation(line: 780, column: 27, scope: !8970)
!8979 = !DILocation(line: 781, column: 9, scope: !8970)
!8980 = !DILocation(line: 781, column: 16, scope: !8970)
!8981 = !DILocation(line: 781, column: 27, scope: !8970)
!8982 = !DILocation(line: 782, column: 9, scope: !8970)
!8983 = !DILocation(line: 782, column: 16, scope: !8970)
!8984 = !DILocation(line: 782, column: 34, scope: !8970)
!8985 = distinct !{!8985, !8968, !8986}
!8986 = !DILocation(line: 783, column: 2, scope: !8960)
!8987 = !DILocation(line: 784, column: 1, scope: !8960)
!8988 = distinct !DISubprogram(name: "ztest_verify_all_test_suites_ran", scope: !533, file: !533, line: 972, type: !3082, scopeLine: 973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8989)
!8989 = !{!8990, !8991, !8992}
!8990 = !DILocalVariable(name: "all_tests_run", scope: !8988, file: !533, line: 974, type: !145)
!8991 = !DILocalVariable(name: "suite", scope: !8988, file: !533, line: 975, type: !8318)
!8992 = !DILocalVariable(name: "test", scope: !8988, file: !533, line: 976, type: !8270)
!8993 = !DILocation(line: 0, scope: !8988)
!8994 = !DILocation(line: 979, column: 3, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8996, file: !533, line: 979, column: 3)
!8996 = distinct !DILexicalBlock(scope: !8997, file: !533, line: 978, column: 47)
!8997 = distinct !DILexicalBlock(scope: !8988, file: !533, line: 978, column: 6)
!8998 = !DILocation(line: 987, column: 3, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8996, file: !533, line: 987, column: 3)
!9000 = !DILocation(line: 981, column: 15, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !9002, file: !533, line: 981, column: 8)
!9002 = distinct !DILexicalBlock(scope: !9003, file: !533, line: 980, column: 17)
!9003 = distinct !DILexicalBlock(scope: !8995, file: !533, line: 979, column: 3)
!9004 = !DILocation(line: 981, column: 22, scope: !9001)
!9005 = !DILocation(line: 981, column: 32, scope: !9001)
!9006 = !DILocation(line: 981, column: 8, scope: !9002)
!9007 = !DILocation(line: 982, column: 59, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9001, file: !533, line: 981, column: 37)
!9009 = !DILocation(line: 982, column: 5, scope: !9008)
!9010 = !DILocation(line: 984, column: 4, scope: !9008)
!9011 = !DILocation(line: 980, column: 8, scope: !9003)
!9012 = !DILocation(line: 979, column: 52, scope: !9003)
!9013 = distinct !{!9013, !8994, !9014}
!9014 = !DILocation(line: 985, column: 3, scope: !8995)
!9015 = !DILocation(line: 988, column: 40, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9017, file: !533, line: 987, column: 86)
!9017 = distinct !DILexicalBlock(scope: !8999, file: !533, line: 987, column: 3)
!9018 = !DILocation(line: 988, column: 12, scope: !9016)
!9019 = !DILocation(line: 989, column: 14, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9016, file: !533, line: 989, column: 8)
!9021 = !DILocation(line: 989, column: 8, scope: !9016)
!9022 = !DILocation(line: 992, column: 17, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9020, file: !533, line: 989, column: 23)
!9024 = !DILocation(line: 992, column: 29, scope: !9023)
!9025 = !DILocation(line: 990, column: 5, scope: !9023)
!9026 = !DILocation(line: 994, column: 4, scope: !9023)
!9027 = !DILocation(line: 987, column: 78, scope: !9017)
!9028 = !DILocation(line: 987, column: 49, scope: !9017)
!9029 = distinct !{!9029, !8998, !9030}
!9030 = !DILocation(line: 995, column: 3, scope: !8999)
!9031 = !DILocation(line: 997, column: 7, scope: !8996)
!9032 = !DILocation(line: 998, column: 16, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9034, file: !533, line: 997, column: 23)
!9034 = distinct !DILexicalBlock(scope: !8996, file: !533, line: 997, column: 7)
!9035 = !DILocation(line: 999, column: 3, scope: !9033)
!9036 = !DILocation(line: 1002, column: 2, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !8988, file: !533, line: 1002, column: 2)
!9038 = !DILocation(line: 1003, column: 13, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9040, file: !533, line: 1003, column: 7)
!9040 = distinct !DILexicalBlock(scope: !9041, file: !533, line: 1002, column: 85)
!9041 = distinct !DILexicalBlock(scope: !9037, file: !533, line: 1002, column: 2)
!9042 = !DILocation(line: 1003, column: 20, scope: !9039)
!9043 = !DILocation(line: 1003, column: 46, scope: !9039)
!9044 = !DILocation(line: 1003, column: 31, scope: !9039)
!9045 = !DILocation(line: 1003, column: 72, scope: !9039)
!9046 = !DILocation(line: 1003, column: 57, scope: !9039)
!9047 = !DILocation(line: 1004, column: 20, scope: !9039)
!9048 = !DILocation(line: 1003, column: 83, scope: !9039)
!9049 = !DILocation(line: 1003, column: 7, scope: !9040)
!9050 = !DILocation(line: 1005, column: 41, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9039, file: !533, line: 1004, column: 31)
!9052 = !DILocation(line: 1005, column: 64, scope: !9051)
!9053 = !DILocation(line: 1005, column: 4, scope: !9051)
!9054 = !DILocation(line: 1006, column: 16, scope: !9051)
!9055 = !DILocation(line: 1007, column: 3, scope: !9051)
!9056 = !DILocation(line: 1002, column: 77, scope: !9041)
!9057 = !DILocation(line: 1002, column: 48, scope: !9041)
!9058 = distinct !{!9058, !9036, !9059}
!9059 = !DILocation(line: 1008, column: 2, scope: !9037)
!9060 = !DILocation(line: 1009, column: 1, scope: !8988)
!9061 = distinct !DISubprogram(name: "ztest_run_all", scope: !533, file: !533, line: 1011, type: !17, scopeLine: 1011, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9062)
!9062 = !{!9063}
!9063 = !DILocalVariable(name: "state", arg: 1, scope: !9061, file: !533, line: 1011, type: !13)
!9064 = !DILocation(line: 0, scope: !9061)
!9065 = !DILocation(line: 1011, column: 51, scope: !9061)
!9066 = !DILocation(line: 1011, column: 41, scope: !9061)
!9067 = !DILocation(line: 1011, column: 67, scope: !9061)
!9068 = distinct !DISubprogram(name: "test_main", scope: !533, file: !533, line: 1013, type: !3082, scopeLine: 1014, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!9069 = !DILocation(line: 1015, column: 2, scope: !9068)
!9070 = !DILocation(line: 1017, column: 2, scope: !9068)
!9071 = !DILocation(line: 1018, column: 1, scope: !9068)
!9072 = distinct !DISubprogram(name: "main", scope: !533, file: !533, line: 1030, type: !3082, scopeLine: 1031, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!9073 = !DILocation(line: 1046, column: 2, scope: !9072)
!9074 = !DILocation(line: 1047, column: 2, scope: !9072)
!9075 = !DILocation(line: 1071, column: 1, scope: !9072)
!9076 = distinct !DISubprogram(name: "z_ztest_run_all", scope: !699, file: !699, line: 30, type: !17, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9077)
!9077 = !{!9078}
!9078 = !DILocalVariable(name: "state", arg: 1, scope: !9076, file: !699, line: 30, type: !13)
!9079 = !DILocation(line: 0, scope: !9076)
!9080 = !DILocation(line: 32, column: 2, scope: !9076)
!9081 = !DILocation(line: 33, column: 1, scope: !9076)
!9082 = distinct !DISubprogram(name: "z_ztest_should_suite_run", scope: !699, file: !699, line: 45, type: !706, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9083)
!9083 = !{!9084, !9085, !9086}
!9084 = !DILocalVariable(name: "state", arg: 1, scope: !9082, file: !699, line: 45, type: !13)
!9085 = !DILocalVariable(name: "suite", arg: 2, scope: !9082, file: !699, line: 45, type: !708)
!9086 = !DILocalVariable(name: "run_suite", scope: !9082, file: !699, line: 47, type: !145)
!9087 = !DILocation(line: 0, scope: !9082)
!9088 = !DILocation(line: 49, column: 13, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9082, file: !699, line: 49, column: 6)
!9090 = !DILocation(line: 49, column: 23, scope: !9089)
!9091 = !DILocation(line: 49, column: 6, scope: !9082)
!9092 = !DILocation(line: 50, column: 15, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9089, file: !699, line: 49, column: 32)
!9094 = !DILocation(line: 51, column: 2, scope: !9093)
!9095 = !DILocation(line: 53, column: 2, scope: !9082)
!9096 = distinct !DISubprogram(name: "z_ztest_should_test_run", scope: !699, file: !699, line: 65, type: !727, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9097)
!9097 = !{!9098, !9099}
!9098 = !DILocalVariable(name: "suite", arg: 1, scope: !9096, file: !699, line: 65, type: !118)
!9099 = !DILocalVariable(name: "test", arg: 2, scope: !9096, file: !699, line: 65, type: !118)
!9100 = !DILocation(line: 0, scope: !9096)
!9101 = !DILocation(line: 67, column: 2, scope: !9096)
!9102 = distinct !DISubprogram(name: "ztest_run_test_suites", scope: !9103, file: !9103, line: 24, type: !8791, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9104)
!9103 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!9104 = !{!9105}
!9105 = !DILocalVariable(name: "state", arg: 1, scope: !9102, file: !9103, line: 24, type: !13)
!9106 = !DILocation(line: 0, scope: !9102)
!9107 = !DILocation(line: 32, column: 2, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9102, file: !9103, line: 32, column: 2)
!9109 = !{i64 2154869626}
!9110 = !DILocation(line: 33, column: 9, scope: !9102)
!9111 = !DILocation(line: 33, column: 2, scope: !9102)
!9112 = distinct !DISubprogram(name: "ztest_relative_filename", scope: !699, file: !699, line: 20, type: !9113, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9115)
!9113 = !DISubroutineType(types: !9114)
!9114 = !{!118, !118}
!9115 = !{!9116}
!9116 = !DILocalVariable(name: "file", arg: 1, scope: !9112, file: !699, line: 20, type: !118)
!9117 = !DILocation(line: 0, scope: !9112)
!9118 = !DILocation(line: 22, column: 2, scope: !9112)
!9119 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !835, file: !835, line: 368, type: !888, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9120)
!9120 = !{!9121}
!9121 = !DILocalVariable(name: "dev", arg: 1, scope: !9119, file: !835, line: 368, type: !864)
!9122 = !DILocation(line: 0, scope: !9119)
!9123 = !DILocation(line: 370, column: 2, scope: !9119)
!9124 = !DILocation(line: 371, column: 1, scope: !9119)
!9125 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !835, file: !835, line: 243, type: !9126, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9128)
!9126 = !DISubroutineType(types: !9127)
!9127 = !{null, !107, !107, !864}
!9128 = !{!9129, !9130, !9131, !9132, !9134}
!9129 = !DILocalVariable(name: "min", arg: 1, scope: !9125, file: !835, line: 243, type: !107)
!9130 = !DILocalVariable(name: "max", arg: 2, scope: !9125, file: !835, line: 243, type: !107)
!9131 = !DILocalVariable(name: "dev", arg: 3, scope: !9125, file: !835, line: 243, type: !864)
!9132 = !DILocalVariable(name: "data", scope: !9125, file: !835, line: 245, type: !9133)
!9133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 32)
!9134 = !DILocalVariable(name: "line", scope: !9125, file: !835, line: 246, type: !107)
!9135 = !DILocation(line: 0, scope: !9125)
!9136 = !DILocation(line: 245, column: 38, scope: !9125)
!9137 = !DILocation(line: 249, column: 24, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9139, file: !835, line: 249, column: 2)
!9139 = distinct !DILexicalBlock(scope: !9125, file: !835, line: 249, column: 2)
!9140 = !DILocation(line: 249, column: 2, scope: !9139)
!9141 = !DILocation(line: 251, column: 7, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9143, file: !835, line: 251, column: 7)
!9143 = distinct !DILexicalBlock(scope: !9138, file: !835, line: 249, column: 39)
!9144 = !DILocation(line: 251, column: 7, scope: !9143)
!9145 = !DILocation(line: 253, column: 4, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9142, file: !835, line: 251, column: 36)
!9147 = !DILocation(line: 256, column: 24, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9146, file: !835, line: 256, column: 8)
!9149 = !DILocation(line: 256, column: 9, scope: !9148)
!9150 = !DILocation(line: 256, column: 8, scope: !9146)
!9151 = !DILocation(line: 260, column: 43, scope: !9146)
!9152 = !DILocation(line: 260, column: 4, scope: !9146)
!9153 = !DILocation(line: 261, column: 3, scope: !9146)
!9154 = !DILocation(line: 249, column: 35, scope: !9138)
!9155 = distinct !{!9155, !9140, !9156}
!9156 = !DILocation(line: 262, column: 2, scope: !9139)
!9157 = !DILocation(line: 263, column: 1, scope: !9125)
!9158 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !835, file: !835, line: 158, type: !214, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9159)
!9159 = !{!9160}
!9160 = !DILocalVariable(name: "line", arg: 1, scope: !9158, file: !835, line: 158, type: !107)
!9161 = !DILocation(line: 0, scope: !9158)
!9162 = !DILocation(line: 170, column: 38, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9164, file: !835, line: 160, column: 17)
!9164 = distinct !DILexicalBlock(scope: !9158, file: !835, line: 160, column: 6)
!9165 = !DILocation(line: 170, column: 10, scope: !9163)
!9166 = !DILocation(line: 176, column: 1, scope: !9158)
!9167 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !835, file: !835, line: 183, type: !9168, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9170)
!9168 = !DISubroutineType(types: !9169)
!9169 = !{null, !107}
!9170 = !{!9171}
!9171 = !DILocalVariable(name: "line", arg: 1, scope: !9167, file: !835, line: 183, type: !107)
!9172 = !DILocation(line: 0, scope: !9167)
!9173 = !DILocation(line: 195, column: 28, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9175, file: !835, line: 185, column: 17)
!9175 = distinct !DILexicalBlock(scope: !9167, file: !835, line: 185, column: 6)
!9176 = !DILocation(line: 195, column: 3, scope: !9174)
!9177 = !DILocation(line: 200, column: 1, scope: !9167)
!9178 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9179, file: !9179, line: 910, type: !6351, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9180)
!9179 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9180 = !{!9181}
!9181 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9178, file: !9179, line: 910, type: !152)
!9182 = !DILocation(line: 0, scope: !9178)
!9183 = !DILocation(line: 912, column: 3, scope: !9178)
!9184 = !DILocation(line: 913, column: 1, scope: !9178)
!9185 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9179, file: !9179, line: 834, type: !7541, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9186)
!9186 = !{!9187}
!9187 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9185, file: !9179, line: 834, type: !152)
!9188 = !DILocation(line: 0, scope: !9185)
!9189 = !DILocation(line: 836, column: 11, scope: !9185)
!9190 = !DILocation(line: 836, column: 40, scope: !9185)
!9191 = !DILocation(line: 836, column: 3, scope: !9185)
!9192 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !835, file: !835, line: 304, type: !888, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9193)
!9193 = !{!9194}
!9194 = !DILocalVariable(name: "dev", arg: 1, scope: !9192, file: !835, line: 304, type: !864)
!9195 = !DILocation(line: 0, scope: !9192)
!9196 = !DILocation(line: 306, column: 2, scope: !9192)
!9197 = !DILocation(line: 307, column: 1, scope: !9192)
!9198 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !835, file: !835, line: 299, type: !888, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9199)
!9199 = !{!9200}
!9200 = !DILocalVariable(name: "dev", arg: 1, scope: !9198, file: !835, line: 299, type: !864)
!9201 = !DILocation(line: 0, scope: !9198)
!9202 = !DILocation(line: 301, column: 2, scope: !9198)
!9203 = !DILocation(line: 302, column: 1, scope: !9198)
!9204 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !835, file: !835, line: 294, type: !888, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9205)
!9205 = !{!9206}
!9206 = !DILocalVariable(name: "dev", arg: 1, scope: !9204, file: !835, line: 294, type: !864)
!9207 = !DILocation(line: 0, scope: !9204)
!9208 = !DILocation(line: 296, column: 2, scope: !9204)
!9209 = !DILocation(line: 297, column: 1, scope: !9204)
!9210 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !835, file: !835, line: 397, type: !888, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9211)
!9211 = !{!9212}
!9212 = !DILocalVariable(name: "dev", arg: 1, scope: !9210, file: !835, line: 397, type: !864)
!9213 = !DILocation(line: 0, scope: !9210)
!9214 = !DILocation(line: 399, column: 2, scope: !9210)
!9215 = !DILocation(line: 400, column: 1, scope: !9210)
!9216 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !835, file: !835, line: 392, type: !888, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9217)
!9217 = !{!9218}
!9218 = !DILocalVariable(name: "dev", arg: 1, scope: !9216, file: !835, line: 392, type: !864)
!9219 = !DILocation(line: 0, scope: !9216)
!9220 = !DILocation(line: 394, column: 2, scope: !9216)
!9221 = !DILocation(line: 395, column: 1, scope: !9216)
!9222 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !835, file: !835, line: 289, type: !888, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9223)
!9223 = !{!9224}
!9224 = !DILocalVariable(name: "dev", arg: 1, scope: !9222, file: !835, line: 289, type: !864)
!9225 = !DILocation(line: 0, scope: !9222)
!9226 = !DILocation(line: 291, column: 2, scope: !9222)
!9227 = !DILocation(line: 292, column: 1, scope: !9222)
!9228 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !835, file: !835, line: 387, type: !888, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9229)
!9229 = !{!9230}
!9230 = !DILocalVariable(name: "dev", arg: 1, scope: !9228, file: !835, line: 387, type: !864)
!9231 = !DILocation(line: 0, scope: !9228)
!9232 = !DILocation(line: 389, column: 2, scope: !9228)
!9233 = !DILocation(line: 390, column: 1, scope: !9228)
!9234 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !835, file: !835, line: 382, type: !888, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9235)
!9235 = !{!9236}
!9236 = !DILocalVariable(name: "dev", arg: 1, scope: !9234, file: !835, line: 382, type: !864)
!9237 = !DILocation(line: 0, scope: !9234)
!9238 = !DILocation(line: 384, column: 2, scope: !9234)
!9239 = !DILocation(line: 385, column: 1, scope: !9234)
!9240 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !835, file: !835, line: 373, type: !888, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9241)
!9241 = !{!9242}
!9242 = !DILocalVariable(name: "dev", arg: 1, scope: !9240, file: !835, line: 373, type: !864)
!9243 = !DILocation(line: 0, scope: !9240)
!9244 = !DILocation(line: 375, column: 2, scope: !9240)
!9245 = !DILocation(line: 376, column: 1, scope: !9240)
!9246 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !835, file: !835, line: 284, type: !888, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9247)
!9247 = !{!9248}
!9248 = !DILocalVariable(name: "dev", arg: 1, scope: !9246, file: !835, line: 284, type: !864)
!9249 = !DILocation(line: 0, scope: !9246)
!9250 = !DILocation(line: 286, column: 2, scope: !9246)
!9251 = !DILocation(line: 287, column: 1, scope: !9246)
!9252 = distinct !DISubprogram(name: "stm32_exti_init", scope: !835, file: !835, line: 416, type: !862, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9253)
!9253 = !{!9254}
!9254 = !DILocalVariable(name: "dev", arg: 1, scope: !9252, file: !835, line: 416, type: !864)
!9255 = !DILocation(line: 0, scope: !9252)
!9256 = !DILocation(line: 418, column: 2, scope: !9252)
!9257 = !DILocation(line: 420, column: 2, scope: !9252)
!9258 = !DILocation(line: 0, scope: !887)
!9259 = !DILocation(line: 493, column: 2, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !887, file: !835, line: 493, column: 2)
!9261 = !DILocation(line: 497, column: 2, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !887, file: !835, line: 497, column: 2)
!9263 = !DILocation(line: 507, column: 2, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !887, file: !835, line: 507, column: 2)
!9265 = !DILocation(line: 512, column: 2, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !887, file: !835, line: 512, column: 2)
!9267 = !DILocation(line: 516, column: 2, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !887, file: !835, line: 516, column: 2)
!9269 = !DILocation(line: 523, column: 2, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !887, file: !835, line: 523, column: 2)
!9271 = !DILocation(line: 527, column: 2, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !887, file: !835, line: 527, column: 2)
!9273 = !DILocation(line: 581, column: 2, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !887, file: !835, line: 581, column: 2)
!9275 = !DILocation(line: 586, column: 2, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !887, file: !835, line: 586, column: 2)
!9277 = !DILocation(line: 591, column: 2, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !887, file: !835, line: 591, column: 2)
!9279 = !DILocation(line: 595, column: 2, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !887, file: !835, line: 595, column: 2)
!9281 = !DILocation(line: 607, column: 1, scope: !887)
!9282 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !835, file: !835, line: 112, type: !9168, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9283)
!9283 = !{!9284, !9285}
!9284 = !DILocalVariable(name: "line", arg: 1, scope: !9282, file: !835, line: 112, type: !107)
!9285 = !DILocalVariable(name: "irqnum", scope: !9282, file: !835, line: 114, type: !107)
!9286 = !DILocation(line: 0, scope: !9282)
!9287 = !DILocation(line: 122, column: 13, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9282, file: !835, line: 122, column: 6)
!9289 = !DILocation(line: 122, column: 6, scope: !9282)
!9290 = !DILocation(line: 123, column: 3, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9292, file: !835, line: 123, column: 3)
!9292 = distinct !DILexicalBlock(scope: !9293, file: !835, line: 123, column: 3)
!9293 = distinct !DILexicalBlock(scope: !9294, file: !835, line: 123, column: 3)
!9294 = distinct !DILexicalBlock(scope: !9288, file: !835, line: 122, column: 22)
!9295 = !DILocation(line: 121, column: 11, scope: !9282)
!9296 = !DILocation(line: 130, column: 26, scope: !9282)
!9297 = !DILocation(line: 130, column: 2, scope: !9282)
!9298 = !DILocation(line: 134, column: 2, scope: !9282)
!9299 = !DILocation(line: 135, column: 1, scope: !9282)
!9300 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9179, file: !9179, line: 268, type: !6351, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9301)
!9301 = !{!9302}
!9302 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9300, file: !9179, line: 268, type: !152)
!9303 = !DILocation(line: 0, scope: !9300)
!9304 = !DILocation(line: 270, column: 3, scope: !9300)
!9305 = !DILocation(line: 271, column: 1, scope: !9300)
!9306 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !835, file: !835, line: 137, type: !9168, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9307)
!9307 = !{!9308}
!9308 = !DILocalVariable(name: "line", arg: 1, scope: !9306, file: !835, line: 137, type: !107)
!9309 = !DILocation(line: 0, scope: !9306)
!9310 = !DILocation(line: 141, column: 11, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9306, file: !835, line: 141, column: 6)
!9312 = !DILocation(line: 141, column: 6, scope: !9306)
!9313 = !DILocation(line: 145, column: 28, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9311, file: !835, line: 141, column: 17)
!9315 = !DILocation(line: 145, column: 3, scope: !9314)
!9316 = !DILocation(line: 147, column: 2, scope: !9314)
!9317 = !DILocation(line: 151, column: 1, scope: !9306)
!9318 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9179, file: !9179, line: 309, type: !6351, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9319)
!9319 = !{!9320}
!9320 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9318, file: !9179, line: 309, type: !152)
!9321 = !DILocation(line: 0, scope: !9318)
!9322 = !DILocation(line: 311, column: 3, scope: !9318)
!9323 = !DILocation(line: 312, column: 1, scope: !9318)
!9324 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !835, file: !835, line: 202, type: !9325, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9327)
!9325 = !DISubroutineType(types: !9326)
!9326 = !{null, !107, !107}
!9327 = !{!9328, !9329}
!9328 = !DILocalVariable(name: "line", arg: 1, scope: !9324, file: !835, line: 202, type: !107)
!9329 = !DILocalVariable(name: "trigger", arg: 2, scope: !9324, file: !835, line: 202, type: !107)
!9330 = !DILocation(line: 0, scope: !9324)
!9331 = !DILocation(line: 211, column: 2, scope: !9324)
!9332 = !DILocation(line: 213, column: 36, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9324, file: !835, line: 211, column: 19)
!9334 = !DILocation(line: 213, column: 3, scope: !9333)
!9335 = !DILocation(line: 214, column: 3, scope: !9333)
!9336 = !DILocation(line: 215, column: 3, scope: !9333)
!9337 = !DILocation(line: 217, column: 35, scope: !9333)
!9338 = !DILocation(line: 217, column: 3, scope: !9333)
!9339 = !DILocation(line: 218, column: 3, scope: !9333)
!9340 = !DILocation(line: 219, column: 3, scope: !9333)
!9341 = !DILocation(line: 221, column: 36, scope: !9333)
!9342 = !DILocation(line: 221, column: 3, scope: !9333)
!9343 = !DILocation(line: 222, column: 3, scope: !9333)
!9344 = !DILocation(line: 223, column: 3, scope: !9333)
!9345 = !DILocation(line: 225, column: 35, scope: !9333)
!9346 = !DILocation(line: 225, column: 3, scope: !9333)
!9347 = !DILocation(line: 226, column: 3, scope: !9333)
!9348 = !DILocation(line: 227, column: 3, scope: !9333)
!9349 = !DILocation(line: 232, column: 1, scope: !9324)
!9350 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9179, file: !9179, line: 573, type: !6351, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9351)
!9351 = !{!9352}
!9352 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9350, file: !9179, line: 573, type: !152)
!9353 = !DILocation(line: 0, scope: !9350)
!9354 = !DILocation(line: 575, column: 3, scope: !9350)
!9355 = !DILocation(line: 577, column: 1, scope: !9350)
!9356 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9179, file: !9179, line: 703, type: !6351, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9357)
!9357 = !{!9358}
!9358 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9356, file: !9179, line: 703, type: !152)
!9359 = !DILocation(line: 0, scope: !9356)
!9360 = !DILocation(line: 705, column: 3, scope: !9356)
!9361 = !DILocation(line: 706, column: 1, scope: !9356)
!9362 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9179, file: !9179, line: 529, type: !6351, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9363)
!9363 = !{!9364}
!9364 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9362, file: !9179, line: 529, type: !152)
!9365 = !DILocation(line: 0, scope: !9362)
!9366 = !DILocation(line: 531, column: 3, scope: !9362)
!9367 = !DILocation(line: 533, column: 1, scope: !9362)
!9368 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9179, file: !9179, line: 661, type: !6351, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9369)
!9369 = !{!9370}
!9370 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9368, file: !9179, line: 661, type: !152)
!9371 = !DILocation(line: 0, scope: !9368)
!9372 = !DILocation(line: 663, column: 3, scope: !9368)
!9373 = !DILocation(line: 664, column: 1, scope: !9368)
!9374 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !835, file: !835, line: 433, type: !9375, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9377)
!9375 = !DISubroutineType(types: !9376)
!9376 = !{!107, !107, !875, !106}
!9377 = !{!9378, !9379, !9380, !9381, !9383}
!9378 = !DILocalVariable(name: "line", arg: 1, scope: !9374, file: !835, line: 433, type: !107)
!9379 = !DILocalVariable(name: "cb", arg: 2, scope: !9374, file: !835, line: 433, type: !875)
!9380 = !DILocalVariable(name: "arg", arg: 3, scope: !9374, file: !835, line: 433, type: !106)
!9381 = !DILocalVariable(name: "dev", scope: !9374, file: !835, line: 435, type: !9382)
!9382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !864)
!9383 = !DILocalVariable(name: "data", scope: !9374, file: !835, line: 436, type: !9133)
!9384 = !DILocation(line: 0, scope: !9374)
!9385 = !DILocation(line: 438, column: 21, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9374, file: !835, line: 438, column: 6)
!9387 = !DILocation(line: 438, column: 6, scope: !9386)
!9388 = !DILocation(line: 438, column: 6, scope: !9374)
!9389 = !DILocation(line: 442, column: 20, scope: !9374)
!9390 = !DILocation(line: 443, column: 17, scope: !9374)
!9391 = !DILocation(line: 443, column: 22, scope: !9374)
!9392 = !DILocation(line: 445, column: 2, scope: !9374)
!9393 = !DILocation(line: 446, column: 1, scope: !9374)
!9394 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !835, file: !835, line: 448, type: !9168, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9395)
!9395 = !{!9396, !9397, !9398}
!9396 = !DILocalVariable(name: "line", arg: 1, scope: !9394, file: !835, line: 448, type: !107)
!9397 = !DILocalVariable(name: "dev", scope: !9394, file: !835, line: 450, type: !9382)
!9398 = !DILocalVariable(name: "data", scope: !9394, file: !835, line: 451, type: !9133)
!9399 = !DILocation(line: 0, scope: !9394)
!9400 = !DILocation(line: 453, column: 17, scope: !9394)
!9401 = !DILocation(line: 453, column: 20, scope: !9394)
!9402 = !DILocation(line: 454, column: 17, scope: !9394)
!9403 = !DILocation(line: 454, column: 22, scope: !9394)
!9404 = !DILocation(line: 455, column: 1, scope: !9394)
!9405 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1018, file: !1018, line: 183, type: !1056, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9406)
!9406 = !{!9407, !9408, !9409, !9410, !9411}
!9407 = !DILocalVariable(name: "dev", arg: 1, scope: !9405, file: !1018, line: 183, type: !1047)
!9408 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9405, file: !1018, line: 184, type: !1058)
!9409 = !DILocalVariable(name: "pclken", scope: !9405, file: !1018, line: 186, type: !1008)
!9410 = !DILocalVariable(name: "reg", scope: !9405, file: !1018, line: 187, type: !1601)
!9411 = !DILocalVariable(name: "reg_val", scope: !9405, file: !1018, line: 188, type: !152)
!9412 = !DILocation(line: 0, scope: !9405)
!9413 = !DILocation(line: 192, column: 6, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9405, file: !1018, line: 192, column: 6)
!9415 = !DILocation(line: 192, column: 6, scope: !9405)
!9416 = !DILocation(line: 197, column: 52, scope: !9405)
!9417 = !DILocation(line: 197, column: 8, scope: !9405)
!9418 = !DILocation(line: 198, column: 12, scope: !9405)
!9419 = !DILocation(line: 199, column: 21, scope: !9405)
!9420 = !DILocation(line: 199, column: 10, scope: !9405)
!9421 = !DILocation(line: 200, column: 7, scope: !9405)
!9422 = !DILocation(line: 202, column: 2, scope: !9405)
!9423 = !DILocation(line: 203, column: 1, scope: !9405)
!9424 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1018, file: !1018, line: 205, type: !1056, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9425)
!9425 = !{!9426, !9427, !9428, !9429, !9430}
!9426 = !DILocalVariable(name: "dev", arg: 1, scope: !9424, file: !1018, line: 205, type: !1047)
!9427 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9424, file: !1018, line: 206, type: !1058)
!9428 = !DILocalVariable(name: "pclken", scope: !9424, file: !1018, line: 208, type: !1008)
!9429 = !DILocalVariable(name: "reg", scope: !9424, file: !1018, line: 209, type: !1601)
!9430 = !DILocalVariable(name: "reg_val", scope: !9424, file: !1018, line: 210, type: !152)
!9431 = !DILocation(line: 0, scope: !9424)
!9432 = !DILocation(line: 214, column: 6, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9424, file: !1018, line: 214, column: 6)
!9434 = !DILocation(line: 214, column: 6, scope: !9424)
!9435 = !DILocation(line: 219, column: 52, scope: !9424)
!9436 = !DILocation(line: 219, column: 8, scope: !9424)
!9437 = !DILocation(line: 220, column: 12, scope: !9424)
!9438 = !DILocation(line: 221, column: 22, scope: !9424)
!9439 = !DILocation(line: 221, column: 13, scope: !9424)
!9440 = !DILocation(line: 221, column: 10, scope: !9424)
!9441 = !DILocation(line: 222, column: 7, scope: !9424)
!9442 = !DILocation(line: 224, column: 2, scope: !9424)
!9443 = !DILocation(line: 225, column: 1, scope: !9424)
!9444 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1018, file: !1018, line: 262, type: !1072, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9445)
!9445 = !{!9446, !9447, !9448, !9449, !9450, !9451, !9452, !9453}
!9446 = !DILocalVariable(name: "clock", arg: 1, scope: !9444, file: !1018, line: 262, type: !1047)
!9447 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9444, file: !1018, line: 263, type: !1058)
!9448 = !DILocalVariable(name: "rate", arg: 3, scope: !9444, file: !1018, line: 264, type: !1014)
!9449 = !DILocalVariable(name: "pclken", scope: !9444, file: !1018, line: 266, type: !1008)
!9450 = !DILocalVariable(name: "ahb_clock", scope: !9444, file: !1018, line: 273, type: !152)
!9451 = !DILocalVariable(name: "apb1_clock", scope: !9444, file: !1018, line: 274, type: !152)
!9452 = !DILocalVariable(name: "apb2_clock", scope: !9444, file: !1018, line: 276, type: !152)
!9453 = !DILocalVariable(name: "ahb3_clock", scope: !9444, file: !1018, line: 286, type: !152)
!9454 = !DILocation(line: 0, scope: !9444)
!9455 = !DILocation(line: 273, column: 23, scope: !9444)
!9456 = !DILocation(line: 274, column: 24, scope: !9444)
!9457 = !DILocation(line: 299, column: 18, scope: !9444)
!9458 = !DILocation(line: 299, column: 2, scope: !9444)
!9459 = !DILocation(line: 319, column: 3, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9444, file: !1018, line: 299, column: 23)
!9461 = !DILocation(line: 323, column: 3, scope: !9460)
!9462 = !DILocation(line: 346, column: 33, scope: !9460)
!9463 = !DILocation(line: 346, column: 11, scope: !9460)
!9464 = !DILocation(line: 350, column: 3, scope: !9460)
!9465 = !DILocation(line: 354, column: 33, scope: !9460)
!9466 = !DILocation(line: 354, column: 11, scope: !9460)
!9467 = !DILocation(line: 358, column: 3, scope: !9460)
!9468 = !DILocation(line: 374, column: 3, scope: !9460)
!9469 = !DILocation(line: 379, column: 3, scope: !9460)
!9470 = !DILocation(line: 0, scope: !9460)
!9471 = !DILocation(line: 396, column: 1, scope: !9444)
!9472 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1018, file: !1018, line: 227, type: !1088, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9473)
!9473 = !{!9474, !9475, !9476, !9477, !9478, !9479, !9480, !9481}
!9474 = !DILocalVariable(name: "dev", arg: 1, scope: !9472, file: !1018, line: 227, type: !1047)
!9475 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9472, file: !1018, line: 228, type: !1058)
!9476 = !DILocalVariable(name: "data", arg: 3, scope: !9472, file: !1018, line: 229, type: !106)
!9477 = !DILocalVariable(name: "pclken", scope: !9472, file: !1018, line: 233, type: !1008)
!9478 = !DILocalVariable(name: "reg", scope: !9472, file: !1018, line: 234, type: !1601)
!9479 = !DILocalVariable(name: "reg_val", scope: !9472, file: !1018, line: 235, type: !152)
!9480 = !DILocalVariable(name: "dt_val", scope: !9472, file: !1018, line: 235, type: !152)
!9481 = !DILocalVariable(name: "err", scope: !9472, file: !1018, line: 236, type: !107)
!9482 = !DILocation(line: 0, scope: !9472)
!9483 = !DILocation(line: 241, column: 30, scope: !9472)
!9484 = !DILocation(line: 241, column: 8, scope: !9472)
!9485 = !DILocation(line: 242, column: 10, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9472, file: !1018, line: 242, column: 6)
!9487 = !DILocation(line: 242, column: 6, scope: !9472)
!9488 = !DILocation(line: 247, column: 11, scope: !9472)
!9489 = !DILocation(line: 248, column: 6, scope: !9472)
!9490 = !DILocation(line: 247, column: 44, scope: !9472)
!9491 = !DILocation(line: 250, column: 6, scope: !9472)
!9492 = !DILocation(line: 249, column: 52, scope: !9472)
!9493 = !DILocation(line: 249, column: 8, scope: !9472)
!9494 = !DILocation(line: 251, column: 12, scope: !9472)
!9495 = !DILocation(line: 252, column: 10, scope: !9472)
!9496 = !DILocation(line: 253, column: 7, scope: !9472)
!9497 = !DILocation(line: 255, column: 2, scope: !9472)
!9498 = !DILocation(line: 260, column: 1, scope: !9472)
!9499 = distinct !DISubprogram(name: "enabled_clock", scope: !1018, file: !1018, line: 100, type: !9500, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9502)
!9500 = !DISubroutineType(types: !9501)
!9501 = !{!107, !152}
!9502 = !{!9503, !9504}
!9503 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9499, file: !1018, line: 100, type: !152)
!9504 = !DILocalVariable(name: "r", scope: !9499, file: !1018, line: 102, type: !107)
!9505 = !DILocation(line: 0, scope: !9499)
!9506 = !DILocation(line: 104, column: 2, scope: !9499)
!9507 = !DILocation(line: 180, column: 2, scope: !9499)
!9508 = !DILocation(line: 181, column: 1, scope: !9499)
!9509 = distinct !DISubprogram(name: "get_bus_clock", scope: !1018, file: !1018, line: 79, type: !9510, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9512)
!9510 = !DISubroutineType(types: !9511)
!9511 = !{!152, !152, !152}
!9512 = !{!9513, !9514}
!9513 = !DILocalVariable(name: "clock", arg: 1, scope: !9509, file: !1018, line: 79, type: !152)
!9514 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9509, file: !1018, line: 79, type: !152)
!9515 = !DILocation(line: 0, scope: !9509)
!9516 = !DILocation(line: 81, column: 15, scope: !9509)
!9517 = !DILocation(line: 81, column: 2, scope: !9509)
!9518 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1018, file: !1018, line: 68, type: !9519, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9521)
!9519 = !DISubroutineType(types: !9520)
!9520 = !{!152, !152, !107, !107, !107}
!9521 = !{!9522, !9523, !9524, !9525}
!9522 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9518, file: !1018, line: 68, type: !152)
!9523 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9518, file: !1018, line: 69, type: !107)
!9524 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9518, file: !1018, line: 70, type: !107)
!9525 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9518, file: !1018, line: 71, type: !107)
!9526 = !DILocation(line: 0, scope: !9518)
!9527 = !DILocation(line: 75, column: 22, scope: !9518)
!9528 = !DILocation(line: 76, column: 13, scope: !9518)
!9529 = !DILocation(line: 75, column: 34, scope: !9518)
!9530 = !DILocation(line: 75, column: 2, scope: !9518)
!9531 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1018, file: !1018, line: 641, type: !1045, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9532)
!9532 = !{!9533, !9534, !9535}
!9533 = !DILocalVariable(name: "dev", arg: 1, scope: !9531, file: !1018, line: 641, type: !1047)
!9534 = !DILocalVariable(name: "old_flash_freq", scope: !9531, file: !1018, line: 664, type: !152)
!9535 = !DILocalVariable(name: "new_flash_freq", scope: !9531, file: !1018, line: 665, type: !152)
!9536 = !DILocation(line: 0, scope: !9531)
!9537 = !DILocation(line: 646, column: 2, scope: !9531)
!9538 = !DILocation(line: 667, column: 19, scope: !9531)
!9539 = !DILocation(line: 674, column: 21, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9531, file: !1018, line: 674, column: 6)
!9541 = !DILocation(line: 674, column: 6, scope: !9531)
!9542 = !DILocation(line: 675, column: 3, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9540, file: !1018, line: 674, column: 59)
!9544 = !DILocation(line: 676, column: 2, scope: !9543)
!9545 = !DILocation(line: 680, column: 2, scope: !9531)
!9546 = !DILocation(line: 683, column: 2, scope: !9531)
!9547 = !DILocation(line: 690, column: 3, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9549, file: !1018, line: 689, column: 9)
!9549 = distinct !DILexicalBlock(scope: !9531, file: !1018, line: 685, column: 6)
!9550 = !DILocation(line: 695, column: 2, scope: !9531)
!9551 = !DILocation(line: 696, column: 2, scope: !9531)
!9552 = !DILocation(line: 696, column: 9, scope: !9531)
!9553 = !DILocation(line: 696, column: 34, scope: !9531)
!9554 = distinct !{!9554, !9551, !9555}
!9555 = !DILocation(line: 697, column: 2, scope: !9531)
!9556 = !DILocation(line: 720, column: 21, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9531, file: !1018, line: 720, column: 6)
!9558 = !DILocation(line: 720, column: 6, scope: !9531)
!9559 = !DILocation(line: 721, column: 3, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9557, file: !1018, line: 720, column: 60)
!9561 = !DILocation(line: 722, column: 2, scope: !9560)
!9562 = !DILocation(line: 725, column: 18, scope: !9531)
!9563 = !DILocation(line: 728, column: 2, scope: !9531)
!9564 = !DILocation(line: 730, column: 2, scope: !9531)
!9565 = !DILocation(line: 745, column: 2, scope: !9531)
!9566 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9567, file: !9567, line: 3275, type: !6341, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9567 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9568 = !DILocation(line: 3277, column: 21, scope: !9566)
!9569 = !DILocation(line: 3277, column: 3, scope: !9566)
!9570 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1018, file: !1018, line: 507, type: !3082, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9571 = !DILocation(line: 516, column: 4, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9573, file: !1018, line: 515, column: 10)
!9573 = distinct !DILexicalBlock(scope: !9574, file: !1018, line: 513, column: 7)
!9574 = distinct !DILexicalBlock(scope: !9575, file: !1018, line: 510, column: 37)
!9575 = distinct !DILexicalBlock(scope: !9570, file: !1018, line: 510, column: 6)
!9576 = !DILocation(line: 526, column: 3, scope: !9574)
!9577 = !DILocation(line: 527, column: 3, scope: !9574)
!9578 = !DILocation(line: 527, column: 10, scope: !9574)
!9579 = !DILocation(line: 527, column: 31, scope: !9574)
!9580 = distinct !{!9580, !9577, !9581}
!9581 = !DILocation(line: 529, column: 3, scope: !9574)
!9582 = !DILocation(line: 583, column: 3, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9584, file: !1018, line: 577, column: 37)
!9584 = distinct !DILexicalBlock(scope: !9570, file: !1018, line: 577, column: 6)
!9585 = !DILocation(line: 584, column: 3, scope: !9583)
!9586 = !DILocation(line: 584, column: 10, scope: !9583)
!9587 = !DILocation(line: 584, column: 31, scope: !9583)
!9588 = distinct !{!9588, !9585, !9589}
!9589 = !DILocation(line: 585, column: 3, scope: !9583)
!9590 = !DILocation(line: 627, column: 1, scope: !9570)
!9591 = distinct !DISubprogram(name: "set_up_plls", scope: !1018, file: !1018, line: 448, type: !3082, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9592 = !DILocation(line: 460, column: 6, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9591, file: !1018, line: 460, column: 6)
!9594 = !DILocation(line: 460, column: 31, scope: !9593)
!9595 = !DILocation(line: 460, column: 6, scope: !9591)
!9596 = !DILocation(line: 461, column: 3, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9593, file: !1018, line: 460, column: 67)
!9598 = !DILocation(line: 462, column: 3, scope: !9597)
!9599 = !DILocation(line: 463, column: 2, scope: !9597)
!9600 = !DILocation(line: 464, column: 2, scope: !9591)
!9601 = !DILocation(line: 488, column: 2, scope: !9591)
!9602 = !DILocation(line: 492, column: 2, scope: !9591)
!9603 = !DILocation(line: 496, column: 2, scope: !9591)
!9604 = !DILocation(line: 499, column: 2, scope: !9591)
!9605 = !DILocation(line: 500, column: 2, scope: !9591)
!9606 = !DILocation(line: 500, column: 9, scope: !9591)
!9607 = !DILocation(line: 500, column: 30, scope: !9591)
!9608 = distinct !{!9608, !9605, !9609}
!9609 = !DILocation(line: 502, column: 2, scope: !9591)
!9610 = !DILocation(line: 505, column: 1, scope: !9591)
!9611 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9567, file: !9567, line: 3224, type: !6351, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9612)
!9612 = !{!9613}
!9613 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9611, file: !9567, line: 3224, type: !152)
!9614 = !DILocation(line: 0, scope: !9611)
!9615 = !DILocation(line: 3226, column: 3, scope: !9611)
!9616 = !DILocation(line: 3227, column: 1, scope: !9611)
!9617 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9567, file: !9567, line: 3188, type: !6351, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9618)
!9618 = !{!9619}
!9619 = !DILocalVariable(name: "Source", arg: 1, scope: !9617, file: !9567, line: 3188, type: !152)
!9620 = !DILocation(line: 0, scope: !9617)
!9621 = !DILocation(line: 3190, column: 3, scope: !9617)
!9622 = !DILocation(line: 3191, column: 1, scope: !9617)
!9623 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9567, file: !9567, line: 3204, type: !6341, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9624 = !DILocation(line: 3206, column: 21, scope: !9623)
!9625 = !DILocation(line: 3206, column: 3, scope: !9623)
!9626 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9567, file: !9567, line: 3240, type: !6351, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9627)
!9627 = !{!9628}
!9628 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9626, file: !9567, line: 3240, type: !152)
!9629 = !DILocation(line: 0, scope: !9626)
!9630 = !DILocation(line: 3242, column: 3, scope: !9626)
!9631 = !DILocation(line: 3243, column: 1, scope: !9626)
!9632 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9567, file: !9567, line: 3256, type: !6351, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9633)
!9633 = !{!9634}
!9634 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9632, file: !9567, line: 3256, type: !152)
!9635 = !DILocation(line: 0, scope: !9632)
!9636 = !DILocation(line: 3258, column: 3, scope: !9632)
!9637 = !DILocation(line: 3259, column: 1, scope: !9632)
!9638 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1018, file: !1018, line: 409, type: !3082, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9639 = !DILocation(line: 412, column: 6, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9638, file: !1018, line: 412, column: 6)
!9641 = !DILocation(line: 412, column: 27, scope: !9640)
!9642 = !DILocation(line: 412, column: 6, scope: !9638)
!9643 = !DILocation(line: 414, column: 3, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9640, file: !1018, line: 412, column: 33)
!9645 = !DILocation(line: 415, column: 3, scope: !9644)
!9646 = !DILocation(line: 415, column: 10, scope: !9644)
!9647 = !DILocation(line: 415, column: 31, scope: !9644)
!9648 = distinct !{!9648, !9645, !9649}
!9649 = !DILocation(line: 417, column: 3, scope: !9644)
!9650 = !DILocation(line: 421, column: 2, scope: !9638)
!9651 = !DILocation(line: 422, column: 2, scope: !9638)
!9652 = !DILocation(line: 422, column: 9, scope: !9638)
!9653 = !DILocation(line: 422, column: 34, scope: !9638)
!9654 = distinct !{!9654, !9651, !9655}
!9655 = !DILocation(line: 423, column: 2, scope: !9638)
!9656 = !DILocation(line: 424, column: 1, scope: !9638)
!9657 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9567, file: !9567, line: 4195, type: !3082, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9658 = !DILocation(line: 4197, column: 3, scope: !9657)
!9659 = !DILocation(line: 4198, column: 1, scope: !9657)
!9660 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9567, file: !9567, line: 4184, type: !3082, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9661 = !DILocation(line: 4186, column: 3, scope: !9660)
!9662 = !DILocation(line: 4187, column: 1, scope: !9660)
!9663 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9567, file: !9567, line: 4205, type: !6341, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9664 = !DILocation(line: 4207, column: 11, scope: !9663)
!9665 = !DILocation(line: 4207, column: 44, scope: !9663)
!9666 = !DILocation(line: 4207, column: 3, scope: !9663)
!9667 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9567, file: !9567, line: 3007, type: !6341, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9668 = !DILocation(line: 3009, column: 11, scope: !9667)
!9669 = !DILocation(line: 3009, column: 44, scope: !9667)
!9670 = !DILocation(line: 3009, column: 3, scope: !9667)
!9671 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9567, file: !9567, line: 2987, type: !3082, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9672 = !DILocation(line: 2989, column: 3, scope: !9671)
!9673 = !DILocation(line: 2990, column: 1, scope: !9671)
!9674 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9567, file: !9567, line: 2939, type: !3082, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9675 = !DILocation(line: 2941, column: 3, scope: !9674)
!9676 = !DILocation(line: 2942, column: 1, scope: !9674)
!9677 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9567, file: !9567, line: 2949, type: !3082, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9678 = !DILocation(line: 2951, column: 3, scope: !9677)
!9679 = !DILocation(line: 2952, column: 1, scope: !9677)
!9680 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9567, file: !9567, line: 2969, type: !6341, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9681 = !DILocation(line: 2971, column: 11, scope: !9680)
!9682 = !DILocation(line: 2971, column: 44, scope: !9680)
!9683 = !DILocation(line: 2971, column: 3, scope: !9680)
!9684 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9567, file: !9567, line: 3143, type: !3082, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9685 = !DILocation(line: 3145, column: 3, scope: !9684)
!9686 = !DILocation(line: 3146, column: 1, scope: !9684)
!9687 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9567, file: !9567, line: 3163, type: !6341, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9688 = !DILocation(line: 3165, column: 11, scope: !9687)
!9689 = !DILocation(line: 3165, column: 46, scope: !9687)
!9690 = !DILocation(line: 3165, column: 3, scope: !9687)
!9691 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9692, file: !9692, line: 40, type: !6341, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !2156)
!9692 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9693 = !DILocation(line: 45, column: 3, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9695, file: !9692, line: 44, column: 44)
!9695 = distinct !DILexicalBlock(scope: !9696, file: !9692, line: 44, column: 13)
!9696 = distinct !DILexicalBlock(scope: !9691, file: !9692, line: 42, column: 6)
!9697 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9692, file: !9692, line: 56, type: !3082, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !2156)
!9698 = !DILocation(line: 58, column: 2, scope: !9697)
!9699 = !DILocation(line: 62, column: 1, scope: !9697)
!9700 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9567, file: !9567, line: 4304, type: !9701, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !9703)
!9701 = !DISubroutineType(types: !9702)
!9702 = !{null, !152, !152, !152, !152}
!9703 = !{!9704, !9705, !9706, !9707}
!9704 = !DILocalVariable(name: "Source", arg: 1, scope: !9700, file: !9567, line: 4304, type: !152)
!9705 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9700, file: !9567, line: 4304, type: !152)
!9706 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9700, file: !9567, line: 4304, type: !152)
!9707 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9700, file: !9567, line: 4304, type: !152)
!9708 = !DILocation(line: 0, scope: !9700)
!9709 = !DILocation(line: 4306, column: 3, scope: !9700)
!9710 = !DILocation(line: 4308, column: 3, scope: !9700)
!9711 = !DILocation(line: 4312, column: 1, scope: !9700)
!9712 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9692, file: !9692, line: 69, type: !3082, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !2156)
!9713 = !DILocation(line: 72, column: 2, scope: !9712)
!9714 = !DILocation(line: 73, column: 1, scope: !9712)
!9715 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9716, file: !9716, line: 1185, type: !6351, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !9717)
!9716 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9717 = !{!9718, !9719}
!9718 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9715, file: !9716, line: 1185, type: !152)
!9719 = !DILocalVariable(name: "tmpreg", scope: !9715, file: !9716, line: 1187, type: !227)
!9720 = !DILocation(line: 0, scope: !9715)
!9721 = !DILocation(line: 1187, column: 3, scope: !9715)
!9722 = !DILocation(line: 1187, column: 17, scope: !9715)
!9723 = !DILocation(line: 1188, column: 3, scope: !9715)
!9724 = !DILocation(line: 1190, column: 12, scope: !9715)
!9725 = !DILocation(line: 1190, column: 10, scope: !9715)
!9726 = !DILocation(line: 1191, column: 9, scope: !9715)
!9727 = !DILocation(line: 1192, column: 1, scope: !9715)
!9728 = distinct !DISubprogram(name: "uart_console_init", scope: !1149, file: !1149, line: 588, type: !1126, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !9729)
!9729 = !{!9730}
!9730 = !DILocalVariable(name: "arg", arg: 1, scope: !9728, file: !1149, line: 588, type: !1104)
!9731 = !DILocation(line: 0, scope: !9728)
!9732 = !DILocation(line: 593, column: 7, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9728, file: !1149, line: 593, column: 6)
!9734 = !DILocation(line: 593, column: 6, scope: !9728)
!9735 = !DILocation(line: 597, column: 2, scope: !9728)
!9736 = !DILocation(line: 599, column: 2, scope: !9728)
!9737 = !DILocation(line: 600, column: 1, scope: !9728)
!9738 = distinct !DISubprogram(name: "device_is_ready", scope: !9739, file: !9739, line: 47, type: !9740, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !9742)
!9739 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!9740 = !DISubroutineType(types: !9741)
!9741 = !{!145, !1104}
!9742 = !{!9743}
!9743 = !DILocalVariable(name: "dev", arg: 1, scope: !9738, file: !9739, line: 47, type: !1104)
!9744 = !DILocation(line: 0, scope: !9738)
!9745 = !DILocation(line: 55, column: 2, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9738, file: !9739, line: 55, column: 2)
!9747 = !{i64 2154963752}
!9748 = !DILocation(line: 56, column: 9, scope: !9738)
!9749 = !DILocation(line: 56, column: 2, scope: !9738)
!9750 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1149, file: !1149, line: 573, type: !3082, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !2156)
!9751 = !DILocation(line: 576, column: 2, scope: !9750)
!9752 = !DILocation(line: 579, column: 2, scope: !9750)
!9753 = !DILocation(line: 581, column: 1, scope: !9750)
!9754 = distinct !DISubprogram(name: "console_out", scope: !1149, file: !1149, line: 77, type: !214, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !9755)
!9755 = !{!9756}
!9756 = !DILocalVariable(name: "c", arg: 1, scope: !9754, file: !1149, line: 77, type: !107)
!9757 = !DILocation(line: 0, scope: !9754)
!9758 = !DILocation(line: 89, column: 11, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9754, file: !1149, line: 89, column: 6)
!9760 = !DILocation(line: 89, column: 6, scope: !9754)
!9761 = !DILocation(line: 90, column: 3, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9759, file: !1149, line: 89, column: 17)
!9763 = !DILocation(line: 91, column: 2, scope: !9762)
!9764 = !DILocation(line: 92, column: 34, scope: !9754)
!9765 = !DILocation(line: 92, column: 2, scope: !9754)
!9766 = !DILocation(line: 94, column: 2, scope: !9754)
!9767 = distinct !DISubprogram(name: "uart_poll_out", scope: !9768, file: !9768, line: 95, type: !1122, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !9769)
!9768 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/integration")
!9769 = !{!9770, !9771}
!9770 = !DILocalVariable(name: "dev", arg: 1, scope: !9767, file: !9768, line: 95, type: !1104)
!9771 = !DILocalVariable(name: "out_char", arg: 2, scope: !9767, file: !9768, line: 95, type: !196)
!9772 = !DILocation(line: 0, scope: !9767)
!9773 = !DILocation(line: 105, column: 2, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9767, file: !9768, line: 105, column: 2)
!9775 = !{i64 2155047143}
!9776 = !DILocation(line: 106, column: 2, scope: !9767)
!9777 = !DILocation(line: 107, column: 1, scope: !9767)
!9778 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1098, file: !1098, line: 574, type: !1122, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !9779)
!9779 = !{!9780, !9781, !9782}
!9780 = !DILocalVariable(name: "dev", arg: 1, scope: !9778, file: !1098, line: 574, type: !1104)
!9781 = !DILocalVariable(name: "out_char", arg: 2, scope: !9778, file: !1098, line: 575, type: !196)
!9782 = !DILocalVariable(name: "api", scope: !9778, file: !1098, line: 577, type: !1095)
!9783 = !DILocation(line: 0, scope: !9778)
!9784 = !DILocation(line: 578, column: 40, scope: !9778)
!9785 = !DILocation(line: 580, column: 7, scope: !9778)
!9786 = !DILocation(line: 580, column: 2, scope: !9778)
!9787 = !DILocation(line: 581, column: 1, scope: !9778)
!9788 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !9740, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !9789)
!9789 = !{!9790}
!9790 = !DILocalVariable(name: "dev", arg: 1, scope: !9788, file: !247, line: 730, type: !1104)
!9791 = !DILocation(line: 0, scope: !9788)
!9792 = !DILocation(line: 732, column: 9, scope: !9788)
!9793 = !DILocation(line: 732, column: 2, scope: !9788)
!9794 = distinct !DISubprogram(name: "uart_register_input", scope: !1149, file: !1149, line: 560, type: !9795, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !9842)
!9795 = !DISubroutineType(types: !9796)
!9796 = !{null, !9797, !9797, !9839}
!9797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9798, size: 32)
!9798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !406, line: 2208, size: 160, elements: !9799)
!9799 = !{!9800}
!9800 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9798, file: !406, line: 2209, baseType: !9801, size: 160)
!9801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !406, line: 1709, size: 160, elements: !9802)
!9802 = !{!9803, !9816, !9820}
!9803 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9801, file: !406, line: 1710, baseType: !9804, size: 64)
!9804 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9805, line: 46, baseType: !9806)
!9805 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9805, line: 41, size: 64, elements: !9807)
!9807 = !{!9808, !9815}
!9808 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9806, file: !9805, line: 42, baseType: !9809, size: 32)
!9809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9810, size: 32)
!9810 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9805, line: 39, baseType: !9811)
!9811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9805, line: 35, size: 32, elements: !9812)
!9812 = !{!9813}
!9813 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9811, file: !9805, line: 36, baseType: !9814, size: 32)
!9814 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9805, line: 32, baseType: !152)
!9815 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9806, file: !9805, line: 43, baseType: !9809, size: 32, offset: 32)
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9801, file: !406, line: 1711, baseType: !9817, size: 32, offset: 64)
!9817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !9818)
!9818 = !{!9819}
!9819 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9817, file: !420, line: 52, baseType: !22, size: 32)
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9801, file: !406, line: 1712, baseType: !9821, size: 64, offset: 96)
!9821 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !9822)
!9822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !9823)
!9823 = !{!9824}
!9824 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9822, file: !345, line: 232, baseType: !9825, size: 64)
!9825 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !9826)
!9826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !9827)
!9827 = !{!9828, !9834}
!9828 = !DIDerivedType(tag: DW_TAG_member, scope: !9826, file: !319, line: 38, baseType: !9829, size: 32)
!9829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9826, file: !319, line: 38, size: 32, elements: !9830)
!9830 = !{!9831, !9833}
!9831 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9829, file: !319, line: 39, baseType: !9832, size: 32)
!9832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9826, size: 32)
!9833 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9829, file: !319, line: 40, baseType: !9832, size: 32)
!9834 = !DIDerivedType(tag: DW_TAG_member, scope: !9826, file: !319, line: 42, baseType: !9835, size: 32, offset: 32)
!9835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9826, file: !319, line: 42, size: 32, elements: !9836)
!9836 = !{!9837, !9838}
!9837 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9835, file: !319, line: 43, baseType: !9832, size: 32)
!9838 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9835, file: !319, line: 44, baseType: !9832, size: 32)
!9839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9840, size: 32)
!9840 = !DISubroutineType(types: !9841)
!9841 = !{!195, !193, !195}
!9842 = !{!9843, !9844, !9845}
!9843 = !DILocalVariable(name: "avail", arg: 1, scope: !9794, file: !1149, line: 560, type: !9797)
!9844 = !DILocalVariable(name: "lines", arg: 2, scope: !9794, file: !1149, line: 560, type: !9797)
!9845 = !DILocalVariable(name: "completion", arg: 3, scope: !9794, file: !1149, line: 561, type: !9839)
!9846 = !DILocation(line: 0, scope: !9794)
!9847 = !DILocation(line: 566, column: 1, scope: !9794)
!9848 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1329, file: !1329, line: 523, type: !1185, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !9849)
!9849 = !{!9850, !9851, !9852, !9853, !9854}
!9850 = !DILocalVariable(name: "dev", arg: 1, scope: !9848, file: !1329, line: 523, type: !1187)
!9851 = !DILocalVariable(name: "pin", arg: 2, scope: !9848, file: !1329, line: 524, type: !1202)
!9852 = !DILocalVariable(name: "flags", arg: 3, scope: !9848, file: !1329, line: 524, type: !1203)
!9853 = !DILocalVariable(name: "err", scope: !9848, file: !1329, line: 526, type: !107)
!9854 = !DILocalVariable(name: "pincfg", scope: !9848, file: !1329, line: 527, type: !107)
!9855 = !DILocation(line: 0, scope: !9848)
!9856 = !DILocation(line: 527, column: 2, scope: !9848)
!9857 = !DILocation(line: 532, column: 8, scope: !9848)
!9858 = !DILocation(line: 533, column: 10, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9848, file: !1329, line: 533, column: 6)
!9860 = !DILocation(line: 533, column: 6, scope: !9848)
!9861 = !DILocation(line: 543, column: 13, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9848, file: !1329, line: 543, column: 6)
!9863 = !DILocation(line: 543, column: 28, scope: !9862)
!9864 = !DILocation(line: 543, column: 6, scope: !9848)
!9865 = !DILocation(line: 544, column: 14, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9867, file: !1329, line: 544, column: 7)
!9867 = distinct !DILexicalBlock(scope: !9862, file: !1329, line: 543, column: 34)
!9868 = !DILocation(line: 544, column: 39, scope: !9866)
!9869 = !DILocation(line: 544, column: 7, scope: !9867)
!9870 = !DILocation(line: 545, column: 38, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9866, file: !1329, line: 544, column: 45)
!9872 = !DILocation(line: 545, column: 4, scope: !9871)
!9873 = !DILocation(line: 546, column: 3, scope: !9871)
!9874 = !DILocation(line: 546, column: 21, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9866, file: !1329, line: 546, column: 14)
!9876 = !DILocation(line: 546, column: 45, scope: !9875)
!9877 = !DILocation(line: 546, column: 14, scope: !9866)
!9878 = !DILocation(line: 547, column: 40, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9875, file: !1329, line: 546, column: 51)
!9880 = !DILocation(line: 547, column: 4, scope: !9879)
!9881 = !DILocation(line: 548, column: 3, scope: !9879)
!9882 = !DILocation(line: 551, column: 32, scope: !9848)
!9883 = !DILocation(line: 551, column: 37, scope: !9848)
!9884 = !DILocation(line: 551, column: 2, scope: !9848)
!9885 = !DILocation(line: 554, column: 6, scope: !9848)
!9886 = !DILocation(line: 562, column: 1, scope: !9848)
!9887 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1329, file: !1329, line: 410, type: !9888, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !9890)
!9888 = !DISubroutineType(types: !9889)
!9889 = !{!107, !1187, !1014}
!9890 = !{!9891, !9892, !9893, !9895}
!9891 = !DILocalVariable(name: "dev", arg: 1, scope: !9887, file: !1329, line: 410, type: !1187)
!9892 = !DILocalVariable(name: "value", arg: 2, scope: !9887, file: !1329, line: 410, type: !1014)
!9893 = !DILocalVariable(name: "cfg", scope: !9887, file: !1329, line: 412, type: !9894)
!9894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 32)
!9895 = !DILocalVariable(name: "gpio", scope: !9887, file: !1329, line: 413, type: !1260)
!9896 = !DILocation(line: 0, scope: !9887)
!9897 = !DILocation(line: 412, column: 45, scope: !9887)
!9898 = !DILocation(line: 413, column: 44, scope: !9887)
!9899 = !DILocation(line: 415, column: 11, scope: !9887)
!9900 = !DILocation(line: 415, column: 9, scope: !9887)
!9901 = !DILocation(line: 417, column: 2, scope: !9887)
!9902 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1329, file: !1329, line: 420, type: !1212, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !9903)
!9903 = !{!9904, !9905, !9906, !9907, !9908, !9909}
!9904 = !DILocalVariable(name: "dev", arg: 1, scope: !9902, file: !1329, line: 420, type: !1187)
!9905 = !DILocalVariable(name: "mask", arg: 2, scope: !9902, file: !1329, line: 421, type: !1214)
!9906 = !DILocalVariable(name: "value", arg: 3, scope: !9902, file: !1329, line: 422, type: !1209)
!9907 = !DILocalVariable(name: "cfg", scope: !9902, file: !1329, line: 424, type: !9894)
!9908 = !DILocalVariable(name: "gpio", scope: !9902, file: !1329, line: 425, type: !1260)
!9909 = !DILocalVariable(name: "port_value", scope: !9902, file: !1329, line: 426, type: !152)
!9910 = !DILocation(line: 0, scope: !9902)
!9911 = !DILocation(line: 424, column: 45, scope: !9902)
!9912 = !DILocation(line: 425, column: 44, scope: !9902)
!9913 = !DILocation(line: 430, column: 15, scope: !9902)
!9914 = !DILocation(line: 431, column: 46, scope: !9902)
!9915 = !DILocation(line: 431, column: 44, scope: !9902)
!9916 = !DILocation(line: 431, column: 61, scope: !9902)
!9917 = !DILocation(line: 431, column: 53, scope: !9902)
!9918 = !DILocation(line: 431, column: 2, scope: !9902)
!9919 = !DILocation(line: 435, column: 2, scope: !9902)
!9920 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1329, file: !1329, line: 438, type: !1217, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !9921)
!9921 = !{!9922, !9923, !9924, !9925}
!9922 = !DILocalVariable(name: "dev", arg: 1, scope: !9920, file: !1329, line: 438, type: !1187)
!9923 = !DILocalVariable(name: "pins", arg: 2, scope: !9920, file: !1329, line: 439, type: !1214)
!9924 = !DILocalVariable(name: "cfg", scope: !9920, file: !1329, line: 441, type: !9894)
!9925 = !DILocalVariable(name: "gpio", scope: !9920, file: !1329, line: 442, type: !1260)
!9926 = !DILocation(line: 0, scope: !9920)
!9927 = !DILocation(line: 441, column: 45, scope: !9920)
!9928 = !DILocation(line: 442, column: 44, scope: !9920)
!9929 = !DILocation(line: 448, column: 2, scope: !9920)
!9930 = !DILocation(line: 450, column: 2, scope: !9920)
!9931 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1329, file: !1329, line: 453, type: !1217, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !9932)
!9932 = !{!9933, !9934, !9935, !9936}
!9933 = !DILocalVariable(name: "dev", arg: 1, scope: !9931, file: !1329, line: 453, type: !1187)
!9934 = !DILocalVariable(name: "pins", arg: 2, scope: !9931, file: !1329, line: 454, type: !1214)
!9935 = !DILocalVariable(name: "cfg", scope: !9931, file: !1329, line: 456, type: !9894)
!9936 = !DILocalVariable(name: "gpio", scope: !9931, file: !1329, line: 457, type: !1260)
!9937 = !DILocation(line: 0, scope: !9931)
!9938 = !DILocation(line: 456, column: 45, scope: !9931)
!9939 = !DILocation(line: 457, column: 44, scope: !9931)
!9940 = !DILocation(line: 467, column: 2, scope: !9931)
!9941 = !DILocation(line: 470, column: 2, scope: !9931)
!9942 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1329, file: !1329, line: 473, type: !1217, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !9943)
!9943 = !{!9944, !9945, !9946, !9947}
!9944 = !DILocalVariable(name: "dev", arg: 1, scope: !9942, file: !1329, line: 473, type: !1187)
!9945 = !DILocalVariable(name: "pins", arg: 2, scope: !9942, file: !1329, line: 474, type: !1214)
!9946 = !DILocalVariable(name: "cfg", scope: !9942, file: !1329, line: 476, type: !9894)
!9947 = !DILocalVariable(name: "gpio", scope: !9942, file: !1329, line: 477, type: !1260)
!9948 = !DILocation(line: 0, scope: !9942)
!9949 = !DILocation(line: 476, column: 45, scope: !9942)
!9950 = !DILocation(line: 477, column: 44, scope: !9942)
!9951 = !DILocation(line: 484, column: 2, scope: !9942)
!9952 = !DILocation(line: 487, column: 2, scope: !9942)
!9953 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1329, file: !1329, line: 594, type: !1223, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !9954)
!9954 = !{!9955, !9956, !9957, !9958, !9959, !9960, !9962, !9963, !9964}
!9955 = !DILocalVariable(name: "dev", arg: 1, scope: !9953, file: !1329, line: 594, type: !1187)
!9956 = !DILocalVariable(name: "pin", arg: 2, scope: !9953, file: !1329, line: 595, type: !1202)
!9957 = !DILocalVariable(name: "mode", arg: 3, scope: !9953, file: !1329, line: 596, type: !1161)
!9958 = !DILocalVariable(name: "trig", arg: 4, scope: !9953, file: !1329, line: 597, type: !1167)
!9959 = !DILocalVariable(name: "cfg", scope: !9953, file: !1329, line: 599, type: !9894)
!9960 = !DILocalVariable(name: "data", scope: !9953, file: !1329, line: 600, type: !9961)
!9961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 32)
!9962 = !DILocalVariable(name: "edge", scope: !9953, file: !1329, line: 601, type: !107)
!9963 = !DILocalVariable(name: "err", scope: !9953, file: !1329, line: 602, type: !107)
!9964 = !DILabel(scope: !9953, name: "exit", file: !1329, line: 643)
!9965 = !DILocation(line: 0, scope: !9953)
!9966 = !DILocation(line: 599, column: 45, scope: !9953)
!9967 = !DILocation(line: 604, column: 6, scope: !9953)
!9968 = !DILocation(line: 605, column: 34, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9970, file: !1329, line: 605, column: 7)
!9970 = distinct !DILexicalBlock(scope: !9971, file: !1329, line: 604, column: 38)
!9971 = distinct !DILexicalBlock(scope: !9953, file: !1329, line: 604, column: 6)
!9972 = !DILocation(line: 605, column: 7, scope: !9969)
!9973 = !DILocation(line: 605, column: 47, scope: !9969)
!9974 = !DILocation(line: 605, column: 39, scope: !9969)
!9975 = !DILocation(line: 605, column: 7, scope: !9970)
!9976 = !DILocation(line: 606, column: 4, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9969, file: !1329, line: 605, column: 53)
!9978 = !DILocation(line: 607, column: 4, scope: !9977)
!9979 = !DILocation(line: 608, column: 4, scope: !9977)
!9980 = !DILocation(line: 609, column: 3, scope: !9977)
!9981 = !DILocation(line: 600, column: 38, scope: !9953)
!9982 = !DILocation(line: 620, column: 30, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9953, file: !1329, line: 620, column: 6)
!9984 = !DILocation(line: 620, column: 6, scope: !9983)
!9985 = !DILocation(line: 620, column: 57, scope: !9983)
!9986 = !DILocation(line: 620, column: 6, scope: !9953)
!9987 = !DILocation(line: 625, column: 29, scope: !9953)
!9988 = !DILocation(line: 625, column: 2, scope: !9953)
!9989 = !DILocation(line: 627, column: 2, scope: !9953)
!9990 = !DILocation(line: 630, column: 3, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9953, file: !1329, line: 627, column: 16)
!9992 = !DILocation(line: 633, column: 3, scope: !9991)
!9993 = !DILocation(line: 636, column: 3, scope: !9991)
!9994 = !DILocation(line: 639, column: 2, scope: !9953)
!9995 = !DILocation(line: 641, column: 2, scope: !9953)
!9996 = !DILocation(line: 643, column: 1, scope: !9953)
!9997 = !DILocation(line: 644, column: 2, scope: !9953)
!9998 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1329, file: !1329, line: 647, type: !1227, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !9999)
!9999 = !{!10000, !10001, !10002, !10003}
!10000 = !DILocalVariable(name: "dev", arg: 1, scope: !9998, file: !1329, line: 647, type: !1187)
!10001 = !DILocalVariable(name: "callback", arg: 2, scope: !9998, file: !1329, line: 648, type: !1229)
!10002 = !DILocalVariable(name: "set", arg: 3, scope: !9998, file: !1329, line: 649, type: !145)
!10003 = !DILocalVariable(name: "data", scope: !9998, file: !1329, line: 651, type: !9961)
!10004 = !DILocation(line: 0, scope: !9998)
!10005 = !DILocation(line: 651, column: 38, scope: !9998)
!10006 = !DILocation(line: 653, column: 37, scope: !9998)
!10007 = !DILocation(line: 653, column: 9, scope: !9998)
!10008 = !DILocation(line: 653, column: 2, scope: !9998)
!10009 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10010, file: !10010, line: 38, type: !10011, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10014)
!10010 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10011 = !DISubroutineType(types: !10012)
!10012 = !{!107, !10013, !1229, !145}
!10013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!10014 = !{!10015, !10016, !10017}
!10015 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10009, file: !10010, line: 38, type: !10013)
!10016 = !DILocalVariable(name: "callback", arg: 2, scope: !10009, file: !10010, line: 39, type: !1229)
!10017 = !DILocalVariable(name: "set", arg: 3, scope: !10009, file: !10010, line: 40, type: !145)
!10018 = !DILocation(line: 0, scope: !10009)
!10019 = !DILocation(line: 42, column: 2, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10021, file: !10010, line: 42, column: 2)
!10021 = distinct !DILexicalBlock(scope: !10009, file: !10010, line: 42, column: 2)
!10022 = !DILocation(line: 42, column: 2, scope: !10021)
!10023 = !DILocation(line: 42, column: 2, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10020, file: !10010, line: 42, column: 2)
!10025 = !DILocation(line: 43, column: 2, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10027, file: !10010, line: 43, column: 2)
!10027 = distinct !DILexicalBlock(scope: !10009, file: !10010, line: 43, column: 2)
!10028 = !DILocation(line: 43, column: 2, scope: !10027)
!10029 = !DILocation(line: 43, column: 2, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10026, file: !10010, line: 43, column: 2)
!10031 = !DILocation(line: 45, column: 7, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10009, file: !10010, line: 45, column: 6)
!10033 = !DILocation(line: 45, column: 6, scope: !10009)
!10034 = !DILocation(line: 46, column: 56, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10036, file: !10010, line: 46, column: 7)
!10036 = distinct !DILexicalBlock(scope: !10032, file: !10010, line: 45, column: 38)
!10037 = !DILocation(line: 46, column: 8, scope: !10035)
!10038 = !DILocation(line: 46, column: 7, scope: !10036)
!10039 = !DILocation(line: 51, column: 13, scope: !10032)
!10040 = !DILocation(line: 56, column: 43, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !10042, file: !10010, line: 55, column: 11)
!10042 = distinct !DILexicalBlock(scope: !10009, file: !10010, line: 55, column: 6)
!10043 = !DILocation(line: 56, column: 3, scope: !10041)
!10044 = !DILocation(line: 57, column: 2, scope: !10041)
!10045 = !DILocation(line: 60, column: 1, scope: !10009)
!10046 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1234, file: !1234, line: 261, type: !10047, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10049)
!10047 = !DISubroutineType(types: !10048)
!10048 = !{!145, !10013}
!10049 = !{!10050}
!10050 = !DILocalVariable(name: "list", arg: 1, scope: !10046, file: !1234, line: 261, type: !10013)
!10051 = !DILocation(line: 0, scope: !10046)
!10052 = !DILocation(line: 261, column: 1, scope: !10046)
!10053 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1234, file: !1234, line: 417, type: !10054, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10056)
!10054 = !DISubroutineType(types: !10055)
!10055 = !{!145, !10013, !1405}
!10056 = !{!10057, !10058, !10059, !10060}
!10057 = !DILocalVariable(name: "list", arg: 1, scope: !10053, file: !1234, line: 417, type: !10013)
!10058 = !DILocalVariable(name: "node", arg: 2, scope: !10053, file: !1234, line: 417, type: !1405)
!10059 = !DILocalVariable(name: "prev", scope: !10053, file: !1234, line: 417, type: !1405)
!10060 = !DILocalVariable(name: "test", scope: !10053, file: !1234, line: 417, type: !1405)
!10061 = !DILocation(line: 0, scope: !10053)
!10062 = !DILocation(line: 417, column: 1, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10053, file: !1234, line: 417, column: 1)
!10064 = !DILocation(line: 417, column: 1, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10063, file: !1234, line: 417, column: 1)
!10066 = !DILocation(line: 417, column: 1, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10068, file: !1234, line: 417, column: 1)
!10068 = distinct !DILexicalBlock(scope: !10065, file: !1234, line: 417, column: 1)
!10069 = !DILocation(line: 417, column: 1, scope: !10068)
!10070 = distinct !{!10070, !10062, !10062}
!10071 = !DILocation(line: 417, column: 1, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10067, file: !1234, line: 417, column: 1)
!10073 = !DILocation(line: 417, column: 1, scope: !10053)
!10074 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1234, file: !1234, line: 298, type: !10075, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10077)
!10075 = !DISubroutineType(types: !10076)
!10076 = !{null, !10013, !1405}
!10077 = !{!10078, !10079}
!10078 = !DILocalVariable(name: "list", arg: 1, scope: !10074, file: !1234, line: 298, type: !10013)
!10079 = !DILocalVariable(name: "node", arg: 2, scope: !10074, file: !1234, line: 298, type: !1405)
!10080 = !DILocation(line: 0, scope: !10074)
!10081 = !DILocation(line: 298, column: 1, scope: !10074)
!10082 = !DILocation(line: 298, column: 1, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10074, file: !1234, line: 298, column: 1)
!10084 = !DILocation(line: 298, column: 1, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10083, file: !1234, line: 298, column: 1)
!10086 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1234, file: !1234, line: 231, type: !10087, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10089)
!10087 = !DISubroutineType(types: !10088)
!10088 = !{!1405, !10013}
!10089 = !{!10090}
!10090 = !DILocalVariable(name: "list", arg: 1, scope: !10086, file: !1234, line: 231, type: !10013)
!10091 = !DILocation(line: 0, scope: !10086)
!10092 = !DILocation(line: 233, column: 15, scope: !10086)
!10093 = !DILocation(line: 233, column: 2, scope: !10086)
!10094 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1234, file: !1234, line: 209, type: !10095, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10097)
!10095 = !DISubroutineType(types: !10096)
!10096 = !{null, !1405, !1405}
!10097 = !{!10098, !10099}
!10098 = !DILocalVariable(name: "parent", arg: 1, scope: !10094, file: !1234, line: 209, type: !1405)
!10099 = !DILocalVariable(name: "child", arg: 2, scope: !10094, file: !1234, line: 209, type: !1405)
!10100 = !DILocation(line: 0, scope: !10094)
!10101 = !DILocation(line: 211, column: 10, scope: !10094)
!10102 = !DILocation(line: 211, column: 15, scope: !10094)
!10103 = !DILocation(line: 212, column: 1, scope: !10094)
!10104 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1234, file: !1234, line: 214, type: !10075, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10105)
!10105 = !{!10106, !10107}
!10106 = !DILocalVariable(name: "list", arg: 1, scope: !10104, file: !1234, line: 214, type: !10013)
!10107 = !DILocalVariable(name: "node", arg: 2, scope: !10104, file: !1234, line: 214, type: !1405)
!10108 = !DILocation(line: 0, scope: !10104)
!10109 = !DILocation(line: 216, column: 8, scope: !10104)
!10110 = !DILocation(line: 216, column: 13, scope: !10104)
!10111 = !DILocation(line: 217, column: 1, scope: !10104)
!10112 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1234, file: !1234, line: 243, type: !10087, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10113)
!10113 = !{!10114}
!10114 = !DILocalVariable(name: "list", arg: 1, scope: !10112, file: !1234, line: 243, type: !10013)
!10115 = !DILocation(line: 0, scope: !10112)
!10116 = !DILocation(line: 245, column: 15, scope: !10112)
!10117 = !DILocation(line: 245, column: 2, scope: !10112)
!10118 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1234, file: !1234, line: 219, type: !10075, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10119)
!10119 = !{!10120, !10121}
!10120 = !DILocalVariable(name: "list", arg: 1, scope: !10118, file: !1234, line: 219, type: !10013)
!10121 = !DILocalVariable(name: "node", arg: 2, scope: !10118, file: !1234, line: 219, type: !1405)
!10122 = !DILocation(line: 0, scope: !10118)
!10123 = !DILocation(line: 221, column: 8, scope: !10118)
!10124 = !DILocation(line: 221, column: 13, scope: !10118)
!10125 = !DILocation(line: 222, column: 1, scope: !10118)
!10126 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1234, file: !1234, line: 401, type: !10127, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10129)
!10127 = !DISubroutineType(types: !10128)
!10128 = !{null, !10013, !1405, !1405}
!10129 = !{!10130, !10131, !10132}
!10130 = !DILocalVariable(name: "list", arg: 1, scope: !10126, file: !1234, line: 401, type: !10013)
!10131 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10126, file: !1234, line: 401, type: !1405)
!10132 = !DILocalVariable(name: "node", arg: 3, scope: !10126, file: !1234, line: 401, type: !1405)
!10133 = !DILocation(line: 0, scope: !10126)
!10134 = !DILocation(line: 401, column: 1, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10126, file: !1234, line: 401, column: 1)
!10136 = !DILocation(line: 0, scope: !10135)
!10137 = !DILocation(line: 401, column: 1, scope: !10126)
!10138 = !DILocation(line: 401, column: 1, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10135, file: !1234, line: 401, column: 1)
!10140 = !DILocation(line: 401, column: 1, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10139, file: !1234, line: 401, column: 1)
!10142 = !DILocation(line: 401, column: 1, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10141, file: !1234, line: 401, column: 1)
!10144 = !DILocation(line: 401, column: 1, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10135, file: !1234, line: 401, column: 1)
!10146 = !DILocation(line: 401, column: 1, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10145, file: !1234, line: 401, column: 1)
!10148 = !DILocation(line: 401, column: 1, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10147, file: !1234, line: 401, column: 1)
!10150 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1234, file: !1234, line: 285, type: !10151, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10153)
!10151 = !DISubroutineType(types: !10152)
!10152 = !{!1405, !1405}
!10153 = !{!10154}
!10154 = !DILocalVariable(name: "node", arg: 1, scope: !10150, file: !1234, line: 285, type: !1405)
!10155 = !DILocation(line: 0, scope: !10150)
!10156 = !DILocation(line: 285, column: 1, scope: !10150)
!10157 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1234, file: !1234, line: 274, type: !10151, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10158)
!10158 = !{!10159}
!10159 = !DILocalVariable(name: "node", arg: 1, scope: !10157, file: !1234, line: 274, type: !1405)
!10160 = !DILocation(line: 0, scope: !10157)
!10161 = !DILocation(line: 274, column: 1, scope: !10157)
!10162 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1234, file: !1234, line: 204, type: !10151, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10163)
!10163 = !{!10164}
!10164 = !DILocalVariable(name: "node", arg: 1, scope: !10162, file: !1234, line: 204, type: !1405)
!10165 = !DILocation(line: 0, scope: !10162)
!10166 = !DILocation(line: 206, column: 15, scope: !10162)
!10167 = !DILocation(line: 206, column: 2, scope: !10162)
!10168 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1329, file: !1329, line: 342, type: !214, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10169)
!10169 = !{!10170, !10171, !10172}
!10170 = !DILocalVariable(name: "pin", arg: 1, scope: !10168, file: !1329, line: 342, type: !107)
!10171 = !DILocalVariable(name: "line", scope: !10168, file: !1329, line: 344, type: !152)
!10172 = !DILocalVariable(name: "port", scope: !10168, file: !1329, line: 345, type: !107)
!10173 = !DILocation(line: 0, scope: !10168)
!10174 = !DILocation(line: 344, column: 18, scope: !10168)
!10175 = !{i32 983040, i32 0}
!10176 = !DILocation(line: 356, column: 9, scope: !10168)
!10177 = !DILocation(line: 370, column: 2, scope: !10168)
!10178 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1329, file: !1329, line: 37, type: !878, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10179)
!10179 = !{!10180, !10181, !10182}
!10180 = !DILocalVariable(name: "line", arg: 1, scope: !10178, file: !1329, line: 37, type: !107)
!10181 = !DILocalVariable(name: "arg", arg: 2, scope: !10178, file: !1329, line: 37, type: !106)
!10182 = !DILocalVariable(name: "data", scope: !10178, file: !1329, line: 39, type: !9961)
!10183 = !DILocation(line: 0, scope: !10178)
!10184 = !DILocation(line: 41, column: 29, scope: !10178)
!10185 = !DILocation(line: 41, column: 39, scope: !10178)
!10186 = !DILocation(line: 41, column: 44, scope: !10178)
!10187 = !DILocation(line: 41, column: 2, scope: !10178)
!10188 = !DILocation(line: 42, column: 1, scope: !10178)
!10189 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1329, file: !1329, line: 376, type: !10190, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10192)
!10190 = !DISubroutineType(types: !10191)
!10191 = !{!107, !107, !107}
!10192 = !{!10193, !10194, !10195, !10197, !10198}
!10193 = !DILocalVariable(name: "port", arg: 1, scope: !10189, file: !1329, line: 376, type: !107)
!10194 = !DILocalVariable(name: "pin", arg: 2, scope: !10189, file: !1329, line: 376, type: !107)
!10195 = !DILocalVariable(name: "clk", scope: !10189, file: !1329, line: 386, type: !10196)
!10196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1187)
!10197 = !DILocalVariable(name: "pclken", scope: !10189, file: !1329, line: 387, type: !1448)
!10198 = !DILocalVariable(name: "ret", scope: !10189, file: !1329, line: 396, type: !107)
!10199 = !DILocation(line: 0, scope: !10189)
!10200 = !DILocation(line: 387, column: 2, scope: !10189)
!10201 = !DILocation(line: 387, column: 22, scope: !10189)
!10202 = !DILocation(line: 399, column: 8, scope: !10189)
!10203 = !DILocation(line: 400, column: 10, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10189, file: !1329, line: 400, column: 6)
!10205 = !DILocation(line: 400, column: 6, scope: !10189)
!10206 = !DILocation(line: 405, column: 2, scope: !10189)
!10207 = !DILocation(line: 407, column: 2, scope: !10189)
!10208 = !DILocation(line: 408, column: 1, scope: !10189)
!10209 = distinct !DISubprogram(name: "clock_control_on", scope: !965, file: !965, line: 123, type: !1294, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10210)
!10210 = !{!10211, !10212, !10213}
!10211 = !DILocalVariable(name: "dev", arg: 1, scope: !10209, file: !965, line: 123, type: !1187)
!10212 = !DILocalVariable(name: "sys", arg: 2, scope: !10209, file: !965, line: 124, type: !1058)
!10213 = !DILocalVariable(name: "api", scope: !10209, file: !965, line: 126, type: !1287)
!10214 = !DILocation(line: 0, scope: !10209)
!10215 = !DILocation(line: 127, column: 49, scope: !10209)
!10216 = !DILocation(line: 129, column: 14, scope: !10209)
!10217 = !DILocation(line: 129, column: 9, scope: !10209)
!10218 = !DILocation(line: 129, column: 2, scope: !10209)
!10219 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1329, file: !1329, line: 311, type: !9325, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10220)
!10220 = !{!10221, !10222, !10223}
!10221 = !DILocalVariable(name: "port", arg: 1, scope: !10219, file: !1329, line: 311, type: !107)
!10222 = !DILocalVariable(name: "pin", arg: 2, scope: !10219, file: !1329, line: 311, type: !107)
!10223 = !DILocalVariable(name: "line", scope: !10219, file: !1329, line: 313, type: !152)
!10224 = !DILocation(line: 0, scope: !10219)
!10225 = !DILocation(line: 313, column: 18, scope: !10219)
!10226 = !DILocation(line: 337, column: 2, scope: !10219)
!10227 = !DILocation(line: 340, column: 1, scope: !10219)
!10228 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1329, file: !1329, line: 295, type: !10229, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10231)
!10229 = !DISubroutineType(types: !10230)
!10230 = !{!152, !107}
!10231 = !{!10232}
!10232 = !DILocalVariable(name: "pin", arg: 1, scope: !10228, file: !1329, line: 295, type: !107)
!10233 = !DILocation(line: 0, scope: !10228)
!10234 = !DILocation(line: 307, column: 46, scope: !10228)
!10235 = !DILocation(line: 307, column: 27, scope: !10228)
!10236 = !DILocation(line: 307, column: 32, scope: !10228)
!10237 = !DILocation(line: 307, column: 14, scope: !10228)
!10238 = !DILocation(line: 307, column: 39, scope: !10228)
!10239 = !DILocation(line: 307, column: 2, scope: !10228)
!10240 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5956, file: !5956, line: 671, type: !10241, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10243)
!10241 = !DISubroutineType(types: !10242)
!10242 = !{null, !152, !152}
!10243 = !{!10244, !10245}
!10244 = !DILocalVariable(name: "Port", arg: 1, scope: !10240, file: !5956, line: 671, type: !152)
!10245 = !DILocalVariable(name: "Line", arg: 2, scope: !10240, file: !5956, line: 671, type: !152)
!10246 = !DILocation(line: 0, scope: !10240)
!10247 = !DILocation(line: 673, column: 3, scope: !10240)
!10248 = !DILocalVariable(name: "value", arg: 1, scope: !10249, file: !6254, line: 373, type: !152)
!10249 = distinct !DISubprogram(name: "__RBIT", scope: !6254, file: !6254, line: 373, type: !7541, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10250)
!10250 = !{!10248, !10251}
!10251 = !DILocalVariable(name: "result", scope: !10249, file: !6254, line: 375, type: !152)
!10252 = !DILocation(line: 0, scope: !10249, inlinedAt: !10253)
!10253 = distinct !DILocation(line: 673, column: 3, scope: !10240)
!10254 = !DILocation(line: 380, column: 4, scope: !10249, inlinedAt: !10253)
!10255 = !{i64 3504495}
!10256 = !DILocalVariable(name: "value", arg: 1, scope: !10257, file: !6254, line: 403, type: !152)
!10257 = distinct !DISubprogram(name: "__CLZ", scope: !6254, file: !6254, line: 403, type: !10258, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10260)
!10258 = !DISubroutineType(types: !10259)
!10259 = !{!195, !152}
!10260 = !{!10256}
!10261 = !DILocation(line: 0, scope: !10257, inlinedAt: !10262)
!10262 = distinct !DILocation(line: 673, column: 3, scope: !10240)
!10263 = !DILocation(line: 414, column: 7, scope: !10257, inlinedAt: !10262)
!10264 = !DILocation(line: 674, column: 1, scope: !10240)
!10265 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10010, file: !10010, line: 69, type: !10266, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10268)
!10266 = !DISubroutineType(types: !10267)
!10267 = !{null, !10013, !1187, !152}
!10268 = !{!10269, !10270, !10271, !10272, !10273}
!10269 = !DILocalVariable(name: "list", arg: 1, scope: !10265, file: !10010, line: 69, type: !10013)
!10270 = !DILocalVariable(name: "port", arg: 2, scope: !10265, file: !10010, line: 70, type: !1187)
!10271 = !DILocalVariable(name: "pins", arg: 3, scope: !10265, file: !10010, line: 71, type: !152)
!10272 = !DILocalVariable(name: "cb", scope: !10265, file: !10010, line: 73, type: !1229)
!10273 = !DILocalVariable(name: "tmp", scope: !10265, file: !10010, line: 73, type: !1229)
!10274 = !DILocation(line: 0, scope: !10265)
!10275 = !DILocation(line: 75, column: 2, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10265, file: !10010, line: 75, column: 2)
!10277 = !DILocation(line: 0, scope: !10276)
!10278 = !DILocation(line: 76, column: 11, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10280, file: !10010, line: 76, column: 7)
!10280 = distinct !DILexicalBlock(scope: !10281, file: !10010, line: 75, column: 57)
!10281 = distinct !DILexicalBlock(scope: !10276, file: !10010, line: 75, column: 2)
!10282 = !DILocation(line: 76, column: 20, scope: !10279)
!10283 = !DILocation(line: 76, column: 7, scope: !10280)
!10284 = !DILocation(line: 77, column: 4, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10286, file: !10010, line: 77, column: 4)
!10286 = distinct !DILexicalBlock(scope: !10287, file: !10010, line: 77, column: 4)
!10287 = distinct !DILexicalBlock(scope: !10279, file: !10010, line: 76, column: 28)
!10288 = !DILocation(line: 77, column: 4, scope: !10286)
!10289 = !DILocation(line: 77, column: 4, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10285, file: !10010, line: 77, column: 4)
!10291 = !DILocation(line: 78, column: 4, scope: !10287)
!10292 = !DILocation(line: 79, column: 3, scope: !10287)
!10293 = !DILocation(line: 75, column: 2, scope: !10281)
!10294 = !DILocation(line: 81, column: 1, scope: !10265)
!10295 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5956, file: !5956, line: 710, type: !7541, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10296)
!10296 = !{!10297}
!10297 = !DILocalVariable(name: "Line", arg: 1, scope: !10295, file: !5956, line: 710, type: !152)
!10298 = !DILocation(line: 0, scope: !10295)
!10299 = !DILocation(line: 712, column: 21, scope: !10295)
!10300 = !DILocation(line: 0, scope: !10249, inlinedAt: !10301)
!10301 = distinct !DILocation(line: 712, column: 76, scope: !10295)
!10302 = !DILocation(line: 380, column: 4, scope: !10249, inlinedAt: !10301)
!10303 = !DILocation(line: 0, scope: !10257, inlinedAt: !10304)
!10304 = distinct !DILocation(line: 712, column: 76, scope: !10295)
!10305 = !DILocation(line: 414, column: 7, scope: !10257, inlinedAt: !10304)
!10306 = !DILocation(line: 712, column: 73, scope: !10295)
!10307 = !DILocation(line: 712, column: 3, scope: !10295)
!10308 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10309, file: !10309, line: 910, type: !10310, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10312)
!10309 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10310 = !DISubroutineType(types: !10311)
!10311 = !{null, !1260, !152}
!10312 = !{!10313, !10314}
!10313 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10308, file: !10309, line: 910, type: !1260)
!10314 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10308, file: !10309, line: 910, type: !152)
!10315 = !DILocation(line: 0, scope: !10308)
!10316 = !DILocation(line: 912, column: 3, scope: !10308)
!10317 = !DILocation(line: 913, column: 1, scope: !10308)
!10318 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10309, file: !10309, line: 823, type: !10319, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10321)
!10319 = !DISubroutineType(types: !10320)
!10320 = !{!152, !1260}
!10321 = !{!10322}
!10322 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10318, file: !10309, line: 823, type: !1260)
!10323 = !DILocation(line: 0, scope: !10318)
!10324 = !DILocation(line: 825, column: 21, scope: !10318)
!10325 = !DILocation(line: 825, column: 3, scope: !10318)
!10326 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10309, file: !10309, line: 812, type: !10310, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10327)
!10327 = !{!10328, !10329}
!10328 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10326, file: !10309, line: 812, type: !1260)
!10329 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10326, file: !10309, line: 812, type: !152)
!10330 = !DILocation(line: 0, scope: !10326)
!10331 = !DILocation(line: 814, column: 3, scope: !10326)
!10332 = !DILocation(line: 815, column: 1, scope: !10326)
!10333 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10309, file: !10309, line: 771, type: !10319, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10334)
!10334 = !{!10335}
!10335 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10333, file: !10309, line: 771, type: !1260)
!10336 = !DILocation(line: 0, scope: !10333)
!10337 = !DILocation(line: 773, column: 21, scope: !10333)
!10338 = !DILocation(line: 773, column: 3, scope: !10333)
!10339 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1329, file: !1329, line: 47, type: !10340, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10342)
!10340 = !DISubroutineType(types: !10341)
!10341 = !{!107, !1203, !187}
!10342 = !{!10343, !10344}
!10343 = !DILocalVariable(name: "flags", arg: 1, scope: !10339, file: !1329, line: 47, type: !1203)
!10344 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10339, file: !1329, line: 47, type: !187)
!10345 = !DILocation(line: 0, scope: !10339)
!10346 = !DILocation(line: 50, column: 13, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10339, file: !1329, line: 50, column: 6)
!10348 = !DILocation(line: 50, column: 28, scope: !10347)
!10349 = !DILocation(line: 50, column: 6, scope: !10339)
!10350 = !DILocation(line: 53, column: 11, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10347, file: !1329, line: 50, column: 34)
!10352 = !DILocation(line: 55, column: 14, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10351, file: !1329, line: 55, column: 7)
!10354 = !DILocation(line: 55, column: 35, scope: !10353)
!10355 = !DILocation(line: 55, column: 7, scope: !10351)
!10356 = !DILocation(line: 56, column: 14, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10358, file: !1329, line: 56, column: 8)
!10358 = distinct !DILexicalBlock(scope: !10353, file: !1329, line: 55, column: 41)
!10359 = !DILocation(line: 56, column: 8, scope: !10358)
!10360 = !DILocation(line: 0, scope: !10353)
!10361 = !DILocation(line: 66, column: 14, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10351, file: !1329, line: 66, column: 7)
!10363 = !DILocation(line: 66, column: 30, scope: !10362)
!10364 = !DILocation(line: 66, column: 7, scope: !10351)
!10365 = !DILocation(line: 67, column: 12, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10362, file: !1329, line: 66, column: 36)
!10367 = !DILocation(line: 68, column: 3, scope: !10366)
!10368 = !DILocation(line: 68, column: 21, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10362, file: !1329, line: 68, column: 14)
!10370 = !DILocation(line: 68, column: 39, scope: !10369)
!10371 = !DILocation(line: 68, column: 14, scope: !10362)
!10372 = !DILocation(line: 69, column: 12, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10369, file: !1329, line: 68, column: 45)
!10374 = !DILocation(line: 70, column: 3, scope: !10373)
!10375 = !DILocation(line: 72, column: 21, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10347, file: !1329, line: 72, column: 14)
!10377 = !DILocation(line: 72, column: 35, scope: !10376)
!10378 = !DILocation(line: 72, column: 14, scope: !10347)
!10379 = !DILocation(line: 77, column: 14, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10381, file: !1329, line: 77, column: 7)
!10381 = distinct !DILexicalBlock(scope: !10376, file: !1329, line: 72, column: 41)
!10382 = !DILocation(line: 77, column: 30, scope: !10380)
!10383 = !DILocation(line: 77, column: 7, scope: !10381)
!10384 = !DILocation(line: 0, scope: !10347)
!10385 = !DILocation(line: 90, column: 1, scope: !10339)
!10386 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1329, file: !1329, line: 157, type: !10387, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10389)
!10387 = !DISubroutineType(types: !10388)
!10388 = !{null, !1187, !107, !107, !107}
!10389 = !{!10390, !10391, !10392, !10393, !10394, !10395, !10396, !10397, !10398, !10399, !10400}
!10390 = !DILocalVariable(name: "dev", arg: 1, scope: !10386, file: !1329, line: 157, type: !1187)
!10391 = !DILocalVariable(name: "pin", arg: 2, scope: !10386, file: !1329, line: 157, type: !107)
!10392 = !DILocalVariable(name: "conf", arg: 3, scope: !10386, file: !1329, line: 158, type: !107)
!10393 = !DILocalVariable(name: "func", arg: 4, scope: !10386, file: !1329, line: 158, type: !107)
!10394 = !DILocalVariable(name: "cfg", scope: !10386, file: !1329, line: 160, type: !9894)
!10395 = !DILocalVariable(name: "gpio", scope: !10386, file: !1329, line: 161, type: !1260)
!10396 = !DILocalVariable(name: "pin_ll", scope: !10386, file: !1329, line: 163, type: !107)
!10397 = !DILocalVariable(name: "mode", scope: !10386, file: !1329, line: 227, type: !32)
!10398 = !DILocalVariable(name: "otype", scope: !10386, file: !1329, line: 227, type: !32)
!10399 = !DILocalVariable(name: "ospeed", scope: !10386, file: !1329, line: 227, type: !32)
!10400 = !DILocalVariable(name: "pupd", scope: !10386, file: !1329, line: 227, type: !32)
!10401 = !DILocation(line: 0, scope: !10386)
!10402 = !DILocation(line: 160, column: 45, scope: !10386)
!10403 = !DILocation(line: 161, column: 44, scope: !10386)
!10404 = !DILocation(line: 163, column: 15, scope: !10386)
!10405 = !DILocation(line: 229, column: 14, scope: !10386)
!10406 = !DILocation(line: 246, column: 47, scope: !10386)
!10407 = !DILocation(line: 246, column: 2, scope: !10386)
!10408 = !DILocation(line: 248, column: 43, scope: !10386)
!10409 = !DILocation(line: 248, column: 2, scope: !10386)
!10410 = !DILocation(line: 250, column: 40, scope: !10386)
!10411 = !DILocation(line: 250, column: 2, scope: !10386)
!10412 = !DILocation(line: 252, column: 11, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10386, file: !1329, line: 252, column: 6)
!10414 = !DILocation(line: 252, column: 6, scope: !10386)
!10415 = !DILocation(line: 253, column: 11, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10417, file: !1329, line: 253, column: 7)
!10417 = distinct !DILexicalBlock(scope: !10413, file: !1329, line: 252, column: 36)
!10418 = !DILocation(line: 253, column: 7, scope: !10417)
!10419 = !DILocation(line: 254, column: 4, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10416, file: !1329, line: 253, column: 16)
!10421 = !DILocation(line: 255, column: 3, scope: !10420)
!10422 = !DILocation(line: 256, column: 4, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10416, file: !1329, line: 255, column: 10)
!10424 = !DILocation(line: 260, column: 40, scope: !10386)
!10425 = !DILocation(line: 260, column: 2, scope: !10386)
!10426 = !DILocation(line: 265, column: 1, scope: !10386)
!10427 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1329, file: !1329, line: 137, type: !10229, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10428)
!10428 = !{!10429, !10430}
!10429 = !DILocalVariable(name: "pin", arg: 1, scope: !10427, file: !1329, line: 137, type: !107)
!10430 = !DILocalVariable(name: "pinval", scope: !10427, file: !1329, line: 139, type: !152)
!10431 = !DILocation(line: 0, scope: !10427)
!10432 = !DILocation(line: 149, column: 13, scope: !10427)
!10433 = !DILocation(line: 151, column: 2, scope: !10427)
!10434 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10309, file: !10309, line: 342, type: !10435, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10437)
!10435 = !DISubroutineType(types: !10436)
!10436 = !{null, !1260, !152, !152}
!10437 = !{!10438, !10439, !10440}
!10438 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10434, file: !10309, line: 342, type: !1260)
!10439 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10434, file: !10309, line: 342, type: !152)
!10440 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10434, file: !10309, line: 342, type: !152)
!10441 = !DILocation(line: 0, scope: !10434)
!10442 = !DILocation(line: 344, column: 3, scope: !10434)
!10443 = !DILocation(line: 345, column: 1, scope: !10434)
!10444 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10309, file: !10309, line: 413, type: !10435, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10445)
!10445 = !{!10446, !10447, !10448}
!10446 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10444, file: !10309, line: 413, type: !1260)
!10447 = !DILocalVariable(name: "Pin", arg: 2, scope: !10444, file: !10309, line: 413, type: !152)
!10448 = !DILocalVariable(name: "Speed", arg: 3, scope: !10444, file: !10309, line: 413, type: !152)
!10449 = !DILocation(line: 0, scope: !10444)
!10450 = !DILocation(line: 415, column: 3, scope: !10444)
!10451 = !DILocation(line: 0, scope: !10249, inlinedAt: !10452)
!10452 = distinct !DILocation(line: 415, column: 3, scope: !10444)
!10453 = !DILocation(line: 380, column: 4, scope: !10249, inlinedAt: !10452)
!10454 = !DILocation(line: 0, scope: !10257, inlinedAt: !10455)
!10455 = distinct !DILocation(line: 415, column: 3, scope: !10444)
!10456 = !DILocation(line: 414, column: 7, scope: !10257, inlinedAt: !10455)
!10457 = !DILocation(line: 0, scope: !10249, inlinedAt: !10458)
!10458 = distinct !DILocation(line: 415, column: 3, scope: !10444)
!10459 = !DILocation(line: 0, scope: !10257, inlinedAt: !10460)
!10460 = distinct !DILocation(line: 415, column: 3, scope: !10444)
!10461 = !DILocation(line: 417, column: 1, scope: !10444)
!10462 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10309, file: !10309, line: 484, type: !10435, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10463)
!10463 = !{!10464, !10465, !10466}
!10464 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10462, file: !10309, line: 484, type: !1260)
!10465 = !DILocalVariable(name: "Pin", arg: 2, scope: !10462, file: !10309, line: 484, type: !152)
!10466 = !DILocalVariable(name: "Pull", arg: 3, scope: !10462, file: !10309, line: 484, type: !152)
!10467 = !DILocation(line: 0, scope: !10462)
!10468 = !DILocation(line: 486, column: 3, scope: !10462)
!10469 = !DILocation(line: 0, scope: !10249, inlinedAt: !10470)
!10470 = distinct !DILocation(line: 486, column: 3, scope: !10462)
!10471 = !DILocation(line: 380, column: 4, scope: !10249, inlinedAt: !10470)
!10472 = !DILocation(line: 0, scope: !10257, inlinedAt: !10473)
!10473 = distinct !DILocation(line: 486, column: 3, scope: !10462)
!10474 = !DILocation(line: 414, column: 7, scope: !10257, inlinedAt: !10473)
!10475 = !DILocation(line: 0, scope: !10249, inlinedAt: !10476)
!10476 = distinct !DILocation(line: 486, column: 3, scope: !10462)
!10477 = !DILocation(line: 0, scope: !10257, inlinedAt: !10478)
!10478 = distinct !DILocation(line: 486, column: 3, scope: !10462)
!10479 = !DILocation(line: 487, column: 1, scope: !10462)
!10480 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10309, file: !10309, line: 556, type: !10435, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10481)
!10481 = !{!10482, !10483, !10484}
!10482 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10480, file: !10309, line: 556, type: !1260)
!10483 = !DILocalVariable(name: "Pin", arg: 2, scope: !10480, file: !10309, line: 556, type: !152)
!10484 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10480, file: !10309, line: 556, type: !152)
!10485 = !DILocation(line: 0, scope: !10480)
!10486 = !DILocation(line: 558, column: 3, scope: !10480)
!10487 = !DILocation(line: 0, scope: !10249, inlinedAt: !10488)
!10488 = distinct !DILocation(line: 558, column: 3, scope: !10480)
!10489 = !DILocation(line: 380, column: 4, scope: !10249, inlinedAt: !10488)
!10490 = !DILocation(line: 0, scope: !10257, inlinedAt: !10491)
!10491 = distinct !DILocation(line: 558, column: 3, scope: !10480)
!10492 = !DILocation(line: 414, column: 7, scope: !10257, inlinedAt: !10491)
!10493 = !DILocation(line: 0, scope: !10249, inlinedAt: !10494)
!10494 = distinct !DILocation(line: 558, column: 3, scope: !10480)
!10495 = !DILocation(line: 0, scope: !10257, inlinedAt: !10496)
!10496 = distinct !DILocation(line: 558, column: 3, scope: !10480)
!10497 = !DILocation(line: 560, column: 1, scope: !10480)
!10498 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10309, file: !10309, line: 633, type: !10435, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10499)
!10499 = !{!10500, !10501, !10502}
!10500 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10498, file: !10309, line: 633, type: !1260)
!10501 = !DILocalVariable(name: "Pin", arg: 2, scope: !10498, file: !10309, line: 633, type: !152)
!10502 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10498, file: !10309, line: 633, type: !152)
!10503 = !DILocation(line: 0, scope: !10498)
!10504 = !DILocation(line: 635, column: 3, scope: !10498)
!10505 = !DILocation(line: 0, scope: !10249, inlinedAt: !10506)
!10506 = distinct !DILocation(line: 635, column: 3, scope: !10498)
!10507 = !DILocation(line: 380, column: 4, scope: !10249, inlinedAt: !10506)
!10508 = !DILocation(line: 0, scope: !10257, inlinedAt: !10509)
!10509 = distinct !DILocation(line: 635, column: 3, scope: !10498)
!10510 = !DILocation(line: 414, column: 7, scope: !10257, inlinedAt: !10509)
!10511 = !DILocation(line: 0, scope: !10249, inlinedAt: !10512)
!10512 = distinct !DILocation(line: 635, column: 3, scope: !10498)
!10513 = !DILocation(line: 0, scope: !10257, inlinedAt: !10514)
!10514 = distinct !DILocation(line: 635, column: 3, scope: !10498)
!10515 = !DILocation(line: 637, column: 1, scope: !10498)
!10516 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10309, file: !10309, line: 273, type: !10435, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10517)
!10517 = !{!10518, !10519, !10520}
!10518 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10516, file: !10309, line: 273, type: !1260)
!10519 = !DILocalVariable(name: "Pin", arg: 2, scope: !10516, file: !10309, line: 273, type: !152)
!10520 = !DILocalVariable(name: "Mode", arg: 3, scope: !10516, file: !10309, line: 273, type: !152)
!10521 = !DILocation(line: 0, scope: !10516)
!10522 = !DILocation(line: 275, column: 3, scope: !10516)
!10523 = !DILocation(line: 0, scope: !10249, inlinedAt: !10524)
!10524 = distinct !DILocation(line: 275, column: 3, scope: !10516)
!10525 = !DILocation(line: 380, column: 4, scope: !10249, inlinedAt: !10524)
!10526 = !DILocation(line: 0, scope: !10257, inlinedAt: !10527)
!10527 = distinct !DILocation(line: 275, column: 3, scope: !10516)
!10528 = !DILocation(line: 414, column: 7, scope: !10257, inlinedAt: !10527)
!10529 = !DILocation(line: 0, scope: !10249, inlinedAt: !10530)
!10530 = distinct !DILocation(line: 275, column: 3, scope: !10516)
!10531 = !DILocation(line: 0, scope: !10257, inlinedAt: !10532)
!10532 = distinct !DILocation(line: 275, column: 3, scope: !10516)
!10533 = !DILocation(line: 276, column: 1, scope: !10516)
!10534 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1329, file: !1329, line: 698, type: !1342, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10535)
!10535 = !{!10536, !10537, !10538}
!10536 = !DILocalVariable(name: "dev", arg: 1, scope: !10534, file: !1329, line: 698, type: !1187)
!10537 = !DILocalVariable(name: "data", scope: !10534, file: !1329, line: 700, type: !9961)
!10538 = !DILocalVariable(name: "ret", scope: !10534, file: !1329, line: 701, type: !107)
!10539 = !DILocation(line: 0, scope: !10534)
!10540 = !DILocation(line: 700, column: 38, scope: !10534)
!10541 = !DILocation(line: 703, column: 8, scope: !10534)
!10542 = !DILocation(line: 703, column: 12, scope: !10534)
!10543 = !DILocation(line: 705, column: 7, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10534, file: !1329, line: 705, column: 6)
!10545 = !DILocation(line: 705, column: 6, scope: !10534)
!10546 = !DILocation(line: 722, column: 8, scope: !10534)
!10547 = !DILocation(line: 723, column: 10, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10534, file: !1329, line: 723, column: 6)
!10549 = !DILocation(line: 723, column: 6, scope: !10534)
!10550 = !DILocation(line: 731, column: 1, scope: !10534)
!10551 = distinct !DISubprogram(name: "device_is_ready", scope: !9739, file: !9739, line: 47, type: !10552, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10554)
!10552 = !DISubroutineType(types: !10553)
!10553 = !{!145, !1187}
!10554 = !{!10555}
!10555 = !DILocalVariable(name: "dev", arg: 1, scope: !10551, file: !9739, line: 47, type: !1187)
!10556 = !DILocation(line: 0, scope: !10551)
!10557 = !DILocation(line: 55, column: 2, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10551, file: !9739, line: 55, column: 2)
!10559 = !{i64 2154954959}
!10560 = !DILocation(line: 56, column: 9, scope: !10551)
!10561 = !DILocation(line: 56, column: 2, scope: !10551)
!10562 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1329, file: !1329, line: 270, type: !10563, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10565)
!10563 = !DISubroutineType(types: !10564)
!10564 = !{!107, !1187, !145}
!10565 = !{!10566, !10567, !10568, !10569, !10570}
!10566 = !DILocalVariable(name: "dev", arg: 1, scope: !10562, file: !1329, line: 270, type: !1187)
!10567 = !DILocalVariable(name: "on", arg: 2, scope: !10562, file: !1329, line: 270, type: !145)
!10568 = !DILocalVariable(name: "cfg", scope: !10562, file: !1329, line: 272, type: !9894)
!10569 = !DILocalVariable(name: "ret", scope: !10562, file: !1329, line: 273, type: !107)
!10570 = !DILocalVariable(name: "clk", scope: !10562, file: !1329, line: 278, type: !10196)
!10571 = !DILocation(line: 0, scope: !10562)
!10572 = !DILocation(line: 272, column: 45, scope: !10562)
!10573 = !DILocation(line: 282, column: 38, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10575, file: !1329, line: 280, column: 10)
!10575 = distinct !DILexicalBlock(scope: !10562, file: !1329, line: 280, column: 6)
!10576 = !DILocation(line: 282, column: 6, scope: !10574)
!10577 = !DILocation(line: 281, column: 9, scope: !10574)
!10578 = !DILocation(line: 293, column: 1, scope: !10562)
!10579 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !10552, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10580)
!10580 = !{!10581}
!10581 = !DILocalVariable(name: "dev", arg: 1, scope: !10579, file: !247, line: 730, type: !1187)
!10582 = !DILocation(line: 0, scope: !10579)
!10583 = !DILocation(line: 732, column: 9, scope: !10579)
!10584 = !DILocation(line: 732, column: 2, scope: !10579)
!10585 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1329, file: !1329, line: 496, type: !10586, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10588)
!10586 = !DISubroutineType(types: !10587)
!10587 = !{!107, !1187, !107, !107, !107}
!10588 = !{!10589, !10590, !10591, !10592, !10593, !10594}
!10589 = !DILocalVariable(name: "dev", arg: 1, scope: !10585, file: !1329, line: 496, type: !1187)
!10590 = !DILocalVariable(name: "pin", arg: 2, scope: !10585, file: !1329, line: 496, type: !107)
!10591 = !DILocalVariable(name: "conf", arg: 3, scope: !10585, file: !1329, line: 496, type: !107)
!10592 = !DILocalVariable(name: "func", arg: 4, scope: !10585, file: !1329, line: 496, type: !107)
!10593 = !DILocalVariable(name: "ret", scope: !10585, file: !1329, line: 498, type: !107)
!10594 = !DILocalVariable(name: "gpio_out", scope: !10595, file: !1329, line: 508, type: !152)
!10595 = distinct !DILexicalBlock(scope: !10596, file: !1329, line: 507, column: 27)
!10596 = distinct !DILexicalBlock(scope: !10585, file: !1329, line: 507, column: 6)
!10597 = !DILocation(line: 0, scope: !10585)
!10598 = !DILocation(line: 505, column: 2, scope: !10585)
!10599 = !DILocation(line: 507, column: 11, scope: !10596)
!10600 = !DILocation(line: 507, column: 6, scope: !10585)
!10601 = !DILocation(line: 508, column: 28, scope: !10595)
!10602 = !DILocation(line: 0, scope: !10595)
!10603 = !DILocation(line: 510, column: 16, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10595, file: !1329, line: 510, column: 7)
!10605 = !DILocation(line: 0, scope: !10604)
!10606 = !DILocation(line: 510, column: 7, scope: !10595)
!10607 = !DILocation(line: 511, column: 4, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10604, file: !1329, line: 510, column: 32)
!10609 = !DILocation(line: 512, column: 3, scope: !10608)
!10610 = !DILocation(line: 513, column: 4, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10612, file: !1329, line: 512, column: 39)
!10612 = distinct !DILexicalBlock(scope: !10604, file: !1329, line: 512, column: 14)
!10613 = !DILocation(line: 514, column: 3, scope: !10611)
!10614 = !DILocation(line: 518, column: 1, scope: !10585)
!10615 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1605, file: !1605, line: 526, type: !1508, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10616)
!10616 = !{!10617, !10618, !10619}
!10617 = !DILocalVariable(name: "dev", arg: 1, scope: !10615, file: !1605, line: 526, type: !1510)
!10618 = !DILocalVariable(name: "c", arg: 2, scope: !10615, file: !1605, line: 526, type: !1119)
!10619 = !DILocalVariable(name: "config", scope: !10615, file: !1605, line: 528, type: !10620)
!10620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 32)
!10621 = !DILocation(line: 0, scope: !10615)
!10622 = !DILocation(line: 528, column: 48, scope: !10615)
!10623 = !DILocation(line: 531, column: 40, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10615, file: !1605, line: 531, column: 6)
!10625 = !DILocation(line: 531, column: 6, scope: !10624)
!10626 = !DILocation(line: 531, column: 6, scope: !10615)
!10627 = !DILocation(line: 532, column: 34, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10624, file: !1605, line: 531, column: 48)
!10629 = !DILocation(line: 532, column: 3, scope: !10628)
!10630 = !DILocation(line: 533, column: 2, scope: !10628)
!10631 = !DILocation(line: 539, column: 42, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10615, file: !1605, line: 539, column: 6)
!10633 = !DILocation(line: 539, column: 7, scope: !10632)
!10634 = !DILocation(line: 539, column: 6, scope: !10615)
!10635 = !DILocation(line: 543, column: 52, scope: !10615)
!10636 = !DILocation(line: 543, column: 22, scope: !10615)
!10637 = !DILocation(line: 543, column: 5, scope: !10615)
!10638 = !DILocation(line: 545, column: 2, scope: !10615)
!10639 = !DILocation(line: 546, column: 1, scope: !10615)
!10640 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1605, file: !1605, line: 548, type: !1527, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10641)
!10641 = !{!10642, !10643, !10644, !10645}
!10642 = !DILocalVariable(name: "dev", arg: 1, scope: !10640, file: !1605, line: 548, type: !1510)
!10643 = !DILocalVariable(name: "c", arg: 2, scope: !10640, file: !1605, line: 549, type: !196)
!10644 = !DILocalVariable(name: "config", scope: !10640, file: !1605, line: 551, type: !10620)
!10645 = !DILocalVariable(name: "key", scope: !10640, file: !1605, line: 555, type: !32)
!10646 = !DILocation(line: 0, scope: !10640)
!10647 = !DILocation(line: 551, column: 48, scope: !10640)
!10648 = !DILocation(line: 562, column: 2, scope: !10640)
!10649 = !DILocation(line: 563, column: 41, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10651, file: !1605, line: 563, column: 7)
!10651 = distinct !DILexicalBlock(scope: !10640, file: !1605, line: 562, column: 12)
!10652 = !DILocation(line: 563, column: 7, scope: !10650)
!10653 = !DILocation(line: 563, column: 7, scope: !10651)
!10654 = !DILocation(line: 55, column: 2, scope: !10655, inlinedAt: !10659)
!10655 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5935, file: !5935, line: 42, type: !5936, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10656)
!10656 = !{!10657, !10658}
!10657 = !DILocalVariable(name: "key", scope: !10655, file: !5935, line: 44, type: !32)
!10658 = !DILocalVariable(name: "tmp", scope: !10655, file: !5935, line: 53, type: !32)
!10659 = distinct !DILocation(line: 564, column: 10, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10650, file: !1605, line: 563, column: 49)
!10661 = !{i64 2292908}
!10662 = !DILocation(line: 0, scope: !10655, inlinedAt: !10659)
!10663 = !DILocation(line: 565, column: 42, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10660, file: !1605, line: 565, column: 8)
!10665 = !DILocation(line: 565, column: 8, scope: !10664)
!10666 = !DILocation(line: 565, column: 8, scope: !10660)
!10667 = !DILocalVariable(name: "key", arg: 1, scope: !10668, file: !5935, line: 84, type: !32)
!10668 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5935, file: !5935, line: 84, type: !5946, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10669)
!10669 = !{!10667}
!10670 = !DILocation(line: 0, scope: !10668, inlinedAt: !10671)
!10671 = distinct !DILocation(line: 568, column: 4, scope: !10660)
!10672 = !DILocation(line: 95, column: 2, scope: !10668, inlinedAt: !10671)
!10673 = !{i64 2293725}
!10674 = !DILocation(line: 569, column: 3, scope: !10660)
!10675 = distinct !{!10675, !10648, !10676}
!10676 = !DILocation(line: 570, column: 2, scope: !10640)
!10677 = !DILocation(line: 592, column: 33, scope: !10640)
!10678 = !DILocation(line: 592, column: 2, scope: !10640)
!10679 = !DILocation(line: 0, scope: !10668, inlinedAt: !10680)
!10680 = distinct !DILocation(line: 593, column: 2, scope: !10640)
!10681 = !DILocation(line: 95, column: 2, scope: !10668, inlinedAt: !10680)
!10682 = !DILocation(line: 594, column: 1, scope: !10640)
!10683 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1605, file: !1605, line: 596, type: !1531, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10684)
!10684 = !{!10685, !10686, !10687}
!10685 = !DILocalVariable(name: "dev", arg: 1, scope: !10683, file: !1605, line: 596, type: !1510)
!10686 = !DILocalVariable(name: "config", scope: !10683, file: !1605, line: 598, type: !10620)
!10687 = !DILocalVariable(name: "err", scope: !10683, file: !1605, line: 599, type: !152)
!10688 = !DILocation(line: 0, scope: !10683)
!10689 = !DILocation(line: 598, column: 48, scope: !10683)
!10690 = !DILocation(line: 606, column: 40, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10683, file: !1605, line: 606, column: 6)
!10692 = !DILocation(line: 606, column: 6, scope: !10691)
!10693 = !DILocation(line: 606, column: 6, scope: !10683)
!10694 = !DILocation(line: 610, column: 39, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10683, file: !1605, line: 610, column: 6)
!10696 = !DILocation(line: 610, column: 6, scope: !10695)
!10697 = !DILocation(line: 610, column: 6, scope: !10683)
!10698 = !DILocation(line: 614, column: 39, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10683, file: !1605, line: 614, column: 6)
!10700 = !DILocation(line: 614, column: 6, scope: !10699)
!10701 = !DILocation(line: 614, column: 6, scope: !10683)
!10702 = !DILocation(line: 619, column: 40, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10683, file: !1605, line: 619, column: 6)
!10704 = !DILocation(line: 619, column: 6, scope: !10703)
!10705 = !DILocation(line: 619, column: 6, scope: !10683)
!10706 = !DILocation(line: 623, column: 10, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10683, file: !1605, line: 623, column: 6)
!10708 = !DILocation(line: 623, column: 6, scope: !10683)
!10709 = !DILocation(line: 624, column: 34, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10707, file: !1605, line: 623, column: 24)
!10711 = !DILocation(line: 624, column: 3, scope: !10710)
!10712 = !DILocation(line: 625, column: 2, scope: !10710)
!10713 = !DILocation(line: 632, column: 10, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10683, file: !1605, line: 632, column: 6)
!10715 = !DILocation(line: 632, column: 6, scope: !10683)
!10716 = !DILocation(line: 633, column: 34, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10714, file: !1605, line: 632, column: 32)
!10718 = !DILocation(line: 633, column: 3, scope: !10717)
!10719 = !DILocation(line: 634, column: 2, scope: !10717)
!10720 = !DILocation(line: 636, column: 10, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10683, file: !1605, line: 636, column: 6)
!10722 = !DILocation(line: 636, column: 6, scope: !10683)
!10723 = !DILocation(line: 637, column: 33, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10721, file: !1605, line: 636, column: 31)
!10725 = !DILocation(line: 637, column: 3, scope: !10724)
!10726 = !DILocation(line: 638, column: 2, scope: !10724)
!10727 = !DILocation(line: 640, column: 10, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10683, file: !1605, line: 640, column: 6)
!10729 = !DILocation(line: 640, column: 6, scope: !10683)
!10730 = !DILocation(line: 641, column: 33, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10728, file: !1605, line: 640, column: 32)
!10732 = !DILocation(line: 641, column: 3, scope: !10731)
!10733 = !DILocation(line: 642, column: 2, scope: !10731)
!10734 = !DILocation(line: 646, column: 32, scope: !10683)
!10735 = !DILocation(line: 646, column: 2, scope: !10683)
!10736 = !DILocation(line: 648, column: 2, scope: !10683)
!10737 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1605, file: !1605, line: 419, type: !1535, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10738)
!10738 = !{!10739, !10740, !10741, !10742, !10744, !10745, !10746, !10747}
!10739 = !DILocalVariable(name: "dev", arg: 1, scope: !10737, file: !1605, line: 419, type: !1510)
!10740 = !DILocalVariable(name: "cfg", arg: 2, scope: !10737, file: !1605, line: 420, type: !1537)
!10741 = !DILocalVariable(name: "config", scope: !10737, file: !1605, line: 422, type: !10620)
!10742 = !DILocalVariable(name: "data", scope: !10737, file: !1605, line: 423, type: !10743)
!10743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!10744 = !DILocalVariable(name: "parity", scope: !10737, file: !1605, line: 424, type: !6531)
!10745 = !DILocalVariable(name: "stopbits", scope: !10737, file: !1605, line: 425, type: !6531)
!10746 = !DILocalVariable(name: "databits", scope: !10737, file: !1605, line: 426, type: !6531)
!10747 = !DILocalVariable(name: "flowctrl", scope: !10737, file: !1605, line: 428, type: !6531)
!10748 = !DILocation(line: 0, scope: !10737)
!10749 = !DILocation(line: 422, column: 48, scope: !10737)
!10750 = !DILocation(line: 423, column: 38, scope: !10737)
!10751 = !DILocation(line: 424, column: 56, scope: !10737)
!10752 = !DILocation(line: 424, column: 51, scope: !10737)
!10753 = !DILocation(line: 424, column: 26, scope: !10737)
!10754 = !DILocation(line: 425, column: 60, scope: !10737)
!10755 = !DILocation(line: 425, column: 55, scope: !10737)
!10756 = !DILocation(line: 425, column: 28, scope: !10737)
!10757 = !DILocation(line: 426, column: 60, scope: !10737)
!10758 = !DILocation(line: 426, column: 55, scope: !10737)
!10759 = !DILocation(line: 426, column: 28, scope: !10737)
!10760 = !DILocation(line: 428, column: 58, scope: !10737)
!10761 = !DILocation(line: 428, column: 53, scope: !10737)
!10762 = !DILocation(line: 428, column: 28, scope: !10737)
!10763 = !DILocation(line: 431, column: 44, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10737, file: !1605, line: 431, column: 6)
!10765 = !DILocation(line: 438, column: 22, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10737, file: !1605, line: 437, column: 6)
!10767 = !DILocation(line: 437, column: 6, scope: !10737)
!10768 = !DILocation(line: 448, column: 6, scope: !10737)
!10769 = !DILocation(line: 465, column: 47, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10737, file: !1605, line: 465, column: 6)
!10771 = !DILocation(line: 475, column: 21, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10737, file: !1605, line: 475, column: 6)
!10773 = !DILocation(line: 475, column: 6, scope: !10737)
!10774 = !DILocation(line: 476, column: 8, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10776, file: !1605, line: 476, column: 7)
!10776 = distinct !DILexicalBlock(scope: !10772, file: !1605, line: 475, column: 49)
!10777 = !DILocation(line: 477, column: 34, scope: !10775)
!10778 = !DILocation(line: 476, column: 7, scope: !10776)
!10779 = !DILocation(line: 482, column: 27, scope: !10737)
!10780 = !DILocation(line: 482, column: 2, scope: !10737)
!10781 = !DILocation(line: 484, column: 16, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10737, file: !1605, line: 484, column: 6)
!10783 = !DILocation(line: 484, column: 13, scope: !10782)
!10784 = !DILocation(line: 484, column: 6, scope: !10737)
!10785 = !DILocation(line: 485, column: 3, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10782, file: !1605, line: 484, column: 44)
!10787 = !DILocation(line: 486, column: 2, scope: !10786)
!10788 = !DILocation(line: 488, column: 18, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10737, file: !1605, line: 488, column: 6)
!10790 = !DILocation(line: 488, column: 15, scope: !10789)
!10791 = !DILocation(line: 488, column: 6, scope: !10737)
!10792 = !DILocation(line: 489, column: 3, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10789, file: !1605, line: 488, column: 48)
!10794 = !DILocation(line: 490, column: 2, scope: !10793)
!10795 = !DILocation(line: 492, column: 18, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10737, file: !1605, line: 492, column: 6)
!10797 = !DILocation(line: 492, column: 15, scope: !10796)
!10798 = !DILocation(line: 492, column: 6, scope: !10737)
!10799 = !DILocation(line: 493, column: 3, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10796, file: !1605, line: 492, column: 48)
!10801 = !DILocation(line: 494, column: 2, scope: !10800)
!10802 = !DILocation(line: 496, column: 18, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10737, file: !1605, line: 496, column: 6)
!10804 = !DILocation(line: 496, column: 15, scope: !10803)
!10805 = !DILocation(line: 496, column: 6, scope: !10737)
!10806 = !DILocation(line: 497, column: 3, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10803, file: !1605, line: 496, column: 46)
!10808 = !DILocation(line: 498, column: 2, scope: !10807)
!10809 = !DILocation(line: 500, column: 11, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10737, file: !1605, line: 500, column: 6)
!10811 = !DILocation(line: 500, column: 29, scope: !10810)
!10812 = !DILocation(line: 500, column: 20, scope: !10810)
!10813 = !DILocation(line: 500, column: 6, scope: !10737)
!10814 = !DILocation(line: 501, column: 3, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10810, file: !1605, line: 500, column: 40)
!10816 = !DILocation(line: 502, column: 26, scope: !10815)
!10817 = !DILocation(line: 502, column: 19, scope: !10815)
!10818 = !DILocation(line: 503, column: 2, scope: !10815)
!10819 = !DILocation(line: 505, column: 26, scope: !10737)
!10820 = !DILocation(line: 505, column: 2, scope: !10737)
!10821 = !DILocation(line: 506, column: 2, scope: !10737)
!10822 = !DILocation(line: 507, column: 1, scope: !10737)
!10823 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1605, file: !1605, line: 509, type: !1548, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10824)
!10824 = !{!10825, !10826, !10827}
!10825 = !DILocalVariable(name: "dev", arg: 1, scope: !10823, file: !1605, line: 509, type: !1510)
!10826 = !DILocalVariable(name: "cfg", arg: 2, scope: !10823, file: !1605, line: 510, type: !1550)
!10827 = !DILocalVariable(name: "data", scope: !10823, file: !1605, line: 512, type: !10743)
!10828 = !DILocation(line: 0, scope: !10823)
!10829 = !DILocation(line: 512, column: 38, scope: !10823)
!10830 = !DILocation(line: 514, column: 24, scope: !10823)
!10831 = !DILocation(line: 514, column: 7, scope: !10823)
!10832 = !DILocation(line: 514, column: 16, scope: !10823)
!10833 = !DILocation(line: 515, column: 41, scope: !10823)
!10834 = !{i32 0, i32 1537}
!10835 = !DILocation(line: 515, column: 16, scope: !10823)
!10836 = !DILocation(line: 515, column: 7, scope: !10823)
!10837 = !DILocation(line: 515, column: 14, scope: !10823)
!10838 = !DILocation(line: 517, column: 3, scope: !10823)
!10839 = !{i32 0, i32 12289}
!10840 = !DILocation(line: 516, column: 19, scope: !10823)
!10841 = !DILocation(line: 516, column: 7, scope: !10823)
!10842 = !DILocation(line: 516, column: 17, scope: !10823)
!10843 = !DILocation(line: 519, column: 3, scope: !10823)
!10844 = !DILocation(line: 519, column: 33, scope: !10823)
!10845 = !DILocation(line: 518, column: 19, scope: !10823)
!10846 = !DILocation(line: 518, column: 7, scope: !10823)
!10847 = !DILocation(line: 518, column: 17, scope: !10823)
!10848 = !DILocation(line: 521, column: 3, scope: !10823)
!10849 = !{i32 0, i32 769}
!10850 = !DILocation(line: 520, column: 19, scope: !10823)
!10851 = !DILocation(line: 520, column: 7, scope: !10823)
!10852 = !DILocation(line: 520, column: 17, scope: !10823)
!10853 = !DILocation(line: 522, column: 2, scope: !10823)
!10854 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1605, file: !1605, line: 205, type: !10855, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10857)
!10855 = !DISubroutineType(types: !10856)
!10856 = !{!152, !1510}
!10857 = !{!10858, !10859}
!10858 = !DILocalVariable(name: "dev", arg: 1, scope: !10854, file: !1605, line: 205, type: !1510)
!10859 = !DILocalVariable(name: "config", scope: !10854, file: !1605, line: 207, type: !10620)
!10860 = !DILocation(line: 0, scope: !10854)
!10861 = !DILocation(line: 207, column: 48, scope: !10854)
!10862 = !DILocation(line: 209, column: 36, scope: !10854)
!10863 = !DILocation(line: 209, column: 9, scope: !10854)
!10864 = !DILocation(line: 209, column: 2, scope: !10854)
!10865 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1605, file: !1605, line: 270, type: !10866, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10868)
!10866 = !DISubroutineType(types: !10867)
!10867 = !{!1476, !152}
!10868 = !{!10869}
!10869 = !DILocalVariable(name: "parity", arg: 1, scope: !10865, file: !1605, line: 270, type: !152)
!10870 = !DILocation(line: 0, scope: !10865)
!10871 = !DILocation(line: 272, column: 2, scope: !10865)
!10872 = !DILocation(line: 281, column: 1, scope: !10865)
!10873 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1605, file: !1605, line: 220, type: !10855, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10874)
!10874 = !{!10875, !10876}
!10875 = !DILocalVariable(name: "dev", arg: 1, scope: !10873, file: !1605, line: 220, type: !1510)
!10876 = !DILocalVariable(name: "config", scope: !10873, file: !1605, line: 222, type: !10620)
!10877 = !DILocation(line: 0, scope: !10873)
!10878 = !DILocation(line: 222, column: 48, scope: !10873)
!10879 = !DILocation(line: 224, column: 44, scope: !10873)
!10880 = !DILocation(line: 224, column: 9, scope: !10873)
!10881 = !DILocation(line: 224, column: 2, scope: !10873)
!10882 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1605, file: !1605, line: 304, type: !10883, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10885)
!10883 = !DISubroutineType(types: !10884)
!10884 = !{!1490, !152}
!10885 = !{!10886}
!10886 = !DILocalVariable(name: "sb", arg: 1, scope: !10882, file: !1605, line: 304, type: !152)
!10887 = !DILocation(line: 0, scope: !10882)
!10888 = !DILocation(line: 306, column: 2, scope: !10882)
!10889 = !DILocation(line: 0, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10882, file: !1605, line: 306, column: 14)
!10891 = !DILocation(line: 323, column: 1, scope: !10882)
!10892 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1605, file: !1605, line: 235, type: !10855, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10893)
!10893 = !{!10894, !10895}
!10894 = !DILocalVariable(name: "dev", arg: 1, scope: !10892, file: !1605, line: 235, type: !1510)
!10895 = !DILocalVariable(name: "config", scope: !10892, file: !1605, line: 237, type: !10620)
!10896 = !DILocation(line: 0, scope: !10892)
!10897 = !DILocation(line: 237, column: 48, scope: !10892)
!10898 = !DILocation(line: 239, column: 39, scope: !10892)
!10899 = !DILocation(line: 239, column: 9, scope: !10892)
!10900 = !DILocation(line: 239, column: 2, scope: !10892)
!10901 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1605, file: !1605, line: 355, type: !10902, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10904)
!10902 = !DISubroutineType(types: !10903)
!10903 = !{!1483, !152, !152}
!10904 = !{!10905, !10906}
!10905 = !DILocalVariable(name: "db", arg: 1, scope: !10901, file: !1605, line: 355, type: !152)
!10906 = !DILocalVariable(name: "p", arg: 2, scope: !10901, file: !1605, line: 356, type: !152)
!10907 = !DILocation(line: 0, scope: !10901)
!10908 = !DILocation(line: 358, column: 2, scope: !10901)
!10909 = !DILocation(line: 384, column: 1, scope: !10901)
!10910 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1605, file: !1605, line: 250, type: !10855, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10911)
!10911 = !{!10912, !10913}
!10912 = !DILocalVariable(name: "dev", arg: 1, scope: !10910, file: !1605, line: 250, type: !1510)
!10913 = !DILocalVariable(name: "config", scope: !10910, file: !1605, line: 252, type: !10620)
!10914 = !DILocation(line: 0, scope: !10910)
!10915 = !DILocation(line: 252, column: 48, scope: !10910)
!10916 = !DILocation(line: 254, column: 40, scope: !10910)
!10917 = !DILocation(line: 254, column: 9, scope: !10910)
!10918 = !DILocation(line: 254, column: 2, scope: !10910)
!10919 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1605, file: !1605, line: 409, type: !10920, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10922)
!10920 = !DISubroutineType(types: !10921)
!10921 = !{!1496, !152}
!10922 = !{!10923}
!10923 = !DILocalVariable(name: "fc", arg: 1, scope: !10919, file: !1605, line: 409, type: !152)
!10924 = !DILocation(line: 0, scope: !10919)
!10925 = !DILocation(line: 411, column: 9, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10919, file: !1605, line: 411, column: 6)
!10927 = !DILocation(line: 416, column: 1, scope: !10919)
!10928 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10929, file: !10929, line: 967, type: !10930, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10932)
!10929 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10930 = !DISubroutineType(types: !10931)
!10931 = !{!152, !1551}
!10932 = !{!10933}
!10933 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10928, file: !10929, line: 967, type: !1551)
!10934 = !DILocation(line: 0, scope: !10928)
!10935 = !DILocation(line: 969, column: 21, scope: !10928)
!10936 = !DILocation(line: 969, column: 3, scope: !10928)
!10937 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10929, file: !10929, line: 601, type: !10930, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10938)
!10938 = !{!10939}
!10939 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10937, file: !10929, line: 601, type: !1551)
!10940 = !DILocation(line: 0, scope: !10937)
!10941 = !DILocation(line: 603, column: 21, scope: !10937)
!10942 = !DILocation(line: 603, column: 3, scope: !10937)
!10943 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10929, file: !10929, line: 820, type: !10930, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10944)
!10944 = !{!10945}
!10945 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10943, file: !10929, line: 820, type: !1551)
!10946 = !DILocation(line: 0, scope: !10943)
!10947 = !DILocation(line: 822, column: 21, scope: !10943)
!10948 = !DILocation(line: 822, column: 3, scope: !10943)
!10949 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10929, file: !10929, line: 547, type: !10930, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10950)
!10950 = !{!10951}
!10951 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10949, file: !10929, line: 547, type: !1551)
!10952 = !DILocation(line: 0, scope: !10949)
!10953 = !DILocation(line: 549, column: 21, scope: !10949)
!10954 = !DILocation(line: 549, column: 3, scope: !10949)
!10955 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1605, file: !1605, line: 257, type: !10956, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10958)
!10956 = !DISubroutineType(types: !10957)
!10957 = !{!152, !1476}
!10958 = !{!10959}
!10959 = !DILocalVariable(name: "parity", arg: 1, scope: !10955, file: !1605, line: 257, type: !1476)
!10960 = !DILocation(line: 0, scope: !10955)
!10961 = !DILocation(line: 259, column: 2, scope: !10955)
!10962 = !DILocation(line: 268, column: 1, scope: !10955)
!10963 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1605, file: !1605, line: 283, type: !10964, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10966)
!10964 = !DISubroutineType(types: !10965)
!10965 = !{!152, !1490}
!10966 = !{!10967}
!10967 = !DILocalVariable(name: "sb", arg: 1, scope: !10963, file: !1605, line: 283, type: !1490)
!10968 = !DILocation(line: 0, scope: !10963)
!10969 = !DILocation(line: 285, column: 2, scope: !10963)
!10970 = !DILocation(line: 0, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10963, file: !1605, line: 285, column: 14)
!10972 = !DILocation(line: 302, column: 1, scope: !10963)
!10973 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1605, file: !1605, line: 325, type: !10974, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10976)
!10974 = !DISubroutineType(types: !10975)
!10975 = !{!152, !1483, !1476}
!10976 = !{!10977, !10978}
!10977 = !DILocalVariable(name: "db", arg: 1, scope: !10973, file: !1605, line: 325, type: !1483)
!10978 = !DILocalVariable(name: "p", arg: 2, scope: !10973, file: !1605, line: 326, type: !1476)
!10979 = !DILocation(line: 0, scope: !10973)
!10980 = !DILocation(line: 328, column: 2, scope: !10973)
!10981 = !DILocation(line: 353, column: 1, scope: !10973)
!10982 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1605, file: !1605, line: 393, type: !10983, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10985)
!10983 = !DISubroutineType(types: !10984)
!10984 = !{!152, !1496}
!10985 = !{!10986}
!10986 = !DILocalVariable(name: "fc", arg: 1, scope: !10982, file: !1605, line: 393, type: !1496)
!10987 = !DILocation(line: 0, scope: !10982)
!10988 = !DILocation(line: 395, column: 9, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10982, file: !1605, line: 395, column: 6)
!10990 = !DILocation(line: 400, column: 1, scope: !10982)
!10991 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10929, file: !10929, line: 424, type: !10992, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10994)
!10992 = !DISubroutineType(types: !10993)
!10993 = !{null, !1551}
!10994 = !{!10995}
!10995 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10991, file: !10929, line: 424, type: !1551)
!10996 = !DILocation(line: 0, scope: !10991)
!10997 = !DILocation(line: 426, column: 3, scope: !10991)
!10998 = !DILocation(line: 427, column: 1, scope: !10991)
!10999 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1605, file: !1605, line: 197, type: !11000, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11002)
!11000 = !DISubroutineType(types: !11001)
!11001 = !{null, !1510, !152}
!11002 = !{!11003, !11004, !11005}
!11003 = !DILocalVariable(name: "dev", arg: 1, scope: !10999, file: !1605, line: 197, type: !1510)
!11004 = !DILocalVariable(name: "parity", arg: 2, scope: !10999, file: !1605, line: 198, type: !152)
!11005 = !DILocalVariable(name: "config", scope: !10999, file: !1605, line: 200, type: !10620)
!11006 = !DILocation(line: 0, scope: !10999)
!11007 = !DILocation(line: 200, column: 48, scope: !10999)
!11008 = !DILocation(line: 202, column: 29, scope: !10999)
!11009 = !DILocation(line: 202, column: 2, scope: !10999)
!11010 = !DILocation(line: 203, column: 1, scope: !10999)
!11011 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1605, file: !1605, line: 212, type: !11000, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11012)
!11012 = !{!11013, !11014, !11015}
!11013 = !DILocalVariable(name: "dev", arg: 1, scope: !11011, file: !1605, line: 212, type: !1510)
!11014 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11011, file: !1605, line: 213, type: !152)
!11015 = !DILocalVariable(name: "config", scope: !11011, file: !1605, line: 215, type: !10620)
!11016 = !DILocation(line: 0, scope: !11011)
!11017 = !DILocation(line: 215, column: 48, scope: !11011)
!11018 = !DILocation(line: 217, column: 37, scope: !11011)
!11019 = !DILocation(line: 217, column: 2, scope: !11011)
!11020 = !DILocation(line: 218, column: 1, scope: !11011)
!11021 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1605, file: !1605, line: 227, type: !11000, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11022)
!11022 = !{!11023, !11024, !11025}
!11023 = !DILocalVariable(name: "dev", arg: 1, scope: !11021, file: !1605, line: 227, type: !1510)
!11024 = !DILocalVariable(name: "databits", arg: 2, scope: !11021, file: !1605, line: 228, type: !152)
!11025 = !DILocalVariable(name: "config", scope: !11021, file: !1605, line: 230, type: !10620)
!11026 = !DILocation(line: 0, scope: !11021)
!11027 = !DILocation(line: 230, column: 48, scope: !11021)
!11028 = !DILocation(line: 232, column: 32, scope: !11021)
!11029 = !DILocation(line: 232, column: 2, scope: !11021)
!11030 = !DILocation(line: 233, column: 1, scope: !11021)
!11031 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1605, file: !1605, line: 242, type: !11000, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11032)
!11032 = !{!11033, !11034, !11035}
!11033 = !DILocalVariable(name: "dev", arg: 1, scope: !11031, file: !1605, line: 242, type: !1510)
!11034 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11031, file: !1605, line: 243, type: !152)
!11035 = !DILocalVariable(name: "config", scope: !11031, file: !1605, line: 245, type: !10620)
!11036 = !DILocation(line: 0, scope: !11031)
!11037 = !DILocation(line: 245, column: 48, scope: !11031)
!11038 = !DILocation(line: 247, column: 33, scope: !11031)
!11039 = !DILocation(line: 247, column: 2, scope: !11031)
!11040 = !DILocation(line: 248, column: 1, scope: !11031)
!11041 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1605, file: !1605, line: 107, type: !11000, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11042)
!11042 = !{!11043, !11044, !11045, !11046, !11047}
!11043 = !DILocalVariable(name: "dev", arg: 1, scope: !11041, file: !1605, line: 107, type: !1510)
!11044 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11041, file: !1605, line: 107, type: !152)
!11045 = !DILocalVariable(name: "config", scope: !11041, file: !1605, line: 109, type: !10620)
!11046 = !DILocalVariable(name: "data", scope: !11041, file: !1605, line: 110, type: !10743)
!11047 = !DILocalVariable(name: "clock_rate", scope: !11041, file: !1605, line: 112, type: !152)
!11048 = !DILocation(line: 0, scope: !11041)
!11049 = !DILocation(line: 109, column: 48, scope: !11041)
!11050 = !DILocation(line: 110, column: 38, scope: !11041)
!11051 = !DILocation(line: 112, column: 2, scope: !11041)
!11052 = !DILocation(line: 123, column: 36, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11054, file: !1605, line: 123, column: 7)
!11054 = distinct !DILexicalBlock(scope: !11055, file: !1605, line: 122, column: 9)
!11055 = distinct !DILexicalBlock(scope: !11041, file: !1605, line: 115, column: 6)
!11056 = !DILocation(line: 124, column: 42, scope: !11053)
!11057 = !DILocation(line: 123, column: 7, scope: !11053)
!11058 = !DILocation(line: 125, column: 22, scope: !11053)
!11059 = !DILocation(line: 123, column: 7, scope: !11054)
!11060 = !DILocation(line: 126, column: 4, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11062, file: !1605, line: 126, column: 4)
!11062 = distinct !DILexicalBlock(scope: !11063, file: !1605, line: 126, column: 4)
!11063 = distinct !DILexicalBlock(scope: !11064, file: !1605, line: 126, column: 4)
!11064 = distinct !DILexicalBlock(scope: !11065, file: !1605, line: 126, column: 4)
!11065 = distinct !DILexicalBlock(scope: !11053, file: !1605, line: 125, column: 27)
!11066 = !DILocation(line: 127, column: 4, scope: !11065)
!11067 = !DILocation(line: 176, column: 36, scope: !11041)
!11068 = !DILocation(line: 176, column: 3, scope: !11041)
!11069 = !DILocation(line: 179, column: 32, scope: !11041)
!11070 = !DILocation(line: 180, column: 10, scope: !11041)
!11071 = !DILocation(line: 179, column: 3, scope: !11041)
!11072 = !DILocation(line: 189, column: 3, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !1605, line: 189, column: 3)
!11074 = distinct !DILexicalBlock(scope: !11041, file: !1605, line: 189, column: 3)
!11075 = !DILocation(line: 189, column: 3, scope: !11074)
!11076 = !DILocation(line: 189, column: 3, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11073, file: !1605, line: 189, column: 3)
!11078 = !DILocation(line: 195, column: 1, scope: !11041)
!11079 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10929, file: !10929, line: 410, type: !10992, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11080)
!11080 = !{!11081}
!11081 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11079, file: !10929, line: 410, type: !1551)
!11082 = !DILocation(line: 0, scope: !11079)
!11083 = !DILocation(line: 412, column: 3, scope: !11079)
!11084 = !DILocation(line: 413, column: 1, scope: !11079)
!11085 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !965, file: !965, line: 216, type: !1584, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11086)
!11086 = !{!11087, !11088, !11089, !11090}
!11087 = !DILocalVariable(name: "dev", arg: 1, scope: !11085, file: !965, line: 216, type: !1510)
!11088 = !DILocalVariable(name: "sys", arg: 2, scope: !11085, file: !965, line: 217, type: !1058)
!11089 = !DILocalVariable(name: "rate", arg: 3, scope: !11085, file: !965, line: 218, type: !1014)
!11090 = !DILocalVariable(name: "api", scope: !11085, file: !965, line: 220, type: !1562)
!11091 = !DILocation(line: 0, scope: !11085)
!11092 = !DILocation(line: 221, column: 49, scope: !11085)
!11093 = !DILocation(line: 223, column: 11, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11085, file: !965, line: 223, column: 6)
!11095 = !DILocation(line: 223, column: 20, scope: !11094)
!11096 = !DILocation(line: 223, column: 6, scope: !11085)
!11097 = !DILocation(line: 227, column: 9, scope: !11085)
!11098 = !DILocation(line: 227, column: 2, scope: !11085)
!11099 = !DILocation(line: 228, column: 1, scope: !11085)
!11100 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6013, file: !6013, line: 175, type: !6014, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11101)
!11101 = !{!11102}
!11102 = !DILocalVariable(name: "level", arg: 1, scope: !11100, file: !6013, line: 175, type: !107)
!11103 = !DILocation(line: 0, scope: !11100)
!11104 = !DILocation(line: 177, column: 2, scope: !11100)
!11105 = !DILocation(line: 189, column: 1, scope: !11100)
!11106 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10929, file: !10929, line: 615, type: !11107, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11109)
!11107 = !DISubroutineType(types: !11108)
!11108 = !{null, !1551, !152}
!11109 = !{!11110, !11111}
!11110 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11106, file: !10929, line: 615, type: !1551)
!11111 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11106, file: !10929, line: 615, type: !152)
!11112 = !DILocation(line: 0, scope: !11106)
!11113 = !DILocation(line: 617, column: 3, scope: !11106)
!11114 = !DILocation(line: 618, column: 1, scope: !11106)
!11115 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10929, file: !10929, line: 1020, type: !11116, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11118)
!11116 = !DISubroutineType(types: !11117)
!11117 = !{null, !1551, !152, !152, !152}
!11118 = !{!11119, !11120, !11121, !11122}
!11119 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11115, file: !10929, line: 1020, type: !1551)
!11120 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11115, file: !10929, line: 1020, type: !152)
!11121 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11115, file: !10929, line: 1020, type: !152)
!11122 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11115, file: !10929, line: 1021, type: !152)
!11123 = !DILocation(line: 0, scope: !11115)
!11124 = !DILocation(line: 1029, column: 30, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11126, file: !10929, line: 1028, column: 3)
!11126 = distinct !DILexicalBlock(scope: !11115, file: !10929, line: 1023, column: 7)
!11127 = !DILocation(line: 1029, column: 19, scope: !11125)
!11128 = !DILocation(line: 1029, column: 13, scope: !11125)
!11129 = !DILocation(line: 1029, column: 17, scope: !11125)
!11130 = !DILocation(line: 1031, column: 1, scope: !11115)
!11131 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10929, file: !10929, line: 949, type: !11107, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11132)
!11132 = !{!11133, !11134}
!11133 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11131, file: !10929, line: 949, type: !1551)
!11134 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11131, file: !10929, line: 949, type: !152)
!11135 = !DILocation(line: 0, scope: !11131)
!11136 = !DILocation(line: 951, column: 3, scope: !11131)
!11137 = !DILocation(line: 952, column: 1, scope: !11131)
!11138 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10929, file: !10929, line: 588, type: !11107, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11139)
!11139 = !{!11140, !11141}
!11140 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11138, file: !10929, line: 588, type: !1551)
!11141 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11138, file: !10929, line: 588, type: !152)
!11142 = !DILocation(line: 0, scope: !11138)
!11143 = !DILocation(line: 590, column: 3, scope: !11138)
!11144 = !DILocation(line: 591, column: 1, scope: !11138)
!11145 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10929, file: !10929, line: 805, type: !11107, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11146)
!11146 = !{!11147, !11148}
!11147 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11145, file: !10929, line: 805, type: !1551)
!11148 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11145, file: !10929, line: 805, type: !152)
!11149 = !DILocation(line: 0, scope: !11145)
!11150 = !DILocation(line: 807, column: 3, scope: !11145)
!11151 = !DILocation(line: 808, column: 1, scope: !11145)
!11152 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10929, file: !10929, line: 532, type: !11107, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11153)
!11153 = !{!11154, !11155}
!11154 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11152, file: !10929, line: 532, type: !1551)
!11155 = !DILocalVariable(name: "Parity", arg: 2, scope: !11152, file: !10929, line: 532, type: !152)
!11156 = !DILocation(line: 0, scope: !11152)
!11157 = !DILocation(line: 534, column: 3, scope: !11152)
!11158 = !DILocation(line: 535, column: 1, scope: !11152)
!11159 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10929, file: !10929, line: 1770, type: !10930, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11160)
!11160 = !{!11161}
!11161 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11159, file: !10929, line: 1770, type: !1551)
!11162 = !DILocation(line: 0, scope: !11159)
!11163 = !DILocation(line: 1772, column: 11, scope: !11159)
!11164 = !DILocation(line: 1772, column: 46, scope: !11159)
!11165 = !DILocation(line: 1772, column: 3, scope: !11159)
!11166 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10929, file: !10929, line: 1737, type: !10930, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11167)
!11167 = !{!11168}
!11168 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11166, file: !10929, line: 1737, type: !1551)
!11169 = !DILocation(line: 0, scope: !11166)
!11170 = !DILocation(line: 1739, column: 11, scope: !11166)
!11171 = !DILocation(line: 1739, column: 3, scope: !11166)
!11172 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10929, file: !10929, line: 1748, type: !10930, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11173)
!11173 = !{!11174}
!11174 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11172, file: !10929, line: 1748, type: !1551)
!11175 = !DILocation(line: 0, scope: !11172)
!11176 = !DILocation(line: 1750, column: 11, scope: !11172)
!11177 = !DILocation(line: 1750, column: 45, scope: !11172)
!11178 = !DILocation(line: 1750, column: 3, scope: !11172)
!11179 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10929, file: !10929, line: 1827, type: !10930, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11180)
!11180 = !{!11181}
!11181 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11179, file: !10929, line: 1827, type: !1551)
!11182 = !DILocation(line: 0, scope: !11179)
!11183 = !DILocation(line: 1829, column: 11, scope: !11179)
!11184 = !DILocation(line: 1829, column: 46, scope: !11179)
!11185 = !DILocation(line: 1829, column: 3, scope: !11179)
!11186 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10929, file: !10929, line: 1992, type: !10992, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11187)
!11187 = !{!11188}
!11188 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11186, file: !10929, line: 1992, type: !1551)
!11189 = !DILocation(line: 0, scope: !11186)
!11190 = !DILocation(line: 1994, column: 3, scope: !11186)
!11191 = !DILocation(line: 1995, column: 1, scope: !11186)
!11192 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10929, file: !10929, line: 1934, type: !10992, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11193)
!11193 = !{!11194, !11195}
!11194 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11192, file: !10929, line: 1934, type: !1551)
!11195 = !DILocalVariable(name: "tmpreg", scope: !11192, file: !10929, line: 1936, type: !227)
!11196 = !DILocation(line: 0, scope: !11192)
!11197 = !DILocation(line: 1936, column: 3, scope: !11192)
!11198 = !DILocation(line: 1936, column: 17, scope: !11192)
!11199 = !DILocation(line: 1937, column: 20, scope: !11192)
!11200 = !DILocation(line: 1937, column: 10, scope: !11192)
!11201 = !DILocation(line: 1938, column: 10, scope: !11192)
!11202 = !DILocation(line: 1939, column: 20, scope: !11192)
!11203 = !DILocation(line: 1939, column: 10, scope: !11192)
!11204 = !DILocation(line: 1940, column: 10, scope: !11192)
!11205 = !DILocation(line: 1941, column: 1, scope: !11192)
!11206 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10929, file: !10929, line: 1877, type: !10992, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11207)
!11207 = !{!11208, !11209}
!11208 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11206, file: !10929, line: 1877, type: !1551)
!11209 = !DILocalVariable(name: "tmpreg", scope: !11206, file: !10929, line: 1879, type: !227)
!11210 = !DILocation(line: 0, scope: !11206)
!11211 = !DILocation(line: 1879, column: 3, scope: !11206)
!11212 = !DILocation(line: 1879, column: 17, scope: !11206)
!11213 = !DILocation(line: 1880, column: 20, scope: !11206)
!11214 = !DILocation(line: 1880, column: 10, scope: !11206)
!11215 = !DILocation(line: 1881, column: 10, scope: !11206)
!11216 = !DILocation(line: 1882, column: 20, scope: !11206)
!11217 = !DILocation(line: 1882, column: 10, scope: !11206)
!11218 = !DILocation(line: 1883, column: 10, scope: !11206)
!11219 = !DILocation(line: 1884, column: 1, scope: !11206)
!11220 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10929, file: !10929, line: 1896, type: !10992, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11221)
!11221 = !{!11222, !11223}
!11222 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11220, file: !10929, line: 1896, type: !1551)
!11223 = !DILocalVariable(name: "tmpreg", scope: !11220, file: !10929, line: 1898, type: !227)
!11224 = !DILocation(line: 0, scope: !11220)
!11225 = !DILocation(line: 1898, column: 3, scope: !11220)
!11226 = !DILocation(line: 1898, column: 17, scope: !11220)
!11227 = !DILocation(line: 1899, column: 20, scope: !11220)
!11228 = !DILocation(line: 1899, column: 10, scope: !11220)
!11229 = !DILocation(line: 1900, column: 10, scope: !11220)
!11230 = !DILocation(line: 1901, column: 20, scope: !11220)
!11231 = !DILocation(line: 1901, column: 10, scope: !11220)
!11232 = !DILocation(line: 1902, column: 10, scope: !11220)
!11233 = !DILocation(line: 1903, column: 1, scope: !11220)
!11234 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10929, file: !10929, line: 1915, type: !10992, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11235)
!11235 = !{!11236, !11237}
!11236 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11234, file: !10929, line: 1915, type: !1551)
!11237 = !DILocalVariable(name: "tmpreg", scope: !11234, file: !10929, line: 1917, type: !227)
!11238 = !DILocation(line: 0, scope: !11234)
!11239 = !DILocation(line: 1917, column: 3, scope: !11234)
!11240 = !DILocation(line: 1917, column: 17, scope: !11234)
!11241 = !DILocation(line: 1918, column: 20, scope: !11234)
!11242 = !DILocation(line: 1918, column: 10, scope: !11234)
!11243 = !DILocation(line: 1919, column: 10, scope: !11234)
!11244 = !DILocation(line: 1920, column: 20, scope: !11234)
!11245 = !DILocation(line: 1920, column: 10, scope: !11234)
!11246 = !DILocation(line: 1921, column: 10, scope: !11234)
!11247 = !DILocation(line: 1922, column: 1, scope: !11234)
!11248 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10929, file: !10929, line: 1814, type: !10930, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11249)
!11249 = !{!11250}
!11250 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11248, file: !10929, line: 1814, type: !1551)
!11251 = !DILocation(line: 0, scope: !11248)
!11252 = !DILocation(line: 1816, column: 11, scope: !11248)
!11253 = !DILocation(line: 1816, column: 46, scope: !11248)
!11254 = !DILocation(line: 1816, column: 3, scope: !11248)
!11255 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10929, file: !10929, line: 2426, type: !11256, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11258)
!11256 = !DISubroutineType(types: !11257)
!11257 = !{null, !1551, !195}
!11258 = !{!11259, !11260}
!11259 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11255, file: !10929, line: 2426, type: !1551)
!11260 = !DILocalVariable(name: "Value", arg: 2, scope: !11255, file: !10929, line: 2426, type: !195)
!11261 = !DILocation(line: 0, scope: !11255)
!11262 = !DILocation(line: 2428, column: 16, scope: !11255)
!11263 = !DILocation(line: 2428, column: 11, scope: !11255)
!11264 = !DILocation(line: 2428, column: 14, scope: !11255)
!11265 = !DILocation(line: 2429, column: 1, scope: !11255)
!11266 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10929, file: !10929, line: 1792, type: !10930, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11267)
!11267 = !{!11268}
!11268 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11266, file: !10929, line: 1792, type: !1551)
!11269 = !DILocation(line: 0, scope: !11266)
!11270 = !DILocation(line: 1794, column: 11, scope: !11266)
!11271 = !DILocation(line: 1794, column: 47, scope: !11266)
!11272 = !DILocation(line: 1794, column: 3, scope: !11266)
!11273 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10929, file: !10929, line: 2403, type: !11274, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11276)
!11274 = !DISubroutineType(types: !11275)
!11275 = !{!195, !1551}
!11276 = !{!11277}
!11277 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11273, file: !10929, line: 2403, type: !1551)
!11278 = !DILocation(line: 0, scope: !11273)
!11279 = !DILocation(line: 2405, column: 20, scope: !11273)
!11280 = !DILocation(line: 2405, column: 10, scope: !11273)
!11281 = !DILocation(line: 2405, column: 3, scope: !11273)
!11282 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1605, file: !1605, line: 1583, type: !1531, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11283)
!11283 = !{!11284, !11285, !11286, !11287, !11288, !11289}
!11284 = !DILocalVariable(name: "dev", arg: 1, scope: !11282, file: !1605, line: 1583, type: !1510)
!11285 = !DILocalVariable(name: "config", scope: !11282, file: !1605, line: 1585, type: !10620)
!11286 = !DILocalVariable(name: "data", scope: !11282, file: !1605, line: 1586, type: !10743)
!11287 = !DILocalVariable(name: "ll_parity", scope: !11282, file: !1605, line: 1587, type: !152)
!11288 = !DILocalVariable(name: "ll_datawidth", scope: !11282, file: !1605, line: 1588, type: !152)
!11289 = !DILocalVariable(name: "err", scope: !11282, file: !1605, line: 1589, type: !107)
!11290 = !DILocation(line: 0, scope: !11282)
!11291 = !DILocation(line: 1585, column: 48, scope: !11282)
!11292 = !DILocation(line: 1586, column: 38, scope: !11282)
!11293 = !DILocation(line: 1591, column: 2, scope: !11282)
!11294 = !DILocation(line: 1593, column: 29, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11282, file: !1605, line: 1593, column: 6)
!11296 = !DILocation(line: 1593, column: 7, scope: !11295)
!11297 = !DILocation(line: 1593, column: 6, scope: !11282)
!11298 = !DILocation(line: 1594, column: 3, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11300, file: !1605, line: 1594, column: 3)
!11300 = distinct !DILexicalBlock(scope: !11301, file: !1605, line: 1594, column: 3)
!11301 = distinct !DILexicalBlock(scope: !11302, file: !1605, line: 1594, column: 3)
!11302 = distinct !DILexicalBlock(scope: !11303, file: !1605, line: 1594, column: 3)
!11303 = distinct !DILexicalBlock(scope: !11295, file: !1605, line: 1593, column: 37)
!11304 = !DILocation(line: 1595, column: 3, scope: !11303)
!11305 = !DILocation(line: 1599, column: 31, scope: !11282)
!11306 = !DILocation(line: 1599, column: 71, scope: !11282)
!11307 = !DILocation(line: 1599, column: 8, scope: !11282)
!11308 = !DILocation(line: 1600, column: 10, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11282, file: !1605, line: 1600, column: 6)
!11310 = !DILocation(line: 1600, column: 6, scope: !11282)
!11311 = !DILocation(line: 1601, column: 3, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11313, file: !1605, line: 1601, column: 3)
!11313 = distinct !DILexicalBlock(scope: !11314, file: !1605, line: 1601, column: 3)
!11314 = distinct !DILexicalBlock(scope: !11315, file: !1605, line: 1601, column: 3)
!11315 = distinct !DILexicalBlock(scope: !11316, file: !1605, line: 1601, column: 3)
!11316 = distinct !DILexicalBlock(scope: !11309, file: !1605, line: 1600, column: 16)
!11317 = !DILocation(line: 1602, column: 3, scope: !11316)
!11318 = !DILocation(line: 1616, column: 36, scope: !11282)
!11319 = !DILocation(line: 1616, column: 8, scope: !11282)
!11320 = !DILocation(line: 1617, column: 10, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11282, file: !1605, line: 1617, column: 6)
!11322 = !DILocation(line: 1617, column: 6, scope: !11282)
!11323 = !DILocation(line: 1621, column: 27, scope: !11282)
!11324 = !DILocation(line: 1621, column: 2, scope: !11282)
!11325 = !DILocation(line: 1624, column: 40, scope: !11282)
!11326 = !DILocation(line: 1624, column: 2, scope: !11282)
!11327 = !DILocation(line: 1630, column: 14, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11282, file: !1605, line: 1630, column: 6)
!11329 = !DILocation(line: 1630, column: 6, scope: !11282)
!11330 = !DILocation(line: 1640, column: 4, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11332, file: !1605, line: 1640, column: 4)
!11332 = distinct !DILexicalBlock(scope: !11333, file: !1605, line: 1640, column: 4)
!11333 = distinct !DILexicalBlock(scope: !11334, file: !1605, line: 1640, column: 4)
!11334 = distinct !DILexicalBlock(scope: !11335, file: !1605, line: 1640, column: 4)
!11335 = distinct !DILexicalBlock(scope: !11336, file: !1605, line: 1639, column: 28)
!11336 = distinct !DILexicalBlock(scope: !11337, file: !1605, line: 1639, column: 7)
!11337 = distinct !DILexicalBlock(scope: !11338, file: !1605, line: 1638, column: 9)
!11338 = distinct !DILexicalBlock(scope: !11328, file: !1605, line: 1634, column: 13)
!11339 = !DILocation(line: 0, scope: !11328)
!11340 = !DILocation(line: 1649, column: 35, scope: !11282)
!11341 = !DILocation(line: 1649, column: 2, scope: !11282)
!11342 = !DILocation(line: 1654, column: 14, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11282, file: !1605, line: 1654, column: 6)
!11344 = !DILocation(line: 1654, column: 6, scope: !11282)
!11345 = !DILocation(line: 1655, column: 3, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11343, file: !1605, line: 1654, column: 31)
!11347 = !DILocation(line: 1656, column: 2, scope: !11346)
!11348 = !DILocation(line: 1659, column: 37, scope: !11282)
!11349 = !DILocation(line: 1659, column: 2, scope: !11282)
!11350 = !DILocation(line: 1662, column: 14, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11282, file: !1605, line: 1662, column: 6)
!11352 = !DILocation(line: 1662, column: 6, scope: !11282)
!11353 = !DILocation(line: 1663, column: 37, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11351, file: !1605, line: 1662, column: 27)
!11355 = !DILocation(line: 1663, column: 3, scope: !11354)
!11356 = !DILocation(line: 1664, column: 2, scope: !11354)
!11357 = !DILocation(line: 1684, column: 26, scope: !11282)
!11358 = !DILocation(line: 1684, column: 2, scope: !11282)
!11359 = !DILocation(line: 1722, column: 2, scope: !11282)
!11360 = !DILocation(line: 1724, column: 1, scope: !11282)
!11361 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1605, file: !1605, line: 651, type: !11362, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11364)
!11362 = !DISubroutineType(types: !11363)
!11363 = !{null, !1510}
!11364 = !{!11365, !11366, !11367}
!11365 = !DILocalVariable(name: "dev", arg: 1, scope: !11361, file: !1605, line: 651, type: !1510)
!11366 = !DILocalVariable(name: "data", scope: !11361, file: !1605, line: 653, type: !10743)
!11367 = !DILocalVariable(name: "clk", scope: !11361, file: !1605, line: 654, type: !11368)
!11368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1510)
!11369 = !DILocation(line: 0, scope: !11361)
!11370 = !DILocation(line: 653, column: 38, scope: !11361)
!11371 = !DILocation(line: 656, column: 8, scope: !11361)
!11372 = !DILocation(line: 656, column: 14, scope: !11361)
!11373 = !DILocation(line: 657, column: 1, scope: !11361)
!11374 = distinct !DISubprogram(name: "device_is_ready", scope: !9739, file: !9739, line: 47, type: !11375, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11377)
!11375 = !DISubroutineType(types: !11376)
!11376 = !{!145, !1510}
!11377 = !{!11378}
!11378 = !DILocalVariable(name: "dev", arg: 1, scope: !11374, file: !9739, line: 47, type: !1510)
!11379 = !DILocation(line: 0, scope: !11374)
!11380 = !DILocation(line: 55, column: 2, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11374, file: !9739, line: 55, column: 2)
!11382 = !{i64 2155046122}
!11383 = !DILocation(line: 56, column: 9, scope: !11374)
!11384 = !DILocation(line: 56, column: 2, scope: !11374)
!11385 = distinct !DISubprogram(name: "clock_control_on", scope: !965, file: !965, line: 123, type: !1569, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11386)
!11386 = !{!11387, !11388, !11389}
!11387 = !DILocalVariable(name: "dev", arg: 1, scope: !11385, file: !965, line: 123, type: !1510)
!11388 = !DILocalVariable(name: "sys", arg: 2, scope: !11385, file: !965, line: 124, type: !1058)
!11389 = !DILocalVariable(name: "api", scope: !11385, file: !965, line: 126, type: !1562)
!11390 = !DILocation(line: 0, scope: !11385)
!11391 = !DILocation(line: 127, column: 49, scope: !11385)
!11392 = !DILocation(line: 129, column: 14, scope: !11385)
!11393 = !DILocation(line: 129, column: 9, scope: !11385)
!11394 = !DILocation(line: 129, column: 2, scope: !11385)
!11395 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1645, file: !1645, line: 342, type: !11396, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11398)
!11396 = !DISubroutineType(types: !11397)
!11397 = !{!107, !1642, !195}
!11398 = !{!11399, !11400, !11401, !11402}
!11399 = !DILocalVariable(name: "config", arg: 1, scope: !11395, file: !1645, line: 342, type: !1642)
!11400 = !DILocalVariable(name: "id", arg: 2, scope: !11395, file: !1645, line: 343, type: !195)
!11401 = !DILocalVariable(name: "ret", scope: !11395, file: !1645, line: 345, type: !107)
!11402 = !DILocalVariable(name: "state", scope: !11395, file: !1645, line: 346, type: !1648)
!11403 = !DILocation(line: 0, scope: !11395)
!11404 = !DILocation(line: 346, column: 2, scope: !11395)
!11405 = !DILocation(line: 348, column: 8, scope: !11395)
!11406 = !DILocation(line: 349, column: 10, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11395, file: !1645, line: 349, column: 6)
!11408 = !DILocation(line: 349, column: 6, scope: !11395)
!11409 = !DILocation(line: 353, column: 44, scope: !11395)
!11410 = !DILocation(line: 353, column: 9, scope: !11395)
!11411 = !DILocation(line: 353, column: 2, scope: !11395)
!11412 = !DILocation(line: 354, column: 1, scope: !11395)
!11413 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10929, file: !10929, line: 497, type: !11107, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11414)
!11414 = !{!11415, !11416, !11417}
!11415 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11413, file: !10929, line: 497, type: !1551)
!11416 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11413, file: !10929, line: 497, type: !152)
!11417 = !DILocalVariable(name: "val", scope: !11418, file: !10929, line: 499, type: !152)
!11418 = distinct !DILexicalBlock(scope: !11413, file: !10929, line: 499, column: 3)
!11419 = !DILocation(line: 0, scope: !11413)
!11420 = !DILocation(line: 499, column: 3, scope: !11418)
!11421 = !DILocalVariable(name: "addr", arg: 1, scope: !11422, file: !6254, line: 476, type: !1601)
!11422 = distinct !DISubprogram(name: "__LDREXW", scope: !6254, file: !6254, line: 476, type: !11423, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11425)
!11423 = !DISubroutineType(types: !11424)
!11424 = !{!152, !1601}
!11425 = !{!11421, !11426}
!11426 = !DILocalVariable(name: "result", scope: !11422, file: !6254, line: 478, type: !152)
!11427 = !DILocation(line: 0, scope: !11422, inlinedAt: !11428)
!11428 = distinct !DILocation(line: 499, column: 3, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11418, file: !10929, line: 499, column: 3)
!11430 = !DILocation(line: 480, column: 4, scope: !11422, inlinedAt: !11428)
!11431 = !{i64 3532102}
!11432 = !DILocation(line: 499, column: 3, scope: !11429)
!11433 = !DILocation(line: 0, scope: !11418)
!11434 = !DILocalVariable(name: "value", arg: 1, scope: !11435, file: !6254, line: 527, type: !152)
!11435 = distinct !DISubprogram(name: "__STREXW", scope: !6254, file: !6254, line: 527, type: !11436, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11438)
!11436 = !DISubroutineType(types: !11437)
!11437 = !{!152, !152, !1601}
!11438 = !{!11434, !11439, !11440}
!11439 = !DILocalVariable(name: "addr", arg: 2, scope: !11435, file: !6254, line: 527, type: !1601)
!11440 = !DILocalVariable(name: "result", scope: !11435, file: !6254, line: 529, type: !152)
!11441 = !DILocation(line: 0, scope: !11435, inlinedAt: !11442)
!11442 = distinct !DILocation(line: 499, column: 3, scope: !11418)
!11443 = !DILocation(line: 531, column: 4, scope: !11435, inlinedAt: !11442)
!11444 = !{i64 3533538}
!11445 = distinct !{!11445, !11420, !11420}
!11446 = !DILocation(line: 500, column: 1, scope: !11413)
!11447 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10929, file: !10929, line: 850, type: !11116, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11448)
!11448 = !{!11449, !11450, !11451, !11452}
!11449 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11447, file: !10929, line: 850, type: !1551)
!11450 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11447, file: !10929, line: 850, type: !152)
!11451 = !DILocalVariable(name: "Parity", arg: 3, scope: !11447, file: !10929, line: 850, type: !152)
!11452 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11447, file: !10929, line: 851, type: !152)
!11453 = !DILocation(line: 0, scope: !11447)
!11454 = !DILocation(line: 853, column: 3, scope: !11447)
!11455 = !DILocation(line: 854, column: 3, scope: !11447)
!11456 = !DILocation(line: 855, column: 1, scope: !11447)
!11457 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10929, file: !10929, line: 1337, type: !10992, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11458)
!11458 = !{!11459}
!11459 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11457, file: !10929, line: 1337, type: !1551)
!11460 = !DILocation(line: 0, scope: !11457)
!11461 = !DILocation(line: 1339, column: 3, scope: !11457)
!11462 = !DILocation(line: 1340, column: 1, scope: !11457)
!11463 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1645, file: !1645, line: 316, type: !11464, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11466)
!11464 = !DISubroutineType(types: !11465)
!11465 = !{!107, !1642, !1648}
!11466 = !{!11467, !11468, !11469}
!11467 = !DILocalVariable(name: "config", arg: 1, scope: !11463, file: !1645, line: 317, type: !1642)
!11468 = !DILocalVariable(name: "state", arg: 2, scope: !11463, file: !1645, line: 318, type: !1648)
!11469 = !DILocalVariable(name: "reg", scope: !11463, file: !1645, line: 320, type: !22)
!11470 = !DILocation(line: 0, scope: !11463)
!11471 = !DILocation(line: 329, column: 39, scope: !11463)
!11472 = !DILocation(line: 329, column: 52, scope: !11463)
!11473 = !DILocation(line: 329, column: 9, scope: !11463)
!11474 = !DILocation(line: 329, column: 2, scope: !11463)
!11475 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11375, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11476)
!11476 = !{!11477}
!11477 = !DILocalVariable(name: "dev", arg: 1, scope: !11475, file: !247, line: 730, type: !1510)
!11478 = !DILocation(line: 0, scope: !11475)
!11479 = !DILocation(line: 732, column: 9, scope: !11475)
!11480 = !DILocation(line: 732, column: 2, scope: !11475)
!11481 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1766, file: !1766, line: 270, type: !1772, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11482)
!11482 = !{!11483}
!11483 = !DILocalVariable(name: "dev", arg: 1, scope: !11481, file: !1766, line: 270, type: !1774)
!11484 = !DILocation(line: 0, scope: !11481)
!11485 = !DILocation(line: 274, column: 2, scope: !11481)
!11486 = !DILocation(line: 275, column: 12, scope: !11481)
!11487 = !DILocation(line: 276, column: 15, scope: !11481)
!11488 = !DILocation(line: 277, column: 16, scope: !11481)
!11489 = !DILocation(line: 278, column: 15, scope: !11481)
!11490 = !DILocation(line: 279, column: 16, scope: !11481)
!11491 = !DILocation(line: 282, column: 2, scope: !11481)
!11492 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6294, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11493)
!11493 = !{!11494, !11495}
!11494 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11492, file: !463, line: 1814, type: !921)
!11495 = !DILocalVariable(name: "priority", arg: 2, scope: !11492, file: !463, line: 1814, type: !152)
!11496 = !DILocation(line: 0, scope: !11492)
!11497 = !DILocation(line: 1822, column: 46, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11499, file: !463, line: 1821, column: 3)
!11499 = distinct !DILexicalBlock(scope: !11492, file: !463, line: 1816, column: 7)
!11500 = !DILocation(line: 1824, column: 1, scope: !11492)
!11501 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1766, file: !1766, line: 118, type: !131, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11502)
!11502 = !{!11503, !11504}
!11503 = !DILocalVariable(name: "arg", arg: 1, scope: !11501, file: !1766, line: 118, type: !106)
!11504 = !DILocalVariable(name: "dticks", scope: !11501, file: !1766, line: 121, type: !152)
!11505 = !DILocation(line: 0, scope: !11501)
!11506 = !DILocation(line: 124, column: 2, scope: !11501)
!11507 = !DILocation(line: 129, column: 17, scope: !11501)
!11508 = !DILocation(line: 129, column: 14, scope: !11501)
!11509 = !DILocation(line: 130, column: 15, scope: !11501)
!11510 = !DILocation(line: 145, column: 27, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !1766, line: 132, column: 16)
!11512 = distinct !DILexicalBlock(scope: !11501, file: !1766, line: 132, column: 6)
!11513 = !DILocation(line: 145, column: 25, scope: !11511)
!11514 = !DILocation(line: 145, column: 45, scope: !11511)
!11515 = !DILocation(line: 146, column: 30, scope: !11511)
!11516 = !DILocation(line: 146, column: 20, scope: !11511)
!11517 = !DILocation(line: 147, column: 3, scope: !11511)
!11518 = !DILocation(line: 151, column: 2, scope: !11501)
!11519 = !DILocation(line: 152, column: 1, scope: !11501)
!11520 = distinct !DISubprogram(name: "elapsed", scope: !1766, file: !1766, line: 85, type: !6341, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11521)
!11521 = !{!11522, !11523, !11524}
!11522 = !DILocalVariable(name: "val1", scope: !11520, file: !1766, line: 87, type: !152)
!11523 = !DILocalVariable(name: "ctrl", scope: !11520, file: !1766, line: 88, type: !152)
!11524 = !DILocalVariable(name: "val2", scope: !11520, file: !1766, line: 89, type: !152)
!11525 = !DILocation(line: 87, column: 27, scope: !11520)
!11526 = !DILocation(line: 0, scope: !11520)
!11527 = !DILocation(line: 88, column: 27, scope: !11520)
!11528 = !DILocation(line: 89, column: 27, scope: !11520)
!11529 = !DILocation(line: 105, column: 12, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11520, file: !1766, line: 105, column: 6)
!11531 = !DILocation(line: 106, column: 6, scope: !11530)
!11532 = !DILocation(line: 107, column: 16, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11530, file: !1766, line: 106, column: 24)
!11534 = !DILocation(line: 111, column: 18, scope: !11533)
!11535 = !DILocation(line: 112, column: 2, scope: !11533)
!11536 = !DILocation(line: 114, column: 20, scope: !11520)
!11537 = !DILocation(line: 114, column: 30, scope: !11520)
!11538 = !DILocation(line: 114, column: 28, scope: !11520)
!11539 = !DILocation(line: 114, column: 2, scope: !11520)
!11540 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1766, file: !1766, line: 154, type: !11541, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11543)
!11541 = !DISubroutineType(types: !11542)
!11542 = !{null, !895, !145}
!11543 = !{!11544, !11545, !11546, !11547, !11548, !11549, !11550, !11555, !11556}
!11544 = !DILocalVariable(name: "ticks", arg: 1, scope: !11540, file: !1766, line: 154, type: !895)
!11545 = !DILocalVariable(name: "idle", arg: 2, scope: !11540, file: !1766, line: 154, type: !145)
!11546 = !DILocalVariable(name: "delay", scope: !11540, file: !1766, line: 169, type: !152)
!11547 = !DILocalVariable(name: "val1", scope: !11540, file: !1766, line: 170, type: !152)
!11548 = !DILocalVariable(name: "val2", scope: !11540, file: !1766, line: 170, type: !152)
!11549 = !DILocalVariable(name: "last_load_", scope: !11540, file: !1766, line: 171, type: !152)
!11550 = !DILocalVariable(name: "key", scope: !11540, file: !1766, line: 176, type: !11551)
!11551 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !11552)
!11552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !11553)
!11553 = !{!11554}
!11554 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11552, file: !420, line: 33, baseType: !107, size: 32)
!11555 = !DILocalVariable(name: "pending", scope: !11540, file: !1766, line: 178, type: !152)
!11556 = !DILocalVariable(name: "unannounced", scope: !11540, file: !1766, line: 185, type: !152)
!11557 = !DILocation(line: 0, scope: !11540)
!11558 = !DILocation(line: 162, column: 49, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11540, file: !1766, line: 162, column: 6)
!11560 = !DILocation(line: 163, column: 17, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11559, file: !1766, line: 162, column: 78)
!11562 = !DILocation(line: 164, column: 13, scope: !11561)
!11563 = !DILocation(line: 165, column: 3, scope: !11561)
!11564 = !DILocation(line: 171, column: 24, scope: !11540)
!11565 = !DILocation(line: 173, column: 10, scope: !11540)
!11566 = !DILocation(line: 174, column: 10, scope: !11540)
!11567 = !DILocalVariable(name: "l", arg: 1, scope: !11568, file: !420, line: 136, type: !11571)
!11568 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !11569, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11572)
!11569 = !DISubroutineType(types: !11570)
!11570 = !{!11551, !11571}
!11571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 32)
!11572 = !{!11567, !11573}
!11573 = !DILocalVariable(name: "k", scope: !11568, file: !420, line: 139, type: !11551)
!11574 = !DILocation(line: 0, scope: !11568, inlinedAt: !11575)
!11575 = distinct !DILocation(line: 176, column: 25, scope: !11540)
!11576 = !DILocation(line: 55, column: 2, scope: !11577, inlinedAt: !11581)
!11577 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5935, file: !5935, line: 42, type: !5936, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11578)
!11578 = !{!11579, !11580}
!11579 = !DILocalVariable(name: "key", scope: !11577, file: !5935, line: 44, type: !32)
!11580 = !DILocalVariable(name: "tmp", scope: !11577, file: !5935, line: 53, type: !32)
!11581 = distinct !DILocation(line: 145, column: 10, scope: !11568, inlinedAt: !11575)
!11582 = !{i64 2226189}
!11583 = !DILocation(line: 0, scope: !11577, inlinedAt: !11581)
!11584 = !DILocation(line: 148, column: 2, scope: !11585, inlinedAt: !11575)
!11585 = distinct !DILexicalBlock(scope: !11586, file: !420, line: 148, column: 2)
!11586 = distinct !DILexicalBlock(scope: !11568, file: !420, line: 148, column: 2)
!11587 = !DILocation(line: 148, column: 2, scope: !11586, inlinedAt: !11575)
!11588 = !DILocation(line: 148, column: 2, scope: !11589, inlinedAt: !11575)
!11589 = distinct !DILexicalBlock(scope: !11585, file: !420, line: 148, column: 2)
!11590 = !DILocation(line: 160, column: 2, scope: !11568, inlinedAt: !11575)
!11591 = !DILocation(line: 178, column: 21, scope: !11540)
!11592 = !DILocation(line: 180, column: 18, scope: !11540)
!11593 = !DILocation(line: 182, column: 14, scope: !11540)
!11594 = !DILocation(line: 183, column: 15, scope: !11540)
!11595 = !DILocation(line: 185, column: 39, scope: !11540)
!11596 = !DILocation(line: 185, column: 37, scope: !11540)
!11597 = !DILocation(line: 187, column: 27, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11540, file: !1766, line: 187, column: 6)
!11599 = !DILocation(line: 187, column: 6, scope: !11540)
!11600 = !DILocation(line: 202, column: 27, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11598, file: !1766, line: 195, column: 9)
!11602 = !DILocation(line: 202, column: 48, scope: !11601)
!11603 = !DILocation(line: 203, column: 9, scope: !11601)
!11604 = !DILocation(line: 204, column: 11, scope: !11601)
!11605 = !DILocation(line: 205, column: 13, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11601, file: !1766, line: 205, column: 7)
!11607 = !DILocation(line: 205, column: 7, scope: !11601)
!11608 = !DILocation(line: 0, scope: !11598)
!11609 = !DILocation(line: 212, column: 18, scope: !11540)
!11610 = !DILocation(line: 214, column: 28, scope: !11540)
!11611 = !DILocation(line: 214, column: 16, scope: !11540)
!11612 = !DILocation(line: 215, column: 15, scope: !11540)
!11613 = !DILocation(line: 227, column: 11, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11540, file: !1766, line: 227, column: 6)
!11615 = !DILocation(line: 227, column: 6, scope: !11540)
!11616 = !DILocation(line: 228, column: 15, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11614, file: !1766, line: 227, column: 19)
!11618 = !DILocation(line: 228, column: 38, scope: !11617)
!11619 = !DILocation(line: 228, column: 24, scope: !11617)
!11620 = !DILocation(line: 229, column: 2, scope: !11617)
!11621 = !DILocation(line: 230, column: 24, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11614, file: !1766, line: 229, column: 9)
!11623 = !DILocation(line: 230, column: 15, scope: !11622)
!11624 = !DILocation(line: 0, scope: !11614)
!11625 = !DILocalVariable(name: "key", arg: 2, scope: !11626, file: !420, line: 190, type: !11551)
!11626 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !11627, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11629)
!11627 = !DISubroutineType(types: !11628)
!11628 = !{null, !11571, !11551}
!11629 = !{!11630, !11625}
!11630 = !DILocalVariable(name: "l", arg: 1, scope: !11626, file: !420, line: 189, type: !11571)
!11631 = !DILocation(line: 0, scope: !11626, inlinedAt: !11632)
!11632 = distinct !DILocation(line: 232, column: 2, scope: !11540)
!11633 = !DILocation(line: 194, column: 2, scope: !11634, inlinedAt: !11632)
!11634 = distinct !DILexicalBlock(scope: !11635, file: !420, line: 194, column: 2)
!11635 = distinct !DILexicalBlock(scope: !11626, file: !420, line: 194, column: 2)
!11636 = !DILocation(line: 194, column: 2, scope: !11635, inlinedAt: !11632)
!11637 = !DILocation(line: 194, column: 2, scope: !11638, inlinedAt: !11632)
!11638 = distinct !DILexicalBlock(scope: !11634, file: !420, line: 194, column: 2)
!11639 = !DILocalVariable(name: "key", arg: 1, scope: !11640, file: !5935, line: 84, type: !32)
!11640 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5935, file: !5935, line: 84, type: !5946, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11641)
!11641 = !{!11639}
!11642 = !DILocation(line: 0, scope: !11640, inlinedAt: !11643)
!11643 = distinct !DILocation(line: 215, column: 2, scope: !11626, inlinedAt: !11632)
!11644 = !DILocation(line: 95, column: 2, scope: !11640, inlinedAt: !11643)
!11645 = !{i64 2227006}
!11646 = !DILocation(line: 234, column: 1, scope: !11540)
!11647 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1766, file: !1766, line: 236, type: !6341, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11648)
!11648 = !{!11649, !11650}
!11649 = !DILocalVariable(name: "key", scope: !11647, file: !1766, line: 242, type: !11551)
!11650 = !DILocalVariable(name: "cyc", scope: !11647, file: !1766, line: 243, type: !152)
!11651 = !DILocation(line: 0, scope: !11568, inlinedAt: !11652)
!11652 = distinct !DILocation(line: 242, column: 25, scope: !11647)
!11653 = !DILocation(line: 55, column: 2, scope: !11577, inlinedAt: !11654)
!11654 = distinct !DILocation(line: 145, column: 10, scope: !11568, inlinedAt: !11652)
!11655 = !DILocation(line: 0, scope: !11577, inlinedAt: !11654)
!11656 = !DILocation(line: 148, column: 2, scope: !11585, inlinedAt: !11652)
!11657 = !DILocation(line: 148, column: 2, scope: !11586, inlinedAt: !11652)
!11658 = !DILocation(line: 148, column: 2, scope: !11589, inlinedAt: !11652)
!11659 = !DILocation(line: 160, column: 2, scope: !11568, inlinedAt: !11652)
!11660 = !DILocation(line: 0, scope: !11647)
!11661 = !DILocation(line: 243, column: 17, scope: !11647)
!11662 = !DILocation(line: 243, column: 29, scope: !11647)
!11663 = !DILocation(line: 243, column: 43, scope: !11647)
!11664 = !DILocation(line: 0, scope: !11626, inlinedAt: !11665)
!11665 = distinct !DILocation(line: 245, column: 2, scope: !11647)
!11666 = !DILocation(line: 194, column: 2, scope: !11634, inlinedAt: !11665)
!11667 = !DILocation(line: 194, column: 2, scope: !11635, inlinedAt: !11665)
!11668 = !DILocation(line: 194, column: 2, scope: !11638, inlinedAt: !11665)
!11669 = !DILocation(line: 243, column: 27, scope: !11647)
!11670 = !DILocation(line: 243, column: 41, scope: !11647)
!11671 = !DILocation(line: 0, scope: !11640, inlinedAt: !11672)
!11672 = distinct !DILocation(line: 215, column: 2, scope: !11626, inlinedAt: !11665)
!11673 = !DILocation(line: 95, column: 2, scope: !11640, inlinedAt: !11672)
!11674 = !DILocation(line: 246, column: 13, scope: !11647)
!11675 = !DILocation(line: 246, column: 2, scope: !11647)
!11676 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1766, file: !1766, line: 249, type: !6341, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11677)
!11677 = !{!11678, !11679}
!11678 = !DILocalVariable(name: "key", scope: !11676, file: !1766, line: 251, type: !11551)
!11679 = !DILocalVariable(name: "ret", scope: !11676, file: !1766, line: 252, type: !152)
!11680 = !DILocation(line: 0, scope: !11568, inlinedAt: !11681)
!11681 = distinct !DILocation(line: 251, column: 25, scope: !11676)
!11682 = !DILocation(line: 55, column: 2, scope: !11577, inlinedAt: !11683)
!11683 = distinct !DILocation(line: 145, column: 10, scope: !11568, inlinedAt: !11681)
!11684 = !DILocation(line: 0, scope: !11577, inlinedAt: !11683)
!11685 = !DILocation(line: 148, column: 2, scope: !11585, inlinedAt: !11681)
!11686 = !DILocation(line: 148, column: 2, scope: !11586, inlinedAt: !11681)
!11687 = !DILocation(line: 148, column: 2, scope: !11589, inlinedAt: !11681)
!11688 = !DILocation(line: 160, column: 2, scope: !11568, inlinedAt: !11681)
!11689 = !DILocation(line: 0, scope: !11676)
!11690 = !DILocation(line: 252, column: 17, scope: !11676)
!11691 = !DILocation(line: 252, column: 29, scope: !11676)
!11692 = !DILocation(line: 0, scope: !11626, inlinedAt: !11693)
!11693 = distinct !DILocation(line: 254, column: 2, scope: !11676)
!11694 = !DILocation(line: 194, column: 2, scope: !11634, inlinedAt: !11693)
!11695 = !DILocation(line: 194, column: 2, scope: !11635, inlinedAt: !11693)
!11696 = !DILocation(line: 194, column: 2, scope: !11638, inlinedAt: !11693)
!11697 = !DILocation(line: 252, column: 27, scope: !11676)
!11698 = !DILocation(line: 0, scope: !11640, inlinedAt: !11699)
!11699 = distinct !DILocation(line: 215, column: 2, scope: !11626, inlinedAt: !11693)
!11700 = !DILocation(line: 95, column: 2, scope: !11640, inlinedAt: !11699)
!11701 = !DILocation(line: 255, column: 2, scope: !11676)
!11702 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1766, file: !1766, line: 258, type: !3082, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !2156)
!11703 = !DILocation(line: 260, column: 6, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11702, file: !1766, line: 260, column: 6)
!11705 = !DILocation(line: 260, column: 16, scope: !11704)
!11706 = !DILocation(line: 260, column: 6, scope: !11702)
!11707 = !DILocation(line: 261, column: 17, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11704, file: !1766, line: 260, column: 34)
!11709 = !DILocation(line: 262, column: 2, scope: !11708)
!11710 = !DILocation(line: 263, column: 1, scope: !11702)
!11711 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1766, file: !1766, line: 265, type: !3082, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !2156)
!11712 = !DILocation(line: 267, column: 16, scope: !11711)
!11713 = !DILocation(line: 268, column: 1, scope: !11711)
!11714 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11715, file: !11715, line: 9, type: !11716, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2891, retainedNodes: !11739)
!11715 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11716 = !DISubroutineType(types: !11717)
!11717 = !{!107, !11718, !195, !11738}
!11718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11719, size: 32)
!11719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11720)
!11720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1645, line: 60, size: 64, elements: !11721)
!11721 = !{!11722, !11737}
!11722 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11720, file: !1645, line: 69, baseType: !11723, size: 32)
!11723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11724, size: 32)
!11724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11725)
!11725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1645, line: 50, size: 64, elements: !11726)
!11726 = !{!11727, !11735, !11736}
!11727 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11725, file: !1645, line: 52, baseType: !11728, size: 32)
!11728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11729, size: 32)
!11729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11730)
!11730 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1656, line: 37, baseType: !11731)
!11731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1656, line: 32, size: 64, elements: !11732)
!11732 = !{!11733, !11734}
!11733 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11731, file: !1656, line: 34, baseType: !152, size: 32)
!11734 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11731, file: !1656, line: 36, baseType: !152, size: 32, offset: 32)
!11735 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11725, file: !1645, line: 54, baseType: !195, size: 8, offset: 32)
!11736 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11725, file: !1645, line: 56, baseType: !195, size: 8, offset: 40)
!11737 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11720, file: !1645, line: 71, baseType: !195, size: 8, offset: 32)
!11738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11723, size: 32)
!11739 = !{!11740, !11741, !11742}
!11740 = !DILocalVariable(name: "config", arg: 1, scope: !11714, file: !11715, line: 9, type: !11718)
!11741 = !DILocalVariable(name: "id", arg: 2, scope: !11714, file: !11715, line: 9, type: !195)
!11742 = !DILocalVariable(name: "state", arg: 3, scope: !11714, file: !11715, line: 10, type: !11738)
!11743 = !DILocation(line: 0, scope: !11714)
!11744 = !DILocation(line: 12, column: 20, scope: !11714)
!11745 = !DILocation(line: 13, column: 27, scope: !11714)
!11746 = !DILocation(line: 13, column: 42, scope: !11714)
!11747 = !DILocation(line: 13, column: 19, scope: !11714)
!11748 = !DILocation(line: 13, column: 16, scope: !11714)
!11749 = !DILocation(line: 13, column: 2, scope: !11714)
!11750 = distinct !{!11750, !11749, !11751}
!11751 = !DILocation(line: 19, column: 2, scope: !11714)
!11752 = !DILocation(line: 14, column: 23, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11754, file: !11715, line: 14, column: 7)
!11754 = distinct !DILexicalBlock(scope: !11714, file: !11715, line: 13, column: 54)
!11755 = !DILocation(line: 14, column: 10, scope: !11753)
!11756 = !DILocation(line: 18, column: 11, scope: !11754)
!11757 = !DILocation(line: 14, column: 7, scope: !11754)
!11758 = !DILocation(line: 22, column: 1, scope: !11714)
!11759 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1885, file: !1885, line: 193, type: !11760, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1803, retainedNodes: !11769)
!11760 = !DISubroutineType(types: !11761)
!11761 = !{!107, !11762, !195, !22}
!11762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11763, size: 32)
!11763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11764)
!11764 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1656, line: 37, baseType: !11765)
!11765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1656, line: 32, size: 64, elements: !11766)
!11766 = !{!11767, !11768}
!11767 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11765, file: !1656, line: 34, baseType: !152, size: 32)
!11768 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11765, file: !1656, line: 36, baseType: !152, size: 32, offset: 32)
!11769 = !{!11770, !11771, !11772, !11773, !11774, !11775, !11776, !11777, !11779}
!11770 = !DILocalVariable(name: "pins", arg: 1, scope: !11759, file: !1885, line: 193, type: !11762)
!11771 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11759, file: !1885, line: 193, type: !195)
!11772 = !DILocalVariable(name: "reg", arg: 3, scope: !11759, file: !1885, line: 194, type: !22)
!11773 = !DILocalVariable(name: "pin", scope: !11759, file: !1885, line: 196, type: !152)
!11774 = !DILocalVariable(name: "mux", scope: !11759, file: !1885, line: 196, type: !152)
!11775 = !DILocalVariable(name: "pin_cgf", scope: !11759, file: !1885, line: 197, type: !152)
!11776 = !DILocalVariable(name: "ret", scope: !11759, file: !1885, line: 198, type: !107)
!11777 = !DILocalVariable(name: "i", scope: !11778, file: !1885, line: 209, type: !195)
!11778 = distinct !DILexicalBlock(scope: !11759, file: !1885, line: 209, column: 2)
!11779 = !DILocalVariable(name: "gpio_out", scope: !11780, file: !1885, line: 239, type: !152)
!11780 = distinct !DILexicalBlock(scope: !11781, file: !1885, line: 238, column: 55)
!11781 = distinct !DILexicalBlock(scope: !11782, file: !1885, line: 238, column: 14)
!11782 = distinct !DILexicalBlock(scope: !11783, file: !1885, line: 236, column: 14)
!11783 = distinct !DILexicalBlock(scope: !11784, file: !1885, line: 234, column: 7)
!11784 = distinct !DILexicalBlock(scope: !11785, file: !1885, line: 209, column: 41)
!11785 = distinct !DILexicalBlock(scope: !11778, file: !1885, line: 209, column: 2)
!11786 = !DILocation(line: 0, scope: !11759)
!11787 = !DILocation(line: 0, scope: !11778)
!11788 = !DILocation(line: 209, column: 25, scope: !11785)
!11789 = !DILocation(line: 209, column: 2, scope: !11778)
!11790 = distinct !{!11790, !11789, !11791}
!11791 = !DILocation(line: 259, column: 2, scope: !11778)
!11792 = !DILocation(line: 210, column: 17, scope: !11784)
!11793 = !DILocation(line: 234, column: 7, scope: !11783)
!11794 = !DILocation(line: 234, column: 33, scope: !11783)
!11795 = !DILocation(line: 234, column: 7, scope: !11784)
!11796 = !DILocation(line: 235, column: 22, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11783, file: !1885, line: 234, column: 49)
!11798 = !DILocation(line: 235, column: 29, scope: !11797)
!11799 = !DILocation(line: 236, column: 3, scope: !11797)
!11800 = !DILocation(line: 236, column: 14, scope: !11783)
!11801 = !DILocation(line: 239, column: 32, scope: !11780)
!11802 = !DILocation(line: 0, scope: !11780)
!11803 = !DILocation(line: 241, column: 8, scope: !11780)
!11804 = !DILocation(line: 246, column: 3, scope: !11780)
!11805 = !DILocation(line: 252, column: 9, scope: !11784)
!11806 = !DILocation(line: 255, column: 9, scope: !11784)
!11807 = !DILocation(line: 256, column: 11, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11784, file: !1885, line: 256, column: 7)
!11809 = !DILocation(line: 209, column: 37, scope: !11785)
!11810 = !DILocation(line: 256, column: 7, scope: !11784)
!11811 = !DILocation(line: 262, column: 1, scope: !11759)
!11812 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1885, file: !1885, line: 176, type: !11813, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1803, retainedNodes: !11815)
!11813 = !DISubroutineType(types: !11814)
!11814 = !{!107, !152, !152, !152}
!11815 = !{!11816, !11817, !11818, !11819}
!11816 = !DILocalVariable(name: "pin", arg: 1, scope: !11812, file: !1885, line: 176, type: !152)
!11817 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11812, file: !1885, line: 176, type: !152)
!11818 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11812, file: !1885, line: 176, type: !152)
!11819 = !DILocalVariable(name: "port_device", scope: !11812, file: !1885, line: 178, type: !1815)
!11820 = !DILocation(line: 0, scope: !11812)
!11821 = !DILocation(line: 180, column: 22, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11812, file: !1885, line: 180, column: 6)
!11823 = !DILocation(line: 180, column: 6, scope: !11812)
!11824 = !DILocation(line: 180, column: 6, scope: !11822)
!11825 = !DILocation(line: 184, column: 16, scope: !11812)
!11826 = !DILocation(line: 186, column: 19, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11812, file: !1885, line: 186, column: 6)
!11828 = !DILocation(line: 186, column: 28, scope: !11827)
!11829 = !DILocation(line: 186, column: 33, scope: !11827)
!11830 = !DILocation(line: 186, column: 6, scope: !11812)
!11831 = !DILocation(line: 190, column: 43, scope: !11812)
!11832 = !DILocation(line: 190, column: 9, scope: !11812)
!11833 = !DILocation(line: 190, column: 2, scope: !11812)
!11834 = !DILocation(line: 191, column: 1, scope: !11812)
!11835 = distinct !DISubprogram(name: "device_is_ready", scope: !9739, file: !9739, line: 47, type: !11836, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1803, retainedNodes: !11838)
!11836 = !DISubroutineType(types: !11837)
!11837 = !{!145, !1815}
!11838 = !{!11839}
!11839 = !DILocalVariable(name: "dev", arg: 1, scope: !11835, file: !9739, line: 47, type: !1815)
!11840 = !DILocation(line: 0, scope: !11835)
!11841 = !DILocation(line: 55, column: 2, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11835, file: !9739, line: 55, column: 2)
!11843 = !{i64 2149464259}
!11844 = !DILocation(line: 56, column: 9, scope: !11835)
!11845 = !DILocation(line: 56, column: 2, scope: !11835)
!11846 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11836, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1803, retainedNodes: !11847)
!11847 = !{!11848}
!11848 = !DILocalVariable(name: "dev", arg: 1, scope: !11846, file: !247, line: 730, type: !1815)
!11849 = !DILocation(line: 0, scope: !11846)
!11850 = !DILocation(line: 732, column: 9, scope: !11846)
!11851 = !DILocation(line: 732, column: 2, scope: !11846)
!11852 = distinct !DISubprogram(name: "SystemInit", scope: !1934, file: !1934, line: 167, type: !3082, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1893, retainedNodes: !2156)
!11853 = !DILocation(line: 182, column: 1, scope: !11852)
!11854 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1934, file: !1934, line: 220, type: !3082, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1893, retainedNodes: !11855)
!11855 = !{!11856, !11857, !11858, !11859, !11860}
!11856 = !DILocalVariable(name: "tmp", scope: !11854, file: !1934, line: 222, type: !152)
!11857 = !DILocalVariable(name: "pllvco", scope: !11854, file: !1934, line: 222, type: !152)
!11858 = !DILocalVariable(name: "pllp", scope: !11854, file: !1934, line: 222, type: !152)
!11859 = !DILocalVariable(name: "pllsource", scope: !11854, file: !1934, line: 222, type: !152)
!11860 = !DILocalVariable(name: "pllm", scope: !11854, file: !1934, line: 222, type: !152)
!11861 = !DILocation(line: 0, scope: !11854)
!11862 = !DILocation(line: 225, column: 14, scope: !11854)
!11863 = !DILocation(line: 225, column: 19, scope: !11854)
!11864 = !DILocation(line: 227, column: 3, scope: !11854)
!11865 = !DILocation(line: 240, column: 25, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11854, file: !1934, line: 228, column: 3)
!11867 = !DILocation(line: 241, column: 19, scope: !11866)
!11868 = !DILocation(line: 241, column: 27, scope: !11866)
!11869 = !DILocation(line: 0, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11866, file: !1934, line: 243, column: 11)
!11871 = !DILocation(line: 254, column: 22, scope: !11866)
!11872 = !DILocation(line: 254, column: 62, scope: !11866)
!11873 = !DILocation(line: 255, column: 31, scope: !11866)
!11874 = !DILocation(line: 256, column: 7, scope: !11866)
!11875 = !DILocation(line: 0, scope: !11866)
!11876 = !DILocation(line: 263, column: 30, scope: !11854)
!11877 = !DILocation(line: 263, column: 52, scope: !11854)
!11878 = !DILocation(line: 263, column: 9, scope: !11854)
!11879 = !DILocation(line: 265, column: 19, scope: !11854)
!11880 = !DILocation(line: 266, column: 1, scope: !11854)
!11881 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11882, file: !11882, line: 200, type: !11883, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2156)
!11882 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11883 = !DISubroutineType(types: !11884)
!11884 = !{!11885}
!11885 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2897, line: 44, baseType: !2896)
!11886 = !DILocation(line: 202, column: 3, scope: !11881)
!11887 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11882, file: !11882, line: 219, type: !11888, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !11913)
!11888 = !DISubroutineType(types: !11889)
!11889 = !{!11885, !11890}
!11890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11891, size: 32)
!11891 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11892, line: 70, baseType: !11893)
!11892 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11893 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11892, line: 49, size: 416, elements: !11894)
!11894 = !{!11895, !11896, !11897, !11898, !11899, !11900, !11901}
!11895 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11893, file: !11892, line: 51, baseType: !152, size: 32)
!11896 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11893, file: !11892, line: 54, baseType: !152, size: 32, offset: 32)
!11897 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11893, file: !11892, line: 57, baseType: !152, size: 32, offset: 64)
!11898 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11893, file: !11892, line: 60, baseType: !152, size: 32, offset: 96)
!11899 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11893, file: !11892, line: 63, baseType: !152, size: 32, offset: 128)
!11900 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11893, file: !11892, line: 66, baseType: !152, size: 32, offset: 160)
!11901 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11893, file: !11892, line: 69, baseType: !11902, size: 224, offset: 192)
!11902 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11903, line: 73, baseType: !11904)
!11903 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11904 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11903, line: 45, size: 224, elements: !11905)
!11905 = !{!11906, !11907, !11908, !11909, !11910, !11911, !11912}
!11906 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11904, file: !11903, line: 47, baseType: !152, size: 32)
!11907 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11904, file: !11903, line: 50, baseType: !152, size: 32, offset: 32)
!11908 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11904, file: !11903, line: 53, baseType: !152, size: 32, offset: 64)
!11909 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11904, file: !11903, line: 56, baseType: !152, size: 32, offset: 96)
!11910 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11904, file: !11903, line: 60, baseType: !152, size: 32, offset: 128)
!11911 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11904, file: !11903, line: 63, baseType: !152, size: 32, offset: 160)
!11912 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !11904, file: !11903, line: 68, baseType: !152, size: 32, offset: 192)
!11913 = !{!11914, !11915, !11916, !11917, !11921}
!11914 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11887, file: !11882, line: 219, type: !11890)
!11915 = !DILocalVariable(name: "tickstart", scope: !11887, file: !11882, line: 221, type: !152)
!11916 = !DILocalVariable(name: "pll_config", scope: !11887, file: !11882, line: 221, type: !152)
!11917 = !DILocalVariable(name: "pwrclkchanged", scope: !11918, file: !11882, line: 391, type: !11920)
!11918 = distinct !DILexicalBlock(scope: !11919, file: !11882, line: 390, column: 3)
!11919 = distinct !DILexicalBlock(scope: !11887, file: !11882, line: 389, column: 6)
!11920 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !960, line: 188, baseType: !2903)
!11921 = !DILocalVariable(name: "tmpreg", scope: !11922, file: !11882, line: 400, type: !227)
!11922 = distinct !DILexicalBlock(scope: !11923, file: !11882, line: 400, column: 7)
!11923 = distinct !DILexicalBlock(scope: !11924, file: !11882, line: 399, column: 5)
!11924 = distinct !DILexicalBlock(scope: !11918, file: !11882, line: 398, column: 8)
!11925 = !DILocation(line: 0, scope: !11887)
!11926 = !DILocation(line: 224, column: 24, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11887, file: !11882, line: 224, column: 6)
!11928 = !DILocation(line: 224, column: 6, scope: !11887)
!11929 = !DILocation(line: 232, column: 27, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11887, file: !11882, line: 232, column: 6)
!11931 = !DILocation(line: 232, column: 43, scope: !11930)
!11932 = !DILocation(line: 232, column: 69, scope: !11930)
!11933 = !DILocation(line: 232, column: 6, scope: !11887)
!11934 = !DILocation(line: 237, column: 9, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11936, file: !11882, line: 237, column: 8)
!11936 = distinct !DILexicalBlock(scope: !11930, file: !11882, line: 233, column: 3)
!11937 = !DILocation(line: 237, column: 39, scope: !11935)
!11938 = !DILocation(line: 237, column: 60, scope: !11935)
!11939 = !DILocation(line: 238, column: 9, scope: !11935)
!11940 = !DILocation(line: 238, column: 39, scope: !11935)
!11941 = !DILocation(line: 238, column: 60, scope: !11935)
!11942 = !DILocation(line: 238, column: 70, scope: !11935)
!11943 = !DILocation(line: 238, column: 78, scope: !11935)
!11944 = !DILocation(line: 238, column: 100, scope: !11935)
!11945 = !DILocation(line: 237, column: 8, scope: !11936)
!11946 = !DILocation(line: 240, column: 11, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11948, file: !11882, line: 240, column: 10)
!11948 = distinct !DILexicalBlock(scope: !11935, file: !11882, line: 239, column: 5)
!11949 = !DILocation(line: 240, column: 57, scope: !11947)
!11950 = !DILocation(line: 240, column: 80, scope: !11947)
!11951 = !DILocation(line: 240, column: 89, scope: !11947)
!11952 = !DILocation(line: 240, column: 10, scope: !11948)
!11953 = !DILocation(line: 248, column: 7, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11955, file: !11882, line: 248, column: 7)
!11955 = distinct !DILexicalBlock(scope: !11956, file: !11882, line: 248, column: 7)
!11956 = distinct !DILexicalBlock(scope: !11935, file: !11882, line: 246, column: 5)
!11957 = !DILocation(line: 248, column: 7, scope: !11955)
!11958 = !DILocation(line: 248, column: 7, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11954, file: !11882, line: 248, column: 7)
!11960 = !DILocation(line: 248, column: 7, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11962, file: !11882, line: 248, column: 7)
!11962 = distinct !DILexicalBlock(scope: !11954, file: !11882, line: 248, column: 7)
!11963 = !DILocation(line: 248, column: 7, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11962, file: !11882, line: 248, column: 7)
!11965 = !DILocation(line: 0, scope: !11954)
!11966 = !DILocation(line: 251, column: 30, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11956, file: !11882, line: 251, column: 10)
!11968 = !DILocation(line: 251, column: 40, scope: !11967)
!11969 = !DILocation(line: 0, scope: !11967)
!11970 = !DILocation(line: 251, column: 10, scope: !11956)
!11971 = !DILocation(line: 257, column: 15, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11967, file: !11882, line: 252, column: 7)
!11973 = !DILocation(line: 257, column: 51, scope: !11972)
!11974 = !DILocation(line: 257, column: 9, scope: !11972)
!11975 = !DILocation(line: 259, column: 15, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11977, file: !11882, line: 259, column: 14)
!11977 = distinct !DILexicalBlock(scope: !11972, file: !11882, line: 258, column: 9)
!11978 = !DILocation(line: 259, column: 29, scope: !11976)
!11979 = !DILocation(line: 259, column: 43, scope: !11976)
!11980 = !DILocation(line: 259, column: 14, scope: !11977)
!11981 = distinct !{!11981, !11974, !11982}
!11982 = !DILocation(line: 263, column: 9, scope: !11972)
!11983 = !DILocation(line: 271, column: 15, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11967, file: !11882, line: 266, column: 7)
!11985 = !DILocation(line: 271, column: 9, scope: !11984)
!11986 = !DILocation(line: 273, column: 15, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11988, file: !11882, line: 273, column: 14)
!11988 = distinct !DILexicalBlock(scope: !11984, file: !11882, line: 272, column: 9)
!11989 = !DILocation(line: 273, column: 29, scope: !11987)
!11990 = !DILocation(line: 273, column: 43, scope: !11987)
!11991 = !DILocation(line: 273, column: 14, scope: !11988)
!11992 = distinct !{!11992, !11985, !11993}
!11993 = !DILocation(line: 277, column: 9, scope: !11984)
!11994 = !DILocation(line: 282, column: 27, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11887, file: !11882, line: 282, column: 6)
!11996 = !DILocation(line: 282, column: 43, scope: !11995)
!11997 = !DILocation(line: 282, column: 69, scope: !11995)
!11998 = !DILocation(line: 282, column: 6, scope: !11887)
!11999 = !DILocation(line: 289, column: 9, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !12001, file: !11882, line: 289, column: 8)
!12001 = distinct !DILexicalBlock(scope: !11995, file: !11882, line: 283, column: 3)
!12002 = !DILocation(line: 289, column: 39, scope: !12000)
!12003 = !DILocation(line: 289, column: 60, scope: !12000)
!12004 = !DILocation(line: 290, column: 9, scope: !12000)
!12005 = !DILocation(line: 290, column: 39, scope: !12000)
!12006 = !DILocation(line: 290, column: 60, scope: !12000)
!12007 = !DILocation(line: 290, column: 70, scope: !12000)
!12008 = !DILocation(line: 290, column: 78, scope: !12000)
!12009 = !DILocation(line: 290, column: 100, scope: !12000)
!12010 = !DILocation(line: 289, column: 8, scope: !12001)
!12011 = !DILocation(line: 293, column: 11, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !12013, file: !11882, line: 293, column: 10)
!12013 = distinct !DILexicalBlock(scope: !12000, file: !11882, line: 291, column: 5)
!12014 = !DILocation(line: 293, column: 57, scope: !12012)
!12015 = !DILocation(line: 293, column: 80, scope: !12012)
!12016 = !DILocation(line: 293, column: 89, scope: !12012)
!12017 = !DILocation(line: 293, column: 10, scope: !12013)
!12018 = !DILocation(line: 307, column: 30, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !12020, file: !11882, line: 307, column: 10)
!12020 = distinct !DILexicalBlock(scope: !12000, file: !11882, line: 305, column: 5)
!12021 = !DILocation(line: 307, column: 39, scope: !12019)
!12022 = !DILocation(line: 307, column: 10, scope: !12020)
!12023 = !DILocation(line: 310, column: 9, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12019, file: !11882, line: 308, column: 7)
!12025 = !DILocation(line: 313, column: 21, scope: !12024)
!12026 = !DILocation(line: 316, column: 9, scope: !12024)
!12027 = !DILocation(line: 316, column: 15, scope: !12024)
!12028 = !DILocation(line: 316, column: 51, scope: !12024)
!12029 = !DILocation(line: 318, column: 15, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12031, file: !11882, line: 318, column: 14)
!12031 = distinct !DILexicalBlock(scope: !12024, file: !11882, line: 317, column: 9)
!12032 = !DILocation(line: 318, column: 29, scope: !12030)
!12033 = !DILocation(line: 318, column: 43, scope: !12030)
!12034 = !DILocation(line: 318, column: 14, scope: !12031)
!12035 = distinct !{!12035, !12026, !12036}
!12036 = !DILocation(line: 322, column: 9, scope: !12024)
!12037 = !DILocation(line: 330, column: 9, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !12019, file: !11882, line: 328, column: 7)
!12039 = !DILocation(line: 333, column: 21, scope: !12038)
!12040 = !DILocation(line: 336, column: 9, scope: !12038)
!12041 = !DILocation(line: 336, column: 15, scope: !12038)
!12042 = !DILocation(line: 338, column: 15, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !12044, file: !11882, line: 338, column: 14)
!12044 = distinct !DILexicalBlock(scope: !12038, file: !11882, line: 337, column: 9)
!12045 = !DILocation(line: 338, column: 29, scope: !12043)
!12046 = !DILocation(line: 338, column: 43, scope: !12043)
!12047 = !DILocation(line: 338, column: 14, scope: !12044)
!12048 = distinct !{!12048, !12040, !12049}
!12049 = !DILocation(line: 342, column: 9, scope: !12038)
!12050 = !DILocation(line: 0, scope: !12000)
!12051 = !DILocation(line: 347, column: 27, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !11887, file: !11882, line: 347, column: 6)
!12053 = !DILocation(line: 347, column: 43, scope: !12052)
!12054 = !DILocation(line: 347, column: 69, scope: !12052)
!12055 = !DILocation(line: 347, column: 6, scope: !11887)
!12056 = !DILocation(line: 353, column: 28, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12058, file: !11882, line: 353, column: 8)
!12058 = distinct !DILexicalBlock(scope: !12052, file: !11882, line: 348, column: 3)
!12059 = !DILocation(line: 353, column: 37, scope: !12057)
!12060 = !DILocation(line: 353, column: 8, scope: !12058)
!12061 = !DILocation(line: 356, column: 7, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12057, file: !11882, line: 354, column: 5)
!12063 = !DILocation(line: 359, column: 19, scope: !12062)
!12064 = !DILocation(line: 362, column: 7, scope: !12062)
!12065 = !DILocation(line: 362, column: 13, scope: !12062)
!12066 = !DILocation(line: 362, column: 49, scope: !12062)
!12067 = !DILocation(line: 364, column: 13, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12069, file: !11882, line: 364, column: 12)
!12069 = distinct !DILexicalBlock(scope: !12062, file: !11882, line: 363, column: 7)
!12070 = !DILocation(line: 364, column: 27, scope: !12068)
!12071 = !DILocation(line: 364, column: 41, scope: !12068)
!12072 = !DILocation(line: 364, column: 12, scope: !12069)
!12073 = distinct !{!12073, !12064, !12074}
!12074 = !DILocation(line: 368, column: 7, scope: !12062)
!12075 = !DILocation(line: 373, column: 7, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12057, file: !11882, line: 371, column: 5)
!12077 = !DILocation(line: 376, column: 19, scope: !12076)
!12078 = !DILocation(line: 379, column: 7, scope: !12076)
!12079 = !DILocation(line: 379, column: 13, scope: !12076)
!12080 = !DILocation(line: 381, column: 13, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12082, file: !11882, line: 381, column: 12)
!12082 = distinct !DILexicalBlock(scope: !12076, file: !11882, line: 380, column: 7)
!12083 = !DILocation(line: 381, column: 27, scope: !12081)
!12084 = !DILocation(line: 381, column: 41, scope: !12081)
!12085 = !DILocation(line: 381, column: 12, scope: !12082)
!12086 = distinct !{!12086, !12078, !12087}
!12087 = !DILocation(line: 385, column: 7, scope: !12076)
!12088 = !DILocation(line: 389, column: 27, scope: !11919)
!12089 = !DILocation(line: 389, column: 43, scope: !11919)
!12090 = !DILocation(line: 389, column: 69, scope: !11919)
!12091 = !DILocation(line: 389, column: 6, scope: !11887)
!12092 = !DILocation(line: 0, scope: !11918)
!12093 = !DILocation(line: 398, column: 8, scope: !11924)
!12094 = !DILocation(line: 398, column: 8, scope: !11918)
!12095 = !DILocation(line: 400, column: 7, scope: !11922)
!12096 = !DILocation(line: 400, column: 7, scope: !11923)
!12097 = !DILocation(line: 402, column: 5, scope: !11923)
!12098 = !DILocation(line: 404, column: 8, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !11918, file: !11882, line: 404, column: 8)
!12100 = !DILocation(line: 404, column: 8, scope: !11918)
!12101 = !DILocation(line: 407, column: 7, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !12099, file: !11882, line: 405, column: 5)
!12103 = !DILocation(line: 410, column: 19, scope: !12102)
!12104 = !DILocation(line: 412, column: 7, scope: !12102)
!12105 = !DILocation(line: 412, column: 13, scope: !12102)
!12106 = !DILocation(line: 414, column: 13, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12108, file: !11882, line: 414, column: 12)
!12108 = distinct !DILexicalBlock(scope: !12102, file: !11882, line: 413, column: 7)
!12109 = !DILocation(line: 414, column: 27, scope: !12107)
!12110 = !DILocation(line: 414, column: 40, scope: !12107)
!12111 = !DILocation(line: 414, column: 12, scope: !12108)
!12112 = distinct !{!12112, !12104, !12113}
!12113 = !DILocation(line: 418, column: 7, scope: !12102)
!12114 = !DILocation(line: 422, column: 5, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !12116, file: !11882, line: 422, column: 5)
!12116 = distinct !DILexicalBlock(scope: !11918, file: !11882, line: 422, column: 5)
!12117 = !DILocation(line: 422, column: 5, scope: !12116)
!12118 = !DILocation(line: 422, column: 5, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12115, file: !11882, line: 422, column: 5)
!12120 = !DILocation(line: 422, column: 5, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12122, file: !11882, line: 422, column: 5)
!12122 = distinct !DILexicalBlock(scope: !12115, file: !11882, line: 422, column: 5)
!12123 = !DILocation(line: 422, column: 5, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12122, file: !11882, line: 422, column: 5)
!12125 = !DILocation(line: 0, scope: !12115)
!12126 = !DILocation(line: 424, column: 28, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !11918, file: !11882, line: 424, column: 8)
!12128 = !DILocation(line: 424, column: 38, scope: !12127)
!12129 = !DILocation(line: 0, scope: !12127)
!12130 = !DILocation(line: 424, column: 8, scope: !11918)
!12131 = !DILocation(line: 430, column: 13, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12127, file: !11882, line: 425, column: 5)
!12133 = !DILocation(line: 430, column: 49, scope: !12132)
!12134 = !DILocation(line: 430, column: 7, scope: !12132)
!12135 = !DILocation(line: 432, column: 13, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12137, file: !11882, line: 432, column: 12)
!12137 = distinct !DILexicalBlock(scope: !12132, file: !11882, line: 431, column: 7)
!12138 = !DILocation(line: 432, column: 27, scope: !12136)
!12139 = !DILocation(line: 432, column: 41, scope: !12136)
!12140 = !DILocation(line: 432, column: 12, scope: !12137)
!12141 = distinct !{!12141, !12134, !12142}
!12142 = !DILocation(line: 436, column: 7, scope: !12132)
!12143 = !DILocation(line: 444, column: 13, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12127, file: !11882, line: 439, column: 5)
!12145 = !DILocation(line: 444, column: 7, scope: !12144)
!12146 = !DILocation(line: 446, column: 13, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12148, file: !11882, line: 446, column: 12)
!12148 = distinct !DILexicalBlock(scope: !12144, file: !11882, line: 445, column: 7)
!12149 = !DILocation(line: 446, column: 27, scope: !12147)
!12150 = !DILocation(line: 446, column: 41, scope: !12147)
!12151 = !DILocation(line: 446, column: 12, scope: !12148)
!12152 = distinct !{!12152, !12145, !12153}
!12153 = !DILocation(line: 450, column: 7, scope: !12144)
!12154 = !DILocation(line: 454, column: 8, scope: !11918)
!12155 = !DILocation(line: 456, column: 7, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12157, file: !11882, line: 455, column: 5)
!12157 = distinct !DILexicalBlock(scope: !11918, file: !11882, line: 454, column: 8)
!12158 = !DILocation(line: 457, column: 5, scope: !12156)
!12159 = !DILocation(line: 462, column: 31, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !11887, file: !11882, line: 462, column: 7)
!12161 = !DILocation(line: 462, column: 41, scope: !12160)
!12162 = !DILocation(line: 462, column: 7, scope: !11887)
!12163 = !DILocation(line: 465, column: 8, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12165, file: !11882, line: 465, column: 8)
!12165 = distinct !DILexicalBlock(scope: !12160, file: !11882, line: 463, column: 3)
!12166 = !DILocation(line: 465, column: 38, scope: !12164)
!12167 = !DILocation(line: 465, column: 8, scope: !12165)
!12168 = !DILocation(line: 467, column: 44, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12170, file: !11882, line: 467, column: 10)
!12170 = distinct !DILexicalBlock(scope: !12164, file: !11882, line: 466, column: 5)
!12171 = !DILocation(line: 0, scope: !12169)
!12172 = !DILocation(line: 467, column: 10, scope: !12170)
!12173 = !DILocation(line: 483, column: 15, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12169, file: !11882, line: 468, column: 7)
!12175 = !DILocation(line: 483, column: 9, scope: !12174)
!12176 = !DILocation(line: 485, column: 15, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12178, file: !11882, line: 485, column: 14)
!12178 = distinct !DILexicalBlock(scope: !12174, file: !11882, line: 484, column: 9)
!12179 = !DILocation(line: 485, column: 29, scope: !12177)
!12180 = !DILocation(line: 485, column: 43, scope: !12177)
!12181 = !DILocation(line: 485, column: 14, scope: !12178)
!12182 = distinct !{!12182, !12175, !12183}
!12183 = !DILocation(line: 489, column: 9, scope: !12174)
!12184 = !DILocation(line: 492, column: 9, scope: !12174)
!12185 = !DILocation(line: 498, column: 9, scope: !12174)
!12186 = !DILocation(line: 501, column: 21, scope: !12174)
!12187 = !DILocation(line: 504, column: 9, scope: !12174)
!12188 = !DILocation(line: 504, column: 15, scope: !12174)
!12189 = !DILocation(line: 504, column: 51, scope: !12174)
!12190 = !DILocation(line: 506, column: 15, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12192, file: !11882, line: 506, column: 14)
!12192 = distinct !DILexicalBlock(scope: !12174, file: !11882, line: 505, column: 9)
!12193 = !DILocation(line: 506, column: 29, scope: !12191)
!12194 = !DILocation(line: 506, column: 43, scope: !12191)
!12195 = !DILocation(line: 506, column: 14, scope: !12192)
!12196 = distinct !{!12196, !12187, !12197}
!12197 = !DILocation(line: 510, column: 9, scope: !12174)
!12198 = !DILocation(line: 521, column: 15, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12169, file: !11882, line: 513, column: 7)
!12200 = !DILocation(line: 521, column: 9, scope: !12199)
!12201 = !DILocation(line: 523, column: 15, scope: !12202)
!12202 = distinct !DILexicalBlock(scope: !12203, file: !11882, line: 523, column: 14)
!12203 = distinct !DILexicalBlock(scope: !12199, file: !11882, line: 522, column: 9)
!12204 = !DILocation(line: 523, column: 29, scope: !12202)
!12205 = !DILocation(line: 523, column: 43, scope: !12202)
!12206 = !DILocation(line: 523, column: 14, scope: !12203)
!12207 = distinct !{!12207, !12200, !12208}
!12208 = !DILocation(line: 527, column: 9, scope: !12199)
!12209 = !DILocation(line: 533, column: 44, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12211, file: !11882, line: 533, column: 10)
!12211 = distinct !DILexicalBlock(scope: !12164, file: !11882, line: 531, column: 5)
!12212 = !DILocation(line: 533, column: 10, scope: !12211)
!12213 = !DILocation(line: 540, column: 27, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12210, file: !11882, line: 538, column: 7)
!12215 = !DILocation(line: 543, column: 14, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !12214, file: !11882, line: 542, column: 13)
!12217 = !DILocation(line: 543, column: 81, scope: !12216)
!12218 = !DILocation(line: 543, column: 55, scope: !12216)
!12219 = !DILocation(line: 543, column: 92, scope: !12216)
!12220 = !DILocation(line: 544, column: 14, scope: !12216)
!12221 = !DILocation(line: 544, column: 80, scope: !12216)
!12222 = !DILocation(line: 544, column: 53, scope: !12216)
!12223 = !DILocation(line: 544, column: 111, scope: !12216)
!12224 = !DILocation(line: 545, column: 14, scope: !12216)
!12225 = !DILocation(line: 545, column: 80, scope: !12216)
!12226 = !DILocation(line: 545, column: 86, scope: !12216)
!12227 = !DILocation(line: 545, column: 53, scope: !12216)
!12228 = !DILocation(line: 545, column: 111, scope: !12216)
!12229 = !DILocation(line: 546, column: 14, scope: !12216)
!12230 = !DILocation(line: 546, column: 82, scope: !12216)
!12231 = !DILocation(line: 546, column: 101, scope: !12216)
!12232 = !DILocation(line: 546, column: 53, scope: !12216)
!12233 = !DILocation(line: 546, column: 126, scope: !12216)
!12234 = !DILocation(line: 547, column: 14, scope: !12216)
!12235 = !DILocation(line: 547, column: 80, scope: !12216)
!12236 = !DILocation(line: 547, column: 85, scope: !12216)
!12237 = !DILocation(line: 547, column: 53, scope: !12216)
!12238 = !DILocation(line: 547, column: 111, scope: !12216)
!12239 = !DILocation(line: 548, column: 14, scope: !12216)
!12240 = !DILocation(line: 548, column: 80, scope: !12216)
!12241 = !DILocation(line: 548, column: 85, scope: !12216)
!12242 = !DILocation(line: 548, column: 53, scope: !12216)
!12243 = !DILocation(line: 542, column: 13, scope: !12214)
!12244 = !DILocation(line: 563, column: 3, scope: !11887)
!12245 = !DILocation(line: 564, column: 1, scope: !11887)
!12246 = !DISubprogram(name: "HAL_GetTick", scope: !12247, file: !12247, line: 234, type: !6341, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!12247 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12248 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11882, file: !11882, line: 591, type: !12249, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !12260)
!12249 = !DISubroutineType(types: !12250)
!12250 = !{!11885, !12251, !152}
!12251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12252, size: 32)
!12252 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11892, line: 92, baseType: !12253)
!12253 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11892, line: 75, size: 160, elements: !12254)
!12254 = !{!12255, !12256, !12257, !12258, !12259}
!12255 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12253, file: !11892, line: 77, baseType: !152, size: 32)
!12256 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12253, file: !11892, line: 80, baseType: !152, size: 32, offset: 32)
!12257 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12253, file: !11892, line: 83, baseType: !152, size: 32, offset: 64)
!12258 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12253, file: !11892, line: 86, baseType: !152, size: 32, offset: 96)
!12259 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12253, file: !11892, line: 89, baseType: !152, size: 32, offset: 128)
!12260 = !{!12261, !12262, !12263}
!12261 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12248, file: !11882, line: 591, type: !12251)
!12262 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12248, file: !11882, line: 591, type: !152)
!12263 = !DILocalVariable(name: "tickstart", scope: !12248, file: !11882, line: 593, type: !152)
!12264 = !DILocation(line: 0, scope: !12248)
!12265 = !DILocation(line: 596, column: 24, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !12248, file: !11882, line: 596, column: 6)
!12267 = !DILocation(line: 596, column: 6, scope: !12248)
!12268 = !DILocation(line: 610, column: 17, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12248, file: !11882, line: 610, column: 6)
!12270 = !DILocation(line: 610, column: 15, scope: !12269)
!12271 = !DILocation(line: 610, column: 6, scope: !12248)
!12272 = !DILocation(line: 613, column: 5, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12269, file: !11882, line: 611, column: 3)
!12274 = !DILocation(line: 617, column: 8, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12273, file: !11882, line: 617, column: 8)
!12276 = !DILocation(line: 617, column: 34, scope: !12275)
!12277 = !DILocation(line: 617, column: 8, scope: !12273)
!12278 = !DILocation(line: 624, column: 27, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12248, file: !11882, line: 624, column: 6)
!12280 = !DILocation(line: 624, column: 38, scope: !12279)
!12281 = !DILocation(line: 624, column: 60, scope: !12279)
!12282 = !DILocation(line: 624, column: 6, scope: !12248)
!12283 = !DILocation(line: 628, column: 40, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12285, file: !11882, line: 628, column: 8)
!12285 = distinct !DILexicalBlock(scope: !12279, file: !11882, line: 625, column: 3)
!12286 = !DILocation(line: 628, column: 63, scope: !12284)
!12287 = !DILocation(line: 628, column: 8, scope: !12285)
!12288 = !DILocation(line: 630, column: 7, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12284, file: !11882, line: 629, column: 5)
!12290 = !DILocation(line: 633, column: 29, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12285, file: !11882, line: 633, column: 8)
!12292 = !DILocation(line: 631, column: 5, scope: !12289)
!12293 = !DILocation(line: 633, column: 40, scope: !12291)
!12294 = !DILocation(line: 633, column: 63, scope: !12291)
!12295 = !DILocation(line: 633, column: 8, scope: !12285)
!12296 = !DILocation(line: 635, column: 7, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12291, file: !11882, line: 634, column: 5)
!12298 = !DILocation(line: 636, column: 5, scope: !12297)
!12299 = !DILocation(line: 639, column: 5, scope: !12285)
!12300 = !DILocation(line: 643, column: 27, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12248, file: !11882, line: 643, column: 6)
!12302 = !DILocation(line: 640, column: 3, scope: !12285)
!12303 = !DILocation(line: 643, column: 38, scope: !12301)
!12304 = !DILocation(line: 643, column: 62, scope: !12301)
!12305 = !DILocation(line: 643, column: 6, scope: !12248)
!12306 = !DILocation(line: 648, column: 27, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12308, file: !11882, line: 648, column: 8)
!12308 = distinct !DILexicalBlock(scope: !12301, file: !11882, line: 644, column: 3)
!12309 = !DILocation(line: 648, column: 8, scope: !12308)
!12310 = !DILocation(line: 651, column: 10, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12312, file: !11882, line: 651, column: 10)
!12312 = distinct !DILexicalBlock(scope: !12307, file: !11882, line: 649, column: 5)
!12313 = !DILocation(line: 651, column: 46, scope: !12311)
!12314 = !DILocation(line: 651, column: 10, scope: !12312)
!12315 = !DILocation(line: 661, column: 10, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12317, file: !11882, line: 661, column: 10)
!12317 = distinct !DILexicalBlock(scope: !12318, file: !11882, line: 659, column: 5)
!12318 = distinct !DILexicalBlock(scope: !12307, file: !11882, line: 657, column: 13)
!12319 = !DILocation(line: 661, column: 46, scope: !12316)
!12320 = !DILocation(line: 661, column: 10, scope: !12317)
!12321 = !DILocation(line: 670, column: 10, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12323, file: !11882, line: 670, column: 10)
!12323 = distinct !DILexicalBlock(scope: !12318, file: !11882, line: 668, column: 5)
!12324 = !DILocation(line: 670, column: 46, scope: !12322)
!12325 = !DILocation(line: 670, column: 10, scope: !12323)
!12326 = !DILocation(line: 676, column: 5, scope: !12308)
!12327 = !DILocation(line: 679, column: 17, scope: !12308)
!12328 = !DILocation(line: 681, column: 5, scope: !12308)
!12329 = !DILocation(line: 681, column: 12, scope: !12308)
!12330 = !DILocation(line: 681, column: 65, scope: !12308)
!12331 = !DILocation(line: 681, column: 78, scope: !12308)
!12332 = !DILocation(line: 681, column: 42, scope: !12308)
!12333 = !DILocation(line: 683, column: 12, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12335, file: !11882, line: 683, column: 11)
!12335 = distinct !DILexicalBlock(scope: !12308, file: !11882, line: 682, column: 5)
!12336 = !DILocation(line: 683, column: 26, scope: !12334)
!12337 = !DILocation(line: 683, column: 39, scope: !12334)
!12338 = !DILocation(line: 683, column: 11, scope: !12335)
!12339 = distinct !{!12339, !12328, !12340}
!12340 = !DILocation(line: 687, column: 5, scope: !12308)
!12341 = !DILocation(line: 691, column: 17, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12248, file: !11882, line: 691, column: 6)
!12343 = !DILocation(line: 691, column: 15, scope: !12342)
!12344 = !DILocation(line: 691, column: 6, scope: !12248)
!12345 = !DILocation(line: 694, column: 5, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12342, file: !11882, line: 692, column: 3)
!12347 = !DILocation(line: 698, column: 8, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12346, file: !11882, line: 698, column: 8)
!12349 = !DILocation(line: 698, column: 34, scope: !12348)
!12350 = !DILocation(line: 698, column: 8, scope: !12346)
!12351 = !DILocation(line: 705, column: 27, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12248, file: !11882, line: 705, column: 6)
!12353 = !DILocation(line: 705, column: 38, scope: !12352)
!12354 = !DILocation(line: 705, column: 61, scope: !12352)
!12355 = !DILocation(line: 705, column: 6, scope: !12248)
!12356 = !DILocation(line: 708, column: 5, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12352, file: !11882, line: 706, column: 3)
!12358 = !DILocation(line: 712, column: 27, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12248, file: !11882, line: 712, column: 6)
!12360 = !DILocation(line: 709, column: 3, scope: !12357)
!12361 = !DILocation(line: 712, column: 38, scope: !12359)
!12362 = !DILocation(line: 712, column: 61, scope: !12359)
!12363 = !DILocation(line: 712, column: 6, scope: !12248)
!12364 = !DILocation(line: 715, column: 5, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12359, file: !11882, line: 713, column: 3)
!12366 = !DILocation(line: 716, column: 3, scope: !12365)
!12367 = !DILocation(line: 719, column: 21, scope: !12248)
!12368 = !DILocation(line: 719, column: 70, scope: !12248)
!12369 = !DILocation(line: 719, column: 91, scope: !12248)
!12370 = !DILocation(line: 719, column: 50, scope: !12248)
!12371 = !DILocation(line: 719, column: 47, scope: !12248)
!12372 = !DILocation(line: 719, column: 19, scope: !12248)
!12373 = !DILocation(line: 722, column: 17, scope: !12248)
!12374 = !DILocation(line: 722, column: 3, scope: !12248)
!12375 = !DILocation(line: 724, column: 3, scope: !12248)
!12376 = !DILocation(line: 725, column: 1, scope: !12248)
!12377 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11882, file: !11882, line: 885, type: !6341, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !12378)
!12378 = !{!12379, !12380, !12381, !12382}
!12379 = !DILocalVariable(name: "pllm", scope: !12377, file: !11882, line: 887, type: !152)
!12380 = !DILocalVariable(name: "pllvco", scope: !12377, file: !11882, line: 887, type: !152)
!12381 = !DILocalVariable(name: "pllp", scope: !12377, file: !11882, line: 887, type: !152)
!12382 = !DILocalVariable(name: "sysclockfreq", scope: !12377, file: !11882, line: 888, type: !152)
!12383 = !DILocation(line: 0, scope: !12377)
!12384 = !DILocation(line: 891, column: 16, scope: !12377)
!12385 = !DILocation(line: 891, column: 21, scope: !12377)
!12386 = !DILocation(line: 891, column: 3, scope: !12377)
!12387 = !DILocation(line: 907, column: 19, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12389, file: !11882, line: 904, column: 5)
!12389 = distinct !DILexicalBlock(scope: !12377, file: !11882, line: 892, column: 3)
!12390 = !DILocation(line: 907, column: 27, scope: !12388)
!12391 = !DILocation(line: 908, column: 10, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12388, file: !11882, line: 908, column: 10)
!12393 = !DILocation(line: 0, scope: !12392)
!12394 = !DILocation(line: 918, column: 23, scope: !12388)
!12395 = !DILocation(line: 918, column: 82, scope: !12388)
!12396 = !DILocation(line: 920, column: 28, scope: !12388)
!12397 = !DILocation(line: 921, column: 7, scope: !12388)
!12398 = !DILocation(line: 0, scope: !12389)
!12399 = !DILocation(line: 929, column: 3, scope: !12377)
!12400 = !DISubprogram(name: "HAL_InitTick", scope: !12247, file: !12247, line: 223, type: !12401, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!12401 = !DISubroutineType(types: !12402)
!12402 = !{!11885, !152}
!12403 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11882, file: !11882, line: 775, type: !12404, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !12406)
!12404 = !DISubroutineType(types: !12405)
!12405 = !{null, !152, !152, !152}
!12406 = !{!12407, !12408, !12409, !12410, !12420}
!12407 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12403, file: !11882, line: 775, type: !152)
!12408 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12403, file: !11882, line: 775, type: !152)
!12409 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12403, file: !11882, line: 775, type: !152)
!12410 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12403, file: !11882, line: 777, type: !12411)
!12411 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12412, line: 62, baseType: !12413)
!12412 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12413 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12412, line: 46, size: 160, elements: !12414)
!12414 = !{!12415, !12416, !12417, !12418, !12419}
!12415 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12413, file: !12412, line: 48, baseType: !152, size: 32)
!12416 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12413, file: !12412, line: 51, baseType: !152, size: 32, offset: 32)
!12417 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12413, file: !12412, line: 54, baseType: !152, size: 32, offset: 64)
!12418 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12413, file: !12412, line: 57, baseType: !152, size: 32, offset: 96)
!12419 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12413, file: !12412, line: 60, baseType: !152, size: 32, offset: 128)
!12420 = !DILocalVariable(name: "tmpreg", scope: !12421, file: !11882, line: 787, type: !227)
!12421 = distinct !DILexicalBlock(scope: !12422, file: !11882, line: 787, column: 5)
!12422 = distinct !DILexicalBlock(scope: !12423, file: !11882, line: 783, column: 3)
!12423 = distinct !DILexicalBlock(scope: !12403, file: !11882, line: 782, column: 6)
!12424 = !DILocation(line: 0, scope: !12403)
!12425 = !DILocation(line: 777, column: 3, scope: !12403)
!12426 = !DILocation(line: 777, column: 20, scope: !12403)
!12427 = !DILocation(line: 782, column: 15, scope: !12423)
!12428 = !DILocation(line: 782, column: 6, scope: !12403)
!12429 = !DILocation(line: 787, column: 5, scope: !12421)
!12430 = !DILocation(line: 787, column: 5, scope: !12422)
!12431 = !DILocation(line: 790, column: 21, scope: !12422)
!12432 = !DILocation(line: 790, column: 25, scope: !12422)
!12433 = !DILocation(line: 791, column: 21, scope: !12422)
!12434 = !DILocation(line: 791, column: 26, scope: !12422)
!12435 = !DILocation(line: 792, column: 21, scope: !12422)
!12436 = !DILocation(line: 792, column: 27, scope: !12422)
!12437 = !DILocation(line: 793, column: 21, scope: !12422)
!12438 = !DILocation(line: 793, column: 26, scope: !12422)
!12439 = !DILocation(line: 794, column: 21, scope: !12422)
!12440 = !DILocation(line: 794, column: 31, scope: !12422)
!12441 = !DILocation(line: 795, column: 5, scope: !12422)
!12442 = !DILocation(line: 798, column: 5, scope: !12422)
!12443 = !DILocation(line: 804, column: 3, scope: !12422)
!12444 = !DILocation(line: 830, column: 1, scope: !12403)
!12445 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12412, file: !12412, line: 224, type: !12446, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!12446 = !DISubroutineType(types: !12447)
!12447 = !{null, !2965, !12448}
!12448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12411, size: 32)
!12449 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11882, file: !11882, line: 841, type: !3082, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2156)
!12450 = !DILocation(line: 843, column: 38, scope: !12449)
!12451 = !DILocation(line: 844, column: 1, scope: !12449)
!12452 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11882, file: !11882, line: 850, type: !3082, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2156)
!12453 = !DILocation(line: 852, column: 38, scope: !12452)
!12454 = !DILocation(line: 853, column: 1, scope: !12452)
!12455 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11882, file: !11882, line: 941, type: !6341, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2156)
!12456 = !DILocation(line: 943, column: 10, scope: !12455)
!12457 = !DILocation(line: 943, column: 3, scope: !12455)
!12458 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11882, file: !11882, line: 952, type: !6341, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2156)
!12459 = !DILocation(line: 955, column: 11, scope: !12458)
!12460 = !DILocation(line: 955, column: 56, scope: !12458)
!12461 = !DILocation(line: 955, column: 78, scope: !12458)
!12462 = !DILocation(line: 955, column: 36, scope: !12458)
!12463 = !DILocation(line: 955, column: 33, scope: !12458)
!12464 = !DILocation(line: 955, column: 3, scope: !12458)
!12465 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11882, file: !11882, line: 964, type: !6341, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2156)
!12466 = !DILocation(line: 967, column: 11, scope: !12465)
!12467 = !DILocation(line: 967, column: 55, scope: !12465)
!12468 = !DILocation(line: 967, column: 77, scope: !12465)
!12469 = !DILocation(line: 967, column: 35, scope: !12465)
!12470 = !DILocation(line: 967, column: 32, scope: !12465)
!12471 = !DILocation(line: 967, column: 3, scope: !12465)
!12472 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11882, file: !11882, line: 977, type: !12473, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !12475)
!12473 = !DISubroutineType(types: !12474)
!12474 = !{null, !11890}
!12475 = !{!12476}
!12476 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12472, file: !11882, line: 977, type: !11890)
!12477 = !DILocation(line: 0, scope: !12472)
!12478 = !DILocation(line: 980, column: 22, scope: !12472)
!12479 = !DILocation(line: 980, column: 37, scope: !12472)
!12480 = !DILocation(line: 983, column: 12, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12472, file: !11882, line: 983, column: 6)
!12482 = !DILocation(line: 983, column: 15, scope: !12481)
!12483 = !DILocation(line: 983, column: 31, scope: !12481)
!12484 = !DILocation(line: 983, column: 6, scope: !12472)
!12485 = !DILocation(line: 985, column: 24, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12481, file: !11882, line: 984, column: 3)
!12487 = !DILocation(line: 985, column: 33, scope: !12486)
!12488 = !DILocation(line: 986, column: 3, scope: !12486)
!12489 = !DILocation(line: 987, column: 17, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12481, file: !11882, line: 987, column: 11)
!12491 = !DILocation(line: 987, column: 20, scope: !12490)
!12492 = !DILocation(line: 987, column: 35, scope: !12490)
!12493 = !DILocation(line: 0, scope: !12490)
!12494 = !DILocation(line: 987, column: 11, scope: !12481)
!12495 = !DILocation(line: 989, column: 33, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !12490, file: !11882, line: 988, column: 3)
!12497 = !DILocation(line: 990, column: 3, scope: !12496)
!12498 = !DILocation(line: 993, column: 33, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12490, file: !11882, line: 992, column: 3)
!12500 = !DILocation(line: 997, column: 12, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12472, file: !11882, line: 997, column: 6)
!12502 = !DILocation(line: 997, column: 15, scope: !12501)
!12503 = !DILocation(line: 1003, column: 24, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12501, file: !11882, line: 1002, column: 3)
!12505 = !DILocation(line: 1003, column: 33, scope: !12504)
!12506 = !DILocation(line: 1006, column: 61, scope: !12472)
!12507 = !DILocation(line: 1006, column: 81, scope: !12472)
!12508 = !DILocation(line: 1006, column: 22, scope: !12472)
!12509 = !DILocation(line: 1006, column: 42, scope: !12472)
!12510 = !DILocation(line: 1009, column: 12, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12472, file: !11882, line: 1009, column: 6)
!12512 = !DILocation(line: 1009, column: 17, scope: !12511)
!12513 = !DILocation(line: 1009, column: 35, scope: !12511)
!12514 = !DILocation(line: 1009, column: 6, scope: !12472)
!12515 = !DILocation(line: 1011, column: 24, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12511, file: !11882, line: 1010, column: 3)
!12517 = !DILocation(line: 1011, column: 33, scope: !12516)
!12518 = !DILocation(line: 1012, column: 3, scope: !12516)
!12519 = !DILocation(line: 1013, column: 17, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12511, file: !11882, line: 1013, column: 11)
!12521 = !DILocation(line: 1013, column: 22, scope: !12520)
!12522 = !DILocation(line: 1013, column: 39, scope: !12520)
!12523 = !DILocation(line: 0, scope: !12520)
!12524 = !DILocation(line: 1013, column: 11, scope: !12511)
!12525 = !DILocation(line: 1015, column: 33, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12520, file: !11882, line: 1014, column: 3)
!12527 = !DILocation(line: 1016, column: 3, scope: !12526)
!12528 = !DILocation(line: 1019, column: 33, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12520, file: !11882, line: 1018, column: 3)
!12530 = !DILocation(line: 1023, column: 12, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12472, file: !11882, line: 1023, column: 6)
!12532 = !DILocation(line: 1023, column: 16, scope: !12531)
!12533 = !DILocation(line: 1029, column: 24, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12531, file: !11882, line: 1028, column: 3)
!12535 = !DILocation(line: 1029, column: 33, scope: !12534)
!12536 = !DILocation(line: 1033, column: 12, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12472, file: !11882, line: 1033, column: 6)
!12538 = !DILocation(line: 1033, column: 15, scope: !12537)
!12539 = !DILocation(line: 1033, column: 30, scope: !12537)
!12540 = !DILocation(line: 1033, column: 6, scope: !12472)
!12541 = !DILocation(line: 1039, column: 28, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12537, file: !11882, line: 1038, column: 3)
!12543 = !DILocation(line: 1039, column: 37, scope: !12542)
!12544 = !DILocation(line: 1041, column: 54, scope: !12472)
!12545 = !DILocation(line: 1041, column: 62, scope: !12472)
!12546 = !DILocation(line: 1041, column: 26, scope: !12472)
!12547 = !DILocation(line: 1041, column: 36, scope: !12472)
!12548 = !DILocation(line: 1042, column: 49, scope: !12472)
!12549 = !DILocation(line: 1042, column: 57, scope: !12472)
!12550 = !DILocation(line: 1042, column: 26, scope: !12472)
!12551 = !DILocation(line: 1042, column: 31, scope: !12472)
!12552 = !DILocation(line: 1043, column: 50, scope: !12472)
!12553 = !DILocation(line: 1043, column: 78, scope: !12472)
!12554 = !DILocation(line: 1043, column: 26, scope: !12472)
!12555 = !DILocation(line: 1043, column: 31, scope: !12472)
!12556 = !DILocation(line: 1044, column: 52, scope: !12472)
!12557 = !DILocation(line: 1044, column: 102, scope: !12472)
!12558 = !DILocation(line: 1044, column: 109, scope: !12472)
!12559 = !DILocation(line: 1044, column: 26, scope: !12472)
!12560 = !DILocation(line: 1044, column: 31, scope: !12472)
!12561 = !DILocation(line: 1045, column: 50, scope: !12472)
!12562 = !DILocation(line: 1045, column: 78, scope: !12472)
!12563 = !DILocation(line: 1045, column: 26, scope: !12472)
!12564 = !DILocation(line: 1045, column: 31, scope: !12472)
!12565 = !DILocation(line: 1046, column: 1, scope: !12472)
!12566 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11882, file: !11882, line: 1056, type: !12567, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !12569)
!12567 = !DISubroutineType(types: !12568)
!12568 = !{null, !12251, !1014}
!12569 = !{!12570, !12571}
!12570 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12566, file: !11882, line: 1056, type: !12251)
!12571 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12566, file: !11882, line: 1056, type: !1014)
!12572 = !DILocation(line: 0, scope: !12566)
!12573 = !DILocation(line: 1059, column: 22, scope: !12566)
!12574 = !DILocation(line: 1059, column: 32, scope: !12566)
!12575 = !DILocation(line: 1062, column: 53, scope: !12566)
!12576 = !DILocation(line: 1062, column: 58, scope: !12566)
!12577 = !DILocation(line: 1062, column: 22, scope: !12566)
!12578 = !DILocation(line: 1062, column: 35, scope: !12566)
!12579 = !DILocation(line: 1065, column: 54, scope: !12566)
!12580 = !DILocation(line: 1065, column: 59, scope: !12566)
!12581 = !DILocation(line: 1065, column: 22, scope: !12566)
!12582 = !DILocation(line: 1065, column: 36, scope: !12566)
!12583 = !DILocation(line: 1068, column: 55, scope: !12566)
!12584 = !DILocation(line: 1068, column: 60, scope: !12566)
!12585 = !DILocation(line: 1068, column: 22, scope: !12566)
!12586 = !DILocation(line: 1068, column: 37, scope: !12566)
!12587 = !DILocation(line: 1071, column: 56, scope: !12566)
!12588 = !DILocation(line: 1071, column: 79, scope: !12566)
!12589 = !DILocation(line: 1071, column: 22, scope: !12566)
!12590 = !DILocation(line: 1071, column: 37, scope: !12566)
!12591 = !DILocation(line: 1074, column: 34, scope: !12566)
!12592 = !DILocation(line: 1074, column: 38, scope: !12566)
!12593 = !DILocation(line: 1074, column: 14, scope: !12566)
!12594 = !DILocation(line: 1075, column: 1, scope: !12566)
!12595 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11882, file: !11882, line: 1082, type: !3082, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2156)
!12596 = !DILocation(line: 1085, column: 6, scope: !12597)
!12597 = distinct !DILexicalBlock(scope: !12595, file: !11882, line: 1085, column: 6)
!12598 = !DILocation(line: 1085, column: 6, scope: !12595)
!12599 = !DILocation(line: 1088, column: 5, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12597, file: !11882, line: 1086, column: 3)
!12601 = !DILocation(line: 1091, column: 5, scope: !12600)
!12602 = !DILocation(line: 1092, column: 3, scope: !12600)
!12603 = !DILocation(line: 1093, column: 1, scope: !12595)
!12604 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11882, file: !11882, line: 1099, type: !3082, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2156)
!12605 = !DILocation(line: 1104, column: 1, scope: !12604)
!12606 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12607, file: !12607, line: 257, type: !6351, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12608)
!12607 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12608 = !{!12609}
!12609 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12606, file: !12607, line: 257, type: !152)
!12610 = !DILocation(line: 0, scope: !12606)
!12611 = !DILocation(line: 260, column: 3, scope: !12606)
!12612 = !DILocation(line: 261, column: 1, scope: !12606)
!12613 = distinct !DISubprogram(name: "LL_InitTick", scope: !12614, file: !12614, line: 260, type: !10241, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12615)
!12614 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12615 = !{!12616, !12617}
!12616 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12613, file: !12614, line: 260, type: !152)
!12617 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12613, file: !12614, line: 260, type: !152)
!12618 = !DILocation(line: 0, scope: !12613)
!12619 = !DILocation(line: 263, column: 46, scope: !12613)
!12620 = !DILocation(line: 263, column: 55, scope: !12613)
!12621 = !DILocation(line: 263, column: 18, scope: !12613)
!12622 = !DILocation(line: 264, column: 18, scope: !12613)
!12623 = !DILocation(line: 265, column: 18, scope: !12613)
!12624 = !DILocation(line: 267, column: 1, scope: !12613)
!12625 = distinct !DISubprogram(name: "LL_mDelay", scope: !12607, file: !12607, line: 273, type: !6351, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12626)
!12626 = !{!12627, !12628}
!12627 = !DILocalVariable(name: "Delay", arg: 1, scope: !12625, file: !12607, line: 273, type: !152)
!12628 = !DILocalVariable(name: "tmp", scope: !12625, file: !12607, line: 275, type: !227)
!12629 = !DILocation(line: 0, scope: !12625)
!12630 = !DILocation(line: 275, column: 3, scope: !12625)
!12631 = !DILocation(line: 275, column: 18, scope: !12625)
!12632 = !DILocation(line: 275, column: 33, scope: !12625)
!12633 = !DILocation(line: 277, column: 10, scope: !12625)
!12634 = !DILocation(line: 280, column: 12, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12625, file: !12607, line: 280, column: 6)
!12636 = !DILocation(line: 285, column: 3, scope: !12625)
!12637 = !DILocation(line: 287, column: 18, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12639, file: !12607, line: 287, column: 8)
!12639 = distinct !DILexicalBlock(scope: !12625, file: !12607, line: 286, column: 3)
!12640 = !DILocation(line: 292, column: 1, scope: !12625)
!12641 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12607, file: !12607, line: 323, type: !6351, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12642)
!12642 = !{!12643}
!12643 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12641, file: !12607, line: 323, type: !152)
!12644 = !DILocation(line: 0, scope: !12641)
!12645 = !DILocation(line: 326, column: 19, scope: !12641)
!12646 = !DILocation(line: 327, column: 1, scope: !12641)
!12647 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12607, file: !12607, line: 338, type: !12648, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12651)
!12648 = !DISubroutineType(types: !12649)
!12649 = !{!12650, !152}
!12650 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !960, line: 201, baseType: !959)
!12651 = !{!12652, !12653, !12654, !12655, !12656}
!12652 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12647, file: !12607, line: 338, type: !152)
!12653 = !DILocalVariable(name: "timeout", scope: !12647, file: !12607, line: 340, type: !152)
!12654 = !DILocalVariable(name: "getlatency", scope: !12647, file: !12607, line: 341, type: !152)
!12655 = !DILocalVariable(name: "latency", scope: !12647, file: !12607, line: 342, type: !152)
!12656 = !DILocalVariable(name: "status", scope: !12647, file: !12607, line: 343, type: !12650)
!12657 = !DILocation(line: 0, scope: !12647)
!12658 = !DILocation(line: 347, column: 21, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12647, file: !12607, line: 347, column: 6)
!12660 = !DILocation(line: 347, column: 6, scope: !12647)
!12661 = !DILocation(line: 353, column: 8, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12663, file: !12607, line: 353, column: 8)
!12663 = distinct !DILexicalBlock(scope: !12659, file: !12607, line: 352, column: 3)
!12664 = !DILocation(line: 353, column: 40, scope: !12662)
!12665 = !DILocation(line: 353, column: 8, scope: !12663)
!12666 = !DILocation(line: 374, column: 55, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12668, file: !12607, line: 374, column: 10)
!12668 = distinct !DILexicalBlock(scope: !12662, file: !12607, line: 354, column: 5)
!12669 = !DILocation(line: 368, column: 26, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12668, file: !12607, line: 368, column: 10)
!12671 = !DILocation(line: 368, column: 55, scope: !12670)
!12672 = !DILocation(line: 380, column: 57, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12674, file: !12607, line: 380, column: 12)
!12674 = distinct !DILexicalBlock(scope: !12667, file: !12607, line: 379, column: 7)
!12675 = !DILocation(line: 387, column: 8, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12663, file: !12607, line: 387, column: 8)
!12677 = !DILocation(line: 387, column: 40, scope: !12676)
!12678 = !DILocation(line: 387, column: 8, scope: !12663)
!12679 = !DILocation(line: 407, column: 26, scope: !12680)
!12680 = distinct !DILexicalBlock(scope: !12681, file: !12607, line: 407, column: 10)
!12681 = distinct !DILexicalBlock(scope: !12676, file: !12607, line: 388, column: 5)
!12682 = !DILocation(line: 407, column: 55, scope: !12680)
!12683 = !DILocation(line: 413, column: 28, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12685, file: !12607, line: 413, column: 12)
!12685 = distinct !DILexicalBlock(scope: !12680, file: !12607, line: 412, column: 7)
!12686 = !DILocation(line: 413, column: 57, scope: !12684)
!12687 = !DILocation(line: 0, scope: !12663)
!12688 = !DILocation(line: 420, column: 8, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12663, file: !12607, line: 420, column: 8)
!12690 = !DILocation(line: 420, column: 40, scope: !12689)
!12691 = !DILocation(line: 420, column: 8, scope: !12663)
!12692 = !DILocation(line: 429, column: 26, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12694, file: !12607, line: 429, column: 10)
!12694 = distinct !DILexicalBlock(scope: !12689, file: !12607, line: 421, column: 5)
!12695 = !DILocation(line: 429, column: 55, scope: !12693)
!12696 = !DILocation(line: 435, column: 28, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12698, file: !12607, line: 435, column: 12)
!12698 = distinct !DILexicalBlock(scope: !12693, file: !12607, line: 434, column: 7)
!12699 = !DILocation(line: 435, column: 57, scope: !12697)
!12700 = !DILocation(line: 444, column: 5, scope: !12663)
!12701 = !DILocation(line: 448, column: 5, scope: !12663)
!12702 = !DILocation(line: 451, column: 18, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12663, file: !12607, line: 449, column: 5)
!12704 = !DILocation(line: 452, column: 12, scope: !12703)
!12705 = !DILocation(line: 453, column: 26, scope: !12663)
!12706 = !DILocation(line: 453, column: 38, scope: !12663)
!12707 = !DILocation(line: 453, column: 5, scope: !12703)
!12708 = distinct !{!12708, !12701, !12709}
!12709 = !DILocation(line: 453, column: 54, scope: !12663)
!12710 = !DILocation(line: 0, scope: !12659)
!12711 = !DILocation(line: 464, column: 3, scope: !12647)
!12712 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12713, file: !12713, line: 519, type: !6341, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12713 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12714 = !DILocation(line: 521, column: 21, scope: !12712)
!12715 = !DILocation(line: 521, column: 3, scope: !12712)
!12716 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5956, file: !5956, line: 1543, type: !6351, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12717)
!12717 = !{!12718}
!12718 = !DILocalVariable(name: "Latency", arg: 1, scope: !12716, file: !5956, line: 1543, type: !152)
!12719 = !DILocation(line: 0, scope: !12716)
!12720 = !DILocation(line: 1545, column: 3, scope: !12716)
!12721 = !DILocation(line: 1546, column: 1, scope: !12716)
!12722 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5956, file: !5956, line: 1569, type: !6341, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12723 = !DILocation(line: 1571, column: 21, scope: !12722)
!12724 = !DILocation(line: 1571, column: 3, scope: !12722)
!12725 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12607, file: !12607, line: 483, type: !12726, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12742)
!12726 = !DISubroutineType(types: !12727)
!12727 = !{!12650, !12728, !12735}
!12728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12729, size: 32)
!12729 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12614, line: 114, baseType: !12730)
!12730 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12614, line: 94, size: 96, elements: !12731)
!12731 = !{!12732, !12733, !12734}
!12732 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12730, file: !12614, line: 96, baseType: !152, size: 32)
!12733 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12730, file: !12614, line: 102, baseType: !152, size: 32, offset: 32)
!12734 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12730, file: !12614, line: 109, baseType: !152, size: 32, offset: 64)
!12735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12736, size: 32)
!12736 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12614, line: 139, baseType: !12737)
!12737 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12614, line: 119, size: 96, elements: !12738)
!12738 = !{!12739, !12740, !12741}
!12739 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12737, file: !12614, line: 121, baseType: !152, size: 32)
!12740 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12737, file: !12614, line: 127, baseType: !152, size: 32, offset: 32)
!12741 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12737, file: !12614, line: 133, baseType: !152, size: 32, offset: 64)
!12742 = !{!12743, !12744, !12745, !12746}
!12743 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12725, file: !12607, line: 483, type: !12728)
!12744 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12725, file: !12607, line: 484, type: !12735)
!12745 = !DILocalVariable(name: "status", scope: !12725, file: !12607, line: 486, type: !12650)
!12746 = !DILocalVariable(name: "pllfreq", scope: !12725, file: !12607, line: 487, type: !152)
!12747 = !DILocation(line: 0, scope: !12725)
!12748 = !DILocation(line: 490, column: 6, scope: !12749)
!12749 = distinct !DILexicalBlock(scope: !12725, file: !12607, line: 490, column: 6)
!12750 = !DILocation(line: 490, column: 25, scope: !12749)
!12751 = !DILocation(line: 490, column: 6, scope: !12725)
!12752 = !DILocation(line: 493, column: 15, scope: !12753)
!12753 = distinct !DILexicalBlock(scope: !12749, file: !12607, line: 491, column: 3)
!12754 = !DILocation(line: 496, column: 8, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12753, file: !12607, line: 496, column: 8)
!12756 = !DILocation(line: 496, column: 29, scope: !12755)
!12757 = !DILocation(line: 496, column: 8, scope: !12753)
!12758 = !DILocation(line: 498, column: 7, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12755, file: !12607, line: 497, column: 5)
!12760 = !DILocation(line: 499, column: 7, scope: !12759)
!12761 = !DILocation(line: 499, column: 14, scope: !12759)
!12762 = !DILocation(line: 499, column: 35, scope: !12759)
!12763 = distinct !{!12763, !12760, !12764}
!12764 = !DILocation(line: 502, column: 7, scope: !12759)
!12765 = !DILocation(line: 506, column: 76, scope: !12753)
!12766 = !DILocation(line: 506, column: 103, scope: !12753)
!12767 = !DILocation(line: 507, column: 54, scope: !12753)
!12768 = !DILocation(line: 506, column: 5, scope: !12753)
!12769 = !DILocation(line: 510, column: 14, scope: !12753)
!12770 = !DILocation(line: 511, column: 3, scope: !12753)
!12771 = !DILocation(line: 0, scope: !12749)
!12772 = !DILocation(line: 518, column: 3, scope: !12725)
!12773 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12607, file: !12607, line: 642, type: !12774, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12776)
!12774 = !DISubroutineType(types: !12775)
!12775 = !{!12650}
!12776 = !{!12777}
!12777 = !DILocalVariable(name: "status", scope: !12773, file: !12607, line: 644, type: !12650)
!12778 = !DILocation(line: 0, scope: !12773)
!12779 = !DILocation(line: 647, column: 6, scope: !12780)
!12780 = distinct !DILexicalBlock(scope: !12773, file: !12607, line: 647, column: 6)
!12781 = !DILocation(line: 647, column: 27, scope: !12780)
!12782 = !DILocation(line: 663, column: 6, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12773, file: !12607, line: 663, column: 6)
!12784 = !DILocation(line: 663, column: 30, scope: !12783)
!12785 = !DILocation(line: 663, column: 6, scope: !12773)
!12786 = !DILocation(line: 669, column: 3, scope: !12773)
!12787 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12607, file: !12607, line: 611, type: !12788, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12790)
!12788 = !DISubroutineType(types: !12789)
!12789 = !{!152, !152, !12728}
!12790 = !{!12791, !12792, !12793}
!12791 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12787, file: !12607, line: 611, type: !152)
!12792 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12787, file: !12607, line: 611, type: !12728)
!12793 = !DILocalVariable(name: "pllfreq", scope: !12787, file: !12607, line: 613, type: !152)
!12794 = !DILocation(line: 0, scope: !12787)
!12795 = !DILocation(line: 622, column: 56, scope: !12787)
!12796 = !DILocation(line: 622, column: 61, scope: !12787)
!12797 = !DILocation(line: 622, column: 32, scope: !12787)
!12798 = !DILocation(line: 626, column: 45, scope: !12787)
!12799 = !DILocation(line: 626, column: 50, scope: !12787)
!12800 = !DILocation(line: 626, column: 21, scope: !12787)
!12801 = !DILocation(line: 630, column: 47, scope: !12787)
!12802 = !DILocation(line: 630, column: 82, scope: !12787)
!12803 = !DILocation(line: 630, column: 21, scope: !12787)
!12804 = !DILocation(line: 633, column: 3, scope: !12787)
!12805 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9567, file: !9567, line: 3007, type: !6341, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12806 = !DILocation(line: 3009, column: 11, scope: !12805)
!12807 = !DILocation(line: 3009, column: 44, scope: !12805)
!12808 = !DILocation(line: 3009, column: 3, scope: !12805)
!12809 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9567, file: !9567, line: 2987, type: !3082, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12810 = !DILocation(line: 2989, column: 3, scope: !12809)
!12811 = !DILocation(line: 2990, column: 1, scope: !12809)
!12812 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9567, file: !9567, line: 4304, type: !9701, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12813)
!12813 = !{!12814, !12815, !12816, !12817}
!12814 = !DILocalVariable(name: "Source", arg: 1, scope: !12812, file: !9567, line: 4304, type: !152)
!12815 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12812, file: !9567, line: 4304, type: !152)
!12816 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12812, file: !9567, line: 4304, type: !152)
!12817 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12812, file: !9567, line: 4304, type: !152)
!12818 = !DILocation(line: 0, scope: !12812)
!12819 = !DILocation(line: 4306, column: 3, scope: !12812)
!12820 = !DILocation(line: 4308, column: 3, scope: !12812)
!12821 = !DILocation(line: 4312, column: 1, scope: !12812)
!12822 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12607, file: !12607, line: 681, type: !12823, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12825)
!12823 = !DISubroutineType(types: !12824)
!12824 = !{!12650, !152, !12735}
!12825 = !{!12826, !12827, !12828, !12829}
!12826 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12822, file: !12607, line: 681, type: !152)
!12827 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12822, file: !12607, line: 681, type: !12735)
!12828 = !DILocalVariable(name: "status", scope: !12822, file: !12607, line: 683, type: !12650)
!12829 = !DILocalVariable(name: "hclk_frequency", scope: !12822, file: !12607, line: 684, type: !152)
!12830 = !DILocation(line: 0, scope: !12822)
!12831 = !DILocation(line: 691, column: 20, scope: !12822)
!12832 = !DILocation(line: 694, column: 6, scope: !12833)
!12833 = distinct !DILexicalBlock(scope: !12822, file: !12607, line: 694, column: 6)
!12834 = !DILocation(line: 694, column: 22, scope: !12833)
!12835 = !DILocation(line: 694, column: 6, scope: !12822)
!12836 = !DILocation(line: 697, column: 14, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12833, file: !12607, line: 695, column: 3)
!12838 = !DILocation(line: 701, column: 13, scope: !12839)
!12839 = distinct !DILexicalBlock(scope: !12822, file: !12607, line: 701, column: 6)
!12840 = !DILocation(line: 701, column: 6, scope: !12822)
!12841 = !DILocation(line: 704, column: 5, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12839, file: !12607, line: 702, column: 3)
!12843 = !DILocation(line: 705, column: 5, scope: !12842)
!12844 = !DILocation(line: 705, column: 12, scope: !12842)
!12845 = !DILocation(line: 705, column: 33, scope: !12842)
!12846 = distinct !{!12846, !12843, !12847}
!12847 = !DILocation(line: 708, column: 5, scope: !12842)
!12848 = !DILocation(line: 711, column: 49, scope: !12842)
!12849 = !DILocation(line: 711, column: 5, scope: !12842)
!12850 = !DILocation(line: 712, column: 5, scope: !12842)
!12851 = !DILocation(line: 713, column: 5, scope: !12842)
!12852 = !DILocation(line: 713, column: 12, scope: !12842)
!12853 = !DILocation(line: 713, column: 37, scope: !12842)
!12854 = distinct !{!12854, !12851, !12855}
!12855 = !DILocation(line: 716, column: 5, scope: !12842)
!12856 = !DILocation(line: 719, column: 50, scope: !12842)
!12857 = !DILocation(line: 719, column: 5, scope: !12842)
!12858 = !DILocation(line: 720, column: 50, scope: !12842)
!12859 = !DILocation(line: 720, column: 5, scope: !12842)
!12860 = !DILocation(line: 721, column: 3, scope: !12842)
!12861 = !DILocation(line: 724, column: 6, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12822, file: !12607, line: 724, column: 6)
!12863 = !DILocation(line: 724, column: 22, scope: !12862)
!12864 = !DILocation(line: 724, column: 6, scope: !12822)
!12865 = !DILocation(line: 727, column: 14, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12862, file: !12607, line: 725, column: 3)
!12867 = !DILocation(line: 728, column: 3, scope: !12866)
!12868 = !DILocation(line: 731, column: 13, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12822, file: !12607, line: 731, column: 6)
!12870 = !DILocation(line: 731, column: 6, scope: !12822)
!12871 = !DILocation(line: 733, column: 5, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12869, file: !12607, line: 732, column: 3)
!12873 = !DILocation(line: 734, column: 3, scope: !12872)
!12874 = !DILocation(line: 736, column: 3, scope: !12822)
!12875 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9567, file: !9567, line: 4184, type: !3082, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12876 = !DILocation(line: 4186, column: 3, scope: !12875)
!12877 = !DILocation(line: 4187, column: 1, scope: !12875)
!12878 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9567, file: !9567, line: 4205, type: !6341, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12879 = !DILocation(line: 4207, column: 11, scope: !12878)
!12880 = !DILocation(line: 4207, column: 44, scope: !12878)
!12881 = !DILocation(line: 4207, column: 3, scope: !12878)
!12882 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9567, file: !9567, line: 3224, type: !6351, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12883)
!12883 = !{!12884}
!12884 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12882, file: !9567, line: 3224, type: !152)
!12885 = !DILocation(line: 0, scope: !12882)
!12886 = !DILocation(line: 3226, column: 3, scope: !12882)
!12887 = !DILocation(line: 3227, column: 1, scope: !12882)
!12888 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9567, file: !9567, line: 3188, type: !6351, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12889)
!12889 = !{!12890}
!12890 = !DILocalVariable(name: "Source", arg: 1, scope: !12888, file: !9567, line: 3188, type: !152)
!12891 = !DILocation(line: 0, scope: !12888)
!12892 = !DILocation(line: 3190, column: 3, scope: !12888)
!12893 = !DILocation(line: 3191, column: 1, scope: !12888)
!12894 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9567, file: !9567, line: 3204, type: !6341, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12895 = !DILocation(line: 3206, column: 21, scope: !12894)
!12896 = !DILocation(line: 3206, column: 3, scope: !12894)
!12897 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9567, file: !9567, line: 3240, type: !6351, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12898)
!12898 = !{!12899}
!12899 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12897, file: !9567, line: 3240, type: !152)
!12900 = !DILocation(line: 0, scope: !12897)
!12901 = !DILocation(line: 3242, column: 3, scope: !12897)
!12902 = !DILocation(line: 3243, column: 1, scope: !12897)
!12903 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9567, file: !9567, line: 3256, type: !6351, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12904)
!12904 = !{!12905}
!12905 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12903, file: !9567, line: 3256, type: !152)
!12906 = !DILocation(line: 0, scope: !12903)
!12907 = !DILocation(line: 3258, column: 3, scope: !12903)
!12908 = !DILocation(line: 3259, column: 1, scope: !12903)
!12909 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !9567, file: !9567, line: 5153, type: !6341, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12910 = !DILocation(line: 5155, column: 11, scope: !12909)
!12911 = !DILocation(line: 5155, column: 47, scope: !12909)
!12912 = !DILocation(line: 5155, column: 3, scope: !12909)
!12913 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12607, file: !12607, line: 540, type: !12914, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12916)
!12914 = !DISubroutineType(types: !12915)
!12915 = !{!12650, !152, !152, !12728, !12735}
!12916 = !{!12917, !12918, !12919, !12920, !12921, !12922}
!12917 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12913, file: !12607, line: 540, type: !152)
!12918 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12913, file: !12607, line: 540, type: !152)
!12919 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12913, file: !12607, line: 541, type: !12728)
!12920 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12913, file: !12607, line: 541, type: !12735)
!12921 = !DILocalVariable(name: "status", scope: !12913, file: !12607, line: 543, type: !12650)
!12922 = !DILocalVariable(name: "pllfreq", scope: !12913, file: !12607, line: 544, type: !152)
!12923 = !DILocation(line: 0, scope: !12913)
!12924 = !DILocation(line: 551, column: 6, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12913, file: !12607, line: 551, column: 6)
!12926 = !DILocation(line: 551, column: 25, scope: !12925)
!12927 = !DILocation(line: 551, column: 6, scope: !12913)
!12928 = !DILocation(line: 554, column: 15, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12925, file: !12607, line: 552, column: 3)
!12930 = !DILocation(line: 557, column: 8, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12929, file: !12607, line: 557, column: 8)
!12932 = !DILocation(line: 557, column: 29, scope: !12931)
!12933 = !DILocation(line: 557, column: 8, scope: !12929)
!12934 = !DILocation(line: 560, column: 20, scope: !12935)
!12935 = distinct !DILexicalBlock(scope: !12936, file: !12607, line: 560, column: 10)
!12936 = distinct !DILexicalBlock(scope: !12931, file: !12607, line: 558, column: 5)
!12937 = !DILocation(line: 560, column: 10, scope: !12936)
!12938 = !DILocation(line: 562, column: 9, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12935, file: !12607, line: 561, column: 7)
!12940 = !DILocation(line: 563, column: 7, scope: !12939)
!12941 = !DILocation(line: 566, column: 9, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12935, file: !12607, line: 565, column: 7)
!12943 = !DILocation(line: 570, column: 7, scope: !12936)
!12944 = !DILocation(line: 571, column: 7, scope: !12936)
!12945 = !DILocation(line: 571, column: 14, scope: !12936)
!12946 = !DILocation(line: 571, column: 35, scope: !12936)
!12947 = distinct !{!12947, !12944, !12948}
!12948 = !DILocation(line: 574, column: 7, scope: !12936)
!12949 = !DILocation(line: 578, column: 76, scope: !12929)
!12950 = !DILocation(line: 578, column: 103, scope: !12929)
!12951 = !DILocation(line: 579, column: 54, scope: !12929)
!12952 = !DILocation(line: 578, column: 5, scope: !12929)
!12953 = !DILocation(line: 582, column: 14, scope: !12929)
!12954 = !DILocation(line: 583, column: 3, scope: !12929)
!12955 = !DILocation(line: 0, scope: !12925)
!12956 = !DILocation(line: 590, column: 3, scope: !12913)
!12957 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9567, file: !9567, line: 2969, type: !6341, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12958 = !DILocation(line: 2971, column: 11, scope: !12957)
!12959 = !DILocation(line: 2971, column: 44, scope: !12957)
!12960 = !DILocation(line: 2971, column: 3, scope: !12957)
!12961 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9567, file: !9567, line: 2929, type: !3082, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12962 = !DILocation(line: 2931, column: 3, scope: !12961)
!12963 = !DILocation(line: 2932, column: 1, scope: !12961)
!12964 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9567, file: !9567, line: 2939, type: !3082, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12965 = !DILocation(line: 2941, column: 3, scope: !12964)
!12966 = !DILocation(line: 2942, column: 1, scope: !12964)
!12967 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9567, file: !9567, line: 2949, type: !3082, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12968 = !DILocation(line: 2951, column: 3, scope: !12967)
!12969 = !DILocation(line: 2952, column: 1, scope: !12967)
!12970 = distinct !DISubprogram(name: "z_device_state_init", scope: !12971, file: !12971, line: 23, type: !3082, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !12972)
!12971 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12972 = !{!12973}
!12973 = !DILocalVariable(name: "dev", scope: !12970, file: !12971, line: 25, type: !12974)
!12974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12975, size: 32)
!12975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12976)
!12976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !12977)
!12977 = !{!12978, !12979, !12980, !12981, !12987, !12988}
!12978 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12976, file: !247, line: 380, baseType: !118, size: 32)
!12979 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12976, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!12980 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12976, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!12981 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12976, file: !247, line: 386, baseType: !12982, size: 32, offset: 96)
!12982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12983, size: 32)
!12983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !12984)
!12984 = !{!12985, !12986}
!12985 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12983, file: !247, line: 359, baseType: !195, size: 8)
!12986 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12983, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12987 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12976, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!12988 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12976, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!12989 = !DILocation(line: 0, scope: !12970)
!12990 = !DILocation(line: 31, column: 1, scope: !12970)
!12991 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12971, file: !12971, line: 33, type: !12992, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !12994)
!12992 = !DISubroutineType(types: !12993)
!12993 = !{!12974, !118}
!12994 = !{!12995, !12996}
!12995 = !DILocalVariable(name: "name", arg: 1, scope: !12991, file: !12971, line: 33, type: !118)
!12996 = !DILocalVariable(name: "dev", scope: !12991, file: !12971, line: 35, type: !12974)
!12997 = !DILocation(line: 0, scope: !12991)
!12998 = !DILocation(line: 40, column: 12, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !12991, file: !12971, line: 40, column: 6)
!13000 = !DILocation(line: 40, column: 21, scope: !12999)
!13001 = !DILocation(line: 40, column: 25, scope: !12999)
!13002 = !DILocation(line: 40, column: 33, scope: !12999)
!13003 = !DILocation(line: 40, column: 6, scope: !12991)
!13004 = !DILocation(line: 55, column: 2, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !12991, file: !12971, line: 55, column: 2)
!13006 = !DILocation(line: 50, column: 7, scope: !13007)
!13007 = distinct !DILexicalBlock(scope: !13008, file: !12971, line: 50, column: 7)
!13008 = distinct !DILexicalBlock(scope: !13009, file: !12971, line: 49, column: 57)
!13009 = distinct !DILexicalBlock(scope: !13010, file: !12971, line: 49, column: 2)
!13010 = distinct !DILexicalBlock(scope: !12991, file: !12971, line: 49, column: 2)
!13011 = !DILocation(line: 50, column: 30, scope: !13007)
!13012 = !DILocation(line: 50, column: 39, scope: !13007)
!13013 = !DILocation(line: 50, column: 44, scope: !13007)
!13014 = !DILocation(line: 50, column: 7, scope: !13008)
!13015 = !DILocation(line: 49, column: 53, scope: !13009)
!13016 = !DILocation(line: 49, column: 33, scope: !13009)
!13017 = !DILocation(line: 49, column: 2, scope: !13010)
!13018 = distinct !{!13018, !13017, !13019}
!13019 = !DILocation(line: 53, column: 2, scope: !13010)
!13020 = !DILocation(line: 56, column: 7, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !13022, file: !12971, line: 56, column: 7)
!13022 = distinct !DILexicalBlock(scope: !13023, file: !12971, line: 55, column: 57)
!13023 = distinct !DILexicalBlock(scope: !13005, file: !12971, line: 55, column: 2)
!13024 = !DILocation(line: 56, column: 30, scope: !13021)
!13025 = !DILocation(line: 56, column: 52, scope: !13021)
!13026 = !DILocation(line: 56, column: 34, scope: !13021)
!13027 = !DILocation(line: 56, column: 58, scope: !13021)
!13028 = !DILocation(line: 56, column: 7, scope: !13022)
!13029 = !DILocation(line: 55, column: 53, scope: !13023)
!13030 = !DILocation(line: 55, column: 33, scope: !13023)
!13031 = distinct !{!13031, !13004, !13032}
!13032 = !DILocation(line: 59, column: 2, scope: !13005)
!13033 = !DILocation(line: 62, column: 1, scope: !12991)
!13034 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12971, file: !12971, line: 93, type: !13035, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !13037)
!13035 = !DISubroutineType(types: !13036)
!13036 = !{!145, !12974}
!13037 = !{!13038}
!13038 = !DILocalVariable(name: "dev", arg: 1, scope: !13034, file: !12971, line: 93, type: !12974)
!13039 = !DILocation(line: 0, scope: !13034)
!13040 = !DILocation(line: 99, column: 10, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13034, file: !12971, line: 99, column: 6)
!13042 = !DILocation(line: 99, column: 6, scope: !13034)
!13043 = !DILocation(line: 103, column: 14, scope: !13034)
!13044 = !DILocation(line: 103, column: 21, scope: !13034)
!13045 = !DILocation(line: 103, column: 33, scope: !13034)
!13046 = !DILocation(line: 103, column: 49, scope: !13034)
!13047 = !DILocation(line: 103, column: 58, scope: !13034)
!13048 = !DILocation(line: 104, column: 1, scope: !13034)
!13049 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12971, file: !12971, line: 87, type: !13050, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !13053)
!13050 = !DISubroutineType(types: !13051)
!13051 = !{!185, !13052}
!13052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12974, size: 32)
!13053 = !{!13054}
!13054 = !DILocalVariable(name: "devices", arg: 1, scope: !13049, file: !12971, line: 87, type: !13052)
!13055 = !DILocation(line: 0, scope: !13049)
!13056 = !DILocation(line: 89, column: 11, scope: !13049)
!13057 = !DILocation(line: 90, column: 2, scope: !13049)
!13058 = distinct !DISubprogram(name: "device_required_foreach", scope: !12971, file: !12971, line: 125, type: !13059, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !13065)
!13059 = !DISubroutineType(types: !13060)
!13060 = !{!107, !12974, !13061, !106}
!13061 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !247, line: 471, baseType: !13062)
!13062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13063, size: 32)
!13063 = !DISubroutineType(types: !13064)
!13064 = !{!107, !12974, !106}
!13065 = !{!13066, !13067, !13068, !13069, !13070}
!13066 = !DILocalVariable(name: "dev", arg: 1, scope: !13058, file: !12971, line: 125, type: !12974)
!13067 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13058, file: !12971, line: 126, type: !13061)
!13068 = !DILocalVariable(name: "context", arg: 3, scope: !13058, file: !12971, line: 127, type: !106)
!13069 = !DILocalVariable(name: "handle_count", scope: !13058, file: !12971, line: 129, type: !185)
!13070 = !DILocalVariable(name: "handles", scope: !13058, file: !12971, line: 130, type: !260)
!13071 = !DILocation(line: 0, scope: !13058)
!13072 = !DILocation(line: 129, column: 2, scope: !13058)
!13073 = !DILocation(line: 129, column: 9, scope: !13058)
!13074 = !DILocation(line: 130, column: 35, scope: !13058)
!13075 = !DILocation(line: 132, column: 33, scope: !13058)
!13076 = !DILocation(line: 132, column: 9, scope: !13058)
!13077 = !DILocation(line: 133, column: 1, scope: !13058)
!13078 = !DILocation(line: 132, column: 2, scope: !13058)
!13079 = distinct !DISubprogram(name: "device_required_handles_get", scope: !247, file: !247, line: 493, type: !13080, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !13082)
!13080 = !DISubroutineType(types: !13081)
!13081 = !{!260, !12974, !2535}
!13082 = !{!13083, !13084, !13085, !13086}
!13083 = !DILocalVariable(name: "dev", arg: 1, scope: !13079, file: !247, line: 493, type: !12974)
!13084 = !DILocalVariable(name: "count", arg: 2, scope: !13079, file: !247, line: 493, type: !2535)
!13085 = !DILocalVariable(name: "rv", scope: !13079, file: !247, line: 495, type: !260)
!13086 = !DILocalVariable(name: "i", scope: !13087, file: !247, line: 498, type: !185)
!13087 = distinct !DILexicalBlock(scope: !13088, file: !247, line: 497, column: 18)
!13088 = distinct !DILexicalBlock(scope: !13079, file: !247, line: 497, column: 6)
!13089 = !DILocation(line: 0, scope: !13079)
!13090 = !DILocation(line: 495, column: 35, scope: !13079)
!13091 = !DILocation(line: 497, column: 9, scope: !13088)
!13092 = !DILocation(line: 497, column: 6, scope: !13079)
!13093 = !DILocation(line: 0, scope: !13087)
!13094 = !DILocation(line: 500, column: 11, scope: !13087)
!13095 = !DILocation(line: 500, column: 40, scope: !13087)
!13096 = !DILocation(line: 502, column: 4, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !13087, file: !247, line: 501, column: 40)
!13098 = distinct !{!13098, !13099, !13100}
!13099 = !DILocation(line: 500, column: 3, scope: !13087)
!13100 = !DILocation(line: 503, column: 3, scope: !13087)
!13101 = !DILocation(line: 504, column: 10, scope: !13087)
!13102 = !DILocation(line: 505, column: 2, scope: !13087)
!13103 = !DILocation(line: 507, column: 2, scope: !13079)
!13104 = distinct !DISubprogram(name: "device_visitor", scope: !12971, file: !12971, line: 106, type: !13105, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !13107)
!13105 = !DISubroutineType(types: !13106)
!13106 = !{!107, !260, !185, !13061, !106}
!13107 = !{!13108, !13109, !13110, !13111, !13112, !13114, !13117, !13118}
!13108 = !DILocalVariable(name: "handles", arg: 1, scope: !13104, file: !12971, line: 106, type: !260)
!13109 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13104, file: !12971, line: 107, type: !185)
!13110 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13104, file: !12971, line: 108, type: !13061)
!13111 = !DILocalVariable(name: "context", arg: 4, scope: !13104, file: !12971, line: 109, type: !106)
!13112 = !DILocalVariable(name: "i", scope: !13113, file: !12971, line: 112, type: !185)
!13113 = distinct !DILexicalBlock(scope: !13104, file: !12971, line: 112, column: 2)
!13114 = !DILocalVariable(name: "dh", scope: !13115, file: !12971, line: 113, type: !262)
!13115 = distinct !DILexicalBlock(scope: !13116, file: !12971, line: 112, column: 44)
!13116 = distinct !DILexicalBlock(scope: !13113, file: !12971, line: 112, column: 2)
!13117 = !DILocalVariable(name: "rdev", scope: !13115, file: !12971, line: 114, type: !12974)
!13118 = !DILocalVariable(name: "rc", scope: !13115, file: !12971, line: 115, type: !107)
!13119 = !DILocation(line: 0, scope: !13104)
!13120 = !DILocation(line: 0, scope: !13113)
!13121 = !DILocation(line: 112, column: 23, scope: !13116)
!13122 = !DILocation(line: 112, column: 2, scope: !13113)
!13123 = distinct !{!13123, !13122, !13124}
!13124 = !DILocation(line: 120, column: 2, scope: !13113)
!13125 = !DILocation(line: 113, column: 24, scope: !13115)
!13126 = !DILocation(line: 0, scope: !13115)
!13127 = !DILocation(line: 114, column: 31, scope: !13115)
!13128 = !DILocation(line: 115, column: 12, scope: !13115)
!13129 = !DILocation(line: 117, column: 10, scope: !13130)
!13130 = distinct !DILexicalBlock(scope: !13115, file: !12971, line: 117, column: 7)
!13131 = !DILocation(line: 112, column: 39, scope: !13116)
!13132 = !DILocation(line: 123, column: 1, scope: !13104)
!13133 = distinct !DISubprogram(name: "device_from_handle", scope: !247, file: !247, line: 439, type: !13134, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !13136)
!13134 = !DISubroutineType(types: !13135)
!13135 = !{!12974, !262}
!13136 = !{!13137, !13138, !13139}
!13137 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13133, file: !247, line: 439, type: !262)
!13138 = !DILocalVariable(name: "dev", scope: !13133, file: !247, line: 443, type: !12974)
!13139 = !DILocalVariable(name: "numdev", scope: !13133, file: !247, line: 444, type: !185)
!13140 = !DILocation(line: 0, scope: !13133)
!13141 = !DILocation(line: 446, column: 7, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13133, file: !247, line: 446, column: 6)
!13143 = !DILocation(line: 446, column: 18, scope: !13142)
!13144 = !DILocation(line: 446, column: 23, scope: !13142)
!13145 = !DILocation(line: 450, column: 2, scope: !13133)
!13146 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12971, file: !12971, line: 135, type: !13059, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !13147)
!13147 = !{!13148, !13149, !13150, !13151, !13152}
!13148 = !DILocalVariable(name: "dev", arg: 1, scope: !13146, file: !12971, line: 135, type: !12974)
!13149 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13146, file: !12971, line: 136, type: !13061)
!13150 = !DILocalVariable(name: "context", arg: 3, scope: !13146, file: !12971, line: 137, type: !106)
!13151 = !DILocalVariable(name: "handle_count", scope: !13146, file: !12971, line: 139, type: !185)
!13152 = !DILocalVariable(name: "handles", scope: !13146, file: !12971, line: 140, type: !260)
!13153 = !DILocation(line: 0, scope: !13146)
!13154 = !DILocation(line: 139, column: 2, scope: !13146)
!13155 = !DILocation(line: 139, column: 9, scope: !13146)
!13156 = !DILocation(line: 140, column: 35, scope: !13146)
!13157 = !DILocation(line: 142, column: 33, scope: !13146)
!13158 = !DILocation(line: 142, column: 9, scope: !13146)
!13159 = !DILocation(line: 143, column: 1, scope: !13146)
!13160 = !DILocation(line: 142, column: 2, scope: !13146)
!13161 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !247, file: !247, line: 573, type: !13080, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !13162)
!13162 = !{!13163, !13164, !13165, !13166, !13167}
!13163 = !DILocalVariable(name: "dev", arg: 1, scope: !13161, file: !247, line: 573, type: !12974)
!13164 = !DILocalVariable(name: "count", arg: 2, scope: !13161, file: !247, line: 573, type: !2535)
!13165 = !DILocalVariable(name: "rv", scope: !13161, file: !247, line: 575, type: !260)
!13166 = !DILocalVariable(name: "region", scope: !13161, file: !247, line: 576, type: !185)
!13167 = !DILocalVariable(name: "i", scope: !13161, file: !247, line: 577, type: !185)
!13168 = !DILocation(line: 0, scope: !13161)
!13169 = !DILocation(line: 575, column: 35, scope: !13161)
!13170 = !DILocation(line: 579, column: 9, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13161, file: !247, line: 579, column: 6)
!13172 = !DILocation(line: 579, column: 6, scope: !13161)
!13173 = !DILocation(line: 582, column: 8, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13175, file: !247, line: 582, column: 8)
!13175 = distinct !DILexicalBlock(scope: !13176, file: !247, line: 581, column: 23)
!13176 = distinct !DILexicalBlock(scope: !13171, file: !247, line: 579, column: 18)
!13177 = !DILocation(line: 582, column: 12, scope: !13174)
!13178 = !DILocation(line: 585, column: 6, scope: !13175)
!13179 = !DILocation(line: 0, scope: !13176)
!13180 = !DILocation(line: 581, column: 17, scope: !13176)
!13181 = !DILocation(line: 581, column: 3, scope: !13176)
!13182 = !DILocation(line: 588, column: 10, scope: !13176)
!13183 = !DILocation(line: 588, column: 16, scope: !13176)
!13184 = !DILocation(line: 589, column: 4, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13176, file: !247, line: 588, column: 39)
!13186 = !DILocation(line: 588, column: 3, scope: !13176)
!13187 = distinct !{!13187, !13186, !13188}
!13188 = !DILocation(line: 590, column: 3, scope: !13176)
!13189 = !DILocation(line: 591, column: 10, scope: !13176)
!13190 = !DILocation(line: 592, column: 2, scope: !13176)
!13191 = !DILocation(line: 575, column: 25, scope: !13161)
!13192 = !DILocation(line: 594, column: 2, scope: !13161)
!13193 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1947, file: !1947, line: 49, type: !13194, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !2156)
!13194 = !DISubroutineType(types: !13195)
!13195 = !{!187}
!13196 = !DILocation(line: 51, column: 10, scope: !13193)
!13197 = !DILocation(line: 51, column: 20, scope: !13193)
!13198 = !DILocation(line: 51, column: 2, scope: !13193)
!13199 = distinct !DISubprogram(name: "coredump", scope: !3049, file: !3049, line: 209, type: !13200, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13349)
!13200 = !DISubroutineType(types: !13201)
!13201 = !{null, !32, !13202, !13246}
!13202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13203, size: 32)
!13203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13204)
!13204 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2665, line: 141, baseType: !13205)
!13205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2665, line: 97, size: 256, elements: !13206)
!13206 = !{!13207}
!13207 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13205, file: !2665, line: 107, baseType: !13208, size: 256)
!13208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2665, line: 98, size: 256, elements: !13209)
!13209 = !{!13210, !13215, !13220, !13225, !13230, !13235, !13240, !13245}
!13210 = !DIDerivedType(tag: DW_TAG_member, scope: !13208, file: !2665, line: 99, baseType: !13211, size: 32)
!13211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13208, file: !2665, line: 99, size: 32, elements: !13212)
!13212 = !{!13213, !13214}
!13213 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13211, file: !2665, line: 99, baseType: !152, size: 32)
!13214 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13211, file: !2665, line: 99, baseType: !152, size: 32)
!13215 = !DIDerivedType(tag: DW_TAG_member, scope: !13208, file: !2665, line: 100, baseType: !13216, size: 32, offset: 32)
!13216 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13208, file: !2665, line: 100, size: 32, elements: !13217)
!13217 = !{!13218, !13219}
!13218 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13216, file: !2665, line: 100, baseType: !152, size: 32)
!13219 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13216, file: !2665, line: 100, baseType: !152, size: 32)
!13220 = !DIDerivedType(tag: DW_TAG_member, scope: !13208, file: !2665, line: 101, baseType: !13221, size: 32, offset: 64)
!13221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13208, file: !2665, line: 101, size: 32, elements: !13222)
!13222 = !{!13223, !13224}
!13223 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13221, file: !2665, line: 101, baseType: !152, size: 32)
!13224 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13221, file: !2665, line: 101, baseType: !152, size: 32)
!13225 = !DIDerivedType(tag: DW_TAG_member, scope: !13208, file: !2665, line: 102, baseType: !13226, size: 32, offset: 96)
!13226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13208, file: !2665, line: 102, size: 32, elements: !13227)
!13227 = !{!13228, !13229}
!13228 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13226, file: !2665, line: 102, baseType: !152, size: 32)
!13229 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13226, file: !2665, line: 102, baseType: !152, size: 32)
!13230 = !DIDerivedType(tag: DW_TAG_member, scope: !13208, file: !2665, line: 103, baseType: !13231, size: 32, offset: 128)
!13231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13208, file: !2665, line: 103, size: 32, elements: !13232)
!13232 = !{!13233, !13234}
!13233 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13231, file: !2665, line: 103, baseType: !152, size: 32)
!13234 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13231, file: !2665, line: 103, baseType: !152, size: 32)
!13235 = !DIDerivedType(tag: DW_TAG_member, scope: !13208, file: !2665, line: 104, baseType: !13236, size: 32, offset: 160)
!13236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13208, file: !2665, line: 104, size: 32, elements: !13237)
!13237 = !{!13238, !13239}
!13238 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13236, file: !2665, line: 104, baseType: !152, size: 32)
!13239 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13236, file: !2665, line: 104, baseType: !152, size: 32)
!13240 = !DIDerivedType(tag: DW_TAG_member, scope: !13208, file: !2665, line: 105, baseType: !13241, size: 32, offset: 192)
!13241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13208, file: !2665, line: 105, size: 32, elements: !13242)
!13242 = !{!13243, !13244}
!13243 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13241, file: !2665, line: 105, baseType: !152, size: 32)
!13244 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13241, file: !2665, line: 105, baseType: !152, size: 32)
!13245 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13208, file: !2665, line: 106, baseType: !152, size: 32, offset: 224)
!13246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13247, size: 32)
!13247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !13248)
!13248 = !{!13249, !13307, !13319, !13320, !13321, !13322, !13323, !13329, !13344}
!13249 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13247, file: !309, line: 247, baseType: !13250, size: 384)
!13250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !13251)
!13251 = !{!13252, !13276, !13283, !13284, !13285, !13294, !13295, !13296}
!13252 = !DIDerivedType(tag: DW_TAG_member, scope: !13250, file: !309, line: 60, baseType: !13253, size: 64)
!13253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13250, file: !309, line: 60, size: 64, elements: !13254)
!13254 = !{!13255, !13270}
!13255 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13253, file: !309, line: 61, baseType: !13256, size: 64)
!13256 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !13257)
!13257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !13258)
!13258 = !{!13259, !13265}
!13259 = !DIDerivedType(tag: DW_TAG_member, scope: !13257, file: !319, line: 38, baseType: !13260, size: 32)
!13260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13257, file: !319, line: 38, size: 32, elements: !13261)
!13261 = !{!13262, !13264}
!13262 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13260, file: !319, line: 39, baseType: !13263, size: 32)
!13263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13257, size: 32)
!13264 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13260, file: !319, line: 40, baseType: !13263, size: 32)
!13265 = !DIDerivedType(tag: DW_TAG_member, scope: !13257, file: !319, line: 42, baseType: !13266, size: 32, offset: 32)
!13266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13257, file: !319, line: 42, size: 32, elements: !13267)
!13267 = !{!13268, !13269}
!13268 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13266, file: !319, line: 43, baseType: !13263, size: 32)
!13269 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13266, file: !319, line: 44, baseType: !13263, size: 32)
!13270 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13253, file: !309, line: 62, baseType: !13271, size: 64)
!13271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !13272)
!13272 = !{!13273}
!13273 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13271, file: !335, line: 50, baseType: !13274, size: 64)
!13274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13275, size: 64, elements: !340)
!13275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13271, size: 32)
!13276 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13250, file: !309, line: 68, baseType: !13277, size: 32, offset: 64)
!13277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13278, size: 32)
!13278 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !13279)
!13279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !13280)
!13280 = !{!13281}
!13281 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13279, file: !345, line: 232, baseType: !13282, size: 64)
!13282 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !13257)
!13283 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13250, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!13284 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13250, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!13285 = !DIDerivedType(tag: DW_TAG_member, scope: !13250, file: !309, line: 90, baseType: !13286, size: 16, offset: 112)
!13286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13250, file: !309, line: 90, size: 16, elements: !13287)
!13287 = !{!13288, !13293}
!13288 = !DIDerivedType(tag: DW_TAG_member, scope: !13286, file: !309, line: 91, baseType: !13289, size: 16)
!13289 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13286, file: !309, line: 91, size: 16, elements: !13290)
!13290 = !{!13291, !13292}
!13291 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13289, file: !309, line: 96, baseType: !359, size: 8)
!13292 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13289, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!13293 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13286, file: !309, line: 100, baseType: !197, size: 16)
!13294 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13250, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!13295 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13250, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!13296 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13250, file: !309, line: 131, baseType: !13297, size: 192, offset: 192)
!13297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !13298)
!13298 = !{!13299, !13300, !13306}
!13299 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13297, file: !345, line: 245, baseType: !13256, size: 64)
!13300 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13297, file: !345, line: 246, baseType: !13301, size: 32, offset: 64)
!13301 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !13302)
!13302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13303, size: 32)
!13303 = !DISubroutineType(types: !13304)
!13304 = !{null, !13305}
!13305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13297, size: 32)
!13306 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13297, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!13307 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13247, file: !309, line: 250, baseType: !13308, size: 288, offset: 384)
!13308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !13309)
!13309 = !{!13310, !13311, !13312, !13313, !13314, !13315, !13316, !13317, !13318}
!13310 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13308, file: !379, line: 26, baseType: !152, size: 32)
!13311 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13308, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!13312 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13308, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!13313 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13308, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!13314 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13308, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!13315 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13308, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!13316 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13308, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!13317 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13308, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!13318 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13308, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!13319 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13247, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!13320 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13247, file: !309, line: 256, baseType: !13278, size: 64, offset: 704)
!13321 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13247, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!13322 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13247, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!13323 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13247, file: !309, line: 300, baseType: !13324, size: 96, offset: 1056)
!13324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !13325)
!13325 = !{!13326, !13327, !13328}
!13326 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13324, file: !309, line: 153, baseType: !22, size: 32)
!13327 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13324, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!13328 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13324, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!13329 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13247, file: !309, line: 325, baseType: !13330, size: 32, offset: 1152)
!13330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13331, size: 32)
!13331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !13332)
!13332 = !{!13333, !13339, !13340}
!13333 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13331, file: !406, line: 5074, baseType: !13334, size: 96)
!13334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !13335)
!13335 = !{!13336, !13337, !13338}
!13336 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13334, file: !410, line: 57, baseType: !413, size: 32)
!13337 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13334, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!13338 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13334, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!13339 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13331, file: !406, line: 5075, baseType: !13278, size: 64, offset: 96)
!13340 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13331, file: !406, line: 5076, baseType: !13341, size: 32, offset: 160)
!13341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !13342)
!13342 = !{!13343}
!13343 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13341, file: !420, line: 52, baseType: !22, size: 32)
!13344 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13247, file: !309, line: 343, baseType: !13345, size: 64, offset: 1184)
!13345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !13346)
!13346 = !{!13347, !13348}
!13347 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13345, file: !379, line: 63, baseType: !152, size: 32)
!13348 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13345, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!13349 = !{!13350, !13351, !13352}
!13350 = !DILocalVariable(name: "reason", arg: 1, scope: !13199, file: !3049, line: 209, type: !32)
!13351 = !DILocalVariable(name: "esf", arg: 2, scope: !13199, file: !3049, line: 209, type: !13202)
!13352 = !DILocalVariable(name: "thread", arg: 3, scope: !13199, file: !3049, line: 210, type: !13246)
!13353 = !DILocation(line: 0, scope: !13199)
!13354 = !DILocation(line: 212, column: 1, scope: !13199)
!13355 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3049, file: !3049, line: 214, type: !13356, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13358)
!13356 = !DISubroutineType(types: !13357)
!13357 = !{null, !22, !22}
!13358 = !{!13359, !13360}
!13359 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13355, file: !3049, line: 214, type: !22)
!13360 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13355, file: !3049, line: 214, type: !22)
!13361 = !DILocation(line: 0, scope: !13355)
!13362 = !DILocation(line: 216, column: 1, scope: !13355)
!13363 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3049, file: !3049, line: 218, type: !13364, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13366)
!13364 = !DISubroutineType(types: !13365)
!13365 = !{null, !194, !185}
!13366 = !{!13367, !13368}
!13367 = !DILocalVariable(name: "buf", arg: 1, scope: !13363, file: !3049, line: 218, type: !194)
!13368 = !DILocalVariable(name: "buflen", arg: 2, scope: !13363, file: !3049, line: 218, type: !185)
!13369 = !DILocation(line: 0, scope: !13363)
!13370 = !DILocation(line: 220, column: 1, scope: !13363)
!13371 = distinct !DISubprogram(name: "coredump_query", scope: !3049, file: !3049, line: 222, type: !13372, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13374)
!13372 = !DISubroutineType(types: !13373)
!13373 = !{!107, !3048, !106}
!13374 = !{!13375, !13376}
!13375 = !DILocalVariable(name: "query_id", arg: 1, scope: !13371, file: !3049, line: 222, type: !3048)
!13376 = !DILocalVariable(name: "arg", arg: 2, scope: !13371, file: !3049, line: 222, type: !106)
!13377 = !DILocation(line: 0, scope: !13371)
!13378 = !DILocation(line: 224, column: 2, scope: !13371)
!13379 = distinct !DISubprogram(name: "coredump_cmd", scope: !3049, file: !3049, line: 227, type: !13380, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13382)
!13380 = !DISubroutineType(types: !13381)
!13381 = !{!107, !3055, !106}
!13382 = !{!13383, !13384}
!13383 = !DILocalVariable(name: "query_id", arg: 1, scope: !13379, file: !3049, line: 227, type: !3055)
!13384 = !DILocalVariable(name: "arg", arg: 2, scope: !13379, file: !3049, line: 227, type: !106)
!13385 = !DILocation(line: 0, scope: !13379)
!13386 = !DILocation(line: 229, column: 2, scope: !13379)
!13387 = distinct !DISubprogram(name: "arch_system_halt", scope: !13388, file: !13388, line: 23, type: !5946, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13389)
!13388 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13389 = !{!13390}
!13390 = !DILocalVariable(name: "reason", arg: 1, scope: !13387, file: !13388, line: 23, type: !32)
!13391 = !DILocation(line: 0, scope: !13387)
!13392 = !DILocation(line: 55, column: 2, scope: !13393, inlinedAt: !13397)
!13393 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5935, file: !5935, line: 42, type: !5936, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13394)
!13394 = !{!13395, !13396}
!13395 = !DILocalVariable(name: "key", scope: !13393, file: !5935, line: 44, type: !32)
!13396 = !DILocalVariable(name: "tmp", scope: !13393, file: !5935, line: 53, type: !32)
!13397 = distinct !DILocation(line: 31, column: 8, scope: !13387)
!13398 = !{i64 2245468}
!13399 = !DILocation(line: 0, scope: !13393, inlinedAt: !13397)
!13400 = !DILocation(line: 32, column: 2, scope: !13387)
!13401 = !DILocation(line: 32, column: 2, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !13403, file: !13388, line: 32, column: 2)
!13403 = distinct !DILexicalBlock(scope: !13387, file: !13388, line: 32, column: 2)
!13404 = distinct !{!13404, !13405, !13406}
!13405 = !DILocation(line: 32, column: 2, scope: !13403)
!13406 = !DILocation(line: 34, column: 2, scope: !13403)
!13407 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13388, file: !13388, line: 39, type: !13408, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13410)
!13408 = !DISubroutineType(types: !13409)
!13409 = !{null, !32, !13202}
!13410 = !{!13411, !13412}
!13411 = !DILocalVariable(name: "reason", arg: 1, scope: !13407, file: !13388, line: 39, type: !32)
!13412 = !DILocalVariable(name: "esf", arg: 2, scope: !13407, file: !13388, line: 40, type: !13202)
!13413 = !DILocation(line: 0, scope: !13407)
!13414 = !DILocation(line: 45, column: 2, scope: !13415)
!13415 = distinct !DILexicalBlock(scope: !13416, file: !13388, line: 45, column: 2)
!13416 = distinct !DILexicalBlock(scope: !13417, file: !13388, line: 45, column: 2)
!13417 = distinct !DILexicalBlock(scope: !13418, file: !13388, line: 45, column: 2)
!13418 = distinct !DILexicalBlock(scope: !13407, file: !13388, line: 45, column: 2)
!13419 = !DILocation(line: 46, column: 2, scope: !13407)
!13420 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13388, file: !13388, line: 81, type: !5946, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13421)
!13421 = !{!13422}
!13422 = !DILocalVariable(name: "reason", arg: 1, scope: !13420, file: !13388, line: 81, type: !32)
!13423 = !DILocation(line: 0, scope: !13420)
!13424 = !DILocation(line: 83, column: 2, scope: !13420)
!13425 = distinct !DISubprogram(name: "z_fatal_error", scope: !13388, file: !13388, line: 96, type: !13408, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13426)
!13426 = !{!13427, !13428, !13429, !13430}
!13427 = !DILocalVariable(name: "reason", arg: 1, scope: !13425, file: !13388, line: 96, type: !32)
!13428 = !DILocalVariable(name: "esf", arg: 2, scope: !13425, file: !13388, line: 96, type: !13202)
!13429 = !DILocalVariable(name: "key", scope: !13425, file: !13388, line: 102, type: !32)
!13430 = !DILocalVariable(name: "thread", scope: !13425, file: !13388, line: 103, type: !13246)
!13431 = !DILocation(line: 0, scope: !13425)
!13432 = !DILocation(line: 55, column: 2, scope: !13393, inlinedAt: !13433)
!13433 = distinct !DILocation(line: 102, column: 21, scope: !13425)
!13434 = !DILocation(line: 0, scope: !13393, inlinedAt: !13433)
!13435 = !DILocation(line: 104, column: 4, scope: !13425)
!13436 = !DILocation(line: 109, column: 2, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13438, file: !13388, line: 109, column: 2)
!13438 = distinct !DILexicalBlock(scope: !13439, file: !13388, line: 109, column: 2)
!13439 = distinct !DILexicalBlock(scope: !13440, file: !13388, line: 109, column: 2)
!13440 = distinct !DILexicalBlock(scope: !13425, file: !13388, line: 109, column: 2)
!13441 = !DILocation(line: 119, column: 11, scope: !13442)
!13442 = distinct !DILexicalBlock(scope: !13425, file: !13388, line: 119, column: 6)
!13443 = !DILocation(line: 119, column: 20, scope: !13442)
!13444 = !DILocalVariable(name: "esf", arg: 1, scope: !13445, file: !7306, line: 71, type: !13202)
!13445 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7306, file: !7306, line: 71, type: !13446, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13448)
!13446 = !DISubroutineType(types: !13447)
!13447 = !{!145, !13202}
!13448 = !{!13444}
!13449 = !DILocation(line: 0, scope: !13445, inlinedAt: !13450)
!13450 = distinct !DILocation(line: 119, column: 23, scope: !13442)
!13451 = !DILocation(line: 73, column: 21, scope: !13445, inlinedAt: !13450)
!13452 = !DILocation(line: 73, column: 26, scope: !13445, inlinedAt: !13450)
!13453 = !DILocation(line: 73, column: 9, scope: !13445, inlinedAt: !13450)
!13454 = !DILocation(line: 119, column: 6, scope: !13425)
!13455 = !DILocation(line: 120, column: 3, scope: !13456)
!13456 = distinct !DILexicalBlock(scope: !13457, file: !13388, line: 120, column: 3)
!13457 = distinct !DILexicalBlock(scope: !13458, file: !13388, line: 120, column: 3)
!13458 = distinct !DILexicalBlock(scope: !13459, file: !13388, line: 120, column: 3)
!13459 = distinct !DILexicalBlock(scope: !13460, file: !13388, line: 120, column: 3)
!13460 = distinct !DILexicalBlock(scope: !13442, file: !13388, line: 119, column: 57)
!13461 = !DILocation(line: 121, column: 2, scope: !13460)
!13462 = !DILocation(line: 124, column: 2, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13464, file: !13388, line: 124, column: 2)
!13464 = distinct !DILexicalBlock(scope: !13465, file: !13388, line: 124, column: 2)
!13465 = distinct !DILexicalBlock(scope: !13466, file: !13388, line: 124, column: 2)
!13466 = distinct !DILexicalBlock(scope: !13425, file: !13388, line: 124, column: 2)
!13467 = !DILocation(line: 131, column: 2, scope: !13425)
!13468 = !DILocation(line: 0, scope: !13445, inlinedAt: !13469)
!13469 = distinct !DILocation(line: 163, column: 24, scope: !13470)
!13470 = distinct !DILexicalBlock(scope: !13471, file: !13388, line: 163, column: 7)
!13471 = distinct !DILexicalBlock(scope: !13472, file: !13388, line: 160, column: 9)
!13472 = distinct !DILexicalBlock(scope: !13425, file: !13388, line: 146, column: 6)
!13473 = !DILocation(line: 73, column: 21, scope: !13445, inlinedAt: !13469)
!13474 = !DILocation(line: 73, column: 26, scope: !13445, inlinedAt: !13469)
!13475 = !DILocation(line: 73, column: 9, scope: !13445, inlinedAt: !13469)
!13476 = !DILocation(line: 163, column: 7, scope: !13471)
!13477 = !DILocalVariable(name: "key", arg: 1, scope: !13478, file: !5935, line: 84, type: !32)
!13478 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5935, file: !5935, line: 84, type: !5946, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13479)
!13479 = !{!13477}
!13480 = !DILocation(line: 0, scope: !13478, inlinedAt: !13481)
!13481 = distinct !DILocation(line: 171, column: 4, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13470, file: !13388, line: 163, column: 58)
!13483 = !DILocation(line: 95, column: 2, scope: !13478, inlinedAt: !13481)
!13484 = !{i64 2246285}
!13485 = !DILocation(line: 172, column: 4, scope: !13482)
!13486 = !DILocation(line: 163, column: 21, scope: !13470)
!13487 = !DILocation(line: 178, column: 15, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13489, file: !13388, line: 178, column: 8)
!13489 = distinct !DILexicalBlock(scope: !13470, file: !13388, line: 174, column: 10)
!13490 = !DILocation(line: 0, scope: !13478, inlinedAt: !13491)
!13491 = distinct !DILocation(line: 179, column: 5, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13488, file: !13388, line: 178, column: 38)
!13493 = !DILocation(line: 0, scope: !13478, inlinedAt: !13494)
!13494 = distinct !DILocation(line: 186, column: 2, scope: !13425)
!13495 = !DILocation(line: 178, column: 8, scope: !13489)
!13496 = !DILocation(line: 189, column: 3, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13498, file: !13388, line: 188, column: 41)
!13498 = distinct !DILexicalBlock(scope: !13425, file: !13388, line: 188, column: 6)
!13499 = !DILocation(line: 191, column: 1, scope: !13425)
!13500 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !13501, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2156)
!13501 = !DISubroutineType(types: !13502)
!13502 = !{!13503}
!13503 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !13246)
!13504 = !DILocation(line: 535, column: 9, scope: !13500)
!13505 = !DILocation(line: 535, column: 2, scope: !13500)
!13506 = distinct !DISubprogram(name: "reason_to_str", scope: !13388, file: !13388, line: 62, type: !13507, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13509)
!13507 = !DISubroutineType(types: !13508)
!13508 = !{!118, !32}
!13509 = !{!13510}
!13510 = !DILocalVariable(name: "reason", arg: 1, scope: !13506, file: !13388, line: 62, type: !32)
!13511 = !DILocation(line: 0, scope: !13506)
!13512 = !DILocation(line: 64, column: 2, scope: !13506)
!13513 = !DILocation(line: 0, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13506, file: !13388, line: 64, column: 18)
!13515 = !DILocation(line: 78, column: 1, scope: !13506)
!13516 = distinct !DISubprogram(name: "thread_name_get", scope: !13388, file: !13388, line: 51, type: !13517, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13519)
!13517 = !DISubroutineType(types: !13518)
!13518 = !{!118, !13246}
!13519 = !{!13520, !13521}
!13520 = !DILocalVariable(name: "thread", arg: 1, scope: !13516, file: !13388, line: 51, type: !13246)
!13521 = !DILocalVariable(name: "thread_name", scope: !13516, file: !13388, line: 53, type: !118)
!13522 = !DILocation(line: 0, scope: !13516)
!13523 = !DILocation(line: 53, column: 36, scope: !13516)
!13524 = !DILocation(line: 53, column: 28, scope: !13516)
!13525 = !DILocation(line: 53, column: 47, scope: !13516)
!13526 = !DILocation(line: 55, column: 19, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !13516, file: !13388, line: 55, column: 6)
!13528 = !DILocation(line: 55, column: 28, scope: !13527)
!13529 = !DILocation(line: 55, column: 32, scope: !13527)
!13530 = !DILocation(line: 55, column: 47, scope: !13527)
!13531 = !DILocation(line: 55, column: 6, scope: !13516)
!13532 = !DILocation(line: 57, column: 2, scope: !13533)
!13533 = distinct !DILexicalBlock(scope: !13527, file: !13388, line: 55, column: 57)
!13534 = !DILocation(line: 59, column: 2, scope: !13516)
!13535 = distinct !DISubprogram(name: "k_thread_abort", scope: !4410, file: !4410, line: 188, type: !13536, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13538)
!13536 = !DISubroutineType(types: !13537)
!13537 = !{null, !13503}
!13538 = !{!13539}
!13539 = !DILocalVariable(name: "thread", arg: 1, scope: !13535, file: !4410, line: 188, type: !13503)
!13540 = !DILocation(line: 0, scope: !13535)
!13541 = !DILocation(line: 197, column: 2, scope: !13542)
!13542 = distinct !DILexicalBlock(scope: !13535, file: !4410, line: 197, column: 2)
!13543 = !{i64 2154750840}
!13544 = !DILocation(line: 198, column: 2, scope: !13535)
!13545 = !DILocation(line: 199, column: 1, scope: !13535)
!13546 = distinct !DISubprogram(name: "z_current_get", scope: !4410, file: !4410, line: 173, type: !13501, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2156)
!13547 = !DILocation(line: 180, column: 2, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13546, file: !4410, line: 180, column: 2)
!13549 = !{i64 2154750772}
!13550 = !DILocation(line: 181, column: 9, scope: !13546)
!13551 = !DILocation(line: 181, column: 2, scope: !13546)
!13552 = distinct !DISubprogram(name: "z_early_memset", scope: !1955, file: !1955, line: 108, type: !13553, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13555)
!13553 = !DISubroutineType(types: !13554)
!13554 = !{null, !106, !107, !185}
!13555 = !{!13556, !13557, !13558}
!13556 = !DILocalVariable(name: "dst", arg: 1, scope: !13552, file: !1955, line: 108, type: !106)
!13557 = !DILocalVariable(name: "c", arg: 2, scope: !13552, file: !1955, line: 108, type: !107)
!13558 = !DILocalVariable(name: "n", arg: 3, scope: !13552, file: !1955, line: 108, type: !185)
!13559 = !DILocation(line: 0, scope: !13552)
!13560 = !DILocation(line: 110, column: 9, scope: !13552)
!13561 = !DILocation(line: 111, column: 1, scope: !13552)
!13562 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1955, file: !1955, line: 121, type: !13563, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13565)
!13563 = !DISubroutineType(types: !13564)
!13564 = !{null, !106, !13, !185}
!13565 = !{!13566, !13567, !13568}
!13566 = !DILocalVariable(name: "dst", arg: 1, scope: !13562, file: !1955, line: 121, type: !106)
!13567 = !DILocalVariable(name: "src", arg: 2, scope: !13562, file: !1955, line: 121, type: !13)
!13568 = !DILocalVariable(name: "n", arg: 3, scope: !13562, file: !1955, line: 121, type: !185)
!13569 = !DILocation(line: 0, scope: !13562)
!13570 = !DILocation(line: 123, column: 9, scope: !13562)
!13571 = !DILocation(line: 124, column: 1, scope: !13562)
!13572 = distinct !DISubprogram(name: "z_bss_zero", scope: !1955, file: !1955, line: 132, type: !3082, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !2156)
!13573 = !DILocation(line: 143, column: 2, scope: !13572)
!13574 = !DILocation(line: 168, column: 1, scope: !13572)
!13575 = distinct !DISubprogram(name: "z_init_cpu", scope: !1955, file: !1955, line: 372, type: !9168, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13576)
!13576 = !{!13577}
!13577 = !DILocalVariable(name: "id", arg: 1, scope: !13575, file: !1955, line: 372, type: !107)
!13578 = !DILocation(line: 0, scope: !13575)
!13579 = !DILocation(line: 374, column: 2, scope: !13575)
!13580 = !DILocation(line: 375, column: 34, scope: !13575)
!13581 = !DILocation(line: 375, column: 19, scope: !13575)
!13582 = !DILocation(line: 375, column: 31, scope: !13575)
!13583 = !DILocation(line: 376, column: 24, scope: !13575)
!13584 = !DILocation(line: 376, column: 19, scope: !13575)
!13585 = !DILocation(line: 376, column: 22, scope: !13575)
!13586 = !DILocation(line: 378, column: 26, scope: !13575)
!13587 = !DILocation(line: 378, column: 4, scope: !13575)
!13588 = !DILocation(line: 378, column: 50, scope: !13575)
!13589 = !DILocation(line: 377, column: 19, scope: !13575)
!13590 = !DILocation(line: 377, column: 29, scope: !13575)
!13591 = !DILocation(line: 384, column: 1, scope: !13575)
!13592 = distinct !DISubprogram(name: "init_idle_thread", scope: !1955, file: !1955, line: 343, type: !9168, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13593)
!13593 = !{!13594, !13595, !13596, !13599}
!13594 = !DILocalVariable(name: "i", arg: 1, scope: !13592, file: !1955, line: 343, type: !107)
!13595 = !DILocalVariable(name: "thread", scope: !13592, file: !1955, line: 345, type: !2047)
!13596 = !DILocalVariable(name: "stack", scope: !13592, file: !1955, line: 346, type: !13597)
!13597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13598, size: 32)
!13598 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !2165)
!13599 = !DILocalVariable(name: "tname", scope: !13592, file: !1955, line: 354, type: !193)
!13600 = !DILocation(line: 0, scope: !13592)
!13601 = !DILocation(line: 345, column: 29, scope: !13592)
!13602 = !DILocation(line: 346, column: 28, scope: !13592)
!13603 = !DILocation(line: 362, column: 37, scope: !13592)
!13604 = !DILocation(line: 362, column: 36, scope: !13592)
!13605 = !DILocation(line: 361, column: 2, scope: !13592)
!13606 = !DILocation(line: 365, column: 2, scope: !13592)
!13607 = !DILocation(line: 370, column: 1, scope: !13592)
!13608 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !13609, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13611)
!13609 = !DISubroutineType(types: !13610)
!13610 = !{!193, !13597}
!13611 = !{!13612}
!13612 = !DILocalVariable(name: "sym", arg: 1, scope: !13608, file: !577, line: 331, type: !13597)
!13613 = !DILocation(line: 0, scope: !13608)
!13614 = !DILocation(line: 333, column: 21, scope: !13608)
!13615 = !DILocation(line: 333, column: 2, scope: !13608)
!13616 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13617, file: !13617, line: 155, type: !13618, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13620)
!13617 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13618 = !DISubroutineType(types: !13619)
!13619 = !{null, !2047}
!13620 = !{!13621}
!13621 = !DILocalVariable(name: "thread", arg: 1, scope: !13616, file: !13617, line: 155, type: !2047)
!13622 = !DILocation(line: 0, scope: !13616)
!13623 = !DILocation(line: 157, column: 15, scope: !13616)
!13624 = !DILocation(line: 157, column: 28, scope: !13616)
!13625 = !DILocation(line: 158, column: 1, scope: !13616)
!13626 = distinct !DISubprogram(name: "z_cstart", scope: !1955, file: !1955, line: 501, type: !3082, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13627)
!13627 = !{!13628}
!13628 = !DILocalVariable(name: "dummy_thread", scope: !13626, file: !1955, line: 518, type: !2048)
!13629 = !DILocation(line: 507, column: 2, scope: !13626)
!13630 = !DILocation(line: 43, column: 14, scope: !13631, inlinedAt: !13635)
!13631 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13632, file: !13632, line: 40, type: !3082, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13633)
!13632 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13633 = !{!13634}
!13634 = !DILocalVariable(name: "msp", scope: !13631, file: !13632, line: 42, type: !152)
!13635 = distinct !DILocation(line: 44, column: 2, scope: !13636, inlinedAt: !13638)
!13636 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13637, file: !13637, line: 42, type: !3082, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !2156)
!13637 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13638 = distinct !DILocation(line: 510, column: 2, scope: !13626)
!13639 = !DILocation(line: 43, column: 3, scope: !13631, inlinedAt: !13635)
!13640 = !DILocation(line: 43, column: 60, scope: !13631, inlinedAt: !13635)
!13641 = !DILocation(line: 0, scope: !13631, inlinedAt: !13635)
!13642 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13643, file: !6254, line: 1153, type: !152)
!13643 = distinct !DISubprogram(name: "__set_MSP", scope: !6254, file: !6254, line: 1153, type: !6351, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13644)
!13644 = !{!13642}
!13645 = !DILocation(line: 0, scope: !13643, inlinedAt: !13646)
!13646 = distinct !DILocation(line: 46, column: 2, scope: !13631, inlinedAt: !13635)
!13647 = !DILocation(line: 1155, column: 3, scope: !13643, inlinedAt: !13646)
!13648 = !{i64 3519844}
!13649 = !DILocation(line: 62, column: 11, scope: !13631, inlinedAt: !13635)
!13650 = !DILocation(line: 102, column: 2, scope: !13651, inlinedAt: !13652)
!13651 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7306, file: !7306, line: 97, type: !3082, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !2156)
!13652 = distinct !DILocation(line: 45, column: 2, scope: !13636, inlinedAt: !13638)
!13653 = !DILocation(line: 108, column: 2, scope: !13651, inlinedAt: !13652)
!13654 = !DILocation(line: 112, column: 2, scope: !13651, inlinedAt: !13652)
!13655 = !DILocation(line: 113, column: 2, scope: !13651, inlinedAt: !13652)
!13656 = !DILocation(line: 114, column: 2, scope: !13651, inlinedAt: !13652)
!13657 = !DILocation(line: 116, column: 2, scope: !13651, inlinedAt: !13652)
!13658 = !DILocation(line: 123, column: 13, scope: !13651, inlinedAt: !13652)
!13659 = !DILocation(line: 46, column: 2, scope: !13636, inlinedAt: !13638)
!13660 = !DILocation(line: 47, column: 2, scope: !13636, inlinedAt: !13638)
!13661 = !DILocation(line: 174, column: 12, scope: !13662, inlinedAt: !13663)
!13662 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7306, file: !7306, line: 169, type: !3082, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !2156)
!13663 = distinct !DILocation(line: 48, column: 2, scope: !13636, inlinedAt: !13638)
!13664 = !DILocation(line: 179, column: 12, scope: !13662, inlinedAt: !13663)
!13665 = !DILocation(line: 50, column: 2, scope: !13636, inlinedAt: !13638)
!13666 = !DILocation(line: 57, column: 2, scope: !13636, inlinedAt: !13638)
!13667 = !DILocation(line: 518, column: 2, scope: !13626)
!13668 = !DILocation(line: 518, column: 18, scope: !13626)
!13669 = !DILocation(line: 520, column: 2, scope: !13626)
!13670 = !DILocation(line: 523, column: 2, scope: !13626)
!13671 = !DILocation(line: 526, column: 2, scope: !13626)
!13672 = !DILocation(line: 527, column: 2, scope: !13626)
!13673 = !DILocation(line: 543, column: 24, scope: !13626)
!13674 = !DILocation(line: 543, column: 2, scope: !13626)
!13675 = !DILocation(line: 0, scope: !2187)
!13676 = !DILocation(line: 246, column: 15, scope: !2205)
!13677 = !DILocation(line: 246, column: 36, scope: !2204)
!13678 = !DILocation(line: 246, column: 2, scope: !2205)
!13679 = !DILocation(line: 247, column: 37, scope: !2203)
!13680 = !DILocation(line: 0, scope: !2203)
!13681 = !DILocation(line: 248, column: 19, scope: !2203)
!13682 = !DILocation(line: 248, column: 12, scope: !2203)
!13683 = !DILocation(line: 250, column: 11, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !2203, file: !1955, line: 250, column: 7)
!13685 = !DILocation(line: 250, column: 7, scope: !2203)
!13686 = !DILocation(line: 254, column: 11, scope: !13687)
!13687 = distinct !DILexicalBlock(scope: !13688, file: !1955, line: 254, column: 8)
!13688 = distinct !DILexicalBlock(scope: !13684, file: !1955, line: 250, column: 20)
!13689 = !DILocation(line: 254, column: 8, scope: !13688)
!13690 = !DILocation(line: 255, column: 9, scope: !13691)
!13691 = distinct !DILexicalBlock(scope: !13687, file: !1955, line: 254, column: 17)
!13692 = !DILocation(line: 258, column: 9, scope: !13691)
!13693 = !DILocation(line: 261, column: 28, scope: !13691)
!13694 = !DILocation(line: 261, column: 10, scope: !13691)
!13695 = !DILocation(line: 261, column: 17, scope: !13691)
!13696 = !DILocation(line: 261, column: 26, scope: !13691)
!13697 = !DILocation(line: 262, column: 4, scope: !13691)
!13698 = !DILocation(line: 263, column: 9, scope: !13688)
!13699 = !DILocation(line: 263, column: 16, scope: !13688)
!13700 = !DILocation(line: 263, column: 28, scope: !13688)
!13701 = !DILocation(line: 264, column: 3, scope: !13688)
!13702 = !DILocation(line: 246, column: 60, scope: !2204)
!13703 = distinct !{!13703, !13678, !13704}
!13704 = !DILocation(line: 265, column: 2, scope: !2205)
!13705 = !DILocation(line: 266, column: 1, scope: !2187)
!13706 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6294, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13707)
!13707 = !{!13708, !13709}
!13708 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13706, file: !463, line: 1814, type: !921)
!13709 = !DILocalVariable(name: "priority", arg: 2, scope: !13706, file: !463, line: 1814, type: !152)
!13710 = !DILocation(line: 0, scope: !13706)
!13711 = !DILocation(line: 1822, column: 48, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13713, file: !463, line: 1821, column: 3)
!13713 = distinct !DILexicalBlock(scope: !13706, file: !463, line: 1816, column: 7)
!13714 = !DILocation(line: 1822, column: 32, scope: !13712)
!13715 = !DILocation(line: 1822, column: 40, scope: !13712)
!13716 = !DILocation(line: 1822, column: 5, scope: !13712)
!13717 = !DILocation(line: 1822, column: 46, scope: !13712)
!13718 = !DILocation(line: 1824, column: 1, scope: !13706)
!13719 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13637, file: !13637, line: 32, type: !3082, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!13720 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13721, file: !13721, line: 215, type: !13618, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13722)
!13721 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13722 = !{!13723}
!13723 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13720, file: !13721, line: 215, type: !2047)
!13724 = !DILocation(line: 0, scope: !13720)
!13725 = !DILocation(line: 217, column: 21, scope: !13720)
!13726 = !DILocation(line: 217, column: 34, scope: !13720)
!13727 = !DILocation(line: 221, column: 21, scope: !13720)
!13728 = !DILocation(line: 221, column: 34, scope: !13720)
!13729 = !DILocation(line: 223, column: 27, scope: !13720)
!13730 = !DILocation(line: 223, column: 33, scope: !13720)
!13731 = !DILocation(line: 224, column: 27, scope: !13720)
!13732 = !DILocation(line: 224, column: 32, scope: !13720)
!13733 = !DILocation(line: 232, column: 16, scope: !13720)
!13734 = !DILocation(line: 232, column: 30, scope: !13720)
!13735 = !DILocation(line: 239, column: 24, scope: !13720)
!13736 = !DILocation(line: 240, column: 1, scope: !13720)
!13737 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1955, file: !1955, line: 399, type: !13738, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13740)
!13738 = !DISubroutineType(types: !13739)
!13739 = !{!193}
!13740 = !{!13741}
!13741 = !DILocalVariable(name: "stack_ptr", scope: !13737, file: !1955, line: 401, type: !193)
!13742 = !DILocation(line: 404, column: 2, scope: !13737)
!13743 = !DILocation(line: 416, column: 24, scope: !13737)
!13744 = !DILocation(line: 418, column: 14, scope: !13737)
!13745 = !DILocation(line: 0, scope: !13737)
!13746 = !DILocation(line: 423, column: 2, scope: !13737)
!13747 = !DILocation(line: 424, column: 2, scope: !13737)
!13748 = !DILocation(line: 426, column: 2, scope: !13737)
!13749 = !DILocation(line: 428, column: 2, scope: !13737)
!13750 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1955, file: !1955, line: 432, type: !13751, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13753)
!13751 = !DISubroutineType(types: !13752)
!13752 = !{null, !193}
!13753 = !{!13754}
!13754 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13750, file: !1955, line: 432, type: !193)
!13755 = !DILocation(line: 0, scope: !13750)
!13756 = !DILocation(line: 435, column: 2, scope: !13750)
!13757 = !DILocation(line: 445, column: 2, scope: !13750)
!13758 = distinct !DISubprogram(name: "bg_thread_main", scope: !1955, file: !1955, line: 277, type: !562, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13759)
!13759 = !{!13760, !13761, !13762}
!13760 = !DILocalVariable(name: "unused1", arg: 1, scope: !13758, file: !1955, line: 277, type: !106)
!13761 = !DILocalVariable(name: "unused2", arg: 2, scope: !13758, file: !1955, line: 277, type: !106)
!13762 = !DILocalVariable(name: "unused3", arg: 3, scope: !13758, file: !1955, line: 277, type: !106)
!13763 = !DILocation(line: 0, scope: !13758)
!13764 = !DILocation(line: 291, column: 20, scope: !13758)
!13765 = !DILocation(line: 293, column: 2, scope: !13758)
!13766 = !DILocation(line: 297, column: 2, scope: !13758)
!13767 = !DILocation(line: 305, column: 2, scope: !13758)
!13768 = !DILocation(line: 307, column: 2, scope: !13758)
!13769 = !DILocation(line: 330, column: 8, scope: !13758)
!13770 = !DILocation(line: 333, column: 34, scope: !13758)
!13771 = !DILocation(line: 339, column: 1, scope: !13758)
!13772 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2216, file: !2216, line: 45, type: !13773, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13781)
!13773 = !DISubroutineType(types: !13774)
!13774 = !{null, !13775, !106}
!13775 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !406, line: 103, baseType: !13776)
!13776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13777, size: 32)
!13777 = !DISubroutineType(types: !13778)
!13778 = !{null, !13779, !106}
!13779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13780, size: 32)
!13780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2221)
!13781 = !{!13782, !13783}
!13782 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13772, file: !2216, line: 45, type: !13775)
!13783 = !DILocalVariable(name: "user_data", arg: 2, scope: !13772, file: !2216, line: 45, type: !106)
!13784 = !DILocation(line: 0, scope: !13772)
!13785 = !DILocation(line: 71, column: 1, scope: !13772)
!13786 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2216, file: !2216, line: 73, type: !13773, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13787)
!13787 = !{!13788, !13789}
!13788 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13786, file: !2216, line: 73, type: !13775)
!13789 = !DILocalVariable(name: "user_data", arg: 2, scope: !13786, file: !2216, line: 73, type: !106)
!13790 = !DILocation(line: 0, scope: !13786)
!13791 = !DILocation(line: 95, column: 1, scope: !13786)
!13792 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2216, file: !2216, line: 97, type: !7307, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2156)
!13793 = !DILocation(line: 1031, column: 3, scope: !13794, inlinedAt: !13797)
!13794 = distinct !DISubprogram(name: "__get_IPSR", scope: !6254, file: !6254, line: 1027, type: !6341, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13795)
!13795 = !{!13796}
!13796 = !DILocalVariable(name: "result", scope: !13794, file: !6254, line: 1029, type: !152)
!13797 = distinct !DILocation(line: 48, column: 10, scope: !13798, inlinedAt: !13799)
!13798 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7306, file: !7306, line: 46, type: !7307, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2156)
!13799 = distinct !DILocation(line: 99, column: 9, scope: !13792)
!13800 = !{i64 3525495}
!13801 = !DILocation(line: 0, scope: !13794, inlinedAt: !13797)
!13802 = !DILocation(line: 48, column: 9, scope: !13798, inlinedAt: !13799)
!13803 = !DILocation(line: 99, column: 2, scope: !13792)
!13804 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2216, file: !2216, line: 106, type: !3082, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2156)
!13805 = !DILocation(line: 108, column: 2, scope: !13804)
!13806 = !DILocation(line: 108, column: 17, scope: !13804)
!13807 = !DILocation(line: 108, column: 30, scope: !13804)
!13808 = !DILocation(line: 109, column: 1, scope: !13804)
!13809 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2216, file: !2216, line: 116, type: !3082, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2156)
!13810 = !DILocation(line: 118, column: 2, scope: !13809)
!13811 = !DILocation(line: 118, column: 17, scope: !13809)
!13812 = !DILocation(line: 118, column: 30, scope: !13809)
!13813 = !DILocation(line: 119, column: 1, scope: !13809)
!13814 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2216, file: !2216, line: 126, type: !7307, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2156)
!13815 = !DILocation(line: 128, column: 10, scope: !13814)
!13816 = !DILocation(line: 128, column: 25, scope: !13814)
!13817 = !DILocation(line: 128, column: 38, scope: !13814)
!13818 = !DILocation(line: 128, column: 53, scope: !13814)
!13819 = !DILocation(line: 128, column: 2, scope: !13814)
!13820 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2216, file: !2216, line: 187, type: !13821, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13823)
!13821 = !DISubroutineType(types: !13822)
!13822 = !{!107, !2220, !118}
!13823 = !{!13824, !13825}
!13824 = !DILocalVariable(name: "thread", arg: 1, scope: !13820, file: !2216, line: 187, type: !2220)
!13825 = !DILocalVariable(name: "value", arg: 2, scope: !13820, file: !2216, line: 187, type: !118)
!13826 = !DILocation(line: 0, scope: !13820)
!13827 = !DILocation(line: 190, column: 13, scope: !13828)
!13828 = distinct !DILexicalBlock(scope: !13820, file: !2216, line: 190, column: 6)
!13829 = !DILocation(line: 190, column: 6, scope: !13820)
!13830 = !DILocation(line: 194, column: 10, scope: !13820)
!13831 = !DILocation(line: 194, column: 2, scope: !13820)
!13832 = !DILocation(line: 195, column: 2, scope: !13820)
!13833 = !DILocation(line: 195, column: 47, scope: !13820)
!13834 = !DILocation(line: 199, column: 2, scope: !13820)
!13835 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2216, file: !2216, line: 238, type: !13836, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13838)
!13836 = !DISubroutineType(types: !13837)
!13837 = !{!118, !2220}
!13838 = !{!13839}
!13839 = !DILocalVariable(name: "thread", arg: 1, scope: !13835, file: !2216, line: 238, type: !2220)
!13840 = !DILocation(line: 0, scope: !13835)
!13841 = !DILocation(line: 241, column: 23, scope: !13835)
!13842 = !DILocation(line: 241, column: 2, scope: !13835)
!13843 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2216, file: !2216, line: 248, type: !13844, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13846)
!13844 = !DISubroutineType(types: !13845)
!13845 = !{!107, !2219, !193, !185}
!13846 = !{!13847, !13848, !13849}
!13847 = !DILocalVariable(name: "thread", arg: 1, scope: !13843, file: !2216, line: 248, type: !2219)
!13848 = !DILocalVariable(name: "buf", arg: 2, scope: !13843, file: !2216, line: 248, type: !193)
!13849 = !DILocalVariable(name: "size", arg: 3, scope: !13843, file: !2216, line: 248, type: !185)
!13850 = !DILocation(line: 0, scope: !13843)
!13851 = !DILocation(line: 251, column: 15, scope: !13843)
!13852 = !DILocation(line: 251, column: 2, scope: !13843)
!13853 = !DILocation(line: 252, column: 2, scope: !13843)
!13854 = !DILocation(line: 0, scope: !2215)
!13855 = !DILocation(line: 281, column: 11, scope: !13856)
!13856 = distinct !DILexicalBlock(scope: !2215, file: !2216, line: 281, column: 6)
!13857 = !DILocation(line: 281, column: 20, scope: !13856)
!13858 = !DILocation(line: 275, column: 45, scope: !2215)
!13859 = !DILocation(line: 285, column: 10, scope: !2215)
!13860 = !DILocation(line: 0, scope: !2339)
!13861 = !DILocation(line: 293, column: 39, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !2339, file: !2216, line: 293, column: 2)
!13863 = !DILocation(line: 293, column: 2, scope: !2339)
!13864 = !DILocation(line: 273, column: 14, scope: !2215)
!13865 = !DILocation(line: 309, column: 2, scope: !2215)
!13866 = !DILocation(line: 309, column: 11, scope: !2215)
!13867 = !DILocation(line: 311, column: 2, scope: !2215)
!13868 = !DILocation(line: 293, column: 26, scope: !13862)
!13869 = !DILocation(line: 294, column: 9, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13862, file: !2216, line: 293, column: 54)
!13871 = !DILocation(line: 295, column: 21, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13870, file: !2216, line: 295, column: 7)
!13873 = !DILocation(line: 295, column: 28, scope: !13872)
!13874 = !DILocation(line: 295, column: 7, scope: !13870)
!13875 = !DILocation(line: 299, column: 25, scope: !13870)
!13876 = !DILocation(line: 299, column: 41, scope: !13870)
!13877 = !DILocation(line: 300, column: 7, scope: !13870)
!13878 = !DILocation(line: 300, column: 26, scope: !13870)
!13879 = !DILocation(line: 299, column: 10, scope: !13870)
!13880 = !DILocation(line: 299, column: 7, scope: !13870)
!13881 = !DILocation(line: 302, column: 16, scope: !13870)
!13882 = !DILocation(line: 304, column: 20, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13870, file: !2216, line: 304, column: 7)
!13884 = !DILocation(line: 304, column: 7, scope: !13870)
!13885 = !DILocation(line: 305, column: 26, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13883, file: !2216, line: 304, column: 26)
!13887 = !DILocation(line: 305, column: 42, scope: !13886)
!13888 = !DILocation(line: 305, column: 11, scope: !13886)
!13889 = !DILocation(line: 305, column: 8, scope: !13886)
!13890 = !DILocation(line: 306, column: 3, scope: !13886)
!13891 = !DILocation(line: 293, column: 50, scope: !13862)
!13892 = !DILocation(line: 312, column: 1, scope: !2215)
!13893 = distinct !DISubprogram(name: "copy_bytes", scope: !2216, file: !2216, line: 261, type: !13894, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13896)
!13894 = !DISubroutineType(types: !13895)
!13895 = !{!185, !193, !185, !118, !185}
!13896 = !{!13897, !13898, !13899, !13900, !13901}
!13897 = !DILocalVariable(name: "dest", arg: 1, scope: !13893, file: !2216, line: 261, type: !193)
!13898 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13893, file: !2216, line: 261, type: !185)
!13899 = !DILocalVariable(name: "src", arg: 3, scope: !13893, file: !2216, line: 261, type: !118)
!13900 = !DILocalVariable(name: "src_size", arg: 4, scope: !13893, file: !2216, line: 261, type: !185)
!13901 = !DILocalVariable(name: "bytes_to_copy", scope: !13893, file: !2216, line: 263, type: !185)
!13902 = !DILocation(line: 0, scope: !13893)
!13903 = !DILocation(line: 265, column: 18, scope: !13893)
!13904 = !DILocation(line: 266, column: 2, scope: !13893)
!13905 = !DILocation(line: 268, column: 2, scope: !13893)
!13906 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2216, file: !2216, line: 383, type: !13907, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13909)
!13907 = !DISubroutineType(types: !13908)
!13908 = !{null, !2220}
!13909 = !{!13910}
!13910 = !DILocalVariable(name: "thread", arg: 1, scope: !13906, file: !2216, line: 383, type: !2220)
!13911 = !DILocation(line: 0, scope: !13906)
!13912 = !DILocation(line: 387, column: 2, scope: !13906)
!13913 = !DILocation(line: 388, column: 1, scope: !13906)
!13914 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2216, file: !2216, line: 528, type: !13915, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13922)
!13915 = !DISubroutineType(types: !13916)
!13916 = !{!193, !2220, !13917, !185, !559, !106, !106, !106, !107, !152, !118}
!13917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13918, size: 32)
!13918 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !13919)
!13919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !13920)
!13920 = !{!13921}
!13921 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13919, file: !577, line: 48, baseType: !120, size: 8)
!13922 = !{!13923, !13924, !13925, !13926, !13927, !13928, !13929, !13930, !13931, !13932, !13933}
!13923 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13914, file: !2216, line: 528, type: !2220)
!13924 = !DILocalVariable(name: "stack", arg: 2, scope: !13914, file: !2216, line: 529, type: !13917)
!13925 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13914, file: !2216, line: 529, type: !185)
!13926 = !DILocalVariable(name: "entry", arg: 4, scope: !13914, file: !2216, line: 530, type: !559)
!13927 = !DILocalVariable(name: "p1", arg: 5, scope: !13914, file: !2216, line: 531, type: !106)
!13928 = !DILocalVariable(name: "p2", arg: 6, scope: !13914, file: !2216, line: 531, type: !106)
!13929 = !DILocalVariable(name: "p3", arg: 7, scope: !13914, file: !2216, line: 531, type: !106)
!13930 = !DILocalVariable(name: "prio", arg: 8, scope: !13914, file: !2216, line: 532, type: !107)
!13931 = !DILocalVariable(name: "options", arg: 9, scope: !13914, file: !2216, line: 532, type: !152)
!13932 = !DILocalVariable(name: "name", arg: 10, scope: !13914, file: !2216, line: 532, type: !118)
!13933 = !DILocalVariable(name: "stack_ptr", scope: !13914, file: !2216, line: 534, type: !193)
!13934 = !DILocation(line: 0, scope: !13914)
!13935 = !DILocation(line: 536, column: 2, scope: !13936)
!13936 = distinct !DILexicalBlock(scope: !13937, file: !2216, line: 536, column: 2)
!13937 = distinct !DILexicalBlock(scope: !13938, file: !2216, line: 536, column: 2)
!13938 = distinct !DILexicalBlock(scope: !13914, file: !2216, line: 536, column: 2)
!13939 = !DILocation(line: 536, column: 2, scope: !13940)
!13940 = distinct !DILexicalBlock(scope: !13936, file: !2216, line: 536, column: 2)
!13941 = !DILocation(line: 550, column: 28, scope: !13914)
!13942 = !DILocation(line: 550, column: 2, scope: !13914)
!13943 = !DILocation(line: 553, column: 34, scope: !13914)
!13944 = !DILocation(line: 553, column: 2, scope: !13914)
!13945 = !DILocation(line: 554, column: 14, scope: !13914)
!13946 = !DILocation(line: 564, column: 2, scope: !13914)
!13947 = !DILocation(line: 567, column: 14, scope: !13914)
!13948 = !DILocation(line: 567, column: 24, scope: !13914)
!13949 = !DILocation(line: 594, column: 11, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13914, file: !2216, line: 594, column: 6)
!13951 = !DILocation(line: 0, scope: !13950)
!13952 = !DILocation(line: 594, column: 6, scope: !13914)
!13953 = !DILocation(line: 595, column: 3, scope: !13954)
!13954 = distinct !DILexicalBlock(scope: !13950, file: !2216, line: 594, column: 20)
!13955 = !DILocation(line: 598, column: 3, scope: !13954)
!13956 = !DILocation(line: 598, column: 52, scope: !13954)
!13957 = !DILocation(line: 599, column: 2, scope: !13954)
!13958 = !DILocation(line: 600, column: 23, scope: !13959)
!13959 = distinct !DILexicalBlock(scope: !13950, file: !2216, line: 599, column: 9)
!13960 = !DILocation(line: 612, column: 7, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13914, file: !2216, line: 612, column: 6)
!13962 = !DILocation(line: 612, column: 6, scope: !13914)
!13963 = !DILocation(line: 627, column: 40, scope: !13914)
!13964 = !DILocation(line: 637, column: 2, scope: !13914)
!13965 = !DILocation(line: 613, column: 15, scope: !13966)
!13966 = distinct !DILexicalBlock(scope: !13961, file: !2216, line: 612, column: 17)
!13967 = !DILocation(line: 613, column: 29, scope: !13966)
!13968 = !DILocation(line: 638, column: 1, scope: !13914)
!13969 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13617, file: !13617, line: 78, type: !13970, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13972)
!13970 = !DISubroutineType(types: !13971)
!13971 = !{!145, !106}
!13972 = !{!13973}
!13973 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13969, file: !13617, line: 78, type: !106)
!13974 = !DILocation(line: 0, scope: !13969)
!13975 = !DILocation(line: 80, column: 21, scope: !13969)
!13976 = !DILocation(line: 80, column: 2, scope: !13969)
!13977 = distinct !DISubprogram(name: "z_waitq_init", scope: !13978, file: !13978, line: 47, type: !13979, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13981)
!13978 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13979 = !DISubroutineType(types: !13980)
!13980 = !{null, !2251}
!13981 = !{!13982}
!13982 = !DILocalVariable(name: "w", arg: 1, scope: !13977, file: !13978, line: 47, type: !2251)
!13983 = !DILocation(line: 0, scope: !13977)
!13984 = !DILocation(line: 49, column: 21, scope: !13977)
!13985 = !DILocation(line: 49, column: 2, scope: !13977)
!13986 = !DILocation(line: 50, column: 1, scope: !13977)
!13987 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2216, file: !2216, line: 791, type: !13988, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13991)
!13988 = !DISubroutineType(types: !13989)
!13989 = !{null, !13990, !107, !152, !32}
!13990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!13991 = !{!13992, !13993, !13994, !13995}
!13992 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13987, file: !2216, line: 791, type: !13990)
!13993 = !DILocalVariable(name: "priority", arg: 2, scope: !13987, file: !2216, line: 791, type: !107)
!13994 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13987, file: !2216, line: 792, type: !152)
!13995 = !DILocalVariable(name: "options", arg: 4, scope: !13987, file: !2216, line: 792, type: !32)
!13996 = !DILocation(line: 0, scope: !13987)
!13997 = !DILocation(line: 795, column: 15, scope: !13987)
!13998 = !DILocation(line: 795, column: 25, scope: !13987)
!13999 = !DILocation(line: 796, column: 30, scope: !13987)
!14000 = !DILocation(line: 796, column: 15, scope: !13987)
!14001 = !DILocation(line: 796, column: 28, scope: !13987)
!14002 = !DILocation(line: 797, column: 30, scope: !13987)
!14003 = !DILocation(line: 797, column: 15, scope: !13987)
!14004 = !DILocation(line: 797, column: 28, scope: !13987)
!14005 = !DILocation(line: 799, column: 22, scope: !13987)
!14006 = !DILocation(line: 799, column: 15, scope: !13987)
!14007 = !DILocation(line: 799, column: 20, scope: !13987)
!14008 = !DILocation(line: 801, column: 15, scope: !13987)
!14009 = !DILocation(line: 801, column: 28, scope: !13987)
!14010 = !DILocation(line: 814, column: 2, scope: !13987)
!14011 = !DILocation(line: 815, column: 1, scope: !13987)
!14012 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2216, file: !2216, line: 449, type: !14013, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14015)
!14013 = !DISubroutineType(types: !14014)
!14014 = !{!193, !2220, !13917, !185}
!14015 = !{!14016, !14017, !14018, !14019, !14020, !14021, !14022, !14023}
!14016 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14012, file: !2216, line: 449, type: !2220)
!14017 = !DILocalVariable(name: "stack", arg: 2, scope: !14012, file: !2216, line: 450, type: !13917)
!14018 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14012, file: !2216, line: 450, type: !185)
!14019 = !DILocalVariable(name: "stack_obj_size", scope: !14012, file: !2216, line: 452, type: !185)
!14020 = !DILocalVariable(name: "stack_buf_size", scope: !14012, file: !2216, line: 452, type: !185)
!14021 = !DILocalVariable(name: "stack_ptr", scope: !14012, file: !2216, line: 453, type: !193)
!14022 = !DILocalVariable(name: "stack_buf_start", scope: !14012, file: !2216, line: 453, type: !193)
!14023 = !DILocalVariable(name: "delta", scope: !14012, file: !2216, line: 454, type: !185)
!14024 = !DILocation(line: 0, scope: !14012)
!14025 = !DILocation(line: 465, column: 20, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !14012, file: !2216, line: 463, column: 2)
!14027 = !DILocation(line: 466, column: 21, scope: !14026)
!14028 = !DILocation(line: 473, column: 28, scope: !14012)
!14029 = !DILocation(line: 514, column: 33, scope: !14012)
!14030 = !DILocation(line: 514, column: 25, scope: !14012)
!14031 = !DILocation(line: 514, column: 31, scope: !14012)
!14032 = !DILocation(line: 515, column: 25, scope: !14012)
!14033 = !DILocation(line: 515, column: 30, scope: !14012)
!14034 = !DILocation(line: 516, column: 25, scope: !14012)
!14035 = !DILocation(line: 516, column: 31, scope: !14012)
!14036 = !DILocation(line: 520, column: 2, scope: !14012)
!14037 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !14038, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14040)
!14038 = !DISubroutineType(types: !14039)
!14039 = !{!193, !13917}
!14040 = !{!14041}
!14041 = !DILocalVariable(name: "sym", arg: 1, scope: !14037, file: !577, line: 331, type: !13917)
!14042 = !DILocation(line: 0, scope: !14037)
!14043 = !DILocation(line: 333, column: 21, scope: !14037)
!14044 = !DILocation(line: 333, column: 2, scope: !14037)
!14045 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14046, file: !14046, line: 40, type: !14047, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14049)
!14046 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14047 = !DISubroutineType(types: !14048)
!14048 = !{null, !13990}
!14049 = !{!14050}
!14050 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14045, file: !14046, line: 40, type: !13990)
!14051 = !DILocation(line: 0, scope: !14045)
!14052 = !DILocation(line: 42, column: 31, scope: !14045)
!14053 = !DILocation(line: 42, column: 2, scope: !14045)
!14054 = !DILocation(line: 43, column: 1, scope: !14045)
!14055 = distinct !DISubprogram(name: "z_init_timeout", scope: !14046, file: !14046, line: 25, type: !2277, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14056)
!14056 = !{!14057}
!14057 = !DILocalVariable(name: "to", arg: 1, scope: !14055, file: !14046, line: 25, type: !2279)
!14058 = !DILocation(line: 0, scope: !14055)
!14059 = !DILocation(line: 27, column: 22, scope: !14055)
!14060 = !DILocation(line: 27, column: 2, scope: !14055)
!14061 = !DILocation(line: 28, column: 1, scope: !14055)
!14062 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14063, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14065)
!14063 = !DISubroutineType(types: !14064)
!14064 = !{null, !2326}
!14065 = !{!14066}
!14066 = !DILocalVariable(name: "node", arg: 1, scope: !14062, file: !319, line: 211, type: !2326)
!14067 = !DILocation(line: 0, scope: !14062)
!14068 = !DILocation(line: 213, column: 8, scope: !14062)
!14069 = !DILocation(line: 213, column: 13, scope: !14062)
!14070 = !DILocation(line: 214, column: 8, scope: !14062)
!14071 = !DILocation(line: 214, column: 13, scope: !14062)
!14072 = !DILocation(line: 215, column: 1, scope: !14062)
!14073 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !14074, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14077)
!14074 = !DISubroutineType(types: !14075)
!14075 = !{null, !14076}
!14076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 32)
!14077 = !{!14078}
!14078 = !DILocalVariable(name: "list", arg: 1, scope: !14073, file: !319, line: 197, type: !14076)
!14079 = !DILocation(line: 0, scope: !14073)
!14080 = !DILocation(line: 199, column: 8, scope: !14073)
!14081 = !DILocation(line: 199, column: 13, scope: !14073)
!14082 = !DILocation(line: 200, column: 8, scope: !14073)
!14083 = !DILocation(line: 200, column: 13, scope: !14073)
!14084 = !DILocation(line: 201, column: 1, scope: !14073)
!14085 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2216, file: !2216, line: 641, type: !14086, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14092)
!14086 = !DISubroutineType(types: !14087)
!14087 = !{!2219, !2220, !13917, !185, !559, !106, !106, !106, !107, !152, !14088}
!14088 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !14089)
!14089 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !14090)
!14090 = !{!14091}
!14091 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14089, file: !565, line: 66, baseType: !564, size: 64)
!14092 = !{!14093, !14094, !14095, !14096, !14097, !14098, !14099, !14100, !14101, !14102}
!14093 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14085, file: !2216, line: 641, type: !2220)
!14094 = !DILocalVariable(name: "stack", arg: 2, scope: !14085, file: !2216, line: 642, type: !13917)
!14095 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14085, file: !2216, line: 643, type: !185)
!14096 = !DILocalVariable(name: "entry", arg: 4, scope: !14085, file: !2216, line: 643, type: !559)
!14097 = !DILocalVariable(name: "p1", arg: 5, scope: !14085, file: !2216, line: 644, type: !106)
!14098 = !DILocalVariable(name: "p2", arg: 6, scope: !14085, file: !2216, line: 644, type: !106)
!14099 = !DILocalVariable(name: "p3", arg: 7, scope: !14085, file: !2216, line: 644, type: !106)
!14100 = !DILocalVariable(name: "prio", arg: 8, scope: !14085, file: !2216, line: 645, type: !107)
!14101 = !DILocalVariable(name: "options", arg: 9, scope: !14085, file: !2216, line: 645, type: !152)
!14102 = !DILocalVariable(name: "delay", arg: 10, scope: !14085, file: !2216, line: 645, type: !14088)
!14103 = !DILocation(line: 0, scope: !14085)
!14104 = !DILocation(line: 1031, column: 3, scope: !13794, inlinedAt: !14105)
!14105 = distinct !DILocation(line: 48, column: 10, scope: !13798, inlinedAt: !14106)
!14106 = distinct !DILocation(line: 647, column: 2, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14108, file: !2216, line: 647, column: 2)
!14108 = distinct !DILexicalBlock(scope: !14085, file: !2216, line: 647, column: 2)
!14109 = !DILocation(line: 0, scope: !13794, inlinedAt: !14105)
!14110 = !DILocation(line: 48, column: 9, scope: !13798, inlinedAt: !14106)
!14111 = !DILocation(line: 647, column: 2, scope: !14108)
!14112 = !DILocation(line: 647, column: 2, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14107, file: !2216, line: 647, column: 2)
!14114 = !DILocation(line: 649, column: 2, scope: !14085)
!14115 = !DILocation(line: 652, column: 7, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14085, file: !2216, line: 652, column: 6)
!14117 = !DILocation(line: 652, column: 6, scope: !14085)
!14118 = !DILocation(line: 653, column: 3, scope: !14119)
!14119 = distinct !DILexicalBlock(scope: !14116, file: !2216, line: 652, column: 39)
!14120 = !DILocation(line: 654, column: 2, scope: !14119)
!14121 = !DILocation(line: 656, column: 2, scope: !14085)
!14122 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2216, file: !2216, line: 401, type: !14123, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14125)
!14123 = !DISubroutineType(types: !14124)
!14124 = !{null, !2220, !14088}
!14125 = !{!14126, !14127}
!14126 = !DILocalVariable(name: "thread", arg: 1, scope: !14122, file: !2216, line: 401, type: !2220)
!14127 = !DILocalVariable(name: "delay", arg: 2, scope: !14122, file: !2216, line: 401, type: !14088)
!14128 = !DILocation(line: 0, scope: !14122)
!14129 = !DILocation(line: 404, column: 6, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !14122, file: !2216, line: 404, column: 6)
!14131 = !DILocation(line: 404, column: 6, scope: !14122)
!14132 = !DILocation(line: 405, column: 3, scope: !14133)
!14133 = distinct !DILexicalBlock(scope: !14130, file: !2216, line: 404, column: 38)
!14134 = !DILocation(line: 406, column: 2, scope: !14133)
!14135 = !DILocation(line: 407, column: 3, scope: !14136)
!14136 = distinct !DILexicalBlock(scope: !14130, file: !2216, line: 406, column: 9)
!14137 = !DILocation(line: 413, column: 1, scope: !14122)
!14138 = distinct !DISubprogram(name: "k_thread_start", scope: !4410, file: !4410, line: 205, type: !14139, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14141)
!14139 = !DISubroutineType(types: !14140)
!14140 = !{null, !2219}
!14141 = !{!14142}
!14142 = !DILocalVariable(name: "thread", arg: 1, scope: !14138, file: !4410, line: 205, type: !2219)
!14143 = !DILocation(line: 0, scope: !14138)
!14144 = !DILocation(line: 214, column: 2, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14138, file: !4410, line: 214, column: 2)
!14146 = !{i64 2154776064}
!14147 = !DILocation(line: 215, column: 2, scope: !14138)
!14148 = !DILocation(line: 216, column: 1, scope: !14138)
!14149 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14046, file: !14046, line: 47, type: !14123, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14150)
!14150 = !{!14151, !14152}
!14151 = !DILocalVariable(name: "thread", arg: 1, scope: !14149, file: !14046, line: 47, type: !2220)
!14152 = !DILocalVariable(name: "ticks", arg: 2, scope: !14149, file: !14046, line: 47, type: !14088)
!14153 = !DILocation(line: 0, scope: !14149)
!14154 = !DILocation(line: 49, column: 30, scope: !14149)
!14155 = !DILocation(line: 49, column: 2, scope: !14149)
!14156 = !DILocation(line: 50, column: 1, scope: !14149)
!14157 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2216, file: !2216, line: 748, type: !3082, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14158)
!14158 = !{!14159, !14177}
!14159 = !DILocalVariable(name: "thread_data", scope: !14160, file: !2216, line: 750, type: !14161)
!14160 = distinct !DILexicalBlock(scope: !14157, file: !2216, line: 750, column: 2)
!14161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14162, size: 32)
!14162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !406, line: 620, size: 384, elements: !14163)
!14163 = !{!14164, !14165, !14166, !14167, !14168, !14169, !14170, !14171, !14172, !14173, !14174, !14176}
!14164 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14162, file: !406, line: 621, baseType: !2220, size: 32)
!14165 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14162, file: !406, line: 622, baseType: !13917, size: 32, offset: 32)
!14166 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14162, file: !406, line: 623, baseType: !32, size: 32, offset: 64)
!14167 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14162, file: !406, line: 624, baseType: !559, size: 32, offset: 96)
!14168 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14162, file: !406, line: 625, baseType: !106, size: 32, offset: 128)
!14169 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14162, file: !406, line: 626, baseType: !106, size: 32, offset: 160)
!14170 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14162, file: !406, line: 627, baseType: !106, size: 32, offset: 192)
!14171 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14162, file: !406, line: 628, baseType: !107, size: 32, offset: 224)
!14172 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14162, file: !406, line: 629, baseType: !152, size: 32, offset: 256)
!14173 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14162, file: !406, line: 630, baseType: !895, size: 32, offset: 288)
!14174 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14162, file: !406, line: 631, baseType: !14175, size: 32, offset: 320)
!14175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 32)
!14176 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14162, file: !406, line: 632, baseType: !118, size: 32, offset: 352)
!14177 = !DILocalVariable(name: "thread_data", scope: !14178, file: !2216, line: 781, type: !14161)
!14178 = distinct !DILexicalBlock(scope: !14157, file: !2216, line: 781, column: 2)
!14179 = !DILocation(line: 0, scope: !14160)
!14180 = !DILocation(line: 750, column: 2, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14182, file: !2216, line: 750, column: 2)
!14182 = distinct !DILexicalBlock(scope: !14183, file: !2216, line: 750, column: 2)
!14183 = distinct !DILexicalBlock(scope: !14160, file: !2216, line: 750, column: 2)
!14184 = !DILocation(line: 750, column: 2, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14186, file: !2216, line: 750, column: 2)
!14186 = distinct !DILexicalBlock(scope: !14181, file: !2216, line: 750, column: 2)
!14187 = !DILocation(line: 750, column: 2, scope: !14182)
!14188 = !DILocation(line: 750, column: 2, scope: !14160)
!14189 = !DILocation(line: 780, column: 2, scope: !14157)
!14190 = !DILocation(line: 0, scope: !14178)
!14191 = !DILocation(line: 781, column: 2, scope: !14192)
!14192 = distinct !DILexicalBlock(scope: !14193, file: !2216, line: 781, column: 2)
!14193 = distinct !DILexicalBlock(scope: !14194, file: !2216, line: 781, column: 2)
!14194 = distinct !DILexicalBlock(scope: !14178, file: !2216, line: 781, column: 2)
!14195 = !DILocation(line: 752, column: 17, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14183, file: !2216, line: 750, column: 38)
!14197 = !DILocation(line: 753, column: 17, scope: !14196)
!14198 = !DILocation(line: 754, column: 17, scope: !14196)
!14199 = !DILocation(line: 755, column: 17, scope: !14196)
!14200 = !DILocation(line: 756, column: 17, scope: !14196)
!14201 = !DILocation(line: 757, column: 17, scope: !14196)
!14202 = !DILocation(line: 758, column: 17, scope: !14196)
!14203 = !DILocation(line: 759, column: 17, scope: !14196)
!14204 = !DILocation(line: 760, column: 17, scope: !14196)
!14205 = !DILocation(line: 761, column: 17, scope: !14196)
!14206 = !DILocation(line: 751, column: 3, scope: !14196)
!14207 = !DILocation(line: 763, column: 16, scope: !14196)
!14208 = !DILocation(line: 763, column: 29, scope: !14196)
!14209 = !DILocation(line: 763, column: 39, scope: !14196)
!14210 = !DILocation(line: 750, column: 2, scope: !14183)
!14211 = !DILocation(line: 750, column: 2, scope: !14186)
!14212 = distinct !{!14212, !14188, !14213}
!14213 = !DILocation(line: 764, column: 2, scope: !14160)
!14214 = !DILocation(line: 781, column: 2, scope: !14215)
!14215 = distinct !DILexicalBlock(scope: !14216, file: !2216, line: 781, column: 2)
!14216 = distinct !DILexicalBlock(scope: !14192, file: !2216, line: 781, column: 2)
!14217 = !DILocation(line: 781, column: 2, scope: !14193)
!14218 = !DILocation(line: 781, column: 2, scope: !14178)
!14219 = !DILocation(line: 787, column: 2, scope: !14157)
!14220 = !DILocation(line: 788, column: 1, scope: !14157)
!14221 = !DILocation(line: 782, column: 20, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14223, file: !2216, line: 782, column: 7)
!14223 = distinct !DILexicalBlock(scope: !14194, file: !2216, line: 781, column: 38)
!14224 = !DILocation(line: 782, column: 31, scope: !14222)
!14225 = !DILocation(line: 782, column: 7, scope: !14223)
!14226 = !DILocation(line: 783, column: 37, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14222, file: !2216, line: 782, column: 51)
!14228 = !DILocation(line: 784, column: 10, scope: !14227)
!14229 = !DILocation(line: 783, column: 4, scope: !14227)
!14230 = !DILocation(line: 785, column: 3, scope: !14227)
!14231 = !DILocation(line: 781, column: 2, scope: !14194)
!14232 = !DILocation(line: 781, column: 2, scope: !14216)
!14233 = distinct !{!14233, !14218, !14234}
!14234 = !DILocation(line: 786, column: 2, scope: !14178)
!14235 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !8722, file: !8722, line: 403, type: !14236, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14238)
!14236 = !DISubroutineType(types: !14237)
!14237 = !{!566, !566}
!14238 = !{!14239}
!14239 = !DILocalVariable(name: "t", arg: 1, scope: !14235, file: !8722, line: 403, type: !566)
!14240 = !DILocation(line: 0, scope: !14235)
!14241 = !DILocalVariable(name: "t", arg: 1, scope: !14242, file: !8722, line: 102, type: !566)
!14242 = distinct !DISubprogram(name: "z_tmcvt", scope: !8722, file: !8722, line: 102, type: !8729, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14243)
!14243 = !{!14241, !14244, !14245, !14246, !14247, !14248, !14249, !14250, !14251, !14252, !14253}
!14244 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14242, file: !8722, line: 102, type: !152)
!14245 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14242, file: !8722, line: 103, type: !152)
!14246 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14242, file: !8722, line: 103, type: !145)
!14247 = !DILocalVariable(name: "result32", arg: 5, scope: !14242, file: !8722, line: 104, type: !145)
!14248 = !DILocalVariable(name: "round_up", arg: 6, scope: !14242, file: !8722, line: 104, type: !145)
!14249 = !DILocalVariable(name: "round_off", arg: 7, scope: !14242, file: !8722, line: 105, type: !145)
!14250 = !DILocalVariable(name: "mul_ratio", scope: !14242, file: !8722, line: 107, type: !145)
!14251 = !DILocalVariable(name: "div_ratio", scope: !14242, file: !8722, line: 109, type: !145)
!14252 = !DILocalVariable(name: "off", scope: !14242, file: !8722, line: 116, type: !566)
!14253 = !DILocalVariable(name: "rdivisor", scope: !14254, file: !8722, line: 119, type: !152)
!14254 = distinct !DILexicalBlock(scope: !14255, file: !8722, line: 118, column: 18)
!14255 = distinct !DILexicalBlock(scope: !14242, file: !8722, line: 118, column: 6)
!14256 = !DILocation(line: 0, scope: !14242, inlinedAt: !14257)
!14257 = distinct !DILocation(line: 406, column: 9, scope: !14235)
!14258 = !DILocation(line: 145, column: 13, scope: !14259, inlinedAt: !14257)
!14259 = distinct !DILexicalBlock(scope: !14260, file: !8722, line: 144, column: 10)
!14260 = distinct !DILexicalBlock(scope: !14261, file: !8722, line: 142, column: 7)
!14261 = distinct !DILexicalBlock(scope: !14262, file: !8722, line: 141, column: 24)
!14262 = distinct !DILexicalBlock(scope: !14263, file: !8722, line: 141, column: 13)
!14263 = distinct !DILexicalBlock(scope: !14242, file: !8722, line: 134, column: 6)
!14264 = !DILocation(line: 406, column: 2, scope: !14235)
!14265 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2216, file: !2216, line: 817, type: !4288, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14266)
!14266 = !{!14267, !14268, !14269, !14270}
!14267 = !DILocalVariable(name: "entry", arg: 1, scope: !14265, file: !2216, line: 817, type: !559)
!14268 = !DILocalVariable(name: "p1", arg: 2, scope: !14265, file: !2216, line: 818, type: !106)
!14269 = !DILocalVariable(name: "p2", arg: 3, scope: !14265, file: !2216, line: 818, type: !106)
!14270 = !DILocalVariable(name: "p3", arg: 4, scope: !14265, file: !2216, line: 818, type: !106)
!14271 = !DILocation(line: 0, scope: !14265)
!14272 = !DILocation(line: 822, column: 2, scope: !14265)
!14273 = !DILocation(line: 822, column: 17, scope: !14265)
!14274 = !DILocation(line: 822, column: 30, scope: !14265)
!14275 = !DILocation(line: 823, column: 2, scope: !14265)
!14276 = !DILocation(line: 845, column: 2, scope: !14265)
!14277 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2216, file: !2216, line: 853, type: !14278, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14281)
!14278 = !DISubroutineType(types: !14279)
!14279 = !{!145, !14280}
!14280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 32)
!14281 = !{!14282, !14283}
!14282 = !DILocalVariable(name: "l", arg: 1, scope: !14277, file: !2216, line: 853, type: !14280)
!14283 = !DILocalVariable(name: "thread_cpu", scope: !14277, file: !2216, line: 855, type: !22)
!14284 = !DILocation(line: 0, scope: !14277)
!14285 = !DILocation(line: 855, column: 28, scope: !14277)
!14286 = !DILocation(line: 857, column: 17, scope: !14287)
!14287 = distinct !DILexicalBlock(scope: !14277, file: !2216, line: 857, column: 6)
!14288 = !DILocation(line: 857, column: 6, scope: !14277)
!14289 = !DILocation(line: 858, column: 19, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14291, file: !2216, line: 858, column: 7)
!14291 = distinct !DILexicalBlock(scope: !14287, file: !2216, line: 857, column: 24)
!14292 = !DILocation(line: 858, column: 42, scope: !14290)
!14293 = !DILocation(line: 858, column: 28, scope: !14290)
!14294 = !DILocation(line: 858, column: 25, scope: !14290)
!14295 = !DILocation(line: 858, column: 7, scope: !14291)
!14296 = !DILocation(line: 862, column: 2, scope: !14277)
!14297 = !DILocation(line: 863, column: 1, scope: !14277)
!14298 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2216, file: !2216, line: 865, type: !14278, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14299)
!14299 = !{!14300}
!14300 = !DILocalVariable(name: "l", arg: 1, scope: !14298, file: !2216, line: 865, type: !14280)
!14301 = !DILocation(line: 0, scope: !14298)
!14302 = !DILocation(line: 867, column: 9, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14298, file: !2216, line: 867, column: 6)
!14304 = !DILocation(line: 867, column: 38, scope: !14303)
!14305 = !DILocation(line: 867, column: 24, scope: !14303)
!14306 = !DILocation(line: 867, column: 54, scope: !14303)
!14307 = !DILocation(line: 867, column: 43, scope: !14303)
!14308 = !DILocation(line: 867, column: 41, scope: !14303)
!14309 = !DILocation(line: 867, column: 20, scope: !14303)
!14310 = !DILocation(line: 867, column: 6, scope: !14298)
!14311 = !DILocation(line: 870, column: 16, scope: !14298)
!14312 = !DILocation(line: 871, column: 2, scope: !14298)
!14313 = !DILocation(line: 872, column: 1, scope: !14298)
!14314 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2216, file: !2216, line: 874, type: !14315, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14317)
!14315 = !DISubroutineType(types: !14316)
!14316 = !{null, !14280}
!14317 = !{!14318}
!14318 = !DILocalVariable(name: "l", arg: 1, scope: !14314, file: !2216, line: 874, type: !14280)
!14319 = !DILocation(line: 0, scope: !14314)
!14320 = !DILocation(line: 876, column: 32, scope: !14314)
!14321 = !DILocation(line: 876, column: 18, scope: !14314)
!14322 = !DILocation(line: 876, column: 48, scope: !14314)
!14323 = !DILocation(line: 876, column: 37, scope: !14314)
!14324 = !DILocation(line: 876, column: 35, scope: !14314)
!14325 = !DILocation(line: 876, column: 5, scope: !14314)
!14326 = !DILocation(line: 876, column: 16, scope: !14314)
!14327 = !DILocation(line: 877, column: 1, scope: !14314)
!14328 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2216, file: !2216, line: 888, type: !14329, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14331)
!14329 = !DISubroutineType(types: !14330)
!14330 = !{!107, !2220}
!14331 = !{!14332}
!14332 = !DILocalVariable(name: "thread", arg: 1, scope: !14328, file: !2216, line: 888, type: !2220)
!14333 = !DILocation(line: 0, scope: !14328)
!14334 = !DILocation(line: 893, column: 2, scope: !14328)
!14335 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2216, file: !2216, line: 897, type: !14336, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14338)
!14336 = !DISubroutineType(types: !14337)
!14337 = !{!107, !2220, !32}
!14338 = !{!14339, !14340}
!14339 = !DILocalVariable(name: "thread", arg: 1, scope: !14335, file: !2216, line: 897, type: !2220)
!14340 = !DILocalVariable(name: "options", arg: 2, scope: !14335, file: !2216, line: 897, type: !32)
!14341 = !DILocation(line: 0, scope: !14335)
!14342 = !DILocation(line: 902, column: 2, scope: !14335)
!14343 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2216, file: !2216, line: 1072, type: !14344, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14349)
!14344 = !DISubroutineType(types: !14345)
!14345 = !{!107, !2219, !14346}
!14346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14347, size: 32)
!14347 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !309, line: 234, baseType: !14348)
!14348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !309, line: 192, elements: !2156)
!14349 = !{!14350, !14351}
!14350 = !DILocalVariable(name: "thread", arg: 1, scope: !14343, file: !2216, line: 1072, type: !2219)
!14351 = !DILocalVariable(name: "stats", arg: 2, scope: !14343, file: !2216, line: 1073, type: !14346)
!14352 = !DILocation(line: 0, scope: !14343)
!14353 = !DILocation(line: 1075, column: 14, scope: !14354)
!14354 = distinct !DILexicalBlock(scope: !14343, file: !2216, line: 1075, column: 6)
!14355 = !DILocation(line: 1075, column: 23, scope: !14354)
!14356 = !DILocation(line: 1086, column: 1, scope: !14343)
!14357 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2216, file: !2216, line: 1088, type: !14358, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14360)
!14358 = !DISubroutineType(types: !14359)
!14359 = !{!107, !14346}
!14360 = !{!14361}
!14361 = !DILocalVariable(name: "stats", arg: 1, scope: !14357, file: !2216, line: 1088, type: !14346)
!14362 = !DILocation(line: 0, scope: !14357)
!14363 = !DILocation(line: 1094, column: 12, scope: !14364)
!14364 = distinct !DILexicalBlock(scope: !14357, file: !2216, line: 1094, column: 6)
!14365 = !DILocation(line: 1120, column: 1, scope: !14357)
!14366 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14367, file: !14367, line: 20, type: !3082, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !2156)
!14367 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14368 = !DILocation(line: 30, column: 2, scope: !14366)
!14369 = !DILocation(line: 31, column: 1, scope: !14366)
!14370 = distinct !DISubprogram(name: "idle", scope: !14367, file: !14367, line: 33, type: !562, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !14371)
!14371 = !{!14372, !14373, !14374}
!14372 = !DILocalVariable(name: "unused1", arg: 1, scope: !14370, file: !14367, line: 33, type: !106)
!14373 = !DILocalVariable(name: "unused2", arg: 2, scope: !14370, file: !14367, line: 33, type: !106)
!14374 = !DILocalVariable(name: "unused3", arg: 3, scope: !14370, file: !14367, line: 33, type: !106)
!14375 = !DILocation(line: 0, scope: !14370)
!14376 = !DILocation(line: 39, column: 2, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14378, file: !14367, line: 39, column: 2)
!14378 = distinct !DILexicalBlock(scope: !14370, file: !14367, line: 39, column: 2)
!14379 = !DILocation(line: 39, column: 2, scope: !14378)
!14380 = !DILocation(line: 39, column: 2, scope: !14381)
!14381 = distinct !DILexicalBlock(scope: !14377, file: !14367, line: 39, column: 2)
!14382 = !DILocation(line: 55, column: 2, scope: !14383, inlinedAt: !14387)
!14383 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5935, file: !5935, line: 42, type: !5936, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !14384)
!14384 = !{!14385, !14386}
!14385 = !DILocalVariable(name: "key", scope: !14383, file: !5935, line: 44, type: !32)
!14386 = !DILocalVariable(name: "tmp", scope: !14383, file: !5935, line: 53, type: !32)
!14387 = distinct !DILocation(line: 62, column: 10, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14370, file: !14367, line: 41, column: 15)
!14389 = !{i64 2243810}
!14390 = !DILocation(line: 0, scope: !14383, inlinedAt: !14387)
!14391 = !DILocation(line: 86, column: 3, scope: !14388)
!14392 = !DILocation(line: 41, column: 2, scope: !14370)
!14393 = distinct !{!14393, !14392, !14394}
!14394 = !DILocation(line: 105, column: 2, scope: !14370)
!14395 = distinct !DISubprogram(name: "k_cpu_idle", scope: !406, file: !406, line: 5627, type: !3082, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !2156)
!14396 = !DILocation(line: 5629, column: 2, scope: !14395)
!14397 = !DILocation(line: 5630, column: 1, scope: !14395)
!14398 = !DISubprogram(name: "arch_cpu_idle", scope: !560, file: !560, line: 167, type: !3082, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!14399 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2454, file: !2454, line: 93, type: !14400, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14402)
!14400 = !DISubroutineType(types: !14401)
!14401 = !{!895, !2346, !2346}
!14402 = !{!14403, !14404, !14405, !14406}
!14403 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14399, file: !2454, line: 93, type: !2346)
!14404 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14399, file: !2454, line: 94, type: !2346)
!14405 = !DILocalVariable(name: "b1", scope: !14399, file: !2454, line: 97, type: !895)
!14406 = !DILocalVariable(name: "b2", scope: !14399, file: !2454, line: 98, type: !895)
!14407 = !DILocation(line: 0, scope: !14399)
!14408 = !DILocation(line: 97, column: 30, scope: !14399)
!14409 = !DILocation(line: 98, column: 30, scope: !14399)
!14410 = !DILocation(line: 100, column: 9, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14399, file: !2454, line: 100, column: 6)
!14412 = !DILocation(line: 100, column: 6, scope: !14399)
!14413 = !DILocation(line: 125, column: 1, scope: !14399)
!14414 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2454, file: !2454, line: 428, type: !14415, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14417)
!14415 = !DISubroutineType(types: !14416)
!14416 = !{null, !2346}
!14417 = !{!14418}
!14418 = !DILocalVariable(name: "curr", arg: 1, scope: !14414, file: !2454, line: 428, type: !2346)
!14419 = !DILocation(line: 0, scope: !14414)
!14420 = !DILocation(line: 434, column: 6, scope: !14421)
!14421 = distinct !DILexicalBlock(scope: !14414, file: !2454, line: 434, column: 6)
!14422 = !DILocation(line: 434, column: 23, scope: !14421)
!14423 = !DILocation(line: 434, column: 6, scope: !14414)
!14424 = !DILocation(line: 435, column: 50, scope: !14425)
!14425 = distinct !DILexicalBlock(scope: !14421, file: !2454, line: 434, column: 29)
!14426 = !DILocation(line: 435, column: 48, scope: !14425)
!14427 = !DILocation(line: 435, column: 29, scope: !14425)
!14428 = !DILocation(line: 436, column: 24, scope: !14425)
!14429 = !DILocation(line: 436, column: 3, scope: !14425)
!14430 = !DILocation(line: 437, column: 2, scope: !14425)
!14431 = !DILocation(line: 438, column: 1, scope: !14414)
!14432 = distinct !DISubprogram(name: "slice_time", scope: !2454, file: !2454, line: 407, type: !14433, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14435)
!14433 = !DISubroutineType(types: !14434)
!14434 = !{!107, !2346}
!14435 = !{!14436, !14437}
!14436 = !DILocalVariable(name: "curr", arg: 1, scope: !14432, file: !2454, line: 407, type: !2346)
!14437 = !DILocalVariable(name: "ret", scope: !14432, file: !2454, line: 409, type: !107)
!14438 = !DILocation(line: 0, scope: !14432)
!14439 = !DILocation(line: 409, column: 12, scope: !14432)
!14440 = !DILocation(line: 416, column: 2, scope: !14432)
!14441 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2454, file: !2454, line: 440, type: !14442, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14444)
!14442 = !DISubroutineType(types: !14443)
!14443 = !{null, !895, !107}
!14444 = !{!14445, !14446, !14447, !14453}
!14445 = !DILocalVariable(name: "slice", arg: 1, scope: !14441, file: !2454, line: 440, type: !895)
!14446 = !DILocalVariable(name: "prio", arg: 2, scope: !14441, file: !2454, line: 440, type: !107)
!14447 = !DILocalVariable(name: "__i", scope: !14448, file: !2454, line: 442, type: !14449)
!14448 = distinct !DILexicalBlock(scope: !14441, file: !2454, line: 442, column: 2)
!14449 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !14450)
!14450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !14451)
!14451 = !{!14452}
!14452 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14450, file: !420, line: 33, baseType: !107, size: 32)
!14453 = !DILocalVariable(name: "__key", scope: !14448, file: !2454, line: 442, type: !14449)
!14454 = !DILocation(line: 0, scope: !14441)
!14455 = !DILocation(line: 0, scope: !14448)
!14456 = !DILocalVariable(name: "l", arg: 1, scope: !14457, file: !420, line: 136, type: !14460)
!14457 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !14458, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14461)
!14458 = !DISubroutineType(types: !14459)
!14459 = !{!14449, !14460}
!14460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 32)
!14461 = !{!14456, !14462}
!14462 = !DILocalVariable(name: "k", scope: !14457, file: !420, line: 139, type: !14449)
!14463 = !DILocation(line: 0, scope: !14457, inlinedAt: !14464)
!14464 = distinct !DILocation(line: 442, column: 2, scope: !14448)
!14465 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !14470)
!14466 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5935, file: !5935, line: 42, type: !5936, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14467)
!14467 = !{!14468, !14469}
!14468 = !DILocalVariable(name: "key", scope: !14466, file: !5935, line: 44, type: !32)
!14469 = !DILocalVariable(name: "tmp", scope: !14466, file: !5935, line: 53, type: !32)
!14470 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !14464)
!14471 = !{i64 2287781}
!14472 = !DILocation(line: 0, scope: !14466, inlinedAt: !14470)
!14473 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !14464)
!14474 = distinct !DILexicalBlock(scope: !14475, file: !420, line: 148, column: 2)
!14475 = distinct !DILexicalBlock(scope: !14457, file: !420, line: 148, column: 2)
!14476 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !14464)
!14477 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !14464)
!14478 = distinct !DILexicalBlock(scope: !14474, file: !420, line: 148, column: 2)
!14479 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !14464)
!14480 = !DILocation(line: 443, column: 29, scope: !14481)
!14481 = distinct !DILexicalBlock(scope: !14482, file: !2454, line: 442, column: 26)
!14482 = distinct !DILexicalBlock(scope: !14448, file: !2454, line: 442, column: 2)
!14483 = !DILocation(line: 444, column: 17, scope: !14481)
!14484 = !DILocation(line: 445, column: 51, scope: !14485)
!14485 = distinct !DILexicalBlock(scope: !14481, file: !2454, line: 445, column: 7)
!14486 = !DILocation(line: 445, column: 7, scope: !14481)
!14487 = !DILocation(line: 0, scope: !14481)
!14488 = !DILocation(line: 451, column: 18, scope: !14481)
!14489 = !DILocation(line: 452, column: 3, scope: !14481)
!14490 = !DILocalVariable(name: "key", arg: 2, scope: !14491, file: !420, line: 190, type: !14449)
!14491 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !14492, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14494)
!14492 = !DISubroutineType(types: !14493)
!14493 = !{null, !14460, !14449}
!14494 = !{!14495, !14490}
!14495 = !DILocalVariable(name: "l", arg: 1, scope: !14491, file: !420, line: 189, type: !14460)
!14496 = !DILocation(line: 0, scope: !14491, inlinedAt: !14497)
!14497 = distinct !DILocation(line: 442, column: 2, scope: !14482)
!14498 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !14497)
!14499 = distinct !DILexicalBlock(scope: !14500, file: !420, line: 194, column: 2)
!14500 = distinct !DILexicalBlock(scope: !14491, file: !420, line: 194, column: 2)
!14501 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !14497)
!14502 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !14497)
!14503 = distinct !DILexicalBlock(scope: !14499, file: !420, line: 194, column: 2)
!14504 = !DILocalVariable(name: "key", arg: 1, scope: !14505, file: !5935, line: 84, type: !32)
!14505 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5935, file: !5935, line: 84, type: !5946, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14506)
!14506 = !{!14504}
!14507 = !DILocation(line: 0, scope: !14505, inlinedAt: !14508)
!14508 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !14497)
!14509 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !14508)
!14510 = !{i64 2288598}
!14511 = !DILocation(line: 454, column: 1, scope: !14441)
!14512 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !8722, file: !8722, line: 389, type: !7541, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14513)
!14513 = !{!14514}
!14514 = !DILocalVariable(name: "t", arg: 1, scope: !14512, file: !8722, line: 389, type: !152)
!14515 = !DILocation(line: 0, scope: !14512)
!14516 = !DILocalVariable(name: "t", arg: 1, scope: !14517, file: !8722, line: 102, type: !566)
!14517 = distinct !DISubprogram(name: "z_tmcvt", scope: !8722, file: !8722, line: 102, type: !8729, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14518)
!14518 = !{!14516, !14519, !14520, !14521, !14522, !14523, !14524, !14525, !14526, !14527, !14528}
!14519 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14517, file: !8722, line: 102, type: !152)
!14520 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14517, file: !8722, line: 103, type: !152)
!14521 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14517, file: !8722, line: 103, type: !145)
!14522 = !DILocalVariable(name: "result32", arg: 5, scope: !14517, file: !8722, line: 104, type: !145)
!14523 = !DILocalVariable(name: "round_up", arg: 6, scope: !14517, file: !8722, line: 104, type: !145)
!14524 = !DILocalVariable(name: "round_off", arg: 7, scope: !14517, file: !8722, line: 105, type: !145)
!14525 = !DILocalVariable(name: "mul_ratio", scope: !14517, file: !8722, line: 107, type: !145)
!14526 = !DILocalVariable(name: "div_ratio", scope: !14517, file: !8722, line: 109, type: !145)
!14527 = !DILocalVariable(name: "off", scope: !14517, file: !8722, line: 116, type: !566)
!14528 = !DILocalVariable(name: "rdivisor", scope: !14529, file: !8722, line: 119, type: !152)
!14529 = distinct !DILexicalBlock(scope: !14530, file: !8722, line: 118, column: 18)
!14530 = distinct !DILexicalBlock(scope: !14517, file: !8722, line: 118, column: 6)
!14531 = !DILocation(line: 0, scope: !14517, inlinedAt: !14532)
!14532 = distinct !DILocation(line: 392, column: 9, scope: !14512)
!14533 = !DILocation(line: 143, column: 25, scope: !14534, inlinedAt: !14532)
!14534 = distinct !DILexicalBlock(scope: !14535, file: !8722, line: 142, column: 17)
!14535 = distinct !DILexicalBlock(scope: !14536, file: !8722, line: 142, column: 7)
!14536 = distinct !DILexicalBlock(scope: !14537, file: !8722, line: 141, column: 24)
!14537 = distinct !DILexicalBlock(scope: !14538, file: !8722, line: 141, column: 13)
!14538 = distinct !DILexicalBlock(scope: !14517, file: !8722, line: 134, column: 6)
!14539 = !DILocation(line: 392, column: 2, scope: !14512)
!14540 = distinct !DISubprogram(name: "z_time_slice", scope: !2454, file: !2454, line: 502, type: !9168, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14541)
!14541 = !{!14542, !14543}
!14542 = !DILocalVariable(name: "ticks", arg: 1, scope: !14540, file: !2454, line: 502, type: !107)
!14543 = !DILocalVariable(name: "key", scope: !14540, file: !2454, line: 511, type: !14449)
!14544 = !DILocation(line: 0, scope: !14540)
!14545 = !DILocation(line: 0, scope: !14457, inlinedAt: !14546)
!14546 = distinct !DILocation(line: 511, column: 25, scope: !14540)
!14547 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !14548)
!14548 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !14546)
!14549 = !DILocation(line: 0, scope: !14466, inlinedAt: !14548)
!14550 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !14546)
!14551 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !14546)
!14552 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !14546)
!14553 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !14546)
!14554 = !DILocation(line: 514, column: 6, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14540, file: !2454, line: 514, column: 6)
!14556 = !DILocation(line: 514, column: 25, scope: !14555)
!14557 = !DILocation(line: 514, column: 22, scope: !14555)
!14558 = !DILocation(line: 514, column: 6, scope: !14540)
!14559 = !DILocation(line: 515, column: 3, scope: !14560)
!14560 = distinct !DILexicalBlock(scope: !14555, file: !2454, line: 514, column: 35)
!14561 = !DILocation(line: 0, scope: !14491, inlinedAt: !14562)
!14562 = distinct !DILocation(line: 516, column: 3, scope: !14560)
!14563 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !14562)
!14564 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !14562)
!14565 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !14562)
!14566 = !DILocation(line: 0, scope: !14505, inlinedAt: !14567)
!14567 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !14562)
!14568 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !14567)
!14569 = !DILocation(line: 517, column: 3, scope: !14560)
!14570 = !DILocation(line: 519, column: 18, scope: !14540)
!14571 = !DILocation(line: 522, column: 6, scope: !14572)
!14572 = distinct !DILexicalBlock(scope: !14540, file: !2454, line: 522, column: 6)
!14573 = !DILocation(line: 522, column: 27, scope: !14572)
!14574 = !DILocation(line: 522, column: 30, scope: !14572)
!14575 = !DILocation(line: 522, column: 6, scope: !14540)
!14576 = !DILocation(line: 523, column: 30, scope: !14577)
!14577 = distinct !DILexicalBlock(scope: !14578, file: !2454, line: 523, column: 7)
!14578 = distinct !DILexicalBlock(scope: !14572, file: !2454, line: 522, column: 51)
!14579 = !DILocation(line: 523, column: 13, scope: !14577)
!14580 = !DILocation(line: 523, column: 7, scope: !14578)
!14581 = !DILocation(line: 530, column: 10, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14577, file: !2454, line: 523, column: 43)
!14583 = !DILocation(line: 531, column: 3, scope: !14582)
!14584 = !DILocation(line: 532, column: 30, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14577, file: !2454, line: 531, column: 10)
!14586 = !DILocation(line: 535, column: 29, scope: !14587)
!14587 = distinct !DILexicalBlock(scope: !14572, file: !2454, line: 534, column: 9)
!14588 = !DILocation(line: 0, scope: !14491, inlinedAt: !14589)
!14589 = distinct !DILocation(line: 537, column: 2, scope: !14540)
!14590 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !14589)
!14591 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !14589)
!14592 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !14589)
!14593 = !DILocation(line: 0, scope: !14505, inlinedAt: !14594)
!14594 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !14589)
!14595 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !14594)
!14596 = !DILocation(line: 538, column: 1, scope: !14540)
!14597 = distinct !DISubprogram(name: "sliceable", scope: !2454, file: !2454, line: 468, type: !14598, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14600)
!14598 = !DISubroutineType(types: !14599)
!14599 = !{!145, !2346}
!14600 = !{!14601, !14602}
!14601 = !DILocalVariable(name: "thread", arg: 1, scope: !14597, file: !2454, line: 468, type: !2346)
!14602 = !DILocalVariable(name: "ret", scope: !14597, file: !2454, line: 470, type: !145)
!14603 = !DILocation(line: 0, scope: !14597)
!14604 = !DILocation(line: 470, column: 13, scope: !14597)
!14605 = !DILocation(line: 471, column: 3, scope: !14597)
!14606 = !DILocation(line: 471, column: 7, scope: !14597)
!14607 = !DILocation(line: 472, column: 3, scope: !14597)
!14608 = !DILocation(line: 472, column: 37, scope: !14597)
!14609 = !DILocation(line: 472, column: 24, scope: !14597)
!14610 = !DILocation(line: 472, column: 43, scope: !14597)
!14611 = !DILocation(line: 472, column: 7, scope: !14597)
!14612 = !DILocation(line: 473, column: 3, scope: !14597)
!14613 = !DILocation(line: 473, column: 7, scope: !14597)
!14614 = !DILocation(line: 473, column: 6, scope: !14597)
!14615 = !DILocation(line: 479, column: 2, scope: !14597)
!14616 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2454, file: !2454, line: 482, type: !14617, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14619)
!14617 = !DISubroutineType(types: !14618)
!14618 = !{!14449, !14449}
!14619 = !{!14620, !14621}
!14620 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14616, file: !2454, line: 482, type: !14449)
!14621 = !DILocalVariable(name: "curr", scope: !14616, file: !2454, line: 484, type: !2346)
!14622 = !DILocation(line: 0, scope: !14616)
!14623 = !DILocation(line: 484, column: 26, scope: !14616)
!14624 = !DILocation(line: 493, column: 7, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14616, file: !2454, line: 493, column: 6)
!14626 = !DILocation(line: 493, column: 6, scope: !14616)
!14627 = !DILocation(line: 494, column: 3, scope: !14628)
!14628 = distinct !DILexicalBlock(scope: !14625, file: !2454, line: 493, column: 49)
!14629 = !DILocation(line: 495, column: 2, scope: !14628)
!14630 = !DILocation(line: 496, column: 2, scope: !14616)
!14631 = !DILocation(line: 499, column: 1, scope: !14616)
!14632 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13617, file: !13617, line: 106, type: !14598, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14633)
!14633 = !{!14634, !14635}
!14634 = !DILocalVariable(name: "thread", arg: 1, scope: !14632, file: !13617, line: 106, type: !2346)
!14635 = !DILocalVariable(name: "state", scope: !14632, file: !13617, line: 108, type: !195)
!14636 = !DILocation(line: 0, scope: !14632)
!14637 = !DILocation(line: 108, column: 31, scope: !14632)
!14638 = !DILocation(line: 110, column: 16, scope: !14632)
!14639 = !DILocation(line: 111, column: 41, scope: !14632)
!14640 = !DILocation(line: 110, column: 2, scope: !14632)
!14641 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2454, file: !2454, line: 393, type: !14415, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14642)
!14642 = !{!14643}
!14643 = !DILocalVariable(name: "thread", arg: 1, scope: !14641, file: !2454, line: 393, type: !2346)
!14644 = !DILocation(line: 0, scope: !14641)
!14645 = !DILocation(line: 395, column: 6, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14641, file: !2454, line: 395, column: 6)
!14647 = !DILocation(line: 395, column: 6, scope: !14641)
!14648 = !DILocalVariable(name: "thread", arg: 1, scope: !14649, file: !2454, line: 264, type: !2346)
!14649 = distinct !DISubprogram(name: "dequeue_thread", scope: !2454, file: !2454, line: 264, type: !14415, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14650)
!14650 = !{!14648}
!14651 = !DILocation(line: 0, scope: !14649, inlinedAt: !14652)
!14652 = distinct !DILocation(line: 396, column: 3, scope: !14653)
!14653 = distinct !DILexicalBlock(scope: !14646, file: !2454, line: 395, column: 34)
!14654 = !DILocation(line: 266, column: 15, scope: !14649, inlinedAt: !14652)
!14655 = !DILocation(line: 266, column: 28, scope: !14649, inlinedAt: !14652)
!14656 = !DILocalVariable(name: "thread", arg: 1, scope: !14657, file: !2454, line: 232, type: !2346)
!14657 = distinct !DISubprogram(name: "runq_remove", scope: !2454, file: !2454, line: 232, type: !14415, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14658)
!14658 = !{!14656}
!14659 = !DILocation(line: 0, scope: !14657, inlinedAt: !14660)
!14660 = distinct !DILocation(line: 268, column: 3, scope: !14661, inlinedAt: !14652)
!14661 = distinct !DILexicalBlock(scope: !14662, file: !2454, line: 267, column: 35)
!14662 = distinct !DILexicalBlock(scope: !14649, file: !2454, line: 267, column: 6)
!14663 = !DILocation(line: 234, column: 2, scope: !14657, inlinedAt: !14660)
!14664 = !DILocation(line: 397, column: 2, scope: !14653)
!14665 = !DILocalVariable(name: "thread", arg: 1, scope: !14666, file: !2454, line: 250, type: !2346)
!14666 = distinct !DISubprogram(name: "queue_thread", scope: !2454, file: !2454, line: 250, type: !14415, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14667)
!14667 = !{!14665}
!14668 = !DILocation(line: 0, scope: !14666, inlinedAt: !14669)
!14669 = distinct !DILocation(line: 398, column: 2, scope: !14641)
!14670 = !DILocation(line: 252, column: 15, scope: !14666, inlinedAt: !14669)
!14671 = !DILocation(line: 252, column: 28, scope: !14666, inlinedAt: !14669)
!14672 = !DILocalVariable(name: "thread", arg: 1, scope: !14673, file: !2454, line: 227, type: !2346)
!14673 = distinct !DISubprogram(name: "runq_add", scope: !2454, file: !2454, line: 227, type: !14415, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14674)
!14674 = !{!14672}
!14675 = !DILocation(line: 0, scope: !14673, inlinedAt: !14676)
!14676 = distinct !DILocation(line: 254, column: 3, scope: !14677, inlinedAt: !14669)
!14677 = distinct !DILexicalBlock(scope: !14678, file: !2454, line: 253, column: 35)
!14678 = distinct !DILexicalBlock(scope: !14666, file: !2454, line: 253, column: 6)
!14679 = !DILocalVariable(name: "pq", arg: 1, scope: !14680, file: !2454, line: 181, type: !14683)
!14680 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2454, file: !2454, line: 181, type: !14681, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14684)
!14681 = !DISubroutineType(types: !14682)
!14682 = !{null, !14683, !2346}
!14683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 32)
!14684 = !{!14679, !14685, !14686}
!14685 = !DILocalVariable(name: "thread", arg: 2, scope: !14680, file: !2454, line: 182, type: !2346)
!14686 = !DILocalVariable(name: "t", scope: !14680, file: !2454, line: 184, type: !2346)
!14687 = !DILocation(line: 0, scope: !14680, inlinedAt: !14688)
!14688 = distinct !DILocation(line: 229, column: 2, scope: !14673, inlinedAt: !14676)
!14689 = !DILocation(line: 186, column: 2, scope: !14690, inlinedAt: !14688)
!14690 = distinct !DILexicalBlock(scope: !14691, file: !2454, line: 186, column: 2)
!14691 = distinct !DILexicalBlock(scope: !14680, file: !2454, line: 186, column: 2)
!14692 = !DILocation(line: 186, column: 2, scope: !14691, inlinedAt: !14688)
!14693 = !DILocation(line: 186, column: 2, scope: !14694, inlinedAt: !14688)
!14694 = distinct !DILexicalBlock(scope: !14690, file: !2454, line: 186, column: 2)
!14695 = !DILocation(line: 188, column: 2, scope: !14696, inlinedAt: !14688)
!14696 = distinct !DILexicalBlock(scope: !14680, file: !2454, line: 188, column: 2)
!14697 = !DILocation(line: 188, column: 2, scope: !14698, inlinedAt: !14688)
!14698 = distinct !DILexicalBlock(scope: !14696, file: !2454, line: 188, column: 2)
!14699 = !DILocation(line: 0, scope: !14696, inlinedAt: !14688)
!14700 = !DILocation(line: 189, column: 7, scope: !14701, inlinedAt: !14688)
!14701 = distinct !DILexicalBlock(scope: !14702, file: !2454, line: 189, column: 7)
!14702 = distinct !DILexicalBlock(scope: !14698, file: !2454, line: 188, column: 56)
!14703 = !DILocation(line: 189, column: 35, scope: !14701, inlinedAt: !14688)
!14704 = !DILocation(line: 189, column: 7, scope: !14702, inlinedAt: !14688)
!14705 = !DILocation(line: 191, column: 21, scope: !14706, inlinedAt: !14688)
!14706 = distinct !DILexicalBlock(scope: !14701, file: !2454, line: 189, column: 40)
!14707 = !DILocation(line: 190, column: 4, scope: !14706, inlinedAt: !14688)
!14708 = !DILocation(line: 192, column: 4, scope: !14706, inlinedAt: !14688)
!14709 = distinct !{!14709, !14695, !14710}
!14710 = !DILocation(line: 194, column: 2, scope: !14696, inlinedAt: !14688)
!14711 = !DILocation(line: 196, column: 37, scope: !14680, inlinedAt: !14688)
!14712 = !DILocation(line: 196, column: 2, scope: !14680, inlinedAt: !14688)
!14713 = !DILocation(line: 197, column: 1, scope: !14680, inlinedAt: !14688)
!14714 = !DILocation(line: 399, column: 25, scope: !14641)
!14715 = !DILocation(line: 399, column: 22, scope: !14641)
!14716 = !DILocation(line: 399, column: 2, scope: !14641)
!14717 = !DILocation(line: 400, column: 1, scope: !14641)
!14718 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13617, file: !13617, line: 136, type: !14598, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14719)
!14719 = !{!14720}
!14720 = !DILocalVariable(name: "thread", arg: 1, scope: !14718, file: !13617, line: 136, type: !2346)
!14721 = !DILocation(line: 0, scope: !14718)
!14722 = !DILocation(line: 138, column: 9, scope: !14718)
!14723 = !DILocation(line: 138, column: 2, scope: !14718)
!14724 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2454, file: !2454, line: 1137, type: !14681, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14725)
!14725 = !{!14726, !14727}
!14726 = !DILocalVariable(name: "pq", arg: 1, scope: !14724, file: !2454, line: 1137, type: !14683)
!14727 = !DILocalVariable(name: "thread", arg: 2, scope: !14724, file: !2454, line: 1137, type: !2346)
!14728 = !DILocation(line: 0, scope: !14724)
!14729 = !DILocation(line: 1139, column: 2, scope: !14730)
!14730 = distinct !DILexicalBlock(scope: !14731, file: !2454, line: 1139, column: 2)
!14731 = distinct !DILexicalBlock(scope: !14724, file: !2454, line: 1139, column: 2)
!14732 = !DILocation(line: 1139, column: 2, scope: !14731)
!14733 = !DILocation(line: 1139, column: 2, scope: !14734)
!14734 = distinct !DILexicalBlock(scope: !14730, file: !2454, line: 1139, column: 2)
!14735 = !DILocation(line: 1141, column: 33, scope: !14724)
!14736 = !DILocation(line: 1141, column: 2, scope: !14724)
!14737 = !DILocation(line: 1142, column: 1, scope: !14724)
!14738 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13617, file: !13617, line: 83, type: !14598, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14739)
!14739 = !{!14740}
!14740 = !DILocalVariable(name: "thread", arg: 1, scope: !14738, file: !13617, line: 83, type: !2346)
!14741 = !DILocation(line: 0, scope: !14738)
!14742 = !DILocation(line: 89, column: 16, scope: !14738)
!14743 = !DILocation(line: 89, column: 2, scope: !14738)
!14744 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !14745, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14747)
!14745 = !DISubroutineType(types: !14746)
!14746 = !{!2450, !14683}
!14747 = !{!14748}
!14748 = !DILocalVariable(name: "list", arg: 1, scope: !14744, file: !319, line: 294, type: !14683)
!14749 = !DILocation(line: 0, scope: !14744)
!14750 = !DILocation(line: 296, column: 9, scope: !14744)
!14751 = !DILocation(line: 296, column: 49, scope: !14744)
!14752 = !DILocation(line: 296, column: 2, scope: !14744)
!14753 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !14754, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14756)
!14754 = !DISubroutineType(types: !14755)
!14755 = !{null, !2450, !2450}
!14756 = !{!14757, !14758, !14759}
!14757 = !DILocalVariable(name: "successor", arg: 1, scope: !14753, file: !319, line: 443, type: !2450)
!14758 = !DILocalVariable(name: "node", arg: 2, scope: !14753, file: !319, line: 443, type: !2450)
!14759 = !DILocalVariable(name: "prev", scope: !14753, file: !319, line: 445, type: !14760)
!14760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2450)
!14761 = !DILocation(line: 0, scope: !14753)
!14762 = !DILocation(line: 445, column: 39, scope: !14753)
!14763 = !DILocation(line: 447, column: 8, scope: !14753)
!14764 = !DILocation(line: 447, column: 13, scope: !14753)
!14765 = !DILocation(line: 448, column: 8, scope: !14753)
!14766 = !DILocation(line: 448, column: 13, scope: !14753)
!14767 = !DILocation(line: 449, column: 8, scope: !14753)
!14768 = !DILocation(line: 449, column: 13, scope: !14753)
!14769 = !DILocation(line: 450, column: 18, scope: !14753)
!14770 = !DILocation(line: 451, column: 1, scope: !14753)
!14771 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !14772, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14774)
!14772 = !DISubroutineType(types: !14773)
!14773 = !{!2450, !14683, !2450}
!14774 = !{!14775, !14776}
!14775 = !DILocalVariable(name: "list", arg: 1, scope: !14771, file: !319, line: 341, type: !14683)
!14776 = !DILocalVariable(name: "node", arg: 2, scope: !14771, file: !319, line: 342, type: !2450)
!14777 = !DILocation(line: 0, scope: !14771)
!14778 = !DILocation(line: 344, column: 15, scope: !14771)
!14779 = !DILocation(line: 344, column: 9, scope: !14771)
!14780 = !DILocation(line: 344, column: 26, scope: !14771)
!14781 = !DILocation(line: 344, column: 2, scope: !14771)
!14782 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !14783, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14785)
!14783 = !DISubroutineType(types: !14784)
!14784 = !{null, !14683, !2450}
!14785 = !{!14786, !14787, !14788}
!14786 = !DILocalVariable(name: "list", arg: 1, scope: !14782, file: !319, line: 404, type: !14683)
!14787 = !DILocalVariable(name: "node", arg: 2, scope: !14782, file: !319, line: 404, type: !2450)
!14788 = !DILocalVariable(name: "tail", scope: !14782, file: !319, line: 406, type: !14760)
!14789 = !DILocation(line: 0, scope: !14782)
!14790 = !DILocation(line: 406, column: 34, scope: !14782)
!14791 = !DILocation(line: 408, column: 8, scope: !14782)
!14792 = !DILocation(line: 408, column: 13, scope: !14782)
!14793 = !DILocation(line: 409, column: 8, scope: !14782)
!14794 = !DILocation(line: 409, column: 13, scope: !14782)
!14795 = !DILocation(line: 411, column: 8, scope: !14782)
!14796 = !DILocation(line: 411, column: 13, scope: !14782)
!14797 = !DILocation(line: 412, column: 13, scope: !14782)
!14798 = !DILocation(line: 413, column: 1, scope: !14782)
!14799 = distinct !DISubprogram(name: "update_cache", scope: !2454, file: !2454, line: 559, type: !9168, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14800)
!14800 = !{!14801, !14802}
!14801 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14799, file: !2454, line: 559, type: !107)
!14802 = !DILocalVariable(name: "thread", scope: !14799, file: !2454, line: 562, type: !2346)
!14803 = !DILocation(line: 0, scope: !14799)
!14804 = !DILocation(line: 239, column: 9, scope: !14805, inlinedAt: !14808)
!14805 = distinct !DISubprogram(name: "runq_best", scope: !2454, file: !2454, line: 237, type: !14806, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!14806 = !DISubroutineType(types: !14807)
!14807 = !{!2346}
!14808 = distinct !DILocation(line: 314, column: 28, scope: !14809, inlinedAt: !14812)
!14809 = distinct !DISubprogram(name: "next_up", scope: !2454, file: !2454, line: 312, type: !14806, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14810)
!14810 = !{!14811}
!14811 = !DILocalVariable(name: "thread", scope: !14809, file: !2454, line: 314, type: !2346)
!14812 = distinct !DILocation(line: 562, column: 28, scope: !14799)
!14813 = !DILocation(line: 0, scope: !14809, inlinedAt: !14812)
!14814 = !DILocation(line: 340, column: 17, scope: !14809, inlinedAt: !14812)
!14815 = !DILocation(line: 340, column: 9, scope: !14809, inlinedAt: !14812)
!14816 = !DILocalVariable(name: "thread", arg: 1, scope: !14817, file: !2454, line: 127, type: !2346)
!14817 = distinct !DISubprogram(name: "should_preempt", scope: !2454, file: !2454, line: 127, type: !14818, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14820)
!14818 = !DISubroutineType(types: !14819)
!14819 = !{!145, !2346, !107}
!14820 = !{!14816, !14821}
!14821 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14817, file: !2454, line: 128, type: !107)
!14822 = !DILocation(line: 0, scope: !14817, inlinedAt: !14823)
!14823 = distinct !DILocation(line: 564, column: 6, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14799, file: !2454, line: 564, column: 6)
!14825 = !DILocation(line: 133, column: 17, scope: !14826, inlinedAt: !14823)
!14826 = distinct !DILexicalBlock(scope: !14817, file: !2454, line: 133, column: 6)
!14827 = !DILocation(line: 0, scope: !14824)
!14828 = !DILocation(line: 133, column: 6, scope: !14817, inlinedAt: !14823)
!14829 = !DILocation(line: 137, column: 2, scope: !14830, inlinedAt: !14823)
!14830 = distinct !DILexicalBlock(scope: !14831, file: !2454, line: 137, column: 2)
!14831 = distinct !DILexicalBlock(scope: !14817, file: !2454, line: 137, column: 2)
!14832 = !DILocation(line: 137, column: 2, scope: !14831, inlinedAt: !14823)
!14833 = !DILocation(line: 137, column: 2, scope: !14834, inlinedAt: !14823)
!14834 = distinct !DILexicalBlock(scope: !14830, file: !2454, line: 137, column: 2)
!14835 = !DILocation(line: 140, column: 6, scope: !14836, inlinedAt: !14823)
!14836 = distinct !DILexicalBlock(scope: !14817, file: !2454, line: 140, column: 6)
!14837 = !DILocation(line: 140, column: 6, scope: !14817, inlinedAt: !14823)
!14838 = !DILocation(line: 150, column: 9, scope: !14839, inlinedAt: !14823)
!14839 = distinct !DILexicalBlock(scope: !14817, file: !2454, line: 149, column: 6)
!14840 = !DILocation(line: 149, column: 6, scope: !14817, inlinedAt: !14823)
!14841 = !DILocation(line: 157, column: 6, scope: !14842, inlinedAt: !14823)
!14842 = distinct !DILexicalBlock(scope: !14817, file: !2454, line: 157, column: 6)
!14843 = !DILocation(line: 564, column: 6, scope: !14799)
!14844 = !DILocation(line: 566, column: 14, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14846, file: !2454, line: 566, column: 7)
!14846 = distinct !DILexicalBlock(scope: !14824, file: !2454, line: 564, column: 42)
!14847 = !DILocation(line: 566, column: 7, scope: !14846)
!14848 = !DILocation(line: 567, column: 4, scope: !14849)
!14849 = distinct !DILexicalBlock(scope: !14845, file: !2454, line: 566, column: 27)
!14850 = !DILocation(line: 568, column: 3, scope: !14849)
!14851 = !DILocation(line: 585, column: 1, scope: !14799)
!14852 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2454, file: !2454, line: 1144, type: !14853, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14855)
!14853 = !DISubroutineType(types: !14854)
!14854 = !{!2346, !14683}
!14855 = !{!14856, !14857, !14858}
!14856 = !DILocalVariable(name: "pq", arg: 1, scope: !14852, file: !2454, line: 1144, type: !14683)
!14857 = !DILocalVariable(name: "thread", scope: !14852, file: !2454, line: 1146, type: !2346)
!14858 = !DILocalVariable(name: "n", scope: !14852, file: !2454, line: 1147, type: !2450)
!14859 = !DILocation(line: 0, scope: !14852)
!14860 = !DILocation(line: 1147, column: 19, scope: !14852)
!14861 = !DILocation(line: 1152, column: 2, scope: !14852)
!14862 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13617, file: !13617, line: 115, type: !14598, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14863)
!14863 = !{!14864}
!14864 = !DILocalVariable(name: "thread", arg: 1, scope: !14862, file: !13617, line: 115, type: !2346)
!14865 = !DILocation(line: 0, scope: !14862)
!14866 = !DILocation(line: 117, column: 46, scope: !14862)
!14867 = !DILocation(line: 117, column: 10, scope: !14862)
!14868 = !DILocation(line: 117, column: 9, scope: !14862)
!14869 = !DILocation(line: 117, column: 2, scope: !14862)
!14870 = distinct !DISubprogram(name: "is_preempt", scope: !2454, file: !2454, line: 62, type: !14433, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14871)
!14871 = !{!14872}
!14872 = !DILocalVariable(name: "thread", arg: 1, scope: !14870, file: !2454, line: 62, type: !2346)
!14873 = !DILocation(line: 0, scope: !14870)
!14874 = !DILocation(line: 65, column: 22, scope: !14870)
!14875 = !DILocation(line: 65, column: 30, scope: !14870)
!14876 = !DILocation(line: 65, column: 2, scope: !14870)
!14877 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14046, file: !14046, line: 35, type: !14878, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14882)
!14878 = !DISubroutineType(types: !14879)
!14879 = !{!145, !14880}
!14880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14881, size: 32)
!14881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2397)
!14882 = !{!14883}
!14883 = !DILocalVariable(name: "to", arg: 1, scope: !14877, file: !14046, line: 35, type: !14880)
!14884 = !DILocation(line: 0, scope: !14877)
!14885 = !DILocation(line: 37, column: 35, scope: !14877)
!14886 = !DILocation(line: 37, column: 10, scope: !14877)
!14887 = !DILocation(line: 37, column: 9, scope: !14877)
!14888 = !DILocation(line: 37, column: 2, scope: !14877)
!14889 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !14890, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14894)
!14890 = !DISubroutineType(types: !14891)
!14891 = !{!145, !14892}
!14892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14893, size: 32)
!14893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2356)
!14894 = !{!14895}
!14895 = !DILocalVariable(name: "node", arg: 1, scope: !14889, file: !319, line: 225, type: !14892)
!14896 = !DILocation(line: 0, scope: !14889)
!14897 = !DILocation(line: 227, column: 15, scope: !14889)
!14898 = !DILocation(line: 227, column: 20, scope: !14889)
!14899 = !DILocation(line: 227, column: 2, scope: !14889)
!14900 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !14772, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14901)
!14901 = !{!14902, !14903}
!14902 = !DILocalVariable(name: "list", arg: 1, scope: !14900, file: !319, line: 325, type: !14683)
!14903 = !DILocalVariable(name: "node", arg: 2, scope: !14900, file: !319, line: 326, type: !2450)
!14904 = !DILocation(line: 0, scope: !14900)
!14905 = !DILocation(line: 328, column: 24, scope: !14900)
!14906 = !DILocation(line: 328, column: 15, scope: !14900)
!14907 = !DILocation(line: 328, column: 9, scope: !14900)
!14908 = !DILocation(line: 328, column: 45, scope: !14900)
!14909 = !DILocation(line: 328, column: 2, scope: !14900)
!14910 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !14911, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14913)
!14911 = !DISubroutineType(types: !14912)
!14912 = !{!145, !14683}
!14913 = !{!14914}
!14914 = !DILocalVariable(name: "list", arg: 1, scope: !14910, file: !319, line: 266, type: !14683)
!14915 = !DILocation(line: 0, scope: !14910)
!14916 = !DILocation(line: 268, column: 15, scope: !14910)
!14917 = !DILocation(line: 268, column: 20, scope: !14910)
!14918 = !DILocation(line: 268, column: 2, scope: !14910)
!14919 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !14920, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14922)
!14920 = !DISubroutineType(types: !14921)
!14921 = !{null, !2450}
!14922 = !{!14923, !14924, !14925}
!14923 = !DILocalVariable(name: "node", arg: 1, scope: !14919, file: !319, line: 496, type: !2450)
!14924 = !DILocalVariable(name: "prev", scope: !14919, file: !319, line: 498, type: !14760)
!14925 = !DILocalVariable(name: "next", scope: !14919, file: !319, line: 499, type: !14760)
!14926 = !DILocation(line: 0, scope: !14919)
!14927 = !DILocation(line: 498, column: 34, scope: !14919)
!14928 = !DILocation(line: 499, column: 34, scope: !14919)
!14929 = !DILocation(line: 501, column: 8, scope: !14919)
!14930 = !DILocation(line: 501, column: 13, scope: !14919)
!14931 = !DILocation(line: 502, column: 8, scope: !14919)
!14932 = !DILocation(line: 502, column: 13, scope: !14919)
!14933 = !DILocation(line: 503, column: 2, scope: !14919)
!14934 = !DILocation(line: 504, column: 1, scope: !14919)
!14935 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14920, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14936)
!14936 = !{!14937}
!14937 = !DILocalVariable(name: "node", arg: 1, scope: !14935, file: !319, line: 211, type: !2450)
!14938 = !DILocation(line: 0, scope: !14935)
!14939 = !DILocation(line: 213, column: 8, scope: !14935)
!14940 = !DILocation(line: 213, column: 13, scope: !14935)
!14941 = !DILocation(line: 214, column: 8, scope: !14935)
!14942 = !DILocation(line: 214, column: 13, scope: !14935)
!14943 = !DILocation(line: 215, column: 1, scope: !14935)
!14944 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13617, file: !13617, line: 131, type: !14945, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14947)
!14945 = !DISubroutineType(types: !14946)
!14946 = !{!145, !2346, !152}
!14947 = !{!14948, !14949}
!14948 = !DILocalVariable(name: "thread", arg: 1, scope: !14944, file: !13617, line: 131, type: !2346)
!14949 = !DILocalVariable(name: "state", arg: 2, scope: !14944, file: !13617, line: 131, type: !152)
!14950 = !DILocation(line: 0, scope: !14944)
!14951 = !DILocation(line: 133, column: 23, scope: !14944)
!14952 = !DILocation(line: 133, column: 10, scope: !14944)
!14953 = !DILocation(line: 133, column: 36, scope: !14944)
!14954 = !DILocation(line: 133, column: 45, scope: !14944)
!14955 = !DILocation(line: 133, column: 2, scope: !14944)
!14956 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13617, file: !13617, line: 211, type: !14957, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14959)
!14957 = !DISubroutineType(types: !14958)
!14958 = !{!145, !107, !107}
!14959 = !{!14960, !14961}
!14960 = !DILocalVariable(name: "prio", arg: 1, scope: !14956, file: !13617, line: 211, type: !107)
!14961 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14956, file: !13617, line: 211, type: !107)
!14962 = !DILocation(line: 0, scope: !14956)
!14963 = !DILocation(line: 213, column: 9, scope: !14956)
!14964 = !DILocation(line: 213, column: 2, scope: !14956)
!14965 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13617, file: !13617, line: 206, type: !14957, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14966)
!14966 = !{!14967, !14968}
!14967 = !DILocalVariable(name: "prio1", arg: 1, scope: !14965, file: !13617, line: 206, type: !107)
!14968 = !DILocalVariable(name: "prio2", arg: 2, scope: !14965, file: !13617, line: 206, type: !107)
!14969 = !DILocation(line: 0, scope: !14965)
!14970 = !DILocation(line: 208, column: 15, scope: !14965)
!14971 = !DILocation(line: 208, column: 2, scope: !14965)
!14972 = distinct !DISubprogram(name: "z_ready_thread", scope: !2454, file: !2454, line: 635, type: !14415, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14973)
!14973 = !{!14974, !14975, !14977}
!14974 = !DILocalVariable(name: "thread", arg: 1, scope: !14972, file: !2454, line: 635, type: !2346)
!14975 = !DILocalVariable(name: "__i", scope: !14976, file: !2454, line: 637, type: !14449)
!14976 = distinct !DILexicalBlock(scope: !14972, file: !2454, line: 637, column: 2)
!14977 = !DILocalVariable(name: "__key", scope: !14976, file: !2454, line: 637, type: !14449)
!14978 = !DILocation(line: 0, scope: !14972)
!14979 = !DILocation(line: 0, scope: !14976)
!14980 = !DILocation(line: 0, scope: !14457, inlinedAt: !14981)
!14981 = distinct !DILocation(line: 637, column: 2, scope: !14976)
!14982 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !14983)
!14983 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !14981)
!14984 = !DILocation(line: 0, scope: !14466, inlinedAt: !14983)
!14985 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !14981)
!14986 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !14981)
!14987 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !14981)
!14988 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !14981)
!14989 = !DILocation(line: 639, column: 4, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14991, file: !2454, line: 638, column: 41)
!14991 = distinct !DILexicalBlock(scope: !14992, file: !2454, line: 638, column: 7)
!14992 = distinct !DILexicalBlock(scope: !14993, file: !2454, line: 637, column: 26)
!14993 = distinct !DILexicalBlock(scope: !14976, file: !2454, line: 637, column: 2)
!14994 = !DILocation(line: 0, scope: !14491, inlinedAt: !14995)
!14995 = distinct !DILocation(line: 637, column: 2, scope: !14993)
!14996 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !14995)
!14997 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !14995)
!14998 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !14995)
!14999 = !DILocation(line: 0, scope: !14505, inlinedAt: !15000)
!15000 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !14995)
!15001 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15000)
!15002 = !DILocation(line: 642, column: 1, scope: !14972)
!15003 = distinct !DISubprogram(name: "ready_thread", scope: !2454, file: !2454, line: 617, type: !14415, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15004)
!15004 = !{!15005}
!15005 = !DILocalVariable(name: "thread", arg: 1, scope: !15003, file: !2454, line: 617, type: !2346)
!15006 = !DILocation(line: 0, scope: !15003)
!15007 = !DILocation(line: 626, column: 7, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !15003, file: !2454, line: 626, column: 6)
!15009 = !DILocation(line: 626, column: 34, scope: !15008)
!15010 = !DILocation(line: 626, column: 37, scope: !15008)
!15011 = !DILocation(line: 626, column: 6, scope: !15003)
!15012 = !DILocation(line: 0, scope: !14666, inlinedAt: !15013)
!15013 = distinct !DILocation(line: 629, column: 3, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !15008, file: !2454, line: 626, column: 64)
!15015 = !DILocation(line: 252, column: 15, scope: !14666, inlinedAt: !15013)
!15016 = !DILocation(line: 252, column: 28, scope: !14666, inlinedAt: !15013)
!15017 = !DILocation(line: 0, scope: !14673, inlinedAt: !15018)
!15018 = distinct !DILocation(line: 254, column: 3, scope: !14677, inlinedAt: !15013)
!15019 = !DILocation(line: 0, scope: !14680, inlinedAt: !15020)
!15020 = distinct !DILocation(line: 229, column: 2, scope: !14673, inlinedAt: !15018)
!15021 = !DILocation(line: 186, column: 2, scope: !14690, inlinedAt: !15020)
!15022 = !DILocation(line: 186, column: 2, scope: !14691, inlinedAt: !15020)
!15023 = !DILocation(line: 186, column: 2, scope: !14694, inlinedAt: !15020)
!15024 = !DILocation(line: 188, column: 2, scope: !14696, inlinedAt: !15020)
!15025 = !DILocation(line: 188, column: 2, scope: !14698, inlinedAt: !15020)
!15026 = !DILocation(line: 0, scope: !14696, inlinedAt: !15020)
!15027 = !DILocation(line: 189, column: 7, scope: !14701, inlinedAt: !15020)
!15028 = !DILocation(line: 189, column: 35, scope: !14701, inlinedAt: !15020)
!15029 = !DILocation(line: 189, column: 7, scope: !14702, inlinedAt: !15020)
!15030 = !DILocation(line: 191, column: 21, scope: !14706, inlinedAt: !15020)
!15031 = !DILocation(line: 190, column: 4, scope: !14706, inlinedAt: !15020)
!15032 = !DILocation(line: 192, column: 4, scope: !14706, inlinedAt: !15020)
!15033 = distinct !{!15033, !15024, !15034}
!15034 = !DILocation(line: 194, column: 2, scope: !14696, inlinedAt: !15020)
!15035 = !DILocation(line: 196, column: 37, scope: !14680, inlinedAt: !15020)
!15036 = !DILocation(line: 196, column: 2, scope: !14680, inlinedAt: !15020)
!15037 = !DILocation(line: 197, column: 1, scope: !14680, inlinedAt: !15020)
!15038 = !DILocation(line: 630, column: 3, scope: !15014)
!15039 = !DILocation(line: 632, column: 2, scope: !15014)
!15040 = !DILocation(line: 633, column: 1, scope: !15003)
!15041 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13617, file: !13617, line: 120, type: !14598, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15042)
!15042 = !{!15043}
!15043 = !DILocalVariable(name: "thread", arg: 1, scope: !15041, file: !13617, line: 120, type: !2346)
!15044 = !DILocation(line: 0, scope: !15041)
!15045 = !DILocation(line: 122, column: 12, scope: !15041)
!15046 = !DILocation(line: 122, column: 62, scope: !15041)
!15047 = !DILocation(line: 123, column: 4, scope: !15041)
!15048 = !DILocation(line: 122, column: 2, scope: !15041)
!15049 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2454, file: !2454, line: 644, type: !14415, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15050)
!15050 = !{!15051, !15052, !15054}
!15051 = !DILocalVariable(name: "thread", arg: 1, scope: !15049, file: !2454, line: 644, type: !2346)
!15052 = !DILocalVariable(name: "__i", scope: !15053, file: !2454, line: 646, type: !14449)
!15053 = distinct !DILexicalBlock(scope: !15049, file: !2454, line: 646, column: 2)
!15054 = !DILocalVariable(name: "__key", scope: !15053, file: !2454, line: 646, type: !14449)
!15055 = !DILocation(line: 0, scope: !15049)
!15056 = !DILocation(line: 0, scope: !15053)
!15057 = !DILocation(line: 0, scope: !14457, inlinedAt: !15058)
!15058 = distinct !DILocation(line: 646, column: 2, scope: !15053)
!15059 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !15060)
!15060 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !15058)
!15061 = !DILocation(line: 0, scope: !14466, inlinedAt: !15060)
!15062 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !15058)
!15063 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !15058)
!15064 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15058)
!15065 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !15058)
!15066 = !DILocation(line: 647, column: 3, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15068, file: !2454, line: 646, column: 26)
!15068 = distinct !DILexicalBlock(scope: !15053, file: !2454, line: 646, column: 2)
!15069 = !DILocation(line: 0, scope: !14491, inlinedAt: !15070)
!15070 = distinct !DILocation(line: 646, column: 2, scope: !15068)
!15071 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !15070)
!15072 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !15070)
!15073 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15070)
!15074 = !DILocation(line: 0, scope: !14505, inlinedAt: !15075)
!15075 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !15070)
!15076 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15075)
!15077 = !DILocation(line: 649, column: 1, scope: !15049)
!15078 = distinct !DISubprogram(name: "z_sched_start", scope: !2454, file: !2454, line: 651, type: !14415, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15079)
!15079 = !{!15080, !15081}
!15080 = !DILocalVariable(name: "thread", arg: 1, scope: !15078, file: !2454, line: 651, type: !2346)
!15081 = !DILocalVariable(name: "key", scope: !15078, file: !2454, line: 653, type: !14449)
!15082 = !DILocation(line: 0, scope: !15078)
!15083 = !DILocation(line: 0, scope: !14457, inlinedAt: !15084)
!15084 = distinct !DILocation(line: 653, column: 25, scope: !15078)
!15085 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !15086)
!15086 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !15084)
!15087 = !DILocation(line: 0, scope: !14466, inlinedAt: !15086)
!15088 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !15084)
!15089 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !15084)
!15090 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15084)
!15091 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !15084)
!15092 = !DILocation(line: 655, column: 6, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15078, file: !2454, line: 655, column: 6)
!15094 = !DILocation(line: 655, column: 6, scope: !15078)
!15095 = !DILocation(line: 0, scope: !14491, inlinedAt: !15096)
!15096 = distinct !DILocation(line: 656, column: 3, scope: !15097)
!15097 = distinct !DILexicalBlock(scope: !15093, file: !2454, line: 655, column: 36)
!15098 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !15096)
!15099 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !15096)
!15100 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15096)
!15101 = !DILocation(line: 0, scope: !14505, inlinedAt: !15102)
!15102 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !15096)
!15103 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15102)
!15104 = !DILocation(line: 657, column: 3, scope: !15097)
!15105 = !DILocation(line: 660, column: 2, scope: !15078)
!15106 = !DILocation(line: 661, column: 2, scope: !15078)
!15107 = !DILocation(line: 662, column: 2, scope: !15078)
!15108 = !DILocation(line: 663, column: 1, scope: !15078)
!15109 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13617, file: !13617, line: 126, type: !14598, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15110)
!15110 = !{!15111}
!15111 = !DILocalVariable(name: "thread", arg: 1, scope: !15109, file: !13617, line: 126, type: !2346)
!15112 = !DILocation(line: 0, scope: !15109)
!15113 = !DILocation(line: 128, column: 23, scope: !15109)
!15114 = !DILocation(line: 128, column: 36, scope: !15109)
!15115 = !DILocation(line: 128, column: 56, scope: !15109)
!15116 = !DILocation(line: 128, column: 2, scope: !15109)
!15117 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13617, file: !13617, line: 155, type: !14415, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15118)
!15118 = !{!15119}
!15119 = !DILocalVariable(name: "thread", arg: 1, scope: !15117, file: !13617, line: 155, type: !2346)
!15120 = !DILocation(line: 0, scope: !15117)
!15121 = !DILocation(line: 157, column: 15, scope: !15117)
!15122 = !DILocation(line: 157, column: 28, scope: !15117)
!15123 = !DILocation(line: 158, column: 1, scope: !15117)
!15124 = distinct !DISubprogram(name: "z_reschedule", scope: !2454, file: !2454, line: 967, type: !14492, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15125)
!15125 = !{!15126, !15127}
!15126 = !DILocalVariable(name: "lock", arg: 1, scope: !15124, file: !2454, line: 967, type: !14460)
!15127 = !DILocalVariable(name: "key", arg: 2, scope: !15124, file: !2454, line: 967, type: !14449)
!15128 = !DILocation(line: 0, scope: !15124)
!15129 = !DILocation(line: 969, column: 6, scope: !15130)
!15130 = distinct !DILexicalBlock(scope: !15124, file: !2454, line: 969, column: 6)
!15131 = !DILocation(line: 969, column: 23, scope: !15130)
!15132 = !DILocation(line: 969, column: 26, scope: !15130)
!15133 = !DILocation(line: 969, column: 6, scope: !15124)
!15134 = !DILocalVariable(name: "key", arg: 2, scope: !15135, file: !13721, line: 193, type: !14449)
!15135 = distinct !DISubprogram(name: "z_swap", scope: !13721, file: !13721, line: 193, type: !15136, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15138)
!15136 = !DISubroutineType(types: !15137)
!15137 = !{!107, !14460, !14449}
!15138 = !{!15139, !15134}
!15139 = !DILocalVariable(name: "lock", arg: 1, scope: !15135, file: !13721, line: 193, type: !14460)
!15140 = !DILocation(line: 0, scope: !15135, inlinedAt: !15141)
!15141 = distinct !DILocation(line: 970, column: 3, scope: !15142)
!15142 = distinct !DILexicalBlock(scope: !15130, file: !2454, line: 969, column: 39)
!15143 = !DILocalVariable(name: "l", arg: 1, scope: !15144, file: !420, line: 221, type: !14460)
!15144 = distinct !DISubprogram(name: "k_spin_release", scope: !420, file: !420, line: 221, type: !15145, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15147)
!15145 = !DISubroutineType(types: !15146)
!15146 = !{null, !14460}
!15147 = !{!15143}
!15148 = !DILocation(line: 0, scope: !15144, inlinedAt: !15149)
!15149 = distinct !DILocation(line: 195, column: 2, scope: !15135, inlinedAt: !15141)
!15150 = !DILocation(line: 225, column: 2, scope: !15151, inlinedAt: !15149)
!15151 = distinct !DILexicalBlock(scope: !15152, file: !420, line: 225, column: 2)
!15152 = distinct !DILexicalBlock(scope: !15144, file: !420, line: 225, column: 2)
!15153 = !DILocation(line: 225, column: 2, scope: !15152, inlinedAt: !15149)
!15154 = !DILocation(line: 225, column: 2, scope: !15155, inlinedAt: !15149)
!15155 = distinct !DILexicalBlock(scope: !15151, file: !420, line: 225, column: 2)
!15156 = !DILocation(line: 196, column: 9, scope: !15135, inlinedAt: !15141)
!15157 = !DILocation(line: 971, column: 2, scope: !15142)
!15158 = !DILocation(line: 0, scope: !14491, inlinedAt: !15159)
!15159 = distinct !DILocation(line: 972, column: 3, scope: !15160)
!15160 = distinct !DILexicalBlock(scope: !15130, file: !2454, line: 971, column: 9)
!15161 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !15159)
!15162 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !15159)
!15163 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15159)
!15164 = !DILocation(line: 0, scope: !14505, inlinedAt: !15165)
!15165 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !15159)
!15166 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15165)
!15167 = !DILocation(line: 975, column: 1, scope: !15124)
!15168 = distinct !DISubprogram(name: "resched", scope: !2454, file: !2454, line: 940, type: !15169, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15171)
!15169 = !DISubroutineType(types: !15170)
!15170 = !{!145, !152}
!15171 = !{!15172}
!15172 = !DILocalVariable(name: "key", arg: 1, scope: !15168, file: !2454, line: 940, type: !152)
!15173 = !DILocation(line: 0, scope: !15168)
!15174 = !DILocalVariable(name: "key", arg: 1, scope: !15175, file: !5935, line: 112, type: !32)
!15175 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5935, file: !5935, line: 112, type: !15176, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15178)
!15176 = !DISubroutineType(types: !15177)
!15177 = !{!145, !32}
!15178 = !{!15174}
!15179 = !DILocation(line: 0, scope: !15175, inlinedAt: !15180)
!15180 = distinct !DILocation(line: 946, column: 9, scope: !15168)
!15181 = !DILocation(line: 115, column: 13, scope: !15175, inlinedAt: !15180)
!15182 = !DILocation(line: 946, column: 32, scope: !15168)
!15183 = !DILocation(line: 1031, column: 3, scope: !15184, inlinedAt: !15187)
!15184 = distinct !DISubprogram(name: "__get_IPSR", scope: !6254, file: !6254, line: 1027, type: !6341, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15185)
!15185 = !{!15186}
!15186 = !DILocalVariable(name: "result", scope: !15184, file: !6254, line: 1029, type: !152)
!15187 = distinct !DILocation(line: 48, column: 10, scope: !15188, inlinedAt: !15189)
!15188 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7306, file: !7306, line: 46, type: !7307, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!15189 = distinct !DILocation(line: 946, column: 36, scope: !15168)
!15190 = !{i64 3542652}
!15191 = !DILocation(line: 0, scope: !15184, inlinedAt: !15187)
!15192 = !DILocation(line: 48, column: 9, scope: !15188, inlinedAt: !15189)
!15193 = !DILocation(line: 946, column: 2, scope: !15168)
!15194 = distinct !DISubprogram(name: "need_swap", scope: !2454, file: !2454, line: 953, type: !7307, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15195)
!15195 = !{!15196}
!15196 = !DILocalVariable(name: "new_thread", scope: !15194, file: !2454, line: 959, type: !2346)
!15197 = !DILocation(line: 962, column: 31, scope: !15194)
!15198 = !DILocation(line: 0, scope: !15194)
!15199 = !DILocation(line: 963, column: 23, scope: !15194)
!15200 = !DILocation(line: 963, column: 20, scope: !15194)
!15201 = !DILocation(line: 963, column: 2, scope: !15194)
!15202 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13721, file: !13721, line: 181, type: !6264, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15203)
!15203 = !{!15204, !15205}
!15204 = !DILocalVariable(name: "key", arg: 1, scope: !15202, file: !13721, line: 181, type: !32)
!15205 = !DILocalVariable(name: "ret", scope: !15202, file: !13721, line: 183, type: !107)
!15206 = !DILocation(line: 0, scope: !15202)
!15207 = !DILocation(line: 185, column: 8, scope: !15202)
!15208 = !DILocation(line: 186, column: 2, scope: !15202)
!15209 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2454, file: !2454, line: 665, type: !14415, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15210)
!15210 = !{!15211, !15212, !15214}
!15211 = !DILocalVariable(name: "thread", arg: 1, scope: !15209, file: !2454, line: 665, type: !2346)
!15212 = !DILocalVariable(name: "__i", scope: !15213, file: !2454, line: 671, type: !14449)
!15213 = distinct !DILexicalBlock(scope: !15209, file: !2454, line: 671, column: 2)
!15214 = !DILocalVariable(name: "__key", scope: !15213, file: !2454, line: 671, type: !14449)
!15215 = !DILocation(line: 0, scope: !15209)
!15216 = !DILocation(line: 669, column: 8, scope: !15209)
!15217 = !DILocation(line: 0, scope: !15213)
!15218 = !DILocation(line: 0, scope: !14457, inlinedAt: !15219)
!15219 = distinct !DILocation(line: 671, column: 2, scope: !15213)
!15220 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !15221)
!15221 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !15219)
!15222 = !DILocation(line: 0, scope: !14466, inlinedAt: !15221)
!15223 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !15219)
!15224 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !15219)
!15225 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15219)
!15226 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !15219)
!15227 = !DILocation(line: 672, column: 7, scope: !15228)
!15228 = distinct !DILexicalBlock(scope: !15229, file: !2454, line: 672, column: 7)
!15229 = distinct !DILexicalBlock(scope: !15230, file: !2454, line: 671, column: 26)
!15230 = distinct !DILexicalBlock(scope: !15213, file: !2454, line: 671, column: 2)
!15231 = !DILocation(line: 672, column: 7, scope: !15229)
!15232 = !DILocation(line: 0, scope: !14649, inlinedAt: !15233)
!15233 = distinct !DILocation(line: 673, column: 4, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15228, file: !2454, line: 672, column: 35)
!15235 = !DILocation(line: 266, column: 15, scope: !14649, inlinedAt: !15233)
!15236 = !DILocation(line: 266, column: 28, scope: !14649, inlinedAt: !15233)
!15237 = !DILocation(line: 0, scope: !14657, inlinedAt: !15238)
!15238 = distinct !DILocation(line: 268, column: 3, scope: !14661, inlinedAt: !15233)
!15239 = !DILocation(line: 234, column: 2, scope: !14657, inlinedAt: !15238)
!15240 = !DILocation(line: 674, column: 3, scope: !15234)
!15241 = !DILocation(line: 675, column: 3, scope: !15229)
!15242 = !DILocation(line: 676, column: 26, scope: !15229)
!15243 = !DILocation(line: 676, column: 23, scope: !15229)
!15244 = !DILocation(line: 676, column: 3, scope: !15229)
!15245 = !DILocation(line: 0, scope: !14491, inlinedAt: !15246)
!15246 = distinct !DILocation(line: 671, column: 2, scope: !15230)
!15247 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !15246)
!15248 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !15246)
!15249 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15246)
!15250 = !DILocation(line: 0, scope: !14505, inlinedAt: !15251)
!15251 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !15246)
!15252 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15251)
!15253 = !DILocation(line: 679, column: 16, scope: !15254)
!15254 = distinct !DILexicalBlock(scope: !15209, file: !2454, line: 679, column: 6)
!15255 = !DILocation(line: 679, column: 13, scope: !15254)
!15256 = !DILocation(line: 679, column: 6, scope: !15209)
!15257 = !DILocation(line: 680, column: 3, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !15254, file: !2454, line: 679, column: 26)
!15259 = !DILocation(line: 681, column: 2, scope: !15258)
!15260 = !DILocation(line: 684, column: 1, scope: !15209)
!15261 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14046, file: !14046, line: 52, type: !14433, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15262)
!15262 = !{!15263}
!15263 = !DILocalVariable(name: "thread", arg: 1, scope: !15261, file: !14046, line: 52, type: !2346)
!15264 = !DILocation(line: 0, scope: !15261)
!15265 = !DILocation(line: 54, column: 39, scope: !15261)
!15266 = !DILocation(line: 54, column: 9, scope: !15261)
!15267 = !DILocation(line: 54, column: 2, scope: !15261)
!15268 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13617, file: !13617, line: 141, type: !14415, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15269)
!15269 = !{!15270}
!15270 = !DILocalVariable(name: "thread", arg: 1, scope: !15268, file: !13617, line: 141, type: !2346)
!15271 = !DILocation(line: 0, scope: !15268)
!15272 = !DILocation(line: 143, column: 15, scope: !15268)
!15273 = !DILocation(line: 143, column: 28, scope: !15268)
!15274 = !DILocation(line: 146, column: 1, scope: !15268)
!15275 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13617, file: !13617, line: 73, type: !3082, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!15276 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !15277)
!15277 = distinct !DILocation(line: 75, column: 30, scope: !15275)
!15278 = !DILocation(line: 0, scope: !14466, inlinedAt: !15277)
!15279 = !DILocation(line: 75, column: 9, scope: !15275)
!15280 = !DILocation(line: 76, column: 1, scope: !15275)
!15281 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2454, file: !2454, line: 977, type: !6351, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15282)
!15282 = !{!15283}
!15283 = !DILocalVariable(name: "key", arg: 1, scope: !15281, file: !2454, line: 977, type: !152)
!15284 = !DILocation(line: 0, scope: !15281)
!15285 = !DILocation(line: 979, column: 6, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15281, file: !2454, line: 979, column: 6)
!15287 = !DILocation(line: 979, column: 6, scope: !15281)
!15288 = !DILocation(line: 980, column: 3, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15286, file: !2454, line: 979, column: 20)
!15290 = !DILocation(line: 981, column: 2, scope: !15289)
!15291 = !DILocation(line: 0, scope: !14505, inlinedAt: !15292)
!15292 = distinct !DILocation(line: 982, column: 3, scope: !15293)
!15293 = distinct !DILexicalBlock(scope: !15286, file: !2454, line: 981, column: 9)
!15294 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15292)
!15295 = !DILocation(line: 985, column: 1, scope: !15281)
!15296 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2454, file: !2454, line: 695, type: !14415, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15297)
!15297 = !{!15298, !15299}
!15298 = !DILocalVariable(name: "thread", arg: 1, scope: !15296, file: !2454, line: 695, type: !2346)
!15299 = !DILocalVariable(name: "key", scope: !15296, file: !2454, line: 699, type: !14449)
!15300 = !DILocation(line: 0, scope: !15296)
!15301 = !DILocation(line: 0, scope: !14457, inlinedAt: !15302)
!15302 = distinct !DILocation(line: 699, column: 25, scope: !15296)
!15303 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !15304)
!15304 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !15302)
!15305 = !DILocation(line: 0, scope: !14466, inlinedAt: !15304)
!15306 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !15302)
!15307 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !15302)
!15308 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15302)
!15309 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !15302)
!15310 = !DILocation(line: 702, column: 7, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !15296, file: !2454, line: 702, column: 6)
!15312 = !DILocation(line: 702, column: 6, scope: !15296)
!15313 = !DILocation(line: 0, scope: !14491, inlinedAt: !15314)
!15314 = distinct !DILocation(line: 703, column: 3, scope: !15315)
!15315 = distinct !DILexicalBlock(scope: !15311, file: !2454, line: 702, column: 38)
!15316 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !15314)
!15317 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !15314)
!15318 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15314)
!15319 = !DILocation(line: 0, scope: !14505, inlinedAt: !15320)
!15320 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !15314)
!15321 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15320)
!15322 = !DILocation(line: 704, column: 3, scope: !15315)
!15323 = !DILocation(line: 707, column: 2, scope: !15296)
!15324 = !DILocation(line: 708, column: 2, scope: !15296)
!15325 = !DILocation(line: 710, column: 2, scope: !15296)
!15326 = !DILocation(line: 713, column: 1, scope: !15296)
!15327 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13617, file: !13617, line: 96, type: !14598, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15328)
!15328 = !{!15329}
!15329 = !DILocalVariable(name: "thread", arg: 1, scope: !15327, file: !13617, line: 96, type: !2346)
!15330 = !DILocation(line: 0, scope: !15327)
!15331 = !DILocation(line: 98, column: 23, scope: !15327)
!15332 = !DILocation(line: 98, column: 36, scope: !15327)
!15333 = !DILocation(line: 98, column: 57, scope: !15327)
!15334 = !DILocation(line: 98, column: 2, scope: !15327)
!15335 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13617, file: !13617, line: 148, type: !14415, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15336)
!15336 = !{!15337}
!15337 = !DILocalVariable(name: "thread", arg: 1, scope: !15335, file: !13617, line: 148, type: !2346)
!15338 = !DILocation(line: 0, scope: !15335)
!15339 = !DILocation(line: 150, column: 15, scope: !15335)
!15340 = !DILocation(line: 150, column: 28, scope: !15335)
!15341 = !DILocation(line: 153, column: 1, scope: !15335)
!15342 = distinct !DISubprogram(name: "z_pend_thread", scope: !2454, file: !2454, line: 770, type: !15343, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15349)
!15343 = !DISubroutineType(types: !15344)
!15344 = !{null, !2346, !2377, !15345}
!15345 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !15346)
!15346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !15347)
!15347 = !{!15348}
!15348 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15346, file: !565, line: 66, baseType: !564, size: 64)
!15349 = !{!15350, !15351, !15352, !15353, !15355}
!15350 = !DILocalVariable(name: "thread", arg: 1, scope: !15342, file: !2454, line: 770, type: !2346)
!15351 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15342, file: !2454, line: 770, type: !2377)
!15352 = !DILocalVariable(name: "timeout", arg: 3, scope: !15342, file: !2454, line: 771, type: !15345)
!15353 = !DILocalVariable(name: "__i", scope: !15354, file: !2454, line: 774, type: !14449)
!15354 = distinct !DILexicalBlock(scope: !15342, file: !2454, line: 774, column: 2)
!15355 = !DILocalVariable(name: "__key", scope: !15354, file: !2454, line: 774, type: !14449)
!15356 = !DILocation(line: 0, scope: !15342)
!15357 = !DILocation(line: 773, column: 2, scope: !15358)
!15358 = distinct !DILexicalBlock(scope: !15359, file: !2454, line: 773, column: 2)
!15359 = distinct !DILexicalBlock(scope: !15342, file: !2454, line: 773, column: 2)
!15360 = !DILocation(line: 773, column: 2, scope: !15359)
!15361 = !DILocation(line: 773, column: 2, scope: !15362)
!15362 = distinct !DILexicalBlock(scope: !15358, file: !2454, line: 773, column: 2)
!15363 = !DILocation(line: 0, scope: !15354)
!15364 = !DILocation(line: 0, scope: !14457, inlinedAt: !15365)
!15365 = distinct !DILocation(line: 774, column: 2, scope: !15354)
!15366 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !15367)
!15367 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !15365)
!15368 = !DILocation(line: 0, scope: !14466, inlinedAt: !15367)
!15369 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !15365)
!15370 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !15365)
!15371 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15365)
!15372 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !15365)
!15373 = !DILocation(line: 775, column: 3, scope: !15374)
!15374 = distinct !DILexicalBlock(scope: !15375, file: !2454, line: 774, column: 26)
!15375 = distinct !DILexicalBlock(scope: !15354, file: !2454, line: 774, column: 2)
!15376 = !DILocation(line: 0, scope: !14491, inlinedAt: !15377)
!15377 = distinct !DILocation(line: 774, column: 2, scope: !15375)
!15378 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !15377)
!15379 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !15377)
!15380 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15377)
!15381 = !DILocation(line: 0, scope: !14505, inlinedAt: !15382)
!15382 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !15377)
!15383 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15382)
!15384 = !DILocation(line: 777, column: 1, scope: !15342)
!15385 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2454, file: !2454, line: 79, type: !14598, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15386)
!15386 = !{!15387}
!15387 = !DILocalVariable(name: "thread", arg: 1, scope: !15385, file: !2454, line: 79, type: !2346)
!15388 = !DILocation(line: 0, scope: !15385)
!15389 = !DILocation(line: 81, column: 23, scope: !15385)
!15390 = !DILocation(line: 81, column: 36, scope: !15385)
!15391 = !DILocation(line: 81, column: 53, scope: !15385)
!15392 = !DILocation(line: 81, column: 2, scope: !15385)
!15393 = distinct !DISubprogram(name: "pend_locked", scope: !2454, file: !2454, line: 760, type: !15343, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15394)
!15394 = !{!15395, !15396, !15397}
!15395 = !DILocalVariable(name: "thread", arg: 1, scope: !15393, file: !2454, line: 760, type: !2346)
!15396 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15393, file: !2454, line: 760, type: !2377)
!15397 = !DILocalVariable(name: "timeout", arg: 3, scope: !15393, file: !2454, line: 761, type: !15345)
!15398 = !DILocation(line: 0, scope: !15393)
!15399 = !DILocation(line: 766, column: 2, scope: !15393)
!15400 = !DILocation(line: 767, column: 2, scope: !15393)
!15401 = !DILocation(line: 768, column: 1, scope: !15393)
!15402 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2454, file: !2454, line: 740, type: !15403, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15405)
!15403 = !DISubroutineType(types: !15404)
!15404 = !{null, !2346, !2377}
!15405 = !{!15406, !15407}
!15406 = !DILocalVariable(name: "thread", arg: 1, scope: !15402, file: !2454, line: 740, type: !2346)
!15407 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15402, file: !2454, line: 740, type: !2377)
!15408 = !DILocation(line: 0, scope: !15402)
!15409 = !DILocation(line: 742, column: 2, scope: !15402)
!15410 = !DILocation(line: 743, column: 2, scope: !15402)
!15411 = !DILocation(line: 747, column: 13, scope: !15412)
!15412 = distinct !DILexicalBlock(scope: !15402, file: !2454, line: 747, column: 6)
!15413 = !DILocation(line: 747, column: 6, scope: !15402)
!15414 = !DILocation(line: 748, column: 16, scope: !15415)
!15415 = distinct !DILexicalBlock(scope: !15412, file: !2454, line: 747, column: 22)
!15416 = !DILocation(line: 748, column: 26, scope: !15415)
!15417 = !DILocation(line: 749, column: 28, scope: !15415)
!15418 = !DILocation(line: 0, scope: !14680, inlinedAt: !15419)
!15419 = distinct !DILocation(line: 749, column: 3, scope: !15415)
!15420 = !DILocation(line: 186, column: 2, scope: !14690, inlinedAt: !15419)
!15421 = !DILocation(line: 186, column: 2, scope: !14691, inlinedAt: !15419)
!15422 = !DILocation(line: 186, column: 2, scope: !14694, inlinedAt: !15419)
!15423 = !DILocation(line: 188, column: 2, scope: !14696, inlinedAt: !15419)
!15424 = !DILocation(line: 188, column: 2, scope: !14698, inlinedAt: !15419)
!15425 = !DILocation(line: 0, scope: !14696, inlinedAt: !15419)
!15426 = !DILocation(line: 189, column: 7, scope: !14701, inlinedAt: !15419)
!15427 = !DILocation(line: 189, column: 35, scope: !14701, inlinedAt: !15419)
!15428 = !DILocation(line: 189, column: 7, scope: !14702, inlinedAt: !15419)
!15429 = !DILocation(line: 191, column: 21, scope: !14706, inlinedAt: !15419)
!15430 = !DILocation(line: 190, column: 4, scope: !14706, inlinedAt: !15419)
!15431 = !DILocation(line: 192, column: 4, scope: !14706, inlinedAt: !15419)
!15432 = distinct !{!15432, !15423, !15433}
!15433 = !DILocation(line: 194, column: 2, scope: !14696, inlinedAt: !15419)
!15434 = !DILocation(line: 196, column: 37, scope: !14680, inlinedAt: !15419)
!15435 = !DILocation(line: 196, column: 2, scope: !14680, inlinedAt: !15419)
!15436 = !DILocation(line: 197, column: 1, scope: !14680, inlinedAt: !15419)
!15437 = !DILocation(line: 751, column: 1, scope: !15402)
!15438 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2454, file: !2454, line: 753, type: !15439, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15441)
!15439 = !DISubroutineType(types: !15440)
!15440 = !{null, !2346, !15345}
!15441 = !{!15442, !15443}
!15442 = !DILocalVariable(name: "thread", arg: 1, scope: !15438, file: !2454, line: 753, type: !2346)
!15443 = !DILocalVariable(name: "timeout", arg: 2, scope: !15438, file: !2454, line: 753, type: !15345)
!15444 = !DILocation(line: 0, scope: !15438)
!15445 = !DILocation(line: 755, column: 7, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !15438, file: !2454, line: 755, column: 6)
!15447 = !DILocation(line: 755, column: 6, scope: !15438)
!15448 = !DILocation(line: 756, column: 3, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15446, file: !2454, line: 755, column: 41)
!15450 = !DILocation(line: 757, column: 2, scope: !15449)
!15451 = !DILocation(line: 758, column: 1, scope: !15438)
!15452 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14046, file: !14046, line: 47, type: !15439, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15453)
!15453 = !{!15454, !15455}
!15454 = !DILocalVariable(name: "thread", arg: 1, scope: !15452, file: !14046, line: 47, type: !2346)
!15455 = !DILocalVariable(name: "ticks", arg: 2, scope: !15452, file: !14046, line: 47, type: !15345)
!15456 = !DILocation(line: 0, scope: !15452)
!15457 = !DILocation(line: 49, column: 30, scope: !15452)
!15458 = !DILocation(line: 49, column: 2, scope: !15452)
!15459 = !DILocation(line: 50, column: 1, scope: !15452)
!15460 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2454, file: !2454, line: 795, type: !2403, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15461)
!15461 = !{!15462, !15463, !15464, !15466, !15467}
!15462 = !DILocalVariable(name: "timeout", arg: 1, scope: !15460, file: !2454, line: 795, type: !2405)
!15463 = !DILocalVariable(name: "thread", scope: !15460, file: !2454, line: 797, type: !2346)
!15464 = !DILocalVariable(name: "__i", scope: !15465, file: !2454, line: 800, type: !14449)
!15465 = distinct !DILexicalBlock(scope: !15460, file: !2454, line: 800, column: 2)
!15466 = !DILocalVariable(name: "__key", scope: !15465, file: !2454, line: 800, type: !14449)
!15467 = !DILocalVariable(name: "killed", scope: !15468, file: !2454, line: 801, type: !145)
!15468 = distinct !DILexicalBlock(scope: !15469, file: !2454, line: 800, column: 26)
!15469 = distinct !DILexicalBlock(scope: !15465, file: !2454, line: 800, column: 2)
!15470 = !DILocation(line: 0, scope: !15460)
!15471 = !DILocation(line: 797, column: 28, scope: !15460)
!15472 = !DILocation(line: 0, scope: !15465)
!15473 = !DILocation(line: 0, scope: !14457, inlinedAt: !15474)
!15474 = distinct !DILocation(line: 800, column: 2, scope: !15465)
!15475 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !15476)
!15476 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !15474)
!15477 = !DILocation(line: 0, scope: !14466, inlinedAt: !15476)
!15478 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !15474)
!15479 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !15474)
!15480 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15474)
!15481 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !15474)
!15482 = !DILocation(line: 801, column: 27, scope: !15468)
!15483 = !DILocation(line: 801, column: 32, scope: !15468)
!15484 = !DILocation(line: 801, column: 61, scope: !15468)
!15485 = !DILocation(line: 0, scope: !15468)
!15486 = !DILocation(line: 804, column: 7, scope: !15468)
!15487 = !DILocation(line: 805, column: 21, scope: !15488)
!15488 = distinct !DILexicalBlock(scope: !15489, file: !2454, line: 805, column: 8)
!15489 = distinct !DILexicalBlock(scope: !15490, file: !2454, line: 804, column: 16)
!15490 = distinct !DILexicalBlock(scope: !15468, file: !2454, line: 804, column: 7)
!15491 = !DILocation(line: 805, column: 31, scope: !15488)
!15492 = !DILocation(line: 805, column: 8, scope: !15489)
!15493 = !DILocation(line: 806, column: 5, scope: !15494)
!15494 = distinct !DILexicalBlock(scope: !15488, file: !2454, line: 805, column: 40)
!15495 = !DILocation(line: 807, column: 4, scope: !15494)
!15496 = !DILocation(line: 808, column: 4, scope: !15489)
!15497 = !DILocation(line: 809, column: 4, scope: !15489)
!15498 = !DILocation(line: 810, column: 4, scope: !15489)
!15499 = !DILocation(line: 811, column: 3, scope: !15489)
!15500 = !DILocation(line: 0, scope: !14491, inlinedAt: !15501)
!15501 = distinct !DILocation(line: 800, column: 2, scope: !15469)
!15502 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !15501)
!15503 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !15501)
!15504 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15501)
!15505 = !DILocation(line: 0, scope: !14505, inlinedAt: !15506)
!15506 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !15501)
!15507 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15506)
!15508 = !DILocation(line: 813, column: 1, scope: !15460)
!15509 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2454, file: !2454, line: 779, type: !14415, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15510)
!15510 = !{!15511}
!15511 = !DILocalVariable(name: "thread", arg: 1, scope: !15509, file: !2454, line: 779, type: !2346)
!15512 = !DILocation(line: 0, scope: !15509)
!15513 = !DILocation(line: 781, column: 21, scope: !15509)
!15514 = !DILocation(line: 781, column: 2, scope: !15509)
!15515 = !DILocation(line: 782, column: 2, scope: !15509)
!15516 = !DILocation(line: 783, column: 15, scope: !15509)
!15517 = !DILocation(line: 783, column: 25, scope: !15509)
!15518 = !DILocation(line: 784, column: 1, scope: !15509)
!15519 = distinct !DISubprogram(name: "pended_on_thread", scope: !2454, file: !2454, line: 724, type: !15520, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15522)
!15520 = !DISubroutineType(types: !15521)
!15521 = !{!2377, !2346}
!15522 = !{!15523}
!15523 = !DILocalVariable(name: "thread", arg: 1, scope: !15519, file: !2454, line: 724, type: !2346)
!15524 = !DILocation(line: 0, scope: !15519)
!15525 = !DILocation(line: 726, column: 2, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15527, file: !2454, line: 726, column: 2)
!15527 = distinct !DILexicalBlock(scope: !15519, file: !2454, line: 726, column: 2)
!15528 = !DILocation(line: 726, column: 2, scope: !15527)
!15529 = !DILocation(line: 726, column: 2, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15526, file: !2454, line: 726, column: 2)
!15531 = !DILocation(line: 728, column: 2, scope: !15519)
!15532 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13617, file: !13617, line: 165, type: !14415, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15533)
!15533 = !{!15534}
!15534 = !DILocalVariable(name: "thread", arg: 1, scope: !15532, file: !13617, line: 165, type: !2346)
!15535 = !DILocation(line: 0, scope: !15532)
!15536 = !DILocation(line: 167, column: 15, scope: !15532)
!15537 = !DILocation(line: 167, column: 28, scope: !15532)
!15538 = !DILocation(line: 168, column: 1, scope: !15532)
!15539 = distinct !DISubprogram(name: "unready_thread", scope: !2454, file: !2454, line: 731, type: !14415, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15540)
!15540 = !{!15541}
!15541 = !DILocalVariable(name: "thread", arg: 1, scope: !15539, file: !2454, line: 731, type: !2346)
!15542 = !DILocation(line: 0, scope: !15539)
!15543 = !DILocation(line: 733, column: 6, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !15539, file: !2454, line: 733, column: 6)
!15545 = !DILocation(line: 733, column: 6, scope: !15539)
!15546 = !DILocation(line: 0, scope: !14649, inlinedAt: !15547)
!15547 = distinct !DILocation(line: 734, column: 3, scope: !15548)
!15548 = distinct !DILexicalBlock(scope: !15544, file: !2454, line: 733, column: 34)
!15549 = !DILocation(line: 266, column: 15, scope: !14649, inlinedAt: !15547)
!15550 = !DILocation(line: 266, column: 28, scope: !14649, inlinedAt: !15547)
!15551 = !DILocation(line: 0, scope: !14657, inlinedAt: !15552)
!15552 = distinct !DILocation(line: 268, column: 3, scope: !14661, inlinedAt: !15547)
!15553 = !DILocation(line: 234, column: 2, scope: !14657, inlinedAt: !15552)
!15554 = !DILocation(line: 735, column: 2, scope: !15548)
!15555 = !DILocation(line: 736, column: 25, scope: !15539)
!15556 = !DILocation(line: 736, column: 22, scope: !15539)
!15557 = !DILocation(line: 736, column: 2, scope: !15539)
!15558 = !DILocation(line: 737, column: 1, scope: !15539)
!15559 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13617, file: !13617, line: 160, type: !14415, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15560)
!15560 = !{!15561}
!15561 = !DILocalVariable(name: "thread", arg: 1, scope: !15559, file: !13617, line: 160, type: !2346)
!15562 = !DILocation(line: 0, scope: !15559)
!15563 = !DILocation(line: 162, column: 15, scope: !15559)
!15564 = !DILocation(line: 162, column: 28, scope: !15559)
!15565 = !DILocation(line: 163, column: 1, scope: !15559)
!15566 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2454, file: !2454, line: 786, type: !14415, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15567)
!15567 = !{!15568, !15569, !15571}
!15568 = !DILocalVariable(name: "thread", arg: 1, scope: !15566, file: !2454, line: 786, type: !2346)
!15569 = !DILocalVariable(name: "__i", scope: !15570, file: !2454, line: 788, type: !14449)
!15570 = distinct !DILexicalBlock(scope: !15566, file: !2454, line: 788, column: 2)
!15571 = !DILocalVariable(name: "__key", scope: !15570, file: !2454, line: 788, type: !14449)
!15572 = !DILocation(line: 0, scope: !15566)
!15573 = !DILocation(line: 0, scope: !15570)
!15574 = !DILocation(line: 0, scope: !14457, inlinedAt: !15575)
!15575 = distinct !DILocation(line: 788, column: 2, scope: !15570)
!15576 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !15577)
!15577 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !15575)
!15578 = !DILocation(line: 0, scope: !14466, inlinedAt: !15577)
!15579 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !15575)
!15580 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !15575)
!15581 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15575)
!15582 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !15575)
!15583 = !DILocation(line: 789, column: 3, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15585, file: !2454, line: 788, column: 26)
!15585 = distinct !DILexicalBlock(scope: !15570, file: !2454, line: 788, column: 2)
!15586 = !DILocation(line: 0, scope: !14491, inlinedAt: !15587)
!15587 = distinct !DILocation(line: 788, column: 2, scope: !15585)
!15588 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !15587)
!15589 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !15587)
!15590 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15587)
!15591 = !DILocation(line: 0, scope: !14505, inlinedAt: !15592)
!15592 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !15587)
!15593 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15592)
!15594 = !DILocation(line: 791, column: 1, scope: !15566)
!15595 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2454, file: !2454, line: 816, type: !15596, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15598)
!15596 = !DISubroutineType(types: !15597)
!15597 = !{!107, !152, !2377, !15345}
!15598 = !{!15599, !15600, !15601, !15602, !15603, !15605}
!15599 = !DILocalVariable(name: "key", arg: 1, scope: !15595, file: !2454, line: 816, type: !152)
!15600 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15595, file: !2454, line: 816, type: !2377)
!15601 = !DILocalVariable(name: "timeout", arg: 3, scope: !15595, file: !2454, line: 816, type: !15345)
!15602 = !DILocalVariable(name: "ret", scope: !15595, file: !2454, line: 828, type: !107)
!15603 = !DILocalVariable(name: "__i", scope: !15604, file: !2454, line: 829, type: !14449)
!15604 = distinct !DILexicalBlock(scope: !15595, file: !2454, line: 829, column: 2)
!15605 = !DILocalVariable(name: "__key", scope: !15604, file: !2454, line: 829, type: !14449)
!15606 = !DILocation(line: 0, scope: !15595)
!15607 = !DILocation(line: 823, column: 14, scope: !15595)
!15608 = !DILocation(line: 823, column: 2, scope: !15595)
!15609 = !DILocation(line: 826, column: 20, scope: !15595)
!15610 = !DILocation(line: 826, column: 18, scope: !15595)
!15611 = !DILocation(line: 828, column: 12, scope: !15595)
!15612 = !DILocation(line: 0, scope: !15604)
!15613 = !DILocation(line: 0, scope: !14457, inlinedAt: !15614)
!15614 = distinct !DILocation(line: 829, column: 2, scope: !15604)
!15615 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !15616)
!15616 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !15614)
!15617 = !DILocation(line: 0, scope: !14466, inlinedAt: !15616)
!15618 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !15614)
!15619 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !15614)
!15620 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15614)
!15621 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !15614)
!15622 = !DILocation(line: 830, column: 7, scope: !15623)
!15623 = distinct !DILexicalBlock(scope: !15624, file: !2454, line: 830, column: 7)
!15624 = distinct !DILexicalBlock(scope: !15625, file: !2454, line: 829, column: 26)
!15625 = distinct !DILexicalBlock(scope: !15604, file: !2454, line: 829, column: 2)
!15626 = !DILocation(line: 830, column: 26, scope: !15623)
!15627 = !DILocation(line: 830, column: 23, scope: !15623)
!15628 = !DILocation(line: 830, column: 7, scope: !15624)
!15629 = !DILocation(line: 831, column: 20, scope: !15630)
!15630 = distinct !DILexicalBlock(scope: !15623, file: !2454, line: 830, column: 36)
!15631 = !DILocation(line: 832, column: 3, scope: !15630)
!15632 = !DILocation(line: 0, scope: !14491, inlinedAt: !15633)
!15633 = distinct !DILocation(line: 829, column: 2, scope: !15625)
!15634 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !15633)
!15635 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !15633)
!15636 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15633)
!15637 = !DILocation(line: 0, scope: !14505, inlinedAt: !15638)
!15638 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !15633)
!15639 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15638)
!15640 = !DILocation(line: 834, column: 2, scope: !15595)
!15641 = distinct !DISubprogram(name: "z_pend_curr", scope: !2454, file: !2454, line: 840, type: !15642, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15644)
!15642 = !DISubroutineType(types: !15643)
!15643 = !{!107, !14460, !14449, !2377, !15345}
!15644 = !{!15645, !15646, !15647, !15648}
!15645 = !DILocalVariable(name: "lock", arg: 1, scope: !15641, file: !2454, line: 840, type: !14460)
!15646 = !DILocalVariable(name: "key", arg: 2, scope: !15641, file: !2454, line: 840, type: !14449)
!15647 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15641, file: !2454, line: 841, type: !2377)
!15648 = !DILocalVariable(name: "timeout", arg: 4, scope: !15641, file: !2454, line: 841, type: !15345)
!15649 = !DILocation(line: 0, scope: !15641)
!15650 = !DILocation(line: 844, column: 20, scope: !15641)
!15651 = !DILocation(line: 844, column: 18, scope: !15641)
!15652 = !DILocation(line: 846, column: 2, scope: !15653)
!15653 = distinct !DILexicalBlock(scope: !15654, file: !2454, line: 846, column: 2)
!15654 = distinct !DILexicalBlock(scope: !15641, file: !2454, line: 846, column: 2)
!15655 = !DILocation(line: 846, column: 2, scope: !15654)
!15656 = !DILocation(line: 846, column: 2, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !15653, file: !2454, line: 846, column: 2)
!15658 = !DILocation(line: 0, scope: !14457, inlinedAt: !15659)
!15659 = distinct !DILocation(line: 856, column: 9, scope: !15641)
!15660 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !15661)
!15661 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !15659)
!15662 = !DILocation(line: 0, scope: !14466, inlinedAt: !15661)
!15663 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !15659)
!15664 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !15659)
!15665 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15659)
!15666 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !15659)
!15667 = !DILocation(line: 857, column: 14, scope: !15641)
!15668 = !DILocation(line: 857, column: 2, scope: !15641)
!15669 = !DILocation(line: 0, scope: !15144, inlinedAt: !15670)
!15670 = distinct !DILocation(line: 858, column: 2, scope: !15641)
!15671 = !DILocation(line: 225, column: 2, scope: !15151, inlinedAt: !15670)
!15672 = !DILocation(line: 225, column: 2, scope: !15152, inlinedAt: !15670)
!15673 = !DILocation(line: 225, column: 2, scope: !15155, inlinedAt: !15670)
!15674 = !DILocation(line: 0, scope: !15135, inlinedAt: !15675)
!15675 = distinct !DILocation(line: 859, column: 9, scope: !15641)
!15676 = !DILocation(line: 0, scope: !15144, inlinedAt: !15677)
!15677 = distinct !DILocation(line: 195, column: 2, scope: !15135, inlinedAt: !15675)
!15678 = !DILocation(line: 225, column: 2, scope: !15151, inlinedAt: !15677)
!15679 = !DILocation(line: 225, column: 2, scope: !15152, inlinedAt: !15677)
!15680 = !DILocation(line: 225, column: 2, scope: !15155, inlinedAt: !15677)
!15681 = !DILocation(line: 196, column: 9, scope: !15135, inlinedAt: !15675)
!15682 = !DILocation(line: 859, column: 2, scope: !15641)
!15683 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2454, file: !2454, line: 862, type: !15684, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15686)
!15684 = !DISubroutineType(types: !15685)
!15685 = !{!2346, !2377}
!15686 = !{!15687, !15688, !15689, !15691}
!15687 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15683, file: !2454, line: 862, type: !2377)
!15688 = !DILocalVariable(name: "thread", scope: !15683, file: !2454, line: 864, type: !2346)
!15689 = !DILocalVariable(name: "__i", scope: !15690, file: !2454, line: 866, type: !14449)
!15690 = distinct !DILexicalBlock(scope: !15683, file: !2454, line: 866, column: 2)
!15691 = !DILocalVariable(name: "__key", scope: !15690, file: !2454, line: 866, type: !14449)
!15692 = !DILocation(line: 0, scope: !15683)
!15693 = !DILocation(line: 0, scope: !15690)
!15694 = !DILocation(line: 0, scope: !14457, inlinedAt: !15695)
!15695 = distinct !DILocation(line: 866, column: 2, scope: !15690)
!15696 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !15697)
!15697 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !15695)
!15698 = !DILocation(line: 0, scope: !14466, inlinedAt: !15697)
!15699 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !15695)
!15700 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !15695)
!15701 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15695)
!15702 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !15695)
!15703 = !DILocation(line: 867, column: 12, scope: !15704)
!15704 = distinct !DILexicalBlock(scope: !15705, file: !2454, line: 866, column: 26)
!15705 = distinct !DILexicalBlock(scope: !15690, file: !2454, line: 866, column: 2)
!15706 = !DILocation(line: 869, column: 14, scope: !15707)
!15707 = distinct !DILexicalBlock(scope: !15704, file: !2454, line: 869, column: 7)
!15708 = !DILocation(line: 869, column: 7, scope: !15704)
!15709 = !DILocation(line: 870, column: 4, scope: !15710)
!15710 = distinct !DILexicalBlock(scope: !15707, file: !2454, line: 869, column: 23)
!15711 = !DILocation(line: 871, column: 3, scope: !15710)
!15712 = !DILocation(line: 0, scope: !14491, inlinedAt: !15713)
!15713 = distinct !DILocation(line: 866, column: 2, scope: !15705)
!15714 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !15713)
!15715 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !15713)
!15716 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15713)
!15717 = !DILocation(line: 0, scope: !14505, inlinedAt: !15718)
!15718 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !15713)
!15719 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15718)
!15720 = !DILocation(line: 874, column: 2, scope: !15683)
!15721 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2454, file: !2454, line: 877, type: !15684, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15722)
!15722 = !{!15723, !15724, !15725, !15727}
!15723 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15721, file: !2454, line: 877, type: !2377)
!15724 = !DILocalVariable(name: "thread", scope: !15721, file: !2454, line: 879, type: !2346)
!15725 = !DILocalVariable(name: "__i", scope: !15726, file: !2454, line: 881, type: !14449)
!15726 = distinct !DILexicalBlock(scope: !15721, file: !2454, line: 881, column: 2)
!15727 = !DILocalVariable(name: "__key", scope: !15726, file: !2454, line: 881, type: !14449)
!15728 = !DILocation(line: 0, scope: !15721)
!15729 = !DILocation(line: 0, scope: !15726)
!15730 = !DILocation(line: 0, scope: !14457, inlinedAt: !15731)
!15731 = distinct !DILocation(line: 881, column: 2, scope: !15726)
!15732 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !15733)
!15733 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !15731)
!15734 = !DILocation(line: 0, scope: !14466, inlinedAt: !15733)
!15735 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !15731)
!15736 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !15731)
!15737 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15731)
!15738 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !15731)
!15739 = !DILocation(line: 882, column: 12, scope: !15740)
!15740 = distinct !DILexicalBlock(scope: !15741, file: !2454, line: 881, column: 26)
!15741 = distinct !DILexicalBlock(scope: !15726, file: !2454, line: 881, column: 2)
!15742 = !DILocation(line: 884, column: 14, scope: !15743)
!15743 = distinct !DILexicalBlock(scope: !15740, file: !2454, line: 884, column: 7)
!15744 = !DILocation(line: 884, column: 7, scope: !15740)
!15745 = !DILocation(line: 885, column: 4, scope: !15746)
!15746 = distinct !DILexicalBlock(scope: !15743, file: !2454, line: 884, column: 23)
!15747 = !DILocation(line: 886, column: 10, scope: !15746)
!15748 = !DILocation(line: 887, column: 3, scope: !15746)
!15749 = !DILocation(line: 0, scope: !14491, inlinedAt: !15750)
!15750 = distinct !DILocation(line: 881, column: 2, scope: !15741)
!15751 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !15750)
!15752 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !15750)
!15753 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15750)
!15754 = !DILocation(line: 0, scope: !14505, inlinedAt: !15755)
!15755 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !15750)
!15756 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15755)
!15757 = !DILocation(line: 890, column: 2, scope: !15721)
!15758 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2454, file: !2454, line: 893, type: !14415, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15759)
!15759 = !{!15760}
!15760 = !DILocalVariable(name: "thread", arg: 1, scope: !15758, file: !2454, line: 893, type: !2346)
!15761 = !DILocation(line: 0, scope: !15758)
!15762 = !DILocation(line: 0, scope: !15566, inlinedAt: !15763)
!15763 = distinct !DILocation(line: 895, column: 2, scope: !15758)
!15764 = !DILocation(line: 0, scope: !15570, inlinedAt: !15763)
!15765 = !DILocation(line: 0, scope: !14457, inlinedAt: !15766)
!15766 = distinct !DILocation(line: 788, column: 2, scope: !15570, inlinedAt: !15763)
!15767 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !15768)
!15768 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !15766)
!15769 = !DILocation(line: 0, scope: !14466, inlinedAt: !15768)
!15770 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !15766)
!15771 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !15766)
!15772 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15766)
!15773 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !15766)
!15774 = !DILocation(line: 789, column: 3, scope: !15584, inlinedAt: !15763)
!15775 = !DILocation(line: 0, scope: !14491, inlinedAt: !15776)
!15776 = distinct !DILocation(line: 788, column: 2, scope: !15585, inlinedAt: !15763)
!15777 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !15776)
!15778 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !15776)
!15779 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15776)
!15780 = !DILocation(line: 0, scope: !14505, inlinedAt: !15781)
!15781 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !15776)
!15782 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15781)
!15783 = !DILocation(line: 896, column: 8, scope: !15758)
!15784 = !DILocation(line: 897, column: 1, scope: !15758)
!15785 = distinct !DISubprogram(name: "z_set_prio", scope: !2454, file: !2454, line: 902, type: !14818, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15786)
!15786 = !{!15787, !15788, !15789, !15790, !15792}
!15787 = !DILocalVariable(name: "thread", arg: 1, scope: !15785, file: !2454, line: 902, type: !2346)
!15788 = !DILocalVariable(name: "prio", arg: 2, scope: !15785, file: !2454, line: 902, type: !107)
!15789 = !DILocalVariable(name: "need_sched", scope: !15785, file: !2454, line: 904, type: !145)
!15790 = !DILocalVariable(name: "__i", scope: !15791, file: !2454, line: 906, type: !14449)
!15791 = distinct !DILexicalBlock(scope: !15785, file: !2454, line: 906, column: 2)
!15792 = !DILocalVariable(name: "__key", scope: !15791, file: !2454, line: 906, type: !14449)
!15793 = !DILocation(line: 0, scope: !15785)
!15794 = !DILocation(line: 0, scope: !15791)
!15795 = !DILocation(line: 0, scope: !14457, inlinedAt: !15796)
!15796 = distinct !DILocation(line: 906, column: 2, scope: !15791)
!15797 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !15798)
!15798 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !15796)
!15799 = !DILocation(line: 0, scope: !14466, inlinedAt: !15798)
!15800 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !15796)
!15801 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !15796)
!15802 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15796)
!15803 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !15796)
!15804 = !DILocation(line: 907, column: 16, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15806, file: !2454, line: 906, column: 26)
!15806 = distinct !DILexicalBlock(scope: !15791, file: !2454, line: 906, column: 2)
!15807 = !DILocation(line: 909, column: 7, scope: !15805)
!15808 = !DILocation(line: 0, scope: !14649, inlinedAt: !15809)
!15809 = distinct !DILocation(line: 912, column: 5, scope: !15810)
!15810 = distinct !DILexicalBlock(scope: !15811, file: !2454, line: 911, column: 63)
!15811 = distinct !DILexicalBlock(scope: !15812, file: !2454, line: 911, column: 8)
!15812 = distinct !DILexicalBlock(scope: !15813, file: !2454, line: 909, column: 19)
!15813 = distinct !DILexicalBlock(scope: !15805, file: !2454, line: 909, column: 7)
!15814 = !DILocation(line: 266, column: 28, scope: !14649, inlinedAt: !15809)
!15815 = !DILocation(line: 0, scope: !14657, inlinedAt: !15816)
!15816 = distinct !DILocation(line: 268, column: 3, scope: !14661, inlinedAt: !15809)
!15817 = !DILocation(line: 234, column: 2, scope: !14657, inlinedAt: !15816)
!15818 = !DILocation(line: 913, column: 23, scope: !15810)
!15819 = !DILocation(line: 0, scope: !14666, inlinedAt: !15820)
!15820 = distinct !DILocation(line: 914, column: 5, scope: !15810)
!15821 = !DILocation(line: 252, column: 28, scope: !14666, inlinedAt: !15820)
!15822 = !DILocation(line: 0, scope: !14673, inlinedAt: !15823)
!15823 = distinct !DILocation(line: 254, column: 3, scope: !14677, inlinedAt: !15820)
!15824 = !DILocation(line: 0, scope: !14680, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 229, column: 2, scope: !14673, inlinedAt: !15823)
!15826 = !DILocation(line: 186, column: 2, scope: !14690, inlinedAt: !15825)
!15827 = !DILocation(line: 186, column: 2, scope: !14691, inlinedAt: !15825)
!15828 = !DILocation(line: 186, column: 2, scope: !14694, inlinedAt: !15825)
!15829 = !DILocation(line: 188, column: 2, scope: !14696, inlinedAt: !15825)
!15830 = !DILocation(line: 188, column: 2, scope: !14698, inlinedAt: !15825)
!15831 = !DILocation(line: 0, scope: !14696, inlinedAt: !15825)
!15832 = !DILocation(line: 189, column: 7, scope: !14701, inlinedAt: !15825)
!15833 = !DILocation(line: 189, column: 35, scope: !14701, inlinedAt: !15825)
!15834 = !DILocation(line: 189, column: 7, scope: !14702, inlinedAt: !15825)
!15835 = !DILocation(line: 190, column: 4, scope: !14706, inlinedAt: !15825)
!15836 = !DILocation(line: 192, column: 4, scope: !14706, inlinedAt: !15825)
!15837 = distinct !{!15837, !15829, !15838}
!15838 = !DILocation(line: 194, column: 2, scope: !14696, inlinedAt: !15825)
!15839 = !DILocation(line: 196, column: 2, scope: !14680, inlinedAt: !15825)
!15840 = !DILocation(line: 197, column: 1, scope: !14680, inlinedAt: !15825)
!15841 = !DILocation(line: 918, column: 4, scope: !15812)
!15842 = !DILocation(line: 919, column: 3, scope: !15812)
!15843 = !DILocation(line: 920, column: 22, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15813, file: !2454, line: 919, column: 10)
!15845 = !DILocation(line: 0, scope: !14491, inlinedAt: !15846)
!15846 = distinct !DILocation(line: 906, column: 2, scope: !15806)
!15847 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !15846)
!15848 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !15846)
!15849 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15846)
!15850 = !DILocation(line: 0, scope: !14505, inlinedAt: !15851)
!15851 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !15846)
!15852 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15851)
!15853 = !DILocation(line: 926, column: 2, scope: !15785)
!15854 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2454, file: !2454, line: 929, type: !15855, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15857)
!15855 = !DISubroutineType(types: !15856)
!15856 = !{null, !2346, !107}
!15857 = !{!15858, !15859, !15860}
!15858 = !DILocalVariable(name: "thread", arg: 1, scope: !15854, file: !2454, line: 929, type: !2346)
!15859 = !DILocalVariable(name: "prio", arg: 2, scope: !15854, file: !2454, line: 929, type: !107)
!15860 = !DILocalVariable(name: "need_sched", scope: !15854, file: !2454, line: 931, type: !145)
!15861 = !DILocation(line: 0, scope: !15854)
!15862 = !DILocation(line: 931, column: 20, scope: !15854)
!15863 = !DILocation(line: 935, column: 17, scope: !15864)
!15864 = distinct !DILexicalBlock(scope: !15854, file: !2454, line: 935, column: 6)
!15865 = !DILocation(line: 935, column: 20, scope: !15864)
!15866 = !DILocation(line: 935, column: 35, scope: !15864)
!15867 = !DILocation(line: 935, column: 48, scope: !15864)
!15868 = !DILocation(line: 935, column: 6, scope: !15854)
!15869 = !DILocation(line: 936, column: 3, scope: !15870)
!15870 = distinct !DILexicalBlock(scope: !15864, file: !2454, line: 935, column: 55)
!15871 = !DILocation(line: 937, column: 2, scope: !15870)
!15872 = !DILocation(line: 938, column: 1, scope: !15854)
!15873 = distinct !DISubprogram(name: "k_sched_lock", scope: !2454, file: !2454, line: 987, type: !3082, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15874)
!15874 = !{!15875, !15877}
!15875 = !DILocalVariable(name: "__i", scope: !15876, file: !2454, line: 989, type: !14449)
!15876 = distinct !DILexicalBlock(scope: !15873, file: !2454, line: 989, column: 2)
!15877 = !DILocalVariable(name: "__key", scope: !15876, file: !2454, line: 989, type: !14449)
!15878 = !DILocation(line: 0, scope: !15876)
!15879 = !DILocation(line: 0, scope: !14457, inlinedAt: !15880)
!15880 = distinct !DILocation(line: 989, column: 2, scope: !15876)
!15881 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !15882)
!15882 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !15880)
!15883 = !DILocation(line: 0, scope: !14466, inlinedAt: !15882)
!15884 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !15880)
!15885 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !15880)
!15886 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15880)
!15887 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !15880)
!15888 = !DILocation(line: 992, column: 3, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !15890, file: !2454, line: 989, column: 26)
!15890 = distinct !DILexicalBlock(scope: !15876, file: !2454, line: 989, column: 2)
!15891 = !DILocation(line: 0, scope: !14491, inlinedAt: !15892)
!15892 = distinct !DILocation(line: 989, column: 2, scope: !15890)
!15893 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !15892)
!15894 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !15892)
!15895 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15892)
!15896 = !DILocation(line: 0, scope: !14505, inlinedAt: !15897)
!15897 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !15892)
!15898 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15897)
!15899 = !DILocation(line: 994, column: 1, scope: !15873)
!15900 = distinct !DISubprogram(name: "z_sched_lock", scope: !13617, file: !13617, line: 251, type: !3082, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!15901 = !DILocation(line: 1031, column: 3, scope: !15184, inlinedAt: !15902)
!15902 = distinct !DILocation(line: 48, column: 10, scope: !15188, inlinedAt: !15903)
!15903 = distinct !DILocation(line: 253, column: 2, scope: !15904)
!15904 = distinct !DILexicalBlock(scope: !15905, file: !13617, line: 253, column: 2)
!15905 = distinct !DILexicalBlock(scope: !15900, file: !13617, line: 253, column: 2)
!15906 = !DILocation(line: 0, scope: !15184, inlinedAt: !15902)
!15907 = !DILocation(line: 48, column: 9, scope: !15188, inlinedAt: !15903)
!15908 = !DILocation(line: 253, column: 2, scope: !15905)
!15909 = !DILocation(line: 253, column: 2, scope: !15910)
!15910 = distinct !DILexicalBlock(scope: !15904, file: !13617, line: 253, column: 2)
!15911 = !DILocation(line: 254, column: 2, scope: !15912)
!15912 = distinct !DILexicalBlock(scope: !15913, file: !13617, line: 254, column: 2)
!15913 = distinct !DILexicalBlock(scope: !15900, file: !13617, line: 254, column: 2)
!15914 = !DILocation(line: 254, column: 2, scope: !15913)
!15915 = !DILocation(line: 254, column: 2, scope: !15916)
!15916 = distinct !DILexicalBlock(scope: !15912, file: !13617, line: 254, column: 2)
!15917 = !DILocation(line: 256, column: 2, scope: !15900)
!15918 = !DILocation(line: 258, column: 2, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15900, file: !13617, line: 258, column: 2)
!15920 = !{i64 2154877471}
!15921 = !DILocation(line: 259, column: 1, scope: !15900)
!15922 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2454, file: !2454, line: 996, type: !3082, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15923)
!15923 = !{!15924, !15926}
!15924 = !DILocalVariable(name: "__i", scope: !15925, file: !2454, line: 998, type: !14449)
!15925 = distinct !DILexicalBlock(scope: !15922, file: !2454, line: 998, column: 2)
!15926 = !DILocalVariable(name: "__key", scope: !15925, file: !2454, line: 998, type: !14449)
!15927 = !DILocation(line: 0, scope: !15925)
!15928 = !DILocation(line: 0, scope: !14457, inlinedAt: !15929)
!15929 = distinct !DILocation(line: 998, column: 2, scope: !15925)
!15930 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !15931)
!15931 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !15929)
!15932 = !DILocation(line: 0, scope: !14466, inlinedAt: !15931)
!15933 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !15929)
!15934 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !15929)
!15935 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15929)
!15936 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !15929)
!15937 = !DILocation(line: 999, column: 3, scope: !15938)
!15938 = distinct !DILexicalBlock(scope: !15939, file: !2454, line: 999, column: 3)
!15939 = distinct !DILexicalBlock(scope: !15940, file: !2454, line: 999, column: 3)
!15940 = distinct !DILexicalBlock(scope: !15941, file: !2454, line: 998, column: 26)
!15941 = distinct !DILexicalBlock(scope: !15925, file: !2454, line: 998, column: 2)
!15942 = !DILocation(line: 999, column: 3, scope: !15939)
!15943 = !DILocation(line: 999, column: 3, scope: !15944)
!15944 = distinct !DILexicalBlock(scope: !15938, file: !2454, line: 999, column: 3)
!15945 = !DILocation(line: 1031, column: 3, scope: !15184, inlinedAt: !15946)
!15946 = distinct !DILocation(line: 48, column: 10, scope: !15188, inlinedAt: !15947)
!15947 = distinct !DILocation(line: 1000, column: 3, scope: !15948)
!15948 = distinct !DILexicalBlock(scope: !15949, file: !2454, line: 1000, column: 3)
!15949 = distinct !DILexicalBlock(scope: !15940, file: !2454, line: 1000, column: 3)
!15950 = !DILocation(line: 0, scope: !15184, inlinedAt: !15946)
!15951 = !DILocation(line: 48, column: 9, scope: !15188, inlinedAt: !15947)
!15952 = !DILocation(line: 1000, column: 3, scope: !15949)
!15953 = !DILocation(line: 1000, column: 3, scope: !15954)
!15954 = distinct !DILexicalBlock(scope: !15948, file: !2454, line: 1000, column: 3)
!15955 = !DILocation(line: 1002, column: 5, scope: !15940)
!15956 = !DILocation(line: 1002, column: 20, scope: !15940)
!15957 = !DILocation(line: 1002, column: 3, scope: !15940)
!15958 = !DILocation(line: 1003, column: 3, scope: !15940)
!15959 = !DILocation(line: 0, scope: !14491, inlinedAt: !15960)
!15960 = distinct !DILocation(line: 998, column: 2, scope: !15941)
!15961 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !15960)
!15962 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !15960)
!15963 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15960)
!15964 = !DILocation(line: 0, scope: !14505, inlinedAt: !15965)
!15965 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !15960)
!15966 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !15965)
!15967 = !DILocation(line: 1011, column: 2, scope: !15922)
!15968 = !DILocation(line: 1012, column: 1, scope: !15922)
!15969 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2454, file: !2454, line: 1014, type: !14806, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!15970 = !DILocation(line: 1028, column: 25, scope: !15969)
!15971 = !DILocation(line: 1028, column: 2, scope: !15969)
!15972 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2454, file: !2454, line: 1155, type: !15973, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15975)
!15973 = !DISubroutineType(types: !15974)
!15974 = !{!145, !2375, !2375}
!15975 = !{!15976, !15977, !15978, !15979, !15980}
!15976 = !DILocalVariable(name: "a", arg: 1, scope: !15972, file: !2454, line: 1155, type: !2375)
!15977 = !DILocalVariable(name: "b", arg: 2, scope: !15972, file: !2454, line: 1155, type: !2375)
!15978 = !DILocalVariable(name: "thread_a", scope: !15972, file: !2454, line: 1157, type: !2346)
!15979 = !DILocalVariable(name: "thread_b", scope: !15972, file: !2454, line: 1157, type: !2346)
!15980 = !DILocalVariable(name: "cmp", scope: !15972, file: !2454, line: 1158, type: !895)
!15981 = !DILocation(line: 0, scope: !15972)
!15982 = !DILocation(line: 1160, column: 13, scope: !15972)
!15983 = !DILocation(line: 1161, column: 13, scope: !15972)
!15984 = !DILocation(line: 1163, column: 8, scope: !15972)
!15985 = !DILocation(line: 1165, column: 10, scope: !15986)
!15986 = distinct !DILexicalBlock(scope: !15972, file: !2454, line: 1165, column: 6)
!15987 = !DILocation(line: 1165, column: 6, scope: !15972)
!15988 = !DILocation(line: 1167, column: 17, scope: !15989)
!15989 = distinct !DILexicalBlock(scope: !15986, file: !2454, line: 1167, column: 13)
!15990 = !DILocation(line: 1167, column: 13, scope: !15986)
!15991 = !DILocation(line: 1170, column: 25, scope: !15992)
!15992 = distinct !DILexicalBlock(scope: !15989, file: !2454, line: 1169, column: 9)
!15993 = !DILocation(line: 1170, column: 52, scope: !15992)
!15994 = !DILocation(line: 1170, column: 35, scope: !15992)
!15995 = !DILocation(line: 1170, column: 3, scope: !15992)
!15996 = !DILocation(line: 0, scope: !15986)
!15997 = !DILocation(line: 1173, column: 1, scope: !15972)
!15998 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2454, file: !2454, line: 1175, type: !15999, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16014)
!15999 = !DISubroutineType(types: !16000)
!16000 = !{null, !16001, !2346}
!16001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16002, size: 32)
!16002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16003, line: 37, size: 128, elements: !16004)
!16003 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16004 = !{!16005, !16013}
!16005 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16002, file: !16003, line: 38, baseType: !16006, size: 96)
!16006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !335, line: 83, size: 96, elements: !16007)
!16007 = !{!16008, !16009, !16012}
!16008 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16006, file: !335, line: 84, baseType: !2375, size: 32)
!16009 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16006, file: !335, line: 85, baseType: !16010, size: 32, offset: 32)
!16010 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !335, line: 81, baseType: !16011)
!16011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15973, size: 32)
!16012 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16006, file: !335, line: 86, baseType: !107, size: 32, offset: 64)
!16013 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16002, file: !16003, line: 39, baseType: !107, size: 32, offset: 96)
!16014 = !{!16015, !16016, !16017, !16018, !16027}
!16015 = !DILocalVariable(name: "pq", arg: 1, scope: !15998, file: !2454, line: 1175, type: !16001)
!16016 = !DILocalVariable(name: "thread", arg: 2, scope: !15998, file: !2454, line: 1175, type: !2346)
!16017 = !DILocalVariable(name: "t", scope: !15998, file: !2454, line: 1177, type: !2346)
!16018 = !DILocalVariable(name: "__f", scope: !16019, file: !2454, line: 1190, type: !16022)
!16019 = distinct !DILexicalBlock(scope: !16020, file: !2454, line: 1190, column: 3)
!16020 = distinct !DILexicalBlock(scope: !16021, file: !2454, line: 1189, column: 27)
!16021 = distinct !DILexicalBlock(scope: !15998, file: !2454, line: 1189, column: 6)
!16022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !335, line: 155, size: 96, elements: !16023)
!16023 = !{!16024, !16025, !16026}
!16024 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16022, file: !335, line: 156, baseType: !2449, size: 32)
!16025 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16022, file: !335, line: 157, baseType: !194, size: 32, offset: 32)
!16026 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16022, file: !335, line: 158, baseType: !895, size: 32, offset: 64)
!16027 = !DILocalVariable(name: "n", scope: !16028, file: !2454, line: 1190, type: !2375)
!16028 = distinct !DILexicalBlock(scope: !16029, file: !2454, line: 1190, column: 3)
!16029 = distinct !DILexicalBlock(scope: !16019, file: !2454, line: 1190, column: 3)
!16030 = !DILocation(line: 0, scope: !15998)
!16031 = !DILocation(line: 1179, column: 2, scope: !16032)
!16032 = distinct !DILexicalBlock(scope: !16033, file: !2454, line: 1179, column: 2)
!16033 = distinct !DILexicalBlock(scope: !15998, file: !2454, line: 1179, column: 2)
!16034 = !DILocation(line: 1179, column: 2, scope: !16033)
!16035 = !DILocation(line: 1179, column: 2, scope: !16036)
!16036 = distinct !DILexicalBlock(scope: !16032, file: !2454, line: 1179, column: 2)
!16037 = !DILocation(line: 1181, column: 31, scope: !15998)
!16038 = !DILocation(line: 1181, column: 45, scope: !15998)
!16039 = !DILocation(line: 1181, column: 15, scope: !15998)
!16040 = !DILocation(line: 1181, column: 25, scope: !15998)
!16041 = !DILocation(line: 1189, column: 11, scope: !16021)
!16042 = !DILocation(line: 1189, column: 7, scope: !16021)
!16043 = !DILocation(line: 1189, column: 6, scope: !15998)
!16044 = !DILocation(line: 1190, column: 3, scope: !16019)
!16045 = !DILocation(line: 1190, column: 3, scope: !16028)
!16046 = !DILocation(line: 0, scope: !16028)
!16047 = !DILocation(line: 1190, column: 3, scope: !16029)
!16048 = !DILocation(line: 1193, column: 2, scope: !16020)
!16049 = !DILocation(line: 1191, column: 42, scope: !16050)
!16050 = distinct !DILexicalBlock(scope: !16029, file: !2454, line: 1190, column: 54)
!16051 = !DILocation(line: 1191, column: 12, scope: !16050)
!16052 = !DILocation(line: 1191, column: 22, scope: !16050)
!16053 = distinct !{!16053, !16044, !16054}
!16054 = !DILocation(line: 1192, column: 3, scope: !16019)
!16055 = !DILocation(line: 1195, column: 17, scope: !15998)
!16056 = !DILocation(line: 1195, column: 37, scope: !15998)
!16057 = !DILocation(line: 1195, column: 2, scope: !15998)
!16058 = !DILocation(line: 1196, column: 1, scope: !15998)
!16059 = !DISubprogram(name: "z_rb_foreach_next", scope: !335, file: !335, line: 176, type: !16060, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!16060 = !DISubroutineType(types: !16061)
!16061 = !{!2375, !16062, !16063}
!16062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16006, size: 32)
!16063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16022, size: 32)
!16064 = !DISubprogram(name: "rb_insert", scope: !335, file: !335, line: 105, type: !16065, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!16065 = !DISubroutineType(types: !16066)
!16066 = !{null, !16062, !2375}
!16067 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2454, file: !2454, line: 1198, type: !15999, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16068)
!16068 = !{!16069, !16070}
!16069 = !DILocalVariable(name: "pq", arg: 1, scope: !16067, file: !2454, line: 1198, type: !16001)
!16070 = !DILocalVariable(name: "thread", arg: 2, scope: !16067, file: !2454, line: 1198, type: !2346)
!16071 = !DILocation(line: 0, scope: !16067)
!16072 = !DILocation(line: 1200, column: 2, scope: !16073)
!16073 = distinct !DILexicalBlock(scope: !16074, file: !2454, line: 1200, column: 2)
!16074 = distinct !DILexicalBlock(scope: !16067, file: !2454, line: 1200, column: 2)
!16075 = !DILocation(line: 1200, column: 2, scope: !16074)
!16076 = !DILocation(line: 1200, column: 2, scope: !16077)
!16077 = distinct !DILexicalBlock(scope: !16073, file: !2454, line: 1200, column: 2)
!16078 = !DILocation(line: 1202, column: 17, scope: !16067)
!16079 = !DILocation(line: 1202, column: 37, scope: !16067)
!16080 = !DILocation(line: 1202, column: 2, scope: !16067)
!16081 = !DILocation(line: 1204, column: 16, scope: !16082)
!16082 = distinct !DILexicalBlock(scope: !16067, file: !2454, line: 1204, column: 6)
!16083 = !DILocation(line: 1204, column: 7, scope: !16082)
!16084 = !DILocation(line: 1204, column: 6, scope: !16067)
!16085 = !DILocation(line: 1205, column: 7, scope: !16086)
!16086 = distinct !DILexicalBlock(scope: !16082, file: !2454, line: 1204, column: 22)
!16087 = !DILocation(line: 1205, column: 22, scope: !16086)
!16088 = !DILocation(line: 1206, column: 2, scope: !16086)
!16089 = !DILocation(line: 1207, column: 1, scope: !16067)
!16090 = !DISubprogram(name: "rb_remove", scope: !335, file: !335, line: 110, type: !16065, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!16091 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2454, file: !2454, line: 1209, type: !16092, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16094)
!16092 = !DISubroutineType(types: !16093)
!16093 = !{!2346, !16001}
!16094 = !{!16095, !16096, !16097}
!16095 = !DILocalVariable(name: "pq", arg: 1, scope: !16091, file: !2454, line: 1209, type: !16001)
!16096 = !DILocalVariable(name: "thread", scope: !16091, file: !2454, line: 1211, type: !2346)
!16097 = !DILocalVariable(name: "n", scope: !16091, file: !2454, line: 1212, type: !2375)
!16098 = !DILocation(line: 0, scope: !16091)
!16099 = !DILocation(line: 1212, column: 37, scope: !16091)
!16100 = !DILocation(line: 1212, column: 21, scope: !16091)
!16101 = !DILocation(line: 1217, column: 2, scope: !16091)
!16102 = distinct !DISubprogram(name: "rb_get_min", scope: !335, file: !335, line: 115, type: !16103, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16105)
!16103 = !DISubroutineType(types: !16104)
!16104 = !{!2375, !16062}
!16105 = !{!16106}
!16106 = !DILocalVariable(name: "tree", arg: 1, scope: !16102, file: !335, line: 115, type: !16062)
!16107 = !DILocation(line: 0, scope: !16102)
!16108 = !DILocation(line: 117, column: 9, scope: !16102)
!16109 = !DILocation(line: 117, column: 2, scope: !16102)
!16110 = !DISubprogram(name: "z_rb_get_minmax", scope: !335, file: !335, line: 100, type: !16111, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!16111 = !DISubroutineType(types: !16112)
!16112 = !{!2375, !16062, !195}
!16113 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2454, file: !2454, line: 1246, type: !16114, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16122)
!16114 = !DISubroutineType(types: !16115)
!16115 = !{!2346, !16116}
!16116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16117, size: 32)
!16117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16003, line: 53, size: 2080, elements: !16118)
!16118 = !{!16119, !16121}
!16119 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16117, file: !16003, line: 54, baseType: !16120, size: 2048)
!16120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2382, size: 2048, elements: !394)
!16121 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16117, file: !16003, line: 55, baseType: !32, size: 32, offset: 2048)
!16122 = !{!16123, !16124, !16125, !16126}
!16123 = !DILocalVariable(name: "pq", arg: 1, scope: !16113, file: !2454, line: 1246, type: !16116)
!16124 = !DILocalVariable(name: "thread", scope: !16113, file: !2454, line: 1252, type: !2346)
!16125 = !DILocalVariable(name: "l", scope: !16113, file: !2454, line: 1253, type: !14683)
!16126 = !DILocalVariable(name: "n", scope: !16113, file: !2454, line: 1254, type: !2450)
!16127 = !DILocation(line: 0, scope: !16113)
!16128 = !DILocation(line: 1248, column: 11, scope: !16129)
!16129 = distinct !DILexicalBlock(scope: !16113, file: !2454, line: 1248, column: 6)
!16130 = !DILocation(line: 1248, column: 7, scope: !16129)
!16131 = !DILocation(line: 1248, column: 6, scope: !16113)
!16132 = !DILocation(line: 1253, column: 31, scope: !16113)
!16133 = !DILocation(line: 1253, column: 20, scope: !16113)
!16134 = !DILocation(line: 1254, column: 19, scope: !16113)
!16135 = !DILocation(line: 1260, column: 1, scope: !16113)
!16136 = distinct !DISubprogram(name: "z_unpend_all", scope: !2454, file: !2454, line: 1262, type: !16137, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16139)
!16137 = !DISubroutineType(types: !16138)
!16138 = !{!107, !2377}
!16139 = !{!16140, !16141, !16142}
!16140 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16136, file: !2454, line: 1262, type: !2377)
!16141 = !DILocalVariable(name: "need_sched", scope: !16136, file: !2454, line: 1264, type: !107)
!16142 = !DILocalVariable(name: "thread", scope: !16136, file: !2454, line: 1265, type: !2346)
!16143 = !DILocation(line: 0, scope: !16136)
!16144 = !DILocation(line: 1267, column: 19, scope: !16136)
!16145 = !DILocation(line: 1267, column: 41, scope: !16136)
!16146 = !DILocation(line: 1267, column: 2, scope: !16136)
!16147 = !DILocation(line: 1268, column: 3, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16136, file: !2454, line: 1267, column: 50)
!16149 = !DILocation(line: 1269, column: 3, scope: !16148)
!16150 = distinct !{!16150, !16146, !16151}
!16151 = !DILocation(line: 1271, column: 2, scope: !16136)
!16152 = !DILocation(line: 1273, column: 2, scope: !16136)
!16153 = distinct !DISubprogram(name: "z_waitq_head", scope: !13978, file: !13978, line: 52, type: !15684, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16154)
!16154 = !{!16155}
!16155 = !DILocalVariable(name: "w", arg: 1, scope: !16153, file: !13978, line: 52, type: !2377)
!16156 = !DILocation(line: 0, scope: !16153)
!16157 = !DILocation(line: 54, column: 52, scope: !16153)
!16158 = !DILocation(line: 54, column: 28, scope: !16153)
!16159 = !DILocation(line: 54, column: 9, scope: !16153)
!16160 = !DILocation(line: 54, column: 2, scope: !16153)
!16161 = distinct !DISubprogram(name: "init_ready_q", scope: !2454, file: !2454, line: 1276, type: !16162, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16169)
!16162 = !DISubroutineType(types: !16163)
!16163 = !{null, !16164}
!16164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16165, size: 32)
!16165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !16166)
!16166 = !{!16167, !16168}
!16167 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16165, file: !345, line: 86, baseType: !2346, size: 32)
!16168 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16165, file: !345, line: 90, baseType: !2382, size: 64, offset: 32)
!16169 = !{!16170}
!16170 = !DILocalVariable(name: "rq", arg: 1, scope: !16161, file: !2454, line: 1276, type: !16164)
!16171 = !DILocation(line: 0, scope: !16161)
!16172 = !DILocation(line: 1289, column: 22, scope: !16161)
!16173 = !DILocation(line: 1289, column: 2, scope: !16161)
!16174 = !DILocation(line: 1291, column: 1, scope: !16161)
!16175 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !16176, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16178)
!16176 = !DISubroutineType(types: !16177)
!16177 = !{null, !14683}
!16178 = !{!16179}
!16179 = !DILocalVariable(name: "list", arg: 1, scope: !16175, file: !319, line: 197, type: !14683)
!16180 = !DILocation(line: 0, scope: !16175)
!16181 = !DILocation(line: 199, column: 8, scope: !16175)
!16182 = !DILocation(line: 199, column: 13, scope: !16175)
!16183 = !DILocation(line: 200, column: 8, scope: !16175)
!16184 = !DILocation(line: 200, column: 13, scope: !16175)
!16185 = !DILocation(line: 201, column: 1, scope: !16175)
!16186 = distinct !DISubprogram(name: "z_sched_init", scope: !2454, file: !2454, line: 1293, type: !3082, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!16187 = !DILocation(line: 1302, column: 2, scope: !16186)
!16188 = !DILocation(line: 1306, column: 2, scope: !16186)
!16189 = !DILocation(line: 1309, column: 1, scope: !16186)
!16190 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2454, file: !2454, line: 1311, type: !16191, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16194)
!16191 = !DISubroutineType(types: !16192)
!16192 = !{!107, !16193}
!16193 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2346)
!16194 = !{!16195}
!16195 = !DILocalVariable(name: "thread", arg: 1, scope: !16190, file: !2454, line: 1311, type: !16193)
!16196 = !DILocation(line: 0, scope: !16190)
!16197 = !DILocation(line: 1313, column: 22, scope: !16190)
!16198 = !DILocation(line: 1313, column: 9, scope: !16190)
!16199 = !DILocation(line: 1313, column: 2, scope: !16190)
!16200 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2454, file: !2454, line: 1325, type: !16201, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16203)
!16201 = !DISubroutineType(types: !16202)
!16202 = !{null, !16193, !107}
!16203 = !{!16204, !16205, !16206}
!16204 = !DILocalVariable(name: "thread", arg: 1, scope: !16200, file: !2454, line: 1325, type: !16193)
!16205 = !DILocalVariable(name: "prio", arg: 2, scope: !16200, file: !2454, line: 1325, type: !107)
!16206 = !DILocalVariable(name: "th", scope: !16200, file: !2454, line: 1334, type: !2346)
!16207 = !DILocation(line: 0, scope: !16200)
!16208 = !DILocation(line: 1331, column: 2, scope: !16209)
!16209 = distinct !DILexicalBlock(scope: !16210, file: !2454, line: 1331, column: 2)
!16210 = distinct !DILexicalBlock(scope: !16211, file: !2454, line: 1331, column: 2)
!16211 = distinct !DILexicalBlock(scope: !16200, file: !2454, line: 1331, column: 2)
!16212 = !DILocation(line: 1331, column: 2, scope: !16213)
!16213 = distinct !DILexicalBlock(scope: !16209, file: !2454, line: 1331, column: 2)
!16214 = !DILocation(line: 1031, column: 3, scope: !15184, inlinedAt: !16215)
!16215 = distinct !DILocation(line: 48, column: 10, scope: !15188, inlinedAt: !16216)
!16216 = distinct !DILocation(line: 1332, column: 2, scope: !16217)
!16217 = distinct !DILexicalBlock(scope: !16218, file: !2454, line: 1332, column: 2)
!16218 = distinct !DILexicalBlock(scope: !16200, file: !2454, line: 1332, column: 2)
!16219 = !DILocation(line: 0, scope: !15184, inlinedAt: !16215)
!16220 = !DILocation(line: 48, column: 9, scope: !15188, inlinedAt: !16216)
!16221 = !DILocation(line: 1332, column: 2, scope: !16218)
!16222 = !DILocation(line: 1332, column: 2, scope: !16223)
!16223 = distinct !DILexicalBlock(scope: !16217, file: !2454, line: 1332, column: 2)
!16224 = !DILocation(line: 1336, column: 2, scope: !16200)
!16225 = !DILocation(line: 1337, column: 1, scope: !16200)
!16226 = distinct !DISubprogram(name: "k_can_yield", scope: !2454, file: !2454, line: 1384, type: !7307, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!16227 = !DILocation(line: 1386, column: 11, scope: !16226)
!16228 = !DILocation(line: 1386, column: 29, scope: !16226)
!16229 = !DILocation(line: 1386, column: 32, scope: !16226)
!16230 = !DILocation(line: 1386, column: 46, scope: !16226)
!16231 = !DILocation(line: 1387, column: 28, scope: !16226)
!16232 = !DILocation(line: 1387, column: 4, scope: !16226)
!16233 = !DILocation(line: 1386, column: 2, scope: !16226)
!16234 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !406, file: !406, line: 989, type: !7307, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!16235 = !DILocation(line: 993, column: 10, scope: !16234)
!16236 = !DILocation(line: 993, column: 2, scope: !16234)
!16237 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2454, file: !2454, line: 1390, type: !3082, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16238)
!16238 = !{!16239}
!16239 = !DILocalVariable(name: "key", scope: !16237, file: !2454, line: 1396, type: !14449)
!16240 = !DILocation(line: 1031, column: 3, scope: !15184, inlinedAt: !16241)
!16241 = distinct !DILocation(line: 48, column: 10, scope: !15188, inlinedAt: !16242)
!16242 = distinct !DILocation(line: 1392, column: 2, scope: !16243)
!16243 = distinct !DILexicalBlock(scope: !16244, file: !2454, line: 1392, column: 2)
!16244 = distinct !DILexicalBlock(scope: !16237, file: !2454, line: 1392, column: 2)
!16245 = !DILocation(line: 0, scope: !15184, inlinedAt: !16241)
!16246 = !DILocation(line: 48, column: 9, scope: !15188, inlinedAt: !16242)
!16247 = !DILocation(line: 1392, column: 2, scope: !16244)
!16248 = !DILocation(line: 1392, column: 2, scope: !16249)
!16249 = distinct !DILexicalBlock(scope: !16243, file: !2454, line: 1392, column: 2)
!16250 = !DILocation(line: 0, scope: !14457, inlinedAt: !16251)
!16251 = distinct !DILocation(line: 1396, column: 25, scope: !16237)
!16252 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !16253)
!16253 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !16251)
!16254 = !DILocation(line: 0, scope: !14466, inlinedAt: !16253)
!16255 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !16251)
!16256 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !16251)
!16257 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !16251)
!16258 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !16251)
!16259 = !DILocation(line: 0, scope: !16237)
!16260 = !DILocation(line: 1400, column: 18, scope: !16261)
!16261 = distinct !DILexicalBlock(scope: !16262, file: !2454, line: 1399, column: 36)
!16262 = distinct !DILexicalBlock(scope: !16237, file: !2454, line: 1398, column: 6)
!16263 = !DILocation(line: 0, scope: !14649, inlinedAt: !16264)
!16264 = distinct !DILocation(line: 1400, column: 3, scope: !16261)
!16265 = !DILocation(line: 266, column: 15, scope: !14649, inlinedAt: !16264)
!16266 = !DILocation(line: 266, column: 28, scope: !14649, inlinedAt: !16264)
!16267 = !DILocation(line: 0, scope: !14657, inlinedAt: !16268)
!16268 = distinct !DILocation(line: 268, column: 3, scope: !14661, inlinedAt: !16264)
!16269 = !DILocation(line: 234, column: 2, scope: !14657, inlinedAt: !16268)
!16270 = !DILocation(line: 1402, column: 15, scope: !16237)
!16271 = !DILocation(line: 0, scope: !14666, inlinedAt: !16272)
!16272 = distinct !DILocation(line: 1402, column: 2, scope: !16237)
!16273 = !DILocation(line: 252, column: 15, scope: !14666, inlinedAt: !16272)
!16274 = !DILocation(line: 252, column: 28, scope: !14666, inlinedAt: !16272)
!16275 = !DILocation(line: 0, scope: !14673, inlinedAt: !16276)
!16276 = distinct !DILocation(line: 254, column: 3, scope: !14677, inlinedAt: !16272)
!16277 = !DILocation(line: 0, scope: !14680, inlinedAt: !16278)
!16278 = distinct !DILocation(line: 229, column: 2, scope: !14673, inlinedAt: !16276)
!16279 = !DILocation(line: 186, column: 2, scope: !14690, inlinedAt: !16278)
!16280 = !DILocation(line: 186, column: 2, scope: !14691, inlinedAt: !16278)
!16281 = !DILocation(line: 186, column: 2, scope: !14694, inlinedAt: !16278)
!16282 = !DILocation(line: 188, column: 2, scope: !14696, inlinedAt: !16278)
!16283 = !DILocation(line: 188, column: 2, scope: !14698, inlinedAt: !16278)
!16284 = !DILocation(line: 0, scope: !14696, inlinedAt: !16278)
!16285 = !DILocation(line: 189, column: 7, scope: !14701, inlinedAt: !16278)
!16286 = !DILocation(line: 189, column: 35, scope: !14701, inlinedAt: !16278)
!16287 = !DILocation(line: 189, column: 7, scope: !14702, inlinedAt: !16278)
!16288 = !DILocation(line: 191, column: 21, scope: !14706, inlinedAt: !16278)
!16289 = !DILocation(line: 190, column: 4, scope: !14706, inlinedAt: !16278)
!16290 = !DILocation(line: 192, column: 4, scope: !14706, inlinedAt: !16278)
!16291 = distinct !{!16291, !16282, !16292}
!16292 = !DILocation(line: 194, column: 2, scope: !14696, inlinedAt: !16278)
!16293 = !DILocation(line: 196, column: 37, scope: !14680, inlinedAt: !16278)
!16294 = !DILocation(line: 196, column: 2, scope: !14680, inlinedAt: !16278)
!16295 = !DILocation(line: 197, column: 1, scope: !14680, inlinedAt: !16278)
!16296 = !DILocation(line: 1403, column: 2, scope: !16237)
!16297 = !DILocation(line: 0, scope: !15135, inlinedAt: !16298)
!16298 = distinct !DILocation(line: 1404, column: 2, scope: !16237)
!16299 = !DILocation(line: 0, scope: !15144, inlinedAt: !16300)
!16300 = distinct !DILocation(line: 195, column: 2, scope: !15135, inlinedAt: !16298)
!16301 = !DILocation(line: 225, column: 2, scope: !15151, inlinedAt: !16300)
!16302 = !DILocation(line: 225, column: 2, scope: !15152, inlinedAt: !16300)
!16303 = !DILocation(line: 225, column: 2, scope: !15155, inlinedAt: !16300)
!16304 = !DILocation(line: 196, column: 9, scope: !15135, inlinedAt: !16298)
!16305 = !DILocation(line: 1405, column: 1, scope: !16237)
!16306 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2454, file: !2454, line: 1459, type: !16307, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16309)
!16307 = !DISubroutineType(types: !16308)
!16308 = !{!895, !15345}
!16309 = !{!16310, !16311, !16312}
!16310 = !DILocalVariable(name: "timeout", arg: 1, scope: !16306, file: !2454, line: 1459, type: !15345)
!16311 = !DILocalVariable(name: "ticks", scope: !16306, file: !2454, line: 1461, type: !564)
!16312 = !DILocalVariable(name: "ret", scope: !16306, file: !2454, line: 1480, type: !895)
!16313 = !DILocation(line: 0, scope: !16306)
!16314 = !DILocation(line: 1031, column: 3, scope: !15184, inlinedAt: !16315)
!16315 = distinct !DILocation(line: 48, column: 10, scope: !15188, inlinedAt: !16316)
!16316 = distinct !DILocation(line: 1463, column: 2, scope: !16317)
!16317 = distinct !DILexicalBlock(scope: !16318, file: !2454, line: 1463, column: 2)
!16318 = distinct !DILexicalBlock(scope: !16306, file: !2454, line: 1463, column: 2)
!16319 = !DILocation(line: 0, scope: !15184, inlinedAt: !16315)
!16320 = !DILocation(line: 48, column: 9, scope: !15188, inlinedAt: !16316)
!16321 = !DILocation(line: 1463, column: 2, scope: !16318)
!16322 = !DILocation(line: 1463, column: 2, scope: !16323)
!16323 = distinct !DILexicalBlock(scope: !16317, file: !2454, line: 1463, column: 2)
!16324 = !DILocation(line: 1468, column: 6, scope: !16325)
!16325 = distinct !DILexicalBlock(scope: !16306, file: !2454, line: 1468, column: 6)
!16326 = !DILocation(line: 1468, column: 6, scope: !16306)
!16327 = !DILocation(line: 1469, column: 20, scope: !16328)
!16328 = distinct !DILexicalBlock(scope: !16325, file: !2454, line: 1468, column: 40)
!16329 = !DILocation(line: 1469, column: 3, scope: !16328)
!16330 = !DILocation(line: 1473, column: 3, scope: !16328)
!16331 = !DILocation(line: 1478, column: 10, scope: !16306)
!16332 = !DILocation(line: 1480, column: 16, scope: !16306)
!16333 = !DILocation(line: 1485, column: 1, scope: !16306)
!16334 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4410, file: !4410, line: 310, type: !16335, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16337)
!16335 = !DISubroutineType(types: !16336)
!16336 = !{null, !16193}
!16337 = !{!16338}
!16338 = !DILocalVariable(name: "thread", arg: 1, scope: !16334, file: !4410, line: 310, type: !16193)
!16339 = !DILocation(line: 0, scope: !16334)
!16340 = !DILocation(line: 319, column: 2, scope: !16341)
!16341 = distinct !DILexicalBlock(scope: !16334, file: !4410, line: 319, column: 2)
!16342 = !{i64 2154793629}
!16343 = !DILocation(line: 320, column: 2, scope: !16334)
!16344 = !DILocation(line: 321, column: 1, scope: !16334)
!16345 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2454, file: !2454, line: 1415, type: !16346, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16348)
!16346 = !DISubroutineType(types: !16347)
!16347 = !{!895, !564}
!16348 = !{!16349, !16350, !16351, !16352}
!16349 = !DILocalVariable(name: "ticks", arg: 1, scope: !16345, file: !2454, line: 1415, type: !564)
!16350 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16345, file: !2454, line: 1418, type: !152)
!16351 = !DILocalVariable(name: "timeout", scope: !16345, file: !2454, line: 1430, type: !15345)
!16352 = !DILocalVariable(name: "key", scope: !16345, file: !2454, line: 1437, type: !14449)
!16353 = !DILocation(line: 0, scope: !16345)
!16354 = !DILocation(line: 1031, column: 3, scope: !15184, inlinedAt: !16355)
!16355 = distinct !DILocation(line: 48, column: 10, scope: !15188, inlinedAt: !16356)
!16356 = distinct !DILocation(line: 1420, column: 2, scope: !16357)
!16357 = distinct !DILexicalBlock(scope: !16358, file: !2454, line: 1420, column: 2)
!16358 = distinct !DILexicalBlock(scope: !16345, file: !2454, line: 1420, column: 2)
!16359 = !DILocation(line: 0, scope: !15184, inlinedAt: !16355)
!16360 = !DILocation(line: 48, column: 9, scope: !15188, inlinedAt: !16356)
!16361 = !DILocation(line: 1420, column: 2, scope: !16358)
!16362 = !DILocation(line: 1420, column: 2, scope: !16363)
!16363 = distinct !DILexicalBlock(scope: !16357, file: !2454, line: 1420, column: 2)
!16364 = !DILocation(line: 1425, column: 12, scope: !16365)
!16365 = distinct !DILexicalBlock(scope: !16345, file: !2454, line: 1425, column: 6)
!16366 = !DILocation(line: 1425, column: 6, scope: !16345)
!16367 = !DILocation(line: 1426, column: 3, scope: !16368)
!16368 = distinct !DILexicalBlock(scope: !16365, file: !2454, line: 1425, column: 18)
!16369 = !DILocation(line: 1427, column: 3, scope: !16368)
!16370 = !DILocation(line: 1431, column: 24, scope: !16371)
!16371 = distinct !DILexicalBlock(scope: !16345, file: !2454, line: 1431, column: 6)
!16372 = !DILocation(line: 1431, column: 6, scope: !16345)
!16373 = !DILocation(line: 1432, column: 35, scope: !16374)
!16374 = distinct !DILexicalBlock(scope: !16371, file: !2454, line: 1431, column: 30)
!16375 = !DILocation(line: 1432, column: 27, scope: !16374)
!16376 = !DILocation(line: 1433, column: 2, scope: !16374)
!16377 = !DILocation(line: 1434, column: 27, scope: !16378)
!16378 = distinct !DILexicalBlock(scope: !16371, file: !2454, line: 1433, column: 9)
!16379 = !DILocation(line: 0, scope: !16371)
!16380 = !DILocation(line: 0, scope: !14457, inlinedAt: !16381)
!16381 = distinct !DILocation(line: 1437, column: 25, scope: !16345)
!16382 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !16383)
!16383 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !16381)
!16384 = !DILocation(line: 0, scope: !14466, inlinedAt: !16383)
!16385 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !16381)
!16386 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !16381)
!16387 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !16381)
!16388 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !16381)
!16389 = !DILocation(line: 1440, column: 20, scope: !16345)
!16390 = !DILocation(line: 1440, column: 18, scope: !16345)
!16391 = !DILocation(line: 1442, column: 2, scope: !16345)
!16392 = !DILocation(line: 1443, column: 23, scope: !16345)
!16393 = !DILocation(line: 1443, column: 2, scope: !16345)
!16394 = !DILocation(line: 1444, column: 29, scope: !16345)
!16395 = !DILocation(line: 1444, column: 2, scope: !16345)
!16396 = !DILocation(line: 0, scope: !15135, inlinedAt: !16397)
!16397 = distinct !DILocation(line: 1446, column: 8, scope: !16345)
!16398 = !DILocation(line: 0, scope: !15144, inlinedAt: !16399)
!16399 = distinct !DILocation(line: 195, column: 2, scope: !15135, inlinedAt: !16397)
!16400 = !DILocation(line: 225, column: 2, scope: !15151, inlinedAt: !16399)
!16401 = !DILocation(line: 225, column: 2, scope: !15152, inlinedAt: !16399)
!16402 = !DILocation(line: 225, column: 2, scope: !15155, inlinedAt: !16399)
!16403 = !DILocation(line: 196, column: 9, scope: !15135, inlinedAt: !16397)
!16404 = !DILocation(line: 1448, column: 2, scope: !16405)
!16405 = distinct !DILexicalBlock(scope: !16406, file: !2454, line: 1448, column: 2)
!16406 = distinct !DILexicalBlock(scope: !16345, file: !2454, line: 1448, column: 2)
!16407 = !DILocation(line: 1448, column: 2, scope: !16406)
!16408 = !DILocation(line: 1448, column: 2, scope: !16409)
!16409 = distinct !DILexicalBlock(scope: !16405, file: !2454, line: 1448, column: 2)
!16410 = !DILocation(line: 1450, column: 10, scope: !16345)
!16411 = !DILocation(line: 1450, column: 45, scope: !16345)
!16412 = !DILocation(line: 1450, column: 43, scope: !16345)
!16413 = !DILocation(line: 1451, column: 6, scope: !16345)
!16414 = !DILocation(line: 1457, column: 1, scope: !16345)
!16415 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !8722, file: !8722, line: 1103, type: !14236, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16416)
!16416 = !{!16417}
!16417 = !DILocalVariable(name: "t", arg: 1, scope: !16415, file: !8722, line: 1103, type: !566)
!16418 = !DILocation(line: 0, scope: !16415)
!16419 = !DILocation(line: 0, scope: !14517, inlinedAt: !16420)
!16420 = distinct !DILocation(line: 1106, column: 9, scope: !16415)
!16421 = !DILocation(line: 139, column: 13, scope: !16422, inlinedAt: !16420)
!16422 = distinct !DILexicalBlock(scope: !16423, file: !8722, line: 138, column: 10)
!16423 = distinct !DILexicalBlock(scope: !16424, file: !8722, line: 136, column: 7)
!16424 = distinct !DILexicalBlock(scope: !14538, file: !8722, line: 134, column: 17)
!16425 = !DILocation(line: 1106, column: 2, scope: !16415)
!16426 = distinct !DISubprogram(name: "k_yield", scope: !4410, file: !4410, line: 140, type: !3082, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!16427 = !DILocation(line: 148, column: 2, scope: !16428)
!16428 = distinct !DILexicalBlock(scope: !16426, file: !4410, line: 148, column: 2)
!16429 = !{i64 2154792949}
!16430 = !DILocation(line: 149, column: 2, scope: !16426)
!16431 = !DILocation(line: 150, column: 1, scope: !16426)
!16432 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2454, file: !2454, line: 1495, type: !16433, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16435)
!16433 = !DISubroutineType(types: !16434)
!16434 = !{!895, !107}
!16435 = !{!16436, !16437}
!16436 = !DILocalVariable(name: "us", arg: 1, scope: !16432, file: !2454, line: 1495, type: !107)
!16437 = !DILocalVariable(name: "ticks", scope: !16432, file: !2454, line: 1497, type: !895)
!16438 = !DILocation(line: 0, scope: !16432)
!16439 = !DILocation(line: 1501, column: 31, scope: !16432)
!16440 = !DILocation(line: 1501, column: 10, scope: !16432)
!16441 = !DILocation(line: 1502, column: 23, scope: !16432)
!16442 = !DILocation(line: 1502, column: 10, scope: !16432)
!16443 = !DILocation(line: 1506, column: 31, scope: !16432)
!16444 = !DILocation(line: 1506, column: 9, scope: !16432)
!16445 = !DILocation(line: 1506, column: 2, scope: !16432)
!16446 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !8722, file: !8722, line: 571, type: !14236, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16447)
!16447 = !{!16448}
!16448 = !DILocalVariable(name: "t", arg: 1, scope: !16446, file: !8722, line: 571, type: !566)
!16449 = !DILocation(line: 0, scope: !16446)
!16450 = !DILocation(line: 0, scope: !14517, inlinedAt: !16451)
!16451 = distinct !DILocation(line: 574, column: 9, scope: !16446)
!16452 = !DILocation(line: 135, column: 5, scope: !16424, inlinedAt: !16451)
!16453 = !DILocation(line: 139, column: 13, scope: !16422, inlinedAt: !16451)
!16454 = !DILocation(line: 574, column: 2, scope: !16446)
!16455 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !8722, file: !8722, line: 1187, type: !14236, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16456)
!16456 = !{!16457}
!16457 = !DILocalVariable(name: "t", arg: 1, scope: !16455, file: !8722, line: 1187, type: !566)
!16458 = !DILocation(line: 0, scope: !16455)
!16459 = !DILocation(line: 0, scope: !14517, inlinedAt: !16460)
!16460 = distinct !DILocation(line: 1190, column: 9, scope: !16455)
!16461 = !DILocation(line: 145, column: 13, scope: !16462, inlinedAt: !16460)
!16462 = distinct !DILexicalBlock(scope: !14535, file: !8722, line: 144, column: 10)
!16463 = !DILocation(line: 1190, column: 2, scope: !16455)
!16464 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2454, file: !2454, line: 1517, type: !16335, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16465)
!16465 = !{!16466}
!16466 = !DILocalVariable(name: "thread", arg: 1, scope: !16464, file: !2454, line: 1517, type: !16193)
!16467 = !DILocation(line: 0, scope: !16464)
!16468 = !DILocation(line: 1521, column: 6, scope: !16469)
!16469 = distinct !DILexicalBlock(scope: !16464, file: !2454, line: 1521, column: 6)
!16470 = !DILocation(line: 1521, column: 6, scope: !16464)
!16471 = !DILocation(line: 1525, column: 6, scope: !16472)
!16472 = distinct !DILexicalBlock(scope: !16464, file: !2454, line: 1525, column: 6)
!16473 = !DILocation(line: 1525, column: 37, scope: !16472)
!16474 = !DILocation(line: 1525, column: 6, scope: !16464)
!16475 = !DILocation(line: 1527, column: 20, scope: !16476)
!16476 = distinct !DILexicalBlock(scope: !16477, file: !2454, line: 1527, column: 7)
!16477 = distinct !DILexicalBlock(scope: !16472, file: !2454, line: 1525, column: 42)
!16478 = !DILocation(line: 1527, column: 33, scope: !16476)
!16479 = !DILocation(line: 1527, column: 7, scope: !16477)
!16480 = !DILocation(line: 1532, column: 2, scope: !16464)
!16481 = !DILocation(line: 1533, column: 2, scope: !16464)
!16482 = !DILocation(line: 1031, column: 3, scope: !15184, inlinedAt: !16483)
!16483 = distinct !DILocation(line: 48, column: 10, scope: !15188, inlinedAt: !16484)
!16484 = distinct !DILocation(line: 1537, column: 7, scope: !16485)
!16485 = distinct !DILexicalBlock(scope: !16464, file: !2454, line: 1537, column: 6)
!16486 = !DILocation(line: 0, scope: !15184, inlinedAt: !16483)
!16487 = !DILocation(line: 48, column: 9, scope: !15188, inlinedAt: !16484)
!16488 = !DILocation(line: 1537, column: 6, scope: !16464)
!16489 = !DILocation(line: 1538, column: 3, scope: !16490)
!16490 = distinct !DILexicalBlock(scope: !16485, file: !2454, line: 1537, column: 25)
!16491 = !DILocation(line: 1539, column: 2, scope: !16490)
!16492 = !DILocation(line: 1540, column: 1, scope: !16464)
!16493 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13617, file: !13617, line: 101, type: !14598, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16494)
!16494 = !{!16495}
!16495 = !DILocalVariable(name: "thread", arg: 1, scope: !16493, file: !13617, line: 101, type: !2346)
!16496 = !DILocation(line: 0, scope: !16493)
!16497 = !DILocation(line: 103, column: 23, scope: !16493)
!16498 = !DILocation(line: 103, column: 36, scope: !16493)
!16499 = !DILocation(line: 103, column: 55, scope: !16493)
!16500 = !DILocation(line: 103, column: 2, scope: !16493)
!16501 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2454, file: !2454, line: 1567, type: !16502, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16504)
!16502 = !DISubroutineType(types: !16503)
!16503 = !{!16193}
!16504 = !{!16505}
!16505 = !DILocalVariable(name: "ret", scope: !16501, file: !2454, line: 1577, type: !16193)
!16506 = !DILocation(line: 1577, column: 30, scope: !16501)
!16507 = !DILocation(line: 0, scope: !16501)
!16508 = !DILocation(line: 1582, column: 2, scope: !16501)
!16509 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2454, file: !2454, line: 1593, type: !7610, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!16510 = !DILocation(line: 1031, column: 3, scope: !15184, inlinedAt: !16511)
!16511 = distinct !DILocation(line: 48, column: 10, scope: !15188, inlinedAt: !16512)
!16512 = distinct !DILocation(line: 1595, column: 10, scope: !16509)
!16513 = !DILocation(line: 0, scope: !15184, inlinedAt: !16511)
!16514 = !DILocation(line: 48, column: 9, scope: !15188, inlinedAt: !16512)
!16515 = !DILocation(line: 1595, column: 27, scope: !16509)
!16516 = !DILocation(line: 1595, column: 41, scope: !16509)
!16517 = !DILocation(line: 1595, column: 30, scope: !16509)
!16518 = !DILocation(line: 1595, column: 2, scope: !16509)
!16519 = distinct !DISubprogram(name: "z_thread_abort", scope: !2454, file: !2454, line: 1725, type: !14415, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16520)
!16520 = !{!16521, !16522}
!16521 = !DILocalVariable(name: "thread", arg: 1, scope: !16519, file: !2454, line: 1725, type: !2346)
!16522 = !DILocalVariable(name: "key", scope: !16519, file: !2454, line: 1727, type: !14449)
!16523 = !DILocation(line: 0, scope: !16519)
!16524 = !DILocation(line: 0, scope: !14457, inlinedAt: !16525)
!16525 = distinct !DILocation(line: 1727, column: 25, scope: !16519)
!16526 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !16527)
!16527 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !16525)
!16528 = !DILocation(line: 0, scope: !14466, inlinedAt: !16527)
!16529 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !16525)
!16530 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !16525)
!16531 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !16525)
!16532 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !16525)
!16533 = !DILocation(line: 1729, column: 20, scope: !16534)
!16534 = distinct !DILexicalBlock(scope: !16519, file: !2454, line: 1729, column: 6)
!16535 = !DILocation(line: 1729, column: 33, scope: !16534)
!16536 = !DILocation(line: 1729, column: 48, scope: !16534)
!16537 = !DILocation(line: 1729, column: 6, scope: !16519)
!16538 = !DILocation(line: 0, scope: !14491, inlinedAt: !16539)
!16539 = distinct !DILocation(line: 1730, column: 3, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16534, file: !2454, line: 1729, column: 54)
!16541 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !16539)
!16542 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !16539)
!16543 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !16539)
!16544 = !DILocation(line: 0, scope: !14505, inlinedAt: !16545)
!16545 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !16539)
!16546 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !16545)
!16547 = !DILocation(line: 1731, column: 3, scope: !16548)
!16548 = distinct !DILexicalBlock(scope: !16549, file: !2454, line: 1731, column: 3)
!16549 = distinct !DILexicalBlock(scope: !16550, file: !2454, line: 1731, column: 3)
!16550 = distinct !DILexicalBlock(scope: !16540, file: !2454, line: 1731, column: 3)
!16551 = !DILocation(line: 1736, column: 20, scope: !16552)
!16552 = distinct !DILexicalBlock(scope: !16519, file: !2454, line: 1736, column: 6)
!16553 = !DILocation(line: 1736, column: 33, scope: !16552)
!16554 = !DILocation(line: 1736, column: 49, scope: !16552)
!16555 = !DILocation(line: 1736, column: 6, scope: !16519)
!16556 = !DILocation(line: 0, scope: !14491, inlinedAt: !16557)
!16557 = distinct !DILocation(line: 1737, column: 3, scope: !16558)
!16558 = distinct !DILexicalBlock(scope: !16552, file: !2454, line: 1736, column: 56)
!16559 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !16557)
!16560 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !16557)
!16561 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !16557)
!16562 = !DILocation(line: 0, scope: !14505, inlinedAt: !16563)
!16563 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !16557)
!16564 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !16563)
!16565 = !DILocation(line: 1738, column: 3, scope: !16558)
!16566 = !DILocation(line: 1775, column: 2, scope: !16519)
!16567 = !DILocation(line: 1776, column: 16, scope: !16568)
!16568 = distinct !DILexicalBlock(scope: !16519, file: !2454, line: 1776, column: 6)
!16569 = !DILocation(line: 1776, column: 13, scope: !16568)
!16570 = !DILocation(line: 1776, column: 25, scope: !16568)
!16571 = !DILocation(line: 1031, column: 3, scope: !15184, inlinedAt: !16572)
!16572 = distinct !DILocation(line: 48, column: 10, scope: !15188, inlinedAt: !16573)
!16573 = distinct !DILocation(line: 1776, column: 29, scope: !16568)
!16574 = !DILocation(line: 0, scope: !15184, inlinedAt: !16572)
!16575 = !DILocation(line: 48, column: 9, scope: !15188, inlinedAt: !16573)
!16576 = !DILocation(line: 1776, column: 6, scope: !16519)
!16577 = !DILocation(line: 0, scope: !15135, inlinedAt: !16578)
!16578 = distinct !DILocation(line: 1777, column: 3, scope: !16579)
!16579 = distinct !DILexicalBlock(scope: !16568, file: !2454, line: 1776, column: 47)
!16580 = !DILocation(line: 0, scope: !15144, inlinedAt: !16581)
!16581 = distinct !DILocation(line: 195, column: 2, scope: !15135, inlinedAt: !16578)
!16582 = !DILocation(line: 225, column: 2, scope: !15151, inlinedAt: !16581)
!16583 = !DILocation(line: 225, column: 2, scope: !15152, inlinedAt: !16581)
!16584 = !DILocation(line: 225, column: 2, scope: !15155, inlinedAt: !16581)
!16585 = !DILocation(line: 196, column: 9, scope: !15135, inlinedAt: !16578)
!16586 = !DILocation(line: 1778, column: 3, scope: !16587)
!16587 = distinct !DILexicalBlock(scope: !16588, file: !2454, line: 1778, column: 3)
!16588 = distinct !DILexicalBlock(scope: !16589, file: !2454, line: 1778, column: 3)
!16589 = distinct !DILexicalBlock(scope: !16579, file: !2454, line: 1778, column: 3)
!16590 = !DILocation(line: 0, scope: !14491, inlinedAt: !16591)
!16591 = distinct !DILocation(line: 1780, column: 2, scope: !16519)
!16592 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !16591)
!16593 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !16591)
!16594 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !16591)
!16595 = !DILocation(line: 0, scope: !14505, inlinedAt: !16596)
!16596 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !16591)
!16597 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !16596)
!16598 = !DILocation(line: 1781, column: 1, scope: !16519)
!16599 = distinct !DISubprogram(name: "end_thread", scope: !2454, file: !2454, line: 1690, type: !14415, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16600)
!16600 = !{!16601}
!16601 = !DILocalVariable(name: "thread", arg: 1, scope: !16599, file: !2454, line: 1690, type: !2346)
!16602 = !DILocation(line: 0, scope: !16599)
!16603 = !DILocation(line: 1695, column: 20, scope: !16604)
!16604 = distinct !DILexicalBlock(scope: !16599, file: !2454, line: 1695, column: 6)
!16605 = !DILocation(line: 1695, column: 33, scope: !16604)
!16606 = !DILocation(line: 1695, column: 49, scope: !16604)
!16607 = !DILocation(line: 1695, column: 6, scope: !16599)
!16608 = !DILocation(line: 1697, column: 29, scope: !16609)
!16609 = distinct !DILexicalBlock(scope: !16604, file: !2454, line: 1695, column: 56)
!16610 = !DILocation(line: 1698, column: 7, scope: !16611)
!16611 = distinct !DILexicalBlock(scope: !16609, file: !2454, line: 1698, column: 7)
!16612 = !DILocation(line: 1698, column: 7, scope: !16609)
!16613 = !DILocation(line: 0, scope: !14649, inlinedAt: !16614)
!16614 = distinct !DILocation(line: 1699, column: 4, scope: !16615)
!16615 = distinct !DILexicalBlock(scope: !16611, file: !2454, line: 1698, column: 35)
!16616 = !DILocation(line: 266, column: 28, scope: !14649, inlinedAt: !16614)
!16617 = !DILocation(line: 0, scope: !14657, inlinedAt: !16618)
!16618 = distinct !DILocation(line: 268, column: 3, scope: !14661, inlinedAt: !16614)
!16619 = !DILocation(line: 234, column: 2, scope: !14657, inlinedAt: !16618)
!16620 = !DILocation(line: 1700, column: 3, scope: !16615)
!16621 = !DILocation(line: 1701, column: 20, scope: !16622)
!16622 = distinct !DILexicalBlock(scope: !16609, file: !2454, line: 1701, column: 7)
!16623 = !DILocation(line: 1701, column: 30, scope: !16622)
!16624 = !DILocation(line: 1701, column: 7, scope: !16609)
!16625 = !DILocation(line: 1702, column: 4, scope: !16626)
!16626 = distinct !DILexicalBlock(scope: !16622, file: !2454, line: 1701, column: 39)
!16627 = !DILocation(line: 1703, column: 3, scope: !16626)
!16628 = !DILocation(line: 1704, column: 9, scope: !16609)
!16629 = !DILocation(line: 1705, column: 23, scope: !16609)
!16630 = !DILocation(line: 1705, column: 3, scope: !16609)
!16631 = !DILocation(line: 1706, column: 3, scope: !16609)
!16632 = !DILocation(line: 1722, column: 2, scope: !16609)
!16633 = !DILocation(line: 1723, column: 1, scope: !16599)
!16634 = distinct !DISubprogram(name: "unpend_all", scope: !2454, file: !2454, line: 1674, type: !16635, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16637)
!16635 = !DISubroutineType(types: !16636)
!16636 = !{null, !2377}
!16637 = !{!16638, !16639}
!16638 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16634, file: !2454, line: 1674, type: !2377)
!16639 = !DILocalVariable(name: "thread", scope: !16634, file: !2454, line: 1676, type: !2346)
!16640 = !DILocation(line: 0, scope: !16634)
!16641 = !DILocation(line: 1678, column: 19, scope: !16634)
!16642 = !DILocation(line: 1678, column: 41, scope: !16634)
!16643 = !DILocation(line: 1678, column: 2, scope: !16634)
!16644 = !DILocation(line: 1679, column: 3, scope: !16645)
!16645 = distinct !DILexicalBlock(scope: !16634, file: !2454, line: 1678, column: 50)
!16646 = !DILocation(line: 1680, column: 9, scope: !16645)
!16647 = !DILocalVariable(name: "thread", arg: 1, scope: !16648, file: !13637, line: 65, type: !2346)
!16648 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13637, file: !13637, line: 65, type: !16649, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16651)
!16649 = !DISubroutineType(types: !16650)
!16650 = !{null, !2346, !32}
!16651 = !{!16647, !16652}
!16652 = !DILocalVariable(name: "value", arg: 2, scope: !16648, file: !13637, line: 65, type: !32)
!16653 = !DILocation(line: 0, scope: !16648, inlinedAt: !16654)
!16654 = distinct !DILocation(line: 1681, column: 3, scope: !16645)
!16655 = !DILocation(line: 67, column: 15, scope: !16648, inlinedAt: !16654)
!16656 = !DILocation(line: 67, column: 33, scope: !16648, inlinedAt: !16654)
!16657 = !DILocation(line: 1682, column: 3, scope: !16645)
!16658 = distinct !{!16658, !16643, !16659}
!16659 = !DILocation(line: 1683, column: 2, scope: !16634)
!16660 = !DILocation(line: 1684, column: 1, scope: !16634)
!16661 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2454, file: !2454, line: 1794, type: !16662, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16664)
!16662 = !DISubroutineType(types: !16663)
!16663 = !{!107, !2346, !15345}
!16664 = !{!16665, !16666, !16667, !16668}
!16665 = !DILocalVariable(name: "thread", arg: 1, scope: !16661, file: !2454, line: 1794, type: !2346)
!16666 = !DILocalVariable(name: "timeout", arg: 2, scope: !16661, file: !2454, line: 1794, type: !15345)
!16667 = !DILocalVariable(name: "key", scope: !16661, file: !2454, line: 1796, type: !14449)
!16668 = !DILocalVariable(name: "ret", scope: !16661, file: !2454, line: 1797, type: !107)
!16669 = !DILocation(line: 0, scope: !16661)
!16670 = !DILocation(line: 0, scope: !14457, inlinedAt: !16671)
!16671 = distinct !DILocation(line: 1796, column: 25, scope: !16661)
!16672 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !16673)
!16673 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !16671)
!16674 = !DILocation(line: 0, scope: !14466, inlinedAt: !16673)
!16675 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !16671)
!16676 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !16671)
!16677 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !16671)
!16678 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !16671)
!16679 = !DILocation(line: 1801, column: 20, scope: !16680)
!16680 = distinct !DILexicalBlock(scope: !16661, file: !2454, line: 1801, column: 6)
!16681 = !DILocation(line: 1801, column: 33, scope: !16680)
!16682 = !DILocation(line: 1801, column: 49, scope: !16680)
!16683 = !DILocation(line: 1801, column: 6, scope: !16661)
!16684 = !DILocation(line: 1803, column: 13, scope: !16685)
!16685 = distinct !DILexicalBlock(scope: !16680, file: !2454, line: 1803, column: 13)
!16686 = !DILocation(line: 1803, column: 13, scope: !16680)
!16687 = !DILocation(line: 1805, column: 24, scope: !16688)
!16688 = distinct !DILexicalBlock(scope: !16685, file: !2454, line: 1805, column: 13)
!16689 = !DILocation(line: 1805, column: 21, scope: !16688)
!16690 = !DILocation(line: 1805, column: 34, scope: !16688)
!16691 = !DILocation(line: 1806, column: 20, scope: !16688)
!16692 = !DILocation(line: 1806, column: 44, scope: !16688)
!16693 = !DILocation(line: 1806, column: 30, scope: !16688)
!16694 = !DILocation(line: 1805, column: 13, scope: !16685)
!16695 = !DILocation(line: 1031, column: 3, scope: !15184, inlinedAt: !16696)
!16696 = distinct !DILocation(line: 48, column: 10, scope: !15188, inlinedAt: !16697)
!16697 = distinct !DILocation(line: 1809, column: 3, scope: !16698)
!16698 = distinct !DILexicalBlock(scope: !16699, file: !2454, line: 1809, column: 3)
!16699 = distinct !DILexicalBlock(scope: !16700, file: !2454, line: 1809, column: 3)
!16700 = distinct !DILexicalBlock(scope: !16688, file: !2454, line: 1808, column: 9)
!16701 = !DILocation(line: 0, scope: !15184, inlinedAt: !16696)
!16702 = !DILocation(line: 48, column: 9, scope: !15188, inlinedAt: !16697)
!16703 = !DILocation(line: 1809, column: 3, scope: !16699)
!16704 = !DILocation(line: 1809, column: 3, scope: !16705)
!16705 = distinct !DILexicalBlock(scope: !16698, file: !2454, line: 1809, column: 3)
!16706 = !DILocation(line: 1810, column: 23, scope: !16700)
!16707 = !DILocation(line: 1810, column: 42, scope: !16700)
!16708 = !DILocation(line: 1810, column: 3, scope: !16700)
!16709 = !DILocation(line: 1811, column: 22, scope: !16700)
!16710 = !DILocation(line: 1811, column: 3, scope: !16700)
!16711 = !DILocation(line: 0, scope: !15135, inlinedAt: !16712)
!16712 = distinct !DILocation(line: 1814, column: 9, scope: !16700)
!16713 = !DILocation(line: 0, scope: !15144, inlinedAt: !16714)
!16714 = distinct !DILocation(line: 195, column: 2, scope: !15135, inlinedAt: !16712)
!16715 = !DILocation(line: 225, column: 2, scope: !15151, inlinedAt: !16714)
!16716 = !DILocation(line: 225, column: 2, scope: !15152, inlinedAt: !16714)
!16717 = !DILocation(line: 225, column: 2, scope: !15155, inlinedAt: !16714)
!16718 = !DILocation(line: 196, column: 9, scope: !15135, inlinedAt: !16712)
!16719 = !DILocation(line: 1817, column: 3, scope: !16700)
!16720 = !DILocation(line: 0, scope: !16680)
!16721 = !DILocation(line: 0, scope: !14491, inlinedAt: !16722)
!16722 = distinct !DILocation(line: 1822, column: 2, scope: !16661)
!16723 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !16722)
!16724 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !16722)
!16725 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !16722)
!16726 = !DILocation(line: 0, scope: !14505, inlinedAt: !16727)
!16727 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !16722)
!16728 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !16727)
!16729 = !DILocation(line: 1823, column: 2, scope: !16661)
!16730 = !DILocation(line: 1824, column: 1, scope: !16661)
!16731 = distinct !DISubprogram(name: "z_sched_wake", scope: !2454, file: !2454, line: 1882, type: !16732, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16734)
!16732 = !DISubroutineType(types: !16733)
!16733 = !{!145, !2377, !107, !106}
!16734 = !{!16735, !16736, !16737, !16738, !16739, !16740, !16742}
!16735 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16731, file: !2454, line: 1882, type: !2377)
!16736 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16731, file: !2454, line: 1882, type: !107)
!16737 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16731, file: !2454, line: 1882, type: !106)
!16738 = !DILocalVariable(name: "thread", scope: !16731, file: !2454, line: 1884, type: !2346)
!16739 = !DILocalVariable(name: "ret", scope: !16731, file: !2454, line: 1885, type: !145)
!16740 = !DILocalVariable(name: "__i", scope: !16741, file: !2454, line: 1887, type: !14449)
!16741 = distinct !DILexicalBlock(scope: !16731, file: !2454, line: 1887, column: 2)
!16742 = !DILocalVariable(name: "__key", scope: !16741, file: !2454, line: 1887, type: !14449)
!16743 = !DILocation(line: 0, scope: !16731)
!16744 = !DILocation(line: 0, scope: !16741)
!16745 = !DILocation(line: 0, scope: !14457, inlinedAt: !16746)
!16746 = distinct !DILocation(line: 1887, column: 2, scope: !16741)
!16747 = !DILocation(line: 55, column: 2, scope: !14466, inlinedAt: !16748)
!16748 = distinct !DILocation(line: 145, column: 10, scope: !14457, inlinedAt: !16746)
!16749 = !DILocation(line: 0, scope: !14466, inlinedAt: !16748)
!16750 = !DILocation(line: 148, column: 2, scope: !14474, inlinedAt: !16746)
!16751 = !DILocation(line: 148, column: 2, scope: !14475, inlinedAt: !16746)
!16752 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !16746)
!16753 = !DILocation(line: 160, column: 2, scope: !14457, inlinedAt: !16746)
!16754 = !DILocation(line: 1888, column: 12, scope: !16755)
!16755 = distinct !DILexicalBlock(scope: !16756, file: !2454, line: 1887, column: 26)
!16756 = distinct !DILexicalBlock(scope: !16741, file: !2454, line: 1887, column: 2)
!16757 = !DILocation(line: 1890, column: 14, scope: !16758)
!16758 = distinct !DILexicalBlock(scope: !16755, file: !2454, line: 1890, column: 7)
!16759 = !DILocation(line: 1890, column: 7, scope: !16755)
!16760 = !DILocalVariable(name: "thread", arg: 1, scope: !16761, file: !16762, line: 134, type: !2346)
!16761 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16762, file: !16762, line: 134, type: !16763, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16765)
!16762 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16763 = !DISubroutineType(types: !16764)
!16764 = !{null, !2346, !32, !106}
!16765 = !{!16760, !16766, !16767}
!16766 = !DILocalVariable(name: "value", arg: 2, scope: !16761, file: !16762, line: 135, type: !32)
!16767 = !DILocalVariable(name: "data", arg: 3, scope: !16761, file: !16762, line: 136, type: !106)
!16768 = !DILocation(line: 0, scope: !16761, inlinedAt: !16769)
!16769 = distinct !DILocation(line: 1891, column: 4, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !16758, file: !2454, line: 1890, column: 23)
!16771 = !DILocation(line: 0, scope: !16648, inlinedAt: !16772)
!16772 = distinct !DILocation(line: 138, column: 2, scope: !16761, inlinedAt: !16769)
!16773 = !DILocation(line: 67, column: 15, scope: !16648, inlinedAt: !16772)
!16774 = !DILocation(line: 67, column: 33, scope: !16648, inlinedAt: !16772)
!16775 = !DILocation(line: 139, column: 15, scope: !16761, inlinedAt: !16769)
!16776 = !DILocation(line: 139, column: 25, scope: !16761, inlinedAt: !16769)
!16777 = !DILocation(line: 1894, column: 4, scope: !16770)
!16778 = !DILocation(line: 1895, column: 10, scope: !16770)
!16779 = !DILocation(line: 1896, column: 4, scope: !16770)
!16780 = !DILocation(line: 1898, column: 3, scope: !16770)
!16781 = !DILocation(line: 0, scope: !14491, inlinedAt: !16782)
!16782 = distinct !DILocation(line: 1887, column: 2, scope: !16756)
!16783 = !DILocation(line: 194, column: 2, scope: !14499, inlinedAt: !16782)
!16784 = !DILocation(line: 194, column: 2, scope: !14500, inlinedAt: !16782)
!16785 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !16782)
!16786 = !DILocation(line: 0, scope: !14505, inlinedAt: !16787)
!16787 = distinct !DILocation(line: 215, column: 2, scope: !14491, inlinedAt: !16782)
!16788 = !DILocation(line: 95, column: 2, scope: !14505, inlinedAt: !16787)
!16789 = !DILocation(line: 1901, column: 2, scope: !16731)
!16790 = distinct !DISubprogram(name: "z_sched_wait", scope: !2454, file: !2454, line: 1904, type: !16791, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16794)
!16791 = !DISubroutineType(types: !16792)
!16792 = !{!107, !14460, !14449, !2377, !15345, !16793}
!16793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!16794 = !{!16795, !16796, !16797, !16798, !16799, !16800}
!16795 = !DILocalVariable(name: "lock", arg: 1, scope: !16790, file: !2454, line: 1904, type: !14460)
!16796 = !DILocalVariable(name: "key", arg: 2, scope: !16790, file: !2454, line: 1904, type: !14449)
!16797 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16790, file: !2454, line: 1905, type: !2377)
!16798 = !DILocalVariable(name: "timeout", arg: 4, scope: !16790, file: !2454, line: 1905, type: !15345)
!16799 = !DILocalVariable(name: "data", arg: 5, scope: !16790, file: !2454, line: 1905, type: !16793)
!16800 = !DILocalVariable(name: "ret", scope: !16790, file: !2454, line: 1907, type: !107)
!16801 = !DILocation(line: 0, scope: !16790)
!16802 = !DILocation(line: 1907, column: 12, scope: !16790)
!16803 = !DILocation(line: 1909, column: 11, scope: !16804)
!16804 = distinct !DILexicalBlock(scope: !16790, file: !2454, line: 1909, column: 6)
!16805 = !DILocation(line: 1909, column: 6, scope: !16790)
!16806 = !DILocation(line: 1910, column: 11, scope: !16807)
!16807 = distinct !DILexicalBlock(scope: !16804, file: !2454, line: 1909, column: 20)
!16808 = !DILocation(line: 1910, column: 26, scope: !16807)
!16809 = !DILocation(line: 1910, column: 9, scope: !16807)
!16810 = !DILocation(line: 1911, column: 2, scope: !16807)
!16811 = !DILocation(line: 1912, column: 2, scope: !16790)
!16812 = distinct !DISubprogram(name: "z_data_copy", scope: !16813, file: !16813, line: 22, type: !3082, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !2156)
!16813 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16814 = !DILocation(line: 24, column: 2, scope: !16812)
!16815 = !DILocation(line: 27, column: 2, scope: !16812)
!16816 = !DILocation(line: 71, column: 1, scope: !16812)
!16817 = distinct !DISubprogram(name: "z_add_timeout", scope: !2491, file: !2491, line: 88, type: !16818, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !16824)
!16818 = !DISubroutineType(types: !16819)
!16819 = !{null, !2464, !2483, !16820}
!16820 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !16821)
!16821 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !16822)
!16822 = !{!16823}
!16823 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16821, file: !565, line: 66, baseType: !564, size: 64)
!16824 = !{!16825, !16826, !16827, !16828, !16834, !16835, !16838, !16841}
!16825 = !DILocalVariable(name: "to", arg: 1, scope: !16817, file: !2491, line: 88, type: !2464)
!16826 = !DILocalVariable(name: "fn", arg: 2, scope: !16817, file: !2491, line: 88, type: !2483)
!16827 = !DILocalVariable(name: "timeout", arg: 3, scope: !16817, file: !2491, line: 89, type: !16820)
!16828 = !DILocalVariable(name: "__i", scope: !16829, file: !2491, line: 102, type: !16830)
!16829 = distinct !DILexicalBlock(scope: !16817, file: !2491, line: 102, column: 2)
!16830 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !16831)
!16831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !16832)
!16832 = !{!16833}
!16833 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16831, file: !420, line: 33, baseType: !107, size: 32)
!16834 = !DILocalVariable(name: "__key", scope: !16829, file: !2491, line: 102, type: !16830)
!16835 = !DILocalVariable(name: "t", scope: !16836, file: !2491, line: 103, type: !2464)
!16836 = distinct !DILexicalBlock(scope: !16837, file: !2491, line: 102, column: 24)
!16837 = distinct !DILexicalBlock(scope: !16829, file: !2491, line: 102, column: 2)
!16838 = !DILocalVariable(name: "ticks", scope: !16839, file: !2491, line: 107, type: !564)
!16839 = distinct !DILexicalBlock(scope: !16840, file: !2491, line: 106, column: 39)
!16840 = distinct !DILexicalBlock(scope: !16836, file: !2491, line: 105, column: 7)
!16841 = !DILocalVariable(name: "next_time", scope: !16842, file: !2491, line: 137, type: !895)
!16842 = distinct !DILexicalBlock(scope: !16843, file: !2491, line: 127, column: 22)
!16843 = distinct !DILexicalBlock(scope: !16836, file: !2491, line: 127, column: 7)
!16844 = !DILocation(line: 0, scope: !16817)
!16845 = !DILocation(line: 91, column: 6, scope: !16846)
!16846 = distinct !DILexicalBlock(scope: !16817, file: !2491, line: 91, column: 6)
!16847 = !DILocation(line: 91, column: 6, scope: !16817)
!16848 = !DILocation(line: 99, column: 2, scope: !16849)
!16849 = distinct !DILexicalBlock(scope: !16850, file: !2491, line: 99, column: 2)
!16850 = distinct !DILexicalBlock(scope: !16817, file: !2491, line: 99, column: 2)
!16851 = !DILocation(line: 99, column: 2, scope: !16850)
!16852 = !DILocation(line: 99, column: 2, scope: !16853)
!16853 = distinct !DILexicalBlock(scope: !16849, file: !2491, line: 99, column: 2)
!16854 = !DILocation(line: 100, column: 6, scope: !16817)
!16855 = !DILocation(line: 100, column: 9, scope: !16817)
!16856 = !DILocation(line: 0, scope: !16829)
!16857 = !DILocalVariable(name: "l", arg: 1, scope: !16858, file: !420, line: 136, type: !16861)
!16858 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !16859, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !16862)
!16859 = !DISubroutineType(types: !16860)
!16860 = !{!16830, !16861}
!16861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 32)
!16862 = !{!16857, !16863}
!16863 = !DILocalVariable(name: "k", scope: !16858, file: !420, line: 139, type: !16830)
!16864 = !DILocation(line: 0, scope: !16858, inlinedAt: !16865)
!16865 = distinct !DILocation(line: 102, column: 2, scope: !16829)
!16866 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !16871)
!16867 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5935, file: !5935, line: 42, type: !5936, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !16868)
!16868 = !{!16869, !16870}
!16869 = !DILocalVariable(name: "key", scope: !16867, file: !5935, line: 44, type: !32)
!16870 = !DILocalVariable(name: "tmp", scope: !16867, file: !5935, line: 53, type: !32)
!16871 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !16865)
!16872 = !{i64 2249323}
!16873 = !DILocation(line: 0, scope: !16867, inlinedAt: !16871)
!16874 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !16865)
!16875 = distinct !DILexicalBlock(scope: !16876, file: !420, line: 148, column: 2)
!16876 = distinct !DILexicalBlock(scope: !16858, file: !420, line: 148, column: 2)
!16877 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !16865)
!16878 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !16865)
!16879 = distinct !DILexicalBlock(scope: !16875, file: !420, line: 148, column: 2)
!16880 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !16865)
!16881 = !DILocation(line: 106, column: 33, scope: !16840)
!16882 = !DILocation(line: 105, column: 7, scope: !16836)
!16883 = !DILocation(line: 107, column: 50, scope: !16839)
!16884 = !DILocation(line: 107, column: 48, scope: !16839)
!16885 = !DILocation(line: 0, scope: !16839)
!16886 = !DILocation(line: 109, column: 17, scope: !16839)
!16887 = !DILocation(line: 110, column: 3, scope: !16839)
!16888 = !DILocation(line: 111, column: 31, scope: !16889)
!16889 = distinct !DILexicalBlock(scope: !16840, file: !2491, line: 110, column: 10)
!16890 = !DILocation(line: 111, column: 37, scope: !16889)
!16891 = !DILocation(line: 111, column: 35, scope: !16889)
!16892 = !DILocation(line: 0, scope: !16840)
!16893 = !DILocation(line: 109, column: 8, scope: !16839)
!16894 = !DILocation(line: 109, column: 15, scope: !16839)
!16895 = !DILocation(line: 114, column: 12, scope: !16896)
!16896 = distinct !DILexicalBlock(scope: !16836, file: !2491, line: 114, column: 3)
!16897 = !DILocation(line: 0, scope: !16836)
!16898 = !DILocation(line: 114, column: 3, scope: !16896)
!16899 = !DILocation(line: 115, column: 24, scope: !16900)
!16900 = distinct !DILexicalBlock(scope: !16901, file: !2491, line: 115, column: 8)
!16901 = distinct !DILexicalBlock(scope: !16902, file: !2491, line: 114, column: 45)
!16902 = distinct !DILexicalBlock(scope: !16896, file: !2491, line: 114, column: 3)
!16903 = !DILocation(line: 115, column: 11, scope: !16900)
!16904 = !DILocation(line: 115, column: 18, scope: !16900)
!16905 = !DILocation(line: 115, column: 8, scope: !16901)
!16906 = !DILocation(line: 116, column: 15, scope: !16907)
!16907 = distinct !DILexicalBlock(scope: !16900, file: !2491, line: 115, column: 32)
!16908 = !DILocation(line: 117, column: 26, scope: !16907)
!16909 = !DILocation(line: 117, column: 5, scope: !16907)
!16910 = !DILocation(line: 123, column: 7, scope: !16836)
!16911 = !DILocation(line: 120, column: 15, scope: !16901)
!16912 = !DILocation(line: 114, column: 36, scope: !16902)
!16913 = distinct !{!16913, !16898, !16914}
!16914 = !DILocation(line: 121, column: 3, scope: !16896)
!16915 = !DILocation(line: 124, column: 4, scope: !16916)
!16916 = distinct !DILexicalBlock(scope: !16917, file: !2491, line: 123, column: 18)
!16917 = distinct !DILexicalBlock(scope: !16836, file: !2491, line: 123, column: 7)
!16918 = !DILocation(line: 125, column: 3, scope: !16916)
!16919 = !DILocation(line: 127, column: 13, scope: !16843)
!16920 = !DILocation(line: 127, column: 10, scope: !16843)
!16921 = !DILocation(line: 127, column: 7, scope: !16836)
!16922 = !DILocation(line: 137, column: 24, scope: !16842)
!16923 = !DILocation(line: 0, scope: !16842)
!16924 = !DILocation(line: 139, column: 18, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16842, file: !2491, line: 139, column: 8)
!16926 = !DILocation(line: 139, column: 23, scope: !16925)
!16927 = !DILocation(line: 141, column: 5, scope: !16928)
!16928 = distinct !DILexicalBlock(scope: !16925, file: !2491, line: 140, column: 48)
!16929 = !DILocation(line: 142, column: 4, scope: !16928)
!16930 = !DILocalVariable(name: "key", arg: 2, scope: !16931, file: !420, line: 190, type: !16830)
!16931 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !16932, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !16934)
!16932 = !DISubroutineType(types: !16933)
!16933 = !{null, !16861, !16830}
!16934 = !{!16935, !16930}
!16935 = !DILocalVariable(name: "l", arg: 1, scope: !16931, file: !420, line: 189, type: !16861)
!16936 = !DILocation(line: 0, scope: !16931, inlinedAt: !16937)
!16937 = distinct !DILocation(line: 102, column: 2, scope: !16837)
!16938 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !16937)
!16939 = distinct !DILexicalBlock(scope: !16940, file: !420, line: 194, column: 2)
!16940 = distinct !DILexicalBlock(scope: !16931, file: !420, line: 194, column: 2)
!16941 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !16937)
!16942 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !16937)
!16943 = distinct !DILexicalBlock(scope: !16939, file: !420, line: 194, column: 2)
!16944 = !DILocalVariable(name: "key", arg: 1, scope: !16945, file: !5935, line: 84, type: !32)
!16945 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5935, file: !5935, line: 84, type: !5946, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !16946)
!16946 = !{!16944}
!16947 = !DILocation(line: 0, scope: !16945, inlinedAt: !16948)
!16948 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !16937)
!16949 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !16948)
!16950 = !{i64 2250140}
!16951 = !DILocation(line: 148, column: 1, scope: !16817)
!16952 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !16953, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !16957)
!16953 = !DISubroutineType(types: !16954)
!16954 = !{!145, !16955}
!16955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16956, size: 32)
!16956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2468)
!16957 = !{!16958}
!16958 = !DILocalVariable(name: "node", arg: 1, scope: !16952, file: !319, line: 225, type: !16955)
!16959 = !DILocation(line: 0, scope: !16952)
!16960 = !DILocation(line: 227, column: 15, scope: !16952)
!16961 = !DILocation(line: 227, column: 20, scope: !16952)
!16962 = !DILocation(line: 227, column: 2, scope: !16952)
!16963 = distinct !DISubprogram(name: "elapsed", scope: !2491, file: !2491, line: 62, type: !16964, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !2156)
!16964 = !DISubroutineType(types: !16965)
!16965 = !{!895}
!16966 = !DILocation(line: 64, column: 9, scope: !16963)
!16967 = !DILocation(line: 64, column: 28, scope: !16963)
!16968 = !DILocation(line: 64, column: 35, scope: !16963)
!16969 = !DILocation(line: 64, column: 2, scope: !16963)
!16970 = distinct !DISubprogram(name: "first", scope: !2491, file: !2491, line: 39, type: !16971, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !16973)
!16971 = !DISubroutineType(types: !16972)
!16972 = !{!2464}
!16973 = !{!16974}
!16974 = !DILocalVariable(name: "t", scope: !16970, file: !2491, line: 41, type: !16975)
!16975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 32)
!16976 = !DILocation(line: 41, column: 19, scope: !16970)
!16977 = !DILocation(line: 0, scope: !16970)
!16978 = !DILocation(line: 43, column: 9, scope: !16970)
!16979 = !DILocation(line: 43, column: 2, scope: !16970)
!16980 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !16981, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !16983)
!16981 = !DISubroutineType(types: !16982)
!16982 = !{null, !16975, !16975}
!16983 = !{!16984, !16985, !16986}
!16984 = !DILocalVariable(name: "successor", arg: 1, scope: !16980, file: !319, line: 443, type: !16975)
!16985 = !DILocalVariable(name: "node", arg: 2, scope: !16980, file: !319, line: 443, type: !16975)
!16986 = !DILocalVariable(name: "prev", scope: !16980, file: !319, line: 445, type: !16987)
!16987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16975)
!16988 = !DILocation(line: 0, scope: !16980)
!16989 = !DILocation(line: 445, column: 39, scope: !16980)
!16990 = !DILocation(line: 447, column: 8, scope: !16980)
!16991 = !DILocation(line: 447, column: 13, scope: !16980)
!16992 = !DILocation(line: 448, column: 8, scope: !16980)
!16993 = !DILocation(line: 448, column: 13, scope: !16980)
!16994 = !DILocation(line: 449, column: 8, scope: !16980)
!16995 = !DILocation(line: 449, column: 13, scope: !16980)
!16996 = !DILocation(line: 450, column: 18, scope: !16980)
!16997 = !DILocation(line: 451, column: 1, scope: !16980)
!16998 = distinct !DISubprogram(name: "next", scope: !2491, file: !2491, line: 46, type: !16999, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17001)
!16999 = !DISubroutineType(types: !17000)
!17000 = !{!2464, !2464}
!17001 = !{!17002, !17003}
!17002 = !DILocalVariable(name: "t", arg: 1, scope: !16998, file: !2491, line: 46, type: !2464)
!17003 = !DILocalVariable(name: "n", scope: !16998, file: !2491, line: 48, type: !16975)
!17004 = !DILocation(line: 0, scope: !16998)
!17005 = !DILocation(line: 48, column: 58, scope: !16998)
!17006 = !DILocation(line: 48, column: 19, scope: !16998)
!17007 = !DILocation(line: 50, column: 9, scope: !16998)
!17008 = !DILocation(line: 50, column: 2, scope: !16998)
!17009 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !17010, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17013)
!17010 = !DISubroutineType(types: !17011)
!17011 = !{null, !17012, !16975}
!17012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 32)
!17013 = !{!17014, !17015, !17016}
!17014 = !DILocalVariable(name: "list", arg: 1, scope: !17009, file: !319, line: 404, type: !17012)
!17015 = !DILocalVariable(name: "node", arg: 2, scope: !17009, file: !319, line: 404, type: !16975)
!17016 = !DILocalVariable(name: "tail", scope: !17009, file: !319, line: 406, type: !16987)
!17017 = !DILocation(line: 0, scope: !17009)
!17018 = !DILocation(line: 406, column: 34, scope: !17009)
!17019 = !DILocation(line: 408, column: 8, scope: !17009)
!17020 = !DILocation(line: 408, column: 13, scope: !17009)
!17021 = !DILocation(line: 409, column: 8, scope: !17009)
!17022 = !DILocation(line: 409, column: 13, scope: !17009)
!17023 = !DILocation(line: 411, column: 8, scope: !17009)
!17024 = !DILocation(line: 411, column: 13, scope: !17009)
!17025 = !DILocation(line: 412, column: 13, scope: !17009)
!17026 = !DILocation(line: 413, column: 1, scope: !17009)
!17027 = distinct !DISubprogram(name: "next_timeout", scope: !2491, file: !2491, line: 67, type: !16964, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17028)
!17028 = !{!17029, !17030, !17031}
!17029 = !DILocalVariable(name: "to", scope: !17027, file: !2491, line: 69, type: !2464)
!17030 = !DILocalVariable(name: "ticks_elapsed", scope: !17027, file: !2491, line: 70, type: !895)
!17031 = !DILocalVariable(name: "ret", scope: !17027, file: !2491, line: 71, type: !895)
!17032 = !DILocation(line: 69, column: 24, scope: !17027)
!17033 = !DILocation(line: 0, scope: !17027)
!17034 = !DILocation(line: 70, column: 26, scope: !17027)
!17035 = !DILocation(line: 73, column: 10, scope: !17036)
!17036 = distinct !DILexicalBlock(scope: !17027, file: !2491, line: 73, column: 6)
!17037 = !DILocation(line: 73, column: 19, scope: !17036)
!17038 = !DILocation(line: 74, column: 21, scope: !17036)
!17039 = !DILocation(line: 74, column: 30, scope: !17036)
!17040 = !DILocation(line: 74, column: 28, scope: !17036)
!17041 = !DILocation(line: 74, column: 45, scope: !17036)
!17042 = !DILocation(line: 73, column: 6, scope: !17027)
!17043 = !DILocation(line: 77, column: 9, scope: !17044)
!17044 = distinct !DILexicalBlock(scope: !17036, file: !2491, line: 76, column: 9)
!17045 = !DILocation(line: 0, scope: !17036)
!17046 = !DILocation(line: 81, column: 20, scope: !17047)
!17047 = distinct !DILexicalBlock(scope: !17027, file: !2491, line: 81, column: 6)
!17048 = !DILocation(line: 81, column: 6, scope: !17047)
!17049 = !DILocation(line: 81, column: 32, scope: !17047)
!17050 = !DILocation(line: 85, column: 2, scope: !17027)
!17051 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !17052, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17054)
!17052 = !DISubroutineType(types: !17053)
!17053 = !{!16975, !17012, !16975}
!17054 = !{!17055, !17056}
!17055 = !DILocalVariable(name: "list", arg: 1, scope: !17051, file: !319, line: 341, type: !17012)
!17056 = !DILocalVariable(name: "node", arg: 2, scope: !17051, file: !319, line: 342, type: !16975)
!17057 = !DILocation(line: 0, scope: !17051)
!17058 = !DILocation(line: 344, column: 15, scope: !17051)
!17059 = !DILocation(line: 344, column: 9, scope: !17051)
!17060 = !DILocation(line: 344, column: 26, scope: !17051)
!17061 = !DILocation(line: 344, column: 2, scope: !17051)
!17062 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !17052, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17063)
!17063 = !{!17064, !17065}
!17064 = !DILocalVariable(name: "list", arg: 1, scope: !17062, file: !319, line: 325, type: !17012)
!17065 = !DILocalVariable(name: "node", arg: 2, scope: !17062, file: !319, line: 326, type: !16975)
!17066 = !DILocation(line: 0, scope: !17062)
!17067 = !DILocation(line: 328, column: 24, scope: !17062)
!17068 = !DILocation(line: 328, column: 15, scope: !17062)
!17069 = !DILocation(line: 328, column: 9, scope: !17062)
!17070 = !DILocation(line: 328, column: 45, scope: !17062)
!17071 = !DILocation(line: 328, column: 2, scope: !17062)
!17072 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !17073, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17075)
!17073 = !DISubroutineType(types: !17074)
!17074 = !{!16975, !17012}
!17075 = !{!17076}
!17076 = !DILocalVariable(name: "list", arg: 1, scope: !17072, file: !319, line: 294, type: !17012)
!17077 = !DILocation(line: 0, scope: !17072)
!17078 = !DILocation(line: 296, column: 9, scope: !17072)
!17079 = !DILocation(line: 296, column: 2, scope: !17072)
!17080 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !17081, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17083)
!17081 = !DISubroutineType(types: !17082)
!17082 = !{!145, !17012}
!17083 = !{!17084}
!17084 = !DILocalVariable(name: "list", arg: 1, scope: !17080, file: !319, line: 266, type: !17012)
!17085 = !DILocation(line: 0, scope: !17080)
!17086 = !DILocation(line: 268, column: 15, scope: !17080)
!17087 = !DILocation(line: 268, column: 20, scope: !17080)
!17088 = !DILocation(line: 268, column: 2, scope: !17080)
!17089 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2491, file: !2491, line: 150, type: !17090, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17092)
!17090 = !DISubroutineType(types: !17091)
!17091 = !{!107, !2464}
!17092 = !{!17093, !17094, !17095, !17097}
!17093 = !DILocalVariable(name: "to", arg: 1, scope: !17089, file: !2491, line: 150, type: !2464)
!17094 = !DILocalVariable(name: "ret", scope: !17089, file: !2491, line: 152, type: !107)
!17095 = !DILocalVariable(name: "__i", scope: !17096, file: !2491, line: 154, type: !16830)
!17096 = distinct !DILexicalBlock(scope: !17089, file: !2491, line: 154, column: 2)
!17097 = !DILocalVariable(name: "__key", scope: !17096, file: !2491, line: 154, type: !16830)
!17098 = !DILocation(line: 0, scope: !17089)
!17099 = !DILocation(line: 0, scope: !17096)
!17100 = !DILocation(line: 0, scope: !16858, inlinedAt: !17101)
!17101 = distinct !DILocation(line: 154, column: 2, scope: !17096)
!17102 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !17103)
!17103 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !17101)
!17104 = !DILocation(line: 0, scope: !16867, inlinedAt: !17103)
!17105 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17101)
!17106 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !17101)
!17107 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17101)
!17108 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !17101)
!17109 = !DILocation(line: 155, column: 7, scope: !17110)
!17110 = distinct !DILexicalBlock(scope: !17111, file: !2491, line: 155, column: 7)
!17111 = distinct !DILexicalBlock(scope: !17112, file: !2491, line: 154, column: 24)
!17112 = distinct !DILexicalBlock(scope: !17096, file: !2491, line: 154, column: 2)
!17113 = !DILocation(line: 155, column: 7, scope: !17111)
!17114 = !DILocation(line: 156, column: 4, scope: !17115)
!17115 = distinct !DILexicalBlock(scope: !17110, file: !2491, line: 155, column: 39)
!17116 = !DILocation(line: 158, column: 3, scope: !17115)
!17117 = !DILocation(line: 0, scope: !16931, inlinedAt: !17118)
!17118 = distinct !DILocation(line: 154, column: 2, scope: !17112)
!17119 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17118)
!17120 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !17118)
!17121 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17118)
!17122 = !DILocation(line: 0, scope: !16945, inlinedAt: !17123)
!17123 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !17118)
!17124 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !17123)
!17125 = !DILocation(line: 161, column: 2, scope: !17089)
!17126 = distinct !DISubprogram(name: "remove_timeout", scope: !2491, file: !2491, line: 53, type: !2485, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17127)
!17127 = !{!17128}
!17128 = !DILocalVariable(name: "t", arg: 1, scope: !17126, file: !2491, line: 53, type: !2464)
!17129 = !DILocation(line: 0, scope: !17126)
!17130 = !DILocation(line: 55, column: 6, scope: !17131)
!17131 = distinct !DILexicalBlock(scope: !17126, file: !2491, line: 55, column: 6)
!17132 = !DILocation(line: 55, column: 14, scope: !17131)
!17133 = !DILocation(line: 55, column: 6, scope: !17126)
!17134 = !DILocation(line: 56, column: 25, scope: !17135)
!17135 = distinct !DILexicalBlock(scope: !17131, file: !2491, line: 55, column: 23)
!17136 = !DILocation(line: 56, column: 12, scope: !17135)
!17137 = !DILocation(line: 56, column: 19, scope: !17135)
!17138 = !DILocation(line: 57, column: 2, scope: !17135)
!17139 = !DILocation(line: 59, column: 23, scope: !17126)
!17140 = !DILocation(line: 59, column: 2, scope: !17126)
!17141 = !DILocation(line: 60, column: 1, scope: !17126)
!17142 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !17143, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17145)
!17143 = !DISubroutineType(types: !17144)
!17144 = !{null, !16975}
!17145 = !{!17146, !17147, !17148}
!17146 = !DILocalVariable(name: "node", arg: 1, scope: !17142, file: !319, line: 496, type: !16975)
!17147 = !DILocalVariable(name: "prev", scope: !17142, file: !319, line: 498, type: !16987)
!17148 = !DILocalVariable(name: "next", scope: !17142, file: !319, line: 499, type: !16987)
!17149 = !DILocation(line: 0, scope: !17142)
!17150 = !DILocation(line: 498, column: 34, scope: !17142)
!17151 = !DILocation(line: 499, column: 34, scope: !17142)
!17152 = !DILocation(line: 501, column: 8, scope: !17142)
!17153 = !DILocation(line: 501, column: 13, scope: !17142)
!17154 = !DILocation(line: 502, column: 8, scope: !17142)
!17155 = !DILocation(line: 502, column: 13, scope: !17142)
!17156 = !DILocation(line: 503, column: 2, scope: !17142)
!17157 = !DILocation(line: 504, column: 1, scope: !17142)
!17158 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !17143, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17159)
!17159 = !{!17160}
!17160 = !DILocalVariable(name: "node", arg: 1, scope: !17158, file: !319, line: 211, type: !16975)
!17161 = !DILocation(line: 0, scope: !17158)
!17162 = !DILocation(line: 213, column: 8, scope: !17158)
!17163 = !DILocation(line: 213, column: 13, scope: !17158)
!17164 = !DILocation(line: 214, column: 8, scope: !17158)
!17165 = !DILocation(line: 214, column: 13, scope: !17158)
!17166 = !DILocation(line: 215, column: 1, scope: !17158)
!17167 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2491, file: !2491, line: 183, type: !17168, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17172)
!17168 = !DISubroutineType(types: !17169)
!17169 = !{!564, !17170}
!17170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17171, size: 32)
!17171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2465)
!17172 = !{!17173, !17174, !17175, !17177}
!17173 = !DILocalVariable(name: "timeout", arg: 1, scope: !17167, file: !2491, line: 183, type: !17170)
!17174 = !DILocalVariable(name: "ticks", scope: !17167, file: !2491, line: 185, type: !564)
!17175 = !DILocalVariable(name: "__i", scope: !17176, file: !2491, line: 187, type: !16830)
!17176 = distinct !DILexicalBlock(scope: !17167, file: !2491, line: 187, column: 2)
!17177 = !DILocalVariable(name: "__key", scope: !17176, file: !2491, line: 187, type: !16830)
!17178 = !DILocation(line: 0, scope: !17167)
!17179 = !DILocation(line: 0, scope: !17176)
!17180 = !DILocation(line: 0, scope: !16858, inlinedAt: !17181)
!17181 = distinct !DILocation(line: 187, column: 2, scope: !17176)
!17182 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !17183)
!17183 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !17181)
!17184 = !DILocation(line: 0, scope: !16867, inlinedAt: !17183)
!17185 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17181)
!17186 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !17181)
!17187 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17181)
!17188 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !17181)
!17189 = !DILocation(line: 188, column: 11, scope: !17190)
!17190 = distinct !DILexicalBlock(scope: !17191, file: !2491, line: 187, column: 24)
!17191 = distinct !DILexicalBlock(scope: !17176, file: !2491, line: 187, column: 2)
!17192 = !DILocation(line: 0, scope: !16931, inlinedAt: !17193)
!17193 = distinct !DILocation(line: 187, column: 2, scope: !17191)
!17194 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17193)
!17195 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !17193)
!17196 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17193)
!17197 = !DILocation(line: 0, scope: !16945, inlinedAt: !17198)
!17198 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !17193)
!17199 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !17198)
!17200 = !DILocation(line: 191, column: 2, scope: !17167)
!17201 = distinct !DISubprogram(name: "timeout_rem", scope: !2491, file: !2491, line: 165, type: !17168, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17202)
!17202 = !{!17203, !17204, !17205}
!17203 = !DILocalVariable(name: "timeout", arg: 1, scope: !17201, file: !2491, line: 165, type: !17170)
!17204 = !DILocalVariable(name: "ticks", scope: !17201, file: !2491, line: 167, type: !564)
!17205 = !DILocalVariable(name: "t", scope: !17206, file: !2491, line: 173, type: !2464)
!17206 = distinct !DILexicalBlock(scope: !17201, file: !2491, line: 173, column: 2)
!17207 = !DILocation(line: 0, scope: !17201)
!17208 = !DILocation(line: 169, column: 6, scope: !17209)
!17209 = distinct !DILexicalBlock(scope: !17201, file: !2491, line: 169, column: 6)
!17210 = !DILocation(line: 169, column: 6, scope: !17201)
!17211 = !DILocation(line: 173, column: 28, scope: !17206)
!17212 = !DILocation(line: 0, scope: !17206)
!17213 = !DILocation(line: 173, column: 39, scope: !17214)
!17214 = distinct !DILexicalBlock(scope: !17206, file: !2491, line: 173, column: 2)
!17215 = !DILocation(line: 173, column: 2, scope: !17206)
!17216 = !DILocation(line: 174, column: 15, scope: !17217)
!17217 = distinct !DILexicalBlock(scope: !17214, file: !2491, line: 173, column: 61)
!17218 = !DILocation(line: 174, column: 9, scope: !17217)
!17219 = !DILocation(line: 175, column: 15, scope: !17220)
!17220 = distinct !DILexicalBlock(scope: !17217, file: !2491, line: 175, column: 7)
!17221 = !DILocation(line: 175, column: 7, scope: !17217)
!17222 = !DILocation(line: 173, column: 52, scope: !17214)
!17223 = distinct !{!17223, !17215, !17224}
!17224 = !DILocation(line: 178, column: 2, scope: !17206)
!17225 = !DILocation(line: 180, column: 17, scope: !17201)
!17226 = !DILocation(line: 180, column: 15, scope: !17201)
!17227 = !DILocation(line: 180, column: 2, scope: !17201)
!17228 = !DILocation(line: 181, column: 1, scope: !17201)
!17229 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14046, file: !14046, line: 35, type: !17230, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17232)
!17230 = !DISubroutineType(types: !17231)
!17231 = !{!145, !17170}
!17232 = !{!17233}
!17233 = !DILocalVariable(name: "to", arg: 1, scope: !17229, file: !14046, line: 35, type: !17170)
!17234 = !DILocation(line: 0, scope: !17229)
!17235 = !DILocation(line: 37, column: 35, scope: !17229)
!17236 = !DILocation(line: 37, column: 10, scope: !17229)
!17237 = !DILocation(line: 37, column: 9, scope: !17229)
!17238 = !DILocation(line: 37, column: 2, scope: !17229)
!17239 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2491, file: !2491, line: 194, type: !17168, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17240)
!17240 = !{!17241, !17242, !17243, !17245}
!17241 = !DILocalVariable(name: "timeout", arg: 1, scope: !17239, file: !2491, line: 194, type: !17170)
!17242 = !DILocalVariable(name: "ticks", scope: !17239, file: !2491, line: 196, type: !564)
!17243 = !DILocalVariable(name: "__i", scope: !17244, file: !2491, line: 198, type: !16830)
!17244 = distinct !DILexicalBlock(scope: !17239, file: !2491, line: 198, column: 2)
!17245 = !DILocalVariable(name: "__key", scope: !17244, file: !2491, line: 198, type: !16830)
!17246 = !DILocation(line: 0, scope: !17239)
!17247 = !DILocation(line: 0, scope: !17244)
!17248 = !DILocation(line: 0, scope: !16858, inlinedAt: !17249)
!17249 = distinct !DILocation(line: 198, column: 2, scope: !17244)
!17250 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !17251)
!17251 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !17249)
!17252 = !DILocation(line: 0, scope: !16867, inlinedAt: !17251)
!17253 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17249)
!17254 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !17249)
!17255 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17249)
!17256 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !17249)
!17257 = !DILocation(line: 199, column: 11, scope: !17258)
!17258 = distinct !DILexicalBlock(scope: !17259, file: !2491, line: 198, column: 24)
!17259 = distinct !DILexicalBlock(scope: !17244, file: !2491, line: 198, column: 2)
!17260 = !DILocation(line: 199, column: 23, scope: !17258)
!17261 = !DILocation(line: 0, scope: !16931, inlinedAt: !17262)
!17262 = distinct !DILocation(line: 198, column: 2, scope: !17259)
!17263 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17262)
!17264 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !17262)
!17265 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17262)
!17266 = !DILocation(line: 0, scope: !16945, inlinedAt: !17267)
!17267 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !17262)
!17268 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !17267)
!17269 = !DILocation(line: 199, column: 21, scope: !17258)
!17270 = !DILocation(line: 202, column: 2, scope: !17239)
!17271 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2491, file: !2491, line: 205, type: !16964, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17272)
!17272 = !{!17273, !17274, !17276}
!17273 = !DILocalVariable(name: "ret", scope: !17271, file: !2491, line: 207, type: !895)
!17274 = !DILocalVariable(name: "__i", scope: !17275, file: !2491, line: 209, type: !16830)
!17275 = distinct !DILexicalBlock(scope: !17271, file: !2491, line: 209, column: 2)
!17276 = !DILocalVariable(name: "__key", scope: !17275, file: !2491, line: 209, type: !16830)
!17277 = !DILocation(line: 0, scope: !17271)
!17278 = !DILocation(line: 0, scope: !17275)
!17279 = !DILocation(line: 0, scope: !16858, inlinedAt: !17280)
!17280 = distinct !DILocation(line: 209, column: 2, scope: !17275)
!17281 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !17282)
!17282 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !17280)
!17283 = !DILocation(line: 0, scope: !16867, inlinedAt: !17282)
!17284 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17280)
!17285 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !17280)
!17286 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17280)
!17287 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !17280)
!17288 = !DILocation(line: 210, column: 9, scope: !17289)
!17289 = distinct !DILexicalBlock(scope: !17290, file: !2491, line: 209, column: 24)
!17290 = distinct !DILexicalBlock(scope: !17275, file: !2491, line: 209, column: 2)
!17291 = !DILocation(line: 0, scope: !16931, inlinedAt: !17292)
!17292 = distinct !DILocation(line: 209, column: 2, scope: !17290)
!17293 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17292)
!17294 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !17292)
!17295 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17292)
!17296 = !DILocation(line: 0, scope: !16945, inlinedAt: !17297)
!17297 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !17292)
!17298 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !17297)
!17299 = !DILocation(line: 212, column: 2, scope: !17271)
!17300 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2491, file: !2491, line: 215, type: !11541, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17301)
!17301 = !{!17302, !17303, !17304, !17306, !17307, !17310, !17311}
!17302 = !DILocalVariable(name: "ticks", arg: 1, scope: !17300, file: !2491, line: 215, type: !895)
!17303 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17300, file: !2491, line: 215, type: !145)
!17304 = !DILocalVariable(name: "__i", scope: !17305, file: !2491, line: 217, type: !16830)
!17305 = distinct !DILexicalBlock(scope: !17300, file: !2491, line: 217, column: 2)
!17306 = !DILocalVariable(name: "__key", scope: !17305, file: !2491, line: 217, type: !16830)
!17307 = !DILocalVariable(name: "next_to", scope: !17308, file: !2491, line: 218, type: !107)
!17308 = distinct !DILexicalBlock(scope: !17309, file: !2491, line: 217, column: 24)
!17309 = distinct !DILexicalBlock(scope: !17305, file: !2491, line: 217, column: 2)
!17310 = !DILocalVariable(name: "sooner", scope: !17308, file: !2491, line: 219, type: !145)
!17311 = !DILocalVariable(name: "imminent", scope: !17308, file: !2491, line: 221, type: !145)
!17312 = !DILocation(line: 0, scope: !17300)
!17313 = !DILocation(line: 0, scope: !17305)
!17314 = !DILocation(line: 0, scope: !16858, inlinedAt: !17315)
!17315 = distinct !DILocation(line: 217, column: 2, scope: !17305)
!17316 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !17317)
!17317 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !17315)
!17318 = !DILocation(line: 0, scope: !16867, inlinedAt: !17317)
!17319 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17315)
!17320 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !17315)
!17321 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17315)
!17322 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !17315)
!17323 = !DILocation(line: 218, column: 17, scope: !17308)
!17324 = !DILocation(line: 0, scope: !17308)
!17325 = !DILocation(line: 221, column: 27, scope: !17308)
!17326 = !DILocation(line: 233, column: 17, scope: !17327)
!17327 = distinct !DILexicalBlock(scope: !17308, file: !2491, line: 233, column: 7)
!17328 = !DILocation(line: 234, column: 26, scope: !17329)
!17329 = distinct !DILexicalBlock(scope: !17327, file: !2491, line: 233, column: 56)
!17330 = !DILocation(line: 234, column: 4, scope: !17329)
!17331 = !DILocation(line: 235, column: 3, scope: !17329)
!17332 = !DILocation(line: 0, scope: !16931, inlinedAt: !17333)
!17333 = distinct !DILocation(line: 217, column: 2, scope: !17309)
!17334 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17333)
!17335 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !17333)
!17336 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17333)
!17337 = !DILocation(line: 0, scope: !16945, inlinedAt: !17338)
!17338 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !17333)
!17339 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !17338)
!17340 = !DILocation(line: 237, column: 1, scope: !17300)
!17341 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2491, file: !2491, line: 239, type: !17342, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17344)
!17342 = !DISubroutineType(types: !17343)
!17343 = !{null, !895}
!17344 = !{!17345, !17346, !17347, !17349}
!17345 = !DILocalVariable(name: "ticks", arg: 1, scope: !17341, file: !2491, line: 239, type: !895)
!17346 = !DILocalVariable(name: "key", scope: !17341, file: !2491, line: 245, type: !16830)
!17347 = !DILocalVariable(name: "t", scope: !17348, file: !2491, line: 262, type: !2464)
!17348 = distinct !DILexicalBlock(scope: !17341, file: !2491, line: 261, column: 67)
!17349 = !DILocalVariable(name: "dt", scope: !17348, file: !2491, line: 263, type: !107)
!17350 = !DILocation(line: 0, scope: !17341)
!17351 = !DILocation(line: 242, column: 2, scope: !17341)
!17352 = !DILocation(line: 0, scope: !16858, inlinedAt: !17353)
!17353 = distinct !DILocation(line: 245, column: 25, scope: !17341)
!17354 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !17355)
!17355 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !17353)
!17356 = !DILocation(line: 0, scope: !16867, inlinedAt: !17355)
!17357 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17353)
!17358 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !17353)
!17359 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17353)
!17360 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !17353)
!17361 = !DILocation(line: 261, column: 9, scope: !17341)
!17362 = !DILocation(line: 261, column: 17, scope: !17341)
!17363 = !DILocation(line: 261, column: 25, scope: !17341)
!17364 = !DILocation(line: 261, column: 37, scope: !17341)
!17365 = !DILocation(line: 261, column: 47, scope: !17341)
!17366 = !DILocation(line: 261, column: 44, scope: !17341)
!17367 = !DILocation(line: 261, column: 2, scope: !17341)
!17368 = !DILocation(line: 0, scope: !17348)
!17369 = !DILocation(line: 263, column: 12, scope: !17348)
!17370 = !DILocation(line: 265, column: 16, scope: !17348)
!17371 = !DILocation(line: 265, column: 13, scope: !17348)
!17372 = !DILocation(line: 266, column: 13, scope: !17348)
!17373 = !DILocation(line: 267, column: 3, scope: !17348)
!17374 = !DILocation(line: 0, scope: !16931, inlinedAt: !17375)
!17375 = distinct !DILocation(line: 269, column: 3, scope: !17348)
!17376 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17375)
!17377 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !17375)
!17378 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17375)
!17379 = !DILocation(line: 0, scope: !16945, inlinedAt: !17380)
!17380 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !17375)
!17381 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !17380)
!17382 = !DILocation(line: 270, column: 6, scope: !17348)
!17383 = !DILocation(line: 270, column: 3, scope: !17348)
!17384 = !DILocation(line: 0, scope: !16858, inlinedAt: !17385)
!17385 = distinct !DILocation(line: 271, column: 9, scope: !17348)
!17386 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !17387)
!17387 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !17385)
!17388 = !DILocation(line: 0, scope: !16867, inlinedAt: !17387)
!17389 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17385)
!17390 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !17385)
!17391 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17385)
!17392 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !17385)
!17393 = !DILocation(line: 272, column: 22, scope: !17348)
!17394 = distinct !{!17394, !17367, !17395}
!17395 = !DILocation(line: 273, column: 2, scope: !17341)
!17396 = !DILocation(line: 276, column: 19, scope: !17397)
!17397 = distinct !DILexicalBlock(scope: !17398, file: !2491, line: 275, column: 23)
!17398 = distinct !DILexicalBlock(scope: !17341, file: !2491, line: 275, column: 6)
!17399 = !DILocation(line: 277, column: 2, scope: !17397)
!17400 = !DILocation(line: 279, column: 15, scope: !17341)
!17401 = !DILocation(line: 279, column: 12, scope: !17341)
!17402 = !DILocation(line: 280, column: 21, scope: !17341)
!17403 = !DILocation(line: 282, column: 24, scope: !17341)
!17404 = !DILocation(line: 282, column: 2, scope: !17341)
!17405 = !DILocation(line: 0, scope: !16931, inlinedAt: !17406)
!17406 = distinct !DILocation(line: 284, column: 2, scope: !17341)
!17407 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17406)
!17408 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !17406)
!17409 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17406)
!17410 = !DILocation(line: 0, scope: !16945, inlinedAt: !17411)
!17411 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !17406)
!17412 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !17411)
!17413 = !DILocation(line: 285, column: 1, scope: !17341)
!17414 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2491, file: !2491, line: 287, type: !17415, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17417)
!17415 = !DISubroutineType(types: !17416)
!17416 = !{!376}
!17417 = !{!17418, !17419, !17421}
!17418 = !DILocalVariable(name: "t", scope: !17414, file: !2491, line: 289, type: !566)
!17419 = !DILocalVariable(name: "__i", scope: !17420, file: !2491, line: 291, type: !16830)
!17420 = distinct !DILexicalBlock(scope: !17414, file: !2491, line: 291, column: 2)
!17421 = !DILocalVariable(name: "__key", scope: !17420, file: !2491, line: 291, type: !16830)
!17422 = !DILocation(line: 0, scope: !17414)
!17423 = !DILocation(line: 0, scope: !17420)
!17424 = !DILocation(line: 0, scope: !16858, inlinedAt: !17425)
!17425 = distinct !DILocation(line: 291, column: 2, scope: !17420)
!17426 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !17427)
!17427 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !17425)
!17428 = !DILocation(line: 0, scope: !16867, inlinedAt: !17427)
!17429 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17425)
!17430 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !17425)
!17431 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17425)
!17432 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !17425)
!17433 = !DILocation(line: 292, column: 7, scope: !17434)
!17434 = distinct !DILexicalBlock(scope: !17435, file: !2491, line: 291, column: 24)
!17435 = distinct !DILexicalBlock(scope: !17420, file: !2491, line: 291, column: 2)
!17436 = !DILocation(line: 292, column: 19, scope: !17434)
!17437 = !DILocation(line: 0, scope: !16931, inlinedAt: !17438)
!17438 = distinct !DILocation(line: 291, column: 2, scope: !17435)
!17439 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17438)
!17440 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !17438)
!17441 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17438)
!17442 = !DILocation(line: 0, scope: !16945, inlinedAt: !17443)
!17443 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !17438)
!17444 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !17443)
!17445 = !DILocation(line: 292, column: 17, scope: !17434)
!17446 = !DILocation(line: 294, column: 2, scope: !17414)
!17447 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2491, file: !2491, line: 297, type: !6341, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !2156)
!17448 = !DILocation(line: 300, column: 19, scope: !17447)
!17449 = !DILocation(line: 300, column: 9, scope: !17447)
!17450 = !DILocation(line: 300, column: 2, scope: !17447)
!17451 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2491, file: !2491, line: 306, type: !17415, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !2156)
!17452 = !DILocation(line: 308, column: 9, scope: !17451)
!17453 = !DILocation(line: 308, column: 2, scope: !17451)
!17454 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2491, file: !2491, line: 319, type: !6351, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17455)
!17455 = !{!17456, !17457, !17458, !17459}
!17456 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17454, file: !2491, line: 319, type: !152)
!17457 = !DILocalVariable(name: "start_cycles", scope: !17454, file: !2491, line: 328, type: !152)
!17458 = !DILocalVariable(name: "cycles_to_wait", scope: !17454, file: !2491, line: 331, type: !152)
!17459 = !DILocalVariable(name: "current_cycles", scope: !17460, file: !2491, line: 338, type: !152)
!17460 = distinct !DILexicalBlock(scope: !17461, file: !2491, line: 337, column: 11)
!17461 = distinct !DILexicalBlock(scope: !17462, file: !2491, line: 337, column: 2)
!17462 = distinct !DILexicalBlock(scope: !17454, file: !2491, line: 337, column: 2)
!17463 = !DILocation(line: 0, scope: !17454)
!17464 = !DILocation(line: 322, column: 19, scope: !17465)
!17465 = distinct !DILexicalBlock(scope: !17454, file: !2491, line: 322, column: 6)
!17466 = !DILocation(line: 322, column: 6, scope: !17454)
!17467 = !DILocation(line: 328, column: 26, scope: !17454)
!17468 = !DILocation(line: 333, column: 43, scope: !17454)
!17469 = !DILocation(line: 337, column: 2, scope: !17454)
!17470 = !DILocation(line: 338, column: 29, scope: !17460)
!17471 = !DILocation(line: 0, scope: !17460)
!17472 = !DILocation(line: 341, column: 23, scope: !17473)
!17473 = distinct !DILexicalBlock(scope: !17460, file: !2491, line: 341, column: 7)
!17474 = !DILocation(line: 341, column: 39, scope: !17473)
!17475 = !DILocation(line: 349, column: 1, scope: !17454)
!17476 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6341, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !2156)
!17477 = !DILocation(line: 1677, column: 9, scope: !17476)
!17478 = !DILocation(line: 1677, column: 2, scope: !17476)
!17479 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8754, file: !8754, line: 24, type: !6341, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !2156)
!17480 = !DILocation(line: 26, column: 9, scope: !17479)
!17481 = !DILocation(line: 26, column: 2, scope: !17479)
!17482 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2491, file: !2491, line: 364, type: !17483, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17485)
!17483 = !DISubroutineType(types: !17484)
!17484 = !{!566, !16820}
!17485 = !{!17486, !17487}
!17486 = !DILocalVariable(name: "timeout", arg: 1, scope: !17482, file: !2491, line: 364, type: !16820)
!17487 = !DILocalVariable(name: "dt", scope: !17482, file: !2491, line: 366, type: !564)
!17488 = !DILocation(line: 0, scope: !17482)
!17489 = !DILocation(line: 368, column: 6, scope: !17482)
!17490 = !DILocation(line: 371, column: 10, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !17492, file: !2491, line: 370, column: 47)
!17492 = distinct !DILexicalBlock(scope: !17493, file: !2491, line: 370, column: 13)
!17493 = distinct !DILexicalBlock(scope: !17482, file: !2491, line: 368, column: 6)
!17494 = !DILocation(line: 371, column: 3, scope: !17491)
!17495 = !DILocation(line: 376, column: 58, scope: !17496)
!17496 = distinct !DILexicalBlock(scope: !17497, file: !2491, line: 376, column: 7)
!17497 = distinct !DILexicalBlock(scope: !17492, file: !2491, line: 372, column: 9)
!17498 = !DILocation(line: 376, column: 7, scope: !17497)
!17499 = !DILocation(line: 376, column: 43, scope: !17496)
!17500 = !DILocation(line: 377, column: 4, scope: !17501)
!17501 = distinct !DILexicalBlock(scope: !17496, file: !2491, line: 376, column: 64)
!17502 = !DILocation(line: 379, column: 10, scope: !17497)
!17503 = !DILocation(line: 379, column: 33, scope: !17497)
!17504 = !DILocation(line: 379, column: 31, scope: !17497)
!17505 = !DILocation(line: 379, column: 3, scope: !17497)
!17506 = !DILocation(line: 0, scope: !17493)
!17507 = !DILocation(line: 381, column: 1, scope: !17482)
!17508 = distinct !DISubprogram(name: "boot_banner", scope: !17509, file: !17509, line: 26, type: !3082, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3068, retainedNodes: !2156)
!17509 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17510 = !DILocation(line: 34, column: 2, scope: !17508)
!17511 = !DILocation(line: 36, column: 1, scope: !17508)
