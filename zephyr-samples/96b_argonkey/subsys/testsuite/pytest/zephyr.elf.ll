; ModuleID = 'build/96b_argonkey/pytest/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.ztest_suite_stats = type { i32, i32, i32 }
%struct.ztest_suite_node = type { i8*, i8* ()*, void (i8*)*, void (i8*)*, void (i8*)*, i1 (i8*)*, %struct.ztest_suite_stats* }
%struct.ztest_unit_test_stats = type { i32, i32, i32, i32, i32 }
%struct.ztest_unit_test = type { i8*, i8*, void (i8*)*, i32, %struct.ztest_unit_test_stats* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.k_spinlock = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct.ztest_suite_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._thread_arch = type { i32, i32 }
%struct.ztest_test_rule = type { void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)* }
%struct.ztest_expected_result_entry = type { i8*, i8*, i32 }
%struct.ztest_arch_api = type { void (i8*)*, i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, i8*)* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236404 to i8*), void (i8*)* inttoptr (i32 134235081 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236404 to i8*), void (i8*)* inttoptr (i32 134235061 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236404 to i8*), void (i8*)* inttoptr (i32 134235051 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236404 to i8*), void (i8*)* inttoptr (i32 134235151 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236404 to i8*), void (i8*)* inttoptr (i32 134235141 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236404 to i8*), void (i8*)* inttoptr (i32 134235131 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236404 to i8*), void (i8*)* inttoptr (i32 134235121 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236404 to i8*), void (i8*)* inttoptr (i32 134235111 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236404 to i8*), void (i8*)* inttoptr (i32 134235101 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236404 to i8*), void (i8*)* inttoptr (i32 134235091 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236404 to i8*), void (i8*)* inttoptr (i32 134235071 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct.ztest_suite_node* @z_ztest_test_node_test_pytest to i8*), i8* bitcast (%struct.ztest_unit_test* @z_ztest_unit_test__test_pytest__test_pytest to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [12 x i8] c"test_pytest\00", align 1
@z_ztest_suite_node_stats_test_pytest = dso_local global %struct.ztest_suite_stats zeroinitializer, align 4, !dbg !25
@z_ztest_test_node_test_pytest = internal constant %struct.ztest_suite_node { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* ()* null, void (i8*)* null, void (i8*)* null, void (i8*)* null, i1 (i8*)* null, %struct.ztest_suite_stats* @z_ztest_suite_node_stats_test_pytest }, section "._ztest_suite_node.static.z_ztest_test_node_test_pytest", align 4, !dbg !109
@z_ztest_unit_test_stats_test_pytest_test_pytest = dso_local global %struct.ztest_unit_test_stats zeroinitializer, align 4, !dbg !173
@z_ztest_unit_test__test_pytest__test_pytest = internal global %struct.ztest_unit_test { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), void (i8*)* @_test_pytest_test_pytest_wrapper, i32 0, %struct.ztest_unit_test_stats* @z_ztest_unit_test_stats_test_pytest_test_pytest }, section "._ztest_unit_test.static.z_ztest_unit_test__test_pytest__test_pytest", align 4, !dbg !155
@.str.1 = private unnamed_addr constant [13 x i8] c"Hello world\0A\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !175
@.str.1.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !207
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !216
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !266
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !295
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !447
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !301
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !456
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !492
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0), %struct.k_spinlock { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.88, i32 0, i32 0), %struct.k_spinlock { i32 285933602 } }], align 4, !dbg !502
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !507
@.str.87 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.88 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@phase = dso_local local_unnamed_addr global i32 5, align 4, !dbg !527
@test_status = internal unnamed_addr global i32 0, align 4, !dbg !582
@.str.89 = private unnamed_addr constant [69 x i8] c"===================================================================\0A\00", align 1
@.str.1.92 = private unnamed_addr constant [22 x i8] c"PROJECT EXECUTION %s\0A\00", align 1
@.str.2.91 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.3.90 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@current_test_failed_assumption = internal unnamed_addr global i1 false, align 1, !dbg !693
@test_result = internal unnamed_addr global i32 0, align 4, !dbg !569
@.str.4.104 = private unnamed_addr constant [51 x i8] c" ERROR: cannot fail in test phase '%s()', bailing\0A\00", align 1
@.str.5.105 = private unnamed_addr constant [51 x i8] c" ERROR: cannot pass in test phase '%s()', bailing\0A\00", align 1
@.str.6.93 = private unnamed_addr constant [51 x i8] c" ERROR: cannot skip in test phase '%s()', bailing\0A\00", align 1
@_ztest_unit_test_list_start = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_unit_test_list_end = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_suite_node_list_start = external dso_local global [0 x %struct.ztest_suite_node], align 4
@_ztest_suite_node_list_end = external dso_local global [0 x %struct.ztest_suite_node], align 4
@.str.7.120 = private unnamed_addr constant [37 x i8] c"ERROR: Test suite '%s' did not run.\0A\00", align 1
@.str.8.121 = private unnamed_addr constant [66 x i8] c"ERROR: Test '%s' assigned to test suite '%s' which doesn't exist\0A\00", align 1
@.str.9.122 = private unnamed_addr constant [21 x i8] c"Bad stats for %s.%s\0A\00", align 1
@ztest_thread_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/testsuite/ztest/src/ztest_new.c\22.0", align 64, !dbg !573
@ztest_thread = internal global %struct.k_thread zeroinitializer, align 8, !dbg !584
@.str.10.95 = private unnamed_addr constant [6 x i8] c"setup\00", align 1
@.str.11.96 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@.str.12.97 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.13.98 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.14.99 = private unnamed_addr constant [9 x i8] c"teardown\00", align 1
@.str.15.100 = private unnamed_addr constant [10 x i8] c"framework\00", align 1
@.str.16.94 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.17.106 = private unnamed_addr constant [22 x i8] c"Running TESTSUITE %s\0A\00", align 1
@.str.18.108 = private unnamed_addr constant [24 x i8] c"TESTSUITE %s succeeded\0A\00", align 1
@.str.19.107 = private unnamed_addr constant [22 x i8] c"TESTSUITE %s failed.\0A\00", align 1
@.str.20.109 = private unnamed_addr constant [12 x i8] c"START - %s\0A\00", align 1
@tc_spend_time = internal unnamed_addr global i32 0, align 4, !dbg !691
@.str.21.110 = private unnamed_addr constant [29 x i8] c" %s - %s in %u.%03u seconds\0A\00", align 1
@tc_start_time = internal unnamed_addr global i32 0, align 4, !dbg !688
@_ztest_test_rule_list_start = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_test_rule_list_end = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_expected_result_entry_list_start = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@_ztest_expected_result_entry_list_end = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@.str.24.112 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.25.113 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.26.114 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.27.111 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.28.115 = private unnamed_addr constant [41 x i8] c"\0A------ TESTSUITE SUMMARY START ------\0A\0A\00", align 1
@.str.29.116 = private unnamed_addr constant [38 x i8] c"------ TESTSUITE SUMMARY END ------\0A\0A\00", align 1
@.str.30.117 = private unnamed_addr constant [44 x i8] c" - %s - [%s.%s] duration = %u.%03u seconds\0A\00", align 1
@.str.31.118 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32.119 = private unnamed_addr constant [100 x i8] c"SUITE %s - %3d.%02d%% [%s]: pass = %d, fail = %d, skip = %d, total = %d duration = %u.%03u seconds\0A\00", align 1
@switch.table.get_friendly_phase_name = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.95, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.96, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.97, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.99, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.100, i32 0, i32 0)], align 4
@switch.table.TC_RESULT_TO_STR = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.113, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.114, i32 0, i32 0)], align 4
@ztest_api = dso_local local_unnamed_addr constant %struct.ztest_arch_api { void (i8*)* @z_ztest_run_all, i1 (i8*, %struct.ztest_suite_node*)* @z_ztest_should_suite_run, i1 (i8*, i8*)* @z_ztest_should_test_run }, align 4, !dbg !694
@.str.127 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.128 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.129 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !729
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !922
@.str.4.125 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !883
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !866
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.125, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !839
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !855
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !885
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !899
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !901
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !903
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !905
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !907
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !909
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !911
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !913
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !915
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !917
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !927
@.str.130 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !954
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1049
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1038
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1090
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !947
@.str.139 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1156
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1437
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1407
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1393
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1335
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !945
@.str.1.147 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1439
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1411
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1409
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1349
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !943
@.str.2.148 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1452
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1415
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1413
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1358
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !941
@.str.3.149 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1454
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1419
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1417
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1367
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !939
@.str.4.150 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1456
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1423
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1421
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1373
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !937
@.str.5.151 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1458
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1427
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1425
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1379
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !935
@.str.6.152 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1460
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1431
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1429
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1385
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !933
@.str.7.153 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1462
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1435
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1433
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1391
@.str.8.140 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.146 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.142 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.145 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.141 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.143 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.144 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.157 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.157, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1464
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !949
@.str.1.160 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1620
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1675
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1618
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1677
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.160, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1609
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1611
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1664
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1667
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1669
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1672
@.str.2.162 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.163 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.164 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.165 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.166 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.169 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.171 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.172 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.130, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1022
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1688
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1797
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1799
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1795
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1790
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1764
@.str.176 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.177 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.178 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.179 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.180 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.181 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1801
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.139, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1333
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.147, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1347
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.148, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1356
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.149, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1365
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.150, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1371
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.151, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1377
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.152, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1383
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.153, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1389
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1891
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1932
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1935
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1942
@.str.215 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.219 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.220 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.221 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.225 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.226 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.227 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.228 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.229 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.224 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.223 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.225, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.226, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.227, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.228, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.229, i32 0, i32 0)], align 4
@.str.231 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1949
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2173
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2162
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2168
@z_idle_stacks = internal global [1 x [4160 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2180
@.str.5.237 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2185
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.241 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.248, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.249, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.250, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.251, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.252, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.253, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.254, i32 0, i32 0)], align 4, !dbg !2213
@.str.248 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.249 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.250 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.251 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.252 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.253 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.247 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.254 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2328
@.str.8.246 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.259 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.260 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.261 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.262 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.266 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.267 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.271 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.272 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.281 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.282 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.283 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2341
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2452
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2455
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2457
@.str.284 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.300 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.291 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.305 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.313 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.293 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.308 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.290 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.317 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.318 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.324 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.325 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.326 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.329 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.285 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.286 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.287 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.288 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.289 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.292 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.304 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.309 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.310 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2170
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2178
@.str.23.319 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.335 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.336 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.337 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.338 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2459
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2489
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2494
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2036
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2492
@.str.4.339 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.340 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.341 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.345 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.346 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.366 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3080 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3084, !srcloc !3085
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3086, !srcloc !3087
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3088, !srcloc !3089
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3090, !srcloc !3091
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3092, !srcloc !3093
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3094, !srcloc !3095
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3096, !srcloc !3097
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3098, !srcloc !3099
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3100, !srcloc !3101
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3102, !srcloc !3103
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3104, !srcloc !3105
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3106, !srcloc !3107
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3108, !srcloc !3109
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3110, !srcloc !3111
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3112, !srcloc !3113
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3114, !srcloc !3115
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3116, !srcloc !3117
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3118, !srcloc !3119
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3120, !srcloc !3121
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3122, !srcloc !3123
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3124, !srcloc !3125
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3126, !srcloc !3127
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3128, !srcloc !3129
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3130, !srcloc !3131
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3132, !srcloc !3133
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3134, !srcloc !3135
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3136, !srcloc !3137
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3138, !srcloc !3141
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3142, !srcloc !3143
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3144, !srcloc !3145
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3146, !srcloc !3147
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3148, !srcloc !3149
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3150, !srcloc !3151
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3152, !srcloc !3153
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3154, !srcloc !3155
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3156, !srcloc !3157
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3166, !srcloc !3167
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3168, !srcloc !3169
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3170, !srcloc !3171
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3172, !srcloc !3173
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3174, !srcloc !3175
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3176, !srcloc !3177
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3178, !srcloc !3179
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3180, !srcloc !3181
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3182, !srcloc !3183
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3184, !srcloc !3185
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3186, !srcloc !3187
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3188, !srcloc !3189
  ret void, !dbg !3190
}

; Function Attrs: noinline nounwind optsize
define internal void @_test_pytest_test_pytest_wrapper(i8* nocapture noundef readnone %0) #1 !dbg !3193 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3195, metadata !DIExpression()), !dbg !3196
  tail call fastcc void @test_pytest_test_pytest() #24, !dbg !3197
  ret void, !dbg !3197
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_pytest_test_pytest() unnamed_addr #1 !dbg !3198 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3199
  ret void, !dbg !3200
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3201 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3216, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %0, metadata !3212, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %1, metadata !3213, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %2, metadata !3214, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %3, metadata !3215, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %0, metadata !3217, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %0, metadata !3218, metadata !DIExpression()), !dbg !3279
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3280
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3280
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3221, metadata !DIExpression()), !dbg !3281
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3282
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3282
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3223, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 0, metadata !3224, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 0, metadata !3225, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 0, metadata !3226, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 -1, metadata !3227, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8 0, metadata !3230, metadata !DIExpression()), !dbg !3279
  %12 = and i32 %2, 4, !dbg !3284
  %13 = icmp eq i32 %12, 0, !dbg !3285
  call void @llvm.dbg.value(metadata i1 %13, metadata !3231, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3279
  %14 = lshr i32 %2, 3, !dbg !3286
  %15 = and i32 %14, 7, !dbg !3286
  %16 = add nuw nsw i32 %15, 1, !dbg !3287
  call void @llvm.dbg.value(metadata i32 %16, metadata !3232, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8 0, metadata !3233, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %0, metadata !3234, metadata !DIExpression()), !dbg !3279
  %17 = ptrtoint i8* %0 to i32, !dbg !3288
  %18 = and i32 %17, 3, !dbg !3290
  %19 = icmp eq i32 %18, 0, !dbg !3290
  br i1 %19, label %20, label %320, !dbg !3291

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3292
  call void @llvm.dbg.value(metadata i8* %21, metadata !3218, metadata !DIExpression()), !dbg !3279
  %22 = icmp eq i8* %0, null, !dbg !3293
  %23 = and i32 %1, 7, !dbg !3295
  %24 = sub nuw nsw i32 8, %23, !dbg !3295
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3295
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3295
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3295
  call void @llvm.dbg.value(metadata i32 %27, metadata !3213, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %26, metadata !3218, metadata !DIExpression()), !dbg !3279
  br i1 %22, label %33, label %28, !dbg !3296

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3298
  %30 = sub i32 4, %17, !dbg !3298
  %31 = add i32 %30, %29, !dbg !3299
  %32 = icmp ugt i32 %31, %27, !dbg !3300
  br i1 %32, label %320, label %33, !dbg !3301

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3302
  call void @llvm.dbg.value(metadata i8* %34, metadata !3215, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %3, metadata !3229, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 4, metadata !3220, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 4, metadata !3219, metadata !DIExpression()), !dbg !3279
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3303

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3216, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %42, metadata !3215, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %43, metadata !3218, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %44, metadata !3219, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %45, metadata !3220, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %72, metadata !3227, metadata !DIExpression()), !dbg !3279
  br i1 %46, label %73, label %47, !dbg !3304

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3305
  %49 = zext i1 %48 to i32, !dbg !3309
  %50 = add nsw i32 %72, %49, !dbg !3309
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3309
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3309
  call void @llvm.dbg.value(metadata i32 %52, metadata !3219, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %51, metadata !3220, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8 poison, metadata !3230, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %50, metadata !3227, metadata !DIExpression()), !dbg !3279
  br label %53, !dbg !3310

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3216, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %40, metadata !3215, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %58, metadata !3218, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %57, metadata !3219, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %56, metadata !3220, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8 poison, metadata !3230, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %54, metadata !3227, metadata !DIExpression()), !dbg !3279
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3311
  call void @llvm.dbg.value(metadata i8* %60, metadata !3215, metadata !DIExpression()), !dbg !3279
  %61 = load i8, i8* %60, align 1, !dbg !3313
  %62 = icmp eq i8 %61, 0, !dbg !3314
  br i1 %62, label %226, label %63, !dbg !3315, !llvm.loop !3316

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3304

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3319

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3230, metadata !DIExpression()), !dbg !3279
  %75 = add nsw i32 %72, -1, !dbg !3320
  call void @llvm.dbg.value(metadata i32 %75, metadata !3227, metadata !DIExpression()), !dbg !3279
  br label %53, !dbg !3321

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3322

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3220, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 4, metadata !3219, metadata !DIExpression()), !dbg !3279
  br label %53, !dbg !3323

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3220, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 4, metadata !3219, metadata !DIExpression()), !dbg !3279
  br label %53, !dbg !3324

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3325
  %81 = icmp eq i8 %80, 108, !dbg !3327
  br i1 %81, label %82, label %109, !dbg !3328

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3329
  %84 = load i8, i8* %83, align 1, !dbg !3329
  %85 = icmp eq i8 %84, 108, !dbg !3332
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3333
  %89 = add i32 %88, 7, !dbg !3333
  %90 = and i32 %89, -8, !dbg !3333
  %91 = inttoptr i32 %90 to i8*, !dbg !3333
  %92 = inttoptr i32 %90 to double*, !dbg !3333
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3333
  %94 = load double, double* %92, align 8, !dbg !3333
  call void @llvm.dbg.value(metadata i8* %93, metadata !3216, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 8, metadata !3219, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 8, metadata !3220, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata double %94, metadata !3247, metadata !DIExpression()), !dbg !3335
  %95 = ptrtoint i8* %43 to i32, !dbg !3336
  %96 = add i32 %95, 7, !dbg !3336
  %97 = and i32 %96, -8, !dbg !3336
  %98 = inttoptr i32 %97 to i8*, !dbg !3337
  call void @llvm.dbg.value(metadata i8* %98, metadata !3218, metadata !DIExpression()), !dbg !3279
  br i1 %22, label %104, label %99, !dbg !3338

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3339
  %101 = icmp ugt i32 %100, %196, !dbg !3343
  br i1 %101, label %320, label %102, !dbg !3344

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3345
  store double %94, double* %103, align 8, !dbg !3345
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3348
  call void @llvm.dbg.value(metadata i8* %105, metadata !3218, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8 poison, metadata !3230, metadata !DIExpression()), !dbg !3279
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3230, metadata !DIExpression()), !dbg !3279
  br label %53, !dbg !3349

107:                                              ; preds = %73, %73
  br label %109, !dbg !3350

108:                                              ; preds = %73
  br label %109, !dbg !3350

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3279
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3279
  call void @llvm.dbg.value(metadata i32 %113, metadata !3219, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %112, metadata !3220, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8 poison, metadata !3233, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8 poison, metadata !3230, metadata !DIExpression()), !dbg !3279
  %114 = ptrtoint i8* %43 to i32, !dbg !3350
  %115 = add i32 %114, -1, !dbg !3350
  %116 = add i32 %115, %112, !dbg !3350
  %117 = sub i32 0, %112, !dbg !3350
  %118 = and i32 %116, %117, !dbg !3350
  %119 = inttoptr i32 %118 to i8*, !dbg !3351
  call void @llvm.dbg.value(metadata i8* %119, metadata !3218, metadata !DIExpression()), !dbg !3279
  br i1 %22, label %124, label %120, !dbg !3352

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3354
  %122 = add i32 %121, %118, !dbg !3355
  %123 = icmp ugt i32 %122, %196, !dbg !3356
  br i1 %123, label %320, label %124, !dbg !3357

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3358

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3351
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3359
  call void @llvm.dbg.value(metadata i8* %127, metadata !3216, metadata !DIExpression()), !dbg !3279
  %128 = bitcast i8* %41 to i8**, !dbg !3359
  %129 = load i8*, i8** %128, align 4, !dbg !3359
  call void @llvm.dbg.value(metadata i8* %129, metadata !3229, metadata !DIExpression()), !dbg !3279
  br label %130, !dbg !3360

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3279
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3361
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3279
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3362
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3279
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3279
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3279
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3279
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3279
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3279
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3363
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3216, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %142, metadata !3213, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %141, metadata !3215, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %140, metadata !3218, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %139, metadata !3219, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %138, metadata !3220, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %137, metadata !3224, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %136, metadata !3232, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %135, metadata !3225, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8 poison, metadata !3230, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %133, metadata !3229, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %132, metadata !3227, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %131, metadata !3226, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.label(metadata !3278), !dbg !3365
  br i1 %22, label %146, label %144, !dbg !3366

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3367
  store i8* %133, i8** %145, align 4, !dbg !3370
  br label %146, !dbg !3371

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3372
  call void @llvm.dbg.value(metadata i32 %147, metadata !3232, metadata !DIExpression()), !dbg !3279
  %148 = icmp sgt i32 %136, 0, !dbg !3373
  br i1 %148, label %152, label %149, !dbg !3374

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3375
  %151 = zext i1 %150 to i32, !dbg !3375
  br label %152, !dbg !3374

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3374
  %154 = icmp eq i32 %153, 0, !dbg !3374
  call void @llvm.dbg.value(metadata i1 %154, metadata !3256, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3376
  call void @llvm.dbg.value(metadata i1 %36, metadata !3259, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3376
  %155 = or i1 %36, %154, !dbg !3377
  br i1 %155, label %156, label %192, !dbg !3377

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3378
  %158 = sub i32 %157, %17, !dbg !3378
  %159 = lshr i32 %158, 2, !dbg !3379
  call void @llvm.dbg.value(metadata i32 %159, metadata !3260, metadata !DIExpression()), !dbg !3380
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3381
  br i1 %161, label %162, label %163, !dbg !3381

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3383
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0)) #25, !dbg !3383
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3383
  unreachable, !dbg !3383

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3388
  br i1 %164, label %165, label %166, !dbg !3390

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3391
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #25, !dbg !3391
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3391
  unreachable, !dbg !3391

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3396

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3397
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3400
  store i8 %168, i8* %169, align 1, !dbg !3401
  %170 = trunc i32 %132 to i8, !dbg !3402
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3403
  store i8 %170, i8* %171, align 1, !dbg !3404
  br i1 %154, label %175, label %172, !dbg !3405

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3406
  store i8 %173, i8* %169, align 1, !dbg !3406
  %174 = add i32 %131, 1, !dbg !3409
  call void @llvm.dbg.value(metadata i32 %174, metadata !3226, metadata !DIExpression()), !dbg !3279
  br label %187, !dbg !3410

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3411
  call void @llvm.dbg.value(metadata i32 %176, metadata !3225, metadata !DIExpression()), !dbg !3279
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3413

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3414
  call void @llvm.dbg.value(metadata i32 %179, metadata !3213, metadata !DIExpression()), !dbg !3279
  br label %187, !dbg !3417

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3418

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3419
  call void @llvm.dbg.value(metadata i32 %182, metadata !3213, metadata !DIExpression()), !dbg !3279
  br label %187, !dbg !3422

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3423
  %185 = add i32 %142, 2, !dbg !3425
  %186 = add i32 %185, %184, !dbg !3426
  call void @llvm.dbg.value(metadata i32 %186, metadata !3213, metadata !DIExpression()), !dbg !3279
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3279
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3279
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3279
  call void @llvm.dbg.value(metadata i32 %190, metadata !3213, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %189, metadata !3225, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %188, metadata !3226, metadata !DIExpression()), !dbg !3279
  %191 = add nuw nsw i32 %137, 1, !dbg !3427
  call void @llvm.dbg.value(metadata i32 %191, metadata !3224, metadata !DIExpression()), !dbg !3279
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3279
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3362
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3279
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3363
  call void @llvm.dbg.value(metadata i32 %196, metadata !3213, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %195, metadata !3224, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %194, metadata !3225, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %193, metadata !3226, metadata !DIExpression()), !dbg !3279
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3428
  call void @llvm.dbg.value(metadata i8* %197, metadata !3218, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %143, metadata !3216, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %141, metadata !3215, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %139, metadata !3219, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %138, metadata !3220, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8 poison, metadata !3233, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8 poison, metadata !3230, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %132, metadata !3227, metadata !DIExpression()), !dbg !3279
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3311
  call void @llvm.dbg.value(metadata i8* %198, metadata !3215, metadata !DIExpression()), !dbg !3279
  %199 = load i8, i8* %198, align 1, !dbg !3313
  %200 = icmp eq i8 %199, 0, !dbg !3314
  br i1 %200, label %226, label %63, !dbg !3315

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3429

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3430
  call void @llvm.dbg.value(metadata i8* %203, metadata !3216, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 undef, metadata !3263, metadata !DIExpression()), !dbg !3431
  br i1 %22, label %219, label %204, !dbg !3432

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3430
  %206 = load i32, i32* %205, align 4, !dbg !3430
  call void @llvm.dbg.value(metadata i32 %206, metadata !3263, metadata !DIExpression()), !dbg !3431
  %207 = inttoptr i32 %118 to i32*, !dbg !3433
  store i32 %206, i32* %207, align 4, !dbg !3436
  br label %219, !dbg !3437

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3438
  %210 = add i32 %209, 7, !dbg !3438
  %211 = and i32 %210, -8, !dbg !3438
  %212 = inttoptr i32 %211 to i8*, !dbg !3438
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3438
  call void @llvm.dbg.value(metadata i8* %213, metadata !3216, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i64 undef, metadata !3269, metadata !DIExpression()), !dbg !3439
  br i1 %22, label %219, label %214, !dbg !3440

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3438
  %216 = load i64, i64* %215, align 8, !dbg !3438
  call void @llvm.dbg.value(metadata i64 %216, metadata !3269, metadata !DIExpression()), !dbg !3439
  %217 = inttoptr i32 %118 to i64*, !dbg !3441
  store i64 %216, i64* %217, align 8, !dbg !3446
  br label %219, !dbg !3447

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3448
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3448
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3448
  unreachable, !dbg !3448

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3453
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3453
  call void @llvm.dbg.value(metadata i8* %221, metadata !3216, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %40, metadata !3215, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %222, metadata !3218, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %113, metadata !3219, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %112, metadata !3220, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8 poison, metadata !3233, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8 poison, metadata !3230, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %72, metadata !3227, metadata !DIExpression()), !dbg !3279
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3311
  call void @llvm.dbg.value(metadata i8* %223, metadata !3215, metadata !DIExpression()), !dbg !3279
  %224 = load i8, i8* %223, align 1, !dbg !3313
  %225 = icmp eq i8 %224, 0, !dbg !3314
  br i1 %225, label %226, label %38, !dbg !3315

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3454
  %228 = ptrtoint i8* %227 to i32, !dbg !3455
  %229 = sub i32 %228, %17, !dbg !3455
  %230 = lshr i32 %229, 2, !dbg !3457
  %231 = icmp ugt i32 %229, 1023, !dbg !3458
  br i1 %231, label %232, label %233, !dbg !3459

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3460
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3460
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3460
  unreachable, !dbg !3460

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3465

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3466
  %236 = add i32 %235, %229, !dbg !3469
  br label %320, !dbg !3470

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3471
  store i8 %238, i8* %0, align 1, !dbg !3472
  %239 = trunc i32 %194 to i8, !dbg !3473
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3475
  store i8 %240, i8* %242, align 1, !dbg !3477
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3478
  store i8 %241, i8* %243, align 1, !dbg !3479
  %244 = trunc i32 %193 to i8, !dbg !3480
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3481
  store i8 %244, i8* %245, align 1, !dbg !3482
  %246 = icmp eq i32 %193, 0, !dbg !3483
  %247 = xor i1 %246, true, !dbg !3484
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3484
  call void @llvm.dbg.value(metadata i8* %227, metadata !3218, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 0, metadata !3228, metadata !DIExpression()), !dbg !3279
  br i1 %249, label %250, label %269, !dbg !3484

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3485

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3218, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %254, metadata !3228, metadata !DIExpression()), !dbg !3279
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3486
  %256 = load i8, i8* %255, align 1, !dbg !3486
  %257 = icmp sgt i8 %256, -1, !dbg !3488
  br i1 %257, label %265, label %258, !dbg !3489

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3272, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3490
  %259 = ptrtoint i8* %253 to i32, !dbg !3491
  %260 = add i32 %251, %259, !dbg !3493
  %261 = icmp ugt i32 %260, %196, !dbg !3494
  br i1 %261, label %320, label %262, !dbg !3495

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3496
  call void @llvm.dbg.value(metadata i8 %263, metadata !3272, metadata !DIExpression()), !dbg !3490
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3497
  call void @llvm.dbg.value(metadata i8* %264, metadata !3218, metadata !DIExpression()), !dbg !3279
  store i8 %263, i8* %253, align 1, !dbg !3498
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3428
  call void @llvm.dbg.value(metadata i8* %266, metadata !3218, metadata !DIExpression()), !dbg !3279
  %267 = add nuw i32 %254, 1, !dbg !3499
  call void @llvm.dbg.value(metadata i32 %267, metadata !3228, metadata !DIExpression()), !dbg !3279
  %268 = icmp eq i32 %267, %195, !dbg !3500
  br i1 %268, label %269, label %252, !dbg !3485, !llvm.loop !3501

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3428
  call void @llvm.dbg.value(metadata i8* %270, metadata !3218, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 0, metadata !3228, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %133, metadata !3229, metadata !DIExpression()), !dbg !3279
  %271 = icmp eq i32 %195, 0, !dbg !3503
  br i1 %271, label %316, label %272, !dbg !3506

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3506

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3218, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %276, metadata !3229, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %277, metadata !3228, metadata !DIExpression()), !dbg !3279
  br i1 %246, label %282, label %278, !dbg !3507

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3510
  %280 = load i8, i8* %279, align 1, !dbg !3510
  %281 = icmp sgt i8 %280, -1, !dbg !3511
  br i1 %281, label %282, label %311, !dbg !3512

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3513

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3219, metadata !DIExpression()), !dbg !3279
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3514
  %285 = load i8, i8* %284, align 1, !dbg !3514
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3517
  call void @llvm.dbg.value(metadata i8* %286, metadata !3218, metadata !DIExpression()), !dbg !3279
  store i8 %285, i8* %275, align 1, !dbg !3518
  br label %297, !dbg !3519

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3520
  %289 = load i8, i8* %288, align 1, !dbg !3520
  %290 = zext i8 %289 to i32, !dbg !3520
  %291 = shl nuw nsw i32 %290, 2, !dbg !3522
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3523
  %293 = bitcast i8* %292 to i8**, !dbg !3524
  %294 = load i8*, i8** %293, align 4, !dbg !3524
  call void @llvm.dbg.value(metadata i8* %294, metadata !3229, metadata !DIExpression()), !dbg !3279
  store i8* null, i8** %293, align 4, !dbg !3525
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3526
  %296 = add i32 %295, 1, !dbg !3527
  call void @llvm.dbg.value(metadata i32 %296, metadata !3219, metadata !DIExpression()), !dbg !3279
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3279
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3528
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3279
  call void @llvm.dbg.value(metadata i8* %300, metadata !3218, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 %299, metadata !3219, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %298, metadata !3229, metadata !DIExpression()), !dbg !3279
  %301 = ptrtoint i8* %300 to i32, !dbg !3529
  %302 = add i32 %273, %299, !dbg !3531
  %303 = add i32 %302, %301, !dbg !3532
  %304 = icmp ugt i32 %303, %196, !dbg !3533
  br i1 %304, label %320, label %305, !dbg !3534

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3535
  %307 = load i8, i8* %306, align 1, !dbg !3535
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3536
  call void @llvm.dbg.value(metadata i8* %308, metadata !3218, metadata !DIExpression()), !dbg !3279
  store i8 %307, i8* %300, align 1, !dbg !3537
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3538
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3539
  call void @llvm.dbg.value(metadata i8* %310, metadata !3218, metadata !DIExpression()), !dbg !3279
  br label %311, !dbg !3540

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3541
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3279
  call void @llvm.dbg.value(metadata i8* %313, metadata !3218, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i8* %312, metadata !3229, metadata !DIExpression()), !dbg !3279
  %314 = add nuw i32 %277, 1, !dbg !3542
  call void @llvm.dbg.value(metadata i32 %314, metadata !3228, metadata !DIExpression()), !dbg !3279
  %315 = icmp eq i32 %314, %195, !dbg !3503
  br i1 %315, label %316, label %274, !dbg !3506, !llvm.loop !3543

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3428
  %318 = ptrtoint i8* %317 to i32, !dbg !3545
  %319 = sub i32 %318, %17, !dbg !3545
  br label %320, !dbg !3546

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3547
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3547
  ret i32 %321, !dbg !3547
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3548 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3552, metadata !DIExpression()), !dbg !3553
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3554
  ret i1 %2, !dbg !3555
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3556 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3559, metadata !DIExpression()), !dbg !3560
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3561
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3562
  %4 = and i1 %2, %3, !dbg !3562
  ret i1 %4, !dbg !3563
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3564 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3568, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata i32 %1, metadata !3569, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata i32 %2, metadata !3570, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata i8* %3, metadata !3571, metadata !DIExpression()), !dbg !3574
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3575
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3575
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3572, metadata !DIExpression()), !dbg !3576
  call void @llvm.va_start(i8* nonnull %6), !dbg !3577
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3578
  %8 = load i32, i32* %7, align 4, !dbg !3578
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3578
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3578
  call void @llvm.dbg.value(metadata i32 %10, metadata !3573, metadata !DIExpression()), !dbg !3574
  call void @llvm.va_end(i8* nonnull %6), !dbg !3579
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3580
  ret i32 %10, !dbg !3581
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3582 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3594, metadata !DIExpression()), !dbg !3613
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3595, metadata !DIExpression()), !dbg !3613
  call void @llvm.dbg.value(metadata i8* %2, metadata !3596, metadata !DIExpression()), !dbg !3613
  call void @llvm.dbg.value(metadata i8* %3, metadata !3597, metadata !DIExpression()), !dbg !3613
  call void @llvm.dbg.value(metadata i8* %3, metadata !3598, metadata !DIExpression()), !dbg !3613
  call void @llvm.dbg.value(metadata i8* %3, metadata !3599, metadata !DIExpression()), !dbg !3613
  %5 = icmp eq i8* %3, null, !dbg !3614
  br i1 %5, label %45, label %6, !dbg !3616

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3608, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3613
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3617
  %8 = load i8, i8* %7, align 1, !dbg !3617
  %9 = zext i8 %8 to i32, !dbg !3618
  call void @llvm.dbg.value(metadata i32 %9, metadata !3609, metadata !DIExpression()), !dbg !3613
  call void @llvm.dbg.value(metadata i8 undef, metadata !3610, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3613
  call void @llvm.dbg.value(metadata i8 undef, metadata !3611, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3613
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3605, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3613
  call void @llvm.dbg.value(metadata i32 0, metadata !3607, metadata !DIExpression()), !dbg !3613
  %10 = icmp eq i8 %8, 0, !dbg !3619
  br i1 %10, label %39, label %11, !dbg !3622

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3623
  call void @llvm.dbg.value(metadata i8 %12, metadata !3608, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3613
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3605, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3613
  %13 = zext i8 %12 to i32, !dbg !3624
  call void @llvm.dbg.value(metadata i32 %13, metadata !3608, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3613
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3605, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3613
  %14 = shl nuw nsw i32 %13, 2, !dbg !3625
  call void @llvm.dbg.value(metadata i32 %14, metadata !3608, metadata !DIExpression()), !dbg !3613
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3605, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3613
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3626
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3605, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3613
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3627
  %17 = load i8, i8* %16, align 1, !dbg !3627
  call void @llvm.dbg.value(metadata i8 %17, metadata !3610, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3613
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3605, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3613
  %18 = zext i8 %17 to i32, !dbg !3628
  call void @llvm.dbg.value(metadata i32 %18, metadata !3610, metadata !DIExpression()), !dbg !3613
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3605, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3613
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3629
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3605, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3613
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3630
  %21 = load i8, i8* %20, align 1, !dbg !3630
  call void @llvm.dbg.value(metadata i8 %21, metadata !3611, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3613
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3605, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3613
  %22 = zext i8 %21 to i32, !dbg !3631
  call void @llvm.dbg.value(metadata i32 %22, metadata !3611, metadata !DIExpression()), !dbg !3613
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3605, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3613
  %23 = shl nuw nsw i32 %22, 1, !dbg !3632
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3605, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3613
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3633
  call void @llvm.dbg.value(metadata i8* %24, metadata !3605, metadata !DIExpression()), !dbg !3613
  br label %25, !dbg !3622

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3605, metadata !DIExpression()), !dbg !3613
  call void @llvm.dbg.value(metadata i32 %27, metadata !3607, metadata !DIExpression()), !dbg !3613
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3634
  call void @llvm.dbg.value(metadata i8* %28, metadata !3605, metadata !DIExpression()), !dbg !3613
  %29 = load i8, i8* %26, align 1, !dbg !3636
  %30 = zext i8 %29 to i32, !dbg !3636
  call void @llvm.dbg.value(metadata i32 %30, metadata !3612, metadata !DIExpression()), !dbg !3613
  %31 = shl nuw nsw i32 %30, 2, !dbg !3637
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3638
  %33 = bitcast i8* %32 to i8**, !dbg !3639
  call void @llvm.dbg.value(metadata i8** %33, metadata !3606, metadata !DIExpression()), !dbg !3613
  store i8* %28, i8** %33, align 4, !dbg !3640
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3641
  %35 = add i32 %34, 1, !dbg !3642
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3643
  call void @llvm.dbg.value(metadata i8* %36, metadata !3605, metadata !DIExpression()), !dbg !3613
  %37 = add nuw nsw i32 %27, 1, !dbg !3644
  call void @llvm.dbg.value(metadata i32 %37, metadata !3607, metadata !DIExpression()), !dbg !3613
  %38 = icmp eq i32 %37, %9, !dbg !3619
  br i1 %38, label %39, label %25, !dbg !3622, !llvm.loop !3645

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3647
  call void @llvm.dbg.value(metadata i8* %40, metadata !3598, metadata !DIExpression()), !dbg !3613
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3648
  %42 = bitcast i8* %41 to i8**, !dbg !3648
  %43 = load i8*, i8** %42, align 1, !dbg !3648
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3649
  br label %45, !dbg !3650

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3613
  ret i32 %46, !dbg !3651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3652 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3656, metadata !DIExpression()), !dbg !3666
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3657, metadata !DIExpression()), !dbg !3666
  call void @llvm.dbg.value(metadata i8* %2, metadata !3658, metadata !DIExpression()), !dbg !3666
  call void @llvm.dbg.value(metadata i8* %3, metadata !3659, metadata !DIExpression()), !dbg !3666
  call void @llvm.dbg.value(metadata i8* %4, metadata !3660, metadata !DIExpression()), !dbg !3666
  call void @llvm.dbg.value(metadata i8* %4, metadata !3661, metadata !DIExpression()), !dbg !3666
  %6 = ptrtoint i8* %4 to i32, !dbg !3667
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3667
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3667
  ret i32 %8, !dbg !3668
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3669 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3673, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata i32 %1, metadata !3674, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata i8 0, metadata !3676, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata i32 0, metadata !3677, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata i8 poison, metadata !3676, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata i8* %0, metadata !3673, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3678
  %3 = load i8, i8* %0, align 1, !dbg !3679
  call void @llvm.dbg.value(metadata i8 %3, metadata !3675, metadata !DIExpression()), !dbg !3678
  %4 = icmp eq i8 %3, 0, !dbg !3680
  br i1 %4, label %29, label %5, !dbg !3681

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3682
  call void @llvm.dbg.value(metadata i32 %8, metadata !3677, metadata !DIExpression()), !dbg !3678
  br i1 %9, label %11, label %22, !dbg !3683

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3685
  br i1 %12, label %13, label %17, !dbg !3689

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3690
  br i1 %14, label %29, label %15, !dbg !3693

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3694
  br i1 %16, label %29, label %22, !dbg !3696

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3697
  %19 = xor i1 %18, true, !dbg !3699
  %20 = zext i1 %18 to i32, !dbg !3699
  %21 = add nsw i32 %8, %20, !dbg !3699
  br label %22, !dbg !3699

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3678
  call void @llvm.dbg.value(metadata i32 %24, metadata !3677, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata i8 poison, metadata !3676, metadata !DIExpression()), !dbg !3678
  %25 = icmp eq i8 %6, 37, !dbg !3700
  %26 = xor i1 %25, %23, !dbg !3702
  call void @llvm.dbg.value(metadata i8* %10, metadata !3673, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.value(metadata i8* %10, metadata !3673, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3678
  %27 = load i8, i8* %10, align 1, !dbg !3679
  call void @llvm.dbg.value(metadata i8 %27, metadata !3675, metadata !DIExpression()), !dbg !3678
  %28 = icmp eq i8 %27, 0, !dbg !3680
  br i1 %28, label %29, label %5, !dbg !3681, !llvm.loop !3703

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3678
  ret i1 %30, !dbg !3705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !3706 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3710, metadata !DIExpression()), !dbg !3711
  %2 = add i8 %0, -64, !dbg !3712
  %3 = icmp ult i8 %2, 59, !dbg !3712
  ret i1 %3, !dbg !3713
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3714 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3722, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 %1, metadata !3723, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3724, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i8* %3, metadata !3725, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 %4, metadata !3726, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i16* %5, metadata !3727, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 %6, metadata !3728, metadata !DIExpression()), !dbg !3791
  %11 = icmp eq i8* %0, null, !dbg !3792
  br i1 %11, label %12, label %13, !dbg !3795

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3796
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3796
  unreachable, !dbg !3796

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3729, metadata !DIExpression()), !dbg !3791
  %14 = bitcast i8* %0 to i32*, !dbg !3798
  call void @llvm.dbg.value(metadata i32* %14, metadata !3730, metadata !DIExpression()), !dbg !3791
  %15 = and i32 %4, 8, !dbg !3799
  %16 = icmp eq i32 %15, 0, !dbg !3800
  call void @llvm.dbg.value(metadata i1 %16, metadata !3734, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3791
  call void @llvm.dbg.value(metadata i8* %0, metadata !3737, metadata !DIExpression()), !dbg !3791
  %17 = icmp eq i32 %1, 0, !dbg !3801
  br i1 %17, label %18, label %20, !dbg !3802

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3803
  br label %20, !dbg !3802

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3802
  call void @llvm.dbg.value(metadata i32 %21, metadata !3723, metadata !DIExpression()), !dbg !3791
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3804
  %23 = load i8, i8* %22, align 1, !dbg !3804
  %24 = zext i8 %23 to i32, !dbg !3805
  call void @llvm.dbg.value(metadata i32 %24, metadata !3732, metadata !DIExpression()), !dbg !3791
  %25 = icmp ne i8 %23, 0, !dbg !3806
  %26 = and i32 %4, 1, !dbg !3807
  %27 = icmp ne i32 %26, 0, !dbg !3807
  %28 = and i1 %27, %25, !dbg !3807
  call void @llvm.dbg.value(metadata i1 %28, metadata !3736, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3791
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3808
  %30 = load i8, i8* %29, align 1, !dbg !3808
  %31 = zext i8 %30 to i32, !dbg !3809
  call void @llvm.dbg.value(metadata i32 %31, metadata !3733, metadata !DIExpression()), !dbg !3791
  %32 = icmp ne i8 %30, 0, !dbg !3810
  %33 = and i32 %4, 2, !dbg !3811
  %34 = icmp ne i32 %33, 0, !dbg !3811
  %35 = and i1 %34, %32, !dbg !3811
  call void @llvm.dbg.value(metadata i1 %35, metadata !3735, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3791
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3812
  br i1 %36, label %41, label %37, !dbg !3812

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3814
  br i1 %38, label %287, label %39, !dbg !3817

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3818
  br label %287, !dbg !3820

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3821
  %43 = zext i8 %42 to i32, !dbg !3822
  %44 = shl nuw nsw i32 %43, 2, !dbg !3823
  call void @llvm.dbg.value(metadata i32 %44, metadata !3731, metadata !DIExpression()), !dbg !3791
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3824
  %46 = bitcast i8* %45 to i8**, !dbg !3825
  %47 = load i8*, i8** %46, align 4, !dbg !3825
  call void @llvm.dbg.value(metadata i8* %47, metadata !3740, metadata !DIExpression()), !dbg !3791
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3826
  call void @llvm.dbg.value(metadata i8* %48, metadata !3741, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 0, metadata !3742, metadata !DIExpression()), !dbg !3791
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3827
  br i1 %49, label %50, label %135, !dbg !3828

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3739, metadata !DIExpression()), !dbg !3791
  br i1 %28, label %51, label %76, !dbg !3829

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3739, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i8* %48, metadata !3741, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 0, metadata !3742, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 0, metadata !3743, metadata !DIExpression()), !dbg !3830
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3831

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3739, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i8* %55, metadata !3741, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 %56, metadata !3742, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 %57, metadata !3743, metadata !DIExpression()), !dbg !3830
  %58 = load i8, i8* %55, align 1, !dbg !3832
  %59 = zext i8 %58 to i32, !dbg !3833
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3833
  %61 = bitcast i32* %60 to i8**, !dbg !3834
  %62 = load i8*, i8** %61, align 4, !dbg !3834
  call void @llvm.dbg.value(metadata i8* %62, metadata !3749, metadata !DIExpression()), !dbg !3835
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !3836
  call void @llvm.dbg.value(metadata i32 %63, metadata !3752, metadata !DIExpression()), !dbg !3835
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3837
  br i1 %65, label %66, label %70, !dbg !3837

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3839
  %68 = add nuw i32 %56, 1, !dbg !3841
  call void @llvm.dbg.value(metadata i32 %68, metadata !3742, metadata !DIExpression()), !dbg !3791
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3842
  store i16 %67, i16* %69, align 2, !dbg !3843
  br label %70, !dbg !3844

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3791
  call void @llvm.dbg.value(metadata i32 %71, metadata !3742, metadata !DIExpression()), !dbg !3791
  %72 = add nsw i32 %63, %54, !dbg !3845
  call void @llvm.dbg.value(metadata i32 %72, metadata !3739, metadata !DIExpression()), !dbg !3791
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3846
  call void @llvm.dbg.value(metadata i8* %73, metadata !3741, metadata !DIExpression()), !dbg !3791
  %74 = add nuw nsw i32 %57, 1, !dbg !3847
  call void @llvm.dbg.value(metadata i32 %74, metadata !3743, metadata !DIExpression()), !dbg !3830
  %75 = icmp eq i32 %74, %24, !dbg !3848
  br i1 %75, label %82, label %53, !dbg !3831, !llvm.loop !3849

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3851
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3851
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3851
  br label %82, !dbg !3851

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3854
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3791
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3855
  call void @llvm.dbg.value(metadata i1 undef, metadata !3753, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3856
  call void @llvm.dbg.value(metadata i32 0, metadata !3754, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %85, metadata !3739, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i8* %84, metadata !3741, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 %83, metadata !3742, metadata !DIExpression()), !dbg !3791
  %86 = icmp eq i8 %30, 0, !dbg !3858
  br i1 %86, label %287, label %87, !dbg !3859

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3860
  %89 = icmp eq i32 %88, 0, !dbg !3861
  call void @llvm.dbg.value(metadata i1 %89, metadata !3753, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3856
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3859

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3739, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i8* %96, metadata !3741, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 %97, metadata !3742, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 %98, metadata !3754, metadata !DIExpression()), !dbg !3857
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3862
  call void @llvm.dbg.value(metadata i8* %99, metadata !3741, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i8 undef, metadata !3756, metadata !DIExpression()), !dbg !3863
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3864
  call void @llvm.dbg.value(metadata i8* %100, metadata !3741, metadata !DIExpression()), !dbg !3791
  %101 = load i8, i8* %99, align 1, !dbg !3865
  call void @llvm.dbg.value(metadata i8 %101, metadata !3759, metadata !DIExpression()), !dbg !3863
  %102 = zext i8 %101 to i32, !dbg !3866
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3866
  %104 = bitcast i32* %103 to i8**, !dbg !3867
  %105 = load i8*, i8** %104, align 4, !dbg !3867
  call void @llvm.dbg.value(metadata i8* %105, metadata !3760, metadata !DIExpression()), !dbg !3863
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !3868
  call void @llvm.dbg.value(metadata i1 %106, metadata !3761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3863
  br i1 %16, label %113, label %107, !dbg !3869

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3871
  call void @llvm.dbg.value(metadata i8 %108, metadata !3756, metadata !DIExpression()), !dbg !3863
  %109 = zext i8 %108 to i32, !dbg !3872
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !3873
  br i1 %110, label %111, label %113, !dbg !3874

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !3875
  %112 = add nsw i32 %95, -2, !dbg !3881
  call void @llvm.dbg.value(metadata i32 %112, metadata !3739, metadata !DIExpression()), !dbg !3791
  br label %130, !dbg !3882

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3883

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3884

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3886
  call void @llvm.dbg.value(metadata i32 %116, metadata !3739, metadata !DIExpression()), !dbg !3791
  br label %130, !dbg !3889

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3890

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3787), !dbg !3891
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !3892
  call void @llvm.dbg.value(metadata i32 %119, metadata !3762, metadata !DIExpression()), !dbg !3863
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3893
  br i1 %121, label %122, label %126, !dbg !3893

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3895
  %124 = add nuw i32 %97, 1, !dbg !3897
  call void @llvm.dbg.value(metadata i32 %124, metadata !3742, metadata !DIExpression()), !dbg !3791
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3898
  store i16 %123, i16* %125, align 2, !dbg !3899
  br label %126, !dbg !3900

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3791
  call void @llvm.dbg.value(metadata i32 %127, metadata !3742, metadata !DIExpression()), !dbg !3791
  %128 = add i32 %95, -1, !dbg !3901
  %129 = add i32 %128, %119, !dbg !3902
  call void @llvm.dbg.value(metadata i32 %129, metadata !3739, metadata !DIExpression()), !dbg !3791
  br label %130, !dbg !3903

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3791
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3863
  call void @llvm.dbg.value(metadata i32 %132, metadata !3739, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 %131, metadata !3742, metadata !DIExpression()), !dbg !3791
  %133 = add nuw nsw i32 %98, 1, !dbg !3904
  call void @llvm.dbg.value(metadata i8* %100, metadata !3741, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 %133, metadata !3754, metadata !DIExpression()), !dbg !3857
  %134 = icmp eq i32 %133, %31, !dbg !3858
  br i1 %134, label %287, label %94, !dbg !3859, !llvm.loop !3905

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3764, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3765, metadata !DIExpression()), !dbg !3908
  br i1 %28, label %136, label %138, !dbg !3909

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3766, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i8 0, metadata !3767, metadata !DIExpression()), !dbg !3791
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3910
  call void @llvm.dbg.value(metadata i8* %137, metadata !3768, metadata !DIExpression()), !dbg !3791
  br label %143, !dbg !3913

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3914
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3914

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3768, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i8 undef, metadata !3767, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i8 0, metadata !3766, metadata !DIExpression()), !dbg !3791
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !3916
  br label %148, !dbg !3919

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !3920
  call void @llvm.dbg.value(metadata i8* %151, metadata !3741, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 0, metadata !3770, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 %149, metadata !3767, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i8 %150, metadata !3766, metadata !DIExpression()), !dbg !3791
  %152 = icmp eq i8 %30, 0, !dbg !3922
  br i1 %152, label %153, label %155, !dbg !3923

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !3924
  br label %160, !dbg !3923

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !3923

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !3924
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !3925
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !3926
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3791
  call void @llvm.dbg.value(metadata i8 undef, metadata !3763, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3791
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3927
  %166 = load i8, i8* %165, align 1, !dbg !3927
  %167 = zext i8 %162 to i32, !dbg !3928
  %168 = add i8 %166, %162, !dbg !3929
  call void @llvm.dbg.value(metadata i8 %168, metadata !3763, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3791
  %169 = icmp eq i32 %33, 0, !dbg !3930
  %170 = lshr i8 %163, 1, !dbg !3931
  %171 = select i1 %169, i8 %170, i8 0, !dbg !3931
  call void @llvm.dbg.value(metadata i8 %171, metadata !3763, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3791
  %172 = icmp eq i32 %26, 0, !dbg !3932
  %173 = icmp eq i32 %161, 0, !dbg !3924
  %174 = select i1 %173, i8 0, i8 %163, !dbg !3924
  %175 = select i1 %172, i8 %174, i8 0, !dbg !3924
  call void @llvm.dbg.value(metadata i8 %175, metadata !3763, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3791
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3778, metadata !DIExpression()), !dbg !3933
  %176 = load i32, i32* %14, align 1, !dbg !3934
  store i8 %168, i8* %165, align 1, !dbg !3935
  store i8 %175, i8* %22, align 1, !dbg !3935
  store i8 %171, i8* %29, align 1, !dbg !3935
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !3936
  call void @llvm.dbg.value(metadata i32 %177, metadata !3769, metadata !DIExpression()), !dbg !3791
  %178 = icmp slt i32 %177, 0, !dbg !3937
  br i1 %178, label %287, label %240, !dbg !3939

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3741, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 %181, metadata !3770, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 %182, metadata !3767, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i8 %183, metadata !3766, metadata !DIExpression()), !dbg !3791
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !3940
  call void @llvm.dbg.value(metadata i8* %184, metadata !3741, metadata !DIExpression()), !dbg !3791
  %185 = load i8, i8* %180, align 1, !dbg !3941
  call void @llvm.dbg.value(metadata i8 %185, metadata !3772, metadata !DIExpression()), !dbg !3942
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !3943
  call void @llvm.dbg.value(metadata i8* %186, metadata !3741, metadata !DIExpression()), !dbg !3791
  %187 = load i8, i8* %184, align 1, !dbg !3944
  call void @llvm.dbg.value(metadata i8 %187, metadata !3775, metadata !DIExpression()), !dbg !3942
  %188 = zext i8 %187 to i32, !dbg !3945
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !3945
  %190 = bitcast i32* %189 to i8**, !dbg !3946
  %191 = load i8*, i8** %190, align 4, !dbg !3946
  call void @llvm.dbg.value(metadata i8* %191, metadata !3776, metadata !DIExpression()), !dbg !3942
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !3947
  call void @llvm.dbg.value(metadata i1 %192, metadata !3777, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3942
  br i1 %16, label %196, label %193, !dbg !3948

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !3950
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !3951
  br i1 %195, label %235, label %196, !dbg !3952

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !3953

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !3954

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !3957
  br i1 %199, label %201, label %200, !dbg !3962

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3963
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3963
  unreachable, !dbg !3963

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !3957
  %203 = add nuw nsw i8 %183, 1, !dbg !3965
  call void @llvm.dbg.value(metadata i8 %203, metadata !3766, metadata !DIExpression()), !dbg !3791
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !3966
  br label %231, !dbg !3967

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !3968

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !3969
  br i1 %207, label %209, label %208, !dbg !3974

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !3975
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !3975
  unreachable, !dbg !3975

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !3969
  %211 = add nuw nsw i8 %182, 1, !dbg !3977
  call void @llvm.dbg.value(metadata i8 %211, metadata !3767, metadata !DIExpression()), !dbg !3791
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !3978
  br label %231, !dbg !3979

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !3980

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !3982
  br i1 %215, label %217, label %216, !dbg !3987

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !3988
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !3988
  unreachable, !dbg !3988

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !3982
  %219 = add nuw nsw i8 %183, 1, !dbg !3990
  call void @llvm.dbg.value(metadata i8 %219, metadata !3766, metadata !DIExpression()), !dbg !3791
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !3991
  br label %231, !dbg !3992

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !3993
  br i1 %222, label %224, label %223, !dbg !3997

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !3998
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !3998
  unreachable, !dbg !3998

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !3993
  %226 = add nuw nsw i8 %182, 1, !dbg !4000
  call void @llvm.dbg.value(metadata i8 %226, metadata !3767, metadata !DIExpression()), !dbg !3791
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4001
  store i8 %185, i8* %227, align 1, !dbg !4002
  %228 = add nuw nsw i8 %182, 2, !dbg !4003
  call void @llvm.dbg.value(metadata i8 %228, metadata !3767, metadata !DIExpression()), !dbg !3791
  %229 = zext i8 %226 to i32, !dbg !4004
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4004
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4005
  br label %235, !dbg !4006

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3791
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !3926
  call void @llvm.dbg.value(metadata i8 %237, metadata !3767, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i8 %236, metadata !3766, metadata !DIExpression()), !dbg !3791
  %238 = add nuw nsw i32 %181, 1, !dbg !4006
  call void @llvm.dbg.value(metadata i8* %186, metadata !3741, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 %238, metadata !3770, metadata !DIExpression()), !dbg !3921
  %239 = icmp eq i32 %238, %31, !dbg !3922
  br i1 %239, label %160, label %179, !dbg !3923, !llvm.loop !4007

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !3931
  call void @llvm.dbg.value(metadata i32 %177, metadata !3739, metadata !DIExpression()), !dbg !3791
  store i32 %176, i32* %14, align 1, !dbg !4009
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4010
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4011
  call void @llvm.dbg.value(metadata i32 %243, metadata !3769, metadata !DIExpression()), !dbg !3791
  %244 = icmp slt i32 %243, 0, !dbg !4012
  br i1 %244, label %287, label %245, !dbg !4014

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3739, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3791
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4015
  %248 = add nuw nsw i32 %44, %24, !dbg !4015
  %249 = sub i32 %247, %248, !dbg !4015
  call void @llvm.dbg.value(metadata i32 %249, metadata !3779, metadata !DIExpression()), !dbg !3791
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4016
  call void @llvm.dbg.value(metadata i32 %250, metadata !3769, metadata !DIExpression()), !dbg !3791
  %251 = icmp slt i32 %250, 0, !dbg !4017
  br i1 %251, label %287, label %252, !dbg !4019

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4020
  call void @llvm.dbg.value(metadata i32 %253, metadata !3739, metadata !DIExpression()), !dbg !3791
  %254 = add nuw nsw i32 %253, %250, !dbg !4021
  call void @llvm.dbg.value(metadata i32 %254, metadata !3739, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata i32 0, metadata !3780, metadata !DIExpression()), !dbg !4022
  %255 = icmp eq i8 %162, 0, !dbg !4023
  br i1 %255, label %284, label %256, !dbg !4024

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4024

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3780, metadata !DIExpression()), !dbg !4022
  call void @llvm.dbg.value(metadata i32 %260, metadata !3739, metadata !DIExpression()), !dbg !3791
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4025
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4026
  %262 = load i8, i8* %261, align 1, !dbg !4026
  call void @llvm.dbg.value(metadata i8 %262, metadata !3782, metadata !DIExpression()), !dbg !4027
  store i8 %262, i8* %10, align 1, !dbg !4028
  %263 = zext i8 %262 to i32, !dbg !4029
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4029
  %265 = bitcast i32* %264 to i8**, !dbg !4030
  %266 = load i8*, i8** %265, align 4, !dbg !4030
  call void @llvm.dbg.value(metadata i8* %266, metadata !3785, metadata !DIExpression()), !dbg !4027
  br i1 %257, label %270, label %267, !dbg !4031

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4032
  %269 = load i16, i16* %268, align 2, !dbg !4032
  br label %270, !dbg !4031

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4031
  call void @llvm.dbg.value(metadata i32 undef, metadata !3786, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4027
  call void @llvm.dbg.value(metadata i8* %10, metadata !3782, metadata !DIExpression(DW_OP_deref)), !dbg !4027
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4033
  call void @llvm.dbg.value(metadata i32 %272, metadata !3769, metadata !DIExpression()), !dbg !3791
  %273 = icmp slt i32 %272, 0, !dbg !4034
  br i1 %273, label %277, label %274, !dbg !4036

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3786, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3739, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3791
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4037
  call void @llvm.dbg.value(metadata i32 %275, metadata !3769, metadata !DIExpression()), !dbg !3791
  %276 = icmp slt i32 %275, 0, !dbg !4038
  br i1 %276, label %277, label %279, !dbg !4040

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3739, metadata !DIExpression()), !dbg !3791
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4041
  call void @llvm.dbg.value(metadata i32 undef, metadata !3739, metadata !DIExpression()), !dbg !3791
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4042
  call void @llvm.dbg.value(metadata i32 %280, metadata !3739, metadata !DIExpression()), !dbg !3791
  %281 = add nsw i32 %280, %275, !dbg !4043
  call void @llvm.dbg.value(metadata i32 %281, metadata !3739, metadata !DIExpression()), !dbg !3791
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4041
  %282 = add nuw nsw i32 %259, 1, !dbg !4044
  call void @llvm.dbg.value(metadata i32 %282, metadata !3780, metadata !DIExpression()), !dbg !4022
  %283 = icmp eq i32 %282, %167, !dbg !4023
  br i1 %283, label %284, label %258, !dbg !4024, !llvm.loop !4045

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4021
  call void @llvm.dbg.value(metadata i32 %285, metadata !3739, metadata !DIExpression()), !dbg !3791
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4047
  br label %287, !dbg !4048

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3791
  ret i32 %288, !dbg !4049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4050 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4054, metadata !DIExpression()), !dbg !4062
  %2 = icmp eq i8* %0, null, !dbg !4063
  br i1 %2, label %3, label %4, !dbg !4066

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4067
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4067
  unreachable, !dbg !4067

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4055, metadata !DIExpression()), !dbg !4062
  call void @llvm.dbg.value(metadata i8* %0, metadata !4056, metadata !DIExpression()), !dbg !4062
  %5 = load i8, i8* %0, align 1, !dbg !4069
  %6 = zext i8 %5 to i32, !dbg !4069
  %7 = shl nuw nsw i32 %6, 2, !dbg !4070
  call void @llvm.dbg.value(metadata i32 %7, metadata !4057, metadata !DIExpression()), !dbg !4062
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4071
  %9 = load i8, i8* %8, align 1, !dbg !4071
  %10 = zext i8 %9 to i32, !dbg !4071
  call void @llvm.dbg.value(metadata i32 %10, metadata !4058, metadata !DIExpression()), !dbg !4062
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4072
  %12 = load i8, i8* %11, align 1, !dbg !4072
  %13 = zext i8 %12 to i32, !dbg !4072
  call void @llvm.dbg.value(metadata i32 %13, metadata !4059, metadata !DIExpression()), !dbg !4062
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4073
  call void @llvm.dbg.value(metadata i8* %14, metadata !4055, metadata !DIExpression()), !dbg !4062
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4074
  call void @llvm.dbg.value(metadata i8* %15, metadata !4055, metadata !DIExpression()), !dbg !4062
  call void @llvm.dbg.value(metadata i32 0, metadata !4060, metadata !DIExpression()), !dbg !4075
  %16 = icmp eq i8 %9, 0, !dbg !4076
  br i1 %16, label %17, label %22, !dbg !4078

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4062
  %19 = ptrtoint i8* %18 to i32, !dbg !4079
  %20 = ptrtoint i8* %0 to i32, !dbg !4079
  %21 = sub i32 %19, %20, !dbg !4079
  ret i32 %21, !dbg !4080

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4060, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.value(metadata i8* %24, metadata !4055, metadata !DIExpression()), !dbg !4062
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4081
  call void @llvm.dbg.value(metadata i8* %25, metadata !4055, metadata !DIExpression()), !dbg !4062
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4083
  %27 = add i32 %26, 1, !dbg !4084
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4085
  call void @llvm.dbg.value(metadata i8* %28, metadata !4055, metadata !DIExpression()), !dbg !4062
  %29 = add nuw nsw i32 %23, 1, !dbg !4086
  call void @llvm.dbg.value(metadata i32 %29, metadata !4060, metadata !DIExpression()), !dbg !4075
  %30 = icmp eq i32 %29, %10, !dbg !4076
  br i1 %30, label %17, label %22, !dbg !4078, !llvm.loop !4087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4089 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4093, metadata !DIExpression()), !dbg !4097
  call void @llvm.dbg.value(metadata i8* %1, metadata !4094, metadata !DIExpression()), !dbg !4097
  call void @llvm.dbg.value(metadata i8* %2, metadata !4095, metadata !DIExpression()), !dbg !4097
  call void @llvm.dbg.value(metadata i16 %3, metadata !4096, metadata !DIExpression()), !dbg !4097
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4098
  br i1 %5, label %6, label %9, !dbg !4100

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4101
  %8 = add i32 %7, 1, !dbg !4103
  br label %20, !dbg !4104

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4105
  br i1 %10, label %13, label %11, !dbg !4106

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4106
  br label %16, !dbg !4106

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4107
  %15 = add i32 %14, 1, !dbg !4108
  br label %16, !dbg !4106

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4106
  %18 = and i32 %17, 65535, !dbg !4109
  call void @llvm.dbg.value(metadata i32 %17, metadata !4096, metadata !DIExpression()), !dbg !4097
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4110
  br label %20, !dbg !4111

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4097
  ret i32 %21, !dbg !4112
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4115, metadata !DIExpression()), !dbg !4116
  ret i32 0, !dbg !4117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4118 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4122, metadata !DIExpression()), !dbg !4123
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4124
  ret void, !dbg !4125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4126 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4127
  ret i8* %1, !dbg !4128
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4129 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4140, metadata !DIExpression()), !dbg !4151
  call void @llvm.dbg.value(metadata i8* %0, metadata !4139, metadata !DIExpression()), !dbg !4151
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4152
  ret void, !dbg !4154
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4159, metadata !DIExpression()), !dbg !4161
  call void @llvm.dbg.value(metadata i8* %1, metadata !4160, metadata !DIExpression()), !dbg !4161
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4162
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4162
  ret i32 %4, !dbg !4163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4164 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4171, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4168, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.value(metadata i8* %1, metadata !4169, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.value(metadata i8* %2, metadata !4170, metadata !DIExpression()), !dbg !4172
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4173
  ret void, !dbg !4174
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4175 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4179, metadata !DIExpression()), !dbg !4182
  call void @llvm.dbg.value(metadata i32 %1, metadata !4180, metadata !DIExpression()), !dbg !4182
  call void @llvm.dbg.value(metadata i32 0, metadata !4181, metadata !DIExpression()), !dbg !4182
  %3 = icmp eq i32 %1, 0, !dbg !4183
  br i1 %3, label %13, label %4, !dbg !4186

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4181, metadata !DIExpression()), !dbg !4182
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4187
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4189
  %8 = load i8, i8* %7, align 1, !dbg !4189
  %9 = zext i8 %8 to i32, !dbg !4189
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4187
  %11 = add nuw i32 %5, 1, !dbg !4190
  call void @llvm.dbg.value(metadata i32 %11, metadata !4181, metadata !DIExpression()), !dbg !4182
  %12 = icmp eq i32 %11, %1, !dbg !4183
  br i1 %12, label %13, label %4, !dbg !4186, !llvm.loop !4191

13:                                               ; preds = %4, %2
  ret void, !dbg !4193
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4194 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4198, metadata !DIExpression()), !dbg !4200
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4201
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4201
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4199, metadata !DIExpression()), !dbg !4202
  call void @llvm.va_start(i8* nonnull %3), !dbg !4203
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4204
  %5 = load i32, i32* %4, align 4, !dbg !4204
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4204
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4204
  call void @llvm.va_end(i8* nonnull %3), !dbg !4205
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4206
  ret void, !dbg !4206
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4207 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4211, metadata !DIExpression()), !dbg !4216
  call void @llvm.dbg.value(metadata i32 %1, metadata !4212, metadata !DIExpression()), !dbg !4216
  call void @llvm.dbg.value(metadata i8* %2, metadata !4213, metadata !DIExpression()), !dbg !4216
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4217
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4217
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4214, metadata !DIExpression()), !dbg !4218
  call void @llvm.va_start(i8* nonnull %5), !dbg !4219
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4220
  %7 = load i32, i32* %6, align 4, !dbg !4220
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4220
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4220
  call void @llvm.dbg.value(metadata i32 %9, metadata !4215, metadata !DIExpression()), !dbg !4216
  call void @llvm.va_end(i8* nonnull %5), !dbg !4221
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4222
  ret i32 %9, !dbg !4223
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4224 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4231, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i8* %0, metadata !4228, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i32 %1, metadata !4229, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i8* %2, metadata !4230, metadata !DIExpression()), !dbg !4238
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4239
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4239
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4232, metadata !DIExpression()), !dbg !4240
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4241
  store i8* %0, i8** %7, align 4, !dbg !4241
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4241
  store i32 %1, i32* %8, align 4, !dbg !4241
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4241
  store i32 0, i32* %9, align 4, !dbg !4241
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4242
  %10 = load i32, i32* %9, align 4, !dbg !4243
  %11 = load i32, i32* %8, align 4, !dbg !4245
  %12 = icmp slt i32 %10, %11, !dbg !4246
  br i1 %12, label %13, label %15, !dbg !4247

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4248
  store i8 0, i8* %14, align 1, !dbg !4250
  br label %15, !dbg !4251

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4252
  ret i32 %10, !dbg !4253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4259, metadata !DIExpression()), !dbg !4261
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4260, metadata !DIExpression()), !dbg !4261
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4262
  %4 = load i8*, i8** %3, align 4, !dbg !4262
  %5 = icmp eq i8* %4, null, !dbg !4264
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4265
  br i1 %5, label %12, label %8, !dbg !4266

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4267
  %10 = load i32, i32* %9, align 4, !dbg !4267
  %11 = icmp slt i32 %7, %10, !dbg !4268
  br i1 %11, label %15, label %12, !dbg !4269

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4270
  %14 = add nsw i32 %7, 1, !dbg !4272
  store i32 %14, i32* %13, align 4, !dbg !4272
  br label %25, !dbg !4273

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4274
  %17 = icmp eq i32 %7, %16, !dbg !4276
  br i1 %17, label %18, label %21, !dbg !4277

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4278
  store i32 %19, i32* %6, align 4, !dbg !4278
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4280
  store i8 0, i8* %20, align 1, !dbg !4281
  br label %25, !dbg !4282

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4283
  %23 = add nsw i32 %7, 1, !dbg !4285
  store i32 %23, i32* %6, align 4, !dbg !4285
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4286
  store i8 %22, i8* %24, align 1, !dbg !4287
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4288
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4289 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4294, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.value(metadata i8* %1, metadata !4295, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.value(metadata i8* %2, metadata !4296, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.value(metadata i8* %3, metadata !4297, metadata !DIExpression()), !dbg !4298
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4299
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4300
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4301
  unreachable, !dbg !4302
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4303 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4410
  ret %struct.k_thread* %1, !dbg !4411
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4412 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4417, metadata !DIExpression()), !dbg !4418
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4419, !srcloc !4421
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4422
  ret void, !dbg !4423
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4424 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4425, !srcloc !4427
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4428
  ret %struct.k_thread* %1, !dbg !4429
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4430 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4443, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4440, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i8* %1, metadata !4441, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i8* %2, metadata !4442, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %4, metadata !4444, metadata !DIExpression()), !dbg !4569
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4570
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4570
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4445, metadata !DIExpression()), !dbg !4571
  call void @llvm.dbg.value(metadata i32 0, metadata !4449, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i1 undef, metadata !4451, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4569
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4572

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4572

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4573
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4443, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i8* %30, metadata !4442, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %29, metadata !4449, metadata !DIExpression()), !dbg !4569
  %31 = load i8, i8* %30, align 1, !dbg !4574
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4572

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4574
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4575
  call void @llvm.dbg.value(metadata i8* %34, metadata !4442, metadata !DIExpression()), !dbg !4569
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4575
  call void @llvm.dbg.value(metadata i32 %35, metadata !4453, metadata !DIExpression()), !dbg !4576
  %36 = icmp slt i32 %35, 0, !dbg !4577
  %37 = add i32 %29, 1, !dbg !4575
  call void @llvm.dbg.value(metadata i32 undef, metadata !4449, metadata !DIExpression()), !dbg !4569
  br i1 %36, label %365, label %28, !llvm.loop !4579

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4581
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4458, metadata !DIExpression()), !dbg !4582
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4582
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4501, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4504, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8* %30, metadata !4507, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i32 -1, metadata !4508, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i32 -1, metadata !4509, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8* null, metadata !4510, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8* %14, metadata !4511, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8 0, metadata !4512, metadata !DIExpression()), !dbg !4583
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4584
  call void @llvm.dbg.value(metadata i8* %39, metadata !4442, metadata !DIExpression()), !dbg !4569
  %40 = load i24, i24* %15, align 8, !dbg !4585
  %41 = and i24 %40, 256, !dbg !4585
  %42 = icmp eq i24 %41, 0, !dbg !4585
  br i1 %42, label %51, label %43, !dbg !4587

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4588
  call void @llvm.dbg.value(metadata i8* %44, metadata !4443, metadata !DIExpression()), !dbg !4569
  %45 = bitcast i8* %27 to i32*, !dbg !4588
  %46 = load i32, i32* %45, align 4, !dbg !4588
  call void @llvm.dbg.value(metadata i32 %46, metadata !4508, metadata !DIExpression()), !dbg !4583
  %47 = icmp slt i32 %46, 0, !dbg !4590
  br i1 %47, label %48, label %56, !dbg !4592

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4593
  store i24 %49, i24* %15, align 8, !dbg !4593
  %50 = sub nsw i32 0, %46, !dbg !4595
  call void @llvm.dbg.value(metadata i32 %50, metadata !4508, metadata !DIExpression()), !dbg !4583
  br label %56, !dbg !4596

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4597
  %53 = icmp eq i24 %52, 0, !dbg !4597
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4599
  br label %56, !dbg !4599

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4600
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4583
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4443, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %58, metadata !4508, metadata !DIExpression()), !dbg !4583
  %60 = and i24 %57, 1024, !dbg !4600
  %61 = icmp eq i24 %60, 0, !dbg !4600
  br i1 %61, label %69, label %62, !dbg !4601

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4602
  call void @llvm.dbg.value(metadata i8* %63, metadata !4443, metadata !DIExpression()), !dbg !4569
  %64 = bitcast i8* %59 to i32*, !dbg !4602
  %65 = load i32, i32* %64, align 4, !dbg !4602
  call void @llvm.dbg.value(metadata i32 %65, metadata !4513, metadata !DIExpression()), !dbg !4603
  %66 = icmp slt i32 %65, 0, !dbg !4604
  br i1 %66, label %67, label %74, !dbg !4606

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4607
  store i24 %68, i24* %15, align 8, !dbg !4607
  br label %74, !dbg !4609

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4610
  %71 = icmp eq i24 %70, 0, !dbg !4610
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4612
  br label %74, !dbg !4612

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4613
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4583
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4583
  call void @llvm.dbg.value(metadata i8* %77, metadata !4443, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %76, metadata !4509, metadata !DIExpression()), !dbg !4583
  store i32 0, i32* %16, align 4, !dbg !4614
  store i32 0, i32* %17, align 8, !dbg !4615
  %78 = lshr i24 %75, 16, !dbg !4613
  call void @llvm.dbg.value(metadata i24 %78, metadata !4516, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4583
  %79 = lshr i24 %75, 11, !dbg !4616
  %80 = and i24 %79, 15, !dbg !4616
  %81 = zext i24 %80 to i32, !dbg !4616
  call void @llvm.dbg.value(metadata i32 %81, metadata !4517, metadata !DIExpression()), !dbg !4583
  %82 = trunc i24 %78 to i3, !dbg !4617
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4617

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4618

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4621
  call void @llvm.dbg.value(metadata i8* %85, metadata !4443, metadata !DIExpression()), !dbg !4569
  %86 = bitcast i8* %77 to i32*, !dbg !4621
  %87 = load i32, i32* %86, align 4, !dbg !4621
  %88 = sext i32 %87 to i64, !dbg !4621
  store i64 %88, i64* %20, align 8, !dbg !4623
  br label %115, !dbg !4624

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4625
  call void @llvm.dbg.value(metadata i8* %90, metadata !4443, metadata !DIExpression()), !dbg !4569
  %91 = bitcast i8* %77 to i32*, !dbg !4625
  %92 = load i32, i32* %91, align 4, !dbg !4625
  %93 = sext i32 %92 to i64, !dbg !4625
  store i64 %93, i64* %20, align 8, !dbg !4628
  br label %115, !dbg !4629

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4630
  %96 = add i32 %95, 7, !dbg !4630
  %97 = and i32 %96, -8, !dbg !4630
  %98 = inttoptr i32 %97 to i8*, !dbg !4630
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4630
  call void @llvm.dbg.value(metadata i8* %99, metadata !4443, metadata !DIExpression()), !dbg !4569
  %100 = inttoptr i32 %97 to i64*, !dbg !4630
  %101 = load i64, i64* %100, align 8, !dbg !4630
  store i64 %101, i64* %20, align 8, !dbg !4631
  br label %115, !dbg !4632

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4633
  %104 = add i32 %103, 7, !dbg !4633
  %105 = and i32 %104, -8, !dbg !4633
  %106 = inttoptr i32 %105 to i8*, !dbg !4633
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4633
  call void @llvm.dbg.value(metadata i8* %107, metadata !4443, metadata !DIExpression()), !dbg !4569
  %108 = inttoptr i32 %105 to i64*, !dbg !4633
  %109 = load i64, i64* %108, align 8, !dbg !4633
  store i64 %109, i64* %20, align 8, !dbg !4634
  br label %115, !dbg !4635

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4636
  call void @llvm.dbg.value(metadata i8* %111, metadata !4443, metadata !DIExpression()), !dbg !4569
  %112 = bitcast i8* %77 to i32*, !dbg !4636
  %113 = load i32, i32* %112, align 4, !dbg !4636
  %114 = sext i32 %113 to i64, !dbg !4637
  store i64 %114, i64* %20, align 8, !dbg !4638
  br label %115, !dbg !4639

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4640
  call void @llvm.dbg.value(metadata i8* %117, metadata !4443, metadata !DIExpression()), !dbg !4569
  %118 = trunc i24 %79 to i4, !dbg !4641
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4641

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4642
  %121 = ashr exact i64 %120, 56, !dbg !4642
  store i64 %121, i64* %20, align 8, !dbg !4645
  br label %177, !dbg !4646

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4647
  %124 = ashr exact i64 %123, 48, !dbg !4647
  store i64 %124, i64* %20, align 8, !dbg !4650
  br label %177, !dbg !4651

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4652

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4655
  call void @llvm.dbg.value(metadata i8* %127, metadata !4443, metadata !DIExpression()), !dbg !4569
  %128 = bitcast i8* %77 to i32*, !dbg !4655
  %129 = load i32, i32* %128, align 4, !dbg !4655
  %130 = zext i32 %129 to i64, !dbg !4655
  store i64 %130, i64* %20, align 8, !dbg !4657
  br label %157, !dbg !4658

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4659
  call void @llvm.dbg.value(metadata i8* %132, metadata !4443, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i8* %132, metadata !4443, metadata !DIExpression()), !dbg !4569
  %133 = bitcast i8* %77 to i32*, !dbg !4659
  %134 = load i32, i32* %133, align 4, !dbg !4659
  %135 = zext i32 %134 to i64, !dbg !4659
  store i64 %135, i64* %20, align 8, !dbg !4659
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4661
  %138 = add i32 %137, 7, !dbg !4661
  %139 = and i32 %138, -8, !dbg !4661
  %140 = inttoptr i32 %139 to i8*, !dbg !4661
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4661
  call void @llvm.dbg.value(metadata i8* %141, metadata !4443, metadata !DIExpression()), !dbg !4569
  %142 = inttoptr i32 %139 to i64*, !dbg !4661
  %143 = load i64, i64* %142, align 8, !dbg !4661
  store i64 %143, i64* %20, align 8, !dbg !4662
  br label %157, !dbg !4663

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4664
  %146 = add i32 %145, 7, !dbg !4664
  %147 = and i32 %146, -8, !dbg !4664
  %148 = inttoptr i32 %147 to i8*, !dbg !4664
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4664
  call void @llvm.dbg.value(metadata i8* %149, metadata !4443, metadata !DIExpression()), !dbg !4569
  %150 = inttoptr i32 %147 to i64*, !dbg !4664
  %151 = load i64, i64* %150, align 8, !dbg !4664
  store i64 %151, i64* %20, align 8, !dbg !4665
  br label %157, !dbg !4666

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4667
  call void @llvm.dbg.value(metadata i8* %153, metadata !4443, metadata !DIExpression()), !dbg !4569
  %154 = bitcast i8* %77 to i32*, !dbg !4667
  %155 = load i32, i32* %154, align 4, !dbg !4667
  %156 = zext i32 %155 to i64, !dbg !4668
  store i64 %156, i64* %20, align 8, !dbg !4669
  br label %157, !dbg !4670

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4671
  call void @llvm.dbg.value(metadata i8* %159, metadata !4443, metadata !DIExpression()), !dbg !4569
  %160 = trunc i24 %79 to i4, !dbg !4672
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4672

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4673
  store i64 %162, i64* %20, align 8, !dbg !4676
  br label %177, !dbg !4677

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4678
  store i64 %164, i64* %20, align 8, !dbg !4681
  br label %177, !dbg !4682

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4683
  %167 = add i32 %166, 7, !dbg !4683
  %168 = and i32 %167, -8, !dbg !4683
  %169 = inttoptr i32 %168 to i8*, !dbg !4683
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4683
  call void @llvm.dbg.value(metadata i8* %170, metadata !4443, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i8* %170, metadata !4443, metadata !DIExpression()), !dbg !4569
  %171 = inttoptr i32 %168 to double*, !dbg !4683
  %172 = load double, double* %171, align 8, !dbg !4683
  store double %172, double* %19, align 8, !dbg !4683
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4687
  call void @llvm.dbg.value(metadata i8* %174, metadata !4443, metadata !DIExpression()), !dbg !4569
  %175 = bitcast i8* %77 to i8**, !dbg !4687
  %176 = load i8*, i8** %175, align 4, !dbg !4687
  store i8* %176, i8** %18, align 8, !dbg !4690
  br label %177, !dbg !4691

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4583
  call void @llvm.dbg.value(metadata i8* %178, metadata !4443, metadata !DIExpression()), !dbg !4569
  %179 = and i24 %75, 3, !dbg !4692
  %180 = icmp eq i24 %179, 0, !dbg !4692
  br i1 %180, label %185, label %181, !dbg !4692

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4693
  call void @llvm.dbg.value(metadata i32 %182, metadata !4518, metadata !DIExpression()), !dbg !4694
  %183 = icmp slt i32 %182, 0, !dbg !4695
  %184 = add i32 %182, %29, !dbg !4693
  call void @llvm.dbg.value(metadata i32 undef, metadata !4449, metadata !DIExpression()), !dbg !4569
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4697
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4698

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4699
  call void @llvm.dbg.value(metadata i32 %188, metadata !4522, metadata !DIExpression()), !dbg !4700
  %189 = icmp slt i32 %188, 0, !dbg !4701
  %190 = add i32 %29, 1, !dbg !4699
  call void @llvm.dbg.value(metadata i32 undef, metadata !4449, metadata !DIExpression()), !dbg !4569
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4703
  call void @llvm.dbg.value(metadata i8* %192, metadata !4510, metadata !DIExpression()), !dbg !4583
  %193 = icmp sgt i32 %76, -1, !dbg !4704
  br i1 %193, label %194, label %196, !dbg !4706

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4707
  call void @llvm.dbg.value(metadata i32 %195, metadata !4525, metadata !DIExpression()), !dbg !4709
  br label %241, !dbg !4710

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4711
  call void @llvm.dbg.value(metadata i32 %197, metadata !4525, metadata !DIExpression()), !dbg !4709
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4510, metadata !DIExpression()), !dbg !4583
  %199 = load i64, i64* %20, align 8, !dbg !4713
  %200 = trunc i64 %199 to i8, !dbg !4714
  store i8 %200, i8* %10, align 1, !dbg !4715
  call void @llvm.dbg.value(metadata i8* %23, metadata !4511, metadata !DIExpression()), !dbg !4583
  br label %245, !dbg !4716

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4717
  %203 = icmp eq i24 %202, 0, !dbg !4717
  %204 = trunc i24 %75 to i8, !dbg !4719
  %205 = shl i8 %204, 1, !dbg !4719
  %206 = and i8 %205, 32, !dbg !4719
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4719
  call void @llvm.dbg.value(metadata i8 %207, metadata !4512, metadata !DIExpression()), !dbg !4583
  %208 = load i64, i64* %20, align 8, !dbg !4720
  call void @llvm.dbg.value(metadata i64 %208, metadata !4450, metadata !DIExpression()), !dbg !4569
  %209 = icmp slt i64 %208, 0, !dbg !4721
  br i1 %209, label %210, label %212, !dbg !4723

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4512, metadata !DIExpression()), !dbg !4583
  %211 = sub nsw i64 0, %208, !dbg !4724
  store i64 %211, i64* %20, align 8, !dbg !4726
  br label %212, !dbg !4727

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4583
  call void @llvm.dbg.value(metadata i8 %213, metadata !4512, metadata !DIExpression()), !dbg !4583
  %214 = load i64, i64* %20, align 8, !dbg !4728
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4729
  call void @llvm.dbg.value(metadata i8* %215, metadata !4510, metadata !DIExpression()), !dbg !4583
  br label %216, !dbg !4730

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4731
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4732
  call void @llvm.dbg.value(metadata i8* %218, metadata !4510, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8 %217, metadata !4512, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.label(metadata !4568), !dbg !4733
  %219 = icmp sgt i32 %76, -1, !dbg !4734
  br i1 %219, label %222, label %220, !dbg !4735

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4736
  br label %245, !dbg !4735

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4738
  %224 = sub i32 %22, %223, !dbg !4738
  call void @llvm.dbg.value(metadata i32 %224, metadata !4527, metadata !DIExpression()), !dbg !4739
  %225 = load i24, i24* %15, align 8, !dbg !4740
  %226 = and i24 %225, -65, !dbg !4740
  store i24 %226, i24* %15, align 8, !dbg !4740
  %227 = icmp ugt i32 %76, %224, !dbg !4741
  br i1 %227, label %228, label %245, !dbg !4743

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4744
  store i32 %229, i32* %16, align 4, !dbg !4746
  br label %245, !dbg !4747

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4748
  %232 = icmp eq i8* %231, null, !dbg !4750
  br i1 %232, label %245, label %233, !dbg !4751

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4752
  %235 = zext i32 %234 to i64, !dbg !4752
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4754
  call void @llvm.dbg.value(metadata i8* %236, metadata !4510, metadata !DIExpression()), !dbg !4583
  %237 = load i24, i24* %15, align 8, !dbg !4755
  %238 = or i24 %237, 1048576, !dbg !4755
  store i24 %238, i24* %15, align 8, !dbg !4755
  store i8 120, i8* %21, align 1, !dbg !4756
  br label %216, !dbg !4757

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4758
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4761
  br label %363, !dbg !4762

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4763
  call void @llvm.dbg.value(metadata i32 %242, metadata !4525, metadata !DIExpression()), !dbg !4709
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4764
  call void @llvm.dbg.value(metadata i32 -1, metadata !4509, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i32 %29, metadata !4449, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i8* %192, metadata !4510, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8* %243, metadata !4511, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8 0, metadata !4512, metadata !DIExpression()), !dbg !4583
  %244 = icmp eq i8* %192, null, !dbg !4765
  br i1 %244, label %363, label %245, !dbg !4767, !llvm.loop !4579

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4736
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4583
  call void @llvm.dbg.value(metadata i32 0, metadata !4531, metadata !DIExpression()), !dbg !4583
  %250 = zext i8 %249 to i32, !dbg !4768
  %251 = icmp eq i8 %249, 0, !dbg !4770
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  call void @llvm.dbg.value(metadata i32 undef, metadata !4530, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  call void @llvm.dbg.value(metadata i32 undef, metadata !4530, metadata !DIExpression()), !dbg !4583
  %252 = icmp sgt i32 %58, 0, !dbg !4771
  br i1 %252, label %253, label %302, !dbg !4772

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4736
  %255 = icmp eq i24 %254, 0, !dbg !4736
  %256 = ptrtoint i8* %248 to i32, !dbg !4773
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  %257 = ptrtoint i8* %247 to i32, !dbg !4773
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  %258 = xor i1 %251, true, !dbg !4774
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  %259 = sext i1 %258 to i32, !dbg !4774
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  %260 = lshr i24 %246, 19, !dbg !4775
  %261 = and i24 %260, 1, !dbg !4775
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4775
  %263 = zext i24 %262 to i32, !dbg !4775
  %264 = add i32 %257, %259, !dbg !4775
  %265 = add i32 %256, %263, !dbg !4775
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  %266 = and i24 %246, 4194304, !dbg !4776
  %267 = icmp eq i24 %266, 0, !dbg !4776
  %268 = load i32, i32* %16, align 4, !dbg !4778
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4530, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4583
  call void @llvm.dbg.value(metadata i32 undef, metadata !4530, metadata !DIExpression()), !dbg !4583
  %269 = load i32, i32* %17, align 8, !dbg !4779
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4779
  call void @llvm.dbg.value(metadata i32 undef, metadata !4530, metadata !DIExpression()), !dbg !4583
  %271 = add i32 %264, %58, !dbg !4779
  %272 = add i32 %265, %268, !dbg !4779
  %273 = add i32 %272, %270, !dbg !4780
  %274 = sub i32 %271, %273, !dbg !4780
  call void @llvm.dbg.value(metadata i32 %274, metadata !4508, metadata !DIExpression()), !dbg !4583
  %275 = and i24 %246, 4, !dbg !4781
  %276 = icmp eq i24 %275, 0, !dbg !4781
  br i1 %276, label %277, label %302, !dbg !4782

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4532, metadata !DIExpression()), !dbg !4783
  %278 = and i24 %246, 64, !dbg !4784
  %279 = icmp eq i24 %278, 0, !dbg !4784
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4785
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4785
  %282 = select i1 %279, i32 32, i32 48, !dbg !4785
  br i1 %280, label %287, label %283, !dbg !4785

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4786
  call void @llvm.dbg.value(metadata i32 %284, metadata !4537, metadata !DIExpression()), !dbg !4787
  %285 = icmp slt i32 %284, 0, !dbg !4788
  %286 = add i32 %29, 1, !dbg !4786
  call void @llvm.dbg.value(metadata i32 undef, metadata !4449, metadata !DIExpression()), !dbg !4569
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4583
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %290, metadata !4449, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i8 undef, metadata !4532, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i8 %288, metadata !4512, metadata !DIExpression()), !dbg !4583
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4790
  %292 = add i32 %291, -1, !dbg !4790
  br label %293, !dbg !4790

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4791
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %295, metadata !4449, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %294, metadata !4508, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i32 %294, metadata !4508, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4583
  %296 = icmp sgt i32 %294, 0, !dbg !4792
  br i1 %296, label %297, label %302, !dbg !4790

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4793
  call void @llvm.dbg.value(metadata i32 %298, metadata !4508, metadata !DIExpression()), !dbg !4583
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4794
  call void @llvm.dbg.value(metadata i32 %299, metadata !4543, metadata !DIExpression()), !dbg !4795
  %300 = icmp slt i32 %299, 0, !dbg !4796
  %301 = add i32 %295, 1, !dbg !4794
  call void @llvm.dbg.value(metadata i32 undef, metadata !4449, metadata !DIExpression()), !dbg !4569
  br i1 %300, label %361, label %293, !llvm.loop !4798

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4583
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4583
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %305, metadata !4449, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %304, metadata !4508, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8 %303, metadata !4512, metadata !DIExpression()), !dbg !4583
  %306 = icmp eq i8 %303, 0, !dbg !4800
  br i1 %306, label %312, label %307, !dbg !4801

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4802
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4803
  call void @llvm.dbg.value(metadata i32 %309, metadata !4546, metadata !DIExpression()), !dbg !4804
  %310 = icmp slt i32 %309, 0, !dbg !4805
  %311 = add i32 %305, 1, !dbg !4803
  call void @llvm.dbg.value(metadata i32 undef, metadata !4449, metadata !DIExpression()), !dbg !4569
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %313, metadata !4449, metadata !DIExpression()), !dbg !4569
  %314 = lshr i24 %246, 20, !dbg !4807
  %315 = lshr i24 %246, 19, !dbg !4808
  %316 = or i24 %314, %315, !dbg !4809
  %317 = and i24 %316, 1, !dbg !4809
  %318 = icmp eq i24 %317, 0, !dbg !4809
  br i1 %318, label %323, label %319, !dbg !4810

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4811
  call void @llvm.dbg.value(metadata i32 %320, metadata !4550, metadata !DIExpression()), !dbg !4812
  %321 = icmp slt i32 %320, 0, !dbg !4813
  %322 = add i32 %313, 1, !dbg !4811
  call void @llvm.dbg.value(metadata i32 undef, metadata !4449, metadata !DIExpression()), !dbg !4569
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %324, metadata !4449, metadata !DIExpression()), !dbg !4569
  %325 = and i24 %246, 1048576, !dbg !4815
  %326 = icmp eq i24 %325, 0, !dbg !4815
  br i1 %326, label %333, label %327, !dbg !4816

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4817
  %329 = zext i8 %328 to i32, !dbg !4817
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4817
  call void @llvm.dbg.value(metadata i32 %330, metadata !4556, metadata !DIExpression()), !dbg !4818
  %331 = icmp slt i32 %330, 0, !dbg !4819
  %332 = add i32 %324, 1, !dbg !4817
  call void @llvm.dbg.value(metadata i32 undef, metadata !4449, metadata !DIExpression()), !dbg !4569
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %334, metadata !4449, metadata !DIExpression()), !dbg !4569
  %335 = load i32, i32* %16, align 4, !dbg !4821
  call void @llvm.dbg.value(metadata i32 %335, metadata !4531, metadata !DIExpression()), !dbg !4583
  br label %336, !dbg !4822

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4823
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %338, metadata !4449, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %337, metadata !4531, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4583
  %339 = icmp sgt i32 %337, 0, !dbg !4824
  br i1 %339, label %340, label %345, !dbg !4822

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %341, metadata !4531, metadata !DIExpression()), !dbg !4583
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4826
  call void @llvm.dbg.value(metadata i32 %342, metadata !4560, metadata !DIExpression()), !dbg !4827
  %343 = icmp slt i32 %342, 0, !dbg !4828
  %344 = add i32 %338, 1, !dbg !4826
  call void @llvm.dbg.value(metadata i32 undef, metadata !4449, metadata !DIExpression()), !dbg !4569
  br i1 %343, label %361, label %336, !llvm.loop !4830

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4832
  call void @llvm.dbg.value(metadata i32 %346, metadata !4563, metadata !DIExpression()), !dbg !4833
  %347 = icmp slt i32 %346, 0, !dbg !4834
  call void @llvm.dbg.value(metadata i32 undef, metadata !4449, metadata !DIExpression()), !dbg !4569
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4832
  call void @llvm.dbg.value(metadata i32 %349, metadata !4449, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %304, metadata !4508, metadata !DIExpression()), !dbg !4583
  %350 = icmp sgt i32 %304, 0, !dbg !4836
  br i1 %350, label %351, label %363, !dbg !4837

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4837
  %353 = add i32 %352, %338, !dbg !4837
  br label %354, !dbg !4837

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4449, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %355, metadata !4508, metadata !DIExpression()), !dbg !4583
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4838
  call void @llvm.dbg.value(metadata i32 %356, metadata !4565, metadata !DIExpression()), !dbg !4839
  %357 = icmp slt i32 %356, 0, !dbg !4840
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4842
  call void @llvm.dbg.value(metadata i32 undef, metadata !4449, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4569
  call void @llvm.dbg.value(metadata i32 %359, metadata !4508, metadata !DIExpression()), !dbg !4583
  %360 = icmp sgt i32 %355, 1, !dbg !4836
  br i1 %360, label %354, label %363, !dbg !4837, !llvm.loop !4843

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4449, metadata !DIExpression()), !dbg !4569
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4580
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %364, metadata !4449, metadata !DIExpression()), !dbg !4569
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4580
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4569
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4845
  ret i32 %366, !dbg !4845
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4846 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4850, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.value(metadata i8* %1, metadata !4851, metadata !DIExpression()), !dbg !4852
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4853
  store i24 0, i24* %3, align 4, !dbg !4853
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4853
  store i8 0, i8* %4, align 1, !dbg !4853
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4853
  store i32 0, i32* %5, align 4, !dbg !4853
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4853
  store i32 0, i32* %6, align 4, !dbg !4853
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4854
  call void @llvm.dbg.value(metadata i8* %7, metadata !4851, metadata !DIExpression()), !dbg !4852
  %8 = load i8, i8* %7, align 1, !dbg !4855
  %9 = icmp eq i8 %8, 37, !dbg !4857
  br i1 %9, label %10, label %12, !dbg !4858

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4859
  call void @llvm.dbg.value(metadata i8* %11, metadata !4851, metadata !DIExpression()), !dbg !4852
  store i8 37, i8* %4, align 1, !dbg !4861
  br label %18, !dbg !4862

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !4863
  call void @llvm.dbg.value(metadata i8* %13, metadata !4851, metadata !DIExpression()), !dbg !4852
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !4864
  call void @llvm.dbg.value(metadata i8* %14, metadata !4851, metadata !DIExpression()), !dbg !4852
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !4865
  call void @llvm.dbg.value(metadata i8* %15, metadata !4851, metadata !DIExpression()), !dbg !4852
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !4866
  call void @llvm.dbg.value(metadata i8* %16, metadata !4851, metadata !DIExpression()), !dbg !4852
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !4867
  call void @llvm.dbg.value(metadata i8* %17, metadata !4851, metadata !DIExpression()), !dbg !4852
  br label %18, !dbg !4868

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4852
  ret i8* %19, !dbg !4869
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4870 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4874, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i8* %1, metadata !4875, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i8* %2, metadata !4876, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i8* %3, metadata !4877, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 0, metadata !4878, metadata !DIExpression()), !dbg !4881
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4882

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4883
  call void @llvm.dbg.value(metadata i32 %9, metadata !4878, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i8* %8, metadata !4876, metadata !DIExpression()), !dbg !4881
  %10 = icmp ult i8* %8, %3, !dbg !4884
  br i1 %10, label %11, label %13, !dbg !4885

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4886
  br label %17, !dbg !4885

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4887

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4888
  %16 = icmp eq i8 %15, 0, !dbg !4887
  br i1 %16, label %24, label %17, !dbg !4882

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4886
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4889
  call void @llvm.dbg.value(metadata i8* %19, metadata !4876, metadata !DIExpression()), !dbg !4881
  %20 = zext i8 %18 to i32, !dbg !4890
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4891
  call void @llvm.dbg.value(metadata i32 %21, metadata !4879, metadata !DIExpression()), !dbg !4892
  %22 = icmp slt i32 %21, 0, !dbg !4893
  %23 = add i32 %9, 1, !dbg !4895
  call void @llvm.dbg.value(metadata i32 undef, metadata !4878, metadata !DIExpression()), !dbg !4881
  br i1 %22, label %24, label %7, !llvm.loop !4896

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4881
  ret i32 %25, !dbg !4898
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !4899 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4903, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4904, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %2, metadata !4905, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %3, metadata !4906, metadata !DIExpression()), !dbg !4913
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4914
  %6 = load i8, i8* %5, align 1, !dbg !4914
  %7 = zext i8 %6 to i32, !dbg !4915
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !4916
  %9 = icmp eq i32 %8, 0, !dbg !4916
  call void @llvm.dbg.value(metadata i1 %9, metadata !4907, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4913
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !4917
  call void @llvm.dbg.value(metadata i32 %10, metadata !4908, metadata !DIExpression()), !dbg !4913
  %11 = ptrtoint i8* %3 to i32, !dbg !4918
  %12 = ptrtoint i8* %2 to i32, !dbg !4918
  %13 = sub i32 %11, %12, !dbg !4918
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4919
  call void @llvm.dbg.value(metadata i8* %14, metadata !4910, metadata !DIExpression()), !dbg !4913
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4920

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4913
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4903, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %18, metadata !4910, metadata !DIExpression()), !dbg !4913
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4921
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4922
  call void @llvm.dbg.value(metadata i32 %25, metadata !4911, metadata !DIExpression()), !dbg !4923
  %26 = icmp ult i32 %25, 10, !dbg !4924
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4925
  %28 = add i32 %27, %25, !dbg !4923
  %29 = trunc i32 %28 to i8, !dbg !4925
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4926
  call void @llvm.dbg.value(metadata i8* %30, metadata !4910, metadata !DIExpression()), !dbg !4913
  store i8 %29, i8* %30, align 1, !dbg !4927
  call void @llvm.dbg.value(metadata i64 %22, metadata !4903, metadata !DIExpression()), !dbg !4913
  %31 = icmp uge i64 %19, %15, !dbg !4928
  %32 = icmp ugt i8* %30, %2, !dbg !4929
  %33 = and i1 %31, %32, !dbg !4929
  br i1 %33, label %17, label %34, !dbg !4930, !llvm.loop !4931

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4933
  %36 = load i24, i24* %35, align 4, !dbg !4933
  %37 = and i24 %36, 32, !dbg !4933
  %38 = icmp eq i24 %37, 0, !dbg !4933
  br i1 %38, label %44, label %39, !dbg !4935

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4936

40:                                               ; preds = %39
  br label %41, !dbg !4938

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4942
  store i24 %43, i24* %35, align 4, !dbg !4942
  br label %44, !dbg !4943

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !4944 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4950, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.value(metadata i8* %1, metadata !4951, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.value(metadata i32 %2, metadata !4952, metadata !DIExpression()), !dbg !4953
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4954
  %5 = load i24, i24* %4, align 4, !dbg !4954
  %6 = lshr i24 %5, 11, !dbg !4954
  %7 = and i24 %6, 15, !dbg !4954
  %8 = zext i24 %7 to i32, !dbg !4954
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4955

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4956
  store i32 %2, i32* %10, align 4, !dbg !4958
  br label %28, !dbg !4959

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4960
  store i8 %12, i8* %1, align 1, !dbg !4961
  br label %28, !dbg !4962

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4963
  %15 = bitcast i8* %1 to i16*, !dbg !4964
  store i16 %14, i16* %15, align 2, !dbg !4965
  br label %28, !dbg !4966

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4967
  store i32 %2, i32* %17, align 4, !dbg !4968
  br label %28, !dbg !4969

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4970
  %20 = bitcast i8* %1 to i64*, !dbg !4971
  store i64 %19, i64* %20, align 8, !dbg !4972
  br label %28, !dbg !4973

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4974
  %23 = bitcast i8* %1 to i64*, !dbg !4975
  store i64 %22, i64* %23, align 8, !dbg !4976
  br label %28, !dbg !4977

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4978
  store i32 %2, i32* %25, align 4, !dbg !4979
  br label %28, !dbg !4980

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4981
  store i32 %2, i32* %27, align 4, !dbg !4982
  br label %28, !dbg !4983

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4984
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !4985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4988, metadata !DIExpression()), !dbg !4989
  %2 = add i32 %0, -65, !dbg !4990
  %3 = icmp ult i32 %2, 26, !dbg !4991
  %4 = zext i1 %3 to i32, !dbg !4991
  ret i32 %4, !dbg !4992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !4993 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4997, metadata !DIExpression()), !dbg !4998
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4999

2:                                                ; preds = %1
  br label %4, !dbg !5000

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5002

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5003
  ret i32 %5, !dbg !5004
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5005 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5007, metadata !DIExpression()), !dbg !5010
  call void @llvm.dbg.value(metadata i8* %1, metadata !5008, metadata !DIExpression()), !dbg !5010
  call void @llvm.dbg.value(metadata i8 1, metadata !5009, metadata !DIExpression()), !dbg !5010
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5011

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5009, metadata !DIExpression()), !dbg !5010
  call void @llvm.dbg.value(metadata i8* %5, metadata !5008, metadata !DIExpression()), !dbg !5010
  %6 = load i8, i8* %5, align 1, !dbg !5012
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5014

7:                                                ; preds = %4
  br label %11, !dbg !5015

8:                                                ; preds = %4
  br label %11, !dbg !5017

9:                                                ; preds = %4
  br label %11, !dbg !5018

10:                                               ; preds = %4
  br label %11, !dbg !5019

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5020
  %14 = or i24 %13, %12, !dbg !5020
  store i24 %14, i24* %3, align 4, !dbg !5020
  call void @llvm.dbg.value(metadata i8 poison, metadata !5009, metadata !DIExpression()), !dbg !5010
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5008, metadata !DIExpression()), !dbg !5010
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5009, metadata !DIExpression()), !dbg !5010
  call void @llvm.dbg.value(metadata i8* %15, metadata !5008, metadata !DIExpression()), !dbg !5010
  %17 = load i24, i24* %3, align 4, !dbg !5021
  %18 = and i24 %17, 68, !dbg !5023
  %19 = icmp eq i24 %18, 68, !dbg !5023
  br i1 %19, label %20, label %22, !dbg !5023

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5024
  store i24 %21, i24* %3, align 4, !dbg !5024
  br label %22, !dbg !5026

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5027
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5028 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5030, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i8* %1, metadata !5031, metadata !DIExpression()), !dbg !5034
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5035
  %5 = load i24, i24* %4, align 4, !dbg !5036
  %6 = or i24 %5, 128, !dbg !5036
  store i24 %6, i24* %4, align 4, !dbg !5036
  call void @llvm.dbg.value(metadata i8* %1, metadata !5031, metadata !DIExpression()), !dbg !5034
  %7 = load i8, i8* %1, align 1, !dbg !5037
  %8 = icmp eq i8 %7, 42, !dbg !5039
  br i1 %8, label %9, label %12, !dbg !5040

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5041
  store i24 %10, i24* %4, align 4, !dbg !5041
  call void @llvm.dbg.value(metadata i8* %1, metadata !5031, metadata !DIExpression()), !dbg !5034
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5043
  call void @llvm.dbg.value(metadata i8* %11, metadata !5031, metadata !DIExpression()), !dbg !5034
  store i8* %11, i8** %3, align 4, !dbg !5043
  br label %29, !dbg !5044

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5032, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i8** %3, metadata !5031, metadata !DIExpression(DW_OP_deref)), !dbg !5034
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5045
  call void @llvm.dbg.value(metadata i32 %13, metadata !5033, metadata !DIExpression()), !dbg !5034
  %14 = load i8*, i8** %3, align 4, !dbg !5046
  call void @llvm.dbg.value(metadata i8* %14, metadata !5031, metadata !DIExpression()), !dbg !5034
  %15 = icmp eq i8* %14, %1, !dbg !5048
  br i1 %15, label %29, label %16, !dbg !5049

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5050
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5052
  store i32 %13, i32* %18, align 4, !dbg !5053
  %19 = lshr i32 %13, 31, !dbg !5054
  %20 = lshr i24 %17, 1, !dbg !5055
  %21 = and i24 %20, 1, !dbg !5055
  %22 = zext i24 %21 to i32, !dbg !5055
  %23 = or i32 %19, %22, !dbg !5055
  %24 = trunc i32 %23 to i24, !dbg !5055
  %25 = shl nuw nsw i24 %24, 1, !dbg !5055
  %26 = and i24 %17, -131, !dbg !5055
  %27 = or i24 %26, 128, !dbg !5055
  %28 = or i24 %25, %27, !dbg !5055
  store i24 %28, i24* %4, align 4, !dbg !5055
  br label %29, !dbg !5056

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5034
  ret i8* %30, !dbg !5057
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5058 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5060, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i8* %1, metadata !5061, metadata !DIExpression()), !dbg !5063
  %4 = load i8, i8* %1, align 1, !dbg !5064
  %5 = icmp eq i8 %4, 46, !dbg !5065
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5066
  %7 = load i24, i24* %6, align 4, !dbg !5067
  %8 = select i1 %5, i24 512, i24 0, !dbg !5067
  %9 = and i24 %7, -513, !dbg !5067
  %10 = or i24 %9, %8, !dbg !5067
  store i24 %10, i24* %6, align 4, !dbg !5067
  br i1 %5, label %11, label %32, !dbg !5068

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5061, metadata !DIExpression()), !dbg !5063
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5069
  call void @llvm.dbg.value(metadata i8* %12, metadata !5061, metadata !DIExpression()), !dbg !5063
  store i8* %12, i8** %3, align 4, !dbg !5069
  %13 = load i8, i8* %12, align 1, !dbg !5070
  %14 = icmp eq i8 %13, 42, !dbg !5072
  br i1 %14, label %15, label %18, !dbg !5073

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5074
  store i24 %16, i24* %6, align 4, !dbg !5074
  call void @llvm.dbg.value(metadata i8* %12, metadata !5061, metadata !DIExpression()), !dbg !5063
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5076
  call void @llvm.dbg.value(metadata i8* %17, metadata !5061, metadata !DIExpression()), !dbg !5063
  store i8* %17, i8** %3, align 4, !dbg !5076
  br label %32, !dbg !5077

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5061, metadata !DIExpression(DW_OP_deref)), !dbg !5063
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5078
  call void @llvm.dbg.value(metadata i32 %19, metadata !5062, metadata !DIExpression()), !dbg !5063
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5079
  store i32 %19, i32* %20, align 4, !dbg !5080
  %21 = lshr i32 %19, 31, !dbg !5081
  %22 = load i24, i24* %6, align 4, !dbg !5082
  %23 = lshr i24 %22, 1, !dbg !5082
  %24 = and i24 %23, 1, !dbg !5082
  %25 = zext i24 %24 to i32, !dbg !5082
  %26 = or i32 %21, %25, !dbg !5082
  %27 = trunc i32 %26 to i24, !dbg !5082
  %28 = shl nuw nsw i24 %27, 1, !dbg !5082
  %29 = and i24 %22, -3, !dbg !5082
  %30 = or i24 %28, %29, !dbg !5082
  store i24 %30, i24* %6, align 4, !dbg !5082
  %31 = load i8*, i8** %3, align 4, !dbg !5083
  call void @llvm.dbg.value(metadata i8* %31, metadata !5061, metadata !DIExpression()), !dbg !5063
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5063
  ret i8* %33, !dbg !5084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5085 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5087, metadata !DIExpression()), !dbg !5089
  call void @llvm.dbg.value(metadata i8* %1, metadata !5088, metadata !DIExpression()), !dbg !5089
  %3 = load i8, i8* %1, align 1, !dbg !5090
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5091

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5092
  call void @llvm.dbg.value(metadata i8* %5, metadata !5088, metadata !DIExpression()), !dbg !5089
  %6 = load i8, i8* %5, align 1, !dbg !5095
  %7 = icmp eq i8 %6, 104, !dbg !5096
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5097
  %9 = load i24, i24* %8, align 4, !dbg !5097
  %10 = and i24 %9, -30721, !dbg !5097
  br i1 %7, label %11, label %14, !dbg !5098

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5099
  store i24 %12, i24* %8, align 4, !dbg !5099
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5101
  call void @llvm.dbg.value(metadata i8* %13, metadata !5088, metadata !DIExpression()), !dbg !5089
  br label %56, !dbg !5102

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5103
  store i24 %15, i24* %8, align 4, !dbg !5103
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5105
  call void @llvm.dbg.value(metadata i8* %17, metadata !5088, metadata !DIExpression()), !dbg !5089
  %18 = load i8, i8* %17, align 1, !dbg !5107
  %19 = icmp eq i8 %18, 108, !dbg !5108
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5109
  %21 = load i24, i24* %20, align 4, !dbg !5109
  %22 = and i24 %21, -30721, !dbg !5109
  br i1 %19, label %23, label %26, !dbg !5110

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5111
  store i24 %24, i24* %20, align 4, !dbg !5111
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5113
  call void @llvm.dbg.value(metadata i8* %25, metadata !5088, metadata !DIExpression()), !dbg !5089
  br label %56, !dbg !5114

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5115
  store i24 %27, i24* %20, align 4, !dbg !5115
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5117
  %30 = load i24, i24* %29, align 4, !dbg !5118
  %31 = and i24 %30, -30721, !dbg !5118
  %32 = or i24 %31, 10240, !dbg !5118
  store i24 %32, i24* %29, align 4, !dbg !5118
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5119
  call void @llvm.dbg.value(metadata i8* %33, metadata !5088, metadata !DIExpression()), !dbg !5089
  br label %56, !dbg !5120

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5121
  %36 = load i24, i24* %35, align 4, !dbg !5122
  %37 = and i24 %36, -30721, !dbg !5122
  %38 = or i24 %37, 12288, !dbg !5122
  store i24 %38, i24* %35, align 4, !dbg !5122
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5123
  call void @llvm.dbg.value(metadata i8* %39, metadata !5088, metadata !DIExpression()), !dbg !5089
  br label %56, !dbg !5124

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5125
  %42 = load i24, i24* %41, align 4, !dbg !5126
  %43 = and i24 %42, -30721, !dbg !5126
  %44 = or i24 %43, 14336, !dbg !5126
  store i24 %44, i24* %41, align 4, !dbg !5126
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5127
  call void @llvm.dbg.value(metadata i8* %45, metadata !5088, metadata !DIExpression()), !dbg !5089
  br label %56, !dbg !5128

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5129
  %48 = load i24, i24* %47, align 4, !dbg !5130
  %49 = and i24 %48, -30723, !dbg !5130
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5131
  call void @llvm.dbg.value(metadata i8* %50, metadata !5088, metadata !DIExpression()), !dbg !5089
  %51 = or i24 %49, 16386, !dbg !5132
  store i24 %51, i24* %47, align 4, !dbg !5132
  br label %56, !dbg !5133

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5134
  %54 = load i24, i24* %53, align 4, !dbg !5135
  %55 = and i24 %54, -30721, !dbg !5135
  store i24 %55, i24* %53, align 4, !dbg !5135
  br label %56, !dbg !5136

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5088, metadata !DIExpression()), !dbg !5089
  ret i8* %57, !dbg !5137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5138 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5140, metadata !DIExpression()), !dbg !5145
  call void @llvm.dbg.value(metadata i8* %1, metadata !5141, metadata !DIExpression()), !dbg !5145
  call void @llvm.dbg.value(metadata i8 0, metadata !5142, metadata !DIExpression()), !dbg !5145
  call void @llvm.dbg.value(metadata i8* %1, metadata !5141, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5145
  %3 = load i8, i8* %1, align 1, !dbg !5146
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5147
  store i8 %3, i8* %4, align 1, !dbg !5148
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5149

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5150

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5151
  %9 = load i24, i24* %8, align 4, !dbg !5151
  %10 = and i24 %9, -458753, !dbg !5151
  %11 = or i24 %10, %7, !dbg !5151
  call void @llvm.dbg.label(metadata !5143), !dbg !5152
  %12 = and i24 %9, 30720, !dbg !5153
  %13 = icmp eq i24 %12, 16384, !dbg !5153
  %14 = zext i1 %13 to i24, !dbg !5155
  %15 = or i24 %11, %14, !dbg !5155
  %16 = icmp eq i8 %3, 99, !dbg !5156
  br i1 %16, label %17, label %43, !dbg !5158

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5159
  %19 = icmp ne i24 %18, 0, !dbg !5159
  call void @llvm.dbg.value(metadata i1 %19, metadata !5142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5145
  br label %43, !dbg !5161

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5162
  %22 = load i24, i24* %21, align 4, !dbg !5163
  %23 = and i24 %22, -458753, !dbg !5163
  %24 = or i24 %23, 262144, !dbg !5163
  call void @llvm.dbg.value(metadata i8 1, metadata !5142, metadata !DIExpression()), !dbg !5145
  br label %43, !dbg !5164

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5167
  %27 = load i24, i24* %26, align 4, !dbg !5168
  %28 = and i24 %27, -458753, !dbg !5168
  %29 = or i24 %28, 196608, !dbg !5168
  %30 = and i24 %27, 30720, !dbg !5169
  %31 = icmp eq i24 %30, 16384, !dbg !5169
  br label %43, !dbg !5171

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5172
  %34 = load i24, i24* %33, align 4, !dbg !5173
  %35 = and i24 %34, -458753, !dbg !5173
  %36 = or i24 %35, 196608, !dbg !5173
  %37 = and i24 %34, 30720, !dbg !5174
  %38 = icmp ne i24 %37, 0, !dbg !5174
  br label %43, !dbg !5176

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5177
  %41 = load i24, i24* %40, align 4, !dbg !5178
  %42 = or i24 %41, 1, !dbg !5178
  br label %43, !dbg !5179

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5180
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5181
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5182
  call void @llvm.dbg.value(metadata i8* %48, metadata !5141, metadata !DIExpression()), !dbg !5145
  call void @llvm.dbg.value(metadata i8 poison, metadata !5142, metadata !DIExpression()), !dbg !5145
  %49 = lshr i24 %44, 1, !dbg !5180
  %50 = and i24 %49, 1, !dbg !5180
  %51 = zext i24 %50 to i32, !dbg !5180
  %52 = or i32 %51, %47, !dbg !5180
  %53 = trunc i32 %52 to i24, !dbg !5180
  %54 = shl nuw nsw i24 %53, 1, !dbg !5180
  %55 = and i24 %44, -3, !dbg !5180
  %56 = or i24 %54, %55, !dbg !5180
  store i24 %56, i24* %46, align 4, !dbg !5180
  ret i8* %48, !dbg !5183
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5184 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5188, metadata !DIExpression()), !dbg !5191
  %2 = load i8*, i8** %0, align 4, !dbg !5192
  call void @llvm.dbg.value(metadata i8* %2, metadata !5189, metadata !DIExpression()), !dbg !5191
  call void @llvm.dbg.value(metadata i32 0, metadata !5190, metadata !DIExpression()), !dbg !5191
  %3 = load i8, i8* %2, align 1, !dbg !5193
  %4 = zext i8 %3 to i32, !dbg !5194
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5195
  %6 = icmp eq i32 %5, 0, !dbg !5196
  br i1 %6, label %19, label %7, !dbg !5196

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5190, metadata !DIExpression()), !dbg !5191
  call void @llvm.dbg.value(metadata i8* %10, metadata !5189, metadata !DIExpression()), !dbg !5191
  %11 = mul i32 %9, 10, !dbg !5197
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5199
  call void @llvm.dbg.value(metadata i8* %12, metadata !5189, metadata !DIExpression()), !dbg !5191
  %13 = add i32 %11, -48, !dbg !5200
  %14 = add i32 %13, %8, !dbg !5201
  call void @llvm.dbg.value(metadata i32 %14, metadata !5190, metadata !DIExpression()), !dbg !5191
  %15 = load i8, i8* %12, align 1, !dbg !5193
  %16 = zext i8 %15 to i32, !dbg !5194
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5195
  %18 = icmp eq i32 %17, 0, !dbg !5196
  br i1 %18, label %19, label %7, !dbg !5196, !llvm.loop !5202

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5191
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5191
  store i8* %20, i8** %0, align 4, !dbg !5204
  ret i32 %21, !dbg !5205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5208, metadata !DIExpression()), !dbg !5209
  %2 = add i32 %0, -48, !dbg !5210
  %3 = icmp ult i32 %2, 10, !dbg !5211
  %4 = zext i1 %3 to i32, !dbg !5211
  ret i32 %4, !dbg !5212
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5213 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5218, metadata !DIExpression()), !dbg !5220
  call void @llvm.dbg.value(metadata i32 %1, metadata !5219, metadata !DIExpression()), !dbg !5220
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5221, !srcloc !5223
  ret void, !dbg !5224
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5225 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5227, metadata !DIExpression()), !dbg !5235
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5236
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5236
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5228, metadata !DIExpression()), !dbg !5237
  call void @llvm.va_start(i8* nonnull %3), !dbg !5238
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5239
  %5 = load i32, i32* %4, align 4, !dbg !5239
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5239
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5239
  call void @llvm.va_end(i8* nonnull %3), !dbg !5240
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5241
  ret void, !dbg !5241
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5242 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #23, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #23, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #23, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #23, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,4096\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE\0A\09.equ\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,1\0A\09.type\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST\0A\09.equ\09CONFIG_ZTEST,1\0A\09.type\09CONFIG_ZTEST,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_NEW_API\0A\09.equ\09CONFIG_ZTEST_NEW_API,1\0A\09.type\09CONFIG_ZTEST_NEW_API,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_STACK_SIZE\0A\09.equ\09CONFIG_ZTEST_STACK_SIZE,1024\0A\09.type\09CONFIG_ZTEST_STACK_SIZE,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_TEST_DELAY_MS\0A\09.equ\09CONFIG_ZTEST_TEST_DELAY_MS,0\0A\09.type\09CONFIG_ZTEST_TEST_DELAY_MS,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_CPU_HOLD_TIME_MS\0A\09.equ\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,3000\0A\09.type\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ZTEST_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ZTEST_ASSERT_VERBOSE,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_THREAD_PRIORITY\0A\09.equ\09CONFIG_ZTEST_THREAD_PRIORITY,-1\0A\09.type\09CONFIG_ZTEST_THREAD_PRIORITY,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERIFY_RUN_ALL\0A\09.equ\09CONFIG_ZTEST_VERIFY_RUN_ALL,1\0A\09.type\09CONFIG_ZTEST_VERIFY_RUN_ALL,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_OUTPUT\0A\09.equ\09CONFIG_ZTEST_VERBOSE_OUTPUT,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_OUTPUT,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_SUMMARY\0A\09.equ\09CONFIG_ZTEST_VERBOSE_SUMMARY,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_SUMMARY,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_FAIL_ON_ASSUME\0A\09.equ\09CONFIG_ZTEST_FAIL_ON_ASSUME,1\0A\09.type\09CONFIG_ZTEST_FAIL_ON_ASSUME,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST\0A\09.equ\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,1\0A\09.type\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_SYMBOLS\0A\09.equ\09CONFIG_OUTPUT_SYMBOLS,1\0A\09.type\09CONFIG_OUTPUT_SYMBOLS,%object", ""() #23, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5926, !srcloc !5927
  ret void, !dbg !5928
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5929 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5931, metadata !DIExpression()), !dbg !5933
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !5934
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !5935
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5936, !srcloc !5945
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5936
  call void @llvm.dbg.value(metadata i32 %3, metadata !5942, metadata !DIExpression()) #23, !dbg !5946
  call void @llvm.dbg.value(metadata i32 undef, metadata !5943, metadata !DIExpression()) #23, !dbg !5946
  call void @llvm.dbg.value(metadata i32 %3, metadata !5932, metadata !DIExpression()), !dbg !5933
  call void @llvm.dbg.value(metadata i32 %3, metadata !5947, metadata !DIExpression()) #23, !dbg !5952
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5954, !srcloc !5955
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5956
  ret i32 0, !dbg !5957
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !5958 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5960
  %2 = or i32 %1, 512, !dbg !5960
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5960
  ret void, !dbg !5961
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !5962 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5963
  %2 = or i32 %1, 1024, !dbg !5963
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5963
  ret void, !dbg !5964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !5965 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5967, metadata !DIExpression()), !dbg !5968
  ret i32 0, !dbg !5969
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5970 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5973, metadata !DIExpression()), !dbg !5981
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5982
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5982
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5974, metadata !DIExpression()), !dbg !5983
  call void @llvm.va_start(i8* nonnull %3), !dbg !5984
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5985
  %5 = load i32, i32* %4, align 4, !dbg !5985
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5985
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5985
  call void @llvm.va_end(i8* nonnull %3), !dbg !5986
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5987
  ret void, !dbg !5987
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5988 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5993, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i8* %0, metadata !5992, metadata !DIExpression()), !dbg !5994
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !5995
  ret void, !dbg !5996
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6001, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.value(metadata i8* %1, metadata !6002, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.value(metadata i32 %2, metadata !6003, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.value(metadata i8* %1, metadata !6004, metadata !DIExpression()), !dbg !6005
  %4 = icmp eq i32 %2, 0, !dbg !6006
  br i1 %4, label %14, label %5, !dbg !6007

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6005
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6007

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6004, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.value(metadata i32 %10, metadata !6003, metadata !DIExpression()), !dbg !6005
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #25, !dbg !6008
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6010
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6011
  call void @llvm.dbg.value(metadata i32 %11, metadata !6003, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.value(metadata i8* %12, metadata !6004, metadata !DIExpression()), !dbg !6005
  br i1 %13, label %14, label %8, !dbg !6011, !llvm.loop !6012

14:                                               ; preds = %8, %3
  ret void, !dbg !6014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !6015 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6020, metadata !DIExpression()), !dbg !6021
  %2 = add i32 %0, -1, !dbg !6022
  %3 = icmp ult i32 %2, 4, !dbg !6022
  %4 = shl i32 %2, 3, !dbg !6022
  %5 = lshr i32 1145657157, %4, !dbg !6022
  %6 = trunc i32 %5 to i8, !dbg !6022
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6022
  ret i8 %7, !dbg !6023
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6024 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6028, metadata !DIExpression()), !dbg !6039
  call void @llvm.dbg.value(metadata i32 %1, metadata !6029, metadata !DIExpression()), !dbg !6039
  call void @llvm.dbg.value(metadata i32 0, metadata !6030, metadata !DIExpression()), !dbg !6040
  br label %4, !dbg !6041

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #25, !dbg !6042
  call void @llvm.dbg.value(metadata i32 0, metadata !6032, metadata !DIExpression()), !dbg !6043
  br label %16, !dbg !6044

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6030, metadata !DIExpression()), !dbg !6040
  %6 = icmp ult i32 %5, %1, !dbg !6045
  br i1 %6, label %7, label %11, !dbg !6049

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6050
  %9 = load i8, i8* %8, align 1, !dbg !6050
  %10 = zext i8 %9 to i32, !dbg !6052
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #25, !dbg !6053
  br label %12, !dbg !6054

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #25, !dbg !6055
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6057
  call void @llvm.dbg.value(metadata i32 %13, metadata !6030, metadata !DIExpression()), !dbg !6040
  %14 = icmp eq i32 %13, 8, !dbg !6058
  br i1 %14, label %3, label %4, !dbg !6041, !llvm.loop !6059

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #25, !dbg !6061
  ret void, !dbg !6062

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6032, metadata !DIExpression()), !dbg !6043
  %18 = icmp ult i32 %17, %1, !dbg !6063
  br i1 %18, label %19, label %26, !dbg !6064

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6065
  %21 = load i8, i8* %20, align 1, !dbg !6065
  call void @llvm.dbg.value(metadata i8 %21, metadata !6034, metadata !DIExpression()), !dbg !6066
  %22 = zext i8 %21 to i32, !dbg !6067
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6068
  %24 = icmp eq i32 %23, 0, !dbg !6069
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6068
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #25, !dbg !6070
  br label %27, !dbg !6071

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #25, !dbg !6072
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6074
  call void @llvm.dbg.value(metadata i32 %28, metadata !6032, metadata !DIExpression()), !dbg !6043
  %29 = icmp eq i32 %28, 8, !dbg !6075
  br i1 %29, label %15, label %16, !dbg !6044, !llvm.loop !6076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6078 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6080, metadata !DIExpression()), !dbg !6081
  %2 = add i32 %0, -32, !dbg !6082
  %3 = icmp ult i32 %2, 95, !dbg !6082
  %4 = zext i1 %3 to i32, !dbg !6082
  ret i32 %4, !dbg !6083
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6133, metadata !DIExpression()), !dbg !6135
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6134, metadata !DIExpression()), !dbg !6135
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6136
  br i1 %3, label %5, label %4, !dbg !6138

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6139
  br label %5, !dbg !6141

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6142
  ret void, !dbg !6143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6144 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6148, metadata !DIExpression()), !dbg !6149
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6150
  %3 = load i32, i32* %2, align 4, !dbg !6150
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6150
  %5 = load i32, i32* %4, align 4, !dbg !6150
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6150
  %7 = load i32, i32* %6, align 4, !dbg !6150
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6150
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6155
  %9 = load i32, i32* %8, align 4, !dbg !6155
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6155
  %11 = load i32, i32* %10, align 4, !dbg !6155
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6155
  %13 = load i32, i32* %12, align 4, !dbg !6155
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6155
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6160
  %15 = load i32, i32* %14, align 4, !dbg !6160
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6160
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6165
  %17 = load i32, i32* %16, align 4, !dbg !6165
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6165
  ret void, !dbg !6170
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6171 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6188, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6189, metadata !DIExpression()), !dbg !6191
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6192
  %4 = load i32, i32* %3, align 4, !dbg !6192
  call void @llvm.dbg.value(metadata i32 %4, metadata !6190, metadata !DIExpression()), !dbg !6191
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6193
  ret void, !dbg !6194
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6195 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6197, metadata !DIExpression()), !dbg !6200
  call void @llvm.dbg.value(metadata i8* %0, metadata !6198, metadata !DIExpression()), !dbg !6200
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6201
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6201
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6199, metadata !DIExpression()), !dbg !6202
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6202
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6203
  %5 = bitcast i8* %4 to i32*, !dbg !6203
  %6 = load i32, i32* %5, align 4, !dbg !6203
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6204
  store i32 %6, i32* %7, align 4, !dbg !6205
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6206
  unreachable, !dbg !6207
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6211, metadata !DIExpression()), !dbg !6212
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6213
  ret void, !dbg !6214
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6219, metadata !DIExpression()), !dbg !6220
  %2 = icmp sgt i32 %0, -1, !dbg !6221
  br i1 %2, label %3, label %8, !dbg !6223

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6224, !srcloc !6226
  %4 = and i32 %0, 31, !dbg !6227
  %5 = shl nuw i32 1, %4, !dbg !6228
  %6 = lshr i32 %0, 5, !dbg !6229
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6230
  store volatile i32 %5, i32* %7, align 4, !dbg !6231
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6232, !srcloc !6233
  br label %8, !dbg !6234

8:                                                ; preds = %3, %1
  ret void, !dbg !6235
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6238, metadata !DIExpression()), !dbg !6239
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6240
  ret void, !dbg !6241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6244, metadata !DIExpression()), !dbg !6245
  %2 = icmp sgt i32 %0, -1, !dbg !6246
  br i1 %2, label %3, label %8, !dbg !6248

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6249
  %5 = shl nuw i32 1, %4, !dbg !6251
  %6 = lshr i32 %0, 5, !dbg !6252
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6253
  store volatile i32 %5, i32* %7, align 4, !dbg !6254
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6255, !srcloc !6259
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6260, !srcloc !6263
  br label %8, !dbg !6264

8:                                                ; preds = %3, %1
  ret void, !dbg !6265
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6270, metadata !DIExpression()), !dbg !6271
  %2 = lshr i32 %0, 5, !dbg !6272
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6273
  %4 = load volatile i32, i32* %3, align 4, !dbg !6273
  %5 = and i32 %0, 31, !dbg !6274
  %6 = shl nuw i32 1, %5, !dbg !6274
  %7 = and i32 %4, %6, !dbg !6275
  ret i32 %7, !dbg !6276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6281, metadata !DIExpression()), !dbg !6284
  call void @llvm.dbg.value(metadata i32 %1, metadata !6282, metadata !DIExpression()), !dbg !6284
  call void @llvm.dbg.value(metadata i32 %2, metadata !6283, metadata !DIExpression()), !dbg !6284
  %4 = add i32 %1, 1, !dbg !6285
  call void @llvm.dbg.value(metadata i32 %4, metadata !6282, metadata !DIExpression()), !dbg !6284
  %5 = icmp ult i32 %4, 16, !dbg !6288
  br i1 %5, label %7, label %6, !dbg !6291

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6292
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6292
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6292
  unreachable, !dbg !6292

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6294
  ret void, !dbg !6295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6296 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6300, metadata !DIExpression()), !dbg !6302
  call void @llvm.dbg.value(metadata i32 %1, metadata !6301, metadata !DIExpression()), !dbg !6302
  %3 = trunc i32 %1 to i8, !dbg !6303
  %4 = shl i8 %3, 4, !dbg !6303
  %5 = and i32 %0, 15, !dbg !6305
  %6 = add nsw i32 %5, -4, !dbg !6305
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6305
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6305
  %9 = icmp slt i32 %0, 0, !dbg !6305
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6305
  store volatile i8 %4, i8* %10, align 1, !dbg !6303
  ret void, !dbg !6306
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6307 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6309, metadata !DIExpression()), !dbg !6310
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6311
  ret void, !dbg !6312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6313 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6315
  tail call void @z_arm_int_exit() #25, !dbg !6316
  ret void, !dbg !6317
}

; Function Attrs: optsize
declare !dbg !6318 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6319 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6321 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6323
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6324
  tail call void @z_bss_zero() #25, !dbg !6325
  tail call void @z_data_copy() #25, !dbg !6326
  tail call void @z_arm_interrupt_init() #25, !dbg !6327
  tail call void @z_cstart() #27, !dbg !6328
  unreachable, !dbg !6328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6329 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6330
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6331, !srcloc !6334
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6335, !srcloc !6338
  ret void, !dbg !6339
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6340 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6341
  %2 = and i32 %1, -15728641, !dbg !6341
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6341
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6342, !srcloc !6349
  call void @llvm.dbg.value(metadata i32 %3, metadata !6347, metadata !DIExpression()) #23, !dbg !6350
  %4 = and i32 %3, -5, !dbg !6351
  call void @llvm.dbg.value(metadata i32 %4, metadata !6352, metadata !DIExpression()) #23, !dbg !6357
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6359, !srcloc !6360
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6361, !srcloc !6338
  ret void, !dbg !6363
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6367, metadata !DIExpression()), !dbg !6368
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6369
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6370
  store i32 %0, i32* %3, align 4, !dbg !6371
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6372
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6373
  store i32 %4, i32* %5, align 4, !dbg !6374
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6375
  %7 = or i32 %6, 268435456, !dbg !6375
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6375
  call void @llvm.dbg.value(metadata i32 0, metadata !6376, metadata !DIExpression()) #23, !dbg !6379
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6381, !srcloc !6382
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6383
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6384
  %10 = load i32, i32* %9, align 4, !dbg !6384
  ret i32 %10, !dbg !6385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6386 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6499, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6500, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.value(metadata i8* %2, metadata !6501, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6502, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.value(metadata i8* %4, metadata !6503, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.value(metadata i8* %5, metadata !6504, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.value(metadata i8* %6, metadata !6505, metadata !DIExpression()), !dbg !6507
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6508
  call void @llvm.dbg.value(metadata i8* %8, metadata !6506, metadata !DIExpression()), !dbg !6507
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6509
  %10 = bitcast i8* %9 to i32*, !dbg !6509
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6510
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6511
  %12 = bitcast i8* %8 to i32*, !dbg !6512
  store i32 %11, i32* %12, align 4, !dbg !6513
  %13 = ptrtoint i8* %4 to i32, !dbg !6514
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6515
  %15 = bitcast i8* %14 to i32*, !dbg !6515
  store i32 %13, i32* %15, align 4, !dbg !6516
  %16 = ptrtoint i8* %5 to i32, !dbg !6517
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6518
  %18 = bitcast i8* %17 to i32*, !dbg !6518
  store i32 %16, i32* %18, align 4, !dbg !6519
  %19 = ptrtoint i8* %6 to i32, !dbg !6520
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6521
  %21 = bitcast i8* %20 to i32*, !dbg !6521
  store i32 %19, i32* %21, align 4, !dbg !6522
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6523
  %23 = bitcast i8* %22 to i32*, !dbg !6523
  store i32 16777216, i32* %23, align 4, !dbg !6524
  %24 = ptrtoint i8* %8 to i32, !dbg !6525
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6526
  store i32 %24, i32* %25, align 8, !dbg !6527
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6528
  store i32 0, i32* %26, align 4, !dbg !6529
  ret void, !dbg !6530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6531 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6536, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.value(metadata i32 %1, metadata !6537, metadata !DIExpression()), !dbg !6542
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6543
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6538, metadata !DIExpression()), !dbg !6542
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6544
  br i1 %4, label %19, label %5, !dbg !6546

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6541, metadata !DIExpression()), !dbg !6542
  %6 = icmp eq i32 %0, -22, !dbg !6547
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6547
  %8 = load i32, i32* %7, align 4, !dbg !6547
  br i1 %6, label %16, label %9, !dbg !6549

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6547
  %11 = icmp ule i32 %10, %0, !dbg !6547
  %12 = icmp ugt i32 %8, %0, !dbg !6547
  %13 = and i1 %12, %11, !dbg !6547
  %14 = icmp ugt i32 %8, %1, !dbg !6547
  %15 = and i1 %14, %13, !dbg !6547
  br i1 %15, label %18, label %19, !dbg !6547

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6547
  br i1 %17, label %18, label %19, !dbg !6549

18:                                               ; preds = %9, %16
  br label %19, !dbg !6550

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6542
  ret i32 %20, !dbg !6552
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6553 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6557, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata i8* %1, metadata !6558, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6559, metadata !DIExpression()), !dbg !6560
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6561
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6562
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6563, !srcloc !6564
  unreachable, !dbg !6565
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6566 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6584, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata i32 %1, metadata !6585, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata i32 %2, metadata !6586, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6587, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata i32 0, metadata !6588, metadata !DIExpression()), !dbg !6594
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6595
  call void @llvm.dbg.value(metadata i32 %8, metadata !6589, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6594
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6596
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6596
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6597
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6597
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6593, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.value(metadata i32 0, metadata !6599, metadata !DIExpression()) #23, !dbg !6602
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6604, !srcloc !6605
  call void @llvm.dbg.value(metadata i8* %6, metadata !6591, metadata !DIExpression(DW_OP_deref)), !dbg !6594
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6606
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6592, metadata !DIExpression()), !dbg !6594
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6607
  br i1 %11, label %12, label %13, !dbg !6610

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6611
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #25, !dbg !6611
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6611
  unreachable, !dbg !6611

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6613
  call void @llvm.dbg.value(metadata i32 %14, metadata !6589, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata i8* %5, metadata !6590, metadata !DIExpression(DW_OP_deref)), !dbg !6594
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6614
  call void @llvm.dbg.value(metadata i32 %15, metadata !6588, metadata !DIExpression()), !dbg !6594
  %16 = load i8, i8* %5, align 1, !dbg !6615, !range !6617
  call void @llvm.dbg.value(metadata i8 %16, metadata !6590, metadata !DIExpression()), !dbg !6594
  %17 = icmp eq i8 %16, 0, !dbg !6615
  br i1 %17, label %18, label %35, !dbg !6618

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6619
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6620
  %21 = load i8, i8* %6, align 1, !dbg !6621, !range !6617
  call void @llvm.dbg.value(metadata i8 %21, metadata !6591, metadata !DIExpression()), !dbg !6594
  %22 = icmp eq i8 %21, 0, !dbg !6621
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6623
  %24 = load i32, i32* %23, align 4, !dbg !6623
  br i1 %22, label %30, label %25, !dbg !6624

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6625
  %27 = icmp eq i32 %26, 0, !dbg !6628
  br i1 %27, label %28, label %34, !dbg !6629

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6630
  br label %32, !dbg !6632

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6633
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6623
  br label %34, !dbg !6635

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6635
  br label %35, !dbg !6636

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6636
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6636
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6636
  ret void, !dbg !6636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6642, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata i32 %1, metadata !6643, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata i32 %2, metadata !6644, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata i8* %3, metadata !6645, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata i8 0, metadata !6646, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6647, metadata !DIExpression()), !dbg !6648
  store i8 0, i8* %3, align 1, !dbg !6649
  %5 = icmp ugt i32 %2, -16777217, !dbg !6650
  br i1 %5, label %6, label %17, !dbg !6652

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6653
  %8 = icmp eq i32 %7, 8, !dbg !6653
  br i1 %8, label %9, label %10, !dbg !6653

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !6655
  br label %17, !dbg !6661

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6662
  %12 = icmp eq i32 %11, 0, !dbg !6662
  br i1 %12, label %13, label %14, !dbg !6663

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6647, metadata !DIExpression()), !dbg !6648
  store i8 1, i8* %3, align 1, !dbg !6666
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6648
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6647, metadata !DIExpression()), !dbg !6648
  br label %17, !dbg !6669

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6648
  ret %struct.__esf* %18, !dbg !6670
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6671 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6675, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata i32 %1, metadata !6676, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata i8* %2, metadata !6677, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata i32 0, metadata !6678, metadata !DIExpression()), !dbg !6679
  store i8 0, i8* %2, align 1, !dbg !6680
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6681

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6682
  call void @llvm.dbg.value(metadata i32 %5, metadata !6678, metadata !DIExpression()), !dbg !6679
  br label %12, !dbg !6684

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6685
  call void @llvm.dbg.value(metadata i32 %7, metadata !6678, metadata !DIExpression()), !dbg !6679
  br label %12, !dbg !6686

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6687
  call void @llvm.dbg.value(metadata i32 0, metadata !6678, metadata !DIExpression()), !dbg !6679
  br label %12, !dbg !6688

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6689
  call void @llvm.dbg.value(metadata i32 0, metadata !6678, metadata !DIExpression()), !dbg !6679
  br label %12, !dbg !6690

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6691
  br label %12, !dbg !6692

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6693
  br label %12, !dbg !6694

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6679
  call void @llvm.dbg.value(metadata i32 %13, metadata !6678, metadata !DIExpression()), !dbg !6679
  ret i32 %13, !dbg !6695
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6696 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6700, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata i8* %1, metadata !6701, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata i32 0, metadata !6702, metadata !DIExpression()), !dbg !6703
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !6704
  store i8 0, i8* %1, align 1, !dbg !6709
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6710
  %4 = and i32 %3, 2, !dbg !6712
  %5 = icmp eq i32 %4, 0, !dbg !6713
  br i1 %5, label %7, label %6, !dbg !6714

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #25, !dbg !6715
  br label %38, !dbg !6721

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6722
  %9 = icmp sgt i32 %8, -1, !dbg !6724
  br i1 %9, label %11, label %10, !dbg !6725

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !6726
  br label %38, !dbg !6732

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6733
  %13 = and i32 %12, 1073741824, !dbg !6735
  %14 = icmp eq i32 %13, 0, !dbg !6736
  br i1 %14, label %37, label %15, !dbg !6737

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6738
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6744
  br i1 %16, label %17, label %21, !dbg !6746

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6747
  %19 = load i32, i32* %18, align 4, !dbg !6747
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6747
  %20 = load i32, i32* %18, align 4, !dbg !6753
  call void @llvm.dbg.value(metadata i32 %20, metadata !6702, metadata !DIExpression()), !dbg !6703
  br label %38, !dbg !6754

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6755
  %23 = and i32 %22, 255, !dbg !6757
  %24 = icmp eq i32 %23, 0, !dbg !6758
  br i1 %24, label %27, label %25, !dbg !6759

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6760
  call void @llvm.dbg.value(metadata i32 %26, metadata !6702, metadata !DIExpression()), !dbg !6703
  br label %38, !dbg !6762

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6763
  %29 = and i32 %28, 65280, !dbg !6765
  %30 = icmp eq i32 %29, 0, !dbg !6766
  br i1 %30, label %32, label %31, !dbg !6767

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6768
  call void @llvm.dbg.value(metadata i32 0, metadata !6702, metadata !DIExpression()), !dbg !6703
  br label %38, !dbg !6770

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6771
  %34 = icmp ult i32 %33, 65536, !dbg !6773
  br i1 %34, label %36, label %35, !dbg !6774

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6775
  call void @llvm.dbg.value(metadata i32 0, metadata !6702, metadata !DIExpression()), !dbg !6703
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6777
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #25, !dbg !6777
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6777
  unreachable, !dbg !6777

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6782
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #25, !dbg !6782
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6782
  unreachable, !dbg !6782

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6703
  call void @llvm.dbg.value(metadata i32 %39, metadata !6702, metadata !DIExpression()), !dbg !6703
  ret i32 %39, !dbg !6787
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6788 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6790, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata i32 %1, metadata !6791, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata i8* %2, metadata !6792, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata i32 0, metadata !6793, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata i32 -22, metadata !6794, metadata !DIExpression()), !dbg !6803
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #25, !dbg !6804
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6809
  %5 = and i32 %4, 16, !dbg !6811
  %6 = icmp eq i32 %5, 0, !dbg !6812
  br i1 %6, label %8, label %7, !dbg !6813

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6814
  br label %8, !dbg !6820

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6821
  %10 = and i32 %9, 8, !dbg !6823
  %11 = icmp eq i32 %10, 0, !dbg !6824
  br i1 %11, label %13, label %12, !dbg !6825

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6826
  br label %13, !dbg !6832

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6833
  %15 = and i32 %14, 2, !dbg !6834
  %16 = icmp eq i32 %15, 0, !dbg !6835
  br i1 %16, label %27, label %17, !dbg !6836

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6837
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6842
  call void @llvm.dbg.value(metadata i32 %18, metadata !6795, metadata !DIExpression()), !dbg !6843
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6844
  %20 = and i32 %19, 128, !dbg !6846
  %21 = icmp eq i32 %20, 0, !dbg !6847
  br i1 %21, label %27, label %22, !dbg !6848

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6794, metadata !DIExpression()), !dbg !6803
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6849
  %23 = icmp eq i32 %1, 0, !dbg !6855
  br i1 %23, label %27, label %24, !dbg !6857

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6858
  %26 = and i32 %25, -129, !dbg !6858
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6858
  br label %27, !dbg !6860

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6803
  call void @llvm.dbg.value(metadata i32 %28, metadata !6794, metadata !DIExpression()), !dbg !6803
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6861
  %30 = and i32 %29, 1, !dbg !6863
  %31 = icmp eq i32 %30, 0, !dbg !6864
  br i1 %31, label %33, label %32, !dbg !6865

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !6866
  br label %33, !dbg !6872

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6873
  %35 = and i32 %34, 32, !dbg !6875
  %36 = icmp eq i32 %35, 0, !dbg !6876
  br i1 %36, label %38, label %37, !dbg !6877

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !6878
  br label %38, !dbg !6884

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6885
  %40 = and i32 %39, 16, !dbg !6886
  %41 = icmp eq i32 %40, 0, !dbg !6886
  br i1 %41, label %42, label %46, !dbg !6887

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6888
  %44 = and i32 %43, 2, !dbg !6889
  %45 = icmp eq i32 %44, 0, !dbg !6889
  br i1 %45, label %60, label %46, !dbg !6890

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6891
  %48 = and i32 %47, 2048, !dbg !6892
  %49 = icmp eq i32 %48, 0, !dbg !6892
  br i1 %49, label %60, label %50, !dbg !6893

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !6894
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !6895
  call void @llvm.dbg.value(metadata i32 %52, metadata !6798, metadata !DIExpression()), !dbg !6896
  %53 = icmp eq i32 %52, 0, !dbg !6897
  br i1 %53, label %55, label %54, !dbg !6899

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !6900, metadata !DIExpression()) #23, !dbg !6903
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !6906, !srcloc !6907
  call void @llvm.dbg.value(metadata i32 2, metadata !6793, metadata !DIExpression()), !dbg !6803
  br label %60, !dbg !6908

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6909
  %57 = and i32 %56, 16, !dbg !6909
  %58 = icmp eq i32 %57, 0, !dbg !6909
  br i1 %58, label %60, label %59, !dbg !6913

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6914
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !6914
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6914
  unreachable, !dbg !6914

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6803
  call void @llvm.dbg.value(metadata i32 %61, metadata !6793, metadata !DIExpression()), !dbg !6803
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6916
  %63 = and i32 %62, 32, !dbg !6918
  %64 = icmp eq i32 %63, 0, !dbg !6919
  br i1 %64, label %68, label %65, !dbg !6920

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6921
  %67 = and i32 %66, -8193, !dbg !6921
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6921
  br label %68, !dbg !6923

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6924
  %70 = or i32 %69, 255, !dbg !6924
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6924
  store i8 0, i8* %2, align 1, !dbg !6925
  ret i32 %61, !dbg !6926
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6927 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6931, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.value(metadata i32 %0, metadata !6932, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.value(metadata i8* %1, metadata !6933, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.value(metadata i32 0, metadata !6934, metadata !DIExpression()), !dbg !6938
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #25, !dbg !6939
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6944
  %4 = and i32 %3, 4096, !dbg !6946
  %5 = icmp eq i32 %4, 0, !dbg !6946
  br i1 %5, label %7, label %6, !dbg !6947

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !6948
  br label %7, !dbg !6954

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6955
  %9 = and i32 %8, 2048, !dbg !6957
  %10 = icmp eq i32 %9, 0, !dbg !6957
  br i1 %10, label %12, label %11, !dbg !6958

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6959
  br label %12, !dbg !6965

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6966
  %14 = and i32 %13, 512, !dbg !6967
  %15 = icmp eq i32 %14, 0, !dbg !6967
  br i1 %15, label %26, label %16, !dbg !6968

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !6969
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6974
  call void @llvm.dbg.value(metadata i32 %17, metadata !6935, metadata !DIExpression()), !dbg !6975
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6976
  %19 = and i32 %18, 32768, !dbg !6978
  %20 = icmp eq i32 %19, 0, !dbg !6979
  br i1 %20, label %26, label %21, !dbg !6980

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6981
  %22 = icmp eq i32 %0, 0, !dbg !6987
  br i1 %22, label %26, label %23, !dbg !6989

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6990
  %25 = and i32 %24, -32769, !dbg !6990
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6990
  br label %26, !dbg !6992

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6993
  %28 = and i32 %27, 1024, !dbg !6995
  %29 = icmp eq i32 %28, 0, !dbg !6995
  br i1 %29, label %31, label %30, !dbg !6996

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !6997
  br label %31, !dbg !7003

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7004
  %33 = and i32 %32, 256, !dbg !7006
  %34 = icmp eq i32 %33, 0, !dbg !7007
  br i1 %34, label %35, label %39, !dbg !7008

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7009
  %37 = and i32 %36, 8192, !dbg !7011
  %38 = icmp eq i32 %37, 0, !dbg !7011
  br i1 %38, label %41, label %39, !dbg !7012

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7013
  br label %41, !dbg !7014

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7014
  %43 = or i32 %42, 65280, !dbg !7014
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7014
  store i8 0, i8* %1, align 1, !dbg !7015
  ret void, !dbg !7016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7017 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7023, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.value(metadata i32 0, metadata !7024, metadata !DIExpression()), !dbg !7025
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7026
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7031
  %2 = and i32 %1, 33554432, !dbg !7033
  %3 = icmp eq i32 %2, 0, !dbg !7034
  br i1 %3, label %5, label %4, !dbg !7035

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #25, !dbg !7036
  br label %5, !dbg !7042

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7043
  %7 = and i32 %6, 16777216, !dbg !7045
  %8 = icmp eq i32 %7, 0, !dbg !7046
  br i1 %8, label %10, label %9, !dbg !7047

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7048
  br label %10, !dbg !7054

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7055
  %12 = and i32 %11, 524288, !dbg !7057
  %13 = icmp eq i32 %12, 0, !dbg !7058
  br i1 %13, label %15, label %14, !dbg !7059

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7060
  br label %15, !dbg !7066

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7067
  %17 = and i32 %16, 262144, !dbg !7069
  %18 = icmp eq i32 %17, 0, !dbg !7070
  br i1 %18, label %20, label %19, !dbg !7071

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7072
  br label %20, !dbg !7078

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7079
  %22 = and i32 %21, 131072, !dbg !7081
  %23 = icmp eq i32 %22, 0, !dbg !7082
  br i1 %23, label %25, label %24, !dbg !7083

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #25, !dbg !7084
  br label %25, !dbg !7090

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7091
  %27 = and i32 %26, 65536, !dbg !7093
  %28 = icmp eq i32 %27, 0, !dbg !7094
  br i1 %28, label %30, label %29, !dbg !7095

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7096
  br label %30, !dbg !7102

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7103
  %32 = or i32 %31, -65536, !dbg !7103
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7103
  ret void, !dbg !7104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7105 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7109, metadata !DIExpression()), !dbg !7111
  call void @llvm.dbg.value(metadata i8* %0, metadata !7110, metadata !DIExpression()), !dbg !7111
  store i8 0, i8* %0, align 1, !dbg !7112
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7113
  ret void, !dbg !7118
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7119 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7123, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i32 %0, metadata !7124, metadata !DIExpression()), !dbg !7125
  %2 = icmp slt i32 %0, 16, !dbg !7126
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7126
  %4 = add nsw i32 %0, -16, !dbg !7126
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7126
  ret void, !dbg !7131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7132 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7136, metadata !DIExpression()), !dbg !7139
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7140
  %3 = load i32, i32* %2, align 4, !dbg !7140
  %4 = inttoptr i32 %3 to i16*, !dbg !7141
  call void @llvm.dbg.value(metadata i16* %4, metadata !7137, metadata !DIExpression()), !dbg !7139
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7142
  %6 = or i32 %5, 256, !dbg !7142
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7142
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7143, !srcloc !7146
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7147, !srcloc !7150
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7151
  %8 = load i16, i16* %7, align 2, !dbg !7152
  call void @llvm.dbg.value(metadata i16 %8, metadata !7138, metadata !DIExpression()), !dbg !7139
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7153
  %10 = and i32 %9, -257, !dbg !7153
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7153
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7154, !srcloc !7146
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7156, !srcloc !7150
  %11 = icmp eq i16 %8, -8446, !dbg !7158
  ret i1 %11, !dbg !7160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7161 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7162
  %2 = or i32 %1, 16, !dbg !7162
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7162
  ret void, !dbg !7163
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7164 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7167, metadata !DIExpression()), !dbg !7168
  br label %1, !dbg !7169

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7167, metadata !DIExpression()), !dbg !7168
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #24, !dbg !7171
  %3 = add nuw nsw i32 %2, 1, !dbg !7174
  call void @llvm.dbg.value(metadata i32 %3, metadata !7167, metadata !DIExpression()), !dbg !7168
  %4 = icmp eq i32 %3, 97, !dbg !7175
  br i1 %4, label %5, label %1, !dbg !7169, !llvm.loop !7176

5:                                                ; preds = %1
  ret void, !dbg !7178
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #14 !dbg !7179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7181, metadata !DIExpression()), !dbg !7183
  call void @llvm.dbg.value(metadata i32 1, metadata !7182, metadata !DIExpression()), !dbg !7183
  %2 = and i32 %0, 15, !dbg !7184
  %3 = add nsw i32 %2, -4, !dbg !7184
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7184
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7184
  %6 = icmp slt i32 %0, 0, !dbg !7184
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7184
  store volatile i8 16, i8* %7, align 1, !dbg !7185
  ret void, !dbg !7187
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7188 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7297, metadata !DIExpression()), !dbg !7298
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7299
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7301
  br i1 %3, label %4, label %12, !dbg !7302

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7303, !srcloc !7315
  call void @llvm.dbg.value(metadata i32 %5, metadata !7306, metadata !DIExpression()) #23, !dbg !7316
  %6 = icmp eq i32 %5, 0, !dbg !7317
  br i1 %6, label %12, label %7, !dbg !7318

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7319
  %9 = or i32 %8, 268435456, !dbg !7319
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7319
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7321
  %11 = and i32 %10, -32769, !dbg !7321
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7321
  br label %12, !dbg !7322

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7323
  ret void, !dbg !7324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7325 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7326
  ret void, !dbg !7327
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !429, metadata !DIExpression()), !dbg !7328
  call void @llvm.dbg.value(metadata i8 0, metadata !430, metadata !DIExpression()), !dbg !7328
  call void @llvm.dbg.value(metadata i32 64, metadata !432, metadata !DIExpression()), !dbg !7328
  call void @llvm.dbg.value(metadata i32 undef, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7328
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7329
  %3 = load i32, i32* %2, align 4, !dbg !7329
  call void @llvm.dbg.value(metadata i32 %3, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7328
  %4 = add i32 %3, -64, !dbg !7331
  call void @llvm.dbg.value(metadata i32 %4, metadata !431, metadata !DIExpression()), !dbg !7328
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7332
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7333
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7334
  call void @llvm.dbg.value(metadata i8 1, metadata !430, metadata !DIExpression()), !dbg !7328
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7335
  ret void, !dbg !7336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7337 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7338
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7339, !srcloc !7342
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7343, !srcloc !7346
  ret void, !dbg !7347
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7348 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7349, !srcloc !7352
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7353
  ret void, !dbg !7354
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7355 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7370, metadata !DIExpression()), !dbg !7374
  call void @llvm.dbg.value(metadata i8 %1, metadata !7371, metadata !DIExpression()), !dbg !7374
  call void @llvm.dbg.value(metadata i32 %2, metadata !7372, metadata !DIExpression()), !dbg !7374
  call void @llvm.dbg.value(metadata i32 %3, metadata !7373, metadata !DIExpression()), !dbg !7374
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7375
  %6 = icmp eq i32 %5, -22, !dbg !7377
  br i1 %6, label %7, label %9, !dbg !7378

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7379
  %8 = zext i8 %1 to i32, !dbg !7379
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #25, !dbg !7379
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7379
  unreachable, !dbg !7379

9:                                                ; preds = %4
  ret void, !dbg !7384
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7385 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7390, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.value(metadata i8 %1, metadata !7391, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.value(metadata i32 undef, metadata !7392, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.value(metadata i32 undef, metadata !7393, metadata !DIExpression()), !dbg !7395
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7396
  call void @llvm.dbg.value(metadata i8 %3, metadata !7394, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7395
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7397
  call void @llvm.dbg.value(metadata i32 %4, metadata !7394, metadata !DIExpression()), !dbg !7395
  %5 = trunc i32 %4 to i8, !dbg !7398
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7399
  ret i32 %4, !dbg !7400
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7401 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7405, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i8 %1, metadata !7406, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i8 %2, metadata !7407, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i1 %3, metadata !7408, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7411
  %5 = zext i8 %2 to i32, !dbg !7412
  call void @llvm.dbg.value(metadata i32 %5, metadata !7410, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i32 0, metadata !7409, metadata !DIExpression()), !dbg !7411
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7410, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i32 0, metadata !7409, metadata !DIExpression()), !dbg !7411
  %7 = icmp eq i8 %1, 0, !dbg !7413
  br i1 %7, label %30, label %8, !dbg !7416

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7410, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i32 %10, metadata !7409, metadata !DIExpression()), !dbg !7411
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7417
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7420
  %13 = load i32, i32* %12, align 4, !dbg !7420
  %14 = icmp eq i32 %13, 0, !dbg !7421
  br i1 %14, label %26, label %15, !dbg !7422

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7423

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7425
  %18 = icmp eq i32 %17, 0, !dbg !7425
  br i1 %18, label %19, label %20, !dbg !7426

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7427
  br label %30, !dbg !7433

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7434
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7435
  call void @llvm.dbg.value(metadata i32 %22, metadata !7410, metadata !DIExpression()), !dbg !7411
  %23 = icmp eq i32 %22, -22, !dbg !7436
  br i1 %23, label %30, label %24, !dbg !7438

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7439
  call void @llvm.dbg.value(metadata i32 %25, metadata !7410, metadata !DIExpression()), !dbg !7411
  br label %26, !dbg !7440

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7411
  call void @llvm.dbg.value(metadata i32 %27, metadata !7410, metadata !DIExpression()), !dbg !7411
  %28 = add nuw nsw i32 %10, 1, !dbg !7441
  call void @llvm.dbg.value(metadata i32 %28, metadata !7409, metadata !DIExpression()), !dbg !7411
  %29 = icmp eq i32 %28, %6, !dbg !7413
  br i1 %29, label %30, label %8, !dbg !7416, !llvm.loop !7442

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7411
  ret i32 %31, !dbg !7444
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7445 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7449, metadata !DIExpression()), !dbg !7451
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7452
  %3 = load i32, i32* %2, align 4, !dbg !7452
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7453, !range !7454
  %5 = icmp ult i32 %4, 2, !dbg !7453
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7455
  br i1 %7, label %8, label %15, !dbg !7455

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7456
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7457
  %11 = load i32, i32* %10, align 4, !dbg !7457
  %12 = and i32 %11, %9, !dbg !7458
  %13 = icmp eq i32 %12, 0, !dbg !7459
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7450, metadata !DIExpression()), !dbg !7451
  ret i32 %16, !dbg !7460
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7461 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7465, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7466, metadata !DIExpression()), !dbg !7468
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7469
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7469
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7467, metadata !DIExpression()), !dbg !7470
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7471
  %6 = load i32, i32* %5, align 4, !dbg !7471
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7472
  store i32 %6, i32* %7, align 4, !dbg !7473
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7474
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7475
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7476
  %11 = load i32, i32* %10, align 4, !dbg !7476
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7477
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7478
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7479
  ret i32 %12, !dbg !7480
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7481 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7488, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7489, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.value(metadata i32 undef, metadata !7490, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.value(metadata i32 %2, metadata !7491, metadata !DIExpression()), !dbg !7492
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7493
  %5 = load i32, i32* %4, align 4, !dbg !7493
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7494
  %7 = or i32 %6, %5, !dbg !7495
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7496
  store i32 %7, i32* %8, align 4, !dbg !7497
  ret void, !dbg !7498
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7499 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7503, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7504, metadata !DIExpression()), !dbg !7505
  %3 = zext i8 %0 to i32, !dbg !7506
  %4 = icmp ugt i8 %0, 7, !dbg !7508
  br i1 %4, label %5, label %6, !dbg !7509

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7510
  br label %7, !dbg !7516

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7517
  br label %7, !dbg !7518

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7505
  ret i32 %8, !dbg !7519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7520 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7524, metadata !DIExpression()), !dbg !7526
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7525, metadata !DIExpression()), !dbg !7526
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7527
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7528
  %4 = load i32, i32* %3, align 4, !dbg !7528
  %5 = and i32 %4, -32, !dbg !7529
  %6 = or i32 %5, %0, !dbg !7530
  %7 = or i32 %6, 16, !dbg !7530
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7531
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7532
  %9 = load i32, i32* %8, align 4, !dbg !7532
  %10 = or i32 %9, 1, !dbg !7533
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7534
  ret void, !dbg !7535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7539, metadata !DIExpression()), !dbg !7540
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7541
  ret void, !dbg !7542
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7547, metadata !DIExpression()), !dbg !7548
  %2 = icmp ult i32 %0, 33, !dbg !7549
  br i1 %2, label %11, label %3, !dbg !7551

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7552
  br i1 %4, label %11, label %5, !dbg !7554

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7555
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7556, !range !7454
  %8 = mul nsw i32 %7, -2, !dbg !7557
  %9 = add nsw i32 %8, 62, !dbg !7557
  %10 = and i32 %9, 62, !dbg !7558
  br label %11, !dbg !7559

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7548
  ret i32 %12, !dbg !7560
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7561 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7565, metadata !DIExpression()), !dbg !7567
  call void @llvm.dbg.value(metadata i8 %1, metadata !7566, metadata !DIExpression()), !dbg !7567
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7568
  %4 = icmp eq i32 %3, -22, !dbg !7570
  br i1 %4, label %5, label %7, !dbg !7571

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7572
  %6 = zext i8 %1 to i32, !dbg !7572
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #25, !dbg !7572
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7572
  unreachable, !dbg !7572

7:                                                ; preds = %2
  ret void, !dbg !7577
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7578 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7582, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.value(metadata i8 %1, metadata !7583, metadata !DIExpression()), !dbg !7589
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7590
  call void @llvm.dbg.value(metadata i8 %3, metadata !7584, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7589
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7591
  call void @llvm.dbg.value(metadata i32 %4, metadata !7584, metadata !DIExpression()), !dbg !7589
  %5 = icmp ne i32 %4, -22, !dbg !7592
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7593
  call void @llvm.dbg.value(metadata i32 %4, metadata !7585, metadata !DIExpression()), !dbg !7594
  br i1 %7, label %8, label %12, !dbg !7593

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7585, metadata !DIExpression()), !dbg !7594
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7595
  %10 = add i32 %9, 1, !dbg !7598
  call void @llvm.dbg.value(metadata i32 %10, metadata !7585, metadata !DIExpression()), !dbg !7594
  %11 = icmp eq i32 %10, 8, !dbg !7599
  br i1 %11, label %12, label %8, !dbg !7600, !llvm.loop !7601

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7603
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7604 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7607, metadata !DIExpression()), !dbg !7608
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7609
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7610
  ret void, !dbg !7611
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7612 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7617
  %2 = icmp ugt i32 %1, 8, !dbg !7619
  br i1 %2, label %3, label %4, !dbg !7620

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7621
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7621
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7621
  unreachable, !dbg !7621

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7626
  call void @llvm.dbg.value(metadata i32 0, metadata !7616, metadata !DIExpression()), !dbg !7627
  %5 = icmp eq i32 %1, 0, !dbg !7628
  br i1 %5, label %13, label %6, !dbg !7631

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7631

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7616, metadata !DIExpression()), !dbg !7627
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7632
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7634
  %11 = add nuw i32 %9, 1, !dbg !7635
  call void @llvm.dbg.value(metadata i32 %11, metadata !7616, metadata !DIExpression()), !dbg !7627
  %12 = icmp eq i32 %11, %1, !dbg !7628
  br i1 %12, label %13, label %8, !dbg !7631, !llvm.loop !7636

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7638
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7639
  tail call void @arm_core_mpu_enable() #24, !dbg !7640
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7641
  %16 = and i32 %15, 65280, !dbg !7641
  %17 = icmp eq i32 %16, 2048, !dbg !7641
  br i1 %17, label %19, label %18, !dbg !7644

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7645
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #25, !dbg !7645
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7645
  unreachable, !dbg !7645

19:                                               ; preds = %13
  ret i32 0, !dbg !7647
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7648 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7655, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.value(metadata i8* %1, metadata !7656, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.value(metadata i8* %0, metadata !7657, metadata !DIExpression()), !dbg !7658
  %3 = load i8, i8* %1, align 1, !dbg !7659
  %4 = icmp eq i8 %3, 0, !dbg !7660
  br i1 %4, label %13, label %5, !dbg !7661

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7655, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.value(metadata i8* %8, metadata !7656, metadata !DIExpression()), !dbg !7658
  store i8 %6, i8* %7, align 1, !dbg !7662
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7664
  call void @llvm.dbg.value(metadata i8* %9, metadata !7655, metadata !DIExpression()), !dbg !7658
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7665
  call void @llvm.dbg.value(metadata i8* %10, metadata !7656, metadata !DIExpression()), !dbg !7658
  %11 = load i8, i8* %10, align 1, !dbg !7659
  %12 = icmp eq i8 %11, 0, !dbg !7660
  br i1 %12, label %13, label %5, !dbg !7661, !llvm.loop !7666

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7668
  ret i8* %0, !dbg !7669
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7670 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7674, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i8* %1, metadata !7675, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i32 %2, metadata !7676, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i8* %0, metadata !7677, metadata !DIExpression()), !dbg !7678
  %4 = icmp eq i32 %2, 0, !dbg !7679
  br i1 %4, label %22, label %5, !dbg !7680

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7674, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i32 %7, metadata !7676, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i8* %8, metadata !7675, metadata !DIExpression()), !dbg !7678
  %9 = load i8, i8* %8, align 1, !dbg !7681
  %10 = icmp eq i8 %9, 0, !dbg !7682
  br i1 %10, label %16, label %11, !dbg !7683

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7684
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7686
  call void @llvm.dbg.value(metadata i8* %12, metadata !7675, metadata !DIExpression()), !dbg !7678
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7687
  call void @llvm.dbg.value(metadata i8* %13, metadata !7674, metadata !DIExpression()), !dbg !7678
  %14 = add i32 %7, -1, !dbg !7688
  call void @llvm.dbg.value(metadata i32 %14, metadata !7676, metadata !DIExpression()), !dbg !7678
  %15 = icmp eq i32 %14, 0, !dbg !7679
  br i1 %15, label %22, label %5, !dbg !7680, !llvm.loop !7689

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7674, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i32 %18, metadata !7676, metadata !DIExpression()), !dbg !7678
  store i8 0, i8* %17, align 1, !dbg !7691
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7693
  call void @llvm.dbg.value(metadata i8* %19, metadata !7674, metadata !DIExpression()), !dbg !7678
  %20 = add i32 %18, -1, !dbg !7694
  call void @llvm.dbg.value(metadata i32 %20, metadata !7676, metadata !DIExpression()), !dbg !7678
  %21 = icmp eq i32 %20, 0, !dbg !7695
  br i1 %21, label %22, label %16, !dbg !7696, !llvm.loop !7697

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7699
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7700 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7704, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.value(metadata i32 %1, metadata !7705, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.value(metadata i32 %1, metadata !7706, metadata !DIExpression()), !dbg !7707
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7708

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7704, metadata !DIExpression()), !dbg !7707
  %6 = load i8, i8* %5, align 1, !dbg !7709
  %7 = icmp eq i8 %6, %3, !dbg !7710
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7711
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7712
  call void @llvm.dbg.value(metadata i8* %10, metadata !7704, metadata !DIExpression()), !dbg !7707
  br i1 %9, label %11, label %4, !dbg !7711, !llvm.loop !7714

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7716
  ret i8* %12, !dbg !7717
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7718 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7720, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i32 %1, metadata !7721, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i8* null, metadata !7722, metadata !DIExpression()), !dbg !7723
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7724

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7723
  call void @llvm.dbg.value(metadata i8* %6, metadata !7722, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i8* %5, metadata !7720, metadata !DIExpression()), !dbg !7723
  %7 = load i8, i8* %5, align 1, !dbg !7725
  %8 = icmp eq i8 %7, %3, !dbg !7728
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7729
  call void @llvm.dbg.value(metadata i8* %9, metadata !7722, metadata !DIExpression()), !dbg !7723
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7730
  call void @llvm.dbg.value(metadata i8* %10, metadata !7720, metadata !DIExpression()), !dbg !7723
  %11 = icmp eq i8 %7, 0, !dbg !7731
  br i1 %11, label %12, label %4, !dbg !7731, !llvm.loop !7732

12:                                               ; preds = %4
  ret i8* %9, !dbg !7734
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7735 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7739, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata i32 0, metadata !7740, metadata !DIExpression()), !dbg !7741
  %2 = load i8, i8* %0, align 1, !dbg !7742
  %3 = icmp eq i8 %2, 0, !dbg !7743
  br i1 %3, label %11, label %4, !dbg !7744

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7740, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata i8* %6, metadata !7739, metadata !DIExpression()), !dbg !7741
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7745
  call void @llvm.dbg.value(metadata i8* %7, metadata !7739, metadata !DIExpression()), !dbg !7741
  %8 = add i32 %5, 1, !dbg !7747
  call void @llvm.dbg.value(metadata i32 %8, metadata !7740, metadata !DIExpression()), !dbg !7741
  %9 = load i8, i8* %7, align 1, !dbg !7742
  %10 = icmp eq i8 %9, 0, !dbg !7743
  br i1 %10, label %11, label %4, !dbg !7744, !llvm.loop !7748

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7741
  ret i32 %12, !dbg !7750
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7751 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7755, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata i32 %1, metadata !7756, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata i32 0, metadata !7757, metadata !DIExpression()), !dbg !7758
  %3 = load i8, i8* %0, align 1, !dbg !7759
  %4 = icmp ne i8 %3, 0, !dbg !7760
  %5 = icmp ne i32 %1, 0, !dbg !7761
  %6 = and i1 %4, %5, !dbg !7761
  br i1 %6, label %7, label %16, !dbg !7762

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7757, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata i8* %9, metadata !7755, metadata !DIExpression()), !dbg !7758
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7763
  call void @llvm.dbg.value(metadata i8* %10, metadata !7755, metadata !DIExpression()), !dbg !7758
  %11 = add nuw i32 %8, 1, !dbg !7765
  call void @llvm.dbg.value(metadata i32 %11, metadata !7757, metadata !DIExpression()), !dbg !7758
  %12 = load i8, i8* %10, align 1, !dbg !7759
  %13 = icmp ne i8 %12, 0, !dbg !7760
  %14 = icmp ult i32 %11, %1, !dbg !7761
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7761
  br i1 %15, label %7, label %16, !dbg !7762, !llvm.loop !7766

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7758
  ret i32 %17, !dbg !7768
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7769 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7773, metadata !DIExpression()), !dbg !7775
  call void @llvm.dbg.value(metadata i8* %1, metadata !7774, metadata !DIExpression()), !dbg !7775
  %3 = load i8, i8* %0, align 1, !dbg !7776
  %4 = load i8, i8* %1, align 1, !dbg !7777
  %5 = icmp ne i8 %3, %4, !dbg !7778
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7779
  br i1 %7, label %18, label %8, !dbg !7779

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7774, metadata !DIExpression()), !dbg !7775
  call void @llvm.dbg.value(metadata i8* %10, metadata !7773, metadata !DIExpression()), !dbg !7775
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7780
  call void @llvm.dbg.value(metadata i8* %11, metadata !7773, metadata !DIExpression()), !dbg !7775
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7782
  call void @llvm.dbg.value(metadata i8* %12, metadata !7774, metadata !DIExpression()), !dbg !7775
  %13 = load i8, i8* %11, align 1, !dbg !7776
  %14 = load i8, i8* %12, align 1, !dbg !7777
  %15 = icmp ne i8 %13, %14, !dbg !7778
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7779
  br i1 %17, label %18, label %8, !dbg !7779, !llvm.loop !7783

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7776
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7777
  %21 = zext i8 %19 to i32, !dbg !7786
  %22 = zext i8 %20 to i32, !dbg !7787
  %23 = sub nsw i32 %21, %22, !dbg !7788
  ret i32 %23, !dbg !7789
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7790 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7794, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata i8* %1, metadata !7795, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata i32 %2, metadata !7796, metadata !DIExpression()), !dbg !7797
  %4 = icmp eq i32 %2, 0, !dbg !7798
  br i1 %4, label %23, label %5, !dbg !7798

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7796, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata i8* %7, metadata !7795, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata i8* %8, metadata !7794, metadata !DIExpression()), !dbg !7797
  %9 = load i8, i8* %8, align 1, !dbg !7799
  %10 = load i8, i8* %7, align 1, !dbg !7800
  %11 = icmp ne i8 %9, %10, !dbg !7801
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7802
  br i1 %13, label %19, label %14, !dbg !7802

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7803
  call void @llvm.dbg.value(metadata i8* %15, metadata !7794, metadata !DIExpression()), !dbg !7797
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7805
  call void @llvm.dbg.value(metadata i8* %16, metadata !7795, metadata !DIExpression()), !dbg !7797
  %17 = add i32 %6, -1, !dbg !7806
  call void @llvm.dbg.value(metadata i32 %17, metadata !7796, metadata !DIExpression()), !dbg !7797
  %18 = icmp eq i32 %17, 0, !dbg !7798
  br i1 %18, label %23, label %5, !dbg !7798, !llvm.loop !7807

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7810
  %21 = zext i8 %10 to i32, !dbg !7811
  %22 = sub nsw i32 %20, %21, !dbg !7812
  br label %23, !dbg !7813

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7813
  ret i32 %24, !dbg !7814
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7815 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7819, metadata !DIExpression()), !dbg !7824
  call void @llvm.dbg.value(metadata i8* %1, metadata !7820, metadata !DIExpression()), !dbg !7824
  call void @llvm.dbg.value(metadata i8** %2, metadata !7821, metadata !DIExpression()), !dbg !7824
  %4 = icmp eq i8* %0, null, !dbg !7825
  br i1 %4, label %5, label %7, !dbg !7825

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7826
  br label %7, !dbg !7825

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7825
  call void @llvm.dbg.value(metadata i8* %8, metadata !7822, metadata !DIExpression()), !dbg !7824
  %9 = load i8, i8* %8, align 1, !dbg !7827
  %10 = icmp eq i8 %9, 0, !dbg !7827
  br i1 %10, label %33, label %11, !dbg !7828

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7822, metadata !DIExpression()), !dbg !7824
  %14 = zext i8 %12 to i32, !dbg !7827
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7829
  %16 = icmp eq i8* %15, null, !dbg !7828
  br i1 %16, label %21, label %17, !dbg !7830

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7831
  call void @llvm.dbg.value(metadata i8* %18, metadata !7822, metadata !DIExpression()), !dbg !7824
  %19 = load i8, i8* %18, align 1, !dbg !7827
  %20 = icmp eq i8 %19, 0, !dbg !7827
  br i1 %20, label %33, label %11, !dbg !7828, !llvm.loop !7833

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7823, metadata !DIExpression()), !dbg !7824
  %24 = zext i8 %22 to i32, !dbg !7835
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7836
  %26 = icmp eq i8* %25, null, !dbg !7837
  br i1 %26, label %27, label %31, !dbg !7838

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7839
  call void @llvm.dbg.value(metadata i8* %28, metadata !7823, metadata !DIExpression()), !dbg !7824
  %29 = load i8, i8* %28, align 1, !dbg !7835
  %30 = icmp eq i8 %29, 0, !dbg !7835
  br i1 %30, label %33, label %21, !dbg !7841, !llvm.loop !7842

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7844
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7847
  br label %33, !dbg !7848

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7824
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7824
  store i8* %34, i8** %2, align 4, !dbg !7824
  ret i8* %35, !dbg !7849
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7850 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7852, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i8* %1, metadata !7853, metadata !DIExpression()), !dbg !7854
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7855
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7856
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7857
  ret i8* %0, !dbg !7858
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7859 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7861, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i8* %1, metadata !7862, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i32 %2, metadata !7863, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i8* %0, metadata !7864, metadata !DIExpression()), !dbg !7866
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7867
  call void @llvm.dbg.value(metadata i32 %4, metadata !7865, metadata !DIExpression()), !dbg !7866
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7868
  call void @llvm.dbg.value(metadata i8* %5, metadata !7861, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i8* %1, metadata !7862, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i32 %2, metadata !7863, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i32 %2, metadata !7863, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7866
  %6 = icmp eq i32 %2, 0, !dbg !7869
  br i1 %6, label %18, label %7, !dbg !7870

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7871
  call void @llvm.dbg.value(metadata i8* %9, metadata !7861, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i8* %10, metadata !7862, metadata !DIExpression()), !dbg !7866
  %12 = load i8, i8* %10, align 1, !dbg !7872
  %13 = icmp eq i8 %12, 0, !dbg !7873
  br i1 %13, label %18, label %14, !dbg !7874

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7875
  call void @llvm.dbg.value(metadata i8* %15, metadata !7862, metadata !DIExpression()), !dbg !7866
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7877
  call void @llvm.dbg.value(metadata i8* %16, metadata !7861, metadata !DIExpression()), !dbg !7866
  store i8 %12, i8* %9, align 1, !dbg !7878
  call void @llvm.dbg.value(metadata i32 %11, metadata !7863, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.value(metadata i32 %11, metadata !7863, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7866
  %17 = icmp eq i32 %11, 0, !dbg !7869
  br i1 %17, label %18, label %7, !dbg !7870, !llvm.loop !7879

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7866
  store i8 0, i8* %19, align 1, !dbg !7881
  ret i8* %0, !dbg !7882
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7883 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7887, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i8* %1, metadata !7888, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i32 %2, metadata !7889, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i8* %0, metadata !7890, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i8* %1, metadata !7891, metadata !DIExpression()), !dbg !7892
  %4 = icmp eq i32 %2, 0, !dbg !7893
  br i1 %4, label %31, label %5, !dbg !7895

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7891, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i8* %0, metadata !7890, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i32 %2, metadata !7889, metadata !DIExpression()), !dbg !7892
  %6 = add i32 %2, -1, !dbg !7896
  call void @llvm.dbg.value(metadata i32 %6, metadata !7889, metadata !DIExpression()), !dbg !7892
  %7 = icmp eq i32 %6, 0, !dbg !7897
  br i1 %7, label %23, label %8, !dbg !7898

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7899
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7899
  br label %11, !dbg !7899

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7891, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i8* %14, metadata !7890, metadata !DIExpression()), !dbg !7892
  %15 = load i8, i8* %14, align 1, !dbg !7900
  %16 = load i8, i8* %13, align 1, !dbg !7901
  %17 = icmp eq i8 %15, %16, !dbg !7902
  br i1 %17, label %18, label %23, !dbg !7899

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7903
  call void @llvm.dbg.value(metadata i8* %19, metadata !7890, metadata !DIExpression()), !dbg !7892
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7905
  call void @llvm.dbg.value(metadata i8* %20, metadata !7891, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i32 %12, metadata !7889, metadata !DIExpression()), !dbg !7892
  %21 = add i32 %12, -1, !dbg !7896
  call void @llvm.dbg.value(metadata i32 %21, metadata !7889, metadata !DIExpression()), !dbg !7892
  %22 = icmp eq i32 %21, 0, !dbg !7897
  br i1 %22, label %23, label %11, !dbg !7898, !llvm.loop !7906

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7892
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7892
  %26 = load i8, i8* %24, align 1, !dbg !7908
  %27 = zext i8 %26 to i32, !dbg !7908
  %28 = load i8, i8* %25, align 1, !dbg !7909
  %29 = zext i8 %28 to i32, !dbg !7909
  %30 = sub nsw i32 %27, %29, !dbg !7910
  br label %31, !dbg !7911

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7892
  ret i32 %32, !dbg !7912
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7913 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7917, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8* %1, metadata !7918, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i32 %2, metadata !7919, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8* %0, metadata !7920, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8* %1, metadata !7921, metadata !DIExpression()), !dbg !7922
  %4 = ptrtoint i8* %0 to i32, !dbg !7923
  %5 = ptrtoint i8* %1 to i32, !dbg !7923
  %6 = sub i32 %4, %5, !dbg !7923
  %7 = icmp ult i32 %6, %2, !dbg !7925
  br i1 %7, label %10, label %8, !dbg !7926

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7921, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8* %0, metadata !7920, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i32 %2, metadata !7919, metadata !DIExpression()), !dbg !7922
  %9 = icmp eq i32 %2, 0, !dbg !7927
  br i1 %9, label %26, label %17, !dbg !7929

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7919, metadata !DIExpression()), !dbg !7922
  %12 = add i32 %11, -1, !dbg !7930
  call void @llvm.dbg.value(metadata i32 %12, metadata !7919, metadata !DIExpression()), !dbg !7922
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7933
  %14 = load i8, i8* %13, align 1, !dbg !7933
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7934
  store i8 %14, i8* %15, align 1, !dbg !7935
  %16 = icmp eq i32 %12, 0, !dbg !7936
  br i1 %16, label %26, label %10, !dbg !7937, !llvm.loop !7938

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7921, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8* %19, metadata !7920, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i32 %20, metadata !7919, metadata !DIExpression()), !dbg !7922
  %21 = load i8, i8* %18, align 1, !dbg !7940
  store i8 %21, i8* %19, align 1, !dbg !7942
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7943
  call void @llvm.dbg.value(metadata i8* %22, metadata !7920, metadata !DIExpression()), !dbg !7922
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7944
  call void @llvm.dbg.value(metadata i8* %23, metadata !7921, metadata !DIExpression()), !dbg !7922
  %24 = add i32 %20, -1, !dbg !7945
  call void @llvm.dbg.value(metadata i32 %24, metadata !7919, metadata !DIExpression()), !dbg !7922
  %25 = icmp eq i32 %24, 0, !dbg !7927
  br i1 %25, label %26, label %17, !dbg !7929, !llvm.loop !7946

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7948
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7949 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7955, metadata !DIExpression()), !dbg !7960
  call void @llvm.dbg.value(metadata i8* %1, metadata !7956, metadata !DIExpression()), !dbg !7960
  call void @llvm.dbg.value(metadata i32 %2, metadata !7957, metadata !DIExpression()), !dbg !7960
  call void @llvm.dbg.value(metadata i8* %0, metadata !7958, metadata !DIExpression()), !dbg !7960
  call void @llvm.dbg.value(metadata i8* %1, metadata !7959, metadata !DIExpression()), !dbg !7960
  %4 = icmp eq i32 %2, 0, !dbg !7961
  br i1 %4, label %14, label %5, !dbg !7962

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7959, metadata !DIExpression()), !dbg !7960
  call void @llvm.dbg.value(metadata i8* %7, metadata !7958, metadata !DIExpression()), !dbg !7960
  call void @llvm.dbg.value(metadata i32 %8, metadata !7957, metadata !DIExpression()), !dbg !7960
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7963
  call void @llvm.dbg.value(metadata i8* %9, metadata !7959, metadata !DIExpression()), !dbg !7960
  %10 = load i8, i8* %6, align 1, !dbg !7965
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7966
  call void @llvm.dbg.value(metadata i8* %11, metadata !7958, metadata !DIExpression()), !dbg !7960
  store i8 %10, i8* %7, align 1, !dbg !7967
  %12 = add i32 %8, -1, !dbg !7968
  call void @llvm.dbg.value(metadata i32 %12, metadata !7957, metadata !DIExpression()), !dbg !7960
  %13 = icmp eq i32 %12, 0, !dbg !7961
  br i1 %13, label %14, label %5, !dbg !7962, !llvm.loop !7969

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7971
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !7972 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7976, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.value(metadata i32 %1, metadata !7977, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.value(metadata i32 %2, metadata !7978, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.value(metadata i8* %0, metadata !7979, metadata !DIExpression()), !dbg !7981
  %4 = trunc i32 %1 to i8, !dbg !7982
  call void @llvm.dbg.value(metadata i8 %4, metadata !7980, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.value(metadata i32 %2, metadata !7978, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.value(metadata i8* %0, metadata !7979, metadata !DIExpression()), !dbg !7981
  %5 = icmp eq i32 %2, 0, !dbg !7983
  br i1 %5, label %12, label %6, !dbg !7984

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7978, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.value(metadata i8* %8, metadata !7979, metadata !DIExpression()), !dbg !7981
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7985
  call void @llvm.dbg.value(metadata i8* %9, metadata !7979, metadata !DIExpression()), !dbg !7981
  store i8 %4, i8* %8, align 1, !dbg !7987
  %10 = add i32 %7, -1, !dbg !7988
  call void @llvm.dbg.value(metadata i32 %10, metadata !7978, metadata !DIExpression()), !dbg !7981
  %11 = icmp eq i32 %10, 0, !dbg !7983
  br i1 %11, label %12, label %6, !dbg !7984, !llvm.loop !7989

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7991
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7992 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7996, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i32 %1, metadata !7997, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i32 %2, metadata !7998, metadata !DIExpression()), !dbg !8002
  %4 = icmp eq i32 %2, 0, !dbg !8003
  br i1 %4, label %17, label %5, !dbg !8004

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8005

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8006
  call void @llvm.dbg.value(metadata i8* %9, metadata !7999, metadata !DIExpression()), !dbg !8006
  call void @llvm.dbg.value(metadata i32 %8, metadata !7998, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i8* %9, metadata !7999, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8006
  %10 = load i8, i8* %9, align 1, !dbg !8007
  %11 = icmp eq i8 %10, %6, !dbg !8010
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8011
  call void @llvm.dbg.value(metadata i8* %12, metadata !7999, metadata !DIExpression()), !dbg !8006
  call void @llvm.dbg.value(metadata i32 %13, metadata !7998, metadata !DIExpression()), !dbg !8002
  br i1 %15, label %16, label %7, !dbg !8011, !llvm.loop !8012

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8014

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8002
  ret i8* %19, !dbg !8015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8016 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8018, metadata !DIExpression()), !dbg !8019
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8020
  ret void, !dbg !8021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8024, metadata !DIExpression()), !dbg !8025
  ret i32 -1, !dbg !8026
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8027 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8031, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.value(metadata i32* %1, metadata !8032, metadata !DIExpression()), !dbg !8033
  %3 = ptrtoint i32* %1 to i32, !dbg !8034
  %4 = and i32 %3, -2, !dbg !8034
  %5 = icmp eq i32 %4, 2, !dbg !8034
  br i1 %5, label %6, label %9, !dbg !8034

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8035
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8035
  br label %9, !dbg !8036

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8036
  ret i32 %10, !dbg !8037
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8040, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i32* %1, metadata !8041, metadata !DIExpression()), !dbg !8042
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8043
  ret i32 %3, !dbg !8044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8048, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i32* %1, metadata !8049, metadata !DIExpression()), !dbg !8050
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8051, !srcloc !8053
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8054
  ret i32 %3, !dbg !8055
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8056 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8061, metadata !DIExpression()), !dbg !8065
  call void @llvm.dbg.value(metadata i32* %1, metadata !8062, metadata !DIExpression()), !dbg !8065
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8066
  call void @llvm.dbg.value(metadata i32 %3, metadata !8063, metadata !DIExpression()), !dbg !8065
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8067
  call void @llvm.dbg.value(metadata i32 %4, metadata !8064, metadata !DIExpression()), !dbg !8065
  %5 = icmp ne i32 %3, %4, !dbg !8068
  %6 = sext i1 %5 to i32, !dbg !8069
  ret i32 %6, !dbg !8070
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8071 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8075, metadata !DIExpression()), !dbg !8079
  call void @llvm.dbg.value(metadata i32 %1, metadata !8076, metadata !DIExpression()), !dbg !8079
  call void @llvm.dbg.value(metadata i32 %2, metadata !8077, metadata !DIExpression()), !dbg !8079
  call void @llvm.dbg.value(metadata i32* %3, metadata !8078, metadata !DIExpression()), !dbg !8079
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8080
  ret i32 %5, !dbg !8081
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8082 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8084, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i32 %1, metadata !8085, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i32 %2, metadata !8086, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i32* %3, metadata !8087, metadata !DIExpression()), !dbg !8088
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8089, !srcloc !8091
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8092
  ret i32 %5, !dbg !8093
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8094 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8096, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32 %1, metadata !8097, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32 %2, metadata !8098, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32* %3, metadata !8099, metadata !DIExpression()), !dbg !8104
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8105
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8107
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8107
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8107
  br i1 %11, label %33, label %12, !dbg !8107

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8104
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8104
  call void @llvm.dbg.value(metadata i8* %14, metadata !8102, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32 %13, metadata !8100, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32 %1, metadata !8101, metadata !DIExpression()), !dbg !8104
  br label %15, !dbg !8108

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8110
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8104
  call void @llvm.dbg.value(metadata i8* %17, metadata !8102, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.value(metadata i32 %16, metadata !8101, metadata !DIExpression()), !dbg !8104
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8111
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8114
  call void @llvm.dbg.value(metadata i8* %19, metadata !8102, metadata !DIExpression()), !dbg !8104
  %20 = load i8, i8* %17, align 1, !dbg !8115
  %21 = zext i8 %20 to i32, !dbg !8116
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8111
  %23 = icmp eq i32 %22, -1, !dbg !8117
  br i1 %23, label %30, label %24, !dbg !8118

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8119
  call void @llvm.dbg.value(metadata i32 %25, metadata !8101, metadata !DIExpression()), !dbg !8104
  %26 = icmp eq i32 %25, 0, !dbg !8120
  br i1 %26, label %27, label %15, !dbg !8121, !llvm.loop !8122

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8124
  call void @llvm.dbg.value(metadata i32 %28, metadata !8100, metadata !DIExpression()), !dbg !8104
  %29 = icmp eq i32 %28, 0, !dbg !8125
  br i1 %29, label %30, label %12, !dbg !8126, !llvm.loop !8127

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8104
  call void @llvm.dbg.value(metadata i32 %31, metadata !8100, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.label(metadata !8103), !dbg !8130
  %32 = sub i32 %2, %31, !dbg !8131
  br label %33, !dbg !8132

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8104
  ret i32 %34, !dbg !8133
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8134 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8138, metadata !DIExpression()), !dbg !8139
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8140
  %3 = icmp eq i32 %2, -1, !dbg !8142
  br i1 %3, label %8, label %4, !dbg !8143

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8144
  %6 = icmp eq i32 %5, -1, !dbg !8145
  %7 = sext i1 %6 to i32, !dbg !8144
  br label %8, !dbg !8146

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8139
  ret i32 %9, !dbg !8147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @end_report() local_unnamed_addr #1 !dbg !8148 {
  %1 = load i32, i32* @test_status, align 4, !dbg !8149
  %2 = icmp eq i32 %1, 0, !dbg !8149
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8151
  %3 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.90, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.91, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.92, i32 0, i32 0), i8* noundef %3) #25, !dbg !8151
  ret void, !dbg !8152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_start() local_unnamed_addr #4 !dbg !8153 {
  ret void, !dbg !8154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_stop() local_unnamed_addr #4 !dbg !8155 {
  ret void, !dbg !8156
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_skip_failed_assumption() local_unnamed_addr #1 !dbg !8157 {
  store i1 true, i1* @current_test_failed_assumption, align 1, !dbg !8158
  tail call void @ztest_test_skip() #24, !dbg !8161
  ret void, !dbg !8162
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_skip() local_unnamed_addr #1 !dbg !8163 {
  %1 = load i32, i32* @phase, align 4, !dbg !8164
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8165

2:                                                ; preds = %0
  store i32 4, i32* @test_result, align 4, !dbg !8166
  br label %6, !dbg !8168

3:                                                ; preds = %0, %0
  store i32 3, i32* @test_result, align 4, !dbg !8169
  tail call fastcc void @test_finalize() #24, !dbg !8170
  br label %6, !dbg !8171

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8172
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.93, i32 0, i32 0), i8* noundef %5) #25, !dbg !8173
  store i32 2, i32* @test_status, align 4, !dbg !8174
  br label %6, !dbg !8175

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8176
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_finalize() unnamed_addr #1 !dbg !8177 {
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8178
  %1 = tail call fastcc %struct.k_thread* @k_current_get.102() #26, !dbg !8181
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef %1) #24, !dbg !8182
  ret void, !dbg !8183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @get_friendly_phase_name(i32 noundef %0) unnamed_addr #4 !dbg !8184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8188, metadata !DIExpression()), !dbg !8189
  %2 = icmp ult i32 %0, 6, !dbg !8190
  br i1 %2, label %3, label %6, !dbg !8190

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table.get_friendly_phase_name, i32 0, i32 %0, !dbg !8190
  %5 = load i8*, i8** %4, align 4, !dbg !8190
  br label %6, !dbg !8190

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.94, i32 0, i32 0), %1 ], !dbg !8191
  ret i8* %7, !dbg !8193
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.101(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !8194 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8200, metadata !DIExpression()), !dbg !8201
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8202, !srcloc !8204
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8205
  ret void, !dbg !8206
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.102() unnamed_addr #11 !dbg !8207 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.103() #26, !dbg !8210
  ret %struct.k_thread* %1, !dbg !8211
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.103() unnamed_addr #11 !dbg !8212 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8213, !srcloc !8215
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !8216
  ret %struct.k_thread* %1, !dbg !8217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_fail() local_unnamed_addr #1 !dbg !8218 {
  %1 = load i32, i32* @phase, align 4, !dbg !8219
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8220

2:                                                ; preds = %0
  store i32 5, i32* @test_result, align 4, !dbg !8221
  br label %6, !dbg !8223

3:                                                ; preds = %0, %0
  store i32 2, i32* @test_result, align 4, !dbg !8224
  tail call fastcc void @test_finalize() #24, !dbg !8225
  br label %6, !dbg !8226

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8227
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.104, i32 0, i32 0), i8* noundef %5) #25, !dbg !8228
  store i32 2, i32* @test_status, align 4, !dbg !8229
  br label %6, !dbg !8230

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8231
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_pass() local_unnamed_addr #1 !dbg !8232 {
  %1 = load i32, i32* @phase, align 4, !dbg !8233
  %2 = icmp eq i32 %1, 2, !dbg !8234
  br i1 %2, label %3, label %4, !dbg !8234

3:                                                ; preds = %0
  store i32 1, i32* @test_result, align 4, !dbg !8235
  br label %8, !dbg !8237

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8238
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.105, i32 0, i32 0), i8* noundef %5) #25, !dbg !8239
  store i32 2, i32* @test_status, align 4, !dbg !8240
  %6 = load i32, i32* @phase, align 4, !dbg !8241
  %7 = icmp eq i32 %6, 1, !dbg !8243
  br i1 %7, label %8, label %9, !dbg !8244

8:                                                ; preds = %4, %3
  tail call fastcc void @test_finalize() #24, !dbg !8245
  br label %9, !dbg !8246

9:                                                ; preds = %8, %4
  ret void, !dbg !8246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_before(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8247 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8249, metadata !DIExpression()), !dbg !8250
  tail call fastcc void @z_test_1cpu_start() #24, !dbg !8251
  ret void, !dbg !8252
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_start() unnamed_addr #1 !dbg !8253 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8255, !srcloc !8257
  ret void, !dbg !8258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_after(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8259 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8261, metadata !DIExpression()), !dbg !8262
  tail call fastcc void @z_test_1cpu_stop() #24, !dbg !8263
  ret void, !dbg !8264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_stop() unnamed_addr #1 !dbg !8265 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8266, !srcloc !8268
  ret void, !dbg !8269
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %0, %struct.ztest_unit_test* noundef readonly %1) local_unnamed_addr #1 !dbg !8270 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8291, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8292, metadata !DIExpression()), !dbg !8294
  %3 = icmp eq %struct.ztest_unit_test* %1, null, !dbg !8295
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 1, !dbg !8296
  %5 = select i1 %3, %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* %4, !dbg !8296
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %5, metadata !8293, metadata !DIExpression()), !dbg !8294
  %6 = icmp ult %struct.ztest_unit_test* %5, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8297
  br i1 %6, label %7, label %16, !dbg !8300

7:                                                ; preds = %2, %13
  %8 = phi %struct.ztest_unit_test* [ %14, %13 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %8, metadata !8293, metadata !DIExpression()), !dbg !8294
  %9 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 0, i32 0, !dbg !8301
  %10 = load i8*, i8** %9, align 4, !dbg !8301
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %10) #25, !dbg !8304
  %12 = icmp eq i32 %11, 0, !dbg !8305
  br i1 %12, label %16, label %13, !dbg !8306

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 1, !dbg !8307
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %14, metadata !8293, metadata !DIExpression()), !dbg !8294
  %15 = icmp ult %struct.ztest_unit_test* %14, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8297
  br i1 %15, label %7, label %16, !dbg !8300, !llvm.loop !8308

16:                                               ; preds = %7, %13, %2
  %17 = phi %struct.ztest_unit_test* [ null, %2 ], [ null, %13 ], [ %8, %7 ], !dbg !8294
  ret %struct.ztest_unit_test* %17, !dbg !8310
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_ztest_run_test_suite(i8* noundef %0) local_unnamed_addr #1 !dbg !8311 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8313, metadata !DIExpression()), !dbg !8314
  %2 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) #24, !dbg !8315
  %3 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %2) #24, !dbg !8316
  ret i32 %3, !dbg !8317
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) unnamed_addr #1 !dbg !8318 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8339, metadata !DIExpression()), !dbg !8341
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8340, metadata !DIExpression()), !dbg !8341
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %11, !dbg !8342

2:                                                ; preds = %1, %8
  %3 = phi %struct.ztest_suite_node* [ %9, %8 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8340, metadata !DIExpression()), !dbg !8341
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 0, i32 0, !dbg !8344
  %5 = load i8*, i8** %4, align 4, !dbg !8344
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #25, !dbg !8348
  %7 = icmp eq i32 %6, 0, !dbg !8349
  br i1 %7, label %11, label %8, !dbg !8350

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8351
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %9, metadata !8340, metadata !DIExpression()), !dbg !8341
  %10 = icmp ult %struct.ztest_suite_node* %9, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8352
  br i1 %10, label %2, label %11, !dbg !8342, !llvm.loop !8353

11:                                               ; preds = %2, %8, %1
  %12 = phi %struct.ztest_suite_node* [ null, %1 ], [ null, %8 ], [ %3, %2 ], !dbg !8341
  ret %struct.ztest_suite_node* %12, !dbg !8355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %0) unnamed_addr #1 !dbg !8356 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8360, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8361, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i8* null, metadata !8362, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i32 0, metadata !8363, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i32 0, metadata !8364, metadata !DIExpression()), !dbg !8367
  %2 = icmp eq %struct.ztest_suite_node* %0, null, !dbg !8368
  br i1 %2, label %3, label %4, !dbg !8370

3:                                                ; preds = %1
  store i32 2, i32* @test_status, align 4, !dbg !8371
  br label %68, !dbg !8373

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0, !dbg !8374
  %6 = load i8*, i8** %5, align 4, !dbg !8374
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.106, i32 0, i32 0), i8* noundef %6) #25, !dbg !8374
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8374
  store i1 false, i1* @current_test_failed_assumption, align 1, !dbg !8376
  store i32 0, i32* @test_result, align 4, !dbg !8377
  store i32 0, i32* @phase, align 4, !dbg !8378
  %7 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 1, !dbg !8379
  %8 = load i8* ()*, i8* ()** %7, align 4, !dbg !8379
  %9 = icmp eq i8* ()* %8, null, !dbg !8381
  br i1 %9, label %12, label %10, !dbg !8382

10:                                               ; preds = %4
  %11 = tail call i8* %8() #25, !dbg !8383
  call void @llvm.dbg.value(metadata i8* %11, metadata !8362, metadata !DIExpression()), !dbg !8367
  br label %12, !dbg !8385

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ null, %4 ], !dbg !8367
  call void @llvm.dbg.value(metadata i8* %13, metadata !8362, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i32 0, metadata !8365, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 undef, metadata !8365, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 0, metadata !8363, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8361, metadata !DIExpression()), !dbg !8367
  %14 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 2), align 4
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8361, metadata !DIExpression()), !dbg !8367
  br label %15, !dbg !8387

15:                                               ; preds = %12, %49
  %16 = phi %struct.ztest_unit_test* [ %19, %49 ], [ null, %12 ], !dbg !8367
  %17 = phi i32 [ %50, %49 ], [ 0, %12 ], !dbg !8390
  call void @llvm.dbg.value(metadata i32 %17, metadata !8363, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %16, metadata !8361, metadata !DIExpression()), !dbg !8367
  %18 = load i8*, i8** %5, align 4, !dbg !8391
  %19 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %18, %struct.ztest_unit_test* noundef %16) #24, !dbg !8392
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8361, metadata !DIExpression()), !dbg !8367
  %20 = icmp eq %struct.ztest_unit_test* %19, null, !dbg !8393
  br i1 %20, label %53, label %21, !dbg !8387

21:                                               ; preds = %15
  %22 = load i8*, i8** %5, align 4, !dbg !8394
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8397
  %24 = load i8*, i8** %23, align 4, !dbg !8397
  %25 = tail call zeroext i1 %14(i8* noundef %22, i8* noundef %24) #25, !dbg !8398
  br i1 %25, label %26, label %49, !dbg !8399

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 4, !dbg !8400
  %28 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8400
  %29 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %28, i32 0, i32 0, !dbg !8402
  %30 = load i32, i32* %29, align 4, !dbg !8403
  %31 = add i32 %30, 1, !dbg !8403
  store i32 %31, i32* %29, align 4, !dbg !8403
  %32 = tail call fastcc i32 @run_test(%struct.ztest_suite_node* noundef nonnull %0, %struct.ztest_unit_test* noundef nonnull %19, i8* noundef %13) #24, !dbg !8404
  call void @llvm.dbg.value(metadata i32 %32, metadata !8364, metadata !DIExpression()), !dbg !8367
  switch i32 %32, label %49 [
    i32 0, label %33
    i32 2, label %36
    i32 1, label %39
  ], !dbg !8405

33:                                               ; preds = %26
  %34 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8406
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %34, i32 0, i32 3, !dbg !8409
  br label %42, !dbg !8410

36:                                               ; preds = %26
  %37 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8411
  %38 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %37, i32 0, i32 1, !dbg !8414
  br label %42, !dbg !8415

39:                                               ; preds = %26
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8416
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !8419
  br label %42, !dbg !8420

42:                                               ; preds = %36, %39, %33
  %43 = phi i32* [ %38, %36 ], [ %41, %39 ], [ %35, %33 ]
  %44 = load i32, i32* %43, align 4, !dbg !8421
  %45 = add i32 %44, 1, !dbg !8421
  store i32 %45, i32* %43, align 4, !dbg !8421
  %46 = icmp eq i32 %32, 1, !dbg !8422
  %47 = zext i1 %46 to i32, !dbg !8424
  %48 = add nsw i32 %17, %47, !dbg !8424
  br label %49, !dbg !8424

49:                                               ; preds = %42, %26, %21
  %50 = phi i32 [ %17, %21 ], [ %17, %26 ], [ %48, %42 ], !dbg !8390
  call void @llvm.dbg.value(metadata i32 %50, metadata !8363, metadata !DIExpression()), !dbg !8367
  %51 = load i32, i32* @test_status, align 4, !dbg !8425
  %52 = icmp eq i32 %51, 2, !dbg !8427
  br i1 %52, label %59, label %15, !dbg !8428, !llvm.loop !8429

53:                                               ; preds = %15
  %54 = load i32, i32* @test_status, align 4, !dbg !8431
  %55 = icmp eq i32 %54, 0, !dbg !8387
  call void @llvm.dbg.value(metadata i32 %17, metadata !8363, metadata !DIExpression()), !dbg !8367
  %56 = icmp ne i32 %17, 0
  %57 = select i1 %55, i1 %56, i1 false, !dbg !8433
  br i1 %57, label %58, label %59, !dbg !8433

58:                                               ; preds = %53
  store i32 1, i32* @test_status, align 4, !dbg !8434
  br label %59, !dbg !8436

59:                                               ; preds = %49, %53, %58
  %60 = phi i32 [ %17, %53 ], [ %17, %58 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8365, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 %17, metadata !8363, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8361, metadata !DIExpression()), !dbg !8367
  %61 = icmp sgt i32 %60, 0, !dbg !8437
  %62 = load i8*, i8** %5, align 4, !dbg !8440
  %63 = select i1 %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.107, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.108, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef %63, i8* noundef %62) #25, !dbg !8440
  store i32 4, i32* @phase, align 4, !dbg !8441
  %64 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 4, !dbg !8442
  %65 = load void (i8*)*, void (i8*)** %64, align 4, !dbg !8442
  %66 = icmp eq void (i8*)* %65, null, !dbg !8444
  br i1 %66, label %68, label %67, !dbg !8445

67:                                               ; preds = %59
  tail call void %65(i8* noundef %13) #25, !dbg !8446
  br label %68, !dbg !8448

68:                                               ; preds = %59, %67, %3
  %69 = phi i32 [ -1, %3 ], [ %60, %67 ], [ %60, %59 ], !dbg !8367
  ret i32 %69, !dbg !8449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @run_test(%struct.ztest_suite_node* noundef %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8450 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8454, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8455, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.value(metadata i8* %2, metadata !8456, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.value(metadata i32 0, metadata !8457, metadata !DIExpression()), !dbg !8458
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 1, !dbg !8459
  %5 = load i8*, i8** %4, align 4, !dbg !8459
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.109, i32 0, i32 0), i8* noundef %5) #25, !dbg !8459
  store i32 1, i32* @phase, align 4, !dbg !8461
  tail call fastcc void @get_start_time_cyc() #24, !dbg !8462
  %6 = bitcast %struct.ztest_suite_node* %0 to i8*, !dbg !8465
  %7 = bitcast %struct.ztest_unit_test* %1 to i8*, !dbg !8466
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 3, !dbg !8467
  %9 = load i32, i32* %8, align 4, !dbg !8467
  %10 = or i32 %9, 8, !dbg !8468
  tail call fastcc void @k_thread_create(i8* noundef %6, i8* noundef %7, i8* noundef %2, i32 noundef %10) #24, !dbg !8469
  tail call fastcc void @k_object_access_grant() #24, !dbg !8470
  tail call fastcc void @k_object_access_grant() #24, !dbg !8470
  tail call fastcc void @k_object_access_grant() #24, !dbg !8470
  %11 = load i8*, i8** %4, align 4, !dbg !8471
  %12 = icmp eq i8* %11, null, !dbg !8473
  br i1 %12, label %14, label %13, !dbg !8474

13:                                               ; preds = %3
  tail call fastcc void @k_thread_name_set(i8* noundef nonnull %11) #24, !dbg !8475
  br label %14, !dbg !8477

14:                                               ; preds = %13, %3
  %15 = load i32, i32* @test_result, align 4, !dbg !8478
  %16 = and i32 %15, -2, !dbg !8480
  %17 = icmp eq i32 %16, 4, !dbg !8480
  br i1 %17, label %19, label %18, !dbg !8480

18:                                               ; preds = %14
  tail call fastcc void @k_thread_start() #24, !dbg !8481
  tail call fastcc void @k_thread_join() #24, !dbg !8483
  br label %19, !dbg !8484

19:                                               ; preds = %18, %14
  store i32 3, i32* @phase, align 4, !dbg !8485
  %20 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 3, !dbg !8486
  %21 = load void (i8*)*, void (i8*)** %20, align 4, !dbg !8486
  %22 = icmp eq void (i8*)* %21, null, !dbg !8488
  br i1 %22, label %24, label %23, !dbg !8489

23:                                               ; preds = %19
  tail call void %21(i8* noundef %2) #25, !dbg !8490
  br label %24, !dbg !8492

24:                                               ; preds = %23, %19
  tail call fastcc void @run_test_rules(i1 noundef zeroext false, %struct.ztest_unit_test* noundef nonnull %1, i8* noundef %2) #24, !dbg !8493
  tail call fastcc void @get_test_duration_ms() #24, !dbg !8494
  %25 = load i32, i32* @tc_spend_time, align 4, !dbg !8495
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 4, !dbg !8497
  %27 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %26, align 4, !dbg !8497
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %27, i32 0, i32 4, !dbg !8498
  %29 = load i32, i32* %28, align 4, !dbg !8498
  %30 = icmp ugt i32 %25, %29, !dbg !8499
  br i1 %30, label %31, label %32, !dbg !8500

31:                                               ; preds = %24
  store i32 %25, i32* %28, align 4, !dbg !8501
  br label %32, !dbg !8503

32:                                               ; preds = %31, %24
  store i32 5, i32* @phase, align 4, !dbg !8504
  %33 = load i32, i32* @test_result, align 4, !dbg !8505
  switch i32 %33, label %34 [
    i32 5, label %38
    i32 2, label %38
  ], !dbg !8507

34:                                               ; preds = %32
  %35 = add i32 %33, -3, !dbg !8508
  %36 = icmp ult i32 %35, 2, !dbg !8508
  %37 = select i1 %36, i32 2, i32 0, !dbg !8508
  br label %38, !dbg !8508

38:                                               ; preds = %34, %32, %32
  %39 = phi i32 [ 1, %32 ], [ 1, %32 ], [ %37, %34 ], !dbg !8458
  call void @llvm.dbg.value(metadata i32 %39, metadata !8457, metadata !DIExpression()), !dbg !8458
  tail call fastcc void @cleanup_test() #24, !dbg !8510
  call void @llvm.dbg.value(metadata i32 %39, metadata !8457, metadata !DIExpression()), !dbg !8458
  %40 = tail call fastcc i32 @get_final_test_result(%struct.ztest_unit_test* noundef nonnull %1, i32 noundef %39) #24, !dbg !8513
  call void @llvm.dbg.value(metadata i32 %40, metadata !8457, metadata !DIExpression()), !dbg !8458
  %41 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %40) #24, !dbg !8514
  %42 = load i8*, i8** %4, align 4, !dbg !8514
  %43 = load i32, i32* @tc_spend_time, align 4, !dbg !8514
  %44 = freeze i32 %43
  %45 = udiv i32 %44, 1000, !dbg !8514
  %46 = mul i32 %45, 1000
  %47 = sub i32 %44, %46
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.110, i32 0, i32 0), i8* noundef %41, i8* noundef %42, i32 noundef %45, i32 noundef %47) #25, !dbg !8514
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8514
  %48 = icmp eq i32 %40, 2, !dbg !8516
  br i1 %48, label %49, label %52, !dbg !8518

49:                                               ; preds = %38
  %50 = load i1, i1* @current_test_failed_assumption, align 1, !dbg !8519
  br i1 %50, label %51, label %52, !dbg !8520

51:                                               ; preds = %49
  store i32 1, i32* @test_status, align 4, !dbg !8521
  br label %52, !dbg !8523

52:                                               ; preds = %51, %49, %38
  ret i32 %40, !dbg !8524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_start_time_cyc() unnamed_addr #1 !dbg !8525 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8526
  store i32 %1, i32* @tc_start_time, align 4, !dbg !8527
  ret void, !dbg !8528
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8529 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8548, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8539, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), metadata !8540, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata i32 1024, metadata !8541, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_cb, metadata !8542, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata i8* %0, metadata !8543, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata i8* %1, metadata !8544, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata i8* %2, metadata !8545, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata i32 -1, metadata !8546, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata i32 %3, metadata !8547, metadata !DIExpression()), !dbg !8549
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8550, !srcloc !8552
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef nonnull @ztest_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @test_cb, i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef -1, i32 noundef %3, [1 x i64] [i64 -1]) #25, !dbg !8553
  ret void, !dbg !8554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !8555 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8560, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8561, metadata !DIExpression()), !dbg !8562
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8563, !srcloc !8565
  ret void, !dbg !8566
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(i8* noundef %0) unnamed_addr #1 !dbg !8567 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8571, metadata !DIExpression()), !dbg !8573
  call void @llvm.dbg.value(metadata i8* %0, metadata !8572, metadata !DIExpression()), !dbg !8573
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8574, !srcloc !8576
  %2 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef nonnull @ztest_thread, i8* noundef %0) #25, !dbg !8577
  ret void, !dbg !8578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start() unnamed_addr #1 !dbg !8579 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8581, metadata !DIExpression()), !dbg !8582
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8583, !srcloc !8585
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef nonnull @ztest_thread) #25, !dbg !8586
  ret void, !dbg !8587
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join() unnamed_addr #1 !dbg !8588 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8593, metadata !DIExpression()), !dbg !8594
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8592, metadata !DIExpression()), !dbg !8594
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8595, !srcloc !8597
  %1 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef nonnull @ztest_thread, [1 x i64] [i64 -1]) #25, !dbg !8598
  ret void, !dbg !8599
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_rules(i1 noundef zeroext %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8600 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !8604, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8620
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8605, metadata !DIExpression()), !dbg !8620
  call void @llvm.dbg.value(metadata i8* %2, metadata !8606, metadata !DIExpression()), !dbg !8620
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), metadata !8607, metadata !DIExpression()), !dbg !8621
  br i1 icmp ult (%struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0)), label %5, label %4, !dbg !8622

4:                                                ; preds = %17, %3
  ret void, !dbg !8623

5:                                                ; preds = %3, %17
  %6 = phi %struct.ztest_test_rule* [ %18, %17 ], [ getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %6, metadata !8607, metadata !DIExpression()), !dbg !8621
  br i1 %0, label %7, label %11, !dbg !8624

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 0, !dbg !8628
  %9 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %8, align 4, !dbg !8628
  %10 = icmp eq void (%struct.ztest_unit_test*, i8*)* %9, null, !dbg !8629
  br i1 %10, label %17, label %15, !dbg !8630

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 1, !dbg !8631
  %13 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %12, align 4, !dbg !8631
  %14 = icmp eq void (%struct.ztest_unit_test*, i8*)* %13, null, !dbg !8633
  br i1 %14, label %17, label %15, !dbg !8634

15:                                               ; preds = %11, %7
  %16 = phi void (%struct.ztest_unit_test*, i8*)* [ %9, %7 ], [ %13, %11 ]
  tail call void %16(%struct.ztest_unit_test* noundef %1, i8* noundef %2) #25, !dbg !8635
  br label %17, !dbg !8636

17:                                               ; preds = %15, %7, %11
  %18 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 1, !dbg !8636
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %18, metadata !8607, metadata !DIExpression()), !dbg !8621
  %19 = icmp ult %struct.ztest_test_rule* %18, getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0), !dbg !8637
  br i1 %19, label %5, label %4, !dbg !8622, !llvm.loop !8638
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_test_duration_ms() unnamed_addr #1 !dbg !8640 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8643
  %2 = load i32, i32* @tc_start_time, align 4, !dbg !8644
  %3 = sub i32 %1, %2, !dbg !8645
  call void @llvm.dbg.value(metadata i32 %3, metadata !8642, metadata !DIExpression()), !dbg !8646
  %4 = tail call fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %3) #24, !dbg !8647
  store i32 %4, i32* @tc_spend_time, align 4, !dbg !8648
  ret void, !dbg !8649
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cleanup_test() unnamed_addr #1 !dbg !8650 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8654, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i32 0, metadata !8655, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i32 0, metadata !8656, metadata !DIExpression()), !dbg !8657
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8658
  call void @llvm.dbg.value(metadata i32 0, metadata !8655, metadata !DIExpression()), !dbg !8657
  ret void, !dbg !8661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_final_test_result(%struct.ztest_unit_test* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8662 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8666, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i32 %1, metadata !8667, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i32 -1, metadata !8668, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), metadata !8669, metadata !DIExpression()), !dbg !8678
  br i1 icmp ult (%struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0)), label %3, label %31, !dbg !8679

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 1
  %5 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 0
  br label %6, !dbg !8679

6:                                                ; preds = %3, %19
  %7 = phi %struct.ztest_expected_result_entry* [ getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %3 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %7, metadata !8669, metadata !DIExpression()), !dbg !8678
  %8 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 1, !dbg !8680
  %9 = load i8*, i8** %8, align 4, !dbg !8680
  %10 = load i8*, i8** %4, align 4, !dbg !8684
  %11 = tail call i32 @strcmp(i8* noundef %9, i8* noundef %10) #25, !dbg !8685
  %12 = icmp eq i32 %11, 0, !dbg !8686
  br i1 %12, label %13, label %19, !dbg !8687

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 0, !dbg !8688
  %15 = load i8*, i8** %14, align 4, !dbg !8688
  %16 = load i8*, i8** %5, align 4, !dbg !8689
  %17 = tail call i32 @strcmp(i8* noundef %15, i8* noundef %16) #25, !dbg !8690
  %18 = icmp eq i32 %17, 0, !dbg !8691
  br i1 %18, label %22, label %19, !dbg !8692

19:                                               ; preds = %6, %13
  %20 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 1, !dbg !8693
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %20, metadata !8669, metadata !DIExpression()), !dbg !8678
  %21 = icmp ult %struct.ztest_expected_result_entry* %20, getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0), !dbg !8694
  br i1 %21, label %6, label %31, !dbg !8679, !llvm.loop !8695

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 2, !dbg !8697
  %24 = load i32, i32* %23, align 4, !dbg !8697
  call void @llvm.dbg.value(metadata i32 %24, metadata !8668, metadata !DIExpression()), !dbg !8677
  switch i32 %24, label %31 [
    i32 0, label %25
    i32 1, label %28
  ], !dbg !8699

25:                                               ; preds = %22
  %26 = icmp ne i32 %1, 1, !dbg !8700
  %27 = zext i1 %26 to i32, !dbg !8703
  br label %31, !dbg !8704

28:                                               ; preds = %22
  %29 = icmp ne i32 %1, 2, !dbg !8705
  %30 = zext i1 %29 to i32, !dbg !8708
  br label %31, !dbg !8709

31:                                               ; preds = %19, %2, %22, %28, %25
  %32 = phi i32 [ %27, %25 ], [ %30, %28 ], [ %1, %22 ], [ %1, %2 ], [ %1, %19 ], !dbg !8677
  ret i32 %32, !dbg !8710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @TC_RESULT_TO_STR(i32 noundef %0) unnamed_addr #4 !dbg !8711 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8715, metadata !DIExpression()), !dbg !8716
  %2 = icmp ult i32 %0, 3, !dbg !8717
  br i1 %2, label %3, label %6, !dbg !8717

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.TC_RESULT_TO_STR, i32 0, i32 %0, !dbg !8717
  %5 = load i8*, i8** %4, align 4, !dbg !8717
  br label %6, !dbg !8717

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.111, i32 0, i32 0), %1 ], !dbg !8718
  ret i8* %7, !dbg !8720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !8721 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !8722
  ret i32 %1, !dbg !8723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !8724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8727, metadata !DIExpression()), !dbg !8728
  %2 = zext i32 %0 to i64, !dbg !8729
  call void @llvm.dbg.value(metadata i64 %2, metadata !8730, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i32 84000000, metadata !8735, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i32 1000, metadata !8736, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i8 1, metadata !8737, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i8 1, metadata !8738, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i8 1, metadata !8739, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i8 0, metadata !8740, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i8 0, metadata !8741, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i8 1, metadata !8742, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i64 0, metadata !8743, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i64 83999, metadata !8743, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i64 83999, metadata !8743, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i64 83999, metadata !8743, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i64 83999, metadata !8743, metadata !DIExpression()), !dbg !8747
  %3 = add nuw nsw i64 %2, 83999, !dbg !8749
  call void @llvm.dbg.value(metadata i64 %3, metadata !8730, metadata !DIExpression()), !dbg !8747
  %4 = icmp ult i32 %0, -83999
  %5 = trunc i64 %3 to i32, !dbg !8752
  %6 = udiv i32 %5, 84000, !dbg !8752
  %7 = zext i32 %6 to i64, !dbg !8752
  %8 = udiv i64 %3, 84000, !dbg !8752
  %9 = select i1 %4, i64 %7, i64 %8, !dbg !8752
  %10 = trunc i64 %9 to i32, !dbg !8754
  ret i32 %10, !dbg !8755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !8756 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !8758
  ret i32 %1, !dbg !8759
}

; Function Attrs: noinline nounwind optsize
define internal void @test_cb(i8* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2) #1 !dbg !8760 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8762, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.value(metadata i8* %1, metadata !8763, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.value(metadata i8* %2, metadata !8764, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.value(metadata i8* %0, metadata !8765, metadata !DIExpression()), !dbg !8767
  %4 = bitcast i8* %1 to %struct.ztest_unit_test*, !dbg !8768
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8766, metadata !DIExpression()), !dbg !8767
  store i32 0, i32* @test_result, align 4, !dbg !8769
  tail call fastcc void @run_test_rules(i1 noundef zeroext true, %struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8770
  %5 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8771
  %6 = bitcast i8* %5 to void (i8*)**, !dbg !8771
  %7 = load void (i8*)*, void (i8*)** %6, align 4, !dbg !8771
  %8 = icmp eq void (i8*)* %7, null, !dbg !8773
  br i1 %8, label %10, label %9, !dbg !8774

9:                                                ; preds = %3
  tail call void %7(i8* noundef %2) #25, !dbg !8775
  br label %10, !dbg !8777

10:                                               ; preds = %9, %3
  tail call fastcc void @run_test_functions(%struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8778
  store i32 1, i32* @test_result, align 4, !dbg !8779
  ret void, !dbg !8780
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_functions(%struct.ztest_unit_test* nocapture noundef readonly %0, i8* noundef %1) unnamed_addr #1 !dbg !8781 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* undef, metadata !8785, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8786, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i8* %1, metadata !8787, metadata !DIExpression()), !dbg !8788
  store i32 2, i32* @phase, align 4, !dbg !8789
  %3 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 2, !dbg !8790
  %4 = load void (i8*)*, void (i8*)** %3, align 4, !dbg !8790
  tail call void %4(i8* noundef %1) #25, !dbg !8791
  ret void, !dbg !8792
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_ztest_run_test_suites(i8* noundef %0) local_unnamed_addr #1 !dbg !8793 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8797, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.value(metadata i32 0, metadata !8798, metadata !DIExpression()), !dbg !8801
  %2 = load i32, i32* @test_status, align 4, !dbg !8802
  %3 = icmp eq i32 %2, 2, !dbg !8804
  br i1 %3, label %17, label %4, !dbg !8805

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8799, metadata !DIExpression()), !dbg !8806
  call void @llvm.dbg.value(metadata i32 0, metadata !8798, metadata !DIExpression()), !dbg !8801
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %5, label %15, !dbg !8807

5:                                                ; preds = %4, %5
  %6 = phi %struct.ztest_suite_node* [ %12, %5 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %4 ]
  %7 = phi i32 [ %9, %5 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %6, metadata !8799, metadata !DIExpression()), !dbg !8806
  call void @llvm.dbg.value(metadata i32 %7, metadata !8798, metadata !DIExpression()), !dbg !8801
  %8 = tail call fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef nonnull %6, i8* noundef %0) #24, !dbg !8808
  %9 = add nsw i32 %8, %7, !dbg !8811
  call void @llvm.dbg.value(metadata i32 %9, metadata !8798, metadata !DIExpression()), !dbg !8801
  %10 = load i32, i32* @test_status, align 4, !dbg !8812
  %11 = icmp ne i32 %10, 2, !dbg !8814
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %6, i32 1, !dbg !8815
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8799, metadata !DIExpression()), !dbg !8806
  %13 = icmp ult %struct.ztest_suite_node* %12, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)
  %14 = select i1 %11, i1 %13, i1 false, !dbg !8816
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8799, metadata !DIExpression()), !dbg !8806
  call void @llvm.dbg.value(metadata i32 %9, metadata !8798, metadata !DIExpression()), !dbg !8801
  br i1 %14, label %5, label %15, !dbg !8816, !llvm.loop !8817

15:                                               ; preds = %5, %4
  %16 = phi i32 [ 0, %4 ], [ %9, %5 ], !dbg !8801
  call void @llvm.dbg.value(metadata i32 %16, metadata !8798, metadata !DIExpression()), !dbg !8801
  tail call fastcc void @__ztest_show_suite_summary() #24, !dbg !8819
  br label %17, !dbg !8820

17:                                               ; preds = %1, %15
  %18 = phi i32 [ %16, %15 ], [ 0, %1 ], !dbg !8801
  ret i32 %18, !dbg !8821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8822 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8826, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i8* %1, metadata !8827, metadata !DIExpression()), !dbg !8837
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 6, !dbg !8838
  %4 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %3, align 4, !dbg !8838
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %4, metadata !8828, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i32 0, metadata !8829, metadata !DIExpression()), !dbg !8837
  tail call fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* noundef %0) #24, !dbg !8839
  call void @llvm.dbg.value(metadata i32 0, metadata !8830, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i32 0, metadata !8829, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i32 undef, metadata !8830, metadata !DIExpression()), !dbg !8840
  %5 = load i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, %struct.ztest_suite_node*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 1), align 4
  %6 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8829, metadata !DIExpression()), !dbg !8837
  %8 = tail call zeroext i1 %5(i8* noundef %1, %struct.ztest_suite_node* noundef %0) #25, !dbg !8841
  br i1 %8, label %9, label %16, !dbg !8842

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 2
  %11 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef nonnull %0) #24, !dbg !8843
  call void @llvm.dbg.value(metadata i32 %11, metadata !8832, metadata !DIExpression()), !dbg !8844
  call void @llvm.dbg.value(metadata i32 1, metadata !8829, metadata !DIExpression()), !dbg !8837
  %12 = load i32, i32* %7, align 4, !dbg !8845
  %13 = add i32 %12, 1, !dbg !8845
  store i32 %13, i32* %7, align 4, !dbg !8845
  %14 = icmp ne i32 %11, 0, !dbg !8846
  %15 = zext i1 %14 to i32, !dbg !8847
  br label %16, !dbg !8848

16:                                               ; preds = %2, %9
  %17 = phi i32* [ %10, %9 ], [ %6, %2 ]
  %18 = phi i32 [ %15, %9 ], [ 1, %2 ]
  %19 = phi i32 [ 1, %9 ], [ 0, %2 ], !dbg !8837
  %20 = load i32, i32* %17, align 4, !dbg !8849
  %21 = add i32 %20, %18, !dbg !8849
  store i32 %21, i32* %17, align 4, !dbg !8849
  call void @llvm.dbg.value(metadata i32 %19, metadata !8829, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i32 undef, metadata !8830, metadata !DIExpression()), !dbg !8840
  ret i32 %19, !dbg !8850
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary() unnamed_addr #1 !dbg !8851 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28.115, i32 0, i32 0)) #25, !dbg !8855
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8853, metadata !DIExpression()), !dbg !8856
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %1, !dbg !8857

1:                                                ; preds = %2, %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.116, i32 0, i32 0)) #25, !dbg !8858
  ret void, !dbg !8859

2:                                                ; preds = %0, %2
  %3 = phi %struct.ztest_suite_node* [ %4, %2 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8853, metadata !DIExpression()), !dbg !8856
  tail call fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* noundef nonnull %3) #24, !dbg !8860
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8863
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8853, metadata !DIExpression()), !dbg !8856
  %5 = icmp ult %struct.ztest_suite_node* %4, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8864
  br i1 %5, label %2, label %1, !dbg !8857, !llvm.loop !8865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8867 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8871, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8872, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8873, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8874, metadata !DIExpression()), !dbg !8875
  tail call fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* noundef %0) #24, !dbg !8876
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 poison, metadata !8874, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8872, metadata !DIExpression()), !dbg !8875
  %3 = load i8*, i8** %2, align 4, !dbg !8877
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8878
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8872, metadata !DIExpression()), !dbg !8875
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8879
  br i1 %5, label %36, label %6, !dbg !8880

6:                                                ; preds = %1, %20
  %7 = phi %struct.ztest_unit_test* [ %34, %20 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8881
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8881
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 1, !dbg !8884
  %11 = load i32, i32* %10, align 4, !dbg !8884
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8885
  %13 = load i32, i32* %12, align 4, !dbg !8885
  %14 = icmp eq i32 %11, %13, !dbg !8886
  br i1 %14, label %20, label %15, !dbg !8887

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 3, !dbg !8888
  %17 = load i32, i32* %16, align 4, !dbg !8888
  %18 = icmp ne i32 %17, %13, !dbg !8890
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %15, %6
  %21 = phi i32 [ 2, %6 ], [ %19, %15 ], !dbg !8891
  call void @llvm.dbg.value(metadata i32 %21, metadata !8873, metadata !DIExpression()), !dbg !8875
  %22 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %21) #24, !dbg !8892
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 0, !dbg !8892
  %24 = load i8*, i8** %23, align 4, !dbg !8892
  %25 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 1, !dbg !8892
  %26 = load i8*, i8** %25, align 4, !dbg !8892
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 4, !dbg !8892
  %28 = load i32, i32* %27, align 4, !dbg !8892
  %29 = freeze i32 %28
  %30 = udiv i32 %29, 1000, !dbg !8892
  %31 = mul i32 %30, 1000
  %32 = sub i32 %29, %31
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.117, i32 0, i32 0), i8* noundef %22, i8* noundef %24, i8* noundef %26, i32 noundef %30, i32 noundef %32) #25, !dbg !8892
  call void @llvm.dbg.value(metadata i32 poison, metadata !8874, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8872, metadata !DIExpression()), !dbg !8875
  %33 = load i8*, i8** %2, align 4, !dbg !8877
  %34 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %33, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8878
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %34, metadata !8872, metadata !DIExpression()), !dbg !8875
  %35 = icmp eq %struct.ztest_unit_test* %34, null, !dbg !8879
  br i1 %35, label %36, label %6, !dbg !8880, !llvm.loop !8893

36:                                               ; preds = %20, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.118, i32 0, i32 0)) #25, !dbg !8895
  ret void, !dbg !8896
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8897 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8899, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8900, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8901, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8902, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8903, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8904, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8905, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8906, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8907, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8908, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8909, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8910, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8911, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8912, metadata !DIExpression()), !dbg !8913
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8912, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8911, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8903, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8902, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8901, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8900, metadata !DIExpression()), !dbg !8913
  %3 = load i8*, i8** %2, align 4, !dbg !8914
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8915
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8911, metadata !DIExpression()), !dbg !8913
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8916
  br i1 %5, label %58, label %6, !dbg !8917

6:                                                ; preds = %1, %34
  %7 = phi %struct.ztest_unit_test* [ %39, %34 ], [ %4, %1 ]
  %8 = phi i32 [ %18, %34 ], [ 0, %1 ]
  %9 = phi i32 [ %13, %34 ], [ 0, %1 ]
  %10 = phi i32 [ %37, %34 ], [ 0, %1 ]
  %11 = phi i32 [ %36, %34 ], [ 0, %1 ]
  %12 = phi i32 [ %35, %34 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8912, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 %9, metadata !8903, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 %10, metadata !8902, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 %11, metadata !8901, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 %12, metadata !8900, metadata !DIExpression()), !dbg !8913
  %13 = add nuw nsw i32 %9, 1, !dbg !8918
  call void @llvm.dbg.value(metadata i32 %13, metadata !8903, metadata !DIExpression()), !dbg !8913
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8920
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %14, align 4, !dbg !8920
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 4, !dbg !8921
  %17 = load i32, i32* %16, align 4, !dbg !8921
  %18 = add i32 %17, %8, !dbg !8922
  call void @llvm.dbg.value(metadata i32 %18, metadata !8912, metadata !DIExpression()), !dbg !8913
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 1, !dbg !8923
  %20 = load i32, i32* %19, align 4, !dbg !8923
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 0, !dbg !8925
  %22 = load i32, i32* %21, align 4, !dbg !8925
  %23 = icmp eq i32 %20, %22, !dbg !8926
  br i1 %23, label %24, label %26, !dbg !8927

24:                                               ; preds = %6
  %25 = add nsw i32 %10, 1, !dbg !8928
  call void @llvm.dbg.value(metadata i32 %25, metadata !8902, metadata !DIExpression()), !dbg !8913
  br label %34, !dbg !8930

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8931
  %28 = load i32, i32* %27, align 4, !dbg !8931
  %29 = icmp eq i32 %28, %22, !dbg !8933
  br i1 %29, label %30, label %32, !dbg !8934

30:                                               ; preds = %26
  %31 = add nsw i32 %12, 1, !dbg !8935
  call void @llvm.dbg.value(metadata i32 %31, metadata !8900, metadata !DIExpression()), !dbg !8913
  br label %34, !dbg !8937

32:                                               ; preds = %26
  %33 = add nsw i32 %11, 1, !dbg !8938
  call void @llvm.dbg.value(metadata i32 %33, metadata !8901, metadata !DIExpression()), !dbg !8913
  br label %34

34:                                               ; preds = %30, %32, %24
  %35 = phi i32 [ %12, %24 ], [ %31, %30 ], [ %12, %32 ], !dbg !8913
  %36 = phi i32 [ %11, %24 ], [ %11, %30 ], [ %33, %32 ], !dbg !8913
  %37 = phi i32 [ %25, %24 ], [ %10, %30 ], [ %10, %32 ], !dbg !8913
  call void @llvm.dbg.value(metadata i32 %18, metadata !8912, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8911, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 %13, metadata !8903, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 %37, metadata !8902, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 %36, metadata !8901, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 %35, metadata !8900, metadata !DIExpression()), !dbg !8913
  %38 = load i8*, i8** %2, align 4, !dbg !8914
  %39 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %38, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8915
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %39, metadata !8911, metadata !DIExpression()), !dbg !8913
  %40 = icmp eq %struct.ztest_unit_test* %39, null, !dbg !8916
  br i1 %40, label %41, label %6, !dbg !8917, !llvm.loop !8940

41:                                               ; preds = %34
  %42 = icmp eq i32 %13, %37, !dbg !8942
  br i1 %42, label %58, label %43, !dbg !8944

43:                                               ; preds = %41
  %44 = icmp sgt i32 %36, 0, !dbg !8945
  %45 = zext i1 %44 to i32, !dbg !8947
  call void @llvm.dbg.value(metadata i32 %45, metadata !8910, metadata !DIExpression()), !dbg !8913
  %46 = sub nsw i32 %13, %37, !dbg !8948
  call void @llvm.dbg.value(metadata i32 %46, metadata !8904, metadata !DIExpression()), !dbg !8913
  %47 = mul nsw i32 %35, 100000, !dbg !8949
  call void @llvm.dbg.value(metadata i32 %47, metadata !8905, metadata !DIExpression()), !dbg !8913
  %48 = sdiv i32 %47, %46, !dbg !8950
  call void @llvm.dbg.value(metadata i32 %48, metadata !8906, metadata !DIExpression()), !dbg !8913
  %49 = sdiv i32 %48, 1000, !dbg !8951
  call void @llvm.dbg.value(metadata i32 %49, metadata !8907, metadata !DIExpression()), !dbg !8913
  %50 = mul nsw i32 %49, -1000, !dbg !8952
  %51 = add i32 %50, %48, !dbg !8953
  %52 = sdiv i32 %51, 10, !dbg !8954
  call void @llvm.dbg.value(metadata i32 %52, metadata !8908, metadata !DIExpression()), !dbg !8913
  %53 = mul nsw i32 %52, -10, !dbg !8955
  %54 = add i32 %53, %51, !dbg !8956
  call void @llvm.dbg.value(metadata i32 %54, metadata !8909, metadata !DIExpression()), !dbg !8913
  %55 = icmp sgt i32 %54, 4, !dbg !8957
  %56 = zext i1 %55 to i32, !dbg !8959
  %57 = add nsw i32 %52, %56, !dbg !8959
  br label %58, !dbg !8959

58:                                               ; preds = %1, %43, %41
  %59 = phi i32 [ %18, %41 ], [ %18, %43 ], [ 0, %1 ]
  %60 = phi i32 [ %13, %41 ], [ %13, %43 ], [ 0, %1 ]
  %61 = phi i32 [ %37, %41 ], [ %37, %43 ], [ 0, %1 ]
  %62 = phi i32 [ %36, %41 ], [ %36, %43 ], [ 0, %1 ]
  %63 = phi i32 [ %35, %41 ], [ %35, %43 ], [ 0, %1 ]
  %64 = phi i32 [ 0, %41 ], [ %49, %43 ], [ 0, %1 ], !dbg !8960
  %65 = phi i32 [ 0, %41 ], [ %57, %43 ], [ 0, %1 ], !dbg !8960
  %66 = phi i32 [ 2, %41 ], [ %45, %43 ], [ 2, %1 ], !dbg !8960
  call void @llvm.dbg.value(metadata i32 %66, metadata !8910, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 %65, metadata !8908, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 %64, metadata !8907, metadata !DIExpression()), !dbg !8913
  %67 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %66) #24, !dbg !8961
  %68 = load i8*, i8** %2, align 4, !dbg !8961
  %69 = freeze i32 %59
  %70 = udiv i32 %69, 1000, !dbg !8961
  %71 = mul i32 %70, 1000
  %72 = sub i32 %69, %71
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.32.119, i32 0, i32 0), i8* noundef %67, i32 noundef %64, i32 noundef %65, i8* noundef %68, i32 noundef %63, i32 noundef %62, i32 noundef %61, i32 noundef %60, i32 noundef %70, i32 noundef %72) #25, !dbg !8961
  ret void, !dbg !8962
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8963 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8965, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8966, metadata !DIExpression()), !dbg !8967
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8966, metadata !DIExpression()), !dbg !8967
  %3 = load i8*, i8** %2, align 4, !dbg !8968
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8969
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8966, metadata !DIExpression()), !dbg !8967
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8970
  br i1 %5, label %22, label %6, !dbg !8971

6:                                                ; preds = %1, %6
  %7 = phi %struct.ztest_unit_test* [ %20, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8972
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8972
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8974
  store i32 0, i32* %10, align 4, !dbg !8975
  %11 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8976
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %11, i32 0, i32 1, !dbg !8977
  store i32 0, i32* %12, align 4, !dbg !8978
  %13 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8979
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %13, i32 0, i32 2, !dbg !8980
  store i32 0, i32* %14, align 4, !dbg !8981
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8982
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8983
  store i32 0, i32* %16, align 4, !dbg !8984
  %17 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8985
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %17, i32 0, i32 4, !dbg !8986
  store i32 0, i32* %18, align 4, !dbg !8987
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8966, metadata !DIExpression()), !dbg !8967
  %19 = load i8*, i8** %2, align 4, !dbg !8968
  %20 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %19, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8969
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %20, metadata !8966, metadata !DIExpression()), !dbg !8967
  %21 = icmp eq %struct.ztest_unit_test* %20, null, !dbg !8970
  br i1 %21, label %22, label %6, !dbg !8971, !llvm.loop !8988

22:                                               ; preds = %6, %1
  ret void, !dbg !8990
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_verify_all_test_suites_ran() local_unnamed_addr #1 !dbg !8991 {
  call void @llvm.dbg.value(metadata i8 1, metadata !8993, metadata !DIExpression()), !dbg !8996
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8994, metadata !DIExpression()), !dbg !8996
  call void @llvm.dbg.value(metadata i8 poison, metadata !8993, metadata !DIExpression()), !dbg !8996
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %3, label %1, !dbg !8997

1:                                                ; preds = %14, %0
  %2 = phi i1 [ true, %0 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !8995, metadata !DIExpression()), !dbg !8996
  call void @llvm.dbg.value(metadata i8 poison, metadata !8993, metadata !DIExpression()), !dbg !8996
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %18, label %33, !dbg !9001

3:                                                ; preds = %0, %14
  %4 = phi %struct.ztest_suite_node* [ %16, %14 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  %5 = phi i1 [ %15, %14 ], [ true, %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8994, metadata !DIExpression()), !dbg !8996
  %6 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 6, !dbg !9003
  %7 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %6, align 4, !dbg !9003
  %8 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %7, i32 0, i32 0, !dbg !9007
  %9 = load i32, i32* %8, align 4, !dbg !9007
  %10 = icmp eq i32 %9, 0, !dbg !9008
  br i1 %10, label %11, label %14, !dbg !9009

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 0, !dbg !9010
  %13 = load i8*, i8** %12, align 4, !dbg !9010
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.120, i32 0, i32 0), i8* noundef %13) #25, !dbg !9012
  call void @llvm.dbg.value(metadata i8 0, metadata !8993, metadata !DIExpression()), !dbg !8996
  br label %14, !dbg !9013

14:                                               ; preds = %3, %11
  %15 = phi i1 [ false, %11 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8993, metadata !DIExpression()), !dbg !8996
  %16 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 1, !dbg !9014
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %16, metadata !8994, metadata !DIExpression()), !dbg !8996
  %17 = icmp ult %struct.ztest_suite_node* %16, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !9015
  br i1 %17, label %3, label %1, !dbg !8997, !llvm.loop !9016

18:                                               ; preds = %1, %29
  %19 = phi %struct.ztest_unit_test* [ %31, %29 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %1 ]
  %20 = phi i1 [ %30, %29 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8995, metadata !DIExpression()), !dbg !8996
  %21 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 0, !dbg !9018
  %22 = load i8*, i8** %21, align 4, !dbg !9018
  %23 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %22) #24, !dbg !9021
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %23, metadata !8994, metadata !DIExpression()), !dbg !8996
  %24 = icmp eq %struct.ztest_suite_node* %23, null, !dbg !9022
  br i1 %24, label %25, label %29, !dbg !9024

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !9025
  %27 = load i8*, i8** %26, align 4, !dbg !9025
  %28 = load i8*, i8** %21, align 4, !dbg !9027
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8.121, i32 0, i32 0), i8* noundef %27, i8* noundef %28) #25, !dbg !9028
  call void @llvm.dbg.value(metadata i8 0, metadata !8993, metadata !DIExpression()), !dbg !8996
  br label %29, !dbg !9029

29:                                               ; preds = %18, %25
  %30 = phi i1 [ false, %25 ], [ %20, %18 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8993, metadata !DIExpression()), !dbg !8996
  %31 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 1, !dbg !9030
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %31, metadata !8995, metadata !DIExpression()), !dbg !8996
  %32 = icmp ult %struct.ztest_unit_test* %31, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9031
  br i1 %32, label %18, label %33, !dbg !9001, !llvm.loop !9032

33:                                               ; preds = %29, %1
  %34 = phi i1 [ %2, %1 ], [ %30, %29 ]
  br i1 %34, label %36, label %35, !dbg !9034

35:                                               ; preds = %33
  store i32 1, i32* @test_status, align 4, !dbg !9035
  br label %36, !dbg !9038

36:                                               ; preds = %35, %33
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !8995, metadata !DIExpression()), !dbg !8996
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %37, label %60, !dbg !9039

37:                                               ; preds = %36, %57
  %38 = phi %struct.ztest_unit_test* [ %58, %57 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %36 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %38, metadata !8995, metadata !DIExpression()), !dbg !8996
  %39 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 4, !dbg !9041
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %39, align 4, !dbg !9041
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !9045
  %42 = load i32, i32* %41, align 4, !dbg !9045
  %43 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 3, !dbg !9046
  %44 = load i32, i32* %43, align 4, !dbg !9046
  %45 = add i32 %44, %42, !dbg !9047
  %46 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 1, !dbg !9048
  %47 = load i32, i32* %46, align 4, !dbg !9048
  %48 = add i32 %45, %47, !dbg !9049
  %49 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 0, !dbg !9050
  %50 = load i32, i32* %49, align 4, !dbg !9050
  %51 = icmp eq i32 %48, %50, !dbg !9051
  br i1 %51, label %57, label %52, !dbg !9052

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 0, !dbg !9053
  %54 = load i8*, i8** %53, align 4, !dbg !9053
  %55 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 1, !dbg !9055
  %56 = load i8*, i8** %55, align 4, !dbg !9055
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.122, i32 0, i32 0), i8* noundef %54, i8* noundef %56) #25, !dbg !9056
  store i32 1, i32* @test_status, align 4, !dbg !9057
  br label %57, !dbg !9058

57:                                               ; preds = %37, %52
  %58 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 1, !dbg !9059
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %58, metadata !8995, metadata !DIExpression()), !dbg !8996
  %59 = icmp ult %struct.ztest_unit_test* %58, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9060
  br i1 %59, label %37, label %60, !dbg !9039, !llvm.loop !9061

60:                                               ; preds = %57, %36
  ret void, !dbg !9063
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_run_all(i8* noundef %0) local_unnamed_addr #1 !dbg !9064 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9066, metadata !DIExpression()), !dbg !9067
  %2 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 0), align 4, !dbg !9068
  tail call void %2(i8* noundef %0) #25, !dbg !9069
  ret void, !dbg !9070
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @test_main() local_unnamed_addr #1 !dbg !9071 {
  tail call void @ztest_run_all(i8* noundef null) #24, !dbg !9072
  tail call void @ztest_verify_all_test_suites_ran() #24, !dbg !9073
  ret void, !dbg !9074
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !9075 {
  tail call void @test_main() #24, !dbg !9076
  tail call void @end_report() #24, !dbg !9077
  ret void, !dbg !9078
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ztest_run_all(i8* noundef %0) #1 !dbg !9079 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9081, metadata !DIExpression()), !dbg !9082
  tail call fastcc void @ztest_run_test_suites(i8* noundef %0) #24, !dbg !9083
  ret void, !dbg !9084
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_ztest_should_suite_run(i8* noundef %0, %struct.ztest_suite_node* nocapture noundef readonly %1) #1 !dbg !9085 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9087, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %1, metadata !9088, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata i8 1, metadata !9089, metadata !DIExpression()), !dbg !9090
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %1, i32 0, i32 5, !dbg !9091
  %4 = load i1 (i8*)*, i1 (i8*)** %3, align 4, !dbg !9091
  %5 = icmp eq i1 (i8*)* %4, null, !dbg !9093
  br i1 %5, label %8, label %6, !dbg !9094

6:                                                ; preds = %2
  %7 = tail call zeroext i1 %4(i8* noundef %0) #25, !dbg !9095
  call void @llvm.dbg.value(metadata i1 %7, metadata !9089, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9090
  br label %8, !dbg !9097

8:                                                ; preds = %6, %2
  %9 = phi i1 [ %7, %6 ], [ true, %2 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9089, metadata !DIExpression()), !dbg !9090
  ret i1 %9, !dbg !9098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @z_ztest_should_test_run(i8* nocapture readnone %0, i8* nocapture readnone %1) #4 !dbg !9099 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9101, metadata !DIExpression()), !dbg !9103
  call void @llvm.dbg.value(metadata i8* undef, metadata !9102, metadata !DIExpression()), !dbg !9103
  ret i1 true, !dbg !9104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ztest_run_test_suites(i8* noundef %0) unnamed_addr #1 !dbg !9105 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9108, metadata !DIExpression()), !dbg !9109
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9110, !srcloc !9112
  %2 = tail call i32 @z_impl_ztest_run_test_suites(i8* noundef %0) #25, !dbg !9113
  ret void, !dbg !9114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @ztest_relative_filename(i8* noundef readnone returned %0) local_unnamed_addr #4 !dbg !9115 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9119, metadata !DIExpression()), !dbg !9120
  ret i8* %0, !dbg !9121
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9122 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9124, metadata !DIExpression()), !dbg !9125
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9126
  ret void, !dbg !9127
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9132, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %1, metadata !9133, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9134, metadata !DIExpression()), !dbg !9138
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9139
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9139
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9139
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9135, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %0, metadata !9137, metadata !DIExpression()), !dbg !9138
  %7 = icmp slt i32 %0, %1, !dbg !9140
  br i1 %7, label %8, label %22, !dbg !9143

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9137, metadata !DIExpression()), !dbg !9138
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9144
  %11 = icmp eq i32 %10, 0, !dbg !9144
  br i1 %11, label %19, label %12, !dbg !9147

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9148
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9150
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9150
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9152
  br i1 %15, label %19, label %16, !dbg !9153

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9154
  %18 = load i8*, i8** %17, align 4, !dbg !9154
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9155
  br label %19, !dbg !9156

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9157
  call void @llvm.dbg.value(metadata i32 %20, metadata !9137, metadata !DIExpression()), !dbg !9138
  %21 = icmp eq i32 %20, %1, !dbg !9140
  br i1 %21, label %22, label %8, !dbg !9143, !llvm.loop !9158

22:                                               ; preds = %19, %3
  ret void, !dbg !9160
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !9161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9163, metadata !DIExpression()), !dbg !9164
  %2 = shl nuw i32 1, %0, !dbg !9165
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9168
  ret i32 %3, !dbg !9169
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !9170 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9174, metadata !DIExpression()), !dbg !9175
  %2 = shl nuw i32 1, %0, !dbg !9176
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9179
  ret void, !dbg !9180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9181 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9184, metadata !DIExpression()), !dbg !9185
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9186
  ret void, !dbg !9187
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9190, metadata !DIExpression()), !dbg !9191
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9192
  %3 = and i32 %2, %0, !dbg !9192
  %4 = icmp eq i32 %3, %0, !dbg !9193
  %5 = zext i1 %4 to i32, !dbg !9193
  ret i32 %5, !dbg !9194
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9195 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9197, metadata !DIExpression()), !dbg !9198
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9199
  ret void, !dbg !9200
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9201 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9203, metadata !DIExpression()), !dbg !9204
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9205
  ret void, !dbg !9206
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9207 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9209, metadata !DIExpression()), !dbg !9210
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9211
  ret void, !dbg !9212
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9213 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9215, metadata !DIExpression()), !dbg !9216
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9217
  ret void, !dbg !9218
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9219 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9221, metadata !DIExpression()), !dbg !9222
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9223
  ret void, !dbg !9224
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9225 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9227, metadata !DIExpression()), !dbg !9228
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9229
  ret void, !dbg !9230
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9231 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9233, metadata !DIExpression()), !dbg !9234
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9235
  ret void, !dbg !9236
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9237 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9239, metadata !DIExpression()), !dbg !9240
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9241
  ret void, !dbg !9242
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9243 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9245, metadata !DIExpression()), !dbg !9246
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9247
  ret void, !dbg !9248
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9249 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9251, metadata !DIExpression()), !dbg !9252
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9253
  ret void, !dbg !9254
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9255 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9257, metadata !DIExpression()), !dbg !9258
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9259
  ret i32 0, !dbg !9260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !887 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !891, metadata !DIExpression()), !dbg !9261
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9262
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9264
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9266
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9268
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9270
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9272
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9274
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9276
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9278
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9280
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9282
  ret void, !dbg !9284
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9287, metadata !DIExpression()), !dbg !9289
  call void @llvm.dbg.value(metadata i32 0, metadata !9288, metadata !DIExpression()), !dbg !9289
  call void @llvm.dbg.value(metadata i32 undef, metadata !9288, metadata !DIExpression()), !dbg !9289
  %2 = lshr i32 6684671, %0, !dbg !9290
  %3 = and i32 %2, 1, !dbg !9290
  %4 = or i32 %3, %0, !dbg !9292
  %5 = icmp eq i32 %4, 0, !dbg !9292
  br i1 %5, label %6, label %7, !dbg !9292

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9293
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9293
  unreachable, !dbg !9293

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9298
  %9 = load i32, i32* %8, align 4, !dbg !9298
  call void @llvm.dbg.value(metadata i32 %9, metadata !9288, metadata !DIExpression()), !dbg !9289
  %10 = shl nuw i32 1, %0, !dbg !9299
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !9300
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !9301
  ret void, !dbg !9302
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9305, metadata !DIExpression()), !dbg !9306
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9307
  %3 = or i32 %2, %0, !dbg !9307
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9307
  ret void, !dbg !9308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !9309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9311, metadata !DIExpression()), !dbg !9312
  %2 = icmp slt i32 %0, 32, !dbg !9313
  br i1 %2, label %3, label %5, !dbg !9315

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9316
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9318
  br label %5, !dbg !9319

5:                                                ; preds = %1, %3
  ret void, !dbg !9320
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9323, metadata !DIExpression()), !dbg !9324
  %2 = xor i32 %0, -1, !dbg !9325
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9325
  %4 = and i32 %3, %2, !dbg !9325
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9325
  ret void, !dbg !9326
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !9327 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9331, metadata !DIExpression()), !dbg !9333
  call void @llvm.dbg.value(metadata i32 %1, metadata !9332, metadata !DIExpression()), !dbg !9333
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9334

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9335
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9337
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9338
  br label %11, !dbg !9339

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9340
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9341
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9342
  br label %11, !dbg !9343

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9344
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9345
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9346
  br label %11, !dbg !9347

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9348
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9349
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9350
  br label %11, !dbg !9351

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9352
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9353 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9355, metadata !DIExpression()), !dbg !9356
  %2 = xor i32 %0, -1, !dbg !9357
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9357
  %4 = and i32 %3, %2, !dbg !9357
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9357
  ret void, !dbg !9358
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9361, metadata !DIExpression()), !dbg !9362
  %2 = xor i32 %0, -1, !dbg !9363
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9363
  %4 = and i32 %3, %2, !dbg !9363
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9363
  ret void, !dbg !9364
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9367, metadata !DIExpression()), !dbg !9368
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9369
  %3 = or i32 %2, %0, !dbg !9369
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9369
  ret void, !dbg !9370
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9373, metadata !DIExpression()), !dbg !9374
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9375
  %3 = or i32 %2, %0, !dbg !9375
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9375
  ret void, !dbg !9376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9381, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9382, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.value(metadata i8* %2, metadata !9383, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !9384, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9386, metadata !DIExpression()), !dbg !9387
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9388
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9388
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9390
  br i1 %6, label %7, label %9, !dbg !9391

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9392
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9393
  store i8* %2, i8** %8, align 4, !dbg !9394
  br label %9, !dbg !9395

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9387
  ret i32 %10, !dbg !9396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !9397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9399, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !9400, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9401, metadata !DIExpression()), !dbg !9402
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9403
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9404
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9405
  store i8* null, i8** %3, align 4, !dbg !9406
  ret void, !dbg !9407
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9408 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9410, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata i8* %1, metadata !9411, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata i8* %1, metadata !9412, metadata !DIExpression()), !dbg !9415
  %3 = bitcast i8* %1 to i32*, !dbg !9416
  %4 = load i32, i32* %3, align 4, !dbg !9416
  %5 = add i32 %4, -169, !dbg !9416
  %6 = icmp ult i32 %5, -121, !dbg !9416
  br i1 %6, label %15, label %7, !dbg !9418

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9419
  %9 = inttoptr i32 %8 to i32*, !dbg !9420
  call void @llvm.dbg.value(metadata i32* %9, metadata !9413, metadata !DIExpression()), !dbg !9415
  %10 = load volatile i32, i32* %9, align 4, !dbg !9421
  call void @llvm.dbg.value(metadata i32 %10, metadata !9414, metadata !DIExpression()), !dbg !9415
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9422
  %12 = bitcast i8* %11 to i32*, !dbg !9422
  %13 = load i32, i32* %12, align 4, !dbg !9422
  %14 = or i32 %13, %10, !dbg !9423
  call void @llvm.dbg.value(metadata i32 %14, metadata !9414, metadata !DIExpression()), !dbg !9415
  store volatile i32 %14, i32* %9, align 4, !dbg !9424
  br label %15, !dbg !9425

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9415
  ret i32 %16, !dbg !9426
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9427 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9429, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.value(metadata i8* %1, metadata !9430, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.value(metadata i8* %1, metadata !9431, metadata !DIExpression()), !dbg !9434
  %3 = bitcast i8* %1 to i32*, !dbg !9435
  %4 = load i32, i32* %3, align 4, !dbg !9435
  %5 = add i32 %4, -169, !dbg !9435
  %6 = icmp ult i32 %5, -121, !dbg !9435
  br i1 %6, label %16, label %7, !dbg !9437

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9438
  %9 = inttoptr i32 %8 to i32*, !dbg !9439
  call void @llvm.dbg.value(metadata i32* %9, metadata !9432, metadata !DIExpression()), !dbg !9434
  %10 = load volatile i32, i32* %9, align 4, !dbg !9440
  call void @llvm.dbg.value(metadata i32 %10, metadata !9433, metadata !DIExpression()), !dbg !9434
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9441
  %12 = bitcast i8* %11 to i32*, !dbg !9441
  %13 = load i32, i32* %12, align 4, !dbg !9441
  %14 = xor i32 %13, -1, !dbg !9442
  %15 = and i32 %10, %14, !dbg !9443
  call void @llvm.dbg.value(metadata i32 %15, metadata !9433, metadata !DIExpression()), !dbg !9434
  store volatile i32 %15, i32* %9, align 4, !dbg !9444
  br label %16, !dbg !9445

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9434
  ret i32 %17, !dbg !9446
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9447 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9449, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.value(metadata i8* %1, metadata !9450, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.value(metadata i32* %2, metadata !9451, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.value(metadata i8* %1, metadata !9452, metadata !DIExpression()), !dbg !9457
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9458
  call void @llvm.dbg.value(metadata i32 %4, metadata !9453, metadata !DIExpression()), !dbg !9457
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #24, !dbg !9459
  call void @llvm.dbg.value(metadata i32 %5, metadata !9454, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.value(metadata i32 %5, metadata !9455, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.value(metadata i32 %4, metadata !9456, metadata !DIExpression()), !dbg !9457
  %6 = bitcast i8* %1 to i32*, !dbg !9460
  %7 = load i32, i32* %6, align 4, !dbg !9460
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !9461

8:                                                ; preds = %3
  br label %18, !dbg !9462

9:                                                ; preds = %3
  br label %18, !dbg !9464

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9465
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #24, !dbg !9466
  br label %18, !dbg !9467

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9468
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #24, !dbg !9469
  br label %18, !dbg !9470

16:                                               ; preds = %3
  br label %18, !dbg !9471

17:                                               ; preds = %3
  br label %18, !dbg !9472

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !9473
  br label %20, !dbg !9474

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !9457
  ret i32 %21, !dbg !9474
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !9475 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9477, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.value(metadata i8* %1, metadata !9478, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.value(metadata i8* %2, metadata !9479, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.value(metadata i8* %1, metadata !9480, metadata !DIExpression()), !dbg !9485
  %4 = bitcast i8* %1 to i32*, !dbg !9486
  %5 = load i32, i32* %4, align 4, !dbg !9486
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9487
  call void @llvm.dbg.value(metadata i32 %6, metadata !9484, metadata !DIExpression()), !dbg !9485
  %7 = icmp slt i32 %6, 0, !dbg !9488
  br i1 %7, label %22, label %8, !dbg !9490

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9480, metadata !DIExpression()), !dbg !9485
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9491
  %10 = bitcast i8* %9 to i32*, !dbg !9491
  %11 = load i32, i32* %10, align 4, !dbg !9491
  %12 = lshr i32 %11, 16, !dbg !9491
  %13 = and i32 %12, 7, !dbg !9491
  %14 = lshr i32 %11, 8, !dbg !9492
  %15 = and i32 %14, 31, !dbg !9492
  %16 = shl i32 %13, %15, !dbg !9493
  call void @llvm.dbg.value(metadata i32 %16, metadata !9483, metadata !DIExpression()), !dbg !9485
  %17 = and i32 %11, 255, !dbg !9494
  %18 = or i32 %17, 1073887232, !dbg !9495
  %19 = inttoptr i32 %18 to i32*, !dbg !9496
  call void @llvm.dbg.value(metadata i32* %19, metadata !9481, metadata !DIExpression()), !dbg !9485
  %20 = load volatile i32, i32* %19, align 4, !dbg !9497
  call void @llvm.dbg.value(metadata i32 %20, metadata !9482, metadata !DIExpression()), !dbg !9485
  %21 = or i32 %16, %20, !dbg !9498
  call void @llvm.dbg.value(metadata i32 %21, metadata !9482, metadata !DIExpression()), !dbg !9485
  store volatile i32 %21, i32* %19, align 4, !dbg !9499
  br label %22, !dbg !9500

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9485
  ret i32 %23, !dbg !9501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !9502 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9506, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.value(metadata i32 0, metadata !9507, metadata !DIExpression()), !dbg !9508
  %2 = add i32 %0, -1, !dbg !9509
  %3 = icmp ult i32 %2, 6, !dbg !9509
  br i1 %3, label %4, label %7, !dbg !9509

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9509
  %6 = load i32, i32* %5, align 4, !dbg !9509
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()), !dbg !9508
  br label %7, !dbg !9510

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9508
  ret i32 %8, !dbg !9511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #4 !dbg !9512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9516, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.value(metadata i32 2, metadata !9517, metadata !DIExpression()), !dbg !9518
  %2 = lshr i32 %0, 1, !dbg !9519
  ret i32 %2, !dbg !9520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9525, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 8, metadata !9526, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 84, metadata !9527, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 %1, metadata !9528, metadata !DIExpression()), !dbg !9529
  %3 = mul i32 %0, 84, !dbg !9530
  %4 = shl nsw i32 %1, 3, !dbg !9531
  %5 = udiv i32 %3, %4, !dbg !9532
  ret i32 %5, !dbg !9533
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9534 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9536, metadata !DIExpression()), !dbg !9539
  tail call void @config_enable_default_clocks() #25, !dbg !9540
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9541
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !9541
  %4 = lshr i32 %3, 4, !dbg !9541
  %5 = and i32 %4, 15, !dbg !9541
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9541
  %7 = load i8, i8* %6, align 1, !dbg !9541
  %8 = zext i8 %7 to i32, !dbg !9541
  %9 = lshr i32 %2, %8, !dbg !9541
  call void @llvm.dbg.value(metadata i32 %9, metadata !9537, metadata !DIExpression()), !dbg !9539
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !9538, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9539
  %10 = icmp ult i32 %9, 84000000, !dbg !9542
  br i1 %10, label %11, label %13, !dbg !9544

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9545
  br label %13, !dbg !9547

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !9548
  tail call fastcc void @set_up_plls() #24, !dbg !9549
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9550
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !9553
  br label %14, !dbg !9554

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9555
  %16 = icmp eq i32 %15, 8, !dbg !9556
  br i1 %16, label %17, label %14, !dbg !9554, !llvm.loop !9557

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !9559
  br i1 %18, label %19, label %21, !dbg !9561

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9562
  br label %21, !dbg !9564

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !9565
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !9566
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !9567
  ret i32 0, !dbg !9568
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !9569 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9571
  %2 = and i32 %1, 240, !dbg !9571
  ret i32 %2, !dbg !9572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !9573 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !9574
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !9579
  br label %1, !dbg !9580

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !9581
  %3 = icmp eq i32 %2, 1, !dbg !9582
  br i1 %3, label %4, label %1, !dbg !9580, !llvm.loop !9583

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !9585
  br label %5, !dbg !9588

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !9589
  %7 = icmp eq i32 %6, 1, !dbg !9590
  br i1 %7, label %8, label %5, !dbg !9588, !llvm.loop !9591

8:                                                ; preds = %5
  ret void, !dbg !9593
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9594 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9595
  %2 = icmp eq i32 %1, 8, !dbg !9597
  br i1 %2, label %3, label %4, !dbg !9598

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9599
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !9601
  br label %4, !dbg !9602

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !9603
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9604
  %6 = and i32 %5, -196609, !dbg !9604
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9604
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9605
  %8 = and i32 %7, -251658241, !dbg !9605
  %9 = or i32 %8, 134217728, !dbg !9605
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9605
  tail call void @config_pll_sysclock() #25, !dbg !9606
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !9607
  br label %10, !dbg !9608

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !9609
  %12 = icmp eq i32 %11, 1, !dbg !9610
  br i1 %12, label %13, label %10, !dbg !9608, !llvm.loop !9611

13:                                               ; preds = %10
  ret void, !dbg !9613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !9614 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9616, metadata !DIExpression()), !dbg !9617
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9618
  %2 = and i32 %1, -241, !dbg !9618
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9618
  ret void, !dbg !9619
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !9620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9622, metadata !DIExpression()), !dbg !9623
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9624
  %3 = and i32 %2, -4, !dbg !9624
  %4 = or i32 %3, %0, !dbg !9624
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9624
  ret void, !dbg !9625
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !9626 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9627
  %2 = and i32 %1, 12, !dbg !9627
  ret i32 %2, !dbg !9628
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !9629 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !9631, metadata !DIExpression()), !dbg !9632
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9633
  %2 = and i32 %1, -7169, !dbg !9633
  %3 = or i32 %2, 4096, !dbg !9633
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9633
  ret void, !dbg !9634
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !9635 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !9637, metadata !DIExpression()), !dbg !9638
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9639
  %2 = and i32 %1, -57345, !dbg !9639
  %3 = or i32 %2, 32768, !dbg !9639
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9639
  ret void, !dbg !9640
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !9641 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9642
  %2 = icmp eq i32 %1, 1, !dbg !9644
  br i1 %2, label %7, label %3, !dbg !9645

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9646
  br label %4, !dbg !9648

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9649
  %6 = icmp eq i32 %5, 1, !dbg !9650
  br i1 %6, label %7, label %4, !dbg !9648, !llvm.loop !9651

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !9653
  br label %8, !dbg !9654

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9655
  %10 = icmp eq i32 %9, 0, !dbg !9656
  br i1 %10, label %11, label %8, !dbg !9654, !llvm.loop !9657

11:                                               ; preds = %8
  ret void, !dbg !9659
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !9660 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9661
  %2 = and i32 %1, -16777217, !dbg !9661
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9661
  ret void, !dbg !9662
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !9663 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9664
  %2 = or i32 %1, 16777216, !dbg !9664
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9664
  ret void, !dbg !9665
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !9666 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9667
  %2 = lshr i32 %1, 25, !dbg !9668
  %3 = and i32 %2, 1, !dbg !9668
  ret i32 %3, !dbg !9669
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !9670 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9671
  %2 = lshr i32 %1, 1, !dbg !9672
  %3 = and i32 %2, 1, !dbg !9672
  ret i32 %3, !dbg !9673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !9674 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9675
  %2 = or i32 %1, 1, !dbg !9675
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9675
  ret void, !dbg !9676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !9677 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9678
  %2 = and i32 %1, -262145, !dbg !9678
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9678
  ret void, !dbg !9679
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !9680 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9681
  %2 = or i32 %1, 65536, !dbg !9681
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9681
  ret void, !dbg !9682
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !9683 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9684
  %2 = lshr i32 %1, 17, !dbg !9685
  %3 = and i32 %2, 1, !dbg !9685
  ret i32 %3, !dbg !9686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !9687 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9688
  %2 = or i32 %1, 1, !dbg !9688
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9688
  ret void, !dbg !9689
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !9690 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9691
  %2 = lshr i32 %1, 1, !dbg !9692
  %3 = and i32 %2, 1, !dbg !9692
  ret i32 %3, !dbg !9693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !9694 {
  ret i32 16000000, !dbg !9696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !9700 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !9701
  ret void, !dbg !9702
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !9703 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9707, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 8, metadata !9708, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 84, metadata !9709, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 0, metadata !9710, metadata !DIExpression()), !dbg !9711
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9712
  %2 = and i32 %1, -4227072, !dbg !9712
  %3 = or i32 %2, 4199688, !dbg !9712
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9712
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9713
  %5 = and i32 %4, -196609, !dbg !9713
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9713
  ret void, !dbg !9714
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !9715 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !9716
  ret void, !dbg !9717
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !9718 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9721, metadata !DIExpression()), !dbg !9723
  %2 = bitcast i32* %1 to i8*, !dbg !9724
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9724
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9722, metadata !DIExpression()), !dbg !9725
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9726
  %4 = or i32 %3, 268435456, !dbg !9726
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9726
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9727
  %6 = and i32 %5, 268435456, !dbg !9727
  store volatile i32 %6, i32* %1, align 4, !dbg !9728
  %7 = load volatile i32, i32* %1, align 4, !dbg !9729
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9730
  ret void, !dbg !9730
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9731 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9733, metadata !DIExpression()), !dbg !9734
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !9735
  br i1 %2, label %3, label %4, !dbg !9737

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !9738
  br label %4, !dbg !9739

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9734
  ret i32 %5, !dbg !9740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9741 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9746, metadata !DIExpression()), !dbg !9747
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9748, !srcloc !9750
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !9751
  ret i1 %1, !dbg !9752
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9753 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9754
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9755
  ret void, !dbg !9756
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9759, metadata !DIExpression()), !dbg !9760
  %2 = icmp eq i32 %0, 10, !dbg !9761
  br i1 %2, label %3, label %4, !dbg !9763

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !9764
  br label %4, !dbg !9766

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9767
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !9768
  ret i32 %0, !dbg !9769
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9770 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9773, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i8 %0, metadata !9774, metadata !DIExpression()), !dbg !9775
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9776, !srcloc !9778
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !9779
  ret void, !dbg !9780
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9781 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9783, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.value(metadata i8 %0, metadata !9784, metadata !DIExpression()), !dbg !9786
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9787
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9785, metadata !DIExpression()), !dbg !9786
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9788
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9788
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #25, !dbg !9789
  ret void, !dbg !9790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9791 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9793, metadata !DIExpression()), !dbg !9794
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !9795
  ret i1 %1, !dbg !9796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !9797 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9846, metadata !DIExpression()), !dbg !9849
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9847, metadata !DIExpression()), !dbg !9849
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9848, metadata !DIExpression()), !dbg !9849
  ret void, !dbg !9850
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9851 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9853, metadata !DIExpression()), !dbg !9858
  call void @llvm.dbg.value(metadata i8 %1, metadata !9854, metadata !DIExpression()), !dbg !9858
  call void @llvm.dbg.value(metadata i32 %2, metadata !9855, metadata !DIExpression()), !dbg !9858
  %5 = bitcast i32* %4 to i8*, !dbg !9859
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9859
  call void @llvm.dbg.value(metadata i32* %4, metadata !9857, metadata !DIExpression(DW_OP_deref)), !dbg !9858
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9860
  call void @llvm.dbg.value(metadata i32 %6, metadata !9856, metadata !DIExpression()), !dbg !9858
  %7 = icmp eq i32 %6, 0, !dbg !9861
  br i1 %7, label %8, label %31, !dbg !9863

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9856, metadata !DIExpression()), !dbg !9858
  %9 = and i32 %2, 131072, !dbg !9864
  %10 = icmp eq i32 %9, 0, !dbg !9866
  br i1 %10, label %28, label %11, !dbg !9867

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9868
  %13 = icmp eq i32 %12, 0, !dbg !9871
  br i1 %13, label %18, label %14, !dbg !9872

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9873
  %16 = shl nuw i32 1, %15, !dbg !9873
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9875
  br label %25, !dbg !9876

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9877
  %20 = icmp eq i32 %19, 0, !dbg !9879
  %21 = zext i8 %1 to i32, !dbg !9858
  br i1 %20, label %25, label %22, !dbg !9880

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9881
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9883
  br label %25, !dbg !9884

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9885
  %27 = load i32, i32* %4, align 4, !dbg !9886
  call void @llvm.dbg.value(metadata i32 %30, metadata !9857, metadata !DIExpression()), !dbg !9858
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9887
  br label %31, !dbg !9888

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9885
  %30 = load i32, i32* %4, align 4, !dbg !9886
  call void @llvm.dbg.value(metadata i32 %30, metadata !9857, metadata !DIExpression()), !dbg !9858
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9887
  call void @llvm.dbg.value(metadata i32 0, metadata !9856, metadata !DIExpression()), !dbg !9858
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9889
  ret i32 %6, !dbg !9889
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9890 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9894, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata i32* %1, metadata !9895, metadata !DIExpression()), !dbg !9899
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9900
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9900
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9900
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9896, metadata !DIExpression()), !dbg !9899
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9901
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9901
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9901
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9898, metadata !DIExpression()), !dbg !9899
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9902
  store i32 %9, i32* %1, align 4, !dbg !9903
  ret i32 0, !dbg !9904
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9905 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9907, metadata !DIExpression()), !dbg !9913
  call void @llvm.dbg.value(metadata i32 %1, metadata !9908, metadata !DIExpression()), !dbg !9913
  call void @llvm.dbg.value(metadata i32 %2, metadata !9909, metadata !DIExpression()), !dbg !9913
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9914
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9914
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9914
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9910, metadata !DIExpression()), !dbg !9913
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9915
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9915
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9915
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9911, metadata !DIExpression()), !dbg !9913
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9916
  call void @llvm.dbg.value(metadata i32 %10, metadata !9912, metadata !DIExpression()), !dbg !9913
  %11 = xor i32 %1, -1, !dbg !9917
  %12 = and i32 %10, %11, !dbg !9918
  %13 = and i32 %2, %1, !dbg !9919
  %14 = or i32 %12, %13, !dbg !9920
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9921
  ret i32 0, !dbg !9922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9923 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9925, metadata !DIExpression()), !dbg !9929
  call void @llvm.dbg.value(metadata i32 %1, metadata !9926, metadata !DIExpression()), !dbg !9929
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9930
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9930
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9930
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9927, metadata !DIExpression()), !dbg !9929
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9931
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9931
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9931
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9928, metadata !DIExpression()), !dbg !9929
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9932
  store volatile i32 %1, i32* %9, align 4, !dbg !9932
  ret i32 0, !dbg !9933
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9934 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9936, metadata !DIExpression()), !dbg !9940
  call void @llvm.dbg.value(metadata i32 %1, metadata !9937, metadata !DIExpression()), !dbg !9940
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9941
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9941
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9941
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9938, metadata !DIExpression()), !dbg !9940
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9942
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9942
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9942
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9939, metadata !DIExpression()), !dbg !9940
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9943
  ret i32 0, !dbg !9944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9945 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9947, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata i32 %1, metadata !9948, metadata !DIExpression()), !dbg !9951
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9952
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9952
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9952
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9949, metadata !DIExpression()), !dbg !9951
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9953
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9953
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9953
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9950, metadata !DIExpression()), !dbg !9951
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9954
  %10 = load volatile i32, i32* %9, align 4, !dbg !9954
  %11 = xor i32 %10, %1, !dbg !9954
  store volatile i32 %11, i32* %9, align 4, !dbg !9954
  ret i32 0, !dbg !9955
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9956 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9958, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i8 %1, metadata !9959, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i32 %2, metadata !9960, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i32 %3, metadata !9961, metadata !DIExpression()), !dbg !9968
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9969
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9969
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9969
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9962, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i8* undef, metadata !9963, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i32 0, metadata !9965, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i32 0, metadata !9966, metadata !DIExpression()), !dbg !9968
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9970

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9971
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9975
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9976
  %12 = load i32, i32* %11, align 4, !dbg !9976
  %13 = icmp eq i32 %10, %12, !dbg !9977
  br i1 %13, label %14, label %29, !dbg !9978

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9979
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9981
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9982
  br label %29, !dbg !9983

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9984
  %17 = load i8*, i8** %16, align 4, !dbg !9984
  call void @llvm.dbg.value(metadata i8* %17, metadata !9963, metadata !DIExpression()), !dbg !9968
  %18 = zext i8 %1 to i32, !dbg !9985
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9987
  %20 = icmp eq i32 %19, 0, !dbg !9988
  br i1 %20, label %21, label %29, !dbg !9989

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9990
  %23 = load i32, i32* %22, align 4, !dbg !9990
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9991
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9992

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9965, metadata !DIExpression()), !dbg !9968
  br label %27, !dbg !9993

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9965, metadata !DIExpression()), !dbg !9968
  br label %27, !dbg !9995

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9965, metadata !DIExpression()), !dbg !9968
  br label %27, !dbg !9996

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9968
  call void @llvm.dbg.value(metadata i32 %28, metadata !9965, metadata !DIExpression()), !dbg !9968
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9997
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9998
  br label %29, !dbg !9998

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9968
  call void @llvm.dbg.value(metadata i32 %30, metadata !9966, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.label(metadata !9967), !dbg !9999
  ret i32 %30, !dbg !10000
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !10001 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10003, metadata !DIExpression()), !dbg !10007
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10004, metadata !DIExpression()), !dbg !10007
  call void @llvm.dbg.value(metadata i1 %2, metadata !10005, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10007
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10008
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10008
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10008
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10006, metadata !DIExpression()), !dbg !10007
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10009
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10010
  ret i32 %8, !dbg !10011
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10012 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10018, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10019, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.value(metadata i1 %2, metadata !10020, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10021
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10022
  br i1 %4, label %5, label %6, !dbg !10025

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10026
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.143, i32 0, i32 0)) #25, !dbg !10026
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10026
  unreachable, !dbg !10026

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10028
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10028
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10028
  br i1 %9, label %10, label %11, !dbg !10031

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10032
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.145, i32 0, i32 0)) #25, !dbg !10032
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10032
  unreachable, !dbg !10032

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10034
  br i1 %12, label %18, label %13, !dbg !10036

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10037
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !10040
  %16 = or i1 %15, %2, !dbg !10041
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10041
  br i1 %2, label %19, label %21, !dbg !10041

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10042

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10043
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !10046
  br label %21, !dbg !10047

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10021
  ret i32 %22, !dbg !10048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10049 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10053, metadata !DIExpression()), !dbg !10054
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10055
  %3 = icmp eq %struct._snode* %2, null, !dbg !10055
  ret i1 %3, !dbg !10055
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !10056 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10060, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10061, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10062, metadata !DIExpression()), !dbg !10064
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10065
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10063, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10062, metadata !DIExpression()), !dbg !10064
  %4 = icmp eq %struct._snode* %3, null, !dbg !10067
  br i1 %4, label %15, label %5, !dbg !10065

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10063, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10062, metadata !DIExpression()), !dbg !10064
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10069
  br i1 %6, label %9, label %11, !dbg !10072

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10063, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10062, metadata !DIExpression()), !dbg !10064
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10069
  br i1 %8, label %9, label %11, !dbg !10072, !llvm.loop !10073

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10074
  br label %15, !dbg !10074

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10063, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10062, metadata !DIExpression()), !dbg !10064
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10067
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10063, metadata !DIExpression()), !dbg !10064
  %14 = icmp eq %struct._snode* %13, null, !dbg !10067
  br i1 %14, label %15, label %7, !dbg !10065, !llvm.loop !10073

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10077 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10081, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10082, metadata !DIExpression()), !dbg !10083
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10084
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10084
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10084
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10085
  %5 = icmp eq %struct._snode* %4, null, !dbg !10085
  br i1 %5, label %6, label %8, !dbg !10084

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10087
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10087
  br label %8, !dbg !10087

8:                                                ; preds = %6, %2
  ret void, !dbg !10084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10089 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10093, metadata !DIExpression()), !dbg !10094
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10095
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10095
  ret %struct._snode* %3, !dbg !10096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10097 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10101, metadata !DIExpression()), !dbg !10103
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10102, metadata !DIExpression()), !dbg !10103
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10104
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10105
  ret void, !dbg !10106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10107 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10109, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10110, metadata !DIExpression()), !dbg !10111
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10112
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10113
  ret void, !dbg !10114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10115 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10117, metadata !DIExpression()), !dbg !10118
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10119
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10119
  ret %struct._snode* %3, !dbg !10120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10121 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10123, metadata !DIExpression()), !dbg !10125
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10124, metadata !DIExpression()), !dbg !10125
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10126
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10127
  ret void, !dbg !10128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10129 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10133, metadata !DIExpression()), !dbg !10136
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10134, metadata !DIExpression()), !dbg !10136
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10135, metadata !DIExpression()), !dbg !10136
  %4 = icmp eq %struct._snode* %1, null, !dbg !10137
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10139
  br i1 %4, label %6, label %11, !dbg !10140

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10141
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10143
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10143
  br i1 %8, label %9, label %15, !dbg !10141

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10145
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10145
  br label %15, !dbg !10145

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10147
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10149
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10149
  br i1 %13, label %14, label %15, !dbg !10147

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10151
  br label %15, !dbg !10151

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10140
  ret void, !dbg !10140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !10153 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10157, metadata !DIExpression()), !dbg !10158
  %2 = icmp eq %struct._snode* %0, null, !dbg !10159
  br i1 %2, label %5, label %3, !dbg !10159

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10159
  br label %5, !dbg !10159

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10159
  ret %struct._snode* %6, !dbg !10159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10160 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10162, metadata !DIExpression()), !dbg !10163
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10164
  ret %struct._snode* %2, !dbg !10164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10165 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10167, metadata !DIExpression()), !dbg !10168
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10169
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10169
  ret %struct._snode* %3, !dbg !10170
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10171 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10173, metadata !DIExpression()), !dbg !10176
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10177, !range !10178
  call void @llvm.dbg.value(metadata i32 %2, metadata !10174, metadata !DIExpression()), !dbg !10176
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10179
  call void @llvm.dbg.value(metadata i32 %3, metadata !10175, metadata !DIExpression()), !dbg !10176
  ret i32 %3, !dbg !10180
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10181 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10183, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i8* %1, metadata !10184, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i8* %1, metadata !10185, metadata !DIExpression()), !dbg !10186
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10187
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10187
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10188
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10188
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10188
  %8 = shl nuw i32 1, %0, !dbg !10189
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10190
  ret void, !dbg !10191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10192 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10196, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata i32 %1, metadata !10197, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10198, metadata !DIExpression()), !dbg !10202
  %4 = bitcast i64* %3 to i8*, !dbg !10203
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10203
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10200, metadata !DIExpression()), !dbg !10202
  store i64 70368744177732, i64* %3, align 8, !dbg !10204
  call void @llvm.dbg.value(metadata i64* %3, metadata !10200, metadata !DIExpression(DW_OP_deref)), !dbg !10202
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10205
  call void @llvm.dbg.value(metadata i32 %5, metadata !10201, metadata !DIExpression()), !dbg !10202
  %6 = icmp eq i32 %5, 0, !dbg !10206
  br i1 %6, label %7, label %8, !dbg !10208

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10209
  br label %8, !dbg !10210

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10211
  ret void, !dbg !10211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10212 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10214, metadata !DIExpression()), !dbg !10217
  call void @llvm.dbg.value(metadata i8* %0, metadata !10215, metadata !DIExpression()), !dbg !10217
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10218
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10216, metadata !DIExpression()), !dbg !10217
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10219
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10219
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10220
  ret i32 %5, !dbg !10221
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10224, metadata !DIExpression()), !dbg !10227
  call void @llvm.dbg.value(metadata i32 %1, metadata !10225, metadata !DIExpression()), !dbg !10227
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10228
  call void @llvm.dbg.value(metadata i32 %3, metadata !10226, metadata !DIExpression()), !dbg !10227
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10229
  ret void, !dbg !10230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !10231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10235, metadata !DIExpression()), !dbg !10236
  %2 = sdiv i32 %0, 4, !dbg !10237
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10238
  %6 = add nsw i32 %5, 16, !dbg !10239
  %7 = shl i32 15, %6, !dbg !10240
  %8 = or i32 %7, %2, !dbg !10241
  ret i32 %8, !dbg !10242
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10247, metadata !DIExpression()), !dbg !10249
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()), !dbg !10249
  %3 = and i32 %1, 255, !dbg !10250
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10250
  %5 = load volatile i32, i32* %4, align 4, !dbg !10250
  %6 = lshr i32 %1, 16, !dbg !10250
  %7 = xor i32 %6, -1, !dbg !10250
  %8 = and i32 %5, %7, !dbg !10250
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10255
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10257, !srcloc !10258
  call void @llvm.dbg.value(metadata i32 %9, metadata !10254, metadata !DIExpression()) #23, !dbg !10255
  call void @llvm.dbg.value(metadata i32 %9, metadata !10259, metadata !DIExpression()) #23, !dbg !10264
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10266, !range !7454
  %11 = shl i32 %0, %10, !dbg !10250
  %12 = or i32 %11, %8, !dbg !10250
  store volatile i32 %12, i32* %4, align 4, !dbg !10250
  ret void, !dbg !10267
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10268 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10272, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10273, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.value(metadata i32 %2, metadata !10274, metadata !DIExpression()), !dbg !10277
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10278
  %5 = icmp eq %struct._snode* %4, null, !dbg !10278
  br i1 %5, label %24, label %6, !dbg !10278

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10280
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10276, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10275, metadata !DIExpression()), !dbg !10277
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10281
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10281
  %12 = load i32, i32* %11, align 4, !dbg !10281
  %13 = and i32 %12, %2, !dbg !10285
  %14 = icmp eq i32 %13, 0, !dbg !10285
  br i1 %14, label %22, label %15, !dbg !10286

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10287
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10287
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10287
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10287
  br i1 %19, label %20, label %21, !dbg !10291

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10292
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.145, i32 0, i32 0)) #25, !dbg !10292
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10292
  unreachable, !dbg !10292

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !10294
  br label %22, !dbg !10295

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10275, metadata !DIExpression()), !dbg !10277
  %23 = icmp eq %struct._snode* %8, null, !dbg !10296
  br i1 %23, label %24, label %6, !dbg !10296

24:                                               ; preds = %22, %3
  ret void, !dbg !10297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10300, metadata !DIExpression()), !dbg !10301
  %2 = and i32 %0, 255, !dbg !10302
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10302
  %4 = load volatile i32, i32* %3, align 4, !dbg !10302
  %5 = lshr i32 %0, 16, !dbg !10302
  %6 = and i32 %4, %5, !dbg !10302
  call void @llvm.dbg.value(metadata i32 %5, metadata !10251, metadata !DIExpression()) #23, !dbg !10303
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10305, !srcloc !10258
  call void @llvm.dbg.value(metadata i32 %7, metadata !10254, metadata !DIExpression()) #23, !dbg !10303
  call void @llvm.dbg.value(metadata i32 %7, metadata !10259, metadata !DIExpression()) #23, !dbg !10306
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10308, !range !7454
  %9 = lshr i32 %6, %8, !dbg !10309
  ret i32 %9, !dbg !10310
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10311 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10316, metadata !DIExpression()), !dbg !10318
  call void @llvm.dbg.value(metadata i32 %1, metadata !10317, metadata !DIExpression()), !dbg !10318
  %3 = shl i32 %1, 16, !dbg !10319
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10319
  store volatile i32 %3, i32* %4, align 4, !dbg !10319
  ret void, !dbg !10320
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10321 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10325, metadata !DIExpression()), !dbg !10326
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10327
  %3 = load volatile i32, i32* %2, align 4, !dbg !10327
  ret i32 %3, !dbg !10328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10329 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10331, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.value(metadata i32 %1, metadata !10332, metadata !DIExpression()), !dbg !10333
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10334
  store volatile i32 %1, i32* %3, align 4, !dbg !10334
  ret void, !dbg !10335
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10336 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10338, metadata !DIExpression()), !dbg !10339
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10340
  %3 = load volatile i32, i32* %2, align 4, !dbg !10340
  ret i32 %3, !dbg !10341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10346, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.value(metadata i32* %1, metadata !10347, metadata !DIExpression()), !dbg !10348
  %3 = and i32 %0, 131072, !dbg !10349
  %4 = icmp eq i32 %3, 0, !dbg !10351
  br i1 %4, label %22, label %5, !dbg !10352

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10353
  %6 = and i32 %0, 2, !dbg !10355
  %7 = icmp eq i32 %6, 0, !dbg !10357
  br i1 %7, label %11, label %8, !dbg !10358

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10359
  %10 = icmp eq i32 %9, 0, !dbg !10359
  br i1 %10, label %33, label %11, !dbg !10362

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10363
  store i32 %12, i32* %1, align 4, !dbg !10363
  %13 = and i32 %0, 16, !dbg !10364
  %14 = icmp eq i32 %13, 0, !dbg !10366
  br i1 %14, label %17, label %15, !dbg !10367

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10368
  br label %31, !dbg !10370

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10371
  %19 = icmp eq i32 %18, 0, !dbg !10373
  br i1 %19, label %33, label %20, !dbg !10374

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10375
  br label %31, !dbg !10377

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10378
  %24 = icmp eq i32 %23, 0, !dbg !10380
  br i1 %24, label %31, label %25, !dbg !10381

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10382
  %27 = icmp eq i32 %26, 0, !dbg !10385
  br i1 %27, label %28, label %31, !dbg !10386

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10387
  br label %33, !dbg !10388

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10348
  ret i32 %34, !dbg !10388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10389 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10393, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i32 %1, metadata !10394, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i32 %2, metadata !10395, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i32 %3, metadata !10396, metadata !DIExpression()), !dbg !10404
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10405
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10405
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10405
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10397, metadata !DIExpression()), !dbg !10404
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10406
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10406
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10406
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10398, metadata !DIExpression()), !dbg !10404
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10407
  call void @llvm.dbg.value(metadata i32 %11, metadata !10399, metadata !DIExpression()), !dbg !10404
  %12 = and i32 %2, 48, !dbg !10408
  call void @llvm.dbg.value(metadata i32 %12, metadata !10400, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i32 %2, metadata !10401, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10404
  call void @llvm.dbg.value(metadata i32 %2, metadata !10402, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10404
  call void @llvm.dbg.value(metadata i32 %2, metadata !10403, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10404
  %13 = lshr i32 %2, 6, !dbg !10409
  %14 = and i32 %13, 1, !dbg !10409
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10410
  %15 = lshr i32 %2, 7, !dbg !10411
  %16 = and i32 %15, 3, !dbg !10411
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10412
  %17 = lshr i32 %2, 9, !dbg !10413
  %18 = and i32 %17, 3, !dbg !10413
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10414
  %19 = icmp eq i32 %12, 32, !dbg !10415
  br i1 %19, label %20, label %24, !dbg !10417

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10418
  br i1 %21, label %22, label %23, !dbg !10421

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10422
  br label %24, !dbg !10424

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10425
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10427
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10428
  ret void, !dbg !10429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !10430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10432, metadata !DIExpression()), !dbg !10434
  %2 = shl nuw i32 1, %0, !dbg !10435
  call void @llvm.dbg.value(metadata i32 %2, metadata !10433, metadata !DIExpression()), !dbg !10434
  ret i32 %2, !dbg !10436
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10437 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10441, metadata !DIExpression()), !dbg !10444
  call void @llvm.dbg.value(metadata i32 %1, metadata !10442, metadata !DIExpression()), !dbg !10444
  call void @llvm.dbg.value(metadata i32 %2, metadata !10443, metadata !DIExpression()), !dbg !10444
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10445
  %5 = load volatile i32, i32* %4, align 4, !dbg !10445
  %6 = xor i32 %1, -1, !dbg !10445
  %7 = and i32 %5, %6, !dbg !10445
  %8 = mul i32 %2, %1, !dbg !10445
  %9 = or i32 %7, %8, !dbg !10445
  store volatile i32 %9, i32* %4, align 4, !dbg !10445
  ret void, !dbg !10446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10447 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10449, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i32 %1, metadata !10450, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i32 %2, metadata !10451, metadata !DIExpression()), !dbg !10452
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10453
  %5 = load volatile i32, i32* %4, align 4, !dbg !10453
  call void @llvm.dbg.value(metadata i32 %1, metadata !10251, metadata !DIExpression()) #23, !dbg !10454
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10456, !srcloc !10258
  call void @llvm.dbg.value(metadata i32 %6, metadata !10254, metadata !DIExpression()) #23, !dbg !10454
  call void @llvm.dbg.value(metadata i32 %6, metadata !10259, metadata !DIExpression()) #23, !dbg !10457
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10459, !range !7454
  %8 = shl nuw nsw i32 %7, 1, !dbg !10453
  %9 = shl i32 3, %8, !dbg !10453
  %10 = xor i32 %9, -1, !dbg !10453
  %11 = and i32 %5, %10, !dbg !10453
  call void @llvm.dbg.value(metadata i32 %1, metadata !10251, metadata !DIExpression()) #23, !dbg !10460
  call void @llvm.dbg.value(metadata i32 %6, metadata !10254, metadata !DIExpression()) #23, !dbg !10460
  call void @llvm.dbg.value(metadata i32 %6, metadata !10259, metadata !DIExpression()) #23, !dbg !10462
  %12 = shl i32 %2, %8, !dbg !10453
  %13 = or i32 %11, %12, !dbg !10453
  store volatile i32 %13, i32* %4, align 4, !dbg !10453
  ret void, !dbg !10464
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10465 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10467, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %1, metadata !10468, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %2, metadata !10469, metadata !DIExpression()), !dbg !10470
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10471
  %5 = load volatile i32, i32* %4, align 4, !dbg !10471
  call void @llvm.dbg.value(metadata i32 %1, metadata !10251, metadata !DIExpression()) #23, !dbg !10472
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10474, !srcloc !10258
  call void @llvm.dbg.value(metadata i32 %6, metadata !10254, metadata !DIExpression()) #23, !dbg !10472
  call void @llvm.dbg.value(metadata i32 %6, metadata !10259, metadata !DIExpression()) #23, !dbg !10475
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10477, !range !7454
  %8 = shl nuw nsw i32 %7, 1, !dbg !10471
  %9 = shl i32 3, %8, !dbg !10471
  %10 = xor i32 %9, -1, !dbg !10471
  %11 = and i32 %5, %10, !dbg !10471
  call void @llvm.dbg.value(metadata i32 %1, metadata !10251, metadata !DIExpression()) #23, !dbg !10478
  call void @llvm.dbg.value(metadata i32 %6, metadata !10254, metadata !DIExpression()) #23, !dbg !10478
  call void @llvm.dbg.value(metadata i32 %6, metadata !10259, metadata !DIExpression()) #23, !dbg !10480
  %12 = shl i32 %2, %8, !dbg !10471
  %13 = or i32 %11, %12, !dbg !10471
  store volatile i32 %13, i32* %4, align 4, !dbg !10471
  ret void, !dbg !10482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10483 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10485, metadata !DIExpression()), !dbg !10488
  call void @llvm.dbg.value(metadata i32 %1, metadata !10486, metadata !DIExpression()), !dbg !10488
  call void @llvm.dbg.value(metadata i32 %2, metadata !10487, metadata !DIExpression()), !dbg !10488
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10489
  %5 = load volatile i32, i32* %4, align 4, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %1, metadata !10251, metadata !DIExpression()) #23, !dbg !10490
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10492, !srcloc !10258
  call void @llvm.dbg.value(metadata i32 %6, metadata !10254, metadata !DIExpression()) #23, !dbg !10490
  call void @llvm.dbg.value(metadata i32 %6, metadata !10259, metadata !DIExpression()) #23, !dbg !10493
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10495, !range !7454
  %8 = shl nuw nsw i32 %7, 2, !dbg !10489
  %9 = shl i32 15, %8, !dbg !10489
  %10 = xor i32 %9, -1, !dbg !10489
  %11 = and i32 %5, %10, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %1, metadata !10251, metadata !DIExpression()) #23, !dbg !10496
  call void @llvm.dbg.value(metadata i32 %6, metadata !10254, metadata !DIExpression()) #23, !dbg !10496
  call void @llvm.dbg.value(metadata i32 %6, metadata !10259, metadata !DIExpression()) #23, !dbg !10498
  %12 = shl i32 %2, %8, !dbg !10489
  %13 = or i32 %11, %12, !dbg !10489
  store volatile i32 %13, i32* %4, align 4, !dbg !10489
  ret void, !dbg !10500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10501 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10503, metadata !DIExpression()), !dbg !10506
  call void @llvm.dbg.value(metadata i32 %1, metadata !10504, metadata !DIExpression()), !dbg !10506
  call void @llvm.dbg.value(metadata i32 %2, metadata !10505, metadata !DIExpression()), !dbg !10506
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10507
  %5 = load volatile i32, i32* %4, align 4, !dbg !10507
  %6 = lshr i32 %1, 8, !dbg !10507
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10508
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10510, !srcloc !10258
  call void @llvm.dbg.value(metadata i32 %7, metadata !10254, metadata !DIExpression()) #23, !dbg !10508
  call void @llvm.dbg.value(metadata i32 %7, metadata !10259, metadata !DIExpression()) #23, !dbg !10511
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10513, !range !7454
  %9 = shl nuw nsw i32 %8, 2, !dbg !10507
  %10 = shl i32 15, %9, !dbg !10507
  %11 = xor i32 %10, -1, !dbg !10507
  %12 = and i32 %5, %11, !dbg !10507
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10514
  call void @llvm.dbg.value(metadata i32 %7, metadata !10254, metadata !DIExpression()) #23, !dbg !10514
  call void @llvm.dbg.value(metadata i32 %7, metadata !10259, metadata !DIExpression()) #23, !dbg !10516
  %13 = shl i32 %2, %9, !dbg !10507
  %14 = or i32 %12, %13, !dbg !10507
  store volatile i32 %14, i32* %4, align 4, !dbg !10507
  ret void, !dbg !10518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10519 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10521, metadata !DIExpression()), !dbg !10524
  call void @llvm.dbg.value(metadata i32 %1, metadata !10522, metadata !DIExpression()), !dbg !10524
  call void @llvm.dbg.value(metadata i32 %2, metadata !10523, metadata !DIExpression()), !dbg !10524
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10525
  %5 = load volatile i32, i32* %4, align 4, !dbg !10525
  call void @llvm.dbg.value(metadata i32 %1, metadata !10251, metadata !DIExpression()) #23, !dbg !10526
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10528, !srcloc !10258
  call void @llvm.dbg.value(metadata i32 %6, metadata !10254, metadata !DIExpression()) #23, !dbg !10526
  call void @llvm.dbg.value(metadata i32 %6, metadata !10259, metadata !DIExpression()) #23, !dbg !10529
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10531, !range !7454
  %8 = shl nuw nsw i32 %7, 1, !dbg !10525
  %9 = shl i32 3, %8, !dbg !10525
  %10 = xor i32 %9, -1, !dbg !10525
  %11 = and i32 %5, %10, !dbg !10525
  call void @llvm.dbg.value(metadata i32 %1, metadata !10251, metadata !DIExpression()) #23, !dbg !10532
  call void @llvm.dbg.value(metadata i32 %6, metadata !10254, metadata !DIExpression()) #23, !dbg !10532
  call void @llvm.dbg.value(metadata i32 %6, metadata !10259, metadata !DIExpression()) #23, !dbg !10534
  %12 = shl i32 %2, %8, !dbg !10525
  %13 = or i32 %11, %12, !dbg !10525
  store volatile i32 %13, i32* %4, align 4, !dbg !10525
  ret void, !dbg !10536
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10537 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10539, metadata !DIExpression()), !dbg !10542
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10543
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10543
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10543
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10540, metadata !DIExpression()), !dbg !10542
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10544
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10545
  %6 = tail call fastcc zeroext i1 @device_is_ready.155() #24, !dbg !10546
  br i1 %6, label %7, label %11, !dbg !10548

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10549
  call void @llvm.dbg.value(metadata i32 %8, metadata !10541, metadata !DIExpression()), !dbg !10542
  %9 = icmp slt i32 %8, 0, !dbg !10550
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10552
  br label %11, !dbg !10552

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10542
  ret i32 %12, !dbg !10553
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.155() unnamed_addr #1 !dbg !10554 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10558, metadata !DIExpression()), !dbg !10559
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10560, !srcloc !10562
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.156() #24, !dbg !10563
  ret i1 %1, !dbg !10564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !10565 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10569, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.value(metadata i8 1, metadata !10570, metadata !DIExpression()), !dbg !10574
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10575
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10575
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10575
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10571, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.value(metadata i32 0, metadata !10572, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10573, metadata !DIExpression()), !dbg !10574
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10576
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10579
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !10580
  call void @llvm.dbg.value(metadata i32 %7, metadata !10572, metadata !DIExpression()), !dbg !10574
  ret i32 %7, !dbg !10581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.156() unnamed_addr #1 !dbg !10582 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10584, metadata !DIExpression()), !dbg !10585
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !10586
  ret i1 %1, !dbg !10587
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10588 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10592, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.value(metadata i32 %1, metadata !10593, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.value(metadata i32 %2, metadata !10594, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.value(metadata i32 %3, metadata !10595, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.value(metadata i32 0, metadata !10596, metadata !DIExpression()), !dbg !10600
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !10601
  %5 = icmp eq i32 %3, 17, !dbg !10602
  br i1 %5, label %6, label %14, !dbg !10603

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10604
  call void @llvm.dbg.value(metadata i32 %7, metadata !10597, metadata !DIExpression()), !dbg !10605
  %8 = icmp eq i32 %7, 0, !dbg !10606
  %9 = shl nuw i32 1, %1, !dbg !10608
  br i1 %8, label %12, label %10, !dbg !10609

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10610
  br label %14, !dbg !10612

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10613
  br label %14, !dbg !10616

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10617
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !10618 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10620, metadata !DIExpression()), !dbg !10624
  call void @llvm.dbg.value(metadata i8* %1, metadata !10621, metadata !DIExpression()), !dbg !10624
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10625
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10625
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10625
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10622, metadata !DIExpression()), !dbg !10624
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10626
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10626
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !10628
  %9 = icmp eq i32 %8, 0, !dbg !10628
  br i1 %9, label %12, label %10, !dbg !10629

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10630
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !10632
  br label %12, !dbg !10633

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10634
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10636
  %15 = icmp eq i32 %14, 0, !dbg !10636
  br i1 %15, label %19, label %16, !dbg !10637

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10638
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !10639
  store i8 %18, i8* %1, align 1, !dbg !10640
  br label %19, !dbg !10641

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10624
  ret i32 %20, !dbg !10642
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10643 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10645, metadata !DIExpression()), !dbg !10649
  call void @llvm.dbg.value(metadata i8 %1, metadata !10646, metadata !DIExpression()), !dbg !10649
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10650
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10650
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10650
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10647, metadata !DIExpression()), !dbg !10649
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10651

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10652
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !10655
  %10 = icmp eq i32 %9, 0, !dbg !10655
  br i1 %10, label %18, label %11, !dbg !10656

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10657, !srcloc !10664
  call void @llvm.dbg.value(metadata i32 undef, metadata !10660, metadata !DIExpression()) #23, !dbg !10665
  call void @llvm.dbg.value(metadata i32 undef, metadata !10661, metadata !DIExpression()) #23, !dbg !10665
  call void @llvm.dbg.value(metadata i32 undef, metadata !10648, metadata !DIExpression()), !dbg !10649
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10666
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10668
  %15 = icmp eq i32 %14, 0, !dbg !10668
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10657
  br i1 %15, label %17, label %19, !dbg !10669

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10660, metadata !DIExpression()) #23, !dbg !10665
  call void @llvm.dbg.value(metadata i32 %16, metadata !10648, metadata !DIExpression()), !dbg !10649
  call void @llvm.dbg.value(metadata i32 undef, metadata !10670, metadata !DIExpression()) #23, !dbg !10673
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !10675, !srcloc !10676
  br label %18, !dbg !10677

18:                                               ; preds = %17, %7
  br label %7, !dbg !10652, !llvm.loop !10678

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10657
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10680
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !10681
  call void @llvm.dbg.value(metadata i32 %20, metadata !10670, metadata !DIExpression()) #23, !dbg !10682
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !10684, !srcloc !10676
  ret void, !dbg !10685
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !10686 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10688, metadata !DIExpression()), !dbg !10691
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10692
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10692
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10692
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10689, metadata !DIExpression()), !dbg !10691
  call void @llvm.dbg.value(metadata i32 0, metadata !10690, metadata !DIExpression()), !dbg !10691
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10693
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10693
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !10695
  %8 = icmp ne i32 %7, 0, !dbg !10695
  %9 = zext i1 %8 to i32, !dbg !10696
  call void @llvm.dbg.value(metadata i32 %9, metadata !10690, metadata !DIExpression()), !dbg !10691
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10697
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !10699
  %12 = icmp eq i32 %11, 0, !dbg !10699
  %13 = or i32 %9, 2, !dbg !10700
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10700
  call void @llvm.dbg.value(metadata i32 %14, metadata !10690, metadata !DIExpression()), !dbg !10691
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10701
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !10703
  %17 = icmp eq i32 %16, 0, !dbg !10703
  %18 = or i32 %14, 4, !dbg !10704
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10704
  call void @llvm.dbg.value(metadata i32 %19, metadata !10690, metadata !DIExpression()), !dbg !10691
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10705
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !10707
  %22 = icmp eq i32 %21, 0, !dbg !10707
  %23 = or i32 %19, 8, !dbg !10708
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10708
  call void @llvm.dbg.value(metadata i32 %24, metadata !10690, metadata !DIExpression()), !dbg !10691
  %25 = and i32 %24, 8, !dbg !10709
  %26 = icmp eq i32 %25, 0, !dbg !10709
  br i1 %26, label %29, label %27, !dbg !10711

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10712
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !10714
  br label %29, !dbg !10715

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10716
  %31 = icmp eq i32 %30, 0, !dbg !10716
  br i1 %31, label %34, label %32, !dbg !10718

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10719
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !10721
  br label %34, !dbg !10722

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10723
  %36 = icmp eq i32 %35, 0, !dbg !10723
  br i1 %36, label %39, label %37, !dbg !10725

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10726
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !10728
  br label %39, !dbg !10729

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10730
  %41 = icmp eq i32 %40, 0, !dbg !10730
  br i1 %41, label %44, label %42, !dbg !10732

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10733
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !10735
  br label %44, !dbg !10736

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10737
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !10738
  ret i32 %24, !dbg !10739
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10740 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10742, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10743, metadata !DIExpression()), !dbg !10751
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10752
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10752
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10752
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10744, metadata !DIExpression()), !dbg !10751
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10753
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10753
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10753
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10745, metadata !DIExpression()), !dbg !10751
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10754
  %10 = load i8, i8* %9, align 4, !dbg !10754
  %11 = zext i8 %10 to i32, !dbg !10755
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !10756
  call void @llvm.dbg.value(metadata i32 %12, metadata !10747, metadata !DIExpression()), !dbg !10751
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10757
  %14 = load i8, i8* %13, align 1, !dbg !10757
  %15 = zext i8 %14 to i32, !dbg !10758
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !10759
  call void @llvm.dbg.value(metadata i32 %16, metadata !10748, metadata !DIExpression()), !dbg !10751
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10760
  %18 = load i8, i8* %17, align 2, !dbg !10760
  %19 = zext i8 %18 to i32, !dbg !10761
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !10762
  call void @llvm.dbg.value(metadata i32 %20, metadata !10749, metadata !DIExpression()), !dbg !10751
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10763
  %22 = load i8, i8* %21, align 1, !dbg !10763
  %23 = zext i8 %22 to i32, !dbg !10764
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !10765
  call void @llvm.dbg.value(metadata i32 %24, metadata !10750, metadata !DIExpression()), !dbg !10751
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10766

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10768
  br i1 %26, label %69, label %27, !dbg !10770

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10771

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10772
  br i1 %29, label %65, label %30, !dbg !10772

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10774
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10751
  br i1 %31, label %38, label %34, !dbg !10776

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10777
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !10777

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10780
  br i1 %37, label %38, label %69, !dbg !10781

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10782
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !10783
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !10784
  %41 = icmp eq i32 %12, %40, !dbg !10786
  br i1 %41, label %43, label %42, !dbg !10787

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !10788
  br label %43, !dbg !10790

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !10791
  %45 = icmp eq i32 %16, %44, !dbg !10793
  br i1 %45, label %47, label %46, !dbg !10794

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !10795
  br label %47, !dbg !10797

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !10798
  %49 = icmp eq i32 %20, %48, !dbg !10800
  br i1 %49, label %51, label %50, !dbg !10801

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !10802
  br label %51, !dbg !10804

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !10805
  %53 = icmp eq i32 %24, %52, !dbg !10807
  br i1 %53, label %55, label %54, !dbg !10808

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10809
  br label %55, !dbg !10811

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10812
  %57 = load i32, i32* %56, align 4, !dbg !10812
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10814
  %59 = load i32, i32* %58, align 4, !dbg !10814
  %60 = icmp eq i32 %57, %59, !dbg !10815
  br i1 %60, label %63, label %61, !dbg !10816

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10817
  %62 = load i32, i32* %56, align 4, !dbg !10819
  store i32 %62, i32* %58, align 4, !dbg !10820
  br label %63, !dbg !10821

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10822
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10823
  br label %69, !dbg !10824

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10772
  %67 = and i8 %66, 1, !dbg !10772
  %68 = icmp eq i8 %67, 0, !dbg !10772
  br i1 %68, label %30, label %69, !dbg !10772

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10751
  ret i32 %70, !dbg !10825
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10826 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10828, metadata !DIExpression()), !dbg !10831
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10829, metadata !DIExpression()), !dbg !10831
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10832
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10832
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10832
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10830, metadata !DIExpression()), !dbg !10831
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10833
  %7 = load i32, i32* %6, align 4, !dbg !10833
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10834
  store i32 %7, i32* %8, align 4, !dbg !10835
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10836, !range !10837
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10838
  %11 = trunc i32 %10 to i8, !dbg !10838
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10839
  store i8 %11, i8* %12, align 4, !dbg !10840
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10841, !range !10842
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10843
  %15 = trunc i32 %14 to i8, !dbg !10843
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10844
  store i8 %15, i8* %16, align 1, !dbg !10845
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10846
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10847, !range !10837
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10848
  %20 = trunc i32 %19 to i8, !dbg !10848
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10849
  store i8 %20, i8* %21, align 2, !dbg !10850
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10851, !range !10852
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10853
  %24 = trunc i32 %23 to i8, !dbg !10853
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10854
  store i8 %24, i8* %25, align 1, !dbg !10855
  ret i32 0, !dbg !10856
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10857 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10861, metadata !DIExpression()), !dbg !10863
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10864
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10864
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10864
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10862, metadata !DIExpression()), !dbg !10863
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10865
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10865
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10866
  ret i32 %7, !dbg !10867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !10868 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10872, metadata !DIExpression()), !dbg !10873
  %2 = icmp eq i32 %0, 1024, !dbg !10874
  %3 = select i1 %2, i32 2, i32 0, !dbg !10874
  %4 = icmp eq i32 %0, 1536, !dbg !10874
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10874
  ret i32 %5, !dbg !10875
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10876 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10878, metadata !DIExpression()), !dbg !10880
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10881
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10881
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10881
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10879, metadata !DIExpression()), !dbg !10880
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10882
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10882
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10883
  ret i32 %7, !dbg !10884
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10889, metadata !DIExpression()), !dbg !10890
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10891
  %3 = icmp ult i32 %2, 4, !dbg !10891
  br i1 %3, label %4, label %7, !dbg !10891

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10891
  %6 = load i32, i32* %5, align 4, !dbg !10891
  br label %7, !dbg !10891

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10892
  ret i32 %8, !dbg !10894
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10895 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10897, metadata !DIExpression()), !dbg !10899
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10900
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10900
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10900
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10898, metadata !DIExpression()), !dbg !10899
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10901
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10901
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10902
  ret i32 %7, !dbg !10903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10908, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata i32 %1, metadata !10909, metadata !DIExpression()), !dbg !10910
  %3 = icmp eq i32 %0, 4096, !dbg !10911
  %4 = icmp eq i32 %1, 0, !dbg !10911
  %5 = select i1 %4, i32 4, i32 3, !dbg !10911
  %6 = select i1 %4, i32 3, i32 2, !dbg !10911
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10911
  ret i32 %7, !dbg !10912
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10913 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10915, metadata !DIExpression()), !dbg !10917
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10918
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10918
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10918
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10916, metadata !DIExpression()), !dbg !10917
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10919
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10919
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10920
  ret i32 %7, !dbg !10921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10926, metadata !DIExpression()), !dbg !10927
  %2 = icmp eq i32 %0, 768, !dbg !10928
  %3 = zext i1 %2 to i32, !dbg !10927
  ret i32 %3, !dbg !10930
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10931 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10936, metadata !DIExpression()), !dbg !10937
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10938
  %3 = load volatile i32, i32* %2, align 4, !dbg !10938
  %4 = and i32 %3, 768, !dbg !10938
  ret i32 %4, !dbg !10939
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10940 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10942, metadata !DIExpression()), !dbg !10943
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10944
  %3 = load volatile i32, i32* %2, align 4, !dbg !10944
  %4 = and i32 %3, 4096, !dbg !10944
  ret i32 %4, !dbg !10945
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10946 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10948, metadata !DIExpression()), !dbg !10949
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10950
  %3 = load volatile i32, i32* %2, align 4, !dbg !10950
  %4 = and i32 %3, 12288, !dbg !10950
  ret i32 %4, !dbg !10951
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10952 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10954, metadata !DIExpression()), !dbg !10955
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10956
  %3 = load volatile i32, i32* %2, align 4, !dbg !10956
  %4 = and i32 %3, 1536, !dbg !10956
  ret i32 %4, !dbg !10957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !10958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10962, metadata !DIExpression()), !dbg !10963
  %2 = icmp eq i32 %0, 2, !dbg !10964
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10964
  %4 = icmp eq i32 %0, 1, !dbg !10964
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10964
  ret i32 %5, !dbg !10965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !10966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10970, metadata !DIExpression()), !dbg !10971
  %2 = icmp ult i32 %0, 3, !dbg !10972
  br i1 %2, label %3, label %6, !dbg !10972

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10972
  %5 = load i32, i32* %4, align 4, !dbg !10972
  br label %6, !dbg !10972

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10973
  ret i32 %7, !dbg !10975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10976 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10980, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata i32 %1, metadata !10981, metadata !DIExpression()), !dbg !10982
  %3 = icmp eq i32 %0, 4, !dbg !10983
  %4 = icmp eq i32 %1, 0, !dbg !10983
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10983
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10983
  ret i32 %6, !dbg !10984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10989, metadata !DIExpression()), !dbg !10990
  %2 = icmp eq i32 %0, 1, !dbg !10991
  %3 = select i1 %2, i32 768, i32 0, !dbg !10990
  ret i32 %3, !dbg !10993
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10994 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10998, metadata !DIExpression()), !dbg !10999
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11000
  %3 = load volatile i32, i32* %2, align 4, !dbg !11000
  %4 = and i32 %3, -8193, !dbg !11000
  store volatile i32 %4, i32* %2, align 4, !dbg !11000
  ret void, !dbg !11001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11002 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11006, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.value(metadata i32 %1, metadata !11007, metadata !DIExpression()), !dbg !11009
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11010
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11010
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11010
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11008, metadata !DIExpression()), !dbg !11009
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11011
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11011
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11012
  ret void, !dbg !11013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11014 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11016, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 %1, metadata !11017, metadata !DIExpression()), !dbg !11019
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11020
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11020
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11020
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11018, metadata !DIExpression()), !dbg !11019
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11021
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11021
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11022
  ret void, !dbg !11023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11024 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11026, metadata !DIExpression()), !dbg !11029
  call void @llvm.dbg.value(metadata i32 %1, metadata !11027, metadata !DIExpression()), !dbg !11029
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11030
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11030
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11030
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11028, metadata !DIExpression()), !dbg !11029
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11031
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11031
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11032
  ret void, !dbg !11033
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11034 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11036, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.value(metadata i32 %1, metadata !11037, metadata !DIExpression()), !dbg !11039
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11040
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11040
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11040
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11038, metadata !DIExpression()), !dbg !11039
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11041
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11041
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11042
  ret void, !dbg !11043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11044 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11046, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 %1, metadata !11047, metadata !DIExpression()), !dbg !11051
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11052
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11052
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11052
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11048, metadata !DIExpression()), !dbg !11051
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11053
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11053
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11053
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11049, metadata !DIExpression()), !dbg !11051
  %10 = bitcast i32* %3 to i8*, !dbg !11054
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11054
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11055
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11055
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11059
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11059
  %15 = load i8*, i8** %14, align 4, !dbg !11059
  call void @llvm.dbg.value(metadata i32* %3, metadata !11050, metadata !DIExpression(DW_OP_deref)), !dbg !11051
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11060
  %17 = icmp slt i32 %16, 0, !dbg !11061
  br i1 %17, label %18, label %21, !dbg !11062

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11063
  %20 = zext i8 %19 to i32, !dbg !11063
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.162, i32 0, i32 0), i32 noundef %20) #25, !dbg !11063
  br label %31, !dbg !11069

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11070
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11070
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11071
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11072
  %25 = load i32, i32* %3, align 4, !dbg !11073
  call void @llvm.dbg.value(metadata i32 %25, metadata !11050, metadata !DIExpression()), !dbg !11051
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11074
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11075
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11075
  %28 = load volatile i32, i32* %27, align 4, !dbg !11075
  %29 = icmp ugt i32 %28, 16, !dbg !11075
  br i1 %29, label %31, label %30, !dbg !11078

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.165, i32 0, i32 0), i32 noundef 190) #25, !dbg !11079
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.166, i32 0, i32 0)) #25, !dbg !11079
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.165, i32 0, i32 0), i32 noundef 190) #25, !dbg !11079
  unreachable, !dbg !11079

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11081
  ret void, !dbg !11081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11082 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11084, metadata !DIExpression()), !dbg !11085
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11086
  %3 = load volatile i32, i32* %2, align 4, !dbg !11086
  %4 = or i32 %3, 8192, !dbg !11086
  store volatile i32 %4, i32* %2, align 4, !dbg !11086
  ret void, !dbg !11087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11088 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11090, metadata !DIExpression()), !dbg !11094
  call void @llvm.dbg.value(metadata i8* %1, metadata !11091, metadata !DIExpression()), !dbg !11094
  call void @llvm.dbg.value(metadata i32* %2, metadata !11092, metadata !DIExpression()), !dbg !11094
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11095
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11095
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11095
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11093, metadata !DIExpression()), !dbg !11094
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11096
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11096
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11098
  br i1 %9, label %12, label %10, !dbg !11099

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11100
  br label %12, !dbg !11101

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11094
  ret i32 %13, !dbg !11102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef %0) unnamed_addr #4 !dbg !11103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11105, metadata !DIExpression()), !dbg !11106
  %2 = icmp eq i32 %0, 2, !dbg !11107
  %3 = select i1 %2, i8 87, i8 63, !dbg !11107
  %4 = icmp eq i32 %0, 1, !dbg !11107
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11107
  ret i8 %5, !dbg !11108
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11109 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11113, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i32 0, metadata !11114, metadata !DIExpression()), !dbg !11115
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11116
  %3 = load volatile i32, i32* %2, align 4, !dbg !11116
  %4 = and i32 %3, -32769, !dbg !11116
  store volatile i32 %4, i32* %2, align 4, !dbg !11116
  ret void, !dbg !11117
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11118 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11122, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata i32 %1, metadata !11123, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata i32 0, metadata !11124, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata i32 %2, metadata !11125, metadata !DIExpression()), !dbg !11126
  %4 = zext i32 %1 to i64, !dbg !11127
  %5 = mul nuw nsw i64 %4, 25, !dbg !11127
  %6 = zext i32 %2 to i64, !dbg !11127
  %7 = shl nuw nsw i64 %6, 2, !dbg !11127
  %8 = udiv i64 %5, %7, !dbg !11127
  %9 = trunc i64 %8 to i32, !dbg !11127
  %10 = udiv i32 %9, 100, !dbg !11127
  %11 = shl nuw nsw i32 %10, 4, !dbg !11127
  %12 = mul i32 %10, -100, !dbg !11127
  %13 = add i32 %12, %9, !dbg !11127
  %14 = shl i32 %13, 4, !dbg !11127
  %15 = add i32 %14, 50, !dbg !11127
  %16 = udiv i32 %15, 100, !dbg !11127
  %17 = and i32 %16, 240, !dbg !11127
  %18 = add nuw nsw i32 %17, %11, !dbg !11127
  %19 = and i32 %16, 15, !dbg !11127
  %20 = and i32 %18, 65520, !dbg !11130
  %21 = or i32 %20, %19, !dbg !11130
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11131
  store volatile i32 %21, i32* %22, align 4, !dbg !11132
  ret void, !dbg !11133
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11134 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11136, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.value(metadata i32 %1, metadata !11137, metadata !DIExpression()), !dbg !11138
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11139
  %4 = load volatile i32, i32* %3, align 4, !dbg !11139
  %5 = and i32 %4, -769, !dbg !11139
  %6 = or i32 %5, %1, !dbg !11139
  store volatile i32 %6, i32* %3, align 4, !dbg !11139
  ret void, !dbg !11140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11141 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11143, metadata !DIExpression()), !dbg !11145
  call void @llvm.dbg.value(metadata i32 %1, metadata !11144, metadata !DIExpression()), !dbg !11145
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11146
  %4 = load volatile i32, i32* %3, align 4, !dbg !11146
  %5 = and i32 %4, -4097, !dbg !11146
  %6 = or i32 %5, %1, !dbg !11146
  store volatile i32 %6, i32* %3, align 4, !dbg !11146
  ret void, !dbg !11147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11148 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11150, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata i32 %1, metadata !11151, metadata !DIExpression()), !dbg !11152
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11153
  %4 = load volatile i32, i32* %3, align 4, !dbg !11153
  %5 = and i32 %4, -12289, !dbg !11153
  %6 = or i32 %5, %1, !dbg !11153
  store volatile i32 %6, i32* %3, align 4, !dbg !11153
  ret void, !dbg !11154
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11155 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11157, metadata !DIExpression()), !dbg !11159
  call void @llvm.dbg.value(metadata i32 %1, metadata !11158, metadata !DIExpression()), !dbg !11159
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11160
  %4 = load volatile i32, i32* %3, align 4, !dbg !11160
  %5 = and i32 %4, -1537, !dbg !11160
  %6 = or i32 %5, %1, !dbg !11160
  store volatile i32 %6, i32* %3, align 4, !dbg !11160
  ret void, !dbg !11161
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11162 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11164, metadata !DIExpression()), !dbg !11165
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11166
  %3 = load volatile i32, i32* %2, align 4, !dbg !11166
  %4 = lshr i32 %3, 3, !dbg !11167
  %5 = and i32 %4, 1, !dbg !11167
  ret i32 %5, !dbg !11168
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11169 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11171, metadata !DIExpression()), !dbg !11172
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11173
  %3 = load volatile i32, i32* %2, align 4, !dbg !11173
  %4 = and i32 %3, 1, !dbg !11173
  ret i32 %4, !dbg !11174
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11175 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11177, metadata !DIExpression()), !dbg !11178
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11179
  %3 = load volatile i32, i32* %2, align 4, !dbg !11179
  %4 = lshr i32 %3, 1, !dbg !11180
  %5 = and i32 %4, 1, !dbg !11180
  ret i32 %5, !dbg !11181
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11182 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11184, metadata !DIExpression()), !dbg !11185
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11186
  %3 = load volatile i32, i32* %2, align 4, !dbg !11186
  %4 = lshr i32 %3, 8, !dbg !11187
  %5 = and i32 %4, 1, !dbg !11187
  ret i32 %5, !dbg !11188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11189 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11191, metadata !DIExpression()), !dbg !11192
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11193
  store volatile i32 -257, i32* %2, align 4, !dbg !11193
  ret void, !dbg !11194
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11195 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11197, metadata !DIExpression()), !dbg !11199
  %3 = bitcast i32* %2 to i8*, !dbg !11200
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11200
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11198, metadata !DIExpression()), !dbg !11201
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11202
  %5 = load volatile i32, i32* %4, align 4, !dbg !11202
  store volatile i32 %5, i32* %2, align 4, !dbg !11203
  %6 = load volatile i32, i32* %2, align 4, !dbg !11204
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11205
  %8 = load volatile i32, i32* %7, align 4, !dbg !11205
  store volatile i32 %8, i32* %2, align 4, !dbg !11206
  %9 = load volatile i32, i32* %2, align 4, !dbg !11207
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11208
  ret void, !dbg !11208
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11209 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11211, metadata !DIExpression()), !dbg !11213
  %3 = bitcast i32* %2 to i8*, !dbg !11214
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11214
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11212, metadata !DIExpression()), !dbg !11215
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11216
  %5 = load volatile i32, i32* %4, align 4, !dbg !11216
  store volatile i32 %5, i32* %2, align 4, !dbg !11217
  %6 = load volatile i32, i32* %2, align 4, !dbg !11218
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11219
  %8 = load volatile i32, i32* %7, align 4, !dbg !11219
  store volatile i32 %8, i32* %2, align 4, !dbg !11220
  %9 = load volatile i32, i32* %2, align 4, !dbg !11221
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11222
  ret void, !dbg !11222
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11223 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11225, metadata !DIExpression()), !dbg !11227
  %3 = bitcast i32* %2 to i8*, !dbg !11228
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11228
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11226, metadata !DIExpression()), !dbg !11229
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11230
  %5 = load volatile i32, i32* %4, align 4, !dbg !11230
  store volatile i32 %5, i32* %2, align 4, !dbg !11231
  %6 = load volatile i32, i32* %2, align 4, !dbg !11232
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11233
  %8 = load volatile i32, i32* %7, align 4, !dbg !11233
  store volatile i32 %8, i32* %2, align 4, !dbg !11234
  %9 = load volatile i32, i32* %2, align 4, !dbg !11235
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11236
  ret void, !dbg !11236
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11237 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11239, metadata !DIExpression()), !dbg !11241
  %3 = bitcast i32* %2 to i8*, !dbg !11242
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11242
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11240, metadata !DIExpression()), !dbg !11243
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11244
  %5 = load volatile i32, i32* %4, align 4, !dbg !11244
  store volatile i32 %5, i32* %2, align 4, !dbg !11245
  %6 = load volatile i32, i32* %2, align 4, !dbg !11246
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11247
  %8 = load volatile i32, i32* %7, align 4, !dbg !11247
  store volatile i32 %8, i32* %2, align 4, !dbg !11248
  %9 = load volatile i32, i32* %2, align 4, !dbg !11249
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11250
  ret void, !dbg !11250
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11251 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11253, metadata !DIExpression()), !dbg !11254
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11255
  %3 = load volatile i32, i32* %2, align 4, !dbg !11255
  %4 = lshr i32 %3, 7, !dbg !11256
  %5 = and i32 %4, 1, !dbg !11256
  ret i32 %5, !dbg !11257
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !11258 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11262, metadata !DIExpression()), !dbg !11264
  call void @llvm.dbg.value(metadata i8 %1, metadata !11263, metadata !DIExpression()), !dbg !11264
  %3 = zext i8 %1 to i32, !dbg !11265
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11266
  store volatile i32 %3, i32* %4, align 4, !dbg !11267
  ret void, !dbg !11268
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11269 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11271, metadata !DIExpression()), !dbg !11272
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11273
  %3 = load volatile i32, i32* %2, align 4, !dbg !11273
  %4 = lshr i32 %3, 5, !dbg !11274
  %5 = and i32 %4, 1, !dbg !11274
  ret i32 %5, !dbg !11275
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11276 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11280, metadata !DIExpression()), !dbg !11281
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11282
  %3 = load volatile i32, i32* %2, align 4, !dbg !11282
  %4 = trunc i32 %3 to i8, !dbg !11283
  ret i8 %4, !dbg !11284
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11285 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11287, metadata !DIExpression()), !dbg !11293
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11294
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11294
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11294
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11288, metadata !DIExpression()), !dbg !11293
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11295
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11295
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11295
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11289, metadata !DIExpression()), !dbg !11293
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11296
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11297
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11297
  %10 = tail call fastcc zeroext i1 @device_is_ready.168(%struct.device* noundef %9) #24, !dbg !11299
  br i1 %10, label %14, label %11, !dbg !11300

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11301
  %13 = zext i8 %12 to i32, !dbg !11301
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.169, i32 0, i32 0), i32 noundef %13) #25, !dbg !11301
  br label %62, !dbg !11307

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11308
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11309
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11309
  %18 = load i8*, i8** %17, align 4, !dbg !11309
  %19 = tail call fastcc i32 @clock_control_on.170(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11310
  call void @llvm.dbg.value(metadata i32 %19, metadata !11292, metadata !DIExpression()), !dbg !11293
  %20 = icmp eq i32 %19, 0, !dbg !11311
  br i1 %20, label %24, label %21, !dbg !11313

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11314
  %23 = zext i8 %22 to i32, !dbg !11314
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.171, i32 0, i32 0), i32 noundef %23) #25, !dbg !11314
  br label %62, !dbg !11320

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11321
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11321
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11322
  call void @llvm.dbg.value(metadata i32 %27, metadata !11292, metadata !DIExpression()), !dbg !11293
  %28 = icmp slt i32 %27, 0, !dbg !11323
  br i1 %28, label %62, label %29, !dbg !11325

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11326
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11326
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11327
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11328
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11329
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11330
  %34 = load i32, i32* %33, align 4, !dbg !11330
  %35 = icmp ult i32 %34, 3, !dbg !11332
  br i1 %35, label %39, label %36, !dbg !11332

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 2) #24, !dbg !11333
  %38 = zext i8 %37 to i32, !dbg !11333
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.172, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11333
  call void @llvm.dbg.value(metadata i32 0, metadata !11290, metadata !DIExpression()), !dbg !11293
  call void @llvm.dbg.value(metadata i32 0, metadata !11291, metadata !DIExpression()), !dbg !11293
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11332
  %41 = load i32, i32* %40, align 4, !dbg !11332
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !11332
  %43 = load i32, i32* %42, align 4, !dbg !11332
  br label %44, !dbg !11332

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11342
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11342
  call void @llvm.dbg.value(metadata i32 %46, metadata !11291, metadata !DIExpression()), !dbg !11293
  call void @llvm.dbg.value(metadata i32 %45, metadata !11290, metadata !DIExpression()), !dbg !11293
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11343
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11344
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11345
  %49 = load i8, i8* %48, align 4, !dbg !11345, !range !6617
  %50 = icmp eq i8 %49, 0, !dbg !11345
  br i1 %50, label %52, label %51, !dbg !11347

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11348
  br label %52, !dbg !11350

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11351
  %54 = load i32, i32* %53, align 4, !dbg !11351
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11352
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11353
  %56 = load i8, i8* %55, align 4, !dbg !11353, !range !6617
  %57 = icmp eq i8 %56, 0, !dbg !11353
  br i1 %57, label %60, label %58, !dbg !11355

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11356
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11358
  br label %60, !dbg !11359

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11360
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11361
  br label %62, !dbg !11362

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11293
  ret i32 %63, !dbg !11363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11364 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11368, metadata !DIExpression()), !dbg !11372
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11373
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11373
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11373
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11369, metadata !DIExpression()), !dbg !11372
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11370, metadata !DIExpression()), !dbg !11372
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11374
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11375
  ret void, !dbg !11376
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.168(%struct.device* noundef %0) unnamed_addr #1 !dbg !11377 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11381, metadata !DIExpression()), !dbg !11382
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11383, !srcloc !11385
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.173(%struct.device* noundef %0) #24, !dbg !11386
  ret i1 %2, !dbg !11387
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.170(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11388 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11390, metadata !DIExpression()), !dbg !11393
  call void @llvm.dbg.value(metadata i8* %1, metadata !11391, metadata !DIExpression()), !dbg !11393
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11394
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11394
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11394
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11392, metadata !DIExpression()), !dbg !11393
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11395
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11395
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11396
  ret i32 %8, !dbg !11397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11398 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11402, metadata !DIExpression()), !dbg !11406
  call void @llvm.dbg.value(metadata i8 0, metadata !11403, metadata !DIExpression()), !dbg !11406
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11407
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11407
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11405, metadata !DIExpression(DW_OP_deref)), !dbg !11406
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11408
  call void @llvm.dbg.value(metadata i32 %4, metadata !11404, metadata !DIExpression()), !dbg !11406
  %5 = icmp slt i32 %4, 0, !dbg !11409
  br i1 %5, label %9, label %6, !dbg !11411

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11412
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11405, metadata !DIExpression()), !dbg !11406
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11413
  br label %9, !dbg !11414

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11406
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11415
  ret i32 %10, !dbg !11415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11416 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11418, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.value(metadata i32 12, metadata !11419, metadata !DIExpression()), !dbg !11422
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11423

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11424, metadata !DIExpression()) #23, !dbg !11430
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11433, !srcloc !11434
  call void @llvm.dbg.value(metadata i32 %4, metadata !11429, metadata !DIExpression()) #23, !dbg !11430
  %5 = or i32 %4, 12, !dbg !11435
  call void @llvm.dbg.value(metadata i32 %5, metadata !11420, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata i32 %5, metadata !11437, metadata !DIExpression()) #23, !dbg !11444
  call void @llvm.dbg.value(metadata i32* %2, metadata !11442, metadata !DIExpression()) #23, !dbg !11444
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !11446, !srcloc !11447
  call void @llvm.dbg.value(metadata i32 %6, metadata !11443, metadata !DIExpression()) #23, !dbg !11444
  %7 = icmp eq i32 %6, 0, !dbg !11423
  br i1 %7, label %8, label %3, !dbg !11435, !llvm.loop !11448

8:                                                ; preds = %3
  ret void, !dbg !11449
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11450 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11452, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.value(metadata i32 %1, metadata !11453, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.value(metadata i32 %2, metadata !11454, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.value(metadata i32 0, metadata !11455, metadata !DIExpression()), !dbg !11456
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11457
  %5 = load volatile i32, i32* %4, align 4, !dbg !11457
  %6 = and i32 %5, -5633, !dbg !11457
  %7 = or i32 %2, %1, !dbg !11457
  %8 = or i32 %7, %6, !dbg !11457
  store volatile i32 %8, i32* %4, align 4, !dbg !11457
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11458
  %10 = load volatile i32, i32* %9, align 4, !dbg !11458
  %11 = and i32 %10, -12289, !dbg !11458
  store volatile i32 %11, i32* %9, align 4, !dbg !11458
  ret void, !dbg !11459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11460 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11462, metadata !DIExpression()), !dbg !11463
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11464
  %3 = load volatile i32, i32* %2, align 4, !dbg !11464
  %4 = or i32 %3, 8, !dbg !11464
  store volatile i32 %4, i32* %2, align 4, !dbg !11464
  ret void, !dbg !11465
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11466 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11470, metadata !DIExpression()), !dbg !11473
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11471, metadata !DIExpression()), !dbg !11473
  call void @llvm.dbg.value(metadata i32 0, metadata !11472, metadata !DIExpression()), !dbg !11473
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11474
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11474
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11475
  %5 = load i8, i8* %4, align 4, !dbg !11475
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11476
  ret i32 %6, !dbg !11477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.173(%struct.device* noundef %0) unnamed_addr #1 !dbg !11478 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11480, metadata !DIExpression()), !dbg !11481
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11482
  ret i1 %2, !dbg !11483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !11484 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11486, metadata !DIExpression()), !dbg !11487
  tail call fastcc void @__NVIC_SetPriority.175() #24, !dbg !11488
  store i32 8399, i32* @last_load, align 4, !dbg !11489
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11490
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11491
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11492
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11493
  %3 = or i32 %2, 7, !dbg !11493
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11493
  ret i32 0, !dbg !11494
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.175() unnamed_addr #14 !dbg !11495 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11497, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.value(metadata i32 1, metadata !11498, metadata !DIExpression()), !dbg !11499
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11500
  ret void, !dbg !11503
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11504 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11506, metadata !DIExpression()), !dbg !11508
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11509
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11510
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11511
  %5 = add i32 %4, %3, !dbg !11511
  store i32 %5, i32* @cycle_count, align 4, !dbg !11511
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11512
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11513
  %7 = sub i32 %5, %6, !dbg !11516
  %8 = udiv i32 %7, 8400, !dbg !11517
  call void @llvm.dbg.value(metadata i32 %8, metadata !11507, metadata !DIExpression()), !dbg !11508
  %9 = mul nuw i32 %8, 8400, !dbg !11518
  %10 = add i32 %9, %6, !dbg !11519
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11519
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11520
  tail call void @z_arm_int_exit() #25, !dbg !11521
  ret void, !dbg !11522
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !11523 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11528
  call void @llvm.dbg.value(metadata i32 %1, metadata !11525, metadata !DIExpression()), !dbg !11529
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11530
  call void @llvm.dbg.value(metadata i32 %2, metadata !11526, metadata !DIExpression()), !dbg !11529
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11531
  call void @llvm.dbg.value(metadata i32 %3, metadata !11527, metadata !DIExpression()), !dbg !11529
  %4 = and i32 %2, 65536, !dbg !11532
  %5 = icmp ne i32 %4, 0, !dbg !11532
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11534
  %8 = load i32, i32* @last_load, align 4, !dbg !11529
  br i1 %7, label %9, label %13, !dbg !11534

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11535
  %11 = add i32 %10, %8, !dbg !11535
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11535
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11537
  br label %13, !dbg !11538

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11539
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11540
  %16 = add i32 %14, %15, !dbg !11541
  ret i32 %16, !dbg !11542
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11547, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.value(metadata i1 %1, metadata !11548, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11560
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11561
  br i1 %4, label %5, label %8, !dbg !11561

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11563
  %7 = and i32 %6, -2, !dbg !11563
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11563
  store i32 -16777216, i32* @last_load, align 4, !dbg !11565
  br label %60, !dbg !11566

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11567
  call void @llvm.dbg.value(metadata i32 %9, metadata !11552, metadata !DIExpression()), !dbg !11560
  br i1 %3, label %18, label %10, !dbg !11568

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11568
  call void @llvm.dbg.value(metadata i32 undef, metadata !11547, metadata !DIExpression()), !dbg !11560
  %12 = icmp slt i32 %11, 1, !dbg !11569
  br i1 %12, label %18, label %13, !dbg !11569

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11569
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11569
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11569
  %17 = add nuw nsw i32 %16, 8399, !dbg !11569
  br label %18, !dbg !11569

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11547, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11570, metadata !DIExpression()) #23, !dbg !11577
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11579, !srcloc !11585
  call void @llvm.dbg.value(metadata i32 undef, metadata !11582, metadata !DIExpression()) #23, !dbg !11586
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #23, !dbg !11586
  call void @llvm.dbg.value(metadata i32 undef, metadata !11576, metadata !DIExpression()) #23, !dbg !11577
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11587
  br i1 %21, label %23, label %22, !dbg !11590

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11591
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.179, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11591
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11591
  unreachable, !dbg !11591

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !11579
  call void @llvm.dbg.value(metadata i32 %24, metadata !11582, metadata !DIExpression()) #23, !dbg !11586
  call void @llvm.dbg.value(metadata i32 %24, metadata !11576, metadata !DIExpression()) #23, !dbg !11577
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11593
  call void @llvm.dbg.value(metadata i32 %24, metadata !11553, metadata !DIExpression()), !dbg !11560
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !11594
  call void @llvm.dbg.value(metadata i32 %25, metadata !11558, metadata !DIExpression()), !dbg !11560
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11595
  call void @llvm.dbg.value(metadata i32 %26, metadata !11550, metadata !DIExpression()), !dbg !11560
  %27 = load i32, i32* @cycle_count, align 4, !dbg !11596
  %28 = add i32 %27, %25, !dbg !11596
  store i32 %28, i32* @cycle_count, align 4, !dbg !11596
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11597
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !11598
  %30 = sub i32 %28, %29, !dbg !11599
  call void @llvm.dbg.value(metadata i32 %30, metadata !11559, metadata !DIExpression()), !dbg !11560
  %31 = icmp slt i32 %30, 0, !dbg !11600
  br i1 %31, label %41, label %32, !dbg !11602

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !11549, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.value(metadata i32 undef, metadata !11549, metadata !DIExpression()), !dbg !11560
  %33 = add nuw i32 %19, %30, !dbg !11603
  %34 = urem i32 %33, 8400, !dbg !11605
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !11549, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11560
  %35 = sub nuw nsw i32 %19, %34, !dbg !11606
  call void @llvm.dbg.value(metadata i32 %35, metadata !11549, metadata !DIExpression()), !dbg !11560
  %36 = icmp ugt i32 %35, 1024, !dbg !11607
  br i1 %36, label %37, label %39, !dbg !11607

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !11549, metadata !DIExpression()), !dbg !11560
  %38 = icmp ugt i32 %35, 16766400, !dbg !11608
  br i1 %38, label %41, label %39, !dbg !11610

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !11611
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11612
  call void @llvm.dbg.value(metadata i32 %43, metadata !11551, metadata !DIExpression()), !dbg !11560
  %44 = add nsw i32 %42, -1, !dbg !11613
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11614
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11615
  %45 = icmp ult i32 %26, %43, !dbg !11616
  br i1 %45, label %46, label %51, !dbg !11618

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !11619
  %48 = add i32 %26, %9, !dbg !11621
  %49 = sub i32 %48, %43, !dbg !11622
  %50 = add i32 %49, %47, !dbg !11619
  br label %55, !dbg !11623

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !11624
  %53 = load i32, i32* @cycle_count, align 4, !dbg !11626
  %54 = add i32 %52, %53, !dbg !11626
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !11627
  store i32 %56, i32* @cycle_count, align 4, !dbg !11627
  call void @llvm.dbg.value(metadata i32 undef, metadata !11628, metadata !DIExpression()) #23, !dbg !11634
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11633, metadata !DIExpression()) #23, !dbg !11634
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11636
  br i1 %57, label %59, label %58, !dbg !11639

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11640
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11640
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11640
  unreachable, !dbg !11640

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !11628, metadata !DIExpression()) #23, !dbg !11634
  call void @llvm.dbg.value(metadata i32 %24, metadata !11642, metadata !DIExpression()) #23, !dbg !11645
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !11647, !srcloc !11648
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !11649
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11650 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11570, metadata !DIExpression()) #23, !dbg !11654
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11656, !srcloc !11585
  call void @llvm.dbg.value(metadata i32 undef, metadata !11582, metadata !DIExpression()) #23, !dbg !11658
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #23, !dbg !11658
  call void @llvm.dbg.value(metadata i32 undef, metadata !11576, metadata !DIExpression()) #23, !dbg !11654
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11659
  br i1 %2, label %4, label %3, !dbg !11660

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11661
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.179, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11661
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11661
  unreachable, !dbg !11661

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11582, metadata !DIExpression()) #23, !dbg !11658
  call void @llvm.dbg.value(metadata i32 undef, metadata !11576, metadata !DIExpression()) #23, !dbg !11654
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11662
  call void @llvm.dbg.value(metadata i32 undef, metadata !11652, metadata !DIExpression()), !dbg !11663
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11664
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11665
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !11666
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !11653, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11663
  call void @llvm.dbg.value(metadata i32 undef, metadata !11628, metadata !DIExpression()) #23, !dbg !11667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11633, metadata !DIExpression()) #23, !dbg !11667
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11669
  br i1 %8, label %10, label %9, !dbg !11670

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11671
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11671
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11671
  unreachable, !dbg !11671

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !11672
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !11653, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11663
  %12 = sub i32 %11, %7, !dbg !11673
  call void @llvm.dbg.value(metadata i32 %12, metadata !11653, metadata !DIExpression()), !dbg !11663
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !11656
  call void @llvm.dbg.value(metadata i32 %13, metadata !11582, metadata !DIExpression()) #23, !dbg !11658
  call void @llvm.dbg.value(metadata i32 %13, metadata !11576, metadata !DIExpression()) #23, !dbg !11654
  call void @llvm.dbg.value(metadata i32 %13, metadata !11652, metadata !DIExpression()), !dbg !11663
  call void @llvm.dbg.value(metadata i32 undef, metadata !11628, metadata !DIExpression()) #23, !dbg !11667
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #23, !dbg !11674
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !11676, !srcloc !11648
  %14 = udiv i32 %12, 8400, !dbg !11677
  ret i32 %14, !dbg !11678
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11679 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11570, metadata !DIExpression()) #23, !dbg !11683
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11685, !srcloc !11585
  call void @llvm.dbg.value(metadata i32 undef, metadata !11582, metadata !DIExpression()) #23, !dbg !11687
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #23, !dbg !11687
  call void @llvm.dbg.value(metadata i32 undef, metadata !11576, metadata !DIExpression()) #23, !dbg !11683
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11688
  br i1 %2, label %4, label %3, !dbg !11689

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11690
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.179, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11690
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11690
  unreachable, !dbg !11690

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11582, metadata !DIExpression()) #23, !dbg !11687
  call void @llvm.dbg.value(metadata i32 undef, metadata !11576, metadata !DIExpression()) #23, !dbg !11683
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11691
  call void @llvm.dbg.value(metadata i32 undef, metadata !11681, metadata !DIExpression()), !dbg !11692
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11693
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11694
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !11682, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11692
  call void @llvm.dbg.value(metadata i32 undef, metadata !11628, metadata !DIExpression()) #23, !dbg !11695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11633, metadata !DIExpression()) #23, !dbg !11695
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11697
  br i1 %7, label %9, label %8, !dbg !11698

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11699
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11699
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11699
  unreachable, !dbg !11699

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !11700
  call void @llvm.dbg.value(metadata i32 %10, metadata !11682, metadata !DIExpression()), !dbg !11692
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !11685
  call void @llvm.dbg.value(metadata i32 %11, metadata !11582, metadata !DIExpression()) #23, !dbg !11687
  call void @llvm.dbg.value(metadata i32 %11, metadata !11576, metadata !DIExpression()) #23, !dbg !11683
  call void @llvm.dbg.value(metadata i32 %11, metadata !11681, metadata !DIExpression()), !dbg !11692
  call void @llvm.dbg.value(metadata i32 undef, metadata !11628, metadata !DIExpression()) #23, !dbg !11695
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #23, !dbg !11701
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !11703, !srcloc !11648
  ret i32 %10, !dbg !11704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !11705 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11706
  %2 = icmp eq i32 %1, -16777216, !dbg !11708
  br i1 %2, label %3, label %6, !dbg !11709

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11710
  %5 = or i32 %4, 1, !dbg !11710
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11710
  br label %6, !dbg !11712

6:                                                ; preds = %3, %0
  ret void, !dbg !11713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !11714 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11715
  %2 = and i32 %1, -2, !dbg !11715
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11715
  ret void, !dbg !11716
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !11717 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11743, metadata !DIExpression()), !dbg !11746
  call void @llvm.dbg.value(metadata i8 %1, metadata !11744, metadata !DIExpression()), !dbg !11746
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11745, metadata !DIExpression()), !dbg !11746
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11747
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11747
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11746
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11748
  %8 = load i8, i8* %6, align 4, !dbg !11749
  %9 = zext i8 %8 to i32, !dbg !11750
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11750
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11751
  br i1 %11, label %18, label %24, !dbg !11752

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11746
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11748
  %14 = load i8, i8* %6, align 4, !dbg !11749
  %15 = zext i8 %14 to i32, !dbg !11750
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11750
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11751
  br i1 %17, label %18, label %24, !dbg !11752, !llvm.loop !11753

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11755
  %21 = load i8, i8* %20, align 1, !dbg !11755
  %22 = icmp eq i8 %21, %1, !dbg !11758
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11759
  br i1 %22, label %24, label %12, !dbg !11760

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11746
  ret i32 %25, !dbg !11761
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11762 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11773, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata i8 %1, metadata !11774, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata i32 %2, metadata !11775, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata i32 0, metadata !11778, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata i32 0, metadata !11779, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata i8 0, metadata !11780, metadata !DIExpression()), !dbg !11790
  %4 = icmp eq i8 %1, 0, !dbg !11791
  br i1 %4, label %35, label %5, !dbg !11792

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11791
  br label %9, !dbg !11792

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11780, metadata !DIExpression()), !dbg !11790
  call void @llvm.dbg.value(metadata i32 %29, metadata !11778, metadata !DIExpression()), !dbg !11789
  %8 = icmp eq i32 %34, %6, !dbg !11791
  br i1 %8, label %35, label %9, !dbg !11792, !llvm.loop !11793

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11780, metadata !DIExpression()), !dbg !11790
  call void @llvm.dbg.value(metadata i32 %11, metadata !11778, metadata !DIExpression()), !dbg !11789
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11795
  %13 = load i32, i32* %12, align 4, !dbg !11795
  call void @llvm.dbg.value(metadata i32 %13, metadata !11777, metadata !DIExpression()), !dbg !11789
  %14 = and i32 %13, 31, !dbg !11796
  %15 = icmp ult i32 %14, 16, !dbg !11797
  br i1 %15, label %16, label %20, !dbg !11798

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11799
  %18 = load i32, i32* %17, align 4, !dbg !11799
  %19 = or i32 %18, 32, !dbg !11801
  call void @llvm.dbg.value(metadata i32 %19, metadata !11778, metadata !DIExpression()), !dbg !11789
  br label %28, !dbg !11802

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11803

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11804
  %23 = load i32, i32* %22, align 4, !dbg !11804
  call void @llvm.dbg.value(metadata i32 %23, metadata !11782, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11805
  %24 = lshr i32 %23, 7, !dbg !11806
  %25 = and i32 %24, 16, !dbg !11806
  %26 = or i32 %25, %23, !dbg !11806
  call void @llvm.dbg.value(metadata i32 %26, metadata !11778, metadata !DIExpression()), !dbg !11789
  br label %28, !dbg !11807

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11789
  call void @llvm.dbg.value(metadata i32 %29, metadata !11778, metadata !DIExpression()), !dbg !11789
  %30 = lshr i32 %13, 5, !dbg !11808
  %31 = and i32 %30, 255, !dbg !11808
  call void @llvm.dbg.value(metadata i32 %31, metadata !11776, metadata !DIExpression()), !dbg !11789
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11809
  call void @llvm.dbg.value(metadata i32 %32, metadata !11779, metadata !DIExpression()), !dbg !11789
  %33 = icmp slt i32 %32, 0, !dbg !11810
  %34 = add nuw nsw i32 %10, 1, !dbg !11812
  call void @llvm.dbg.value(metadata i32 %34, metadata !11780, metadata !DIExpression()), !dbg !11790
  br i1 %33, label %35, label %7, !dbg !11813

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11814
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11819, metadata !DIExpression()), !dbg !11823
  call void @llvm.dbg.value(metadata i32 %1, metadata !11820, metadata !DIExpression()), !dbg !11823
  call void @llvm.dbg.value(metadata i32 %2, metadata !11821, metadata !DIExpression()), !dbg !11823
  %4 = icmp ugt i32 %0, 175, !dbg !11824
  br i1 %4, label %16, label %5, !dbg !11826

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11827
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11828
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11828
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11822, metadata !DIExpression()), !dbg !11823
  %9 = add nsw i32 %6, -8, !dbg !11829
  %10 = icmp ult i32 %9, 3, !dbg !11829
  br i1 %10, label %16, label %11, !dbg !11831

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.188(%struct.device* noundef %8) #24, !dbg !11832
  br i1 %12, label %13, label %16, !dbg !11833

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11834
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11835
  br label %16, !dbg !11836

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11823
  ret i32 %17, !dbg !11837
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.188(%struct.device* noundef %0) unnamed_addr #1 !dbg !11838 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11842, metadata !DIExpression()), !dbg !11843
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11844, !srcloc !11846
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.189(%struct.device* noundef %0) #24, !dbg !11847
  ret i1 %2, !dbg !11848
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.189(%struct.device* noundef %0) unnamed_addr #1 !dbg !11849 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11851, metadata !DIExpression()), !dbg !11852
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11853
  ret i1 %2, !dbg !11854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !11855 {
  ret void, !dbg !11856
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11857 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11859, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i32 0, metadata !11860, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i32 2, metadata !11861, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i32 0, metadata !11862, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i32 2, metadata !11863, metadata !DIExpression()), !dbg !11864
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11865
  %2 = and i32 %1, 12, !dbg !11866
  call void @llvm.dbg.value(metadata i32 %2, metadata !11859, metadata !DIExpression()), !dbg !11864
  %3 = icmp eq i32 %2, 8, !dbg !11867
  br i1 %3, label %4, label %18, !dbg !11867

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11868
  call void @llvm.dbg.value(metadata i32 %5, metadata !11862, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11864
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11870
  %7 = and i32 %6, 63, !dbg !11871
  call void @llvm.dbg.value(metadata i32 %7, metadata !11863, metadata !DIExpression()), !dbg !11864
  %8 = udiv i32 16000000, %7, !dbg !11872
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11872
  %10 = lshr i32 %9, 6, !dbg !11872
  %11 = and i32 %10, 511, !dbg !11872
  %12 = mul i32 %11, %8, !dbg !11872
  call void @llvm.dbg.value(metadata i32 %12, metadata !11860, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i32 %12, metadata !11860, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i32 %12, metadata !11860, metadata !DIExpression()), !dbg !11864
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11874
  %14 = lshr i32 %13, 15, !dbg !11875
  %15 = and i32 %14, 6, !dbg !11875
  %16 = add nuw nsw i32 %15, 2, !dbg !11875
  call void @llvm.dbg.value(metadata i32 %16, metadata !11861, metadata !DIExpression()), !dbg !11864
  %17 = udiv i32 %12, %16, !dbg !11876
  br label %18, !dbg !11877

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11878
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11879
  %21 = lshr i32 %20, 4, !dbg !11880
  %22 = and i32 %21, 15, !dbg !11880
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11881
  %24 = load i8, i8* %23, align 1, !dbg !11881
  %25 = zext i8 %24 to i32, !dbg !11881
  call void @llvm.dbg.value(metadata i32 %25, metadata !11859, metadata !DIExpression()), !dbg !11864
  %26 = lshr i32 %19, %25, !dbg !11882
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11882
  ret void, !dbg !11883
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11884 {
  ret i32 0, !dbg !11889
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11890 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11917, metadata !DIExpression()), !dbg !11928
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11929
  br i1 %3, label %317, label %4, !dbg !11931

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11932
  %6 = load i32, i32* %5, align 4, !dbg !11932
  %7 = and i32 %6, 1, !dbg !11934
  %8 = icmp eq i32 %7, 0, !dbg !11935
  br i1 %8, label %66, label %9, !dbg !11936

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11937
  %11 = and i32 %10, 12, !dbg !11937
  %12 = icmp eq i32 %11, 4, !dbg !11940
  br i1 %12, label %21, label %13, !dbg !11941

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11942
  %15 = and i32 %14, 12, !dbg !11942
  %16 = icmp eq i32 %15, 8, !dbg !11943
  br i1 %16, label %17, label %29, !dbg !11944

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11945
  %19 = and i32 %18, 4194304, !dbg !11946
  %20 = icmp eq i32 %19, 0, !dbg !11947
  br i1 %20, label %29, label %21, !dbg !11948

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11949
  %23 = and i32 %22, 131072, !dbg !11949
  %24 = icmp eq i32 %23, 0, !dbg !11949
  br i1 %24, label %66, label %25, !dbg !11952

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11953
  %27 = load i32, i32* %26, align 4, !dbg !11953
  %28 = icmp eq i32 %27, 0, !dbg !11954
  br i1 %28, label %317, label %66, !dbg !11955

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11956
  %31 = load i32, i32* %30, align 4, !dbg !11956
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11960

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11961
  %34 = or i32 %33, 65536, !dbg !11961
  br label %45, !dbg !11961

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11963
  %37 = or i32 %36, 262144, !dbg !11963
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11963
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11963
  %39 = or i32 %38, 65536, !dbg !11963
  br label %45, !dbg !11963

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11966
  %42 = and i32 %41, -65537, !dbg !11966
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11966
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11966
  %44 = and i32 %43, -262145, !dbg !11966
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11968
  %47 = load i32, i32* %30, align 4, !dbg !11969
  %48 = icmp eq i32 %47, 0, !dbg !11971
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !11972
  call void @llvm.dbg.value(metadata i32 %49, metadata !11918, metadata !DIExpression()), !dbg !11928
  call void @llvm.dbg.value(metadata i32 %49, metadata !11918, metadata !DIExpression()), !dbg !11928
  br i1 %48, label %58, label %50, !dbg !11973

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11974
  %52 = and i32 %51, 131072, !dbg !11976
  %53 = icmp eq i32 %52, 0, !dbg !11976
  br i1 %53, label %54, label %66, !dbg !11977

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !11978
  %56 = sub i32 %55, %49, !dbg !11981
  %57 = icmp ugt i32 %56, 100, !dbg !11982
  br i1 %57, label %317, label %50, !dbg !11983, !llvm.loop !11984

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11986
  %60 = and i32 %59, 131072, !dbg !11986
  %61 = icmp eq i32 %60, 0, !dbg !11986
  br i1 %61, label %66, label %62, !dbg !11988

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !11989
  %64 = sub i32 %63, %49, !dbg !11992
  %65 = icmp ugt i32 %64, 100, !dbg !11993
  br i1 %65, label %317, label %58, !dbg !11994, !llvm.loop !11995

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11997
  %68 = and i32 %67, 2, !dbg !11999
  %69 = icmp eq i32 %68, 0, !dbg !12000
  br i1 %69, label %121, label %70, !dbg !12001

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12002
  %72 = and i32 %71, 12, !dbg !12002
  %73 = icmp eq i32 %72, 0, !dbg !12005
  br i1 %73, label %82, label %74, !dbg !12006

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12007
  %76 = and i32 %75, 12, !dbg !12007
  %77 = icmp eq i32 %76, 8, !dbg !12008
  br i1 %77, label %78, label %90, !dbg !12009

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12010
  %80 = and i32 %79, 4194304, !dbg !12011
  %81 = icmp eq i32 %80, 0, !dbg !12012
  br i1 %81, label %82, label %90, !dbg !12013

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12014
  %84 = and i32 %83, 2, !dbg !12014
  %85 = icmp eq i32 %84, 0, !dbg !12014
  br i1 %85, label %114, label %86, !dbg !12017

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12018
  %88 = load i32, i32* %87, align 4, !dbg !12018
  %89 = icmp eq i32 %88, 1, !dbg !12019
  br i1 %89, label %114, label %317, !dbg !12020

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12021
  %92 = load i32, i32* %91, align 4, !dbg !12021
  %93 = icmp eq i32 %92, 0, !dbg !12024
  br i1 %93, label %104, label %94, !dbg !12025

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12026
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12028
  call void @llvm.dbg.value(metadata i32 %95, metadata !11918, metadata !DIExpression()), !dbg !11928
  br label %96, !dbg !12029

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12030
  %98 = and i32 %97, 2, !dbg !12031
  %99 = icmp eq i32 %98, 0, !dbg !12031
  br i1 %99, label %100, label %114, !dbg !12029

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12032
  %102 = sub i32 %101, %95, !dbg !12035
  %103 = icmp ugt i32 %102, 2, !dbg !12036
  br i1 %103, label %317, label %96, !dbg !12037, !llvm.loop !12038

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12040
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12042
  call void @llvm.dbg.value(metadata i32 %105, metadata !11918, metadata !DIExpression()), !dbg !11928
  br label %106, !dbg !12043

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12044
  %108 = and i32 %107, 2, !dbg !12044
  %109 = icmp eq i32 %108, 0, !dbg !12044
  br i1 %109, label %121, label %110, !dbg !12043

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12045
  %112 = sub i32 %111, %105, !dbg !12048
  %113 = icmp ugt i32 %112, 2, !dbg !12049
  br i1 %113, label %317, label %106, !dbg !12050, !llvm.loop !12051

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12053
  %116 = and i32 %115, -249, !dbg !12053
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12053
  %118 = load i32, i32* %117, align 4, !dbg !12053
  %119 = shl i32 %118, 3, !dbg !12053
  %120 = or i32 %119, %116, !dbg !12053
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12053
  br label %121, !dbg !12054

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12054
  %123 = and i32 %122, 8, !dbg !12056
  %124 = icmp eq i32 %123, 0, !dbg !12057
  br i1 %124, label %149, label %125, !dbg !12058

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12059
  %127 = load i32, i32* %126, align 4, !dbg !12059
  %128 = icmp eq i32 %127, 0, !dbg !12062
  br i1 %128, label %139, label %129, !dbg !12063

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12064
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12066
  call void @llvm.dbg.value(metadata i32 %130, metadata !11918, metadata !DIExpression()), !dbg !11928
  br label %131, !dbg !12067

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12068
  %133 = and i32 %132, 2, !dbg !12069
  %134 = icmp eq i32 %133, 0, !dbg !12069
  br i1 %134, label %135, label %149, !dbg !12067

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12070
  %137 = sub i32 %136, %130, !dbg !12073
  %138 = icmp ugt i32 %137, 2, !dbg !12074
  br i1 %138, label %317, label %131, !dbg !12075, !llvm.loop !12076

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12078
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12080
  call void @llvm.dbg.value(metadata i32 %140, metadata !11918, metadata !DIExpression()), !dbg !11928
  br label %141, !dbg !12081

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12082
  %143 = and i32 %142, 2, !dbg !12082
  %144 = icmp eq i32 %143, 0, !dbg !12082
  br i1 %144, label %149, label %145, !dbg !12081

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12083
  %147 = sub i32 %146, %140, !dbg !12086
  %148 = icmp ugt i32 %147, 2, !dbg !12087
  br i1 %148, label %317, label %141, !dbg !12088, !llvm.loop !12089

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12091
  %151 = and i32 %150, 4, !dbg !12092
  %152 = icmp eq i32 %151, 0, !dbg !12093
  br i1 %152, label %221, label %153, !dbg !12094

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11920, metadata !DIExpression()), !dbg !12095
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12096
  %155 = and i32 %154, 268435456, !dbg !12096
  %156 = icmp eq i32 %155, 0, !dbg !12096
  br i1 %156, label %157, label %164, !dbg !12097

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12098
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12098
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11924, metadata !DIExpression()), !dbg !12098
  store volatile i32 0, i32* %2, align 4, !dbg !12098
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12098
  %160 = or i32 %159, 268435456, !dbg !12098
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12098
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12098
  %162 = and i32 %161, 268435456, !dbg !12098
  store volatile i32 %162, i32* %2, align 4, !dbg !12098
  %163 = load volatile i32, i32* %2, align 4, !dbg !12098
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12099
  call void @llvm.dbg.value(metadata i32 1, metadata !11920, metadata !DIExpression()), !dbg !12095
  br label %164, !dbg !12100

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11920, metadata !DIExpression()), !dbg !12095
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12101
  %166 = and i32 %165, 256, !dbg !12101
  %167 = icmp eq i32 %166, 0, !dbg !12101
  br i1 %167, label %168, label %180, !dbg !12103

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12104
  %170 = or i32 %169, 256, !dbg !12104
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12104
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12106
  call void @llvm.dbg.value(metadata i32 %171, metadata !11918, metadata !DIExpression()), !dbg !11928
  br label %172, !dbg !12107

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12108
  %174 = and i32 %173, 256, !dbg !12108
  %175 = icmp eq i32 %174, 0, !dbg !12108
  br i1 %175, label %176, label %180, !dbg !12107

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12109
  %178 = sub i32 %177, %171, !dbg !12112
  %179 = icmp ugt i32 %178, 2, !dbg !12113
  br i1 %179, label %317, label %172, !dbg !12114, !llvm.loop !12115

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12117
  %182 = load i32, i32* %181, align 4, !dbg !12117
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12120

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12121
  %185 = or i32 %184, 1, !dbg !12121
  br label %196, !dbg !12121

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12123
  %188 = or i32 %187, 4, !dbg !12123
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12123
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12123
  %190 = or i32 %189, 1, !dbg !12123
  br label %196, !dbg !12123

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12126
  %193 = and i32 %192, -2, !dbg !12126
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12126
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12126
  %195 = and i32 %194, -5, !dbg !12126
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12128
  %198 = load i32, i32* %181, align 4, !dbg !12129
  %199 = icmp eq i32 %198, 0, !dbg !12131
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12132
  call void @llvm.dbg.value(metadata i32 %200, metadata !11918, metadata !DIExpression()), !dbg !11928
  call void @llvm.dbg.value(metadata i32 %200, metadata !11918, metadata !DIExpression()), !dbg !11928
  br i1 %199, label %209, label %201, !dbg !12133

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12134
  %203 = and i32 %202, 2, !dbg !12136
  %204 = icmp eq i32 %203, 0, !dbg !12136
  br i1 %204, label %205, label %217, !dbg !12137

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12138
  %207 = sub i32 %206, %200, !dbg !12141
  %208 = icmp ugt i32 %207, 5000, !dbg !12142
  br i1 %208, label %317, label %201, !dbg !12143, !llvm.loop !12144

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12146
  %211 = and i32 %210, 2, !dbg !12146
  %212 = icmp eq i32 %211, 0, !dbg !12146
  br i1 %212, label %217, label %213, !dbg !12148

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12149
  %215 = sub i32 %214, %200, !dbg !12152
  %216 = icmp ugt i32 %215, 5000, !dbg !12153
  br i1 %216, label %317, label %209, !dbg !12154, !llvm.loop !12155

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12157

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12158
  %220 = and i32 %219, -268435457, !dbg !12158
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12158
  br label %221, !dbg !12161

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12162
  %223 = load i32, i32* %222, align 4, !dbg !12162
  %224 = icmp eq i32 %223, 0, !dbg !12164
  br i1 %224, label %316, label %225, !dbg !12165

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12166
  %227 = and i32 %226, 12, !dbg !12166
  %228 = icmp eq i32 %227, 8, !dbg !12169
  br i1 %228, label %277, label %229, !dbg !12170

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12171
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12174
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12174
  call void @llvm.dbg.value(metadata i32 %231, metadata !11918, metadata !DIExpression()), !dbg !11928
  call void @llvm.dbg.value(metadata i32 %231, metadata !11918, metadata !DIExpression()), !dbg !11928
  br i1 %230, label %232, label %269, !dbg !12175

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12176
  %234 = and i32 %233, 33554432, !dbg !12176
  %235 = icmp eq i32 %234, 0, !dbg !12176
  br i1 %235, label %240, label %236, !dbg !12178

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12179
  %238 = sub i32 %237, %231, !dbg !12182
  %239 = icmp ugt i32 %238, 2, !dbg !12183
  br i1 %239, label %317, label %232, !dbg !12184, !llvm.loop !12185

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12187
  %242 = load i32, i32* %241, align 4, !dbg !12187
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12187
  %244 = load i32, i32* %243, align 4, !dbg !12187
  %245 = or i32 %244, %242, !dbg !12187
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12187
  %247 = load i32, i32* %246, align 4, !dbg !12187
  %248 = shl i32 %247, 6, !dbg !12187
  %249 = or i32 %245, %248, !dbg !12187
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12187
  %251 = load i32, i32* %250, align 4, !dbg !12187
  %252 = shl i32 %251, 15, !dbg !12187
  %253 = add i32 %252, -65536, !dbg !12187
  %254 = and i32 %253, -65536, !dbg !12187
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12187
  %256 = load i32, i32* %255, align 4, !dbg !12187
  %257 = shl i32 %256, 24, !dbg !12187
  %258 = or i32 %249, %257, !dbg !12187
  %259 = or i32 %258, %254, !dbg !12187
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12187
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12188
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12189
  call void @llvm.dbg.value(metadata i32 %260, metadata !11918, metadata !DIExpression()), !dbg !11928
  br label %261, !dbg !12190

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12191
  %263 = and i32 %262, 33554432, !dbg !12192
  %264 = icmp eq i32 %263, 0, !dbg !12192
  br i1 %264, label %265, label %316, !dbg !12190

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12193
  %267 = sub i32 %266, %260, !dbg !12196
  %268 = icmp ugt i32 %267, 2, !dbg !12197
  br i1 %268, label %317, label %261, !dbg !12198, !llvm.loop !12199

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12201
  %271 = and i32 %270, 33554432, !dbg !12201
  %272 = icmp eq i32 %271, 0, !dbg !12201
  br i1 %272, label %316, label %273, !dbg !12203

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12204
  %275 = sub i32 %274, %231, !dbg !12207
  %276 = icmp ugt i32 %275, 2, !dbg !12208
  br i1 %276, label %317, label %269, !dbg !12209, !llvm.loop !12210

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12212
  br i1 %278, label %317, label %279, !dbg !12215

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12216
  call void @llvm.dbg.value(metadata i32 %280, metadata !11919, metadata !DIExpression()), !dbg !11928
  %281 = and i32 %280, 4194304, !dbg !12218
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12220
  %283 = load i32, i32* %282, align 4, !dbg !12220
  %284 = icmp eq i32 %281, %283, !dbg !12221
  br i1 %284, label %285, label %317, !dbg !12222

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12223
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12224
  %288 = load i32, i32* %287, align 4, !dbg !12224
  %289 = icmp eq i32 %286, %288, !dbg !12225
  br i1 %289, label %290, label %317, !dbg !12226

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12227
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12228
  %293 = load i32, i32* %292, align 4, !dbg !12228
  %294 = shl i32 %293, 6, !dbg !12229
  %295 = icmp eq i32 %291, %294, !dbg !12230
  br i1 %295, label %296, label %317, !dbg !12231

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12232
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12233
  %299 = load i32, i32* %298, align 4, !dbg !12233
  %300 = shl i32 %299, 15, !dbg !12234
  %301 = add i32 %300, -65536, !dbg !12234
  %302 = and i32 %301, -65536, !dbg !12234
  %303 = icmp eq i32 %297, %302, !dbg !12235
  br i1 %303, label %304, label %317, !dbg !12236

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12237
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12238
  %307 = load i32, i32* %306, align 4, !dbg !12238
  %308 = shl i32 %307, 24, !dbg !12239
  %309 = icmp eq i32 %305, %308, !dbg !12240
  br i1 %309, label %310, label %317, !dbg !12241

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !12242
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12243
  %313 = load i32, i32* %312, align 4, !dbg !12243
  %314 = shl i32 %313, 28, !dbg !12244
  %315 = icmp eq i32 %311, %314, !dbg !12245
  br i1 %315, label %316, label %317, !dbg !12246

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !12247

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11928
  ret i32 %318, !dbg !12248
}

; Function Attrs: optsize
declare !dbg !12249 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.ztest_unit_test_stats* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12251 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12264, metadata !DIExpression()), !dbg !12267
  call void @llvm.dbg.value(metadata i32 %1, metadata !12265, metadata !DIExpression()), !dbg !12267
  %3 = icmp eq %struct.ztest_unit_test_stats* %0, null, !dbg !12268
  br i1 %3, label %115, label %4, !dbg !12270

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12271
  %6 = and i32 %5, 7, !dbg !12271
  %7 = icmp ult i32 %6, %1, !dbg !12273
  br i1 %7, label %8, label %13, !dbg !12274

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12275
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12275
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12277
  %11 = and i32 %10, 7, !dbg !12277
  %12 = icmp eq i32 %11, %1, !dbg !12279
  br i1 %12, label %13, label %115, !dbg !12280

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12281
  %15 = load i32, i32* %14, align 4, !dbg !12281
  %16 = and i32 %15, 2, !dbg !12283
  %17 = icmp eq i32 %16, 0, !dbg !12284
  br i1 %17, label %39, label %18, !dbg !12285

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12286
  %20 = icmp eq i32 %19, 0, !dbg !12289
  br i1 %20, label %25, label %21, !dbg !12290

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12291
  %23 = or i32 %22, 7168, !dbg !12291
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12291
  %24 = load i32, i32* %14, align 4, !dbg !12293
  br label %25, !dbg !12295

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12293
  %27 = and i32 %26, 8, !dbg !12296
  %28 = icmp eq i32 %27, 0, !dbg !12297
  br i1 %28, label %32, label %29, !dbg !12298

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12299
  %31 = or i32 %30, 57344, !dbg !12299
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12299
  br label %32, !dbg !12301

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12302
  %34 = and i32 %33, -241, !dbg !12302
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12302
  %36 = load i32, i32* %35, align 4, !dbg !12302
  %37 = or i32 %34, %36, !dbg !12302
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12302
  %38 = load i32, i32* %14, align 4, !dbg !12303
  br label %39, !dbg !12305

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12303
  %41 = and i32 %40, 1, !dbg !12306
  %42 = icmp eq i32 %41, 0, !dbg !12307
  br i1 %42, label %73, label %43, !dbg !12308

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12309
  %45 = load i32, i32* %44, align 4, !dbg !12309
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12312

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12313
  %48 = and i32 %47, 131072, !dbg !12316
  %49 = icmp eq i32 %48, 0, !dbg !12316
  br i1 %49, label %115, label %58, !dbg !12317

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12318
  %52 = and i32 %51, 33554432, !dbg !12322
  %53 = icmp eq i32 %52, 0, !dbg !12322
  br i1 %53, label %115, label %58, !dbg !12323

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12324
  %56 = and i32 %55, 2, !dbg !12327
  %57 = icmp eq i32 %56, 0, !dbg !12327
  br i1 %57, label %115, label %58, !dbg !12328

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12329
  %60 = and i32 %59, -4, !dbg !12329
  %61 = or i32 %60, %45, !dbg !12329
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12329
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12330
  call void @llvm.dbg.value(metadata i32 %62, metadata !12266, metadata !DIExpression()), !dbg !12267
  br label %63, !dbg !12331

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12332
  %65 = and i32 %64, 12, !dbg !12332
  %66 = load i32, i32* %44, align 4, !dbg !12333
  %67 = shl i32 %66, 2, !dbg !12334
  %68 = icmp eq i32 %65, %67, !dbg !12335
  br i1 %68, label %73, label %69, !dbg !12331

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12336
  %71 = sub i32 %70, %62, !dbg !12339
  %72 = icmp ugt i32 %71, 5000, !dbg !12340
  br i1 %72, label %115, label %63, !dbg !12341, !llvm.loop !12342

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12344
  %75 = and i32 %74, 7, !dbg !12344
  %76 = icmp ugt i32 %75, %1, !dbg !12346
  br i1 %76, label %77, label %82, !dbg !12347

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12348
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12348
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12350
  %80 = and i32 %79, 7, !dbg !12350
  %81 = icmp eq i32 %80, %1, !dbg !12352
  br i1 %81, label %82, label %115, !dbg !12353

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12354
  %84 = and i32 %83, 4, !dbg !12356
  %85 = icmp eq i32 %84, 0, !dbg !12357
  br i1 %85, label %93, label %86, !dbg !12358

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12359
  %88 = and i32 %87, -7169, !dbg !12359
  %89 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12359
  %90 = load i32, i32* %89, align 4, !dbg !12359
  %91 = or i32 %88, %90, !dbg !12359
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12359
  %92 = load i32, i32* %14, align 4, !dbg !12361
  br label %93, !dbg !12363

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12361
  %95 = and i32 %94, 8, !dbg !12364
  %96 = icmp eq i32 %95, 0, !dbg !12365
  br i1 %96, label %104, label %97, !dbg !12366

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12367
  %99 = and i32 %98, -57345, !dbg !12367
  %100 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12367
  %101 = load i32, i32* %100, align 4, !dbg !12367
  %102 = shl i32 %101, 3, !dbg !12367
  %103 = or i32 %102, %99, !dbg !12367
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12367
  br label %104, !dbg !12369

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12370
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12371
  %107 = lshr i32 %106, 4, !dbg !12372
  %108 = and i32 %107, 15, !dbg !12372
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12373
  %110 = load i8, i8* %109, align 1, !dbg !12373
  %111 = zext i8 %110 to i32, !dbg !12373
  %112 = lshr i32 %105, %111, !dbg !12374
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12375
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12376
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12377
  br label %115, !dbg !12378

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12267
  ret i32 %116, !dbg !12379
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12380 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12382, metadata !DIExpression()), !dbg !12386
  call void @llvm.dbg.value(metadata i32 0, metadata !12383, metadata !DIExpression()), !dbg !12386
  call void @llvm.dbg.value(metadata i32 0, metadata !12384, metadata !DIExpression()), !dbg !12386
  call void @llvm.dbg.value(metadata i32 0, metadata !12385, metadata !DIExpression()), !dbg !12386
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12387
  %2 = and i32 %1, 12, !dbg !12388
  %3 = icmp eq i32 %2, 8, !dbg !12389
  br i1 %3, label %4, label %21, !dbg !12389

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12390
  %6 = and i32 %5, 63, !dbg !12393
  call void @llvm.dbg.value(metadata i32 %6, metadata !12382, metadata !DIExpression()), !dbg !12386
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12394
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12396
  %9 = lshr i32 %8, 6, !dbg !12396
  %10 = and i32 %9, 511, !dbg !12396
  %11 = zext i32 %10 to i64, !dbg !12396
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !12396
  %13 = zext i32 %6 to i64, !dbg !12396
  %14 = udiv i64 %12, %13, !dbg !12396
  %15 = trunc i64 %14 to i32, !dbg !12396
  call void @llvm.dbg.value(metadata i32 %15, metadata !12383, metadata !DIExpression()), !dbg !12386
  call void @llvm.dbg.value(metadata i32 %15, metadata !12383, metadata !DIExpression()), !dbg !12386
  call void @llvm.dbg.value(metadata i32 %15, metadata !12383, metadata !DIExpression()), !dbg !12386
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12397
  %17 = lshr i32 %16, 15, !dbg !12398
  %18 = and i32 %17, 6, !dbg !12398
  %19 = add nuw nsw i32 %18, 2, !dbg !12398
  call void @llvm.dbg.value(metadata i32 %19, metadata !12384, metadata !DIExpression()), !dbg !12386
  %20 = udiv i32 %15, %19, !dbg !12399
  call void @llvm.dbg.value(metadata i32 %20, metadata !12385, metadata !DIExpression()), !dbg !12386
  br label %21, !dbg !12400

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !12401
  call void @llvm.dbg.value(metadata i32 %22, metadata !12385, metadata !DIExpression()), !dbg !12386
  ret i32 %22, !dbg !12402
}

; Function Attrs: optsize
declare !dbg !12403 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12406 {
  %4 = alloca %struct.ztest_unit_test_stats, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12410, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 %1, metadata !12411, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 %2, metadata !12412, metadata !DIExpression()), !dbg !12427
  %6 = bitcast %struct.ztest_unit_test_stats* %4 to i8*, !dbg !12428
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !12428
  call void @llvm.dbg.declare(metadata %struct.ztest_unit_test_stats* %4, metadata !12413, metadata !DIExpression()), !dbg !12429
  %7 = icmp eq i32 %0, 0, !dbg !12430
  br i1 %7, label %8, label %24, !dbg !12431

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !12432
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !12432
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12423, metadata !DIExpression()), !dbg !12432
  store volatile i32 0, i32* %5, align 4, !dbg !12432
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12432
  %11 = or i32 %10, 1, !dbg !12432
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12432
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12432
  %13 = and i32 %12, 1, !dbg !12432
  store volatile i32 %13, i32* %5, align 4, !dbg !12432
  %14 = load volatile i32, i32* %5, align 4, !dbg !12432
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !12433
  %15 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12434
  store i32 256, i32* %15, align 4, !dbg !12435
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12436
  store i32 2, i32* %16, align 4, !dbg !12437
  %17 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12438
  store i32 3, i32* %17, align 4, !dbg !12439
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12440
  store i32 0, i32* %18, align 4, !dbg !12441
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12442
  store i32 0, i32* %19, align 4, !dbg !12443
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12444
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12445
  %21 = and i32 %20, -123731969, !dbg !12445
  %22 = or i32 %2, %1, !dbg !12445
  %23 = or i32 %22, %21, !dbg !12445
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12445
  br label %24, !dbg !12446

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !12447
  ret void, !dbg !12447
}

; Function Attrs: optsize
declare !dbg !12448 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.ztest_unit_test_stats* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !12452 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12453
  ret void, !dbg !12454
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !12455 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12456
  ret void, !dbg !12457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !12458 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12459
  ret i32 %1, !dbg !12460
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !12461 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12462
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12463
  %3 = lshr i32 %2, 10, !dbg !12464
  %4 = and i32 %3, 7, !dbg !12464
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12465
  %6 = load i8, i8* %5, align 1, !dbg !12465
  %7 = zext i8 %6 to i32, !dbg !12465
  %8 = lshr i32 %1, %7, !dbg !12466
  ret i32 %8, !dbg !12467
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !12468 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12469
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12470
  %3 = lshr i32 %2, 13, !dbg !12471
  %4 = and i32 %3, 7, !dbg !12471
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12472
  %6 = load i8, i8* %5, align 1, !dbg !12472
  %7 = zext i8 %6 to i32, !dbg !12472
  %8 = lshr i32 %1, %7, !dbg !12473
  ret i32 %8, !dbg !12474
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12475 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12479, metadata !DIExpression()), !dbg !12480
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12481
  store i32 15, i32* %2, align 4, !dbg !12482
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12483
  %4 = and i32 %3, 262144, !dbg !12485
  %5 = icmp eq i32 %4, 0, !dbg !12486
  br i1 %5, label %8, label %6, !dbg !12487

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12488
  store i32 327680, i32* %7, align 4, !dbg !12490
  br label %15, !dbg !12491

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12492
  %10 = and i32 %9, 65536, !dbg !12494
  %11 = icmp eq i32 %10, 0, !dbg !12495
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12496
  br i1 %11, label %14, label %13, !dbg !12497

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12498
  br label %15, !dbg !12500

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12501
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12503
  %17 = and i32 %16, 1, !dbg !12505
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12506
  store i32 %17, i32* %18, align 4, !dbg !12508
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12509
  %20 = lshr i32 %19, 3, !dbg !12510
  %21 = and i32 %20, 31, !dbg !12510
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12511
  store i32 %21, i32* %22, align 4, !dbg !12512
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12513
  %24 = and i32 %23, 4, !dbg !12515
  %25 = icmp eq i32 %24, 0, !dbg !12516
  br i1 %25, label %28, label %26, !dbg !12517

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12518
  store i32 5, i32* %27, align 4, !dbg !12520
  br label %35, !dbg !12521

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12522
  %30 = and i32 %29, 1, !dbg !12524
  %31 = icmp eq i32 %30, 0, !dbg !12525
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12526
  br i1 %31, label %34, label %33, !dbg !12527

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12528
  br label %35, !dbg !12530

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12531
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12533
  %37 = and i32 %36, 1, !dbg !12535
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12536
  store i32 %37, i32* %38, align 4, !dbg !12538
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12539
  %40 = and i32 %39, 16777216, !dbg !12541
  %41 = icmp eq i32 %40, 0, !dbg !12542
  %42 = select i1 %41, i32 1, i32 2, !dbg !12543
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12544
  store i32 %42, i32* %43, align 4, !dbg !12546
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12547
  %45 = and i32 %44, 4194304, !dbg !12548
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12549
  store i32 %45, i32* %46, align 4, !dbg !12550
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12551
  %48 = and i32 %47, 63, !dbg !12552
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12553
  store i32 %48, i32* %49, align 4, !dbg !12554
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12555
  %51 = lshr i32 %50, 6, !dbg !12556
  %52 = and i32 %51, 511, !dbg !12556
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12557
  store i32 %52, i32* %53, align 4, !dbg !12558
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12559
  %55 = shl i32 %54, 1, !dbg !12560
  %56 = and i32 %55, 393216, !dbg !12560
  %57 = add nuw nsw i32 %56, 131072, !dbg !12560
  %58 = lshr exact i32 %57, 16, !dbg !12561
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12562
  store i32 %58, i32* %59, align 4, !dbg !12563
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12564
  %61 = lshr i32 %60, 24, !dbg !12565
  %62 = and i32 %61, 15, !dbg !12565
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12566
  store i32 %62, i32* %63, align 4, !dbg !12567
  ret void, !dbg !12568
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.ztest_unit_test_stats* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !12569 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12573, metadata !DIExpression()), !dbg !12575
  call void @llvm.dbg.value(metadata i32* %1, metadata !12574, metadata !DIExpression()), !dbg !12575
  %3 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12576
  store i32 15, i32* %3, align 4, !dbg !12577
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12578
  %5 = and i32 %4, 3, !dbg !12579
  %6 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12580
  store i32 %5, i32* %6, align 4, !dbg !12581
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12582
  %8 = and i32 %7, 240, !dbg !12583
  %9 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12584
  store i32 %8, i32* %9, align 4, !dbg !12585
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12586
  %11 = and i32 %10, 7168, !dbg !12587
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12588
  store i32 %11, i32* %12, align 4, !dbg !12589
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12590
  %14 = lshr i32 %13, 3, !dbg !12591
  %15 = and i32 %14, 7168, !dbg !12591
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12592
  store i32 %15, i32* %16, align 4, !dbg !12593
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12594
  %18 = and i32 %17, 7, !dbg !12595
  store i32 %18, i32* %1, align 4, !dbg !12596
  ret void, !dbg !12597
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12598 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12599
  %2 = and i32 %1, 128, !dbg !12599
  %3 = icmp eq i32 %2, 0, !dbg !12599
  br i1 %3, label %5, label %4, !dbg !12601

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !12602
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12604
  br label %5, !dbg !12605

5:                                                ; preds = %4, %0
  ret void, !dbg !12606
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12607 {
  ret void, !dbg !12608
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !12609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12612, metadata !DIExpression()), !dbg !12613
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !12614
  ret void, !dbg !12615
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !12616 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12619, metadata !DIExpression()), !dbg !12621
  call void @llvm.dbg.value(metadata i32 1000, metadata !12620, metadata !DIExpression()), !dbg !12621
  %2 = udiv i32 %0, 1000, !dbg !12622
  %3 = add nsw i32 %2, -1, !dbg !12623
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12624
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12625
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12626
  ret void, !dbg !12627
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !12628 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12630, metadata !DIExpression()), !dbg !12632
  %3 = bitcast i32* %2 to i8*, !dbg !12633
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12633
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12631, metadata !DIExpression()), !dbg !12634
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12635
  store volatile i32 %4, i32* %2, align 4, !dbg !12634
  %5 = load volatile i32, i32* %2, align 4, !dbg !12636
  %6 = icmp eq i32 %0, -1, !dbg !12637
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12630, metadata !DIExpression()), !dbg !12632
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12632
  call void @llvm.dbg.value(metadata i32 %8, metadata !12630, metadata !DIExpression()), !dbg !12632
  br label %9, !dbg !12639

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12630, metadata !DIExpression()), !dbg !12632
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12640
  call void @llvm.dbg.value(metadata i32 undef, metadata !12630, metadata !DIExpression()), !dbg !12632
  %12 = shl i32 %11, 15, !dbg !12632
  %13 = ashr i32 %12, 31, !dbg !12632
  %14 = add i32 %13, %10, !dbg !12632
  call void @llvm.dbg.value(metadata i32 %14, metadata !12630, metadata !DIExpression()), !dbg !12632
  %15 = icmp eq i32 %14, 0, !dbg !12639
  br i1 %15, label %16, label %9, !dbg !12639

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12643
  ret void, !dbg !12643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !12644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12646, metadata !DIExpression()), !dbg !12647
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12648
  ret void, !dbg !12649
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !12650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12655, metadata !DIExpression()), !dbg !12660
  call void @llvm.dbg.value(metadata i32 0, metadata !12658, metadata !DIExpression()), !dbg !12660
  call void @llvm.dbg.value(metadata i32 0, metadata !12659, metadata !DIExpression()), !dbg !12660
  %2 = icmp eq i32 %0, 0, !dbg !12661
  br i1 %2, label %50, label %3, !dbg !12663

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12664
  %5 = icmp eq i32 %4, 49152, !dbg !12667
  br i1 %5, label %6, label %15, !dbg !12668

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12658, metadata !DIExpression()), !dbg !12660
  %7 = add i32 %0, -64000001, !dbg !12669
  %8 = icmp ult i32 %7, 26000000, !dbg !12669
  br i1 %8, label %15, label %9, !dbg !12669

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !12672
  %11 = select i1 %10, i32 0, i32 3, !dbg !12674
  call void @llvm.dbg.value(metadata i32 %11, metadata !12658, metadata !DIExpression()), !dbg !12660
  %12 = add i32 %0, -30000001, !dbg !12675
  %13 = icmp ult i32 %12, 60000000, !dbg !12675
  %14 = select i1 %13, i32 1, i32 %11, !dbg !12675
  call void @llvm.dbg.value(metadata i32 %14, metadata !12658, metadata !DIExpression()), !dbg !12660
  br label %15, !dbg !12675

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !12660
  call void @llvm.dbg.value(metadata i32 %16, metadata !12658, metadata !DIExpression()), !dbg !12660
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12678
  %18 = icmp eq i32 %17, 32768, !dbg !12680
  br i1 %18, label %19, label %27, !dbg !12681

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !12682
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !12685
  br i1 %22, label %27, label %23, !dbg !12685

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !12686
  %25 = and i1 %24, %21, !dbg !12689
  %26 = select i1 %25, i32 1, i32 %16, !dbg !12689
  call void @llvm.dbg.value(metadata i32 %26, metadata !12658, metadata !DIExpression()), !dbg !12660
  br label %27, !dbg !12689

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !12690
  call void @llvm.dbg.value(metadata i32 %28, metadata !12658, metadata !DIExpression()), !dbg !12660
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12691
  %30 = icmp eq i32 %29, 16384, !dbg !12693
  br i1 %30, label %31, label %39, !dbg !12694

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !12695
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !12698
  br i1 %34, label %39, label %35, !dbg !12698

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !12699
  %37 = select i1 %36, i1 %33, i1 false, !dbg !12702
  %38 = select i1 %37, i32 1, i32 %28, !dbg !12702
  call void @llvm.dbg.value(metadata i32 %38, metadata !12658, metadata !DIExpression()), !dbg !12660
  br label %39, !dbg !12702

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !12690
  call void @llvm.dbg.value(metadata i32 %40, metadata !12658, metadata !DIExpression()), !dbg !12660
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #24, !dbg !12703
  call void @llvm.dbg.value(metadata i32 2, metadata !12656, metadata !DIExpression()), !dbg !12660
  br label %41, !dbg !12704

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !12690
  call void @llvm.dbg.value(metadata i32 %42, metadata !12656, metadata !DIExpression()), !dbg !12660
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !12705
  call void @llvm.dbg.value(metadata i32 %43, metadata !12657, metadata !DIExpression()), !dbg !12660
  %44 = add nsw i32 %42, -1, !dbg !12707
  call void @llvm.dbg.value(metadata i32 %44, metadata !12656, metadata !DIExpression()), !dbg !12660
  %45 = icmp ne i32 %43, %40, !dbg !12708
  %46 = icmp ne i32 %44, 0, !dbg !12709
  %47 = select i1 %45, i1 %46, i1 false, !dbg !12709
  br i1 %47, label %41, label %48, !dbg !12710, !llvm.loop !12711

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !12713
  call void @llvm.dbg.value(metadata i32 %51, metadata !12659, metadata !DIExpression()), !dbg !12660
  ret i32 %51, !dbg !12714
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !12715 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12717
  %2 = and i32 %1, 49152, !dbg !12717
  ret i32 %2, !dbg !12718
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !12719 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12721, metadata !DIExpression()), !dbg !12722
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12723
  %3 = and i32 %2, -8, !dbg !12723
  %4 = or i32 %3, %0, !dbg !12723
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12723
  ret void, !dbg !12724
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !12725 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12726
  %2 = and i32 %1, 7, !dbg !12726
  ret i32 %2, !dbg !12727
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.ztest_suite_stats* nocapture noundef readonly %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !12728 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %0, metadata !12746, metadata !DIExpression()), !dbg !12750
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12747, metadata !DIExpression()), !dbg !12750
  call void @llvm.dbg.value(metadata i32 0, metadata !12748, metadata !DIExpression()), !dbg !12750
  call void @llvm.dbg.value(metadata i32 0, metadata !12749, metadata !DIExpression()), !dbg !12750
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12751
  %4 = icmp eq i32 %3, 0, !dbg !12753
  br i1 %4, label %5, label %21, !dbg !12754

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.ztest_suite_stats* noundef %0) #24, !dbg !12755
  call void @llvm.dbg.value(metadata i32 %6, metadata !12749, metadata !DIExpression()), !dbg !12750
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.198() #24, !dbg !12757
  %8 = icmp eq i32 %7, 1, !dbg !12759
  br i1 %8, label %13, label %9, !dbg !12760

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.199() #24, !dbg !12761
  br label %10, !dbg !12763

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.198() #24, !dbg !12764
  %12 = icmp eq i32 %11, 1, !dbg !12765
  br i1 %12, label %13, label %10, !dbg !12763, !llvm.loop !12766

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 0, !dbg !12768
  %15 = load i32, i32* %14, align 4, !dbg !12768
  %16 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 1, !dbg !12769
  %17 = load i32, i32* %16, align 4, !dbg !12769
  %18 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 2, !dbg !12770
  %19 = load i32, i32* %18, align 4, !dbg !12770
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.200(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !12771
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.ztest_suite_stats* noundef %1) #24, !dbg !12772
  call void @llvm.dbg.value(metadata i32 %20, metadata !12748, metadata !DIExpression()), !dbg !12750
  br label %21, !dbg !12773

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12774
  call void @llvm.dbg.value(metadata i32 %22, metadata !12748, metadata !DIExpression()), !dbg !12750
  ret i32 %22, !dbg !12775
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !12776 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12780, metadata !DIExpression()), !dbg !12781
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.202() #24, !dbg !12782
  %2 = icmp ne i32 %1, 0, !dbg !12784
  call void @llvm.dbg.value(metadata i1 %2, metadata !12780, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12781
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !12785
  %4 = icmp ne i32 %3, 0, !dbg !12787
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12788
  %6 = zext i1 %5 to i32, !dbg !12788
  call void @llvm.dbg.value(metadata i32 %6, metadata !12780, metadata !DIExpression()), !dbg !12781
  ret i32 %6, !dbg !12789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #8 !dbg !12790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12794, metadata !DIExpression()), !dbg !12797
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12795, metadata !DIExpression()), !dbg !12797
  call void @llvm.dbg.value(metadata i32 0, metadata !12796, metadata !DIExpression()), !dbg !12797
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12798
  %4 = load i32, i32* %3, align 4, !dbg !12798
  %5 = and i32 %4, 63, !dbg !12799
  %6 = udiv i32 %0, %5, !dbg !12800
  call void @llvm.dbg.value(metadata i32 %6, metadata !12796, metadata !DIExpression()), !dbg !12797
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12801
  %8 = load i32, i32* %7, align 4, !dbg !12801
  %9 = and i32 %8, 511, !dbg !12802
  %10 = mul i32 %9, %6, !dbg !12803
  call void @llvm.dbg.value(metadata i32 %10, metadata !12796, metadata !DIExpression()), !dbg !12797
  %11 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12804
  %12 = load i32, i32* %11, align 4, !dbg !12804
  %13 = lshr i32 %12, 15, !dbg !12805
  %14 = and i32 %13, 131070, !dbg !12805
  %15 = add nuw nsw i32 %14, 2, !dbg !12805
  %16 = udiv i32 %10, %15, !dbg !12806
  call void @llvm.dbg.value(metadata i32 %16, metadata !12796, metadata !DIExpression()), !dbg !12797
  ret i32 %16, !dbg !12807
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.198() unnamed_addr #15 !dbg !12808 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12809
  %2 = lshr i32 %1, 1, !dbg !12810
  %3 = and i32 %2, 1, !dbg !12810
  ret i32 %3, !dbg !12811
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.199() unnamed_addr #14 !dbg !12812 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12813
  %2 = or i32 %1, 1, !dbg !12813
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12813
  ret void, !dbg !12814
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.200(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12817, metadata !DIExpression()), !dbg !12821
  call void @llvm.dbg.value(metadata i32 %1, metadata !12818, metadata !DIExpression()), !dbg !12821
  call void @llvm.dbg.value(metadata i32 %2, metadata !12819, metadata !DIExpression()), !dbg !12821
  call void @llvm.dbg.value(metadata i32 %3, metadata !12820, metadata !DIExpression()), !dbg !12821
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12822
  %6 = and i32 %5, -4227072, !dbg !12822
  %7 = or i32 %1, %0, !dbg !12822
  %8 = shl i32 %2, 6, !dbg !12822
  %9 = or i32 %7, %8, !dbg !12822
  %10 = or i32 %9, %6, !dbg !12822
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12822
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12823
  %12 = and i32 %11, -196609, !dbg !12823
  %13 = or i32 %12, %3, !dbg !12823
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12823
  ret void, !dbg !12824
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12829, metadata !DIExpression()), !dbg !12833
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12830, metadata !DIExpression()), !dbg !12833
  call void @llvm.dbg.value(metadata i32 0, metadata !12831, metadata !DIExpression()), !dbg !12833
  call void @llvm.dbg.value(metadata i32 0, metadata !12832, metadata !DIExpression()), !dbg !12833
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12834
  %4 = load i32, i32* %3, align 4, !dbg !12834
  %5 = lshr i32 %4, 4, !dbg !12834
  %6 = and i32 %5, 15, !dbg !12834
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12834
  %8 = load i8, i8* %7, align 1, !dbg !12834
  %9 = zext i8 %8 to i32, !dbg !12834
  %10 = lshr i32 %0, %9, !dbg !12834
  call void @llvm.dbg.value(metadata i32 %10, metadata !12832, metadata !DIExpression()), !dbg !12833
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12835
  %12 = icmp ult i32 %11, %10, !dbg !12837
  br i1 %12, label %13, label %16, !dbg !12838

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12839
  call void @llvm.dbg.value(metadata i32 %14, metadata !12831, metadata !DIExpression()), !dbg !12833
  %15 = icmp eq i32 %14, 0, !dbg !12841
  br i1 %15, label %16, label %30, !dbg !12843

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.201() #24, !dbg !12844
  br label %17, !dbg !12846

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.202() #24, !dbg !12847
  %19 = icmp eq i32 %18, 1, !dbg !12848
  br i1 %19, label %20, label %17, !dbg !12846, !llvm.loop !12849

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12851
  tail call fastcc void @LL_RCC_SetAHBPrescaler.203(i32 noundef %21) #24, !dbg !12852
  tail call fastcc void @LL_RCC_SetSysClkSource.204() #24, !dbg !12853
  br label %22, !dbg !12854

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.205() #24, !dbg !12855
  %24 = icmp eq i32 %23, 8, !dbg !12856
  br i1 %24, label %25, label %22, !dbg !12854, !llvm.loop !12857

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12859
  %27 = load i32, i32* %26, align 4, !dbg !12859
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.206(i32 noundef %27) #24, !dbg !12860
  %28 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12861
  %29 = load i32, i32* %28, align 4, !dbg !12861
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.207(i32 noundef %29) #24, !dbg !12862
  br label %30, !dbg !12863

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12864
  %33 = icmp ugt i32 %32, %10, !dbg !12866
  br i1 %33, label %34, label %36, !dbg !12867

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12868
  call void @llvm.dbg.value(metadata i32 %35, metadata !12831, metadata !DIExpression()), !dbg !12833
  br label %36, !dbg !12870

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12833
  call void @llvm.dbg.value(metadata i32 %37, metadata !12831, metadata !DIExpression()), !dbg !12833
  %38 = icmp eq i32 %37, 0, !dbg !12871
  br i1 %38, label %39, label %40, !dbg !12873

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12874
  br label %40, !dbg !12876

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12877
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.201() unnamed_addr #14 !dbg !12878 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12879
  %2 = or i32 %1, 16777216, !dbg !12879
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12879
  ret void, !dbg !12880
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.202() unnamed_addr #15 !dbg !12881 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12882
  %2 = lshr i32 %1, 25, !dbg !12883
  %3 = and i32 %2, 1, !dbg !12883
  ret i32 %3, !dbg !12884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.203(i32 noundef %0) unnamed_addr #14 !dbg !12885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12887, metadata !DIExpression()), !dbg !12888
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12889
  %3 = and i32 %2, -241, !dbg !12889
  %4 = or i32 %3, %0, !dbg !12889
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12889
  ret void, !dbg !12890
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.204() unnamed_addr #14 !dbg !12891 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12893, metadata !DIExpression()), !dbg !12894
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12895
  %2 = and i32 %1, -4, !dbg !12895
  %3 = or i32 %2, 2, !dbg !12895
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12895
  ret void, !dbg !12896
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.205() unnamed_addr #15 !dbg !12897 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12898
  %2 = and i32 %1, 12, !dbg !12898
  ret i32 %2, !dbg !12899
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.206(i32 noundef %0) unnamed_addr #14 !dbg !12900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12902, metadata !DIExpression()), !dbg !12903
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12904
  %3 = and i32 %2, -7169, !dbg !12904
  %4 = or i32 %3, %0, !dbg !12904
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12904
  ret void, !dbg !12905
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.207(i32 noundef %0) unnamed_addr #14 !dbg !12906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12908, metadata !DIExpression()), !dbg !12909
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12910
  %3 = and i32 %2, -57345, !dbg !12910
  %4 = or i32 %3, %0, !dbg !12910
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12910
  ret void, !dbg !12911
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12912 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12913
  %2 = lshr i32 %1, 27, !dbg !12914
  %3 = and i32 %2, 1, !dbg !12914
  ret i32 %3, !dbg !12915
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.ztest_suite_stats* nocapture noundef readonly %2, %struct.ztest_suite_stats* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12916 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12920, metadata !DIExpression()), !dbg !12926
  call void @llvm.dbg.value(metadata i32 %1, metadata !12921, metadata !DIExpression()), !dbg !12926
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %2, metadata !12922, metadata !DIExpression()), !dbg !12926
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %3, metadata !12923, metadata !DIExpression()), !dbg !12926
  call void @llvm.dbg.value(metadata i32 0, metadata !12924, metadata !DIExpression()), !dbg !12926
  call void @llvm.dbg.value(metadata i32 0, metadata !12925, metadata !DIExpression()), !dbg !12926
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12927
  %6 = icmp eq i32 %5, 0, !dbg !12929
  br i1 %6, label %7, label %27, !dbg !12930

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* noundef %2) #24, !dbg !12931
  call void @llvm.dbg.value(metadata i32 %8, metadata !12925, metadata !DIExpression()), !dbg !12926
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.208() #24, !dbg !12933
  %10 = icmp eq i32 %9, 1, !dbg !12935
  br i1 %10, label %19, label %11, !dbg !12936

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12937
  br i1 %12, label %13, label %14, !dbg !12940

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12941
  br label %15, !dbg !12943

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.209() #24, !dbg !12944
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.210() #24, !dbg !12946
  br label %16, !dbg !12947

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.208() #24, !dbg !12948
  %18 = icmp eq i32 %17, 1, !dbg !12949
  br i1 %18, label %19, label %16, !dbg !12947, !llvm.loop !12950

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 0, !dbg !12952
  %21 = load i32, i32* %20, align 4, !dbg !12952
  %22 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 1, !dbg !12953
  %23 = load i32, i32* %22, align 4, !dbg !12953
  %24 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 2, !dbg !12954
  %25 = load i32, i32* %24, align 4, !dbg !12954
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.200(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12955
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.ztest_suite_stats* noundef %3) #24, !dbg !12956
  call void @llvm.dbg.value(metadata i32 %26, metadata !12924, metadata !DIExpression()), !dbg !12926
  br label %27, !dbg !12957

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12958
  call void @llvm.dbg.value(metadata i32 %28, metadata !12924, metadata !DIExpression()), !dbg !12926
  ret i32 %28, !dbg !12959
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.208() unnamed_addr #15 !dbg !12960 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12961
  %2 = lshr i32 %1, 17, !dbg !12962
  %3 = and i32 %2, 1, !dbg !12962
  ret i32 %3, !dbg !12963
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12964 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12965
  %2 = or i32 %1, 262144, !dbg !12965
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12965
  ret void, !dbg !12966
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.209() unnamed_addr #14 !dbg !12967 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12968
  %2 = and i32 %1, -262145, !dbg !12968
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12968
  ret void, !dbg !12969
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.210() unnamed_addr #14 !dbg !12970 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12971
  %2 = or i32 %1, 65536, !dbg !12971
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12971
  ret void, !dbg !12972
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12973 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12976, metadata !DIExpression()), !dbg !12992
  call void @llvm.dbg.value(metadata i32 undef, metadata !12976, metadata !DIExpression()), !dbg !12992
  call void @llvm.dbg.value(metadata i32 undef, metadata !12976, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12992
  ret void, !dbg !12993
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12994 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12998, metadata !DIExpression()), !dbg !13000
  %2 = icmp eq i8* %0, null, !dbg !13001
  br i1 %2, label %29, label %3, !dbg !13003

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13004
  %5 = icmp eq i8 %4, 0, !dbg !13005
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13006
  br i1 %6, label %29, label %8, !dbg !13006

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12999, metadata !DIExpression()), !dbg !13000
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13007

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12999, metadata !DIExpression()), !dbg !13000
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13009
  br i1 %10, label %11, label %15, !dbg !13014

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13015
  %13 = load i8*, i8** %12, align 4, !dbg !13015
  %14 = icmp eq i8* %13, %0, !dbg !13016
  br i1 %14, label %29, label %15, !dbg !13017

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13018
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12999, metadata !DIExpression()), !dbg !13000
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13019
  br i1 %17, label %7, label %8, !dbg !13020, !llvm.loop !13021

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12999, metadata !DIExpression()), !dbg !13000
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13023
  br i1 %20, label %21, label %26, !dbg !13027

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13028
  %23 = load i8*, i8** %22, align 4, !dbg !13028
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13029
  %25 = icmp eq i32 %24, 0, !dbg !13030
  br i1 %25, label %29, label %26, !dbg !13031

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13032
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12999, metadata !DIExpression()), !dbg !13000
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13033
  br i1 %28, label %29, label %18, !dbg !13007, !llvm.loop !13034

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13000
  ret %struct.device* %30, !dbg !13036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !13037 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13041, metadata !DIExpression()), !dbg !13042
  %2 = icmp eq %struct.device* %0, null, !dbg !13043
  br i1 %2, label %14, label %3, !dbg !13045

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13046
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13046
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13047
  %7 = load i8, i8* %6, align 1, !dbg !13047
  %8 = and i8 %7, 1, !dbg !13047
  %9 = icmp eq i8 %8, 0, !dbg !13047
  br i1 %9, label %14, label %10, !dbg !13048

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13049
  %12 = load i8, i8* %11, align 1, !dbg !13049
  %13 = icmp eq i8 %12, 0, !dbg !13050
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13042
  ret i1 %15, !dbg !13051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !13052 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13057, metadata !DIExpression()), !dbg !13058
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13059
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13060
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13061 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13069, metadata !DIExpression()), !dbg !13074
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13070, metadata !DIExpression()), !dbg !13074
  call void @llvm.dbg.value(metadata i8* %2, metadata !13071, metadata !DIExpression()), !dbg !13074
  %5 = bitcast i32* %4 to i8*, !dbg !13075
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13075
  call void @llvm.dbg.value(metadata i32 0, metadata !13072, metadata !DIExpression()), !dbg !13074
  store i32 0, i32* %4, align 4, !dbg !13076
  call void @llvm.dbg.value(metadata i32* %4, metadata !13072, metadata !DIExpression(DW_OP_deref)), !dbg !13074
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13077
  call void @llvm.dbg.value(metadata i16* %6, metadata !13073, metadata !DIExpression()), !dbg !13074
  %7 = load i32, i32* %4, align 4, !dbg !13078
  call void @llvm.dbg.value(metadata i32 %7, metadata !13072, metadata !DIExpression()), !dbg !13074
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13079
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13080
  ret i32 %8, !dbg !13081
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13082 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13086, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata i32* %1, metadata !13087, metadata !DIExpression()), !dbg !13092
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13093
  %4 = load i16*, i16** %3, align 4, !dbg !13093
  call void @llvm.dbg.value(metadata i16* %4, metadata !13088, metadata !DIExpression()), !dbg !13092
  %5 = icmp eq i16* %4, null, !dbg !13094
  br i1 %5, label %14, label %6, !dbg !13095

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13096
  call void @llvm.dbg.value(metadata i32 %7, metadata !13089, metadata !DIExpression()), !dbg !13096
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13097
  %9 = load i16, i16* %8, align 2, !dbg !13097
  %10 = add i16 %9, -32767, !dbg !13098
  %11 = icmp ult i16 %10, 2, !dbg !13098
  %12 = add i32 %7, 1, !dbg !13099
  call void @llvm.dbg.value(metadata i32 %12, metadata !13089, metadata !DIExpression()), !dbg !13096
  br i1 %11, label %13, label %6, !dbg !13098, !llvm.loop !13101

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13104
  br label %14, !dbg !13105

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13107 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13111, metadata !DIExpression()), !dbg !13122
  call void @llvm.dbg.value(metadata i32 %1, metadata !13112, metadata !DIExpression()), !dbg !13122
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13113, metadata !DIExpression()), !dbg !13122
  call void @llvm.dbg.value(metadata i8* %3, metadata !13114, metadata !DIExpression()), !dbg !13122
  call void @llvm.dbg.value(metadata i32 0, metadata !13115, metadata !DIExpression()), !dbg !13123
  %5 = icmp eq i32 %1, 0, !dbg !13124
  br i1 %5, label %16, label %8, !dbg !13125

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13115, metadata !DIExpression()), !dbg !13123
  %7 = icmp eq i32 %15, %1, !dbg !13124
  br i1 %7, label %16, label %8, !dbg !13125, !llvm.loop !13126

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13115, metadata !DIExpression()), !dbg !13123
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13128
  %11 = load i16, i16* %10, align 2, !dbg !13128
  call void @llvm.dbg.value(metadata i16 %11, metadata !13117, metadata !DIExpression()), !dbg !13129
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13130
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13120, metadata !DIExpression()), !dbg !13129
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13131
  call void @llvm.dbg.value(metadata i32 %13, metadata !13121, metadata !DIExpression()), !dbg !13129
  %14 = icmp slt i32 %13, 0, !dbg !13132
  %15 = add nuw i32 %9, 1, !dbg !13134
  call void @llvm.dbg.value(metadata i32 %15, metadata !13115, metadata !DIExpression()), !dbg !13123
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !13136 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13140, metadata !DIExpression()), !dbg !13143
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13141, metadata !DIExpression()), !dbg !13143
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13142, metadata !DIExpression()), !dbg !13143
  %2 = sext i16 %0 to i32, !dbg !13144
  %3 = icmp slt i16 %0, 1, !dbg !13146
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13147
  %6 = add nsw i32 %2, -1, !dbg !13147
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13147
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13147
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13141, metadata !DIExpression()), !dbg !13143
  ret %struct.device* %8, !dbg !13148
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13149 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13151, metadata !DIExpression()), !dbg !13156
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13152, metadata !DIExpression()), !dbg !13156
  call void @llvm.dbg.value(metadata i8* %2, metadata !13153, metadata !DIExpression()), !dbg !13156
  %5 = bitcast i32* %4 to i8*, !dbg !13157
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13157
  call void @llvm.dbg.value(metadata i32 0, metadata !13154, metadata !DIExpression()), !dbg !13156
  store i32 0, i32* %4, align 4, !dbg !13158
  call void @llvm.dbg.value(metadata i32* %4, metadata !13154, metadata !DIExpression(DW_OP_deref)), !dbg !13156
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13159
  call void @llvm.dbg.value(metadata i16* %6, metadata !13155, metadata !DIExpression()), !dbg !13156
  %7 = load i32, i32* %4, align 4, !dbg !13160
  call void @llvm.dbg.value(metadata i32 %7, metadata !13154, metadata !DIExpression()), !dbg !13156
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13161
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13162
  ret i32 %8, !dbg !13163
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13164 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13166, metadata !DIExpression()), !dbg !13171
  call void @llvm.dbg.value(metadata i32* %1, metadata !13167, metadata !DIExpression()), !dbg !13171
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13172
  %4 = load i16*, i16** %3, align 4, !dbg !13172
  call void @llvm.dbg.value(metadata i16* %4, metadata !13168, metadata !DIExpression()), !dbg !13171
  call void @llvm.dbg.value(metadata i32 0, metadata !13169, metadata !DIExpression()), !dbg !13171
  call void @llvm.dbg.value(metadata i32 0, metadata !13170, metadata !DIExpression()), !dbg !13171
  %5 = icmp eq i16* %4, null, !dbg !13173
  br i1 %5, label %22, label %6, !dbg !13175

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13169, metadata !DIExpression()), !dbg !13171
  call void @llvm.dbg.value(metadata i16* %8, metadata !13168, metadata !DIExpression()), !dbg !13171
  %9 = load i16, i16* %8, align 2, !dbg !13176
  %10 = icmp eq i16 %9, -32768, !dbg !13180
  call void @llvm.dbg.value(metadata i32 undef, metadata !13169, metadata !DIExpression()), !dbg !13171
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13181
  call void @llvm.dbg.value(metadata i16* %11, metadata !13168, metadata !DIExpression()), !dbg !13171
  %12 = zext i1 %10 to i32, !dbg !13182
  %13 = add i32 %7, %12, !dbg !13182
  call void @llvm.dbg.value(metadata i32 %13, metadata !13169, metadata !DIExpression()), !dbg !13171
  %14 = icmp eq i32 %13, 2, !dbg !13183
  br i1 %14, label %15, label %6, !dbg !13184

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13171
  call void @llvm.dbg.value(metadata i32 %16, metadata !13170, metadata !DIExpression()), !dbg !13171
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13185
  %18 = load i16, i16* %17, align 2, !dbg !13185
  %19 = icmp eq i16 %18, 32767, !dbg !13186
  %20 = add i32 %16, 1, !dbg !13187
  call void @llvm.dbg.value(metadata i32 %20, metadata !13170, metadata !DIExpression()), !dbg !13171
  br i1 %19, label %21, label %15, !dbg !13189, !llvm.loop !13190

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13192
  br label %22, !dbg !13193

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13194
  call void @llvm.dbg.value(metadata i16* %23, metadata !13168, metadata !DIExpression()), !dbg !13171
  ret i16* %23, !dbg !13195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !13196 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13199
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !13200
  ret i32* %2, !dbg !13201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !13202 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13353, metadata !DIExpression()), !dbg !13356
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13354, metadata !DIExpression()), !dbg !13356
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13355, metadata !DIExpression()), !dbg !13356
  ret void, !dbg !13357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13362, metadata !DIExpression()), !dbg !13364
  call void @llvm.dbg.value(metadata i32 %1, metadata !13363, metadata !DIExpression()), !dbg !13364
  ret void, !dbg !13365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13366 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13370, metadata !DIExpression()), !dbg !13372
  call void @llvm.dbg.value(metadata i32 %1, metadata !13371, metadata !DIExpression()), !dbg !13372
  ret void, !dbg !13373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13378, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i8* %1, metadata !13379, metadata !DIExpression()), !dbg !13380
  ret i32 -134, !dbg !13381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13386, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.value(metadata i8* %1, metadata !13387, metadata !DIExpression()), !dbg !13388
  ret i32 -134, !dbg !13389
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13390 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13393, metadata !DIExpression()), !dbg !13394
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13395, !srcloc !13401
  call void @llvm.dbg.value(metadata i32 undef, metadata !13398, metadata !DIExpression()) #23, !dbg !13402
  call void @llvm.dbg.value(metadata i32 undef, metadata !13399, metadata !DIExpression()) #23, !dbg !13402
  br label %3, !dbg !13403

3:                                                ; preds = %3, %1
  br label %3, !dbg !13404, !llvm.loop !13407
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13414, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13415, metadata !DIExpression()), !dbg !13416
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.215, i32 0, i32 0), i32 noundef 69) #25, !dbg !13417
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13422
  unreachable, !dbg !13422
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13425, metadata !DIExpression()), !dbg !13426
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13427
  unreachable, !dbg !13427
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13430, metadata !DIExpression()), !dbg !13434
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13431, metadata !DIExpression()), !dbg !13434
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13435, !srcloc !13401
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13435
  call void @llvm.dbg.value(metadata i32 %4, metadata !13398, metadata !DIExpression()) #23, !dbg !13437
  call void @llvm.dbg.value(metadata i32 undef, metadata !13399, metadata !DIExpression()) #23, !dbg !13437
  call void @llvm.dbg.value(metadata i32 %4, metadata !13432, metadata !DIExpression()), !dbg !13434
  %5 = tail call fastcc %struct.k_thread* @k_current_get.218() #26, !dbg !13438
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13433, metadata !DIExpression()), !dbg !13434
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13439
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.219, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !13439
  %7 = icmp eq %struct.__esf* %1, null, !dbg !13444
  br i1 %7, label %20, label %8, !dbg !13446

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13447, metadata !DIExpression()), !dbg !13452
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13454
  %10 = load i32, i32* %9, align 4, !dbg !13454
  %11 = and i32 %10, 511, !dbg !13455
  %12 = icmp eq i32 %11, 0, !dbg !13456
  br i1 %12, label %14, label %13, !dbg !13457

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.220, i32 0, i32 0), i32 noundef 69) #25, !dbg !13458
  br label %14, !dbg !13464

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13465
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.221, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !13465
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13470
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13447, metadata !DIExpression()), !dbg !13471
  %16 = load i32, i32* %9, align 4, !dbg !13476
  %17 = and i32 %16, 511, !dbg !13477
  %18 = icmp eq i32 %17, 0, !dbg !13478
  br i1 %18, label %22, label %19, !dbg !13479

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !13480, metadata !DIExpression()) #23, !dbg !13483
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13486, !srcloc !13487
  br label %25, !dbg !13488

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13465
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.221, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !13465
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13470
  br label %22, !dbg !13489

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !13490
  call void @llvm.dbg.value(metadata i32 %4, metadata !13480, metadata !DIExpression()) #23, !dbg !13493
  call void @llvm.dbg.value(metadata i32 %4, metadata !13480, metadata !DIExpression()) #23, !dbg !13496
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13434
  br i1 %23, label %25, label %24, !dbg !13498

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.222(%struct.k_thread* noundef %5) #24, !dbg !13499
  br label %25, !dbg !13502

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !13502
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.218() unnamed_addr #11 !dbg !13503 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.230() #26, !dbg !13507
  ret %struct.k_thread* %1, !dbg !13508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !13509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13513, metadata !DIExpression()), !dbg !13514
  %2 = icmp ult i32 %0, 5, !dbg !13515
  br i1 %2, label %3, label %6, !dbg !13515

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13515
  %5 = load i8*, i8** %4, align 4, !dbg !13515
  br label %6, !dbg !13515

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.224, i32 0, i32 0), %1 ], !dbg !13516
  ret i8* %7, !dbg !13518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13519 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13523, metadata !DIExpression()), !dbg !13525
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13526
  br i1 %2, label %9, label %3, !dbg !13527

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13528
  call void @llvm.dbg.value(metadata i8* %4, metadata !13524, metadata !DIExpression()), !dbg !13525
  %5 = icmp eq i8* %4, null, !dbg !13529
  br i1 %5, label %9, label %6, !dbg !13531

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13532
  %8 = icmp eq i8 %7, 0, !dbg !13533
  br i1 %8, label %9, label %10, !dbg !13534

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.223, i32 0, i32 0), metadata !13524, metadata !DIExpression()), !dbg !13525
  br label %10, !dbg !13535

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.223, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13525
  call void @llvm.dbg.value(metadata i8* %11, metadata !13524, metadata !DIExpression()), !dbg !13525
  ret i8* %11, !dbg !13537
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.222(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13538 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13542, metadata !DIExpression()), !dbg !13543
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13544, !srcloc !13546
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13547
  ret void, !dbg !13548
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.230() unnamed_addr #11 !dbg !13549 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13550, !srcloc !13552
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13553
  ret %struct.k_thread* %1, !dbg !13554
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13555 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13559, metadata !DIExpression()), !dbg !13562
  call void @llvm.dbg.value(metadata i32 %1, metadata !13560, metadata !DIExpression()), !dbg !13562
  call void @llvm.dbg.value(metadata i32 %2, metadata !13561, metadata !DIExpression()), !dbg !13562
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13563
  ret void, !dbg !13564
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13565 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13569, metadata !DIExpression()), !dbg !13572
  call void @llvm.dbg.value(metadata i8* %1, metadata !13570, metadata !DIExpression()), !dbg !13572
  call void @llvm.dbg.value(metadata i32 %2, metadata !13571, metadata !DIExpression()), !dbg !13572
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13573
  ret void, !dbg !13574
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13575 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13576
  ret void, !dbg !13577
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13580, metadata !DIExpression()), !dbg !13581
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13582
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13583
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13584
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13585
  %4 = trunc i32 %0 to i8, !dbg !13586
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13587
  store i8 %4, i8* %5, align 4, !dbg !13588
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13589
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !13590
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13591
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13592
  store i8* %8, i8** %9, align 4, !dbg !13593
  ret void, !dbg !13594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13597, metadata !DIExpression()), !dbg !13603
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13604
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13598, metadata !DIExpression()), !dbg !13603
  %3 = getelementptr inbounds [1 x [4160 x %struct.z_thread_stack_element]], [1 x [4160 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13605
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13599, metadata !DIExpression()), !dbg !13603
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.237, i32 0, i32 0), metadata !13602, metadata !DIExpression()), !dbg !13603
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13606
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13607
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 4096, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.237, i32 0, i32 0)) #25, !dbg !13608
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !13609
  ret void, !dbg !13610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13611 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13615, metadata !DIExpression()), !dbg !13616
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13617
  ret i8* %2, !dbg !13618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13619 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13624, metadata !DIExpression()), !dbg !13625
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13626
  %3 = load i8, i8* %2, align 1, !dbg !13627
  %4 = and i8 %3, -5, !dbg !13627
  store i8 %4, i8* %2, align 1, !dbg !13627
  ret void, !dbg !13628
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13629 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !13632
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13633
  %3 = ptrtoint i8* %2 to i32, !dbg !13642
  %4 = add i32 %3, 2048, !dbg !13643
  call void @llvm.dbg.value(metadata i32 %4, metadata !13637, metadata !DIExpression()) #23, !dbg !13644
  call void @llvm.dbg.value(metadata i32 %4, metadata !13645, metadata !DIExpression()) #23, !dbg !13648
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !13650, !srcloc !13651
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13652
  %6 = or i32 %5, 512, !dbg !13652
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13652
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -2, i32 noundef 255) #25, !dbg !13653
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -5, i32 noundef 0) #25, !dbg !13656
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -12, i32 noundef 0) #25, !dbg !13657
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -11, i32 noundef 0) #25, !dbg !13658
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -10, i32 noundef 0) #25, !dbg !13659
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -4, i32 noundef 0) #25, !dbg !13660
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13661
  %8 = or i32 %7, 458752, !dbg !13661
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13661
  tail call void @z_arm_fault_init() #25, !dbg !13662
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13663
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13664
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13667
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13668
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13669
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13670
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13670
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13631, metadata !DIExpression()), !dbg !13671
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !13672
  call void @z_device_state_init() #25, !dbg !13673
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !13674
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !13675
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !13676
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13677
  unreachable, !dbg !13677
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2191, metadata !DIExpression()), !dbg !13678
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13679
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13679
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2192, metadata !DIExpression()), !dbg !13678
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2192, metadata !DIExpression()), !dbg !13678
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13680
  br i1 %7, label %8, label %35, !dbg !13681

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2192, metadata !DIExpression()), !dbg !13678
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13682
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13682
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2202, metadata !DIExpression()), !dbg !13683
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13684
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13684
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13685
  call void @llvm.dbg.value(metadata i32 %14, metadata !2206, metadata !DIExpression()), !dbg !13683
  %15 = icmp eq %struct.device* %11, null, !dbg !13686
  br i1 %15, label %32, label %16, !dbg !13688

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13689
  br i1 %17, label %26, label %18, !dbg !13692

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13693
  call void @llvm.dbg.value(metadata i32 %19, metadata !2206, metadata !DIExpression()), !dbg !13683
  %20 = icmp ult i32 %19, 255, !dbg !13695
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13695
  call void @llvm.dbg.value(metadata i32 %21, metadata !2206, metadata !DIExpression()), !dbg !13683
  %22 = trunc i32 %21 to i8, !dbg !13696
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13697
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13697
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13698
  store i8 %22, i8* %25, align 1, !dbg !13699
  br label %26, !dbg !13700

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13701
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13701
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13702
  %30 = load i8, i8* %29, align 1, !dbg !13703
  %31 = or i8 %30, 1, !dbg !13703
  store i8 %31, i8* %29, align 1, !dbg !13703
  br label %32, !dbg !13704

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13705
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2192, metadata !DIExpression()), !dbg !13678
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13680
  br i1 %34, label %8, label %35, !dbg !13681, !llvm.loop !13706

35:                                               ; preds = %32, %1
  ret void, !dbg !13708
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.240(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !13709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13711, metadata !DIExpression()), !dbg !13713
  call void @llvm.dbg.value(metadata i32 %1, metadata !13712, metadata !DIExpression()), !dbg !13713
  %3 = trunc i32 %1 to i8, !dbg !13714
  %4 = shl i8 %3, 4, !dbg !13714
  %5 = and i32 %0, 15, !dbg !13717
  %6 = add nsw i32 %5, -4, !dbg !13718
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13719
  store volatile i8 %4, i8* %7, align 1, !dbg !13720
  ret void, !dbg !13721
}

; Function Attrs: optsize
declare !dbg !13722 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !13723 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13726, metadata !DIExpression()), !dbg !13727
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13728
  store i8 1, i8* %2, align 1, !dbg !13729
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13730
  store i8 1, i8* %3, align 4, !dbg !13731
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13732
  store i32 0, i32* %4, align 4, !dbg !13733
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13734
  store i32 0, i32* %5, align 4, !dbg !13735
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13736
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13737
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13738
  ret void, !dbg !13739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13740 {
  tail call void @z_sched_init() #25, !dbg !13745
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13746
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.241, i32 0, i32 0)) #25, !dbg !13747
  call void @llvm.dbg.value(metadata i8* %1, metadata !13744, metadata !DIExpression()), !dbg !13748
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13749
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13750
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !13751
  ret i8* %1, !dbg !13752
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !13753 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13757, metadata !DIExpression()), !dbg !13758
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13759
  unreachable, !dbg !13760
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13761 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13763, metadata !DIExpression()), !dbg !13766
  call void @llvm.dbg.value(metadata i8* %1, metadata !13764, metadata !DIExpression()), !dbg !13766
  call void @llvm.dbg.value(metadata i8* %2, metadata !13765, metadata !DIExpression()), !dbg !13766
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13767
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !13768
  tail call void @boot_banner() #25, !dbg !13769
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !13770
  tail call void @z_init_static_threads() #25, !dbg !13771
  tail call void @main() #25, !dbg !13772
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13773
  %5 = and i8 %4, -2, !dbg !13773
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13773
  ret void, !dbg !13774
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13775 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13785, metadata !DIExpression()), !dbg !13787
  call void @llvm.dbg.value(metadata i8* %1, metadata !13786, metadata !DIExpression()), !dbg !13787
  ret void, !dbg !13788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13789 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13791, metadata !DIExpression()), !dbg !13793
  call void @llvm.dbg.value(metadata i8* %1, metadata !13792, metadata !DIExpression()), !dbg !13793
  ret void, !dbg !13794
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13795 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13796, !srcloc !13803
  call void @llvm.dbg.value(metadata i32 %1, metadata !13799, metadata !DIExpression()) #23, !dbg !13804
  %2 = icmp ne i32 %1, 0, !dbg !13805
  ret i1 %2, !dbg !13806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13807 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13808
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13809
  %3 = load i8, i8* %2, align 4, !dbg !13810
  %4 = or i8 %3, 1, !dbg !13810
  store i8 %4, i8* %2, align 4, !dbg !13810
  ret void, !dbg !13811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13812 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13813
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13814
  %3 = load i8, i8* %2, align 4, !dbg !13815
  %4 = and i8 %3, -2, !dbg !13815
  store i8 %4, i8* %2, align 4, !dbg !13815
  ret void, !dbg !13816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13817 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13818
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13819
  %3 = load i8, i8* %2, align 4, !dbg !13819
  %4 = and i8 %3, 1, !dbg !13820
  %5 = icmp ne i8 %4, 0, !dbg !13821
  ret i1 %5, !dbg !13822
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13823 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13827, metadata !DIExpression()), !dbg !13829
  call void @llvm.dbg.value(metadata i8* %1, metadata !13828, metadata !DIExpression()), !dbg !13829
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13830
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13832
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13827, metadata !DIExpression()), !dbg !13829
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13833
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13834
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13835
  store i8 0, i8* %8, align 1, !dbg !13836
  ret i32 0, !dbg !13837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !13838 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13842, metadata !DIExpression()), !dbg !13843
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13844
  ret i8* %2, !dbg !13845
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13846 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13850, metadata !DIExpression()), !dbg !13853
  call void @llvm.dbg.value(metadata i8* %1, metadata !13851, metadata !DIExpression()), !dbg !13853
  call void @llvm.dbg.value(metadata i32 %2, metadata !13852, metadata !DIExpression()), !dbg !13853
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13854
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13855
  ret i32 0, !dbg !13856
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2215 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2332, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i8* %1, metadata !2333, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i32 %2, metadata !2334, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i32 0, metadata !2335, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i8 undef, metadata !2337, metadata !DIExpression()), !dbg !13857
  %4 = icmp eq i8* %1, null, !dbg !13858
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13860
  br i1 %6, label %46, label %7, !dbg !13860

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13861
  %9 = load i8, i8* %8, align 1, !dbg !13861
  call void @llvm.dbg.value(metadata i8 %9, metadata !2337, metadata !DIExpression()), !dbg !13857
  %10 = add i32 %2, -1, !dbg !13862
  call void @llvm.dbg.value(metadata i32 %10, metadata !2334, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i8 0, metadata !2338, metadata !DIExpression()), !dbg !13863
  call void @llvm.dbg.value(metadata i8 %9, metadata !2337, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i32 0, metadata !2335, metadata !DIExpression()), !dbg !13857
  %11 = icmp eq i8 %9, 0, !dbg !13864
  br i1 %11, label %12, label %15, !dbg !13866

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13867
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13868
  store i8 0, i8* %14, align 1, !dbg !13869
  br label %46, !dbg !13870

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2338, metadata !DIExpression()), !dbg !13863
  call void @llvm.dbg.value(metadata i8 %17, metadata !2337, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i32 %18, metadata !2335, metadata !DIExpression()), !dbg !13857
  %19 = zext i8 %17 to i32, !dbg !13871
  %20 = zext i8 %16 to i32, !dbg !13872
  %21 = shl nuw i32 1, %20, !dbg !13872
  call void @llvm.dbg.value(metadata i32 %21, metadata !2336, metadata !DIExpression()), !dbg !13857
  %22 = and i32 %21, %19, !dbg !13874
  %23 = icmp eq i32 %22, 0, !dbg !13876
  br i1 %23, label %42, label %24, !dbg !13877

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13878
  %26 = sub i32 %10, %18, !dbg !13879
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13880
  %28 = load i8*, i8** %27, align 4, !dbg !13880
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13881
  %30 = load i32, i32* %29, align 4, !dbg !13881
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13882
  %32 = add i32 %31, %18, !dbg !13883
  call void @llvm.dbg.value(metadata i32 %32, metadata !2335, metadata !DIExpression()), !dbg !13857
  %33 = trunc i32 %21 to i8, !dbg !13884
  %34 = xor i8 %33, -1, !dbg !13884
  %35 = and i8 %17, %34, !dbg !13884
  call void @llvm.dbg.value(metadata i8 %35, metadata !2337, metadata !DIExpression()), !dbg !13857
  %36 = icmp eq i8 %35, 0, !dbg !13885
  br i1 %36, label %12, label %37, !dbg !13887

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13888
  %39 = sub i32 %10, %32, !dbg !13890
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.246, i32 0, i32 0), i32 noundef 1) #24, !dbg !13891
  %41 = add i32 %40, %32, !dbg !13892
  call void @llvm.dbg.value(metadata i32 %41, metadata !2335, metadata !DIExpression()), !dbg !13857
  br label %42, !dbg !13893

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13857
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13857
  call void @llvm.dbg.value(metadata i8 %44, metadata !2337, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i32 %43, metadata !2335, metadata !DIExpression()), !dbg !13857
  %45 = add i8 %16, 1, !dbg !13894
  call void @llvm.dbg.value(metadata i8 %45, metadata !2338, metadata !DIExpression()), !dbg !13863
  br label %15, !dbg !13866

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.247, i32 0, i32 0), %3 ], !dbg !13857
  ret i8* %47, !dbg !13895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13896 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13900, metadata !DIExpression()), !dbg !13905
  call void @llvm.dbg.value(metadata i32 %1, metadata !13901, metadata !DIExpression()), !dbg !13905
  call void @llvm.dbg.value(metadata i8* %2, metadata !13902, metadata !DIExpression()), !dbg !13905
  call void @llvm.dbg.value(metadata i32 %3, metadata !13903, metadata !DIExpression()), !dbg !13905
  %5 = icmp ult i32 %1, %3, !dbg !13906
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13906
  call void @llvm.dbg.value(metadata i32 %6, metadata !13904, metadata !DIExpression()), !dbg !13905
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13907
  ret i32 %6, !dbg !13908
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13909 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13913, metadata !DIExpression()), !dbg !13914
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13915
  ret void, !dbg !13916
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13917 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13926, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13927, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata i32 %2, metadata !13928, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13929, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata i8* %4, metadata !13930, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata i8* %5, metadata !13931, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata i8* %6, metadata !13932, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata i32 %7, metadata !13933, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata i32 %8, metadata !13934, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata i8* %9, metadata !13935, metadata !DIExpression()), !dbg !13937
  %11 = icmp eq i32 %7, 15, !dbg !13938
  br i1 %11, label %12, label %15, !dbg !13938

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13938
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13938
  br i1 %14, label %19, label %18, !dbg !13938

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13938
  %17 = icmp ult i32 %16, 31, !dbg !13938
  br i1 %17, label %19, label %18, !dbg !13938

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.261, i32 0, i32 0), i32 noundef 536) #25, !dbg !13942
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.262, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13942
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.261, i32 0, i32 0), i32 noundef 536) #25, !dbg !13942
  unreachable, !dbg !13942

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13944
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #24, !dbg !13945
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13946
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13947
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13948
  call void @llvm.dbg.value(metadata i8* %22, metadata !13936, metadata !DIExpression()), !dbg !13937
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13949
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13950
  store i8* null, i8** %23, align 4, !dbg !13951
  %24 = icmp eq i8* %9, null, !dbg !13952
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13954
  br i1 %24, label %29, label %26, !dbg !13955

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13956
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13958
  store i8 0, i8* %28, align 1, !dbg !13959
  br label %30, !dbg !13960

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13961
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13963
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13963
  br i1 %32, label %36, label %33, !dbg !13965

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13966
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13966
  br label %36, !dbg !13967

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13937
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13968
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13970
  ret i8* %22, !dbg !13971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !13972 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13976, metadata !DIExpression()), !dbg !13977
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13978
  ret i1 %2, !dbg !13979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #7 !dbg !13980 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13985, metadata !DIExpression()), !dbg !13986
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13987
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !13988
  ret void, !dbg !13989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13990 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13995, metadata !DIExpression()), !dbg !13999
  call void @llvm.dbg.value(metadata i32 %1, metadata !13996, metadata !DIExpression()), !dbg !13999
  call void @llvm.dbg.value(metadata i32 %2, metadata !13997, metadata !DIExpression()), !dbg !13999
  call void @llvm.dbg.value(metadata i32 %3, metadata !13998, metadata !DIExpression()), !dbg !13999
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14000
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14001
  %6 = trunc i32 %3 to i8, !dbg !14002
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14003
  store i8 %6, i8* %7, align 4, !dbg !14004
  %8 = trunc i32 %2 to i8, !dbg !14005
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14006
  store i8 %8, i8* %9, align 1, !dbg !14007
  %10 = trunc i32 %1 to i8, !dbg !14008
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14009
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14009
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14009
  store i8 %10, i8* %13, align 2, !dbg !14010
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14011
  store i8 0, i8* %14, align 1, !dbg !14012
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14013
  ret void, !dbg !14014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !14015 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14019, metadata !DIExpression()), !dbg !14027
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14020, metadata !DIExpression()), !dbg !14027
  call void @llvm.dbg.value(metadata i32 %2, metadata !14021, metadata !DIExpression()), !dbg !14027
  call void @llvm.dbg.value(metadata i32 0, metadata !14026, metadata !DIExpression()), !dbg !14027
  %4 = add i32 %2, 7, !dbg !14028
  %5 = and i32 %4, -8, !dbg !14028
  %6 = add i32 %5, 64, !dbg !14028
  call void @llvm.dbg.value(metadata i32 %6, metadata !14022, metadata !DIExpression()), !dbg !14027
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.263(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14030
  call void @llvm.dbg.value(metadata i8* %7, metadata !14025, metadata !DIExpression()), !dbg !14027
  call void @llvm.dbg.value(metadata i32 %5, metadata !14023, metadata !DIExpression()), !dbg !14027
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14031
  call void @llvm.dbg.value(metadata i8* %8, metadata !14024, metadata !DIExpression()), !dbg !14027
  call void @llvm.dbg.value(metadata i32 0, metadata !14026, metadata !DIExpression()), !dbg !14027
  %9 = ptrtoint i8* %7 to i32, !dbg !14032
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !14033
  store i32 %9, i32* %10, align 4, !dbg !14034
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !14035
  store i32 %5, i32* %11, align 4, !dbg !14036
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !14037
  store i32 0, i32* %12, align 4, !dbg !14038
  call void @llvm.dbg.value(metadata i8* %8, metadata !14024, metadata !DIExpression()), !dbg !14027
  ret i8* %8, !dbg !14039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.263(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14040 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14044, metadata !DIExpression()), !dbg !14045
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14046
  ret i8* %2, !dbg !14047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14048 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14053, metadata !DIExpression()), !dbg !14054
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14055
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14056
  ret void, !dbg !14057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14058 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14060, metadata !DIExpression()), !dbg !14061
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14062
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14063
  ret void, !dbg !14064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14065 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14069, metadata !DIExpression()), !dbg !14070
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14071
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14072
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14073
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14074
  ret void, !dbg !14075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14076 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14081, metadata !DIExpression()), !dbg !14082
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14083
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14084
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14085
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14086
  ret void, !dbg !14087
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14088 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14105, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14096, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14097, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata i32 %2, metadata !14098, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14099, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata i8* %4, metadata !14100, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata i8* %5, metadata !14101, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata i8* %6, metadata !14102, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata i32 %7, metadata !14103, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata i32 %8, metadata !14104, metadata !DIExpression()), !dbg !14106
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14107, !srcloc !13803
  call void @llvm.dbg.value(metadata i32 %11, metadata !13799, metadata !DIExpression()) #23, !dbg !14112
  %12 = icmp eq i32 %11, 0, !dbg !14113
  br i1 %12, label %14, label %13, !dbg !14114

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.261, i32 0, i32 0), i32 noundef 647) #25, !dbg !14115
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.267, i32 0, i32 0)) #25, !dbg !14115
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.261, i32 0, i32 0), i32 noundef 647) #25, !dbg !14115
  unreachable, !dbg !14115

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14105, metadata !DIExpression()), !dbg !14106
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !14117
  %17 = icmp eq i64 %15, -1, !dbg !14118
  br i1 %17, label %19, label %18, !dbg !14120

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14121
  br label %19, !dbg !14123

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14124
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14125 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14130, metadata !DIExpression()), !dbg !14131
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14129, metadata !DIExpression()), !dbg !14131
  %4 = icmp eq i64 %3, 0, !dbg !14132
  br i1 %4, label %5, label %6, !dbg !14134

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.268(%struct.k_thread* noundef %0) #24, !dbg !14135
  br label %7, !dbg !14137

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14138
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.268(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14141 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14145, metadata !DIExpression()), !dbg !14146
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14147, !srcloc !14149
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14150
  ret void, !dbg !14151
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14152 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14155, metadata !DIExpression()), !dbg !14156
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14154, metadata !DIExpression()), !dbg !14156
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14157
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14158
  ret void, !dbg !14159
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14160 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14162, metadata !DIExpression()), !dbg !14182
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14183

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.261, i32 0, i32 0), i32 noundef 750) #25, !dbg !14187
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.272, i32 0, i32 0)) #25, !dbg !14187
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.261, i32 0, i32 0), i32 noundef 750) #25, !dbg !14187
  unreachable, !dbg !14187

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14162, metadata !DIExpression()), !dbg !14182
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14190
  br i1 %4, label %6, label %5, !dbg !14191

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14192
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14180, metadata !DIExpression()), !dbg !14193
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !14194

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14198
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14198
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14200
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14200
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14201
  %12 = load i32, i32* %11, align 4, !dbg !14201
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14202
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14202
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14203
  %16 = load i8*, i8** %15, align 4, !dbg !14203
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14204
  %18 = load i8*, i8** %17, align 4, !dbg !14204
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14205
  %20 = load i8*, i8** %19, align 4, !dbg !14205
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14206
  %22 = load i32, i32* %21, align 4, !dbg !14206
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14207
  %24 = load i32, i32* %23, align 4, !dbg !14207
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !14208
  %26 = load i8*, i8** %25, align 4, !dbg !14208
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !14209
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14210
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !14211
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !14212
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !14212
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14213
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14162, metadata !DIExpression()), !dbg !14182
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14214
  br i1 %32, label %1, label %2, !dbg !14183, !llvm.loop !14215

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.261, i32 0, i32 0), i32 noundef 781) #25, !dbg !14217
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.272, i32 0, i32 0)) #25, !dbg !14217
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.261, i32 0, i32 0), i32 noundef 781) #25, !dbg !14217
  unreachable, !dbg !14217

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !14180, metadata !DIExpression()), !dbg !14193
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14220
  br i1 %36, label %38, label %37, !dbg !14221

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !14222
  ret void, !dbg !14223

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !14224
  %40 = load i32, i32* %39, align 4, !dbg !14224
  %41 = icmp eq i32 %40, -1, !dbg !14227
  br i1 %41, label %50, label %42, !dbg !14228

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !14229
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !14229
  %45 = icmp sgt i32 %40, 0, !dbg !14231
  %46 = select i1 %45, i32 %40, i32 0, !dbg !14231
  %47 = zext i32 %46 to i64, !dbg !14231
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !14231
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !14232
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !14232
  br label %50, !dbg !14233

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !14234
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !14180, metadata !DIExpression()), !dbg !14193
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14235
  br i1 %52, label %33, label %34, !dbg !14194, !llvm.loop !14236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !14238 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14242, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata i64 %0, metadata !14244, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata i32 1000, metadata !14247, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata i32 10000, metadata !14248, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata i8 1, metadata !14249, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata i8 0, metadata !14250, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata i8 1, metadata !14251, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata i8 0, metadata !14252, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata i8 1, metadata !14253, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata i8 0, metadata !14254, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata i64 0, metadata !14255, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata i64 0, metadata !14255, metadata !DIExpression()), !dbg !14259
  %2 = mul i64 %0, 10, !dbg !14261
  ret i64 %2, !dbg !14267
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14268 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14270, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i8* %1, metadata !14271, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i8* %2, metadata !14272, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i8* %3, metadata !14273, metadata !DIExpression()), !dbg !14274
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14275
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14276
  %7 = load i8, i8* %6, align 4, !dbg !14277
  %8 = or i8 %7, 4, !dbg !14277
  store i8 %8, i8* %6, align 4, !dbg !14277
  tail call void @z_thread_essential_clear() #24, !dbg !14278
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14279
  unreachable, !dbg !14279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14280 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14285, metadata !DIExpression()), !dbg !14287
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14288
  %3 = load i32, i32* %2, align 4, !dbg !14288
  call void @llvm.dbg.value(metadata i32 %3, metadata !14286, metadata !DIExpression()), !dbg !14287
  %4 = icmp eq i32 %3, 0, !dbg !14289
  br i1 %4, label %10, label %5, !dbg !14291

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14292
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14295
  %8 = zext i8 %7 to i32, !dbg !14296
  %9 = icmp eq i32 %6, %8, !dbg !14297
  br i1 %9, label %11, label %10, !dbg !14298

10:                                               ; preds = %5, %1
  br label %11, !dbg !14299

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14287
  ret i1 %12, !dbg !14300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !14301 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14303, metadata !DIExpression()), !dbg !14304
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14305
  %3 = load i32, i32* %2, align 4, !dbg !14305
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14307
  %5 = zext i8 %4 to i32, !dbg !14308
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14309
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14310
  %8 = or i32 %7, %5, !dbg !14311
  %9 = icmp eq i32 %3, %8, !dbg !14312
  br i1 %9, label %10, label %11, !dbg !14313

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14314
  br label %11, !dbg !14315

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14316
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14317 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14321, metadata !DIExpression()), !dbg !14322
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14323
  %3 = zext i8 %2 to i32, !dbg !14324
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14325
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14326
  %6 = or i32 %5, %3, !dbg !14327
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14328
  store i32 %6, i32* %7, align 4, !dbg !14329
  ret void, !dbg !14330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14331 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14335, metadata !DIExpression()), !dbg !14336
  ret i32 -134, !dbg !14337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14338 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14342, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i32 %1, metadata !14343, metadata !DIExpression()), !dbg !14344
  ret i32 -134, !dbg !14345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !14346 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14353, metadata !DIExpression()), !dbg !14355
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14354, metadata !DIExpression()), !dbg !14355
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14356
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14358
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14355
  ret i32 %6, !dbg !14359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !14360 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14364, metadata !DIExpression()), !dbg !14365
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14366
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14365
  ret i32 %3, !dbg !14368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14369 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14371
  ret void, !dbg !14372
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14373 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14375, metadata !DIExpression()), !dbg !14378
  call void @llvm.dbg.value(metadata i8* %1, metadata !14376, metadata !DIExpression()), !dbg !14378
  call void @llvm.dbg.value(metadata i8* %2, metadata !14377, metadata !DIExpression()), !dbg !14378
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14379
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14379
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14379
  %7 = load i8, i8* %6, align 2, !dbg !14379
  %8 = icmp sgt i8 %7, -1, !dbg !14379
  br i1 %8, label %10, label %9, !dbg !14382

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.283, i32 0, i32 0), i32 noundef 39) #25, !dbg !14383
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.283, i32 0, i32 0), i32 noundef 39) #25, !dbg !14383
  unreachable, !dbg !14383

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14385, !srcloc !14392
  call void @llvm.dbg.value(metadata i32 undef, metadata !14388, metadata !DIExpression()) #23, !dbg !14393
  call void @llvm.dbg.value(metadata i32 undef, metadata !14389, metadata !DIExpression()) #23, !dbg !14393
  tail call fastcc void @k_cpu_idle() #24, !dbg !14394
  br label %10, !dbg !14395, !llvm.loop !14396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14398 {
  tail call void @arch_cpu_idle() #25, !dbg !14399
  ret void, !dbg !14400
}

; Function Attrs: optsize
declare !dbg !14401 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14402 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14406, metadata !DIExpression()), !dbg !14410
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14407, metadata !DIExpression()), !dbg !14410
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14411
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14411
  %5 = load i8, i8* %4, align 2, !dbg !14411
  call void @llvm.dbg.value(metadata i8 %5, metadata !14408, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14410
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14412
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14412
  %8 = load i8, i8* %7, align 2, !dbg !14412
  call void @llvm.dbg.value(metadata i8 %8, metadata !14409, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14410
  %9 = icmp eq i8 %8, %5, !dbg !14413
  %10 = sext i8 %5 to i32, !dbg !14415
  %11 = sext i8 %8 to i32, !dbg !14415
  %12 = sub nsw i32 %11, %10, !dbg !14415
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14415
  ret i32 %13, !dbg !14416
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14417 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14421, metadata !DIExpression()), !dbg !14422
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14423
  %3 = icmp eq i32 %2, 0, !dbg !14425
  br i1 %3, label %8, label %4, !dbg !14426

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14427
  %6 = add i32 %5, %2, !dbg !14429
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14430
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14431
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14432
  br label %8, !dbg !14433

8:                                                ; preds = %4, %1
  ret void, !dbg !14434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14435 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14439, metadata !DIExpression()), !dbg !14441
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14442
  call void @llvm.dbg.value(metadata i32 %1, metadata !14440, metadata !DIExpression()), !dbg !14441
  ret i32 %1, !dbg !14443
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14448, metadata !DIExpression()), !dbg !14457
  call void @llvm.dbg.value(metadata i32 %1, metadata !14449, metadata !DIExpression()), !dbg !14457
  call void @llvm.dbg.value(metadata i32 0, metadata !14450, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !14466
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14468, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !14475
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !14475
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !14466
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14476
  br i1 %4, label %6, label %5, !dbg !14479

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14480
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14480
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14480
  unreachable, !dbg !14480

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !14475
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !14466
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14482
  call void @llvm.dbg.value(metadata i32 undef, metadata !14456, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata i32 undef, metadata !14450, metadata !DIExpression()), !dbg !14458
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14483
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14486
  %8 = icmp sgt i32 %0, 0, !dbg !14487
  %9 = icmp sgt i32 %7, 2, !dbg !14489
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14489
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14489
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14490
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14491
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !14499
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !14499
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14501
  br i1 %12, label %14, label %13, !dbg !14504

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14505
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14505
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14505
  unreachable, !dbg !14505

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14468
  call void @llvm.dbg.value(metadata i32 %15, metadata !14471, metadata !DIExpression()) #23, !dbg !14475
  call void @llvm.dbg.value(metadata i32 %15, metadata !14465, metadata !DIExpression()) #23, !dbg !14466
  call void @llvm.dbg.value(metadata i32 %15, metadata !14456, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !14499
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()) #23, !dbg !14510
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14512, !srcloc !14513
  call void @llvm.dbg.value(metadata i32 1, metadata !14450, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata i32 undef, metadata !14450, metadata !DIExpression()), !dbg !14458
  ret void, !dbg !14514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14515 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14517, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.value(metadata i32 %0, metadata !14519, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14534
  call void @llvm.dbg.value(metadata i32 1000, metadata !14522, metadata !DIExpression()), !dbg !14534
  call void @llvm.dbg.value(metadata i32 10000, metadata !14523, metadata !DIExpression()), !dbg !14534
  call void @llvm.dbg.value(metadata i8 1, metadata !14524, metadata !DIExpression()), !dbg !14534
  call void @llvm.dbg.value(metadata i1 true, metadata !14525, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14534
  call void @llvm.dbg.value(metadata i1 true, metadata !14526, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14534
  call void @llvm.dbg.value(metadata i8 0, metadata !14527, metadata !DIExpression()), !dbg !14534
  call void @llvm.dbg.value(metadata i1 true, metadata !14528, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14534
  call void @llvm.dbg.value(metadata i1 false, metadata !14529, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14534
  call void @llvm.dbg.value(metadata i64 0, metadata !14530, metadata !DIExpression()), !dbg !14534
  call void @llvm.dbg.value(metadata i64 0, metadata !14530, metadata !DIExpression()), !dbg !14534
  %2 = mul i32 %0, 10, !dbg !14536
  ret i32 %2, !dbg !14542
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14545, metadata !DIExpression()), !dbg !14547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !14548
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14550, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !14552
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !14552
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !14548
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14553
  br i1 %3, label %5, label %4, !dbg !14554

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14555
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14555
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14555
  unreachable, !dbg !14555

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14550
  call void @llvm.dbg.value(metadata i32 %6, metadata !14471, metadata !DIExpression()) #23, !dbg !14552
  call void @llvm.dbg.value(metadata i32 %6, metadata !14465, metadata !DIExpression()) #23, !dbg !14548
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14556
  call void @llvm.dbg.value(metadata i32 %6, metadata !14546, metadata !DIExpression()), !dbg !14547
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14557
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14559
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14560
  br i1 %9, label %10, label %14, !dbg !14561

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14562
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !14564
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !14564
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14566
  br i1 %11, label %13, label %12, !dbg !14567

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14568
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14568
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14568
  unreachable, !dbg !14568

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14493, metadata !DIExpression()) #23, !dbg !14564
  call void @llvm.dbg.value(metadata i32 %6, metadata !14507, metadata !DIExpression()) #23, !dbg !14569
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14571, !srcloc !14513
  br label %33, !dbg !14572

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14573
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14574
  %16 = icmp eq i32 %15, 0, !dbg !14574
  br i1 %16, label %27, label %17, !dbg !14576

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14577
  br i1 %18, label %19, label %27, !dbg !14578

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14579
  %21 = icmp sgt i32 %20, %0, !dbg !14582
  br i1 %21, label %25, label %22, !dbg !14583

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14584
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14584
  call void @llvm.dbg.value(metadata i32 %24, metadata !14546, metadata !DIExpression()), !dbg !14547
  br label %28, !dbg !14586

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14587
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14587
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14589
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14547
  call void @llvm.dbg.value(metadata i32 %29, metadata !14546, metadata !DIExpression()), !dbg !14547
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !14591
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !14591
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14593
  br i1 %30, label %32, label %31, !dbg !14594

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14595
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14595
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14595
  unreachable, !dbg !14595

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14493, metadata !DIExpression()) #23, !dbg !14591
  call void @llvm.dbg.value(metadata i32 %29, metadata !14507, metadata !DIExpression()) #23, !dbg !14596
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14598, !srcloc !14513
  br label %33, !dbg !14599

33:                                               ; preds = %32, %13
  ret void, !dbg !14599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14600 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14604, metadata !DIExpression()), !dbg !14606
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14607
  %3 = icmp eq i32 %2, 0, !dbg !14607
  br i1 %3, label %16, label %4, !dbg !14608

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14609
  br i1 %5, label %16, label %6, !dbg !14610

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14611
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14611
  %9 = load i8, i8* %8, align 2, !dbg !14611
  %10 = sext i8 %9 to i32, !dbg !14612
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14613
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !14614
  br i1 %12, label %16, label %13, !dbg !14615

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14616
  %15 = xor i1 %14, true, !dbg !14617
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14606
  call void @llvm.dbg.value(metadata i1 %17, metadata !14605, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14606
  ret i1 %17, !dbg !14618
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14619 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()), !dbg !14625
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14626
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14624, metadata !DIExpression()), !dbg !14625
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14627
  br i1 %3, label %5, label %4, !dbg !14629

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14630
  br label %5, !dbg !14632

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14623, metadata !DIExpression()), !dbg !14625
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14633
  ret i32 %6, !dbg !14634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14635 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14637, metadata !DIExpression()), !dbg !14639
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14640
  %3 = load i8, i8* %2, align 1, !dbg !14640
  call void @llvm.dbg.value(metadata i8 %3, metadata !14638, metadata !DIExpression()), !dbg !14639
  %4 = and i8 %3, 31, !dbg !14641
  %5 = icmp ne i8 %4, 0, !dbg !14642
  ret i1 %5, !dbg !14643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14644 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14646, metadata !DIExpression()), !dbg !14647
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14648
  br i1 %2, label %3, label %7, !dbg !14650

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14651, metadata !DIExpression()) #23, !dbg !14654
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14657
  %5 = load i8, i8* %4, align 1, !dbg !14658
  %6 = and i8 %5, 127, !dbg !14658
  store i8 %6, i8* %4, align 1, !dbg !14658
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14659, metadata !DIExpression()) #23, !dbg !14662
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14666
  br label %7, !dbg !14667

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14668, metadata !DIExpression()) #23, !dbg !14671
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14673
  %9 = load i8, i8* %8, align 1, !dbg !14674
  %10 = or i8 %9, -128, !dbg !14674
  store i8 %10, i8* %8, align 1, !dbg !14674
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14675, metadata !DIExpression()) #23, !dbg !14678
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14682, metadata !DIExpression()) #23, !dbg !14690
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14688, metadata !DIExpression()) #23, !dbg !14690
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14692
  br i1 %11, label %12, label %13, !dbg !14695

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !14696
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !14696
  unreachable, !dbg !14696

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14698
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14689, metadata !DIExpression()) #23, !dbg !14690
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14700
  br i1 %15, label %26, label %16, !dbg !14698

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14689, metadata !DIExpression()) #23, !dbg !14690
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14702
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14689, metadata !DIExpression()) #23, !dbg !14690
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14703
  %20 = icmp sgt i32 %19, 0, !dbg !14706
  br i1 %20, label %21, label %23, !dbg !14707

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14708
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14710
  br label %28, !dbg !14711

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14700
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14689, metadata !DIExpression()) #23, !dbg !14690
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14700
  br i1 %25, label %26, label %16, !dbg !14698, !llvm.loop !14712

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14714
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14715
  br label %28, !dbg !14716

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14717
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14718
  %31 = zext i1 %30 to i32, !dbg !14718
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14719
  ret void, !dbg !14720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14721 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14723, metadata !DIExpression()), !dbg !14724
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14725
  ret i1 %2, !dbg !14726
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14727 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14729, metadata !DIExpression()), !dbg !14731
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14730, metadata !DIExpression()), !dbg !14731
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14732
  br i1 %3, label %4, label %5, !dbg !14735

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14736
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14736
  unreachable, !dbg !14736

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14738
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14739
  ret void, !dbg !14740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14741 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14743, metadata !DIExpression()), !dbg !14744
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14745
  ret i1 %2, !dbg !14746
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14747 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14751, metadata !DIExpression()), !dbg !14752
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14753
  br i1 %2, label %6, label %3, !dbg !14753

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14754
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14754
  br label %6, !dbg !14753

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14753
  ret %struct._dnode* %7, !dbg !14755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14756 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14760, metadata !DIExpression()), !dbg !14764
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14761, metadata !DIExpression()), !dbg !14764
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14765
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14765
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14762, metadata !DIExpression()), !dbg !14764
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14766
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14767
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14768
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14769
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14770
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14771
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14772
  ret void, !dbg !14773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14774 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14778, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14779, metadata !DIExpression()), !dbg !14780
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14781
  br i1 %3, label %6, label %4, !dbg !14782

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14783
  br label %6, !dbg !14782

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14782
  ret %struct._dnode* %7, !dbg !14784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14785 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14789, metadata !DIExpression()), !dbg !14792
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14790, metadata !DIExpression()), !dbg !14792
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14793
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14793
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14791, metadata !DIExpression()), !dbg !14792
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14794
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14795
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14796
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14797
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14798
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14799
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14800
  ret void, !dbg !14801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14804, metadata !DIExpression()), !dbg !14806
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14807
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14814, metadata !DIExpression()) #23, !dbg !14816
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14817
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14818
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14818
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14805, metadata !DIExpression()), !dbg !14806
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14819, metadata !DIExpression()) #23, !dbg !14825
  call void @llvm.dbg.value(metadata i32 %0, metadata !14824, metadata !DIExpression()) #23, !dbg !14825
  %6 = icmp eq i32 %0, 0, !dbg !14828
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14830
  br i1 %6, label %8, label %18, !dbg !14831

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14832
  br i1 %9, label %10, label %11, !dbg !14835

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 137) #25, !dbg !14836
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !14836
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 137) #25, !dbg !14836
  unreachable, !dbg !14836

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14838
  br i1 %12, label %18, label %13, !dbg !14840

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14841
  br i1 %14, label %18, label %15, !dbg !14843

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14844
  %17 = icmp eq i32 %16, 0, !dbg !14844
  br i1 %17, label %21, label %18, !dbg !14846

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14847
  br i1 %19, label %21, label %20, !dbg !14850

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14851
  br label %21, !dbg !14853

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14830
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14830
  ret void, !dbg !14854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14855 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14859, metadata !DIExpression()), !dbg !14862
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14860, metadata !DIExpression()), !dbg !14862
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !14863
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14861, metadata !DIExpression()), !dbg !14862
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14860, metadata !DIExpression()), !dbg !14862
  ret %struct.k_thread* %3, !dbg !14864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14865 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14867, metadata !DIExpression()), !dbg !14868
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14869
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14870
  %4 = xor i1 %3, true, !dbg !14871
  ret i1 %4, !dbg !14872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14873 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14875, metadata !DIExpression()), !dbg !14876
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14877
  %3 = load i16, i16* %2, align 2, !dbg !14877
  %4 = icmp ult i16 %3, 128, !dbg !14878
  %5 = zext i1 %4 to i32, !dbg !14878
  ret i32 %5, !dbg !14879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14880 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14886, metadata !DIExpression()), !dbg !14887
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14888
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14889
  %4 = xor i1 %3, true, !dbg !14890
  ret i1 %4, !dbg !14891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14892 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14898, metadata !DIExpression()), !dbg !14899
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14900
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14900
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14901
  ret i1 %4, !dbg !14902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14903 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14905, metadata !DIExpression()), !dbg !14907
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14906, metadata !DIExpression()), !dbg !14907
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14908
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14908
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14909
  br i1 %5, label %9, label %6, !dbg !14910

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14911
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14911
  br label %9, !dbg !14910

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14910
  ret %struct._dnode* %10, !dbg !14912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14913 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14917, metadata !DIExpression()), !dbg !14918
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14919
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14919
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14920
  ret i1 %4, !dbg !14921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14922 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14926, metadata !DIExpression()), !dbg !14929
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14930
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14930
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14927, metadata !DIExpression()), !dbg !14929
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14931
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14931
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14928, metadata !DIExpression()), !dbg !14929
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14932
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14933
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14934
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14935
  tail call fastcc void @sys_dnode_init.294(%struct._dnode* noundef %0) #24, !dbg !14936
  ret void, !dbg !14937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.294(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14938 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14940, metadata !DIExpression()), !dbg !14941
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14942
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14943
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14944
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14945
  ret void, !dbg !14946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14947 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14951, metadata !DIExpression()), !dbg !14953
  call void @llvm.dbg.value(metadata i32 %1, metadata !14952, metadata !DIExpression()), !dbg !14953
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14954
  %4 = load i8, i8* %3, align 1, !dbg !14954
  %5 = zext i8 %4 to i32, !dbg !14955
  %6 = and i32 %5, %1, !dbg !14956
  %7 = icmp ne i32 %6, 0, !dbg !14957
  ret i1 %7, !dbg !14958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14963, metadata !DIExpression()), !dbg !14965
  call void @llvm.dbg.value(metadata i32 %1, metadata !14964, metadata !DIExpression()), !dbg !14965
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !14966
  ret i1 %3, !dbg !14967
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14968 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14970, metadata !DIExpression()), !dbg !14972
  call void @llvm.dbg.value(metadata i32 %1, metadata !14971, metadata !DIExpression()), !dbg !14972
  %3 = icmp slt i32 %0, %1, !dbg !14973
  ret i1 %3, !dbg !14974
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14975 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14977, metadata !DIExpression()), !dbg !14981
  call void @llvm.dbg.value(metadata i32 0, metadata !14978, metadata !DIExpression()), !dbg !14982
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !14983
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14985, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !14987
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !14987
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !14983
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14988
  br i1 %3, label %5, label %4, !dbg !14989

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14990
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14990
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14990
  unreachable, !dbg !14990

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !14987
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !14983
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14991
  call void @llvm.dbg.value(metadata i32 undef, metadata !14980, metadata !DIExpression()), !dbg !14982
  call void @llvm.dbg.value(metadata i32 undef, metadata !14978, metadata !DIExpression()), !dbg !14982
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14992
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !14997
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !14997
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14999
  br i1 %6, label %8, label %7, !dbg !15000

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15001
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15001
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15001
  unreachable, !dbg !15001

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14985
  call void @llvm.dbg.value(metadata i32 %9, metadata !14471, metadata !DIExpression()) #23, !dbg !14987
  call void @llvm.dbg.value(metadata i32 %9, metadata !14465, metadata !DIExpression()) #23, !dbg !14983
  call void @llvm.dbg.value(metadata i32 %9, metadata !14980, metadata !DIExpression()), !dbg !14982
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !14997
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()) #23, !dbg !15002
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15004, !srcloc !14513
  call void @llvm.dbg.value(metadata i32 1, metadata !14978, metadata !DIExpression()), !dbg !14982
  call void @llvm.dbg.value(metadata i32 undef, metadata !14978, metadata !DIExpression()), !dbg !14982
  ret void, !dbg !15005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15006 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15008, metadata !DIExpression()), !dbg !15009
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15010
  br i1 %2, label %27, label %3, !dbg !15012

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15013
  br i1 %4, label %5, label %27, !dbg !15014

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14668, metadata !DIExpression()) #23, !dbg !15015
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15018
  %7 = load i8, i8* %6, align 1, !dbg !15019
  %8 = or i8 %7, -128, !dbg !15019
  store i8 %8, i8* %6, align 1, !dbg !15019
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14675, metadata !DIExpression()) #23, !dbg !15020
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14682, metadata !DIExpression()) #23, !dbg !15022
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14688, metadata !DIExpression()) #23, !dbg !15022
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15024
  br i1 %9, label %10, label %11, !dbg !15025

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15026
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15026
  unreachable, !dbg !15026

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15027
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14689, metadata !DIExpression()) #23, !dbg !15022
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15028
  br i1 %13, label %24, label %14, !dbg !15027

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14689, metadata !DIExpression()) #23, !dbg !15022
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15029
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14689, metadata !DIExpression()) #23, !dbg !15022
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !15030
  %18 = icmp sgt i32 %17, 0, !dbg !15031
  br i1 %18, label %19, label %21, !dbg !15032

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15033
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !15034
  br label %26, !dbg !15035

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !15028
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14689, metadata !DIExpression()) #23, !dbg !15022
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15028
  br i1 %23, label %24, label %14, !dbg !15027, !llvm.loop !15036

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15038
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !15039
  br label %26, !dbg !15040

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15041
  br label %27, !dbg !15042

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15044 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15046, metadata !DIExpression()), !dbg !15047
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15048
  br i1 %2, label %6, label %3, !dbg !15049

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15050
  %5 = xor i1 %4, true, !dbg !15049
  br label %6, !dbg !15049

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15051
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15052 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15054, metadata !DIExpression()), !dbg !15058
  call void @llvm.dbg.value(metadata i32 0, metadata !15055, metadata !DIExpression()), !dbg !15059
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !15060
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15062, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15064
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !15064
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15060
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15065
  br i1 %3, label %5, label %4, !dbg !15066

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15067
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15067
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15067
  unreachable, !dbg !15067

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15064
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15060
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15068
  call void @llvm.dbg.value(metadata i32 undef, metadata !15057, metadata !DIExpression()), !dbg !15059
  call void @llvm.dbg.value(metadata i32 undef, metadata !15055, metadata !DIExpression()), !dbg !15059
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15069
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15072
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !15072
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15074
  br i1 %6, label %8, label %7, !dbg !15075

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15076
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15076
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15076
  unreachable, !dbg !15076

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15062
  call void @llvm.dbg.value(metadata i32 %9, metadata !14471, metadata !DIExpression()) #23, !dbg !15064
  call void @llvm.dbg.value(metadata i32 %9, metadata !14465, metadata !DIExpression()) #23, !dbg !15060
  call void @llvm.dbg.value(metadata i32 %9, metadata !15057, metadata !DIExpression()), !dbg !15059
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15072
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()) #23, !dbg !15077
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15079, !srcloc !14513
  call void @llvm.dbg.value(metadata i32 1, metadata !15055, metadata !DIExpression()), !dbg !15059
  call void @llvm.dbg.value(metadata i32 undef, metadata !15055, metadata !DIExpression()), !dbg !15059
  ret void, !dbg !15080
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15081 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15083, metadata !DIExpression()), !dbg !15085
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !15086
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15088, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15090
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !15090
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15086
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15091
  br i1 %3, label %5, label %4, !dbg !15092

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15093
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15093
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15093
  unreachable, !dbg !15093

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15088
  call void @llvm.dbg.value(metadata i32 %6, metadata !14471, metadata !DIExpression()) #23, !dbg !15090
  call void @llvm.dbg.value(metadata i32 %6, metadata !14465, metadata !DIExpression()) #23, !dbg !15086
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15094
  call void @llvm.dbg.value(metadata i32 %6, metadata !15084, metadata !DIExpression()), !dbg !15085
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15095
  br i1 %7, label %8, label %12, !dbg !15097

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15098
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !15098
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15101
  br i1 %9, label %11, label %10, !dbg !15102

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15103
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15103
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15103
  unreachable, !dbg !15103

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14493, metadata !DIExpression()) #23, !dbg !15098
  call void @llvm.dbg.value(metadata i32 %6, metadata !14507, metadata !DIExpression()) #23, !dbg !15104
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15106, !srcloc !14513
  br label %14, !dbg !15107

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.299(%struct.k_thread* noundef %0) #24, !dbg !15108
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15109
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15110
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15110
  br label %14, !dbg !15111

14:                                               ; preds = %12, %11
  ret void, !dbg !15111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15112 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15114, metadata !DIExpression()), !dbg !15115
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15116
  %3 = load i8, i8* %2, align 1, !dbg !15116
  %4 = and i8 %3, 4, !dbg !15117
  %5 = icmp eq i8 %4, 0, !dbg !15118
  ret i1 %5, !dbg !15119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.299(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15120 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15122, metadata !DIExpression()), !dbg !15123
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15124
  %3 = load i8, i8* %2, align 1, !dbg !15125
  %4 = and i8 %3, -5, !dbg !15125
  store i8 %4, i8* %2, align 1, !dbg !15125
  ret void, !dbg !15126
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15127 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15130, metadata !DIExpression()), !dbg !15131
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15129, metadata !DIExpression()), !dbg !15131
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15132
  br i1 %4, label %5, label %12, !dbg !15134

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15135
  br i1 %6, label %7, label %12, !dbg !15136

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15137, metadata !DIExpression()) #23, !dbg !15143
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15142, metadata !DIExpression()) #23, !dbg !15143
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15146, metadata !DIExpression()) #23, !dbg !15151
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15153
  br i1 %8, label %10, label %9, !dbg !15156

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !15157
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15157
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !15157
  unreachable, !dbg !15157

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15137, metadata !DIExpression()) #23, !dbg !15143
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15159
  br label %16, !dbg !15160

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15161
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14498, metadata !DIExpression()) #23, !dbg !15161
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15164
  br i1 %13, label %15, label %14, !dbg !15165

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15166
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15166
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15166
  unreachable, !dbg !15166

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14493, metadata !DIExpression()) #23, !dbg !15161
  call void @llvm.dbg.value(metadata i32 %3, metadata !14507, metadata !DIExpression()) #23, !dbg !15167
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15169, !srcloc !14513
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15170
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15171 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15175, metadata !DIExpression()), !dbg !15176
  call void @llvm.dbg.value(metadata i32 %0, metadata !15177, metadata !DIExpression()), !dbg !15182
  %2 = icmp eq i32 %0, 0, !dbg !15184
  br i1 %2, label %3, label %6, !dbg !15185

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15186, !srcloc !15193
  call void @llvm.dbg.value(metadata i32 %4, metadata !15189, metadata !DIExpression()) #23, !dbg !15194
  %5 = icmp eq i32 %4, 0, !dbg !15195
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15176
  ret i1 %7, !dbg !15196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !15197 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15200
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15199, metadata !DIExpression()), !dbg !15201
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15202
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15203
  ret i1 %3, !dbg !15204
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15207, metadata !DIExpression()), !dbg !15209
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15210
  call void @llvm.dbg.value(metadata i32 %2, metadata !15208, metadata !DIExpression()), !dbg !15209
  ret i32 %2, !dbg !15211
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15212 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15214, metadata !DIExpression()), !dbg !15218
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15219
  call void @llvm.dbg.value(metadata i32 0, metadata !15215, metadata !DIExpression()), !dbg !15220
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !15221
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15223, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15225
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !15225
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15221
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15226
  br i1 %4, label %6, label %5, !dbg !15227

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15228
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15228
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15228
  unreachable, !dbg !15228

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15223
  call void @llvm.dbg.value(metadata i32 %7, metadata !14471, metadata !DIExpression()) #23, !dbg !15225
  call void @llvm.dbg.value(metadata i32 %7, metadata !14465, metadata !DIExpression()) #23, !dbg !15221
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15229
  call void @llvm.dbg.value(metadata i32 %7, metadata !15217, metadata !DIExpression()), !dbg !15220
  call void @llvm.dbg.value(metadata i32 undef, metadata !15215, metadata !DIExpression()), !dbg !15220
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15230
  br i1 %8, label %9, label %13, !dbg !15234

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14651, metadata !DIExpression()) #23, !dbg !15235
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15238
  %11 = load i8, i8* %10, align 1, !dbg !15239
  %12 = and i8 %11, 127, !dbg !15239
  store i8 %12, i8* %10, align 1, !dbg !15239
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14659, metadata !DIExpression()) #23, !dbg !15240
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15242
  br label %13, !dbg !15243

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15244
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15245
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15246
  %16 = zext i1 %15 to i32, !dbg !15246
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !15247
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15248
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !15248
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15250
  br i1 %17, label %19, label %18, !dbg !15251

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15252
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15252
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15252
  unreachable, !dbg !15252

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14493, metadata !DIExpression()) #23, !dbg !15248
  call void @llvm.dbg.value(metadata i32 %7, metadata !14507, metadata !DIExpression()) #23, !dbg !15253
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15255, !srcloc !14513
  call void @llvm.dbg.value(metadata i32 1, metadata !15215, metadata !DIExpression()), !dbg !15220
  call void @llvm.dbg.value(metadata i32 undef, metadata !15215, metadata !DIExpression()), !dbg !15220
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15256
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15258
  br i1 %21, label %22, label %23, !dbg !15259

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15260
  br label %23, !dbg !15262

23:                                               ; preds = %22, %19
  ret void, !dbg !15263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15264 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15266, metadata !DIExpression()), !dbg !15267
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15268
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15269
  ret i32 %3, !dbg !15270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15271 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15273, metadata !DIExpression()), !dbg !15274
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15275
  %3 = load i8, i8* %2, align 1, !dbg !15276
  %4 = or i8 %3, 16, !dbg !15276
  store i8 %4, i8* %2, align 1, !dbg !15276
  ret void, !dbg !15277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15278 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15279, !srcloc !14474
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15279
  call void @llvm.dbg.value(metadata i32 %2, metadata !14471, metadata !DIExpression()) #23, !dbg !15281
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !15281
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15282
  ret void, !dbg !15283
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15286, metadata !DIExpression()), !dbg !15287
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15288
  br i1 %2, label %3, label %5, !dbg !15290

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15291
  br label %6, !dbg !15293

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14507, metadata !DIExpression()) #23, !dbg !15294
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15297, !srcloc !14513
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15299 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15301, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !15304
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15306, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15308
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !15308
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15304
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15309
  br i1 %3, label %5, label %4, !dbg !15310

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15311
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15311
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15311
  unreachable, !dbg !15311

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15306
  call void @llvm.dbg.value(metadata i32 %6, metadata !14471, metadata !DIExpression()) #23, !dbg !15308
  call void @llvm.dbg.value(metadata i32 %6, metadata !14465, metadata !DIExpression()) #23, !dbg !15304
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15312
  call void @llvm.dbg.value(metadata i32 %6, metadata !15302, metadata !DIExpression()), !dbg !15303
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15313
  br i1 %7, label %12, label %8, !dbg !15315

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !15316
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15319
  br i1 %9, label %11, label %10, !dbg !15320

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15321
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15321
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15321
  unreachable, !dbg !15321

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14493, metadata !DIExpression()) #23, !dbg !15316
  call void @llvm.dbg.value(metadata i32 %6, metadata !14507, metadata !DIExpression()) #23, !dbg !15322
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15324, !srcloc !14513
  br label %14, !dbg !15325

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15326
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15327
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15328
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15328
  br label %14, !dbg !15329

14:                                               ; preds = %12, %11
  ret void, !dbg !15329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15330 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15332, metadata !DIExpression()), !dbg !15333
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15334
  %3 = load i8, i8* %2, align 1, !dbg !15334
  %4 = and i8 %3, 16, !dbg !15335
  %5 = icmp ne i8 %4, 0, !dbg !15336
  ret i1 %5, !dbg !15337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15338 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15340, metadata !DIExpression()), !dbg !15341
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15342
  %3 = load i8, i8* %2, align 1, !dbg !15343
  %4 = and i8 %3, -17, !dbg !15343
  store i8 %4, i8* %2, align 1, !dbg !15343
  ret void, !dbg !15344
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15345 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15355, metadata !DIExpression()), !dbg !15359
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15353, metadata !DIExpression()), !dbg !15359
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15354, metadata !DIExpression()), !dbg !15359
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15360
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15360
  br i1 %5, label %9, label %6, !dbg !15360

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !15360
  br i1 %7, label %9, label %8, !dbg !15363

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 773) #25, !dbg !15364
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 773) #25, !dbg !15364
  unreachable, !dbg !15364

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15356, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !15367
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15369, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15371
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !15371
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15367
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15372
  br i1 %11, label %13, label %12, !dbg !15373

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15374
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15374
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15374
  unreachable, !dbg !15374

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15371
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15367
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15375
  call void @llvm.dbg.value(metadata i32 undef, metadata !15358, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata i32 undef, metadata !15356, metadata !DIExpression()), !dbg !15366
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15379
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !15379
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15381
  br i1 %14, label %16, label %15, !dbg !15382

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15383
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15383
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15383
  unreachable, !dbg !15383

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15369
  call void @llvm.dbg.value(metadata i32 %17, metadata !14471, metadata !DIExpression()) #23, !dbg !15371
  call void @llvm.dbg.value(metadata i32 %17, metadata !14465, metadata !DIExpression()) #23, !dbg !15367
  call void @llvm.dbg.value(metadata i32 %17, metadata !15358, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15379
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()) #23, !dbg !15384
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15386, !srcloc !14513
  call void @llvm.dbg.value(metadata i32 1, metadata !15356, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata i32 undef, metadata !15356, metadata !DIExpression()), !dbg !15366
  ret void, !dbg !15387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15388 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15390, metadata !DIExpression()), !dbg !15391
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15392
  %3 = load i8, i8* %2, align 1, !dbg !15392
  %4 = and i8 %3, 1, !dbg !15393
  %5 = icmp ne i8 %4, 0, !dbg !15394
  ret i1 %5, !dbg !15395
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15396 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15400, metadata !DIExpression()), !dbg !15401
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15398, metadata !DIExpression()), !dbg !15401
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15399, metadata !DIExpression()), !dbg !15401
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !15402
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15403
  ret void, !dbg !15404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15405 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15409, metadata !DIExpression()), !dbg !15411
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15410, metadata !DIExpression()), !dbg !15411
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15412
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15413
  %3 = icmp eq %union.anon* %1, null, !dbg !15414
  br i1 %3, label %24, label %4, !dbg !15416

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15417
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15419
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15420
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14682, metadata !DIExpression()) #23, !dbg !15421
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14688, metadata !DIExpression()) #23, !dbg !15421
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15423
  br i1 %7, label %8, label %9, !dbg !15424

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15425
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15425
  unreachable, !dbg !15425

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15426
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14689, metadata !DIExpression()) #23, !dbg !15421
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15427
  br i1 %11, label %22, label %12, !dbg !15426

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14689, metadata !DIExpression()) #23, !dbg !15421
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15428
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14689, metadata !DIExpression()) #23, !dbg !15421
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15429
  %16 = icmp sgt i32 %15, 0, !dbg !15430
  br i1 %16, label %17, label %19, !dbg !15431

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15432
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15433
  br label %24, !dbg !15434

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15427
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14689, metadata !DIExpression()) #23, !dbg !15421
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15427
  br i1 %21, label %22, label %12, !dbg !15426, !llvm.loop !15435

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15437
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15438
  br label %24, !dbg !15439

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15441 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15446, metadata !DIExpression()), !dbg !15447
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15445, metadata !DIExpression()), !dbg !15447
  %4 = icmp eq i64 %3, -1, !dbg !15448
  br i1 %4, label %6, label %5, !dbg !15450

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.301(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15451
  br label %6, !dbg !15453

6:                                                ; preds = %5, %2
  ret void, !dbg !15454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.301(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15455 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15458, metadata !DIExpression()), !dbg !15459
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15457, metadata !DIExpression()), !dbg !15459
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15460
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15461
  ret void, !dbg !15462
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15463 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15465, metadata !DIExpression()), !dbg !15473
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15474
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15474
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15466, metadata !DIExpression()), !dbg !15473
  call void @llvm.dbg.value(metadata i32 0, metadata !15467, metadata !DIExpression()), !dbg !15475
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !15476
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15478, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15480
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !15480
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15476
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15481
  br i1 %5, label %7, label %6, !dbg !15482

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15483
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15483
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15483
  unreachable, !dbg !15483

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15480
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15476
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15484
  call void @llvm.dbg.value(metadata i32 undef, metadata !15469, metadata !DIExpression()), !dbg !15475
  call void @llvm.dbg.value(metadata i32 undef, metadata !15467, metadata !DIExpression()), !dbg !15475
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15485
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15486
  %10 = load i8, i8* %9, align 1, !dbg !15486
  %11 = and i8 %10, 40, !dbg !15487
  %12 = icmp eq i8 %11, 0, !dbg !15487
  call void @llvm.dbg.value(metadata i1 %12, metadata !15470, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15488
  br i1 %12, label %13, label %20, !dbg !15489

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15490
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !15490
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !15490
  %17 = icmp eq %union.anon* %16, null, !dbg !15494
  br i1 %17, label %19, label %18, !dbg !15495

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15496
  br label %19, !dbg !15498

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.299(%struct.k_thread* noundef nonnull %3) #24, !dbg !15499
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15500
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15501
  br label %20, !dbg !15502

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15503
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !15503
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15505
  br i1 %21, label %23, label %22, !dbg !15506

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15507
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15507
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15507
  unreachable, !dbg !15507

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15478
  call void @llvm.dbg.value(metadata i32 %24, metadata !14471, metadata !DIExpression()) #23, !dbg !15480
  call void @llvm.dbg.value(metadata i32 %24, metadata !14465, metadata !DIExpression()) #23, !dbg !15476
  call void @llvm.dbg.value(metadata i32 %24, metadata !15469, metadata !DIExpression()), !dbg !15475
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15503
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()) #23, !dbg !15508
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15510, !srcloc !14513
  call void @llvm.dbg.value(metadata i32 1, metadata !15467, metadata !DIExpression()), !dbg !15475
  call void @llvm.dbg.value(metadata i32 undef, metadata !15467, metadata !DIExpression()), !dbg !15475
  ret void, !dbg !15511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15512 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15514, metadata !DIExpression()), !dbg !15515
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15516
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15517
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15518
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15519
  store %union.anon* null, %union.anon** %3, align 8, !dbg !15520
  ret void, !dbg !15521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15522 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15526, metadata !DIExpression()), !dbg !15527
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15528
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !15528
  %4 = icmp eq %union.anon* %3, null, !dbg !15528
  br i1 %4, label %5, label %6, !dbg !15531

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 726) #25, !dbg !15532
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 726) #25, !dbg !15532
  unreachable, !dbg !15532

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !15534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15535 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15537, metadata !DIExpression()), !dbg !15538
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15539
  %3 = load i8, i8* %2, align 1, !dbg !15540
  %4 = and i8 %3, -3, !dbg !15540
  store i8 %4, i8* %2, align 1, !dbg !15540
  ret void, !dbg !15541
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15542 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15544, metadata !DIExpression()), !dbg !15545
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15546
  br i1 %2, label %3, label %7, !dbg !15548

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14651, metadata !DIExpression()) #23, !dbg !15549
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15552
  %5 = load i8, i8* %4, align 1, !dbg !15553
  %6 = and i8 %5, 127, !dbg !15553
  store i8 %6, i8* %4, align 1, !dbg !15553
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14659, metadata !DIExpression()) #23, !dbg !15554
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15556
  br label %7, !dbg !15557

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15558
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15559
  %10 = zext i1 %9 to i32, !dbg !15559
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15560
  ret void, !dbg !15561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15562 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15564, metadata !DIExpression()), !dbg !15565
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15566
  %3 = load i8, i8* %2, align 1, !dbg !15567
  %4 = or i8 %3, 2, !dbg !15567
  store i8 %4, i8* %2, align 1, !dbg !15567
  ret void, !dbg !15568
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15569 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15571, metadata !DIExpression()), !dbg !15575
  call void @llvm.dbg.value(metadata i32 0, metadata !15572, metadata !DIExpression()), !dbg !15576
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !15577
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15579, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15581
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !15581
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15577
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15582
  br i1 %3, label %5, label %4, !dbg !15583

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15584
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15584
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15584
  unreachable, !dbg !15584

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15581
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15577
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15585
  call void @llvm.dbg.value(metadata i32 undef, metadata !15574, metadata !DIExpression()), !dbg !15576
  call void @llvm.dbg.value(metadata i32 undef, metadata !15572, metadata !DIExpression()), !dbg !15576
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15586
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15589
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !15589
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15591
  br i1 %6, label %8, label %7, !dbg !15592

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15593
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15593
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15593
  unreachable, !dbg !15593

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15579
  call void @llvm.dbg.value(metadata i32 %9, metadata !14471, metadata !DIExpression()) #23, !dbg !15581
  call void @llvm.dbg.value(metadata i32 %9, metadata !14465, metadata !DIExpression()) #23, !dbg !15577
  call void @llvm.dbg.value(metadata i32 %9, metadata !15574, metadata !DIExpression()), !dbg !15576
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15589
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()) #23, !dbg !15594
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15596, !srcloc !14513
  call void @llvm.dbg.value(metadata i32 1, metadata !15572, metadata !DIExpression()), !dbg !15576
  call void @llvm.dbg.value(metadata i32 undef, metadata !15572, metadata !DIExpression()), !dbg !15576
  ret void, !dbg !15597
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15598 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15604, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata i32 %0, metadata !15602, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15603, metadata !DIExpression()), !dbg !15609
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15610
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15611
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15612
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15613
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15614
  call void @llvm.dbg.value(metadata i32 %6, metadata !15605, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata i32 0, metadata !15606, metadata !DIExpression()), !dbg !15615
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !15616
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15618, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15620
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !15620
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15616
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15621
  br i1 %8, label %10, label %9, !dbg !15622

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15623
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15623
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15623
  unreachable, !dbg !15623

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15620
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15616
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15624
  call void @llvm.dbg.value(metadata i32 undef, metadata !15608, metadata !DIExpression()), !dbg !15615
  call void @llvm.dbg.value(metadata i32 undef, metadata !15606, metadata !DIExpression()), !dbg !15615
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15625
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15629
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15630
  br i1 %13, label %14, label %15, !dbg !15631

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15632
  br label %15, !dbg !15634

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15635
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !15635
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15637
  br i1 %16, label %18, label %17, !dbg !15638

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15639
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15639
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15639
  unreachable, !dbg !15639

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15618
  call void @llvm.dbg.value(metadata i32 %19, metadata !14471, metadata !DIExpression()) #23, !dbg !15620
  call void @llvm.dbg.value(metadata i32 %19, metadata !14465, metadata !DIExpression()) #23, !dbg !15616
  call void @llvm.dbg.value(metadata i32 %19, metadata !15608, metadata !DIExpression()), !dbg !15615
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15635
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()) #23, !dbg !15640
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15642, !srcloc !14513
  call void @llvm.dbg.value(metadata i32 1, metadata !15606, metadata !DIExpression()), !dbg !15615
  call void @llvm.dbg.value(metadata i32 undef, metadata !15606, metadata !DIExpression()), !dbg !15615
  ret i32 %6, !dbg !15643
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15644 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15649, metadata !DIExpression()), !dbg !15652
  call void @llvm.dbg.value(metadata i64 undef, metadata !15651, metadata !DIExpression()), !dbg !15652
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15648, metadata !DIExpression()), !dbg !15652
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15650, metadata !DIExpression()), !dbg !15652
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15653
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15654
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15655
  br i1 %6, label %7, label %8, !dbg !15658

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 846) #25, !dbg !15659
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 846) #25, !dbg !15659
  unreachable, !dbg !15659

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !15661
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15663, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15665
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !15665
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15661
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15666
  br i1 %10, label %12, label %11, !dbg !15667

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15668
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15668
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15668
  unreachable, !dbg !15668

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15665
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15661
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15669
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15670
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !15671
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15146, metadata !DIExpression()) #23, !dbg !15672
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15674
  br i1 %14, label %16, label %15, !dbg !15675

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !15676
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15676
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !15676
  unreachable, !dbg !15676

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15137, metadata !DIExpression()) #23, !dbg !15677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15142, metadata !DIExpression()) #23, !dbg !15677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15146, metadata !DIExpression()) #23, !dbg !15679
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15681
  br i1 %17, label %19, label %18, !dbg !15682

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !15683
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15683
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !15683
  unreachable, !dbg !15683

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15137, metadata !DIExpression()) #23, !dbg !15677
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15684
  ret i32 %21, !dbg !15685
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15686 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15690, metadata !DIExpression()), !dbg !15695
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15691, metadata !DIExpression()), !dbg !15695
  call void @llvm.dbg.value(metadata i32 0, metadata !15692, metadata !DIExpression()), !dbg !15696
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !15697
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15699, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15701
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !15701
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15697
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15702
  br i1 %3, label %5, label %4, !dbg !15703

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15704
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15704
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15704
  unreachable, !dbg !15704

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15701
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15697
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15705
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()), !dbg !15696
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15691, metadata !DIExpression()), !dbg !15695
  call void @llvm.dbg.value(metadata i32 undef, metadata !15692, metadata !DIExpression()), !dbg !15696
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15706
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15691, metadata !DIExpression()), !dbg !15695
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15709
  br i1 %8, label %10, label %9, !dbg !15711

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15712
  br label %10, !dbg !15714

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15715
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !15715
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15717
  br i1 %11, label %13, label %12, !dbg !15718

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15719
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15719
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15719
  unreachable, !dbg !15719

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15699
  call void @llvm.dbg.value(metadata i32 %14, metadata !14471, metadata !DIExpression()) #23, !dbg !15701
  call void @llvm.dbg.value(metadata i32 %14, metadata !14465, metadata !DIExpression()) #23, !dbg !15697
  call void @llvm.dbg.value(metadata i32 %14, metadata !15694, metadata !DIExpression()), !dbg !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15715
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()) #23, !dbg !15720
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15722, !srcloc !14513
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15691, metadata !DIExpression()), !dbg !15695
  call void @llvm.dbg.value(metadata i32 undef, metadata !15692, metadata !DIExpression()), !dbg !15696
  ret %struct.k_thread* %7, !dbg !15723
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15724 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15726, metadata !DIExpression()), !dbg !15731
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15727, metadata !DIExpression()), !dbg !15731
  call void @llvm.dbg.value(metadata i32 0, metadata !15728, metadata !DIExpression()), !dbg !15732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !15733
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15735, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15737
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !15737
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15733
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15738
  br i1 %3, label %5, label %4, !dbg !15739

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15740
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15740
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15740
  unreachable, !dbg !15740

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15737
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15733
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15741
  call void @llvm.dbg.value(metadata i32 undef, metadata !15730, metadata !DIExpression()), !dbg !15732
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15727, metadata !DIExpression()), !dbg !15731
  call void @llvm.dbg.value(metadata i32 undef, metadata !15728, metadata !DIExpression()), !dbg !15732
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15742
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15727, metadata !DIExpression()), !dbg !15731
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15745
  br i1 %8, label %11, label %9, !dbg !15747

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15748
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15750
  br label %11, !dbg !15751

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15752
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !15752
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15754
  br i1 %12, label %14, label %13, !dbg !15755

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15756
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15756
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15756
  unreachable, !dbg !15756

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15735
  call void @llvm.dbg.value(metadata i32 %15, metadata !14471, metadata !DIExpression()) #23, !dbg !15737
  call void @llvm.dbg.value(metadata i32 %15, metadata !14465, metadata !DIExpression()) #23, !dbg !15733
  call void @llvm.dbg.value(metadata i32 %15, metadata !15730, metadata !DIExpression()), !dbg !15732
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()) #23, !dbg !15757
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15759, !srcloc !14513
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15727, metadata !DIExpression()), !dbg !15731
  call void @llvm.dbg.value(metadata i32 undef, metadata !15728, metadata !DIExpression()), !dbg !15732
  ret %struct.k_thread* %7, !dbg !15760
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15761 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15763, metadata !DIExpression()), !dbg !15764
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15571, metadata !DIExpression()) #23, !dbg !15765
  call void @llvm.dbg.value(metadata i32 0, metadata !15572, metadata !DIExpression()) #23, !dbg !15767
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !15768
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15770, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15772
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !15772
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15768
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15773
  br i1 %3, label %5, label %4, !dbg !15774

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15775
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15775
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15775
  unreachable, !dbg !15775

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15772
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15768
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15776
  call void @llvm.dbg.value(metadata i32 undef, metadata !15574, metadata !DIExpression()) #23, !dbg !15767
  call void @llvm.dbg.value(metadata i32 undef, metadata !15572, metadata !DIExpression()) #23, !dbg !15767
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15777
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15778
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !15778
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15780
  br i1 %6, label %8, label %7, !dbg !15781

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15782
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15782
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15782
  unreachable, !dbg !15782

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15770
  call void @llvm.dbg.value(metadata i32 %9, metadata !14471, metadata !DIExpression()) #23, !dbg !15772
  call void @llvm.dbg.value(metadata i32 %9, metadata !14465, metadata !DIExpression()) #23, !dbg !15768
  call void @llvm.dbg.value(metadata i32 %9, metadata !15574, metadata !DIExpression()) #23, !dbg !15767
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15778
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()) #23, !dbg !15783
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15785, !srcloc !14513
  call void @llvm.dbg.value(metadata i32 1, metadata !15572, metadata !DIExpression()) #23, !dbg !15767
  call void @llvm.dbg.value(metadata i32 undef, metadata !15572, metadata !DIExpression()) #23, !dbg !15767
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15786
  ret void, !dbg !15787
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15788 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15790, metadata !DIExpression()), !dbg !15796
  call void @llvm.dbg.value(metadata i32 %1, metadata !15791, metadata !DIExpression()), !dbg !15796
  call void @llvm.dbg.value(metadata i8 0, metadata !15792, metadata !DIExpression()), !dbg !15796
  call void @llvm.dbg.value(metadata i32 0, metadata !15793, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !15798
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15800, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15802
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !15802
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15798
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15803
  br i1 %4, label %6, label %5, !dbg !15804

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15805
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15805
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15805
  unreachable, !dbg !15805

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15802
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15798
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15806
  call void @llvm.dbg.value(metadata i32 undef, metadata !15795, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata i8 poison, metadata !15792, metadata !DIExpression()), !dbg !15796
  call void @llvm.dbg.value(metadata i32 undef, metadata !15793, metadata !DIExpression()), !dbg !15797
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15807
  call void @llvm.dbg.value(metadata i1 %9, metadata !15792, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15796
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15810

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14651, metadata !DIExpression()) #23, !dbg !15811
  %14 = load i8, i8* %7, align 1, !dbg !15817
  %15 = and i8 %14, 127, !dbg !15817
  store i8 %15, i8* %7, align 1, !dbg !15817
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14659, metadata !DIExpression()) #23, !dbg !15818
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15820
  store i8 %12, i8* %11, align 2, !dbg !15821
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14668, metadata !DIExpression()) #23, !dbg !15822
  %16 = load i8, i8* %7, align 1, !dbg !15824
  %17 = or i8 %16, -128, !dbg !15824
  store i8 %17, i8* %7, align 1, !dbg !15824
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14675, metadata !DIExpression()) #23, !dbg !15825
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14682, metadata !DIExpression()) #23, !dbg !15827
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14688, metadata !DIExpression()) #23, !dbg !15827
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15829
  br i1 %18, label %19, label %20, !dbg !15830

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15831
  unreachable, !dbg !15831

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15832
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14689, metadata !DIExpression()) #23, !dbg !15827
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15833
  br i1 %22, label %32, label %23, !dbg !15832

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14689, metadata !DIExpression()) #23, !dbg !15827
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15834
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14689, metadata !DIExpression()) #23, !dbg !15827
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15835
  %27 = icmp sgt i32 %26, 0, !dbg !15836
  br i1 %27, label %28, label %29, !dbg !15837

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15838
  br label %33, !dbg !15839

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15833
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14689, metadata !DIExpression()) #23, !dbg !15827
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15833
  br i1 %31, label %32, label %23, !dbg !15832, !llvm.loop !15840

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15842
  br label %33, !dbg !15843

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15844
  br label %35, !dbg !15845

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15846
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !15848
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15850
  br i1 %36, label %38, label %37, !dbg !15851

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15852
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15852
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15852
  unreachable, !dbg !15852

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15800
  call void @llvm.dbg.value(metadata i32 %39, metadata !14471, metadata !DIExpression()) #23, !dbg !15802
  call void @llvm.dbg.value(metadata i32 %39, metadata !14465, metadata !DIExpression()) #23, !dbg !15798
  call void @llvm.dbg.value(metadata i32 %39, metadata !15795, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15848
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()) #23, !dbg !15853
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15855, !srcloc !14513
  call void @llvm.dbg.value(metadata i8 poison, metadata !15792, metadata !DIExpression()), !dbg !15796
  call void @llvm.dbg.value(metadata i32 undef, metadata !15793, metadata !DIExpression()), !dbg !15797
  ret i1 %9, !dbg !15856
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15857 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15861, metadata !DIExpression()), !dbg !15864
  call void @llvm.dbg.value(metadata i32 %1, metadata !15862, metadata !DIExpression()), !dbg !15864
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15865
  call void @llvm.dbg.value(metadata i1 %3, metadata !15863, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15864
  br i1 %3, label %4, label %12, !dbg !15866

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15868
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15869
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15869
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15869
  %9 = load i8, i8* %8, align 1, !dbg !15869
  %10 = icmp eq i8 %9, 0, !dbg !15870
  br i1 %10, label %11, label %12, !dbg !15871

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15872
  br label %12, !dbg !15874

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15875
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15876 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15878, metadata !DIExpression()), !dbg !15881
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !15882
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15884, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15886
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !15886
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15882
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15887
  br i1 %2, label %4, label %3, !dbg !15888

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15889
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15889
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15889
  unreachable, !dbg !15889

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15886
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15882
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15890
  call void @llvm.dbg.value(metadata i32 undef, metadata !15880, metadata !DIExpression()), !dbg !15881
  call void @llvm.dbg.value(metadata i32 undef, metadata !15878, metadata !DIExpression()), !dbg !15881
  tail call fastcc void @z_sched_lock() #24, !dbg !15891
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15894
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !15894
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15896
  br i1 %5, label %7, label %6, !dbg !15897

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15898
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15898
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15898
  unreachable, !dbg !15898

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15884
  call void @llvm.dbg.value(metadata i32 %8, metadata !14471, metadata !DIExpression()) #23, !dbg !15886
  call void @llvm.dbg.value(metadata i32 %8, metadata !14465, metadata !DIExpression()) #23, !dbg !15882
  call void @llvm.dbg.value(metadata i32 %8, metadata !15880, metadata !DIExpression()), !dbg !15881
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15894
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()) #23, !dbg !15899
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15901, !srcloc !14513
  call void @llvm.dbg.value(metadata i32 1, metadata !15878, metadata !DIExpression()), !dbg !15881
  call void @llvm.dbg.value(metadata i32 undef, metadata !15878, metadata !DIExpression()), !dbg !15881
  ret void, !dbg !15902
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15903 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15904, !srcloc !15193
  call void @llvm.dbg.value(metadata i32 %1, metadata !15189, metadata !DIExpression()) #23, !dbg !15909
  %2 = icmp eq i32 %1, 0, !dbg !15910
  br i1 %2, label %4, label %3, !dbg !15911

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.309, i32 0, i32 0), i32 noundef 253) #25, !dbg !15912
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !15912
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.309, i32 0, i32 0), i32 noundef 253) #25, !dbg !15912
  unreachable, !dbg !15912

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15914
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15914
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15914
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15914
  %9 = load i8, i8* %8, align 1, !dbg !15914
  %10 = icmp eq i8 %9, 1, !dbg !15914
  br i1 %10, label %11, label %12, !dbg !15917

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.309, i32 0, i32 0), i32 noundef 254) #25, !dbg !15918
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !15918
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.309, i32 0, i32 0), i32 noundef 254) #25, !dbg !15918
  unreachable, !dbg !15918

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15920
  store i8 %13, i8* %8, align 1, !dbg !15920
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15921, !srcloc !15923
  ret void, !dbg !15924
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15925 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15927, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !15931
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15933, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15935
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !15935
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15931
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15936
  br i1 %2, label %4, label %3, !dbg !15937

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15938
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15938
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15938
  unreachable, !dbg !15938

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !15935
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !15931
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15939
  call void @llvm.dbg.value(metadata i32 undef, metadata !15929, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.value(metadata i32 undef, metadata !15927, metadata !DIExpression()), !dbg !15930
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15940
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15940
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15940
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15940
  %9 = load i8, i8* %8, align 1, !dbg !15940
  %10 = icmp eq i8 %9, 0, !dbg !15940
  br i1 %10, label %11, label %12, !dbg !15945

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 999) #25, !dbg !15946
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !15946
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 999) #25, !dbg !15946
  unreachable, !dbg !15946

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15948, !srcloc !15193
  call void @llvm.dbg.value(metadata i32 %13, metadata !15189, metadata !DIExpression()) #23, !dbg !15953
  %14 = icmp eq i32 %13, 0, !dbg !15954
  br i1 %14, label %16, label %15, !dbg !15955

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15956
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !15956
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15956
  unreachable, !dbg !15956

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15958
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15959
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15959
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15959
  %21 = load i8, i8* %20, align 1, !dbg !15960
  %22 = add i8 %21, 1, !dbg !15960
  store i8 %22, i8* %20, align 1, !dbg !15960
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15961
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15962
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !15962
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15964
  br i1 %23, label %25, label %24, !dbg !15965

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15966
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15966
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15966
  unreachable, !dbg !15966

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15933
  call void @llvm.dbg.value(metadata i32 %26, metadata !14471, metadata !DIExpression()) #23, !dbg !15935
  call void @llvm.dbg.value(metadata i32 %26, metadata !14465, metadata !DIExpression()) #23, !dbg !15931
  call void @llvm.dbg.value(metadata i32 %26, metadata !15929, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !15962
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()) #23, !dbg !15967
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15969, !srcloc !14513
  call void @llvm.dbg.value(metadata i32 1, metadata !15927, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.value(metadata i32 undef, metadata !15927, metadata !DIExpression()), !dbg !15930
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15970
  ret void, !dbg !15971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15972 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15973
  ret %struct.k_thread* %1, !dbg !15974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15975 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15979, metadata !DIExpression()), !dbg !15984
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15980, metadata !DIExpression()), !dbg !15984
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15985
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15981, metadata !DIExpression()), !dbg !15984
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15986
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15982, metadata !DIExpression()), !dbg !15984
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15987
  call void @llvm.dbg.value(metadata i32 %5, metadata !15983, metadata !DIExpression()), !dbg !15984
  %6 = icmp sgt i32 %5, 0, !dbg !15988
  br i1 %6, label %17, label %7, !dbg !15990

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15991
  br i1 %8, label %17, label %9, !dbg !15993

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15994
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15994
  %12 = load i32, i32* %11, align 8, !dbg !15994
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15996
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15996
  %15 = load i32, i32* %14, align 8, !dbg !15996
  %16 = icmp ult i32 %12, %15, !dbg !15997
  br label %17, !dbg !15998

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15999
  ret i1 %18, !dbg !16000
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16001 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16018, metadata !DIExpression()), !dbg !16033
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16019, metadata !DIExpression()), !dbg !16033
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16034
  br i1 %4, label %5, label %6, !dbg !16037

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16038
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16038
  unreachable, !dbg !16038

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16040
  %8 = load i32, i32* %7, align 4, !dbg !16041
  %9 = add nsw i32 %8, 1, !dbg !16041
  store i32 %9, i32* %7, align 4, !dbg !16041
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16042
  store i32 %8, i32* %10, align 8, !dbg !16043
  %11 = load i32, i32* %7, align 4, !dbg !16044
  %12 = icmp eq i32 %11, 0, !dbg !16045
  br i1 %12, label %13, label %35, !dbg !16046

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16047
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16047
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16021, metadata !DIExpression()), !dbg !16047
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16047
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16047
  %17 = load i32, i32* %16, align 4, !dbg !16047
  %18 = shl i32 %17, 2, !dbg !16047
  %19 = alloca i8, i32 %18, align 8, !dbg !16047
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16047
  store i8* %19, i8** %20, align 4, !dbg !16047
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16047
  %22 = alloca i8, i32 %17, align 8, !dbg !16047
  store i8* %22, i8** %21, align 4, !dbg !16047
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16047
  store i32 -1, i32* %23, align 4, !dbg !16047
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16048
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16030, metadata !DIExpression()), !dbg !16049
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16020, metadata !DIExpression()), !dbg !16033
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16050
  br i1 %25, label %26, label %27, !dbg !16047

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16050
  br label %35, !dbg !16051

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !16020, metadata !DIExpression()), !dbg !16033
  %29 = load i32, i32* %7, align 4, !dbg !16052
  %30 = add nsw i32 %29, 1, !dbg !16052
  store i32 %30, i32* %7, align 4, !dbg !16052
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16054
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16054
  store i32 %29, i32* %32, align 8, !dbg !16055
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16048
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16030, metadata !DIExpression()), !dbg !16049
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16020, metadata !DIExpression()), !dbg !16033
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16050
  br i1 %34, label %26, label %27, !dbg !16047, !llvm.loop !16056

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16058
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16059
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !16060
  ret void, !dbg !16061
}

; Function Attrs: optsize
declare !dbg !16062 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16067 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16070 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16072, metadata !DIExpression()), !dbg !16074
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16073, metadata !DIExpression()), !dbg !16074
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16075
  br i1 %3, label %4, label %5, !dbg !16078

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16079
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16079
  unreachable, !dbg !16079

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16081
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16082
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !16083
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16084
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !16084
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !16086
  br i1 %10, label %11, label %13, !dbg !16087

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16088
  store i32 0, i32* %12, align 4, !dbg !16090
  br label %13, !dbg !16091

13:                                               ; preds = %11, %5
  ret void, !dbg !16092
}

; Function Attrs: optsize
declare !dbg !16093 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16094 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16098, metadata !DIExpression()), !dbg !16101
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16099, metadata !DIExpression()), !dbg !16101
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16102
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16103
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16100, metadata !DIExpression()), !dbg !16101
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16099, metadata !DIExpression()), !dbg !16101
  ret %struct.k_thread* %4, !dbg !16104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16105 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16109, metadata !DIExpression()), !dbg !16110
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16111
  ret %struct.rbnode* %2, !dbg !16112
}

; Function Attrs: optsize
declare !dbg !16113 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16116 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16126, metadata !DIExpression()), !dbg !16130
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16131
  %3 = load i32, i32* %2, align 4, !dbg !16131
  %4 = icmp eq i32 %3, 0, !dbg !16133
  br i1 %4, label %10, label %5, !dbg !16134

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16127, metadata !DIExpression()), !dbg !16130
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16135, !range !7454
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16136
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16128, metadata !DIExpression()), !dbg !16130
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16137
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16129, metadata !DIExpression()), !dbg !16130
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16127, metadata !DIExpression()), !dbg !16130
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16130
  ret %struct.k_thread* %11, !dbg !16138
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16139 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16143, metadata !DIExpression()), !dbg !16146
  call void @llvm.dbg.value(metadata i32 0, metadata !16144, metadata !DIExpression()), !dbg !16146
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16147
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16145, metadata !DIExpression()), !dbg !16146
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16148
  br i1 %3, label %8, label %4, !dbg !16149

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16150
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16152
  call void @llvm.dbg.value(metadata i32 1, metadata !16144, metadata !DIExpression()), !dbg !16146
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16147
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16145, metadata !DIExpression()), !dbg !16146
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16148
  br i1 %7, label %8, label %4, !dbg !16149, !llvm.loop !16153

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16146
  ret i32 %9, !dbg !16155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #8 !dbg !16156 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16158, metadata !DIExpression()), !dbg !16159
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16160
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16161
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16162
  ret %struct.k_thread* %4, !dbg !16163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !16164 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16173, metadata !DIExpression()), !dbg !16174
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16175
  tail call fastcc void @sys_dlist_init.314(%struct._dnode* noundef nonnull %2) #24, !dbg !16176
  ret void, !dbg !16177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.314(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16178 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16182, metadata !DIExpression()), !dbg !16183
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16184
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16185
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16186
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16187
  ret void, !dbg !16188
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16189 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16190
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16191
  ret void, !dbg !16192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16193 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16198, metadata !DIExpression()), !dbg !16199
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16200
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16200
  %4 = load i8, i8* %3, align 2, !dbg !16200
  %5 = sext i8 %4 to i32, !dbg !16201
  ret i32 %5, !dbg !16202
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16203 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16207, metadata !DIExpression()), !dbg !16210
  call void @llvm.dbg.value(metadata i32 %1, metadata !16208, metadata !DIExpression()), !dbg !16210
  %3 = add i32 %1, 16, !dbg !16211
  %4 = icmp ult i32 %3, 31, !dbg !16211
  br i1 %4, label %6, label %5, !dbg !16211

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16215
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.318, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !16215
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16215
  unreachable, !dbg !16215

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16217, !srcloc !15193
  call void @llvm.dbg.value(metadata i32 %7, metadata !15189, metadata !DIExpression()) #23, !dbg !16222
  %8 = icmp eq i32 %7, 0, !dbg !16223
  br i1 %8, label %10, label %9, !dbg !16224

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16225
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !16225
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16225
  unreachable, !dbg !16225

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16209, metadata !DIExpression()), !dbg !16210
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16227
  ret void, !dbg !16228
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16229 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16230
  br i1 %1, label %8, label %2, !dbg !16231

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16232
  br i1 %3, label %8, label %4, !dbg !16233

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16234
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16235
  %7 = xor i1 %6, true, !dbg !16233
  br label %8, !dbg !16233

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !16237 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16238, !range !6617
  %2 = icmp eq i8 %1, 0, !dbg !16238
  ret i1 %2, !dbg !16239
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16240 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16243, !srcloc !15193
  call void @llvm.dbg.value(metadata i32 %1, metadata !15189, metadata !DIExpression()) #23, !dbg !16248
  %2 = icmp eq i32 %1, 0, !dbg !16249
  br i1 %2, label %4, label %3, !dbg !16250

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16251
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !16251
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16251
  unreachable, !dbg !16251

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !16253
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16255, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !16257
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !16257
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !16253
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16258
  br i1 %6, label %8, label %7, !dbg !16259

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16260
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16260
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16260
  unreachable, !dbg !16260

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !16257
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !16253
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16261
  call void @llvm.dbg.value(metadata i32 undef, metadata !16242, metadata !DIExpression()), !dbg !16262
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16263
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14651, metadata !DIExpression()) #23, !dbg !16266
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16268
  %11 = load i8, i8* %10, align 1, !dbg !16269
  %12 = and i8 %11, 127, !dbg !16269
  store i8 %12, i8* %10, align 1, !dbg !16269
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14659, metadata !DIExpression()) #23, !dbg !16270
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !16272
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16273
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14668, metadata !DIExpression()) #23, !dbg !16274
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16276
  %15 = load i8, i8* %14, align 1, !dbg !16277
  %16 = or i8 %15, -128, !dbg !16277
  store i8 %16, i8* %14, align 1, !dbg !16277
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14675, metadata !DIExpression()) #23, !dbg !16278
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14682, metadata !DIExpression()) #23, !dbg !16280
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14688, metadata !DIExpression()) #23, !dbg !16280
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !16282
  br i1 %17, label %18, label %19, !dbg !16283

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !16284
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !16284
  unreachable, !dbg !16284

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16285
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14689, metadata !DIExpression()) #23, !dbg !16280
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16286
  br i1 %21, label %32, label %22, !dbg !16285

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14689, metadata !DIExpression()) #23, !dbg !16280
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16287
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14689, metadata !DIExpression()) #23, !dbg !16280
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16288
  %26 = icmp sgt i32 %25, 0, !dbg !16289
  br i1 %26, label %27, label %29, !dbg !16290

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16291
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16292
  br label %34, !dbg !16293

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !16286
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14689, metadata !DIExpression()) #23, !dbg !16280
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16286
  br i1 %31, label %32, label %22, !dbg !16285, !llvm.loop !16294

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16296
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16297
  br label %34, !dbg !16298

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16299
  call void @llvm.dbg.value(metadata i32 undef, metadata !15137, metadata !DIExpression()) #23, !dbg !16300
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15142, metadata !DIExpression()) #23, !dbg !16300
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15146, metadata !DIExpression()) #23, !dbg !16302
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16304
  br i1 %35, label %37, label %36, !dbg !16305

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16306
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16306
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16306
  unreachable, !dbg !16306

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16255
  call void @llvm.dbg.value(metadata i32 %38, metadata !14471, metadata !DIExpression()) #23, !dbg !16257
  call void @llvm.dbg.value(metadata i32 %38, metadata !14465, metadata !DIExpression()) #23, !dbg !16253
  call void @llvm.dbg.value(metadata i32 %38, metadata !16242, metadata !DIExpression()), !dbg !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !15137, metadata !DIExpression()) #23, !dbg !16300
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16307
  ret void, !dbg !16308
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16309 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16313, metadata !DIExpression()), !dbg !16316
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16317, !srcloc !15193
  call void @llvm.dbg.value(metadata i32 %3, metadata !15189, metadata !DIExpression()) #23, !dbg !16322
  %4 = icmp eq i32 %3, 0, !dbg !16323
  br i1 %4, label %6, label %5, !dbg !16324

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16325
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !16325
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16325
  unreachable, !dbg !16325

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16327
  br i1 %7, label %8, label %10, !dbg !16329

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16330
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !16332
  br label %15, !dbg !16333

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16314, metadata !DIExpression()), !dbg !16316
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16334
  %12 = sext i32 %11 to i64, !dbg !16334
  call void @llvm.dbg.value(metadata i64 %12, metadata !16314, metadata !DIExpression()), !dbg !16316
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !16335
  %14 = trunc i64 %13 to i32, !dbg !16335
  call void @llvm.dbg.value(metadata i32 %14, metadata !16315, metadata !DIExpression()), !dbg !16316
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16316
  ret i32 %16, !dbg !16336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16337 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16341, metadata !DIExpression()), !dbg !16342
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16343, !srcloc !16345
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16346
  ret void, !dbg !16347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16348 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16352, metadata !DIExpression()), !dbg !16356
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16357, !srcloc !15193
  call void @llvm.dbg.value(metadata i32 %2, metadata !15189, metadata !DIExpression()) #23, !dbg !16362
  %3 = icmp eq i32 %2, 0, !dbg !16363
  br i1 %3, label %5, label %4, !dbg !16364

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16365
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !16365
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16365
  unreachable, !dbg !16365

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16367
  br i1 %6, label %7, label %8, !dbg !16369

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !16370
  br label %43, !dbg !16372

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16354, metadata !DIExpression()), !dbg !16356
  %9 = icmp sgt i64 %0, -3, !dbg !16373
  br i1 %9, label %10, label %14, !dbg !16375

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16376
  %12 = trunc i64 %0 to i32, !dbg !16378
  %13 = add i32 %11, %12, !dbg !16378
  call void @llvm.dbg.value(metadata i32 %13, metadata !16353, metadata !DIExpression()), !dbg !16356
  br label %17, !dbg !16379

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16380
  %16 = sub i32 -2, %15, !dbg !16380
  call void @llvm.dbg.value(metadata i32 %16, metadata !16353, metadata !DIExpression()), !dbg !16356
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16382
  call void @llvm.dbg.value(metadata i32 %18, metadata !16353, metadata !DIExpression()), !dbg !16356
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !16383
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16385, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !16387
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !16387
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !16383
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16388
  br i1 %20, label %22, label %21, !dbg !16389

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16390
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16390
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16390
  unreachable, !dbg !16390

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !16387
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !16383
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16391
  call void @llvm.dbg.value(metadata i32 undef, metadata !16355, metadata !DIExpression()), !dbg !16356
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16392
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16393
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !16394
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16395
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16396
  tail call fastcc void @z_add_thread_timeout.301(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !16396
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16397
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !16398
  call void @llvm.dbg.value(metadata i32 undef, metadata !15137, metadata !DIExpression()) #23, !dbg !16399
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15142, metadata !DIExpression()) #23, !dbg !16399
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15146, metadata !DIExpression()) #23, !dbg !16401
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16403
  br i1 %27, label %29, label %28, !dbg !16404

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16405
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16405
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16405
  unreachable, !dbg !16405

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16385
  call void @llvm.dbg.value(metadata i32 %30, metadata !14471, metadata !DIExpression()) #23, !dbg !16387
  call void @llvm.dbg.value(metadata i32 %30, metadata !14465, metadata !DIExpression()) #23, !dbg !16383
  call void @llvm.dbg.value(metadata i32 %30, metadata !16355, metadata !DIExpression()), !dbg !16356
  call void @llvm.dbg.value(metadata i32 undef, metadata !15137, metadata !DIExpression()) #23, !dbg !16399
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !16406
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16407
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !16407
  br i1 %33, label %34, label %35, !dbg !16410

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16411
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.293, i32 0, i32 0)) #25, !dbg !16411
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16411
  unreachable, !dbg !16411

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16413
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16414
  %38 = zext i32 %37 to i64, !dbg !16414
  %39 = sub nsw i64 %36, %38, !dbg !16415
  call void @llvm.dbg.value(metadata i64 %39, metadata !16352, metadata !DIExpression()), !dbg !16356
  %40 = icmp sgt i64 %39, 0, !dbg !16416
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16416
  %42 = trunc i64 %41 to i32, !dbg !16416
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16356
  ret i32 %44, !dbg !16417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16418 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16420, metadata !DIExpression()), !dbg !16421
  call void @llvm.dbg.value(metadata i64 %0, metadata !14519, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.value(metadata i32 10000, metadata !14522, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.value(metadata i32 1000, metadata !14523, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.value(metadata i8 1, metadata !14524, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.value(metadata i1 false, metadata !14525, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16422
  call void @llvm.dbg.value(metadata i1 false, metadata !14526, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16422
  call void @llvm.dbg.value(metadata i8 0, metadata !14527, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.value(metadata i1 false, metadata !14528, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16422
  call void @llvm.dbg.value(metadata i1 true, metadata !14529, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16422
  call void @llvm.dbg.value(metadata i64 0, metadata !14530, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.value(metadata i64 0, metadata !14530, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.value(metadata i64 %0, metadata !14519, metadata !DIExpression()), !dbg !16422
  %2 = udiv i64 %0, 10, !dbg !16424
  ret i64 %2, !dbg !16428
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16429 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16430, !srcloc !16432
  tail call void @z_impl_k_yield() #24, !dbg !16433
  ret void, !dbg !16434
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16439, metadata !DIExpression()), !dbg !16441
  %2 = sext i32 %0 to i64, !dbg !16442
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16443
  call void @llvm.dbg.value(metadata i64 %3, metadata !16440, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16441
  %4 = shl i64 %3, 32, !dbg !16444
  %5 = ashr exact i64 %4, 32, !dbg !16444
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16445
  call void @llvm.dbg.value(metadata i32 %6, metadata !16440, metadata !DIExpression()), !dbg !16441
  %7 = sext i32 %6 to i64, !dbg !16446
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16447
  %9 = trunc i64 %8 to i32, !dbg !16447
  ret i32 %9, !dbg !16448
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16449 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16451, metadata !DIExpression()), !dbg !16452
  call void @llvm.dbg.value(metadata i64 %0, metadata !14519, metadata !DIExpression()), !dbg !16453
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14522, metadata !DIExpression()), !dbg !16453
  call void @llvm.dbg.value(metadata i32 10000, metadata !14523, metadata !DIExpression()), !dbg !16453
  call void @llvm.dbg.value(metadata i8 1, metadata !14524, metadata !DIExpression()), !dbg !16453
  call void @llvm.dbg.value(metadata i1 false, metadata !14525, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16453
  call void @llvm.dbg.value(metadata i1 true, metadata !14526, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16453
  call void @llvm.dbg.value(metadata i8 0, metadata !14527, metadata !DIExpression()), !dbg !16453
  call void @llvm.dbg.value(metadata i1 false, metadata !14528, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16453
  call void @llvm.dbg.value(metadata i1 true, metadata !14529, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16453
  call void @llvm.dbg.value(metadata i64 0, metadata !14530, metadata !DIExpression()), !dbg !16453
  call void @llvm.dbg.value(metadata i64 0, metadata !14530, metadata !DIExpression()), !dbg !16453
  %2 = add i64 %0, 99, !dbg !16455
  call void @llvm.dbg.value(metadata i64 %2, metadata !14519, metadata !DIExpression()), !dbg !16453
  %3 = udiv i64 %2, 100, !dbg !16456
  ret i64 %3, !dbg !16457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16458 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16460, metadata !DIExpression()), !dbg !16461
  call void @llvm.dbg.value(metadata i64 %0, metadata !14519, metadata !DIExpression()), !dbg !16462
  call void @llvm.dbg.value(metadata i32 10000, metadata !14522, metadata !DIExpression()), !dbg !16462
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14523, metadata !DIExpression()), !dbg !16462
  call void @llvm.dbg.value(metadata i8 1, metadata !14524, metadata !DIExpression()), !dbg !16462
  call void @llvm.dbg.value(metadata i1 false, metadata !14525, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16462
  call void @llvm.dbg.value(metadata i1 false, metadata !14526, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16462
  call void @llvm.dbg.value(metadata i8 0, metadata !14527, metadata !DIExpression()), !dbg !16462
  call void @llvm.dbg.value(metadata i1 true, metadata !14528, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16462
  call void @llvm.dbg.value(metadata i1 false, metadata !14529, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16462
  call void @llvm.dbg.value(metadata i64 0, metadata !14530, metadata !DIExpression()), !dbg !16462
  call void @llvm.dbg.value(metadata i64 0, metadata !14530, metadata !DIExpression()), !dbg !16462
  %2 = mul i64 %0, 100, !dbg !16464
  ret i64 %2, !dbg !16466
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16467 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16469, metadata !DIExpression()), !dbg !16470
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16471
  br i1 %2, label %14, label %3, !dbg !16473

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16474
  %5 = icmp slt i32 %4, 0, !dbg !16476
  br i1 %5, label %6, label %10, !dbg !16477

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16478
  %8 = load i8, i8* %7, align 1, !dbg !16478
  %9 = icmp eq i8 %8, 16, !dbg !16481
  br i1 %9, label %10, label %14, !dbg !16482

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16483
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16484
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16485, !srcloc !15193
  call void @llvm.dbg.value(metadata i32 %11, metadata !15189, metadata !DIExpression()) #23, !dbg !16489
  %12 = icmp eq i32 %11, 0, !dbg !16490
  br i1 %12, label %13, label %14, !dbg !16491

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16492
  br label %14, !dbg !16494

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16496 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16498, metadata !DIExpression()), !dbg !16499
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16500
  %3 = load i8, i8* %2, align 1, !dbg !16500
  %4 = and i8 %3, 2, !dbg !16501
  %5 = icmp ne i8 %4, 0, !dbg !16502
  ret i1 %5, !dbg !16503
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16504 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16509
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16508, metadata !DIExpression()), !dbg !16510
  ret %struct.k_thread* %1, !dbg !16511
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16512 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16513, !srcloc !15193
  call void @llvm.dbg.value(metadata i32 %1, metadata !15189, metadata !DIExpression()) #23, !dbg !16516
  %2 = icmp eq i32 %1, 0, !dbg !16517
  br i1 %2, label %3, label %8, !dbg !16518

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16519
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16520
  %6 = icmp ne i32 %5, 0, !dbg !16518
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16521
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16522 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16524, metadata !DIExpression()), !dbg !16526
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !16527
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16529, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !16531
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !16531
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !16527
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16532
  br i1 %3, label %5, label %4, !dbg !16533

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16534
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16534
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16534
  unreachable, !dbg !16534

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16529
  call void @llvm.dbg.value(metadata i32 %6, metadata !14471, metadata !DIExpression()) #23, !dbg !16531
  call void @llvm.dbg.value(metadata i32 %6, metadata !14465, metadata !DIExpression()) #23, !dbg !16527
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16535
  call void @llvm.dbg.value(metadata i32 %6, metadata !16525, metadata !DIExpression()), !dbg !16526
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16536
  %8 = load i8, i8* %7, align 4, !dbg !16536
  %9 = and i8 %8, 1, !dbg !16538
  %10 = icmp eq i8 %9, 0, !dbg !16539
  br i1 %10, label %15, label %11, !dbg !16540

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !16541
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !16541
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16544
  br i1 %12, label %14, label %13, !dbg !16545

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16546
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16546
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16546
  unreachable, !dbg !16546

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14493, metadata !DIExpression()) #23, !dbg !16541
  call void @llvm.dbg.value(metadata i32 %6, metadata !14507, metadata !DIExpression()) #23, !dbg !16547
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16549, !srcloc !14513
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16550
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.325, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16550
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16550
  unreachable, !dbg !16550

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16554
  %17 = load i8, i8* %16, align 1, !dbg !16554
  %18 = and i8 %17, 8, !dbg !16556
  %19 = icmp eq i8 %18, 0, !dbg !16557
  br i1 %19, label %24, label %20, !dbg !16558

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !16559
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !16559
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16562
  br i1 %21, label %23, label %22, !dbg !16563

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16564
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16564
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16564
  unreachable, !dbg !16564

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14493, metadata !DIExpression()) #23, !dbg !16559
  call void @llvm.dbg.value(metadata i32 %6, metadata !14507, metadata !DIExpression()) #23, !dbg !16565
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16567, !srcloc !14513
  br label %39, !dbg !16568

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16569
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16570
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16572
  br i1 %26, label %27, label %35, !dbg !16573

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16574, !srcloc !15193
  call void @llvm.dbg.value(metadata i32 %28, metadata !15189, metadata !DIExpression()) #23, !dbg !16577
  %29 = icmp eq i32 %28, 0, !dbg !16578
  br i1 %29, label %30, label %35, !dbg !16579

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15137, metadata !DIExpression()) #23, !dbg !16580
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15142, metadata !DIExpression()) #23, !dbg !16580
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15146, metadata !DIExpression()) #23, !dbg !16583
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16585
  br i1 %31, label %33, label %32, !dbg !16586

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16587
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16587
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16587
  unreachable, !dbg !16587

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15137, metadata !DIExpression()) #23, !dbg !16580
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16588
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16589
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.326, i32 0, i32 0)) #25, !dbg !16589
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16589
  unreachable, !dbg !16589

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !16593
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !16593
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16595
  br i1 %36, label %38, label %37, !dbg !16596

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16597
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16597
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16597
  unreachable, !dbg !16597

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14493, metadata !DIExpression()) #23, !dbg !16593
  call void @llvm.dbg.value(metadata i32 %6, metadata !14507, metadata !DIExpression()) #23, !dbg !16598
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16600, !srcloc !14513
  br label %39, !dbg !16601

39:                                               ; preds = %38, %23
  ret void, !dbg !16601
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16602 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16604, metadata !DIExpression()), !dbg !16605
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16606
  %3 = load i8, i8* %2, align 1, !dbg !16606
  %4 = and i8 %3, 8, !dbg !16608
  %5 = icmp eq i8 %4, 0, !dbg !16609
  br i1 %5, label %6, label %20, !dbg !16610

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16611
  %8 = or i8 %7, 8, !dbg !16611
  store i8 %8, i8* %2, align 1, !dbg !16611
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16613
  br i1 %9, label %10, label %12, !dbg !16615

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14651, metadata !DIExpression()) #23, !dbg !16616
  %11 = and i8 %8, 95, !dbg !16619
  store i8 %11, i8* %2, align 1, !dbg !16619
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14659, metadata !DIExpression()) #23, !dbg !16620
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16622
  br label %12, !dbg !16623

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16624
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16624
  %15 = icmp eq %union.anon* %14, null, !dbg !16626
  br i1 %15, label %17, label %16, !dbg !16627

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16628
  br label %17, !dbg !16630

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16631
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16632
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !16633
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16634
  br label %20, !dbg !16635

20:                                               ; preds = %17, %1
  ret void, !dbg !16636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16637 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16641, metadata !DIExpression()), !dbg !16643
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16644
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16642, metadata !DIExpression()), !dbg !16643
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16645
  br i1 %3, label %10, label %4, !dbg !16646

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16647
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16649
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16650, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i32 0, metadata !16655, metadata !DIExpression()), !dbg !16656
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16658
  store i32 0, i32* %7, align 4, !dbg !16659
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16660
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16644
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16642, metadata !DIExpression()), !dbg !16643
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16645
  br i1 %9, label %10, label %4, !dbg !16646, !llvm.loop !16661

10:                                               ; preds = %4, %1
  ret void, !dbg !16663
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16664 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16669, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16668, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !16673
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16675, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !16677
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !16677
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !16673
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16678
  br i1 %4, label %6, label %5, !dbg !16679

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16680
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16680
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16680
  unreachable, !dbg !16680

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16675
  call void @llvm.dbg.value(metadata i32 %7, metadata !14471, metadata !DIExpression()) #23, !dbg !16677
  call void @llvm.dbg.value(metadata i32 %7, metadata !14465, metadata !DIExpression()) #23, !dbg !16673
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16681
  call void @llvm.dbg.value(metadata i32 %7, metadata !16670, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata i32 0, metadata !16671, metadata !DIExpression()), !dbg !16672
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16682
  %9 = load i8, i8* %8, align 1, !dbg !16682
  %10 = and i8 %9, 8, !dbg !16684
  %11 = icmp eq i8 %10, 0, !dbg !16685
  br i1 %11, label %12, label %35, !dbg !16686

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16669, metadata !DIExpression()), !dbg !16672
  %14 = icmp eq i64 %13, 0, !dbg !16687
  br i1 %14, label %35, label %15, !dbg !16689

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16690
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16692
  br i1 %17, label %35, label %18, !dbg !16693

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16694
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !16694
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16695
  %22 = icmp eq %union.anon* %20, %21, !dbg !16696
  br i1 %22, label %35, label %23, !dbg !16697

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16698, !srcloc !15193
  call void @llvm.dbg.value(metadata i32 %24, metadata !15189, metadata !DIExpression()) #23, !dbg !16704
  %25 = icmp eq i32 %24, 0, !dbg !16705
  br i1 %25, label %27, label %26, !dbg !16706

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16707
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.329, i32 0, i32 0)) #25, !dbg !16707
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16707
  unreachable, !dbg !16707

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16709
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16710
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #24, !dbg !16711
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16712
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16713
  call void @llvm.dbg.value(metadata i32 undef, metadata !15137, metadata !DIExpression()) #23, !dbg !16714
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15142, metadata !DIExpression()) #23, !dbg !16714
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15146, metadata !DIExpression()) #23, !dbg !16716
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16718
  br i1 %31, label %33, label %32, !dbg !16719

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16720
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16720
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16720
  unreachable, !dbg !16720

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15137, metadata !DIExpression()) #23, !dbg !16714
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16721
  call void @llvm.dbg.value(metadata i32 %34, metadata !16671, metadata !DIExpression()), !dbg !16672
  br label %40, !dbg !16722

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16723
  call void @llvm.dbg.value(metadata i32 %36, metadata !16671, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !16724
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !16724
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16726
  br i1 %37, label %39, label %38, !dbg !16727

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16728
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16728
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16728
  unreachable, !dbg !16728

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14493, metadata !DIExpression()) #23, !dbg !16724
  call void @llvm.dbg.value(metadata i32 %7, metadata !14507, metadata !DIExpression()) #23, !dbg !16729
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16731, !srcloc !14513
  br label %40, !dbg !16732

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16672
  ret i32 %41, !dbg !16733
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16734 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16738, metadata !DIExpression()), !dbg !16746
  call void @llvm.dbg.value(metadata i32 %1, metadata !16739, metadata !DIExpression()), !dbg !16746
  call void @llvm.dbg.value(metadata i8* %2, metadata !16740, metadata !DIExpression()), !dbg !16746
  call void @llvm.dbg.value(metadata i8 0, metadata !16742, metadata !DIExpression()), !dbg !16746
  call void @llvm.dbg.value(metadata i32 0, metadata !16743, metadata !DIExpression()), !dbg !16747
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14459, metadata !DIExpression()) #23, !dbg !16748
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16750, !srcloc !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !16752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14472, metadata !DIExpression()) #23, !dbg !16752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !16748
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16753
  br i1 %5, label %7, label %6, !dbg !16754

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16755
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16755
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16755
  unreachable, !dbg !16755

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()) #23, !dbg !16752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()) #23, !dbg !16748
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16756
  call void @llvm.dbg.value(metadata i32 undef, metadata !16745, metadata !DIExpression()), !dbg !16747
  call void @llvm.dbg.value(metadata i8 poison, metadata !16742, metadata !DIExpression()), !dbg !16746
  call void @llvm.dbg.value(metadata i32 undef, metadata !16743, metadata !DIExpression()), !dbg !16747
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16757
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16741, metadata !DIExpression()), !dbg !16746
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16760
  br i1 %10, label %15, label %11, !dbg !16762

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16763, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata i32 %1, metadata !16769, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata i8* %2, metadata !16770, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16650, metadata !DIExpression()), !dbg !16774
  call void @llvm.dbg.value(metadata i32 %1, metadata !16655, metadata !DIExpression()), !dbg !16774
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16776
  store i32 %1, i32* %12, align 4, !dbg !16777
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16778
  store i8* %2, i8** %13, align 4, !dbg !16779
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16780
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16781
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16782
  call void @llvm.dbg.value(metadata i8 1, metadata !16742, metadata !DIExpression()), !dbg !16746
  br label %15, !dbg !16783

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16742, metadata !DIExpression()), !dbg !16746
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !16784
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14498, metadata !DIExpression()) #23, !dbg !16784
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16786
  br i1 %16, label %18, label %17, !dbg !16787

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16788
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16788
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16788
  unreachable, !dbg !16788

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16746
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16750
  call void @llvm.dbg.value(metadata i32 %20, metadata !14471, metadata !DIExpression()) #23, !dbg !16752
  call void @llvm.dbg.value(metadata i32 %20, metadata !14465, metadata !DIExpression()) #23, !dbg !16748
  call void @llvm.dbg.value(metadata i32 %20, metadata !16745, metadata !DIExpression()), !dbg !16747
  call void @llvm.dbg.value(metadata i32 undef, metadata !14493, metadata !DIExpression()) #23, !dbg !16784
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()) #23, !dbg !16789
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16791, !srcloc !14513
  call void @llvm.dbg.value(metadata i8 poison, metadata !16742, metadata !DIExpression()), !dbg !16746
  call void @llvm.dbg.value(metadata i32 undef, metadata !16743, metadata !DIExpression()), !dbg !16747
  ret i1 %19, !dbg !16792
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16793 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16799, metadata !DIExpression()), !dbg !16804
  call void @llvm.dbg.value(metadata i64 undef, metadata !16801, metadata !DIExpression()), !dbg !16804
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16798, metadata !DIExpression()), !dbg !16804
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16800, metadata !DIExpression()), !dbg !16804
  call void @llvm.dbg.value(metadata i8** %4, metadata !16802, metadata !DIExpression()), !dbg !16804
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !16805
  call void @llvm.dbg.value(metadata i32 %6, metadata !16803, metadata !DIExpression()), !dbg !16804
  %7 = icmp eq i8** %4, null, !dbg !16806
  br i1 %7, label %12, label %8, !dbg !16808

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16809
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16811
  %11 = load i8*, i8** %10, align 4, !dbg !16811
  store i8* %11, i8** %4, align 4, !dbg !16812
  br label %12, !dbg !16813

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16814
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16815 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16817
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16818
  ret void, !dbg !16819
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16820 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16830, metadata !DIExpression()), !dbg !16847
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16828, metadata !DIExpression()), !dbg !16847
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16829, metadata !DIExpression()), !dbg !16847
  %5 = icmp eq i64 %4, -1, !dbg !16848
  br i1 %5, label %63, label %6, !dbg !16850

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16851
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.334(%struct._dnode* noundef %7) #24, !dbg !16851
  br i1 %8, label %9, label %10, !dbg !16854

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 99) #25, !dbg !16855
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.338, i32 0, i32 0)) #25, !dbg !16855
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 99) #25, !dbg !16855
  unreachable, !dbg !16855

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16857
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16858
  call void @llvm.dbg.value(metadata i32 0, metadata !16831, metadata !DIExpression()), !dbg !16859
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16860, metadata !DIExpression()) #23, !dbg !16867
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16869, !srcloc !16875
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !16876
  call void @llvm.dbg.value(metadata i32 undef, metadata !16873, metadata !DIExpression()) #23, !dbg !16876
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !16867
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16877
  br i1 %13, label %15, label %14, !dbg !16880

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !16881
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16881
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !16881
  unreachable, !dbg !16881

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16869
  call void @llvm.dbg.value(metadata i32 %16, metadata !16872, metadata !DIExpression()) #23, !dbg !16876
  call void @llvm.dbg.value(metadata i32 %16, metadata !16866, metadata !DIExpression()) #23, !dbg !16867
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16883
  call void @llvm.dbg.value(metadata i32 %16, metadata !16837, metadata !DIExpression()), !dbg !16859
  call void @llvm.dbg.value(metadata i32 undef, metadata !16831, metadata !DIExpression()), !dbg !16859
  %17 = icmp slt i64 %4, -1, !dbg !16884
  br i1 %17, label %18, label %24, !dbg !16885

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16886
  %20 = add i64 %4, %19, !dbg !16887
  %21 = sub i64 -2, %20, !dbg !16887
  call void @llvm.dbg.value(metadata i64 %21, metadata !16841, metadata !DIExpression()), !dbg !16888
  %22 = icmp sgt i64 %21, 1, !dbg !16889
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16889
  br label %29, !dbg !16890

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16891
  %26 = tail call fastcc i32 @elapsed.342() #24, !dbg !16893
  %27 = sext i32 %26 to i64, !dbg !16893
  %28 = add nsw i64 %25, %27, !dbg !16894
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16895
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16896
  store i64 %30, i64* %31, align 8, !dbg !16897
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16898
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16838, metadata !DIExpression()), !dbg !16900
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16901
  br i1 %33, label %48, label %34, !dbg !16901

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16902
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16838, metadata !DIExpression()), !dbg !16900
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16906
  %38 = load i64, i64* %37, align 8, !dbg !16906
  %39 = icmp slt i64 %35, %38, !dbg !16907
  br i1 %39, label %40, label %44, !dbg !16908

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16906
  %42 = sub nsw i64 %38, %35, !dbg !16909
  store i64 %42, i64* %41, align 8, !dbg !16909
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16911
  tail call fastcc void @sys_dlist_insert.343(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16912
  br label %49, !dbg !16913

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16914
  store i64 %45, i64* %31, align 8, !dbg !16914
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16915
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16838, metadata !DIExpression()), !dbg !16900
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16901
  br i1 %47, label %48, label %34, !dbg !16901, !llvm.loop !16916

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.344(%struct._dnode* noundef nonnull %7) #24, !dbg !16918
  br label %49, !dbg !16921

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16922
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16923
  br i1 %51, label %52, label %59, !dbg !16924

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16925
  call void @llvm.dbg.value(metadata i32 %53, metadata !16844, metadata !DIExpression()), !dbg !16926
  %54 = icmp ne i32 %53, 0, !dbg !16927
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16929
  br i1 %57, label %59, label %58, !dbg !16929

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16930
  br label %59, !dbg !16932

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16933, metadata !DIExpression()) #23, !dbg !16939
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16938, metadata !DIExpression()) #23, !dbg !16939
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16941
  br i1 %60, label %62, label %61, !dbg !16944

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !16945
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16945
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !16945
  unreachable, !dbg !16945

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16933, metadata !DIExpression()) #23, !dbg !16939
  call void @llvm.dbg.value(metadata i32 %16, metadata !16947, metadata !DIExpression()) #23, !dbg !16950
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16952, !srcloc !16953
  call void @llvm.dbg.value(metadata i32 undef, metadata !16831, metadata !DIExpression()), !dbg !16859
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.334(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16955 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16961, metadata !DIExpression()), !dbg !16962
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16963
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16963
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16964
  ret i1 %4, !dbg !16965
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.342() unnamed_addr #1 !dbg !16966 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16969
  %2 = icmp eq i32 %1, 0, !dbg !16970
  br i1 %2, label %3, label %5, !dbg !16969

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16971
  br label %5, !dbg !16969

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16969
  ret i32 %6, !dbg !16972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16973 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.349() #24, !dbg !16979
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16977, metadata !DIExpression()), !dbg !16980
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16981
  ret %struct._timeout* %2, !dbg !16982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.343(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16983 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16987, metadata !DIExpression()), !dbg !16991
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16988, metadata !DIExpression()), !dbg !16991
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16992
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16992
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16989, metadata !DIExpression()), !dbg !16991
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16993
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16994
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16995
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16996
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16997
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16998
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16999
  ret void, !dbg !17000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !17001 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17005, metadata !DIExpression()), !dbg !17007
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17008
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.347(%struct._dnode* noundef %2) #24, !dbg !17009
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17006, metadata !DIExpression()), !dbg !17007
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17010
  ret %struct._timeout* %4, !dbg !17011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.344(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17012 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17017, metadata !DIExpression()), !dbg !17020
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17018, metadata !DIExpression()), !dbg !17020
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17021
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17019, metadata !DIExpression()), !dbg !17020
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17022
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17023
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17024
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17025
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17026
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17027
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17028
  ret void, !dbg !17029
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17030 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17035
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17032, metadata !DIExpression()), !dbg !17036
  %2 = tail call fastcc i32 @elapsed.342() #24, !dbg !17037
  call void @llvm.dbg.value(metadata i32 %2, metadata !17033, metadata !DIExpression()), !dbg !17036
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17038
  br i1 %3, label %14, label %4, !dbg !17040

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17041
  %6 = load i64, i64* %5, align 8, !dbg !17041
  %7 = sext i32 %2 to i64, !dbg !17042
  %8 = sub nsw i64 %6, %7, !dbg !17043
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17044
  br i1 %9, label %14, label %10, !dbg !17045

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17046
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17046
  %13 = trunc i64 %12 to i32, !dbg !17046
  call void @llvm.dbg.value(metadata i32 %13, metadata !17034, metadata !DIExpression()), !dbg !17036
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17048
  call void @llvm.dbg.value(metadata i32 %15, metadata !17034, metadata !DIExpression()), !dbg !17036
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17049
  %17 = icmp ne i32 %16, 0, !dbg !17051
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17052
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17052
  call void @llvm.dbg.value(metadata i32 %20, metadata !17034, metadata !DIExpression()), !dbg !17036
  ret i32 %20, !dbg !17053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.347(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17054 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17058, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17059, metadata !DIExpression()), !dbg !17060
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17061
  br i1 %2, label %5, label %3, !dbg !17062

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.348(%struct._dnode* noundef nonnull %0) #24, !dbg !17063
  br label %5, !dbg !17062

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17062
  ret %struct._dnode* %6, !dbg !17064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.348(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17065 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17067, metadata !DIExpression()), !dbg !17069
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17068, metadata !DIExpression()), !dbg !17069
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17070
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17071
  br i1 %3, label %7, label %4, !dbg !17072

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17073
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17073
  br label %7, !dbg !17072

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17072
  ret %struct._dnode* %8, !dbg !17074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.349() unnamed_addr #8 !dbg !17075 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17079, metadata !DIExpression()), !dbg !17080
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.350() #24, !dbg !17081
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17081
  ret %struct._dnode* %3, !dbg !17082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.350() unnamed_addr #8 !dbg !17083 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17087, metadata !DIExpression()), !dbg !17088
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17089
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17090
  ret i1 %2, !dbg !17091
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17092 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17096, metadata !DIExpression()), !dbg !17101
  call void @llvm.dbg.value(metadata i32 -22, metadata !17097, metadata !DIExpression()), !dbg !17101
  call void @llvm.dbg.value(metadata i32 0, metadata !17098, metadata !DIExpression()), !dbg !17102
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16860, metadata !DIExpression()) #23, !dbg !17103
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17105, !srcloc !16875
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17107
  call void @llvm.dbg.value(metadata i32 undef, metadata !16873, metadata !DIExpression()) #23, !dbg !17107
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !17103
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17108
  br i1 %3, label %5, label %4, !dbg !17109

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17110
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17110
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17110
  unreachable, !dbg !17110

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17107
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !17103
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17111
  call void @llvm.dbg.value(metadata i32 undef, metadata !17100, metadata !DIExpression()), !dbg !17102
  call void @llvm.dbg.value(metadata i32 -22, metadata !17097, metadata !DIExpression()), !dbg !17101
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()), !dbg !17102
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17097, metadata !DIExpression()), !dbg !17101
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.334(%struct._dnode* noundef %6) #24, !dbg !17112
  br i1 %7, label %8, label %9, !dbg !17116

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17117
  call void @llvm.dbg.value(metadata i32 0, metadata !17097, metadata !DIExpression()), !dbg !17101
  br label %9, !dbg !17119

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17101
  call void @llvm.dbg.value(metadata i32 %10, metadata !17097, metadata !DIExpression()), !dbg !17101
  call void @llvm.dbg.value(metadata i32 undef, metadata !16933, metadata !DIExpression()) #23, !dbg !17120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16938, metadata !DIExpression()) #23, !dbg !17120
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17122
  br i1 %11, label %13, label %12, !dbg !17123

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17124
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17124
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17124
  unreachable, !dbg !17124

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17105
  call void @llvm.dbg.value(metadata i32 %14, metadata !16872, metadata !DIExpression()) #23, !dbg !17107
  call void @llvm.dbg.value(metadata i32 %14, metadata !16866, metadata !DIExpression()) #23, !dbg !17103
  call void @llvm.dbg.value(metadata i32 %14, metadata !17100, metadata !DIExpression()), !dbg !17102
  call void @llvm.dbg.value(metadata i32 undef, metadata !16933, metadata !DIExpression()) #23, !dbg !17120
  call void @llvm.dbg.value(metadata i32 undef, metadata !16947, metadata !DIExpression()) #23, !dbg !17125
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17127, !srcloc !16953
  call void @llvm.dbg.value(metadata i32 %10, metadata !17097, metadata !DIExpression()), !dbg !17101
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()), !dbg !17102
  ret i32 %10, !dbg !17128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17129 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17131, metadata !DIExpression()), !dbg !17132
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17133
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17135
  br i1 %3, label %10, label %4, !dbg !17136

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17137
  %6 = load i64, i64* %5, align 8, !dbg !17137
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17139
  %8 = load i64, i64* %7, align 8, !dbg !17140
  %9 = add nsw i64 %8, %6, !dbg !17140
  store i64 %9, i64* %7, align 8, !dbg !17140
  br label %10, !dbg !17141

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17142
  tail call fastcc void @sys_dlist_remove.353(%struct._dnode* noundef %11) #24, !dbg !17143
  ret void, !dbg !17144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.353(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17145 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17149, metadata !DIExpression()), !dbg !17152
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17153
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17153
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17150, metadata !DIExpression()), !dbg !17152
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17154
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17154
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17151, metadata !DIExpression()), !dbg !17152
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17155
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17156
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17157
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17158
  tail call fastcc void @sys_dnode_init.354(%struct._dnode* noundef %0) #24, !dbg !17159
  ret void, !dbg !17160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.354(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17161 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17163, metadata !DIExpression()), !dbg !17164
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17165
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17166
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17167
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17168
  ret void, !dbg !17169
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17170 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17176, metadata !DIExpression()), !dbg !17181
  call void @llvm.dbg.value(metadata i64 0, metadata !17177, metadata !DIExpression()), !dbg !17181
  call void @llvm.dbg.value(metadata i32 0, metadata !17178, metadata !DIExpression()), !dbg !17182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16860, metadata !DIExpression()) #23, !dbg !17183
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17185, !srcloc !16875
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17187
  call void @llvm.dbg.value(metadata i32 undef, metadata !16873, metadata !DIExpression()) #23, !dbg !17187
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !17183
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17188
  br i1 %3, label %5, label %4, !dbg !17189

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17190
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17190
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17190
  unreachable, !dbg !17190

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17187
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !17183
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17191
  call void @llvm.dbg.value(metadata i32 undef, metadata !17180, metadata !DIExpression()), !dbg !17182
  call void @llvm.dbg.value(metadata i64 0, metadata !17177, metadata !DIExpression()), !dbg !17181
  call void @llvm.dbg.value(metadata i32 undef, metadata !17178, metadata !DIExpression()), !dbg !17182
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17192
  call void @llvm.dbg.value(metadata i64 %6, metadata !17177, metadata !DIExpression()), !dbg !17181
  call void @llvm.dbg.value(metadata i32 undef, metadata !16933, metadata !DIExpression()) #23, !dbg !17195
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16938, metadata !DIExpression()) #23, !dbg !17195
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17197
  br i1 %7, label %9, label %8, !dbg !17198

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17199
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17199
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17199
  unreachable, !dbg !17199

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17185
  call void @llvm.dbg.value(metadata i32 %10, metadata !16872, metadata !DIExpression()) #23, !dbg !17187
  call void @llvm.dbg.value(metadata i32 %10, metadata !16866, metadata !DIExpression()) #23, !dbg !17183
  call void @llvm.dbg.value(metadata i32 %10, metadata !17180, metadata !DIExpression()), !dbg !17182
  call void @llvm.dbg.value(metadata i32 undef, metadata !16933, metadata !DIExpression()) #23, !dbg !17195
  call void @llvm.dbg.value(metadata i32 undef, metadata !16947, metadata !DIExpression()) #23, !dbg !17200
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17202, !srcloc !16953
  call void @llvm.dbg.value(metadata i64 %6, metadata !17177, metadata !DIExpression()), !dbg !17181
  call void @llvm.dbg.value(metadata i32 undef, metadata !17178, metadata !DIExpression()), !dbg !17182
  ret i64 %6, !dbg !17203
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17204 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17206, metadata !DIExpression()), !dbg !17210
  call void @llvm.dbg.value(metadata i64 0, metadata !17207, metadata !DIExpression()), !dbg !17210
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.355(%struct._timeout* noundef %0) #24, !dbg !17211
  br i1 %2, label %21, label %3, !dbg !17213

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17214
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17208, metadata !DIExpression()), !dbg !17215
  call void @llvm.dbg.value(metadata i64 0, metadata !17207, metadata !DIExpression()), !dbg !17210
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17216
  br i1 %5, label %16, label %6, !dbg !17218

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17208, metadata !DIExpression()), !dbg !17215
  call void @llvm.dbg.value(metadata i64 %8, metadata !17207, metadata !DIExpression()), !dbg !17210
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17219
  %10 = load i64, i64* %9, align 8, !dbg !17219
  %11 = add nsw i64 %10, %8, !dbg !17221
  call void @llvm.dbg.value(metadata i64 %11, metadata !17207, metadata !DIExpression()), !dbg !17210
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17222
  br i1 %12, label %16, label %13, !dbg !17224

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17225
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17208, metadata !DIExpression()), !dbg !17215
  call void @llvm.dbg.value(metadata i64 %11, metadata !17207, metadata !DIExpression()), !dbg !17210
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17216
  br i1 %15, label %16, label %6, !dbg !17218, !llvm.loop !17226

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17210
  call void @llvm.dbg.value(metadata i64 %17, metadata !17207, metadata !DIExpression()), !dbg !17210
  %18 = tail call fastcc i32 @elapsed.342() #24, !dbg !17228
  %19 = sext i32 %18 to i64, !dbg !17228
  %20 = sub nsw i64 %17, %19, !dbg !17229
  br label %21, !dbg !17230

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17210
  ret i64 %22, !dbg !17231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.355(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17232 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17236, metadata !DIExpression()), !dbg !17237
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17238
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.334(%struct._dnode* noundef %2) #24, !dbg !17239
  %4 = xor i1 %3, true, !dbg !17240
  ret i1 %4, !dbg !17241
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17242 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17244, metadata !DIExpression()), !dbg !17249
  call void @llvm.dbg.value(metadata i64 0, metadata !17245, metadata !DIExpression()), !dbg !17249
  call void @llvm.dbg.value(metadata i32 0, metadata !17246, metadata !DIExpression()), !dbg !17250
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16860, metadata !DIExpression()) #23, !dbg !17251
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17253, !srcloc !16875
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17255
  call void @llvm.dbg.value(metadata i32 undef, metadata !16873, metadata !DIExpression()) #23, !dbg !17255
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !17251
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17256
  br i1 %3, label %5, label %4, !dbg !17257

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17258
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17258
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17258
  unreachable, !dbg !17258

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17255
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !17251
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17259
  call void @llvm.dbg.value(metadata i32 undef, metadata !17248, metadata !DIExpression()), !dbg !17250
  call void @llvm.dbg.value(metadata i64 0, metadata !17245, metadata !DIExpression()), !dbg !17249
  call void @llvm.dbg.value(metadata i32 undef, metadata !17246, metadata !DIExpression()), !dbg !17250
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17260
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17263
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17245, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17249
  call void @llvm.dbg.value(metadata i32 undef, metadata !16933, metadata !DIExpression()) #23, !dbg !17264
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16938, metadata !DIExpression()) #23, !dbg !17264
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17266
  br i1 %8, label %10, label %9, !dbg !17267

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17268
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17268
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17268
  unreachable, !dbg !17268

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17253
  call void @llvm.dbg.value(metadata i32 %11, metadata !16872, metadata !DIExpression()) #23, !dbg !17255
  call void @llvm.dbg.value(metadata i32 %11, metadata !16866, metadata !DIExpression()) #23, !dbg !17251
  call void @llvm.dbg.value(metadata i32 %11, metadata !17248, metadata !DIExpression()), !dbg !17250
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17245, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17249
  call void @llvm.dbg.value(metadata i32 undef, metadata !16933, metadata !DIExpression()) #23, !dbg !17264
  call void @llvm.dbg.value(metadata i32 undef, metadata !16947, metadata !DIExpression()) #23, !dbg !17269
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17271, !srcloc !16953
  call void @llvm.dbg.value(metadata i32 undef, metadata !17246, metadata !DIExpression()), !dbg !17250
  %12 = add i64 %7, %6, !dbg !17272
  ret i64 %12, !dbg !17273
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17274 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17276, metadata !DIExpression()), !dbg !17280
  call void @llvm.dbg.value(metadata i32 0, metadata !17277, metadata !DIExpression()), !dbg !17281
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16860, metadata !DIExpression()) #23, !dbg !17282
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17284, !srcloc !16875
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17286
  call void @llvm.dbg.value(metadata i32 undef, metadata !16873, metadata !DIExpression()) #23, !dbg !17286
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !17282
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17287
  br i1 %2, label %4, label %3, !dbg !17288

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17289
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17289
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17289
  unreachable, !dbg !17289

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17286
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !17282
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17290
  call void @llvm.dbg.value(metadata i32 undef, metadata !17279, metadata !DIExpression()), !dbg !17281
  call void @llvm.dbg.value(metadata i32 -1, metadata !17276, metadata !DIExpression()), !dbg !17280
  call void @llvm.dbg.value(metadata i32 undef, metadata !17277, metadata !DIExpression()), !dbg !17281
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17291
  call void @llvm.dbg.value(metadata i32 %5, metadata !17276, metadata !DIExpression()), !dbg !17280
  call void @llvm.dbg.value(metadata i32 undef, metadata !16933, metadata !DIExpression()) #23, !dbg !17294
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16938, metadata !DIExpression()) #23, !dbg !17294
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17296
  br i1 %6, label %8, label %7, !dbg !17297

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17298
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17298
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17298
  unreachable, !dbg !17298

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17284
  call void @llvm.dbg.value(metadata i32 %9, metadata !16872, metadata !DIExpression()) #23, !dbg !17286
  call void @llvm.dbg.value(metadata i32 %9, metadata !16866, metadata !DIExpression()) #23, !dbg !17282
  call void @llvm.dbg.value(metadata i32 %9, metadata !17279, metadata !DIExpression()), !dbg !17281
  call void @llvm.dbg.value(metadata i32 undef, metadata !16933, metadata !DIExpression()) #23, !dbg !17294
  call void @llvm.dbg.value(metadata i32 undef, metadata !16947, metadata !DIExpression()) #23, !dbg !17299
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17301, !srcloc !16953
  call void @llvm.dbg.value(metadata i32 %5, metadata !17276, metadata !DIExpression()), !dbg !17280
  call void @llvm.dbg.value(metadata i32 undef, metadata !17277, metadata !DIExpression()), !dbg !17281
  ret i32 %5, !dbg !17302
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17305, metadata !DIExpression()), !dbg !17315
  call void @llvm.dbg.value(metadata i1 %1, metadata !17306, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17315
  call void @llvm.dbg.value(metadata i32 0, metadata !17307, metadata !DIExpression()), !dbg !17316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16860, metadata !DIExpression()) #23, !dbg !17317
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17319, !srcloc !16875
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17321
  call void @llvm.dbg.value(metadata i32 undef, metadata !16873, metadata !DIExpression()) #23, !dbg !17321
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !17317
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17322
  br i1 %4, label %6, label %5, !dbg !17323

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17324
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17324
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17324
  unreachable, !dbg !17324

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17321
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !17317
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17325
  call void @llvm.dbg.value(metadata i32 undef, metadata !17309, metadata !DIExpression()), !dbg !17316
  call void @llvm.dbg.value(metadata i32 undef, metadata !17307, metadata !DIExpression()), !dbg !17316
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17326
  call void @llvm.dbg.value(metadata i32 %7, metadata !17310, metadata !DIExpression()), !dbg !17327
  call void @llvm.dbg.value(metadata i1 undef, metadata !17313, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17327
  %8 = icmp slt i32 %7, 2, !dbg !17328
  call void @llvm.dbg.value(metadata i1 %8, metadata !17314, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17327
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17329
  call void @llvm.dbg.value(metadata i1 %9, metadata !17313, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17327
  br i1 %10, label %14, label %11, !dbg !17329

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17331
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17331
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17333
  br label %14, !dbg !17334

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16933, metadata !DIExpression()) #23, !dbg !17335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16938, metadata !DIExpression()) #23, !dbg !17335
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17337
  br i1 %15, label %17, label %16, !dbg !17338

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17339
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17339
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17339
  unreachable, !dbg !17339

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17319
  call void @llvm.dbg.value(metadata i32 %18, metadata !16872, metadata !DIExpression()) #23, !dbg !17321
  call void @llvm.dbg.value(metadata i32 %18, metadata !16866, metadata !DIExpression()) #23, !dbg !17317
  call void @llvm.dbg.value(metadata i32 %18, metadata !17309, metadata !DIExpression()), !dbg !17316
  call void @llvm.dbg.value(metadata i32 undef, metadata !16933, metadata !DIExpression()) #23, !dbg !17335
  call void @llvm.dbg.value(metadata i32 undef, metadata !16947, metadata !DIExpression()) #23, !dbg !17340
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17342, !srcloc !16953
  call void @llvm.dbg.value(metadata i32 1, metadata !17307, metadata !DIExpression()), !dbg !17316
  call void @llvm.dbg.value(metadata i32 undef, metadata !17307, metadata !DIExpression()), !dbg !17316
  ret void, !dbg !17343
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17348, metadata !DIExpression()), !dbg !17353
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16860, metadata !DIExpression()) #23, !dbg !17355
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17357, !srcloc !16875
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17359
  call void @llvm.dbg.value(metadata i32 undef, metadata !16873, metadata !DIExpression()) #23, !dbg !17359
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !17355
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17360
  br i1 %3, label %5, label %4, !dbg !17361

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17362
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17362
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17362
  unreachable, !dbg !17362

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17359
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !17355
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17363
  call void @llvm.dbg.value(metadata i32 undef, metadata !17349, metadata !DIExpression()), !dbg !17353
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17353
  call void @llvm.dbg.value(metadata i32 undef, metadata !17349, metadata !DIExpression()), !dbg !17353
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17364
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17365
  br i1 %7, label %37, label %8, !dbg !17366

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17353
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17367
  %14 = load i64, i64* %13, align 8, !dbg !17367
  %15 = sext i32 %11 to i64, !dbg !17368
  %16 = icmp sgt i64 %14, %15, !dbg !17369
  br i1 %16, label %35, label %17, !dbg !17370

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17350, metadata !DIExpression()), !dbg !17371
  %18 = trunc i64 %14 to i32, !dbg !17372
  call void @llvm.dbg.value(metadata i32 %18, metadata !17352, metadata !DIExpression()), !dbg !17371
  %19 = sext i32 %18 to i64, !dbg !17373
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17374
  %21 = add i64 %20, %19, !dbg !17374
  store i64 %21, i64* @curr_tick, align 8, !dbg !17374
  store i64 0, i64* %13, align 8, !dbg !17375
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17376
  call void @llvm.dbg.value(metadata i32 undef, metadata !16933, metadata !DIExpression()) #23, !dbg !17377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16938, metadata !DIExpression()) #23, !dbg !17377
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17379
  br i1 %22, label %24, label %23, !dbg !17380

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17381
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17381
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17381
  unreachable, !dbg !17381

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16933, metadata !DIExpression()) #23, !dbg !17377
  call void @llvm.dbg.value(metadata i32 %12, metadata !16947, metadata !DIExpression()) #23, !dbg !17382
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17384, !srcloc !16953
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17385
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17385
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17386
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16860, metadata !DIExpression()) #23, !dbg !17387
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17389, !srcloc !16875
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17391
  call void @llvm.dbg.value(metadata i32 undef, metadata !16873, metadata !DIExpression()) #23, !dbg !17391
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !17387
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17392
  br i1 %28, label %30, label %29, !dbg !17393

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17394
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17394
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17394
  unreachable, !dbg !17394

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17391
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !17387
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17395
  call void @llvm.dbg.value(metadata i32 undef, metadata !17349, metadata !DIExpression()), !dbg !17353
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17396
  %32 = sub nsw i32 %31, %18, !dbg !17396
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17353
  call void @llvm.dbg.value(metadata i32 undef, metadata !17349, metadata !DIExpression()), !dbg !17353
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17364
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17365
  br i1 %34, label %37, label %8, !dbg !17366, !llvm.loop !17397

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17399
  store i64 %36, i64* %13, align 8, !dbg !17399
  br label %41, !dbg !17402

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17353
  %40 = sext i32 %39 to i64, !dbg !17403
  br label %41, !dbg !17403

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17403
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17404
  %45 = add i64 %44, %42, !dbg !17404
  store i64 %45, i64* @curr_tick, align 8, !dbg !17404
  store i32 0, i32* @announce_remaining, align 4, !dbg !17405
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17406
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17407
  call void @llvm.dbg.value(metadata i32 undef, metadata !16933, metadata !DIExpression()) #23, !dbg !17408
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16938, metadata !DIExpression()) #23, !dbg !17408
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17410
  br i1 %47, label %49, label %48, !dbg !17411

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17412
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17412
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17412
  unreachable, !dbg !17412

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17353
  call void @llvm.dbg.value(metadata i32 %50, metadata !16933, metadata !DIExpression()) #23, !dbg !17408
  call void @llvm.dbg.value(metadata i32 %50, metadata !16947, metadata !DIExpression()) #23, !dbg !17413
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17415, !srcloc !16953
  ret void, !dbg !17416
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17417 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17421, metadata !DIExpression()), !dbg !17425
  call void @llvm.dbg.value(metadata i32 0, metadata !17422, metadata !DIExpression()), !dbg !17426
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16860, metadata !DIExpression()) #23, !dbg !17427
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17429, !srcloc !16875
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17431
  call void @llvm.dbg.value(metadata i32 undef, metadata !16873, metadata !DIExpression()) #23, !dbg !17431
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !17427
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17432
  br i1 %2, label %4, label %3, !dbg !17433

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17434
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17434
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17434
  unreachable, !dbg !17434

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()) #23, !dbg !17431
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()) #23, !dbg !17427
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17435
  call void @llvm.dbg.value(metadata i32 undef, metadata !17424, metadata !DIExpression()), !dbg !17426
  call void @llvm.dbg.value(metadata i64 0, metadata !17421, metadata !DIExpression()), !dbg !17425
  call void @llvm.dbg.value(metadata i32 undef, metadata !17422, metadata !DIExpression()), !dbg !17426
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17436
  %6 = tail call fastcc i32 @elapsed.342() #24, !dbg !17439
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17421, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17425
  call void @llvm.dbg.value(metadata i32 undef, metadata !16933, metadata !DIExpression()) #23, !dbg !17440
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16938, metadata !DIExpression()) #23, !dbg !17440
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17442
  br i1 %7, label %9, label %8, !dbg !17443

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17444
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.346, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17444
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17444
  unreachable, !dbg !17444

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17429
  call void @llvm.dbg.value(metadata i32 %10, metadata !16872, metadata !DIExpression()) #23, !dbg !17431
  call void @llvm.dbg.value(metadata i32 %10, metadata !16866, metadata !DIExpression()) #23, !dbg !17427
  call void @llvm.dbg.value(metadata i32 %10, metadata !17424, metadata !DIExpression()), !dbg !17426
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17421, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17425
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17421, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17425
  call void @llvm.dbg.value(metadata i32 undef, metadata !16933, metadata !DIExpression()) #23, !dbg !17440
  call void @llvm.dbg.value(metadata i32 undef, metadata !16947, metadata !DIExpression()) #23, !dbg !17445
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17447, !srcloc !16953
  call void @llvm.dbg.value(metadata i32 undef, metadata !17422, metadata !DIExpression()), !dbg !17426
  %11 = sext i32 %6 to i64, !dbg !17439
  %12 = add i64 %5, %11, !dbg !17448
  ret i64 %12, !dbg !17449
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17450 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17451
  %2 = trunc i64 %1 to i32, !dbg !17452
  ret i32 %2, !dbg !17453
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17454 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17455
  ret i64 %1, !dbg !17456
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17459, metadata !DIExpression()), !dbg !17466
  %2 = icmp eq i32 %0, 0, !dbg !17467
  br i1 %2, label %10, label %3, !dbg !17469

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.362() #24, !dbg !17470
  call void @llvm.dbg.value(metadata i32 %4, metadata !17460, metadata !DIExpression()), !dbg !17466
  %5 = mul i32 %0, 84, !dbg !17471
  call void @llvm.dbg.value(metadata i32 %5, metadata !17461, metadata !DIExpression()), !dbg !17466
  br label %6, !dbg !17472

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.362() #24, !dbg !17473
  call void @llvm.dbg.value(metadata i32 %7, metadata !17462, metadata !DIExpression()), !dbg !17474
  %8 = sub i32 %7, %4, !dbg !17475
  %9 = icmp ult i32 %8, %5, !dbg !17477
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17478
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.362() unnamed_addr #1 !dbg !17479 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.363() #24, !dbg !17480
  ret i32 %1, !dbg !17481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.363() unnamed_addr #1 !dbg !17482 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17483
  ret i32 %1, !dbg !17484
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17485 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17489, metadata !DIExpression()), !dbg !17491
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17492

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17493
  br label %14, !dbg !17497

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17490, metadata !DIExpression()), !dbg !17491
  %6 = icmp slt i64 %2, -1, !dbg !17498
  br i1 %6, label %7, label %9, !dbg !17501

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17502
  br label %14, !dbg !17503

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17505
  %11 = icmp ugt i64 %2, 1, !dbg !17506
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17506
  %13 = add nsw i64 %10, %12, !dbg !17507
  br label %14, !dbg !17508

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17509
  ret i64 %15, !dbg !17510
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17511 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.366, i32 0, i32 0)) #25, !dbg !17513
  ret void, !dbg !17514
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!924, !2, !2500, !27, !177, !209, !2502, !2504, !2538, !2540, !218, !268, !2542, !2545, !2556, !2602, !2604, !2632, !2660, !2703, !2775, !2820, !297, !458, !2848, !494, !504, !529, !696, !731, !956, !2853, !1092, !1158, !1466, !1690, !2891, !1803, !1893, !2893, !2978, !3042, !1944, !3045, !1951, !2323, !3063, !2343, !3065, !2461, !3068}
!llvm.ident = !{!3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070, !3070}
!llvm.module.flags = !{!3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "z_ztest_suite_node_stats_test_pytest", scope: !27, file: !111, line: 8, type: !149, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !108, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/testsuite/pytest/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_NODE", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_STATS", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_ZTEST_UNIT_TEST", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_ZTEST_TEST_RULE", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 68)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 69)
!104 = !DIEnumerator(name: "K_OBJ_LAST", value: 70)
!105 = !{!106, !107}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !{!109, !155, !25, !173}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "z_ztest_test_node_test_pytest", scope: !27, file: !111, line: 8, type: !112, isLocal: true, isDefinition: true, align: 32)
!111 = !DIFile(filename: "zephyr/samples/subsys/testsuite/pytest/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !115)
!114 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/include/zephyr/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !121, !127, !133, !136, !139, !146}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !114, line: 179, baseType: !117, size: 32)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !113, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_setup_t", file: !114, line: 141, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!106}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !113, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_before_t", file: !114, line: 148, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!131 = !DISubroutineType(types: !132)
!132 = !{null, !106}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !113, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_after_t", file: !114, line: 155, baseType: !130)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !113, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_teardown_t", file: !114, line: 162, baseType: !130)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !113, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_predicate_t", file: !114, line: 171, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!143 = !DISubroutineType(types: !144)
!144 = !{!145, !13}
!145 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !113, file: !114, line: 197, baseType: !147, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !150)
!150 = !{!151, !153, !154}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !149, file: !114, line: 116, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !149, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !149, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!155 = !DIGlobalVariableExpression(var: !156, expr: !DIExpression())
!156 = distinct !DIGlobalVariable(name: "z_ztest_unit_test__test_pytest__test_pytest", scope: !27, file: !111, line: 10, type: !157, isLocal: true, isDefinition: true, align: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !158)
!158 = !{!159, !160, !161, !162, !163}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !157, file: !114, line: 98, baseType: !118, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !157, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !157, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !157, file: !114, line: 104, baseType: !164, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !167)
!167 = !{!168, !169, !170, !171, !172}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !166, file: !114, line: 125, baseType: !152, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !166, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !166, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !166, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !166, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "z_ztest_unit_test_stats_test_pytest_test_pytest", scope: !27, file: !111, line: 10, type: !166, isLocal: false, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !177, file: !200, line: 18, type: !201, isLocal: false, isDefinition: true)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !179, globals: !199, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!179 = !{!22, !106, !24, !180, !182, !184, !185, !107, !187, !188, !190, !192, !193, !194, !197, !118}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !186, line: 214, baseType: !32)
!186 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !196)
!196 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !198)
!198 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!199 = !{!175}
!200 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !202, file: !203, line: 17, baseType: !118, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "_char_out", scope: !209, file: !212, line: 54, type: !213, isLocal: false, isDefinition: true)
!209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !211, splitDebugInlining: false, nameTableKind: None)
!210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!211 = !{!207}
!212 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DISubroutineType(types: !215)
!215 = !{!107, !107}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !218, file: !235, line: 56, type: !236, isLocal: true, isDefinition: true, align: 32)
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !220, globals: !234, splitDebugInlining: false, nameTableKind: None)
!219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!220 = !{!221}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 379, baseType: !224)
!223 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 224, elements: !225)
!225 = !{!226, !228, !229, !230, !231, !232, !233}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !224, file: !223, line: 372, baseType: !227, size: 32)
!227 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !152)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !224, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !224, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !224, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !224, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !224, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !224, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!234 = !{!216}
!235 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !239)
!238 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!239 = !{!240, !265}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !237, file: !238, line: 60, baseType: !241, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{!107, !244}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = !{!249, !250, !251, !252, !258, !259}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !246, file: !247, line: 380, baseType: !118, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !246, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !246, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !246, file: !247, line: 386, baseType: !253, size: 32, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !255)
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !254, file: !247, line: 359, baseType: !195, size: 8)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !254, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !246, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !246, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !247, line: 43, baseType: !263)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !264)
!264 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !237, file: !238, line: 65, baseType: !244, size: 32, offset: 32)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !268, file: !271, line: 71, type: !272, isLocal: true, isDefinition: true, align: 32)
!268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !269, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !270, splitDebugInlining: false, nameTableKind: None)
!269 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!270 = !{!266}
!271 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !274)
!274 = !{!275, !294}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !273, file: !238, line: 60, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{!107, !279}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !282)
!282 = !{!283, !284, !285, !286, !292, !293}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !281, file: !247, line: 380, baseType: !118, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !281, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !281, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !281, file: !247, line: 386, baseType: !287, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !289)
!289 = !{!290, !291}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !288, file: !247, line: 359, baseType: !195, size: 8)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !288, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !281, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !281, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !238, line: 65, baseType: !279, size: 32, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !297, file: !304, line: 17, type: !451, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!299 = !{!185, !107, !152, !106}
!300 = !{!295, !301, !447}
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !303, file: !304, line: 198, type: !433, isLocal: true, isDefinition: true)
!303 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !304, file: !304, line: 175, type: !305, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !428)
!304 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !DISubroutineType(types: !306)
!306 = !{null, !307}
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = !{!311, !377, !390, !391, !392, !396, !397, !403, !423}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !308, file: !309, line: 247, baseType: !312, size: 384)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !313)
!313 = !{!314, !342, !350, !351, !352, !363, !364, !365}
!314 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 60, baseType: !315, size: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 60, size: 64, elements: !316)
!316 = !{!317, !333}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !315, file: !309, line: 61, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !320)
!319 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !321)
!321 = !{!322, !328}
!322 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 38, baseType: !323, size: 32)
!323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 38, size: 32, elements: !324)
!324 = !{!325, !327}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !323, file: !319, line: 39, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !323, file: !319, line: 40, baseType: !326, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 42, baseType: !329, size: 32, offset: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 42, size: 32, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !329, file: !319, line: 43, baseType: !326, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !329, file: !319, line: 44, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !315, file: !309, line: 62, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !336)
!335 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !334, file: !335, line: 50, baseType: !338, size: 64)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 64, elements: !340)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!340 = !{!341}
!341 = !DISubrange(count: 2)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !312, file: !309, line: 68, baseType: !343, size: 32, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !346)
!345 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !347)
!347 = !{!348}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !346, file: !345, line: 232, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !320)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !312, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !312, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!352 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 90, baseType: !353, size: 16, offset: 112)
!353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 90, size: 16, elements: !354)
!354 = !{!355, !362}
!355 = !DIDerivedType(tag: DW_TAG_member, scope: !353, file: !309, line: 91, baseType: !356, size: 16)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !353, file: !309, line: 91, size: 16, elements: !357)
!357 = !{!358, !361}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !356, file: !309, line: 96, baseType: !359, size: 8)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !360)
!360 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !356, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !353, file: !309, line: 100, baseType: !197, size: 16)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !312, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !312, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !312, file: !309, line: 131, baseType: !366, size: 192, offset: 192)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !367)
!367 = !{!368, !369, !375}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !366, file: !345, line: 245, baseType: !318, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !366, file: !345, line: 246, baseType: !370, size: 32, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DISubroutineType(types: !373)
!373 = !{null, !374}
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !366, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !191)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !308, file: !309, line: 250, baseType: !378, size: 288, offset: 384)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !378, file: !379, line: 26, baseType: !152, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !378, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !378, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !378, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !378, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !378, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !378, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !378, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !378, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !308, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !308, file: !309, line: 256, baseType: !344, size: 64, offset: 704)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !308, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !394)
!394 = !{!395}
!395 = !DISubrange(count: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !308, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !308, file: !309, line: 300, baseType: !398, size: 96, offset: 1056)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !399)
!399 = !{!400, !401, !402}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !398, file: !309, line: 153, baseType: !22, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !398, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !398, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !308, file: !309, line: 325, baseType: !404, size: 32, offset: 1152)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 32)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !407)
!406 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!407 = !{!408, !417, !418}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !405, file: !406, line: 5074, baseType: !409, size: 96)
!409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !411)
!410 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!411 = !{!412, !415, !416}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !409, file: !410, line: 57, baseType: !413, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 32)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !410, line: 57, flags: DIFlagFwdDecl)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !409, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !409, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !405, file: !406, line: 5075, baseType: !344, size: 64, offset: 96)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !405, file: !406, line: 5076, baseType: !419, size: 32, offset: 160)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !419, file: !420, line: 52, baseType: !22, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !308, file: !309, line: 343, baseType: !424, size: 64, offset: 1184)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !425)
!425 = !{!426, !427}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !424, file: !379, line: 63, baseType: !152, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !424, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!428 = !{!429, !430, !431, !432}
!429 = !DILocalVariable(name: "thread", arg: 1, scope: !303, file: !304, line: 175, type: !307)
!430 = !DILocalVariable(name: "region_num", scope: !303, file: !304, line: 200, type: !195)
!431 = !DILocalVariable(name: "guard_start", scope: !303, file: !304, line: 265, type: !22)
!432 = !DILocalVariable(name: "guard_size", scope: !303, file: !304, line: 266, type: !185)
!433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 96, elements: !445)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !436)
!435 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!436 = !{!437, !438, !439}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !434, file: !435, line: 53, baseType: !22, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !434, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !434, file: !435, line: 55, baseType: !440, size: 32, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !442)
!441 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !443)
!443 = !{!444}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !442, file: !441, line: 150, baseType: !152, size: 32)
!445 = !{!446}
!446 = !DISubrange(count: 1)
!447 = !DIGlobalVariableExpression(var: !448, expr: !DIExpression())
!448 = distinct !DIGlobalVariable(name: "static_regions", scope: !297, file: !304, line: 62, type: !449, isLocal: true, isDefinition: true)
!449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, size: 96, elements: !445)
!450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !434)
!451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !453)
!453 = !{!454, !455}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !452, file: !203, line: 17, baseType: !118, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !452, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !458, file: !491, line: 39, type: !195, isLocal: true, isDefinition: true)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !460, globals: !490, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!460 = !{!461, !106, !107, !478, !195}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !463, line: 1226, baseType: !464)
!463 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 1213, size: 352, elements: !465)
!465 = !{!466, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !464, file: !463, line: 1215, baseType: !467, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !464, file: !463, line: 1216, baseType: !227, size: 32, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !464, file: !463, line: 1217, baseType: !227, size: 32, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !464, file: !463, line: 1218, baseType: !227, size: 32, offset: 96)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !464, file: !463, line: 1219, baseType: !227, size: 32, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !464, file: !463, line: 1220, baseType: !227, size: 32, offset: 160)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !464, file: !463, line: 1221, baseType: !227, size: 32, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !464, file: !463, line: 1222, baseType: !227, size: 32, offset: 224)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !464, file: !463, line: 1223, baseType: !227, size: 32, offset: 256)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !464, file: !463, line: 1224, baseType: !227, size: 32, offset: 288)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !464, file: !463, line: 1225, baseType: !227, size: 32, offset: 320)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !482)
!481 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!482 = !{!483, !484, !485}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !480, file: !481, line: 29, baseType: !152, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !480, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !480, file: !481, line: 37, baseType: !486, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !487)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !488)
!488 = !{!489}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !487, file: !441, line: 143, baseType: !152, size: 32)
!490 = !{!456}
!491 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !494, file: !501, line: 21, type: !213, isLocal: true, isDefinition: true)
!494 = distinct !DICompileUnit(language: DW_LANG_C99, file: !495, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !496, globals: !500, splitDebugInlining: false, nameTableKind: None)
!495 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!496 = !{!497, !107, !106}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !499, line: 22, baseType: !107)
!499 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!500 = !{!492}
!501 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !504, file: !509, line: 13, type: !526, isLocal: true, isDefinition: true)
!504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !505, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !506, splitDebugInlining: false, nameTableKind: None)
!505 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!506 = !{!507, !502}
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "mpu_config", scope: !504, file: !509, line: 37, type: !510, isLocal: false, isDefinition: true)
!509 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !481, line: 41, size: 64, elements: !512)
!512 = !{!513, !514}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !511, file: !481, line: 43, baseType: !152, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !511, file: !481, line: 45, baseType: !515, size: 32, offset: 32)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !518)
!518 = !{!519, !520, !521}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !517, file: !481, line: 29, baseType: !152, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !517, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !517, file: !481, line: 37, baseType: !522, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !524)
!524 = !{!525}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !523, file: !441, line: 143, baseType: !152, size: 32)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 192, elements: !340)
!527 = !DIGlobalVariableExpression(var: !528, expr: !DIExpression())
!528 = distinct !DIGlobalVariable(name: "phase", scope: !529, file: !533, line: 61, type: !532, isLocal: false, isDefinition: true)
!529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !531, retainedTypes: !558, globals: !568, splitDebugInlining: false, nameTableKind: None)
!530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!531 = !{!532, !541, !549, !30, !554}
!532 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_phase", file: !533, line: 40, baseType: !32, size: 32, elements: !534)
!533 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537, !538, !539, !540}
!535 = !DIEnumerator(name: "TEST_PHASE_SETUP", value: 0)
!536 = !DIEnumerator(name: "TEST_PHASE_BEFORE", value: 1)
!537 = !DIEnumerator(name: "TEST_PHASE_TEST", value: 2)
!538 = !DIEnumerator(name: "TEST_PHASE_AFTER", value: 3)
!539 = !DIEnumerator(name: "TEST_PHASE_TEARDOWN", value: 4)
!540 = !DIEnumerator(name: "TEST_PHASE_FRAMEWORK", value: 5)
!541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_result", file: !533, line: 226, baseType: !32, size: 32, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548}
!543 = !DIEnumerator(name: "ZTEST_RESULT_PENDING", value: 0)
!544 = !DIEnumerator(name: "ZTEST_RESULT_PASS", value: 1)
!545 = !DIEnumerator(name: "ZTEST_RESULT_FAIL", value: 2)
!546 = !DIEnumerator(name: "ZTEST_RESULT_SKIP", value: 3)
!547 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_SKIP", value: 4)
!548 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_FAIL", value: 5)
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_status", file: !533, line: 52, baseType: !32, size: 32, elements: !550)
!550 = !{!551, !552, !553}
!551 = !DIEnumerator(name: "ZTEST_STATUS_OK", value: 0)
!552 = !DIEnumerator(name: "ZTEST_STATUS_HAS_FAILURE", value: 1)
!553 = !DIEnumerator(name: "ZTEST_STATUS_CRITICAL_ERROR", value: 2)
!554 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_expected_result", file: !114, line: 36, baseType: !32, size: 32, elements: !555)
!555 = !{!556, !557}
!556 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_FAIL", value: 0)
!557 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_SKIP", value: 1)
!558 = !{!106, !107, !185, !559, !564, !152, !566}
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !560, line: 46, baseType: !561)
!560 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!562 = !DISubroutineType(types: !563)
!563 = !{null, !106, !106, !106}
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !565, line: 46, baseType: !376)
!565 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !567)
!567 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!568 = !{!527, !569, !571, !573, !582, !584, !688, !691}
!569 = !DIGlobalVariableExpression(var: !570, expr: !DIExpression())
!570 = distinct !DIGlobalVariable(name: "test_result", scope: !529, file: !533, line: 234, type: !541, isLocal: true, isDefinition: true)
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "current_test_failed_assumption", scope: !529, file: !533, line: 294, type: !145, isLocal: true, isDefinition: true)
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(name: "ztest_thread_stack", scope: !529, file: !533, line: 430, type: !575, isLocal: false, isDefinition: true, align: 512)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 8704, elements: !580)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !578)
!577 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!578 = !{!579}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !576, file: !577, line: 48, baseType: !120, size: 8)
!580 = !{!581}
!581 = !DISubrange(count: 1088)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "test_status", scope: !529, file: !533, line: 63, type: !549, isLocal: true, isDefinition: true)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "ztest_thread", scope: !529, file: !533, line: 17, type: !586, isLocal: true, isDefinition: true)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !587)
!587 = !{!588, !646, !658, !659, !660, !661, !662, !668, !683}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !586, file: !309, line: 247, baseType: !589, size: 384)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !590)
!590 = !{!591, !615, !622, !623, !624, !633, !634, !635}
!591 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 60, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 60, size: 64, elements: !593)
!593 = !{!594, !609}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !592, file: !309, line: 61, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !597)
!597 = !{!598, !604}
!598 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 38, baseType: !599, size: 32)
!599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 38, size: 32, elements: !600)
!600 = !{!601, !603}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !599, file: !319, line: 39, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !599, file: !319, line: 40, baseType: !602, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 42, baseType: !605, size: 32, offset: 32)
!605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 42, size: 32, elements: !606)
!606 = !{!607, !608}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !605, file: !319, line: 43, baseType: !602, size: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !605, file: !319, line: 44, baseType: !602, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !592, file: !309, line: 62, baseType: !610, size: 64)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !611)
!611 = !{!612}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !610, file: !335, line: 50, baseType: !613, size: 64)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !614, size: 64, elements: !340)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !589, file: !309, line: 68, baseType: !616, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !619)
!619 = !{!620}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !618, file: !345, line: 232, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !596)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !589, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !589, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!624 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 90, baseType: !625, size: 16, offset: 112)
!625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 90, size: 16, elements: !626)
!626 = !{!627, !632}
!627 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !309, line: 91, baseType: !628, size: 16)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !625, file: !309, line: 91, size: 16, elements: !629)
!629 = !{!630, !631}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !628, file: !309, line: 96, baseType: !359, size: 8)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !628, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !625, file: !309, line: 100, baseType: !197, size: 16)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !589, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !589, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !589, file: !309, line: 131, baseType: !636, size: 192, offset: 192)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !637)
!637 = !{!638, !639, !645}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !636, file: !345, line: 245, baseType: !595, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !636, file: !345, line: 246, baseType: !640, size: 32, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !641)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DISubroutineType(types: !643)
!643 = !{null, !644}
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !636, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !586, file: !309, line: 250, baseType: !647, size: 288, offset: 384)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !648)
!648 = !{!649, !650, !651, !652, !653, !654, !655, !656, !657}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !647, file: !379, line: 26, baseType: !152, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !647, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !647, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !647, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !647, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !647, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !647, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !647, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !647, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !586, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !586, file: !309, line: 256, baseType: !617, size: 64, offset: 704)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !586, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !586, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !586, file: !309, line: 300, baseType: !663, size: 96, offset: 1056)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !664)
!664 = !{!665, !666, !667}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !663, file: !309, line: 153, baseType: !22, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !663, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !663, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !586, file: !309, line: 325, baseType: !669, size: 32, offset: 1152)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !671)
!671 = !{!672, !678, !679}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !670, file: !406, line: 5074, baseType: !673, size: 96)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !673, file: !410, line: 57, baseType: !413, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !673, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !673, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !670, file: !406, line: 5075, baseType: !617, size: 64, offset: 96)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !670, file: !406, line: 5076, baseType: !680, size: 32, offset: 160)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !680, file: !420, line: 52, baseType: !22, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !586, file: !309, line: 343, baseType: !684, size: 64, offset: 1184)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !684, file: !379, line: 63, baseType: !152, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !684, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "tc_start_time", scope: !529, file: !690, line: 95, type: !152, isLocal: true, isDefinition: true)
!690 = !DIFile(filename: "zephyr/subsys/testsuite/include/zephyr/tc_util.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "tc_spend_time", scope: !529, file: !690, line: 96, type: !152, isLocal: true, isDefinition: true)
!693 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "ztest_api", scope: !696, file: !699, line: 70, type: !700, isLocal: false, isDefinition: true)
!696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !698, splitDebugInlining: false, nameTableKind: None)
!697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!698 = !{!694}
!699 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_arch_api", file: !114, line: 499, size: 96, elements: !702)
!702 = !{!703, !704, !725}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "run_all", scope: !701, file: !114, line: 500, baseType: !16, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "should_suite_run", scope: !701, file: !114, line: 501, baseType: !705, size: 32, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!706 = !DISubroutineType(types: !707)
!707 = !{!145, !13, !708}
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !710)
!710 = !{!711, !712, !713, !714, !715, !716, !717}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !709, file: !114, line: 179, baseType: !117, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !709, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !709, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !709, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !709, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !709, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !709, file: !114, line: 197, baseType: !718, size: 32, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !721)
!721 = !{!722, !723, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !720, file: !114, line: 116, baseType: !152, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !720, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !720, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "should_test_run", scope: !701, file: !114, line: 502, baseType: !726, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DISubroutineType(types: !728)
!728 = !{!145, !118, !118}
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !731, file: !835, line: 72, type: !919, isLocal: true, isDefinition: true)
!731 = distinct !DICompileUnit(language: DW_LANG_C99, file: !732, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !733, retainedTypes: !821, globals: !832, splitDebugInlining: false, nameTableKind: None)
!732 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!733 = !{!30, !734}
!734 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !223, line: 65, baseType: !107, size: 32, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820}
!736 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!737 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!738 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!739 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!740 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!741 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!742 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!743 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!744 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!745 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!746 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!747 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!748 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!749 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!750 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!751 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!752 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!753 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!754 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!755 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!756 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!757 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!758 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!759 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!760 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!761 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!762 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!763 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!764 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!765 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!766 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!767 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!768 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!769 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!770 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!771 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!772 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!773 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!774 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!775 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!776 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!777 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!778 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!779 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!780 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!781 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!782 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!783 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!784 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!785 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!786 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!787 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!788 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!789 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!790 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!791 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!792 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!793 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!794 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!795 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!796 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!797 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!798 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!799 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!800 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!801 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!802 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!803 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!804 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!805 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!806 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!807 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!808 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!809 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!810 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!811 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!812 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!813 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!814 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!815 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!816 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!817 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!818 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!819 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!820 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!821 = !{!185, !107, !106, !822}
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !223, line: 364, baseType: !824)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 356, size: 192, elements: !825)
!825 = !{!826, !827, !828, !829, !830, !831}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !824, file: !223, line: 358, baseType: !227, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !824, file: !223, line: 359, baseType: !227, size: 32, offset: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !824, file: !223, line: 360, baseType: !227, size: 32, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !824, file: !223, line: 361, baseType: !227, size: 32, offset: 96)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !824, file: !223, line: 362, baseType: !227, size: 32, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !824, file: !223, line: 363, baseType: !227, size: 32, offset: 160)
!832 = !{!833, !839, !855, !866, !883, !729, !885, !899, !901, !903, !905, !907, !909, !911, !913, !915, !917}
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !731, file: !835, line: 424, type: !836, isLocal: false, isDefinition: true, align: 16)
!835 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 64, elements: !837)
!837 = !{!838}
!838 = !DISubrange(count: 4)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !731, file: !835, line: 424, type: !841, isLocal: false, isDefinition: true, align: 32)
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !843)
!843 = !{!844, !845, !846, !847, !853, !854}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !842, file: !247, line: 380, baseType: !118, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !842, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !842, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !842, file: !247, line: 386, baseType: !848, size: 32, offset: 96)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 32)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !850)
!850 = !{!851, !852}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !849, file: !247, line: 359, baseType: !195, size: 8)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !849, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !842, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !842, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !731, file: !835, line: 424, type: !857, isLocal: true, isDefinition: true, align: 32)
!857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !859)
!859 = !{!860, !865}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !858, file: !238, line: 60, baseType: !861, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 32)
!862 = !DISubroutineType(types: !863)
!863 = !{!107, !864}
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !858, file: !238, line: 65, baseType: !864, size: 32, offset: 32)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "exti_data", scope: !731, file: !835, line: 423, type: !868, isLocal: true, isDefinition: true)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !835, line: 107, size: 1472, elements: !869)
!869 = !{!870}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !868, file: !835, line: 109, baseType: !871, size: 1472)
!871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !872, size: 1472, elements: !881)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !835, line: 101, size: 64, elements: !873)
!873 = !{!874, !880}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !872, file: !835, line: 102, baseType: !875, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !876, line: 63, baseType: !877)
!876 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 32)
!878 = !DISubroutineType(types: !879)
!879 = !{null, !107, !106}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !872, file: !835, line: 103, baseType: !106, size: 32, offset: 32)
!881 = !{!882}
!882 = !DISubrange(count: 23)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !731, file: !835, line: 424, type: !849, isLocal: true, isDefinition: true, align: 8)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !887, file: !835, line: 493, type: !892, isLocal: true, isDefinition: true, align: 32)
!887 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !835, file: !835, line: 460, type: !888, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !890)
!888 = !DISubroutineType(types: !889)
!889 = !{null, !864}
!890 = !{!891}
!891 = !DILocalVariable(name: "dev", arg: 1, scope: !887, file: !835, line: 460, type: !864)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !893)
!893 = !{!894, !896, !897, !898}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !892, file: !10, line: 55, baseType: !895, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !892, file: !10, line: 57, baseType: !895, size: 32, offset: 32)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !892, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !892, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !887, file: !835, line: 497, type: !892, isLocal: true, isDefinition: true, align: 32)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !887, file: !835, line: 507, type: !892, isLocal: true, isDefinition: true, align: 32)
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !887, file: !835, line: 512, type: !892, isLocal: true, isDefinition: true, align: 32)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !887, file: !835, line: 516, type: !892, isLocal: true, isDefinition: true, align: 32)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !887, file: !835, line: 523, type: !892, isLocal: true, isDefinition: true, align: 32)
!909 = !DIGlobalVariableExpression(var: !910, expr: !DIExpression())
!910 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !887, file: !835, line: 527, type: !892, isLocal: true, isDefinition: true, align: 32)
!911 = !DIGlobalVariableExpression(var: !912, expr: !DIExpression())
!912 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !887, file: !835, line: 581, type: !892, isLocal: true, isDefinition: true, align: 32)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !887, file: !835, line: 586, type: !892, isLocal: true, isDefinition: true, align: 32)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !887, file: !835, line: 591, type: !892, isLocal: true, isDefinition: true, align: 32)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !887, file: !835, line: 595, type: !892, isLocal: true, isDefinition: true, align: 32)
!919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 736, elements: !881)
!920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !921)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !223, line: 154, baseType: !734)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !924, file: !929, line: 22, type: !951, isLocal: false, isDefinition: true, align: 16)
!924 = distinct !DICompileUnit(language: DW_LANG_C99, file: !925, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !926, splitDebugInlining: false, nameTableKind: None)
!925 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!926 = !{!927, !922, !933, !935, !937, !939, !941, !943, !945, !947, !949}
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !924, file: !929, line: 17, type: !930, isLocal: false, isDefinition: true, align: 16)
!929 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 192, elements: !931)
!931 = !{!932}
!932 = !DISubrange(count: 12)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !924, file: !929, line: 29, type: !836, isLocal: false, isDefinition: true, align: 16)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !924, file: !929, line: 36, type: !836, isLocal: false, isDefinition: true, align: 16)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !924, file: !929, line: 43, type: !836, isLocal: false, isDefinition: true, align: 16)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !924, file: !929, line: 50, type: !836, isLocal: false, isDefinition: true, align: 16)
!941 = !DIGlobalVariableExpression(var: !942, expr: !DIExpression())
!942 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !924, file: !929, line: 57, type: !836, isLocal: false, isDefinition: true, align: 16)
!943 = !DIGlobalVariableExpression(var: !944, expr: !DIExpression())
!944 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !924, file: !929, line: 64, type: !836, isLocal: false, isDefinition: true, align: 16)
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !924, file: !929, line: 71, type: !836, isLocal: false, isDefinition: true, align: 16)
!947 = !DIGlobalVariableExpression(var: !948, expr: !DIExpression())
!948 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !924, file: !929, line: 78, type: !836, isLocal: false, isDefinition: true, align: 16)
!949 = !DIGlobalVariableExpression(var: !950, expr: !DIExpression())
!950 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !924, file: !929, line: 85, type: !836, isLocal: false, isDefinition: true, align: 16)
!951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 48, elements: !952)
!952 = !{!953}
!953 = !DISubrange(count: 3)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !956, file: !1018, line: 398, type: !1051, isLocal: true, isDefinition: true)
!956 = distinct !DICompileUnit(language: DW_LANG_C99, file: !957, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !958, retainedTypes: !971, globals: !1015, splitDebugInlining: false, nameTableKind: None)
!957 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!958 = !{!959, !30, !964}
!959 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !960, line: 197, baseType: !32, size: 32, elements: !961)
!960 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!961 = !{!962, !963}
!962 = !DIEnumerator(name: "SUCCESS", value: 0)
!963 = !DIEnumerator(name: "ERROR", value: 1)
!964 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !965, line: 44, baseType: !32, size: 32, elements: !966)
!965 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!966 = !{!967, !968, !969, !970}
!967 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!968 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!969 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!970 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!971 = !{!106, !107, !152, !972, !1008, !1014}
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 510, baseType: !974)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 477, size: 1216, elements: !975)
!975 = !{!976, !977, !978, !979, !980, !981, !982, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !974, file: !223, line: 479, baseType: !227, size: 32)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !974, file: !223, line: 480, baseType: !227, size: 32, offset: 32)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !974, file: !223, line: 481, baseType: !227, size: 32, offset: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !974, file: !223, line: 482, baseType: !227, size: 32, offset: 96)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !974, file: !223, line: 483, baseType: !227, size: 32, offset: 128)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !974, file: !223, line: 484, baseType: !227, size: 32, offset: 160)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !974, file: !223, line: 485, baseType: !983, size: 64, offset: 192)
!983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 64, elements: !340)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !974, file: !223, line: 486, baseType: !227, size: 32, offset: 256)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !974, file: !223, line: 487, baseType: !227, size: 32, offset: 288)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !974, file: !223, line: 488, baseType: !983, size: 64, offset: 320)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !974, file: !223, line: 489, baseType: !227, size: 32, offset: 384)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !974, file: !223, line: 490, baseType: !227, size: 32, offset: 416)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !974, file: !223, line: 491, baseType: !983, size: 64, offset: 448)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !974, file: !223, line: 492, baseType: !227, size: 32, offset: 512)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !974, file: !223, line: 493, baseType: !227, size: 32, offset: 544)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !974, file: !223, line: 494, baseType: !983, size: 64, offset: 576)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !974, file: !223, line: 495, baseType: !227, size: 32, offset: 640)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !974, file: !223, line: 496, baseType: !227, size: 32, offset: 672)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !974, file: !223, line: 497, baseType: !983, size: 64, offset: 704)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !974, file: !223, line: 498, baseType: !227, size: 32, offset: 768)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !974, file: !223, line: 499, baseType: !227, size: 32, offset: 800)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !974, file: !223, line: 500, baseType: !983, size: 64, offset: 832)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !974, file: !223, line: 501, baseType: !227, size: 32, offset: 896)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !974, file: !223, line: 502, baseType: !227, size: 32, offset: 928)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !974, file: !223, line: 503, baseType: !983, size: 64, offset: 960)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !974, file: !223, line: 504, baseType: !227, size: 32, offset: 1024)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !974, file: !223, line: 505, baseType: !227, size: 32, offset: 1056)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !974, file: !223, line: 506, baseType: !152, size: 32, offset: 1088)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !974, file: !223, line: 507, baseType: !227, size: 32, offset: 1120)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !974, file: !223, line: 508, baseType: !227, size: 32, offset: 1152)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !974, file: !223, line: 509, baseType: !227, size: 32, offset: 1184)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1010, line: 343, size: 64, elements: !1011)
!1010 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1011 = !{!1012, !1013}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1009, file: !1010, line: 344, baseType: !152, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1009, file: !1010, line: 345, baseType: !152, size: 32, offset: 32)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!1015 = !{!1016, !1022, !1038, !1049, !954}
!1016 = !DIGlobalVariableExpression(var: !1017, expr: !DIExpression())
!1017 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !956, file: !1018, line: 752, type: !1019, isLocal: false, isDefinition: true, align: 16)
!1018 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 848, elements: !1020)
!1020 = !{!1021}
!1021 = !DISubrange(count: 53)
!1022 = !DIGlobalVariableExpression(var: !1023, expr: !DIExpression())
!1023 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !956, file: !1018, line: 752, type: !1024, isLocal: false, isDefinition: true, align: 32)
!1024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1025)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1026)
!1026 = !{!1027, !1028, !1029, !1030, !1036, !1037}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1025, file: !247, line: 380, baseType: !118, size: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1025, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1025, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1025, file: !247, line: 386, baseType: !1031, size: 32, offset: 96)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1033)
!1033 = !{!1034, !1035}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1032, file: !247, line: 359, baseType: !195, size: 8)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1032, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1025, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1025, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1038 = !DIGlobalVariableExpression(var: !1039, expr: !DIExpression())
!1039 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !956, file: !1018, line: 752, type: !1040, isLocal: true, isDefinition: true, align: 32)
!1040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1041)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1042)
!1042 = !{!1043, !1048}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1041, file: !238, line: 60, baseType: !1044, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!107, !1047}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1041, file: !238, line: 65, baseType: !1047, size: 32, offset: 32)
!1049 = !DIGlobalVariableExpression(var: !1050, expr: !DIExpression())
!1050 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !956, file: !1018, line: 752, type: !1032, isLocal: true, isDefinition: true, align: 8)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !965, line: 100, size: 224, elements: !1052)
!1052 = !{!1053, !1059, !1060, !1069, !1074, !1079, !1085}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1051, file: !965, line: 101, baseType: !1054, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !965, line: 76, baseType: !1055)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!107, !1047, !1058}
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !965, line: 56, baseType: !106)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1051, file: !965, line: 102, baseType: !1054, size: 32, offset: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1051, file: !965, line: 103, baseType: !1061, size: 32, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !965, line: 83, baseType: !1062)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!107, !1047, !1058, !1065, !106}
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !965, line: 72, baseType: !1066)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{null, !1047, !1058, !106}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1051, file: !965, line: 104, baseType: !1070, size: 32, offset: 96)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !965, line: 79, baseType: !1071)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 32)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!107, !1047, !1058, !1014}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1051, file: !965, line: 105, baseType: !1075, size: 32, offset: 128)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !965, line: 88, baseType: !1076)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!964, !1047, !1058}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1051, file: !965, line: 106, baseType: !1080, size: 32, offset: 160)
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !965, line: 92, baseType: !1081)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!107, !1047, !1058, !1084}
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !965, line: 64, baseType: !106)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1051, file: !965, line: 107, baseType: !1086, size: 32, offset: 192)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !965, line: 96, baseType: !1087)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!107, !1047, !1058, !106}
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1092, file: !1149, line: 603, type: !1151, isLocal: true, isDefinition: true, align: 32)
!1092 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1093, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1094, globals: !1146, splitDebugInlining: false, nameTableKind: None)
!1093 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!1094 = !{!106, !107, !1095}
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1097)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1098, line: 336, size: 160, elements: !1099)
!1098 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1099 = !{!1100, !1120, !1124, !1128, !1141}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1097, file: !1098, line: 365, baseType: !1101, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!107, !1104, !1119}
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1107)
!1107 = !{!1108, !1109, !1110, !1111, !1117, !1118}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1106, file: !247, line: 380, baseType: !118, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1106, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1106, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1106, file: !247, line: 386, baseType: !1112, size: 32, offset: 96)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1114)
!1114 = !{!1115, !1116}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1113, file: !247, line: 359, baseType: !195, size: 8)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1113, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1106, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1106, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1097, file: !1098, line: 366, baseType: !1121, size: 32, offset: 32)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 32)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{null, !1104, !196}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1097, file: !1098, line: 374, baseType: !1125, size: 32, offset: 64)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!107, !1104}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1097, file: !1098, line: 377, baseType: !1129, size: 32, offset: 96)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 32)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!107, !1104, !1132}
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1134)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1098, line: 122, size: 64, elements: !1135)
!1135 = !{!1136, !1137, !1138, !1139, !1140}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1134, file: !1098, line: 123, baseType: !152, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1134, file: !1098, line: 124, baseType: !195, size: 8, offset: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1134, file: !1098, line: 125, baseType: !195, size: 8, offset: 40)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1134, file: !1098, line: 126, baseType: !195, size: 8, offset: 48)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1134, file: !1098, line: 127, baseType: !195, size: 8, offset: 56)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1097, file: !1098, line: 379, baseType: !1142, size: 32, offset: 128)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!107, !1104, !1145}
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!1146 = !{!1090, !1147}
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1092, file: !1149, line: 38, type: !1150, isLocal: true, isDefinition: true)
!1149 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1104)
!1151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1153)
!1153 = !{!1154, !1155}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1152, file: !238, line: 60, baseType: !1125, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1152, file: !238, line: 65, baseType: !1104, size: 32, offset: 32)
!1156 = !DIGlobalVariableExpression(var: !1157, expr: !DIExpression())
!1157 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1158, file: !1329, line: 762, type: !1441, isLocal: true, isDefinition: true)
!1158 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1159, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1160, retainedTypes: !1178, globals: !1326, splitDebugInlining: false, nameTableKind: None)
!1159 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!1160 = !{!30, !1161, !1167, !1172, !964}
!1161 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1162, line: 506, baseType: !32, size: 32, elements: !1163)
!1162 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1163 = !{!1164, !1165, !1166}
!1164 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1165 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1166 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1167 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1162, line: 512, baseType: !32, size: 32, elements: !1168)
!1168 = !{!1169, !1170, !1171}
!1169 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1170 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1171 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1172 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !876, line: 43, baseType: !32, size: 32, elements: !1173)
!1173 = !{!1174, !1175, !1176, !1177}
!1174 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1175 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1176 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1177 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1178 = !{!106, !107, !1179, !1249, !1254, !1214, !1167, !1161, !1259, !1260, !152, !1274, !1229, !193, !1286, !1287}
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1162, line: 523, size: 288, elements: !1182)
!1182 = !{!1183, !1204, !1210, !1215, !1219, !1220, !1221, !1225, !1245}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1181, file: !1162, line: 524, baseType: !1184, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 32)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!107, !1187, !1202, !1203}
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1190)
!1190 = !{!1191, !1192, !1193, !1194, !1200, !1201}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1189, file: !247, line: 380, baseType: !118, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1189, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1189, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1189, file: !247, line: 386, baseType: !1195, size: 32, offset: 96)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1197)
!1197 = !{!1198, !1199}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1196, file: !247, line: 359, baseType: !195, size: 8)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1196, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1189, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1189, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1162, line: 237, baseType: !195)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1162, line: 257, baseType: !152)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1181, file: !1162, line: 530, baseType: !1205, size: 32, offset: 32)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!107, !1187, !1208}
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1162, line: 229, baseType: !152)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1181, file: !1162, line: 532, baseType: !1211, size: 32, offset: 64)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!107, !1187, !1214, !1209}
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1162, line: 216, baseType: !152)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1181, file: !1162, line: 535, baseType: !1216, size: 32, offset: 96)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!107, !1187, !1214}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1181, file: !1162, line: 537, baseType: !1216, size: 32, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1181, file: !1162, line: 539, baseType: !1216, size: 32, offset: 160)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1181, file: !1162, line: 541, baseType: !1222, size: 32, offset: 192)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!107, !1187, !1202, !1161, !1167}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1181, file: !1162, line: 544, baseType: !1226, size: 32, offset: 224)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 32)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!107, !1187, !1229, !145}
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1162, line: 478, size: 96, elements: !1231)
!1231 = !{!1232, !1239, !1244}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1230, file: !1162, line: 482, baseType: !1233, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1234, line: 33, baseType: !1235)
!1234 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1234, line: 29, size: 32, elements: !1236)
!1236 = !{!1237}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1235, file: !1234, line: 30, baseType: !1238, size: 32)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1230, file: !1162, line: 485, baseType: !1240, size: 32, offset: 32)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1162, line: 464, baseType: !1241)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 32)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{null, !1187, !1229, !1214}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1230, file: !1162, line: 493, baseType: !1214, size: 32, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1181, file: !1162, line: 547, baseType: !1246, size: 32, offset: 256)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 32)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{!152, !1187}
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1251)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1162, line: 428, size: 32, elements: !1252)
!1252 = !{!1253}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1251, file: !1162, line: 434, baseType: !1214, size: 32)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1162, line: 441, size: 32, elements: !1257)
!1257 = !{!1258}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1256, file: !1162, line: 447, baseType: !1214, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 396, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 385, size: 320, elements: !1263)
!1263 = !{!1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1262, file: !223, line: 387, baseType: !227, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1262, file: !223, line: 388, baseType: !227, size: 32, offset: 32)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1262, file: !223, line: 389, baseType: !227, size: 32, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1262, file: !223, line: 390, baseType: !227, size: 32, offset: 96)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1262, file: !223, line: 391, baseType: !227, size: 32, offset: 128)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1262, file: !223, line: 392, baseType: !227, size: 32, offset: 160)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1262, file: !223, line: 393, baseType: !227, size: 32, offset: 192)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1262, file: !223, line: 394, baseType: !227, size: 32, offset: 224)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1262, file: !223, line: 395, baseType: !1273, size: 64, offset: 256)
!1273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 64, elements: !340)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !223, line: 411, baseType: !1276)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 402, size: 320, elements: !1277)
!1277 = !{!1278, !1279, !1280, !1282, !1283, !1284, !1285}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1276, file: !223, line: 404, baseType: !227, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1276, file: !223, line: 405, baseType: !227, size: 32, offset: 32)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1276, file: !223, line: 406, baseType: !1281, size: 128, offset: 64)
!1281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !837)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1276, file: !223, line: 407, baseType: !152, size: 32, offset: 192)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1276, file: !223, line: 408, baseType: !227, size: 32, offset: 224)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1276, file: !223, line: 409, baseType: !227, size: 32, offset: 256)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1276, file: !223, line: 410, baseType: !227, size: 32, offset: 288)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !965, line: 100, size: 224, elements: !1290)
!1290 = !{!1291, !1296, !1297, !1306, !1311, !1316, !1321}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1289, file: !965, line: 101, baseType: !1292, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !965, line: 76, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!107, !1187, !1058}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1289, file: !965, line: 102, baseType: !1292, size: 32, offset: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1289, file: !965, line: 103, baseType: !1298, size: 32, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !965, line: 83, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 32)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!107, !1187, !1058, !1302, !106}
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !965, line: 72, baseType: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 32)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{null, !1187, !1058, !106}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1289, file: !965, line: 104, baseType: !1307, size: 32, offset: 96)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !965, line: 79, baseType: !1308)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 32)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{!107, !1187, !1058, !1014}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1289, file: !965, line: 105, baseType: !1312, size: 32, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !965, line: 88, baseType: !1313)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 32)
!1314 = !DISubroutineType(types: !1315)
!1315 = !{!964, !1187, !1058}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1289, file: !965, line: 106, baseType: !1317, size: 32, offset: 160)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !965, line: 92, baseType: !1318)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 32)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!107, !1187, !1058, !1084}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1289, file: !965, line: 107, baseType: !1322, size: 32, offset: 192)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !965, line: 96, baseType: !1323)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 32)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!107, !1187, !1058, !106}
!1326 = !{!1327, !1333, !1335, !1345, !1347, !1349, !1351, !1356, !1358, !1360, !1365, !1367, !1369, !1371, !1373, !1375, !1377, !1379, !1381, !1383, !1385, !1387, !1389, !1391, !1393, !1407, !1409, !1411, !1413, !1415, !1417, !1419, !1421, !1423, !1425, !1427, !1429, !1431, !1433, !1435, !1156, !1437, !1439, !1452, !1454, !1456, !1458, !1460, !1462}
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1158, file: !1329, line: 762, type: !1330, isLocal: false, isDefinition: true, align: 16)
!1329 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 112, elements: !1331)
!1331 = !{!1332}
!1332 = !DISubrange(count: 7)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1158, file: !1329, line: 762, type: !1188, isLocal: false, isDefinition: true, align: 32)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1158, file: !1329, line: 762, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1338)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1339)
!1339 = !{!1340, !1344}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1338, file: !238, line: 60, baseType: !1341, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!107, !1187}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1338, file: !238, line: 65, baseType: !1187, size: 32, offset: 32)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1158, file: !1329, line: 766, type: !1330, isLocal: false, isDefinition: true, align: 16)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1158, file: !1329, line: 766, type: !1188, isLocal: false, isDefinition: true, align: 32)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1158, file: !1329, line: 766, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1158, file: !1329, line: 770, type: !1353, isLocal: false, isDefinition: true, align: 16)
!1353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 96, elements: !1354)
!1354 = !{!1355}
!1355 = !DISubrange(count: 6)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1158, file: !1329, line: 770, type: !1188, isLocal: false, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1158, file: !1329, line: 770, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1158, file: !1329, line: 774, type: !1362, isLocal: false, isDefinition: true, align: 16)
!1362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 80, elements: !1363)
!1363 = !{!1364}
!1364 = !DISubrange(count: 5)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1158, file: !1329, line: 774, type: !1188, isLocal: false, isDefinition: true, align: 32)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1158, file: !1329, line: 774, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1158, file: !1329, line: 778, type: !1362, isLocal: false, isDefinition: true, align: 16)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1158, file: !1329, line: 778, type: !1188, isLocal: false, isDefinition: true, align: 32)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1158, file: !1329, line: 778, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1158, file: !1329, line: 782, type: !1362, isLocal: false, isDefinition: true, align: 16)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1158, file: !1329, line: 782, type: !1188, isLocal: false, isDefinition: true, align: 32)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1158, file: !1329, line: 782, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1158, file: !1329, line: 786, type: !1362, isLocal: false, isDefinition: true, align: 16)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1158, file: !1329, line: 786, type: !1188, isLocal: false, isDefinition: true, align: 32)
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1158, file: !1329, line: 786, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1158, file: !1329, line: 790, type: !1362, isLocal: false, isDefinition: true, align: 16)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1158, file: !1329, line: 790, type: !1188, isLocal: false, isDefinition: true, align: 32)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1158, file: !1329, line: 790, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1158, file: !1329, line: 762, type: !1395, isLocal: true, isDefinition: true)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1396, line: 237, size: 128, elements: !1397)
!1396 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1397 = !{!1398, !1399, !1400}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1395, file: !1396, line: 239, baseType: !1256, size: 32)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1395, file: !1396, line: 241, baseType: !1187, size: 32, offset: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1395, file: !1396, line: 243, baseType: !1401, size: 64, offset: 64)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1234, line: 40, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1234, line: 35, size: 64, elements: !1403)
!1403 = !{!1404, !1406}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1402, file: !1234, line: 36, baseType: !1405, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1402, file: !1234, line: 37, baseType: !1405, size: 32, offset: 32)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1158, file: !1329, line: 762, type: !1196, isLocal: true, isDefinition: true, align: 8)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1158, file: !1329, line: 766, type: !1395, isLocal: true, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1158, file: !1329, line: 766, type: !1196, isLocal: true, isDefinition: true, align: 8)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1158, file: !1329, line: 770, type: !1395, isLocal: true, isDefinition: true)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1158, file: !1329, line: 770, type: !1196, isLocal: true, isDefinition: true, align: 8)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1158, file: !1329, line: 774, type: !1395, isLocal: true, isDefinition: true)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1158, file: !1329, line: 774, type: !1196, isLocal: true, isDefinition: true, align: 8)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1158, file: !1329, line: 778, type: !1395, isLocal: true, isDefinition: true)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1158, file: !1329, line: 778, type: !1196, isLocal: true, isDefinition: true, align: 8)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1158, file: !1329, line: 782, type: !1395, isLocal: true, isDefinition: true)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1158, file: !1329, line: 782, type: !1196, isLocal: true, isDefinition: true, align: 8)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1158, file: !1329, line: 786, type: !1395, isLocal: true, isDefinition: true)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1158, file: !1329, line: 786, type: !1196, isLocal: true, isDefinition: true, align: 8)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1158, file: !1329, line: 790, type: !1395, isLocal: true, isDefinition: true)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1158, file: !1329, line: 790, type: !1196, isLocal: true, isDefinition: true, align: 8)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1158, file: !1329, line: 656, type: !1180, isLocal: true, isDefinition: true)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1158, file: !1329, line: 766, type: !1441, isLocal: true, isDefinition: true)
!1441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1442)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1396, line: 224, size: 160, elements: !1443)
!1443 = !{!1444, !1445, !1446, !1447}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1442, file: !1396, line: 226, baseType: !1251, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1442, file: !1396, line: 228, baseType: !1014, size: 32, offset: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1442, file: !1396, line: 230, baseType: !107, size: 32, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1442, file: !1396, line: 231, baseType: !1448, size: 64, offset: 96)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1010, line: 343, size: 64, elements: !1449)
!1449 = !{!1450, !1451}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1448, file: !1010, line: 344, baseType: !152, size: 32)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1448, file: !1010, line: 345, baseType: !152, size: 32, offset: 32)
!1452 = !DIGlobalVariableExpression(var: !1453, expr: !DIExpression())
!1453 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1158, file: !1329, line: 770, type: !1441, isLocal: true, isDefinition: true)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1158, file: !1329, line: 774, type: !1441, isLocal: true, isDefinition: true)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1158, file: !1329, line: 778, type: !1441, isLocal: true, isDefinition: true)
!1458 = !DIGlobalVariableExpression(var: !1459, expr: !DIExpression())
!1459 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1158, file: !1329, line: 782, type: !1441, isLocal: true, isDefinition: true)
!1460 = !DIGlobalVariableExpression(var: !1461, expr: !DIExpression())
!1461 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1158, file: !1329, line: 786, type: !1441, isLocal: true, isDefinition: true)
!1462 = !DIGlobalVariableExpression(var: !1463, expr: !DIExpression())
!1463 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1158, file: !1329, line: 790, type: !1441, isLocal: true, isDefinition: true)
!1464 = !DIGlobalVariableExpression(var: !1465, expr: !DIExpression())
!1465 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1466, file: !1605, line: 44, type: !1683, isLocal: false, isDefinition: true)
!1466 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1467, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1468, retainedTypes: !1501, globals: !1602, splitDebugInlining: false, nameTableKind: None)
!1467 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!1468 = !{!30, !1469, !1476, !1483, !1490, !1496, !964}
!1469 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1098, line: 47, baseType: !32, size: 32, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474, !1475}
!1471 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1472 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1473 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1474 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1475 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1476 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1098, line: 75, baseType: !32, size: 32, elements: !1477)
!1477 = !{!1478, !1479, !1480, !1481, !1482}
!1478 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1479 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1480 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1481 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1482 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1483 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1098, line: 92, baseType: !32, size: 32, elements: !1484)
!1484 = !{!1485, !1486, !1487, !1488, !1489}
!1485 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1486 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1487 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1488 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1489 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1490 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1098, line: 84, baseType: !32, size: 32, elements: !1491)
!1491 = !{!1492, !1493, !1494, !1495}
!1492 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1493 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1494 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1495 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1496 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1098, line: 107, baseType: !32, size: 32, elements: !1497)
!1497 = !{!1498, !1499, !1500}
!1498 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1499 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1500 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1501 = !{!106, !107, !1502, !196, !195, !1551, !152, !1058, !1562, !197, !566, !1601}
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1098, line: 336, size: 160, elements: !1505)
!1505 = !{!1506, !1525, !1529, !1533, !1546}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1504, file: !1098, line: 365, baseType: !1507, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 32)
!1508 = !DISubroutineType(types: !1509)
!1509 = !{!107, !1510, !1119}
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1512)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1513)
!1513 = !{!1514, !1515, !1516, !1517, !1523, !1524}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1512, file: !247, line: 380, baseType: !118, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1512, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1512, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1512, file: !247, line: 386, baseType: !1518, size: 32, offset: 96)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1520)
!1520 = !{!1521, !1522}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1519, file: !247, line: 359, baseType: !195, size: 8)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1519, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1512, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1512, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1504, file: !1098, line: 366, baseType: !1526, size: 32, offset: 32)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{null, !1510, !196}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1504, file: !1098, line: 374, baseType: !1530, size: 32, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!107, !1510}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1504, file: !1098, line: 377, baseType: !1534, size: 32, offset: 96)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 32)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!107, !1510, !1537}
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1539)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1098, line: 122, size: 64, elements: !1540)
!1540 = !{!1541, !1542, !1543, !1544, !1545}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1539, file: !1098, line: 123, baseType: !152, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1539, file: !1098, line: 124, baseType: !195, size: 8, offset: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1539, file: !1098, line: 125, baseType: !195, size: 8, offset: 40)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1539, file: !1098, line: 126, baseType: !195, size: 8, offset: 48)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1539, file: !1098, line: 127, baseType: !195, size: 8, offset: 56)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1504, file: !1098, line: 379, baseType: !1547, size: 32, offset: 128)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!107, !1510, !1550}
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !223, line: 648, baseType: !1553)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 639, size: 224, elements: !1554)
!1554 = !{!1555, !1556, !1557, !1558, !1559, !1560, !1561}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1553, file: !223, line: 641, baseType: !227, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1553, file: !223, line: 642, baseType: !227, size: 32, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1553, file: !223, line: 643, baseType: !227, size: 32, offset: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1553, file: !223, line: 644, baseType: !227, size: 32, offset: 96)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1553, file: !223, line: 645, baseType: !227, size: 32, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1553, file: !223, line: 646, baseType: !227, size: 32, offset: 160)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1553, file: !223, line: 647, baseType: !227, size: 32, offset: 192)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1564)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !965, line: 100, size: 224, elements: !1565)
!1565 = !{!1566, !1571, !1572, !1581, !1586, !1591, !1596}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1564, file: !965, line: 101, baseType: !1567, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !965, line: 76, baseType: !1568)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 32)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{!107, !1510, !1058}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1564, file: !965, line: 102, baseType: !1567, size: 32, offset: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1564, file: !965, line: 103, baseType: !1573, size: 32, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !965, line: 83, baseType: !1574)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 32)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{!107, !1510, !1058, !1577, !106}
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !965, line: 72, baseType: !1578)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{null, !1510, !1058, !106}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1564, file: !965, line: 104, baseType: !1582, size: 32, offset: 96)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !965, line: 79, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!107, !1510, !1058, !1014}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1564, file: !965, line: 105, baseType: !1587, size: 32, offset: 128)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !965, line: 88, baseType: !1588)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 32)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!964, !1510, !1058}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1564, file: !965, line: 106, baseType: !1592, size: 32, offset: 160)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !965, line: 92, baseType: !1593)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!107, !1510, !1058, !1084}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1564, file: !965, line: 107, baseType: !1597, size: 32, offset: 192)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !965, line: 96, baseType: !1598)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{!107, !1510, !1058, !106}
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!1602 = !{!1464, !1603, !1609, !1611, !1618, !1620, !1664, !1667, !1669, !1672, !1675, !1677}
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1466, file: !1605, line: 1914, type: !1606, isLocal: false, isDefinition: true, align: 16)
!1605 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 128, elements: !1607)
!1607 = !{!1608}
!1608 = !DISubrange(count: 8)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1466, file: !1605, line: 1914, type: !1511, isLocal: false, isDefinition: true, align: 32)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1466, file: !1605, line: 1914, type: !1613, isLocal: true, isDefinition: true, align: 32)
!1613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1614)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1615)
!1615 = !{!1616, !1617}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1614, file: !238, line: 60, baseType: !1530, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1614, file: !238, line: 65, baseType: !1510, size: 32, offset: 32)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1466, file: !1605, line: 1914, type: !1519, isLocal: true, isDefinition: true, align: 8)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1466, file: !1605, line: 1914, type: !1622, isLocal: true, isDefinition: true)
!1622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1623)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1624, line: 22, size: 224, elements: !1625)
!1624 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1625 = !{!1626, !1627, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1623, file: !1624, line: 24, baseType: !1551, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1623, file: !1624, line: 26, baseType: !1628, size: 32, offset: 32)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1630)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1010, line: 343, size: 64, elements: !1631)
!1631 = !{!1632, !1633}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1630, file: !1010, line: 344, baseType: !152, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1630, file: !1010, line: 345, baseType: !152, size: 32, offset: 32)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1623, file: !1624, line: 28, baseType: !185, size: 32, offset: 64)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1623, file: !1624, line: 30, baseType: !145, size: 8, offset: 96)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1623, file: !1624, line: 32, baseType: !107, size: 32, offset: 128)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1623, file: !1624, line: 34, baseType: !145, size: 8, offset: 160)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1623, file: !1624, line: 36, baseType: !145, size: 8, offset: 168)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1623, file: !1624, line: 38, baseType: !145, size: 8, offset: 176)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1623, file: !1624, line: 40, baseType: !145, size: 8, offset: 184)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1623, file: !1624, line: 41, baseType: !1642, size: 32, offset: 192)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1644)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1645, line: 60, size: 64, elements: !1646)
!1645 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1646 = !{!1647, !1663}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1644, file: !1645, line: 69, baseType: !1648, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 32)
!1649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1650)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1645, line: 50, size: 64, elements: !1651)
!1651 = !{!1652, !1661, !1662}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1650, file: !1645, line: 52, baseType: !1653, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1655)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1656, line: 37, baseType: !1657)
!1656 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1656, line: 32, size: 64, elements: !1658)
!1658 = !{!1659, !1660}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1657, file: !1656, line: 34, baseType: !152, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1657, file: !1656, line: 36, baseType: !152, size: 32, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1650, file: !1645, line: 54, baseType: !195, size: 8, offset: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1650, file: !1645, line: 56, baseType: !195, size: 8, offset: 40)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1644, file: !1645, line: 71, baseType: !195, size: 8, offset: 32)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1466, file: !1605, line: 1914, type: !1666, isLocal: true, isDefinition: true)
!1666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1629, size: 64, elements: !445)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1466, file: !1605, line: 1914, type: !1643, isLocal: true, isDefinition: true)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1466, file: !1605, line: 1914, type: !1671, isLocal: true, isDefinition: true)
!1671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1649, size: 64, elements: !445)
!1672 = !DIGlobalVariableExpression(var: !1673, expr: !DIExpression())
!1673 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1466, file: !1605, line: 1914, type: !1674, isLocal: true, isDefinition: true)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1654, size: 128, elements: !340)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1466, file: !1605, line: 1539, type: !1503, isLocal: true, isDefinition: true)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1466, file: !1605, line: 1914, type: !1679, isLocal: true, isDefinition: true)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1624, line: 74, size: 64, elements: !1680)
!1680 = !{!1681, !1682}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1679, file: !1624, line: 76, baseType: !152, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1679, file: !1624, line: 78, baseType: !1510, size: 32, offset: 32)
!1683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1684)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !1685)
!1685 = !{!1686, !1687}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1684, file: !203, line: 17, baseType: !118, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1684, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1690, file: !1766, line: 65, type: !227, isLocal: true, isDefinition: true)
!1690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1692, retainedTypes: !1693, globals: !1763, splitDebugInlining: false, nameTableKind: None)
!1691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!1692 = !{!734}
!1693 = !{!564, !1694, !895, !195, !152, !1702, !1733}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !1696)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !1697)
!1697 = !{!1698, !1699, !1700, !1701}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1696, file: !463, line: 766, baseType: !227, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1696, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1696, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1696, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !1704)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !1705)
!1705 = !{!1706, !1708, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1723, !1728, !1732}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1704, file: !463, line: 413, baseType: !1707, size: 256)
!1707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 256, elements: !1607)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1704, file: !463, line: 414, baseType: !1709, size: 768, offset: 256)
!1709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 768, elements: !1710)
!1710 = !{!1711}
!1711 = !DISubrange(count: 24)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1704, file: !463, line: 415, baseType: !1707, size: 256, offset: 1024)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1704, file: !463, line: 416, baseType: !1709, size: 768, offset: 1280)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1704, file: !463, line: 417, baseType: !1707, size: 256, offset: 2048)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1704, file: !463, line: 418, baseType: !1709, size: 768, offset: 2304)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1704, file: !463, line: 419, baseType: !1707, size: 256, offset: 3072)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1704, file: !463, line: 420, baseType: !1709, size: 768, offset: 3328)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1704, file: !463, line: 421, baseType: !1707, size: 256, offset: 4096)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1704, file: !463, line: 422, baseType: !1720, size: 1792, offset: 4352)
!1720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 1792, elements: !1721)
!1721 = !{!1722}
!1722 = !DISubrange(count: 56)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1704, file: !463, line: 423, baseType: !1724, size: 1920, offset: 6144)
!1724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1725, size: 1920, elements: !1726)
!1725 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!1726 = !{!1727}
!1727 = !DISubrange(count: 240)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1704, file: !463, line: 424, baseType: !1729, size: 20608, offset: 8064)
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 20608, elements: !1730)
!1730 = !{!1731}
!1731 = !DISubrange(count: 644)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1704, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 32)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !1735)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !1736)
!1736 = !{!1737, !1738, !1739, !1740, !1741, !1742, !1743, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1754, !1755, !1756, !1758, !1760, !1762}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1735, file: !463, line: 447, baseType: !467, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1735, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1735, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1735, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1735, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1735, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1735, file: !463, line: 453, baseType: !1744, size: 96, offset: 192)
!1744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1725, size: 96, elements: !931)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1735, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1735, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1735, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1735, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1735, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1735, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1735, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1735, file: !463, line: 461, baseType: !1753, size: 64, offset: 512)
!1753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 64, elements: !340)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1735, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1735, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1735, file: !463, line: 464, baseType: !1757, size: 128, offset: 640)
!1757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 128, elements: !837)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1735, file: !463, line: 465, baseType: !1759, size: 160, offset: 768)
!1759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 160, elements: !1363)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1735, file: !463, line: 466, baseType: !1761, size: 160, offset: 928)
!1761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 160, elements: !1363)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1735, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!1763 = !{!1764, !1790, !1795, !1797, !1799, !1688}
!1764 = !DIGlobalVariableExpression(var: !1765, expr: !DIExpression())
!1765 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1690, file: !1766, line: 285, type: !1767, isLocal: true, isDefinition: true, align: 32)
!1766 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1768)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1769)
!1769 = !{!1770, !1789}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1768, file: !238, line: 60, baseType: !1771, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 32)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!107, !1774}
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1776)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1777)
!1777 = !{!1778, !1779, !1780, !1781, !1787, !1788}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1776, file: !247, line: 380, baseType: !118, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1776, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1776, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1776, file: !247, line: 386, baseType: !1782, size: 32, offset: 96)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 32)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1784)
!1784 = !{!1785, !1786}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1783, file: !247, line: 359, baseType: !195, size: 8)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1783, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1776, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1776, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1768, file: !238, line: 65, baseType: !1774, size: 32, offset: 32)
!1790 = !DIGlobalVariableExpression(var: !1791, expr: !DIExpression())
!1791 = distinct !DIGlobalVariable(name: "lock", scope: !1690, file: !1766, line: 34, type: !1792, isLocal: true, isDefinition: true)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !1793)
!1793 = !{!1794}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1792, file: !420, line: 52, baseType: !22, size: 32)
!1795 = !DIGlobalVariableExpression(var: !1796, expr: !DIExpression())
!1796 = distinct !DIGlobalVariable(name: "last_load", scope: !1690, file: !1766, line: 36, type: !152, isLocal: true, isDefinition: true)
!1797 = !DIGlobalVariableExpression(var: !1798, expr: !DIExpression())
!1798 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1690, file: !1766, line: 48, type: !152, isLocal: true, isDefinition: true)
!1799 = !DIGlobalVariableExpression(var: !1800, expr: !DIExpression())
!1800 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1690, file: !1766, line: 54, type: !152, isLocal: true, isDefinition: true)
!1801 = !DIGlobalVariableExpression(var: !1802, expr: !DIExpression())
!1802 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1803, file: !1885, line: 22, type: !1887, isLocal: true, isDefinition: true)
!1803 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1804, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1805, retainedTypes: !1806, globals: !1882, splitDebugInlining: false, nameTableKind: None)
!1804 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!1805 = !{!1161, !1167}
!1806 = !{!1807, !1871, !1876, !1214, !1167, !1161, !1881, !106}
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 32)
!1808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1809)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1162, line: 523, size: 288, elements: !1810)
!1810 = !{!1811, !1830, !1834, !1838, !1842, !1843, !1844, !1848, !1867}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1809, file: !1162, line: 524, baseType: !1812, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 32)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!107, !1815, !1202, !1203}
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 32)
!1816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1817)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1818)
!1818 = !{!1819, !1820, !1821, !1822, !1828, !1829}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1817, file: !247, line: 380, baseType: !118, size: 32)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1817, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1817, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1817, file: !247, line: 386, baseType: !1823, size: 32, offset: 96)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1825)
!1825 = !{!1826, !1827}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1824, file: !247, line: 359, baseType: !195, size: 8)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1824, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1817, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1817, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1809, file: !1162, line: 530, baseType: !1831, size: 32, offset: 32)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 32)
!1832 = !DISubroutineType(types: !1833)
!1833 = !{!107, !1815, !1208}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1809, file: !1162, line: 532, baseType: !1835, size: 32, offset: 64)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 32)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!107, !1815, !1214, !1209}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1809, file: !1162, line: 535, baseType: !1839, size: 32, offset: 96)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{!107, !1815, !1214}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1809, file: !1162, line: 537, baseType: !1839, size: 32, offset: 128)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1809, file: !1162, line: 539, baseType: !1839, size: 32, offset: 160)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1809, file: !1162, line: 541, baseType: !1845, size: 32, offset: 192)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1846 = !DISubroutineType(types: !1847)
!1847 = !{!107, !1815, !1202, !1161, !1167}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1809, file: !1162, line: 544, baseType: !1849, size: 32, offset: 224)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = !DISubroutineType(types: !1851)
!1851 = !{!107, !1815, !1852, !145}
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 32)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1162, line: 478, size: 96, elements: !1854)
!1854 = !{!1855, !1861, !1866}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1853, file: !1162, line: 482, baseType: !1856, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1234, line: 33, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1234, line: 29, size: 32, elements: !1858)
!1858 = !{!1859}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1857, file: !1234, line: 30, baseType: !1860, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1853, file: !1162, line: 485, baseType: !1862, size: 32, offset: 32)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1162, line: 464, baseType: !1863)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = !DISubroutineType(types: !1865)
!1865 = !{null, !1815, !1852, !1214}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1853, file: !1162, line: 493, baseType: !1214, size: 32, offset: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1809, file: !1162, line: 547, baseType: !1868, size: 32, offset: 256)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!152, !1815}
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1873)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1162, line: 428, size: 32, elements: !1874)
!1874 = !{!1875}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1873, file: !1162, line: 434, baseType: !1214, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1162, line: 441, size: 32, elements: !1879)
!1879 = !{!1880}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1878, file: !1162, line: 447, baseType: !1214, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 32)
!1882 = !{!1883, !1801}
!1883 = !DIGlobalVariableExpression(var: !1884, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1884 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1803, file: !1885, line: 37, type: !1886, isLocal: true, isDefinition: true)
!1885 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1888, size: 352, elements: !1889)
!1888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1815)
!1889 = !{!1890}
!1890 = !DISubrange(count: 11)
!1891 = !DIGlobalVariableExpression(var: !1892, expr: !DIExpression())
!1892 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1893, file: !1934, line: 139, type: !1941, isLocal: false, isDefinition: true)
!1893 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1894, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1895, globals: !1931, splitDebugInlining: false, nameTableKind: None)
!1894 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!1895 = !{!1896}
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 510, baseType: !1898)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 477, size: 1216, elements: !1899)
!1899 = !{!1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1898, file: !223, line: 479, baseType: !227, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1898, file: !223, line: 480, baseType: !227, size: 32, offset: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1898, file: !223, line: 481, baseType: !227, size: 32, offset: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1898, file: !223, line: 482, baseType: !227, size: 32, offset: 96)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1898, file: !223, line: 483, baseType: !227, size: 32, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1898, file: !223, line: 484, baseType: !227, size: 32, offset: 160)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1898, file: !223, line: 485, baseType: !983, size: 64, offset: 192)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1898, file: !223, line: 486, baseType: !227, size: 32, offset: 256)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1898, file: !223, line: 487, baseType: !227, size: 32, offset: 288)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1898, file: !223, line: 488, baseType: !983, size: 64, offset: 320)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1898, file: !223, line: 489, baseType: !227, size: 32, offset: 384)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1898, file: !223, line: 490, baseType: !227, size: 32, offset: 416)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1898, file: !223, line: 491, baseType: !983, size: 64, offset: 448)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1898, file: !223, line: 492, baseType: !227, size: 32, offset: 512)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1898, file: !223, line: 493, baseType: !227, size: 32, offset: 544)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1898, file: !223, line: 494, baseType: !983, size: 64, offset: 576)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1898, file: !223, line: 495, baseType: !227, size: 32, offset: 640)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1898, file: !223, line: 496, baseType: !227, size: 32, offset: 672)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1898, file: !223, line: 497, baseType: !983, size: 64, offset: 704)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1898, file: !223, line: 498, baseType: !227, size: 32, offset: 768)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1898, file: !223, line: 499, baseType: !227, size: 32, offset: 800)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1898, file: !223, line: 500, baseType: !983, size: 64, offset: 832)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1898, file: !223, line: 501, baseType: !227, size: 32, offset: 896)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1898, file: !223, line: 502, baseType: !227, size: 32, offset: 928)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1898, file: !223, line: 503, baseType: !983, size: 64, offset: 960)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1898, file: !223, line: 504, baseType: !227, size: 32, offset: 1024)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1898, file: !223, line: 505, baseType: !227, size: 32, offset: 1056)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1898, file: !223, line: 506, baseType: !152, size: 32, offset: 1088)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1898, file: !223, line: 507, baseType: !227, size: 32, offset: 1120)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1898, file: !223, line: 508, baseType: !227, size: 32, offset: 1152)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1898, file: !223, line: 509, baseType: !227, size: 32, offset: 1184)
!1931 = !{!1932, !1935, !1891}
!1932 = !DIGlobalVariableExpression(var: !1933, expr: !DIExpression())
!1933 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1893, file: !1934, line: 137, type: !152, isLocal: false, isDefinition: true)
!1934 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1935 = !DIGlobalVariableExpression(var: !1936, expr: !DIExpression())
!1936 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1893, file: !1934, line: 138, type: !1937, isLocal: false, isDefinition: true)
!1937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1938, size: 128, elements: !1939)
!1938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!1939 = !{!1940}
!1940 = !DISubrange(count: 16)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1938, size: 64, elements: !1607)
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1944, file: !1947, line: 23, type: !1948, isLocal: false, isDefinition: true)
!1944 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1945, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !1946, splitDebugInlining: false, nameTableKind: None)
!1945 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!1946 = !{!1942}
!1947 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!1949 = !DIGlobalVariableExpression(var: !1950, expr: !DIExpression())
!1950 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1951, file: !1955, line: 37, type: !2208, isLocal: false, isDefinition: true)
!1951 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1952, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1953, retainedTypes: !1962, globals: !2035, splitDebugInlining: false, nameTableKind: None)
!1952 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!1953 = !{!1954, !30, !734}
!1954 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1955, line: 63, baseType: !32, size: 32, elements: !1956)
!1955 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1956 = !{!1957, !1958, !1959, !1960, !1961}
!1957 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1958 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1959 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1960 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1961 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1962 = !{!185, !106, !107, !1963, !193, !152, !1993, !895, !195, !2018}
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1965)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1966, line: 51, size: 64, elements: !1967)
!1966 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1967 = !{!1968, !1988}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1965, file: !1966, line: 52, baseType: !1969, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1966, line: 38, baseType: !1970)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 32)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!107, !1973, !194, !197}
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1975)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1976)
!1976 = !{!1977, !1978, !1979, !1980, !1986, !1987}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1975, file: !247, line: 380, baseType: !118, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1975, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1975, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1975, file: !247, line: 386, baseType: !1981, size: 32, offset: 96)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 32)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1983)
!1983 = !{!1984, !1985}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1982, file: !247, line: 359, baseType: !195, size: 8)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1982, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1975, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1975, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1965, file: !1966, line: 53, baseType: !1989, size: 32, offset: 32)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1966, line: 47, baseType: !1990)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 32)
!1991 = !DISubroutineType(types: !1992)
!1992 = !{!107, !1973, !194, !197, !152}
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !1995)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !1996)
!1996 = !{!1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1995, file: !463, line: 447, baseType: !467, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1995, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1995, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1995, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1995, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1995, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1995, file: !463, line: 453, baseType: !1744, size: 96, offset: 192)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1995, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1995, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1995, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1995, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1995, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1995, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1995, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1995, file: !463, line: 461, baseType: !1753, size: 64, offset: 512)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1995, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1995, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1995, file: !463, line: 464, baseType: !1757, size: 128, offset: 640)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1995, file: !463, line: 465, baseType: !1759, size: 160, offset: 768)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1995, file: !463, line: 466, baseType: !1761, size: 160, offset: 928)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1995, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2020)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2021)
!2021 = !{!2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2020, file: !463, line: 413, baseType: !1707, size: 256)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2020, file: !463, line: 414, baseType: !1709, size: 768, offset: 256)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2020, file: !463, line: 415, baseType: !1707, size: 256, offset: 1024)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2020, file: !463, line: 416, baseType: !1709, size: 768, offset: 1280)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2020, file: !463, line: 417, baseType: !1707, size: 256, offset: 2048)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2020, file: !463, line: 418, baseType: !1709, size: 768, offset: 2304)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2020, file: !463, line: 419, baseType: !1707, size: 256, offset: 3072)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2020, file: !463, line: 420, baseType: !1709, size: 768, offset: 3328)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2020, file: !463, line: 421, baseType: !1707, size: 256, offset: 4096)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2020, file: !463, line: 422, baseType: !1720, size: 1792, offset: 4352)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2020, file: !463, line: 423, baseType: !1724, size: 1920, offset: 6144)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2020, file: !463, line: 424, baseType: !1729, size: 20608, offset: 8064)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2020, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2035 = !{!1949, !2036, !2162, !2168, !2170, !2173, !2178, !2180, !2185}
!2036 = !DIGlobalVariableExpression(var: !2037, expr: !DIExpression())
!2037 = distinct !DIGlobalVariable(name: "_kernel", scope: !1951, file: !1955, line: 40, type: !2038, isLocal: false, isDefinition: true)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !345, line: 158, size: 288, elements: !2039)
!2039 = !{!2040, !2157}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2038, file: !345, line: 159, baseType: !2041, size: 192)
!2041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2042, size: 192, elements: !445)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !345, line: 100, size: 192, elements: !2043)
!2043 = !{!2044, !2045, !2046, !2150, !2151, !2152, !2153}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2042, file: !345, line: 102, baseType: !152, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2042, file: !345, line: 105, baseType: !193, size: 32, offset: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2042, file: !345, line: 108, baseType: !2047, size: 32, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 32)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2049)
!2049 = !{!2050, !2108, !2120, !2121, !2122, !2123, !2124, !2130, !2145}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2048, file: !309, line: 247, baseType: !2051, size: 384)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2052)
!2052 = !{!2053, !2077, !2084, !2085, !2086, !2095, !2096, !2097}
!2053 = !DIDerivedType(tag: DW_TAG_member, scope: !2051, file: !309, line: 60, baseType: !2054, size: 64)
!2054 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2051, file: !309, line: 60, size: 64, elements: !2055)
!2055 = !{!2056, !2071}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2054, file: !309, line: 61, baseType: !2057, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2059)
!2059 = !{!2060, !2066}
!2060 = !DIDerivedType(tag: DW_TAG_member, scope: !2058, file: !319, line: 38, baseType: !2061, size: 32)
!2061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2058, file: !319, line: 38, size: 32, elements: !2062)
!2062 = !{!2063, !2065}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2061, file: !319, line: 39, baseType: !2064, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2061, file: !319, line: 40, baseType: !2064, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, scope: !2058, file: !319, line: 42, baseType: !2067, size: 32, offset: 32)
!2067 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2058, file: !319, line: 42, size: 32, elements: !2068)
!2068 = !{!2069, !2070}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2067, file: !319, line: 43, baseType: !2064, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2067, file: !319, line: 44, baseType: !2064, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2054, file: !309, line: 62, baseType: !2072, size: 64)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2073)
!2073 = !{!2074}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2072, file: !335, line: 50, baseType: !2075, size: 64)
!2075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2076, size: 64, elements: !340)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2051, file: !309, line: 68, baseType: !2078, size: 32, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 32)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2080)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2081)
!2081 = !{!2082}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2080, file: !345, line: 232, baseType: !2083, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2058)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2051, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2051, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2086 = !DIDerivedType(tag: DW_TAG_member, scope: !2051, file: !309, line: 90, baseType: !2087, size: 16, offset: 112)
!2087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2051, file: !309, line: 90, size: 16, elements: !2088)
!2088 = !{!2089, !2094}
!2089 = !DIDerivedType(tag: DW_TAG_member, scope: !2087, file: !309, line: 91, baseType: !2090, size: 16)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2087, file: !309, line: 91, size: 16, elements: !2091)
!2091 = !{!2092, !2093}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2090, file: !309, line: 96, baseType: !359, size: 8)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2090, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2087, file: !309, line: 100, baseType: !197, size: 16)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2051, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2051, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2051, file: !309, line: 131, baseType: !2098, size: 192, offset: 192)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2099)
!2099 = !{!2100, !2101, !2107}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2098, file: !345, line: 245, baseType: !2057, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2098, file: !345, line: 246, baseType: !2102, size: 32, offset: 64)
!2102 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2103)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{null, !2106}
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2098, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2048, file: !309, line: 250, baseType: !2109, size: 288, offset: 384)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2110)
!2110 = !{!2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2109, file: !379, line: 26, baseType: !152, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2109, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2109, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2109, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2109, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2109, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2109, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2109, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2109, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2048, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2048, file: !309, line: 256, baseType: !2079, size: 64, offset: 704)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2048, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2048, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2048, file: !309, line: 300, baseType: !2125, size: 96, offset: 1056)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2126)
!2126 = !{!2127, !2128, !2129}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2125, file: !309, line: 153, baseType: !22, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2125, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2125, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2048, file: !309, line: 325, baseType: !2131, size: 32, offset: 1152)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 32)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2133)
!2133 = !{!2134, !2140, !2141}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2132, file: !406, line: 5074, baseType: !2135, size: 96)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2136)
!2136 = !{!2137, !2138, !2139}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2135, file: !410, line: 57, baseType: !413, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2135, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2135, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2132, file: !406, line: 5075, baseType: !2079, size: 64, offset: 96)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2132, file: !406, line: 5076, baseType: !2142, size: 32, offset: 160)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2143)
!2143 = !{!2144}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2142, file: !420, line: 52, baseType: !22, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2048, file: !309, line: 343, baseType: !2146, size: 64, offset: 1184)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2147)
!2147 = !{!2148, !2149}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2146, file: !379, line: 63, baseType: !152, size: 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2146, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2042, file: !345, line: 111, baseType: !2047, size: 32, offset: 96)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2042, file: !345, line: 124, baseType: !107, size: 32, offset: 128)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2042, file: !345, line: 127, baseType: !195, size: 8, offset: 160)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2042, file: !345, line: 153, baseType: !2154, offset: 168)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2155, line: 33, elements: !2156)
!2155 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2156 = !{}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2038, file: !345, line: 170, baseType: !2158, size: 96, offset: 192)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !2159)
!2159 = !{!2160, !2161}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2158, file: !345, line: 86, baseType: !2047, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2158, file: !345, line: 90, baseType: !2083, size: 64, offset: 32)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1951, file: !1955, line: 43, type: !2164, isLocal: false, isDefinition: true, align: 512)
!2164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2165, size: 8704, elements: !580)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !2166)
!2166 = !{!2167}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2165, file: !577, line: 48, baseType: !120, size: 8)
!2168 = !DIGlobalVariableExpression(var: !2169, expr: !DIExpression())
!2169 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1951, file: !1955, line: 44, type: !2048, isLocal: false, isDefinition: true)
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1951, file: !1955, line: 48, type: !2172, isLocal: false, isDefinition: true)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2048, size: 1280, elements: !445)
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1951, file: !1955, line: 86, type: !2175, isLocal: false, isDefinition: true, align: 512)
!2175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2165, size: 16896, elements: !2176)
!2176 = !{!446, !2177}
!2177 = !DISubrange(count: 2112)
!2178 = !DIGlobalVariableExpression(var: !2179, expr: !DIExpression())
!2179 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1951, file: !1955, line: 217, type: !145, isLocal: false, isDefinition: true)
!2180 = !DIGlobalVariableExpression(var: !2181, expr: !DIExpression())
!2181 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1951, file: !1955, line: 50, type: !2182, isLocal: true, isDefinition: true, align: 512)
!2182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2165, size: 33280, elements: !2183)
!2183 = !{!446, !2184}
!2184 = !DISubrange(count: 4160)
!2185 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression())
!2186 = distinct !DIGlobalVariable(name: "levels", scope: !2187, file: !1955, line: 232, type: !2207, isLocal: true, isDefinition: true)
!2187 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1955, file: !1955, line: 230, type: !2188, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !2190)
!2188 = !DISubroutineType(types: !2189)
!2189 = !{null, !1954}
!2190 = !{!2191, !2192, !2202, !2206}
!2191 = !DILocalVariable(name: "level", arg: 1, scope: !2187, file: !1955, line: 230, type: !1954)
!2192 = !DILocalVariable(name: "entry", scope: !2187, file: !1955, line: 244, type: !2193)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2195)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !2196)
!2196 = !{!2197, !2201}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2195, file: !238, line: 60, baseType: !2198, size: 32)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 32)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!107, !1973}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2195, file: !238, line: 65, baseType: !1973, size: 32, offset: 32)
!2202 = !DILocalVariable(name: "dev", scope: !2203, file: !1955, line: 247, type: !1973)
!2203 = distinct !DILexicalBlock(scope: !2204, file: !1955, line: 246, column: 64)
!2204 = distinct !DILexicalBlock(scope: !2205, file: !1955, line: 246, column: 2)
!2205 = distinct !DILexicalBlock(scope: !2187, file: !1955, line: 246, column: 2)
!2206 = !DILocalVariable(name: "rc", scope: !2203, file: !1955, line: 248, type: !107)
!2207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2193, size: 192, elements: !1354)
!2208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2209)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !2210)
!2210 = !{!2211, !2212}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2209, file: !203, line: 17, baseType: !118, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2209, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!2213 = !DIGlobalVariableExpression(var: !2214, expr: !DIExpression())
!2214 = distinct !DIGlobalVariable(name: "states_str", scope: !2215, file: !2216, line: 276, type: !2340, isLocal: true, isDefinition: true)
!2215 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2216, file: !2216, line: 271, type: !2217, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2331)
!2216 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2217 = !DISubroutineType(types: !2218)
!2218 = !{!118, !2219, !193, !185}
!2219 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2220)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2222)
!2222 = !{!2223, !2281, !2293, !2294, !2295, !2296, !2297, !2303, !2318}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2221, file: !309, line: 247, baseType: !2224, size: 384)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2225)
!2225 = !{!2226, !2250, !2257, !2258, !2259, !2268, !2269, !2270}
!2226 = !DIDerivedType(tag: DW_TAG_member, scope: !2224, file: !309, line: 60, baseType: !2227, size: 64)
!2227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2224, file: !309, line: 60, size: 64, elements: !2228)
!2228 = !{!2229, !2244}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2227, file: !309, line: 61, baseType: !2230, size: 64)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2231)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2232)
!2232 = !{!2233, !2239}
!2233 = !DIDerivedType(tag: DW_TAG_member, scope: !2231, file: !319, line: 38, baseType: !2234, size: 32)
!2234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2231, file: !319, line: 38, size: 32, elements: !2235)
!2235 = !{!2236, !2238}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2234, file: !319, line: 39, baseType: !2237, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2234, file: !319, line: 40, baseType: !2237, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, scope: !2231, file: !319, line: 42, baseType: !2240, size: 32, offset: 32)
!2240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2231, file: !319, line: 42, size: 32, elements: !2241)
!2241 = !{!2242, !2243}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2240, file: !319, line: 43, baseType: !2237, size: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2240, file: !319, line: 44, baseType: !2237, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2227, file: !309, line: 62, baseType: !2245, size: 64)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2246)
!2246 = !{!2247}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2245, file: !335, line: 50, baseType: !2248, size: 64)
!2248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2249, size: 64, elements: !340)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2224, file: !309, line: 68, baseType: !2251, size: 32, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2253)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2254)
!2254 = !{!2255}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2253, file: !345, line: 232, baseType: !2256, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2231)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2224, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2224, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2259 = !DIDerivedType(tag: DW_TAG_member, scope: !2224, file: !309, line: 90, baseType: !2260, size: 16, offset: 112)
!2260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2224, file: !309, line: 90, size: 16, elements: !2261)
!2261 = !{!2262, !2267}
!2262 = !DIDerivedType(tag: DW_TAG_member, scope: !2260, file: !309, line: 91, baseType: !2263, size: 16)
!2263 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2260, file: !309, line: 91, size: 16, elements: !2264)
!2264 = !{!2265, !2266}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2263, file: !309, line: 96, baseType: !359, size: 8)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2263, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2260, file: !309, line: 100, baseType: !197, size: 16)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2224, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2224, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2224, file: !309, line: 131, baseType: !2271, size: 192, offset: 192)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2272)
!2272 = !{!2273, !2274, !2280}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2271, file: !345, line: 245, baseType: !2230, size: 64)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2271, file: !345, line: 246, baseType: !2275, size: 32, offset: 64)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2276)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 32)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{null, !2279}
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2271, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2221, file: !309, line: 250, baseType: !2282, size: 288, offset: 384)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2283)
!2283 = !{!2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2282, file: !379, line: 26, baseType: !152, size: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2282, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2282, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2282, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2282, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2282, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2282, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2282, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2282, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2221, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2221, file: !309, line: 256, baseType: !2252, size: 64, offset: 704)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2221, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2221, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2221, file: !309, line: 300, baseType: !2298, size: 96, offset: 1056)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2299)
!2299 = !{!2300, !2301, !2302}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2298, file: !309, line: 153, baseType: !22, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2298, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2298, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2221, file: !309, line: 325, baseType: !2304, size: 32, offset: 1152)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 32)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2306)
!2306 = !{!2307, !2313, !2314}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2305, file: !406, line: 5074, baseType: !2308, size: 96)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2309)
!2309 = !{!2310, !2311, !2312}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2308, file: !410, line: 57, baseType: !413, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2308, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2308, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2305, file: !406, line: 5075, baseType: !2252, size: 64, offset: 96)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2305, file: !406, line: 5076, baseType: !2315, size: 32, offset: 160)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2316)
!2316 = !{!2317}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2315, file: !420, line: 52, baseType: !22, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2221, file: !309, line: 343, baseType: !2319, size: 64, offset: 1184)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2320)
!2320 = !{!2321, !2322}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2319, file: !379, line: 63, baseType: !152, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2319, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2323 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2324, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2325, globals: !2327, splitDebugInlining: false, nameTableKind: None)
!2324 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2325 = !{!106, !118, !564, !195, !22, !107, !2326, !24, !185, !193, !152, !566}
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 32)
!2327 = !{!2213, !2328}
!2328 = !DIGlobalVariableExpression(var: !2329, expr: !DIExpression())
!2329 = distinct !DIGlobalVariable(name: "states_sz", scope: !2215, file: !2216, line: 279, type: !2330, isLocal: true, isDefinition: true)
!2330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1886, size: 256, elements: !1607)
!2331 = !{!2332, !2333, !2334, !2335, !2336, !2337, !2338}
!2332 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2215, file: !2216, line: 271, type: !2219)
!2333 = !DILocalVariable(name: "buf", arg: 2, scope: !2215, file: !2216, line: 271, type: !193)
!2334 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2215, file: !2216, line: 271, type: !185)
!2335 = !DILocalVariable(name: "off", scope: !2215, file: !2216, line: 273, type: !185)
!2336 = !DILocalVariable(name: "bit", scope: !2215, file: !2216, line: 274, type: !195)
!2337 = !DILocalVariable(name: "thread_state", scope: !2215, file: !2216, line: 275, type: !195)
!2338 = !DILocalVariable(name: "index", scope: !2339, file: !2216, line: 293, type: !195)
!2339 = distinct !DILexicalBlock(scope: !2215, file: !2216, line: 293, column: 2)
!2340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !1607)
!2341 = !DIGlobalVariableExpression(var: !2342, expr: !DIExpression())
!2342 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2343, file: !2454, line: 56, type: !2441, isLocal: false, isDefinition: true)
!2343 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2344, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2345, globals: !2451, splitDebugInlining: false, nameTableKind: None)
!2344 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2345 = !{!2346, !193, !106, !2449, !194, !564, !895, !107, !152, !566, !2450}
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 32)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2348)
!2348 = !{!2349, !2407, !2419, !2420, !2421, !2422, !2423, !2429, !2444}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2347, file: !309, line: 247, baseType: !2350, size: 384)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2351)
!2351 = !{!2352, !2376, !2383, !2384, !2385, !2394, !2395, !2396}
!2352 = !DIDerivedType(tag: DW_TAG_member, scope: !2350, file: !309, line: 60, baseType: !2353, size: 64)
!2353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2350, file: !309, line: 60, size: 64, elements: !2354)
!2354 = !{!2355, !2370}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2353, file: !309, line: 61, baseType: !2356, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2357)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2358)
!2358 = !{!2359, !2365}
!2359 = !DIDerivedType(tag: DW_TAG_member, scope: !2357, file: !319, line: 38, baseType: !2360, size: 32)
!2360 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2357, file: !319, line: 38, size: 32, elements: !2361)
!2361 = !{!2362, !2364}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2360, file: !319, line: 39, baseType: !2363, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2360, file: !319, line: 40, baseType: !2363, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, scope: !2357, file: !319, line: 42, baseType: !2366, size: 32, offset: 32)
!2366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2357, file: !319, line: 42, size: 32, elements: !2367)
!2367 = !{!2368, !2369}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2366, file: !319, line: 43, baseType: !2363, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2366, file: !319, line: 44, baseType: !2363, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2353, file: !309, line: 62, baseType: !2371, size: 64)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2372)
!2372 = !{!2373}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2371, file: !335, line: 50, baseType: !2374, size: 64)
!2374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2375, size: 64, elements: !340)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2350, file: !309, line: 68, baseType: !2377, size: 32, offset: 64)
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2379)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2380)
!2380 = !{!2381}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2379, file: !345, line: 232, baseType: !2382, size: 64)
!2382 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2357)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2350, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2350, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2385 = !DIDerivedType(tag: DW_TAG_member, scope: !2350, file: !309, line: 90, baseType: !2386, size: 16, offset: 112)
!2386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2350, file: !309, line: 90, size: 16, elements: !2387)
!2387 = !{!2388, !2393}
!2388 = !DIDerivedType(tag: DW_TAG_member, scope: !2386, file: !309, line: 91, baseType: !2389, size: 16)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2386, file: !309, line: 91, size: 16, elements: !2390)
!2390 = !{!2391, !2392}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2389, file: !309, line: 96, baseType: !359, size: 8)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2389, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2386, file: !309, line: 100, baseType: !197, size: 16)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2350, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2350, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2350, file: !309, line: 131, baseType: !2397, size: 192, offset: 192)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2398)
!2398 = !{!2399, !2400, !2406}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2397, file: !345, line: 245, baseType: !2356, size: 64)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2397, file: !345, line: 246, baseType: !2401, size: 32, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2402)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 32)
!2403 = !DISubroutineType(types: !2404)
!2404 = !{null, !2405}
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2397, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2347, file: !309, line: 250, baseType: !2408, size: 288, offset: 384)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2409)
!2409 = !{!2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2408, file: !379, line: 26, baseType: !152, size: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2408, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2408, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2408, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2408, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2408, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2408, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2408, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2408, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2347, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2347, file: !309, line: 256, baseType: !2378, size: 64, offset: 704)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2347, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2347, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2347, file: !309, line: 300, baseType: !2424, size: 96, offset: 1056)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2425)
!2425 = !{!2426, !2427, !2428}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2424, file: !309, line: 153, baseType: !22, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2424, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2424, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2347, file: !309, line: 325, baseType: !2430, size: 32, offset: 1152)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 32)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2432)
!2432 = !{!2433, !2439, !2440}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2431, file: !406, line: 5074, baseType: !2434, size: 96)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2435)
!2435 = !{!2436, !2437, !2438}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2434, file: !410, line: 57, baseType: !413, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2434, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2434, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2431, file: !406, line: 5075, baseType: !2378, size: 64, offset: 96)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2431, file: !406, line: 5076, baseType: !2441, size: 32, offset: 160)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2442)
!2442 = !{!2443}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2441, file: !420, line: 52, baseType: !22, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2347, file: !309, line: 343, baseType: !2445, size: 64, offset: 1184)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2446)
!2446 = !{!2447, !2448}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2445, file: !379, line: 63, baseType: !152, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2445, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 32)
!2451 = !{!2341, !2452, !2455, !2457}
!2452 = !DIGlobalVariableExpression(var: !2453, expr: !DIExpression())
!2453 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2343, file: !2454, line: 404, type: !107, isLocal: true, isDefinition: true)
!2454 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2455 = !DIGlobalVariableExpression(var: !2456, expr: !DIExpression())
!2456 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2343, file: !2454, line: 405, type: !107, isLocal: true, isDefinition: true)
!2457 = !DIGlobalVariableExpression(var: !2458, expr: !DIExpression())
!2458 = distinct !DIGlobalVariable(name: "pending_current", scope: !2343, file: !2454, line: 425, type: !2346, isLocal: true, isDefinition: true)
!2459 = !DIGlobalVariableExpression(var: !2460, expr: !DIExpression())
!2460 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2461, file: !2491, line: 19, type: !2497, isLocal: true, isDefinition: true)
!2461 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2462, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2463, globals: !2488, splitDebugInlining: false, nameTableKind: None)
!2462 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2463 = !{!564, !106, !895, !152, !566, !107, !2464, !193, !376}
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 32)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2466)
!2466 = !{!2467, !2482, !2487}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2465, file: !345, line: 245, baseType: !2468, size: 64)
!2468 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2469)
!2469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2470)
!2470 = !{!2471, !2477}
!2471 = !DIDerivedType(tag: DW_TAG_member, scope: !2469, file: !319, line: 38, baseType: !2472, size: 32)
!2472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2469, file: !319, line: 38, size: 32, elements: !2473)
!2473 = !{!2474, !2476}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2472, file: !319, line: 39, baseType: !2475, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2472, file: !319, line: 40, baseType: !2475, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, scope: !2469, file: !319, line: 42, baseType: !2478, size: 32, offset: 32)
!2478 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2469, file: !319, line: 42, size: 32, elements: !2479)
!2479 = !{!2480, !2481}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2478, file: !319, line: 43, baseType: !2475, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2478, file: !319, line: 44, baseType: !2475, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2465, file: !345, line: 246, baseType: !2483, size: 32, offset: 64)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2484)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 32)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{null, !2464}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2465, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2488 = !{!2489, !2459, !2492, !2494}
!2489 = !DIGlobalVariableExpression(var: !2490, expr: !DIExpression())
!2490 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2461, file: !2491, line: 15, type: !566, isLocal: true, isDefinition: true)
!2491 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2492 = !DIGlobalVariableExpression(var: !2493, expr: !DIExpression())
!2493 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2461, file: !2491, line: 25, type: !107, isLocal: true, isDefinition: true)
!2494 = !DIGlobalVariableExpression(var: !2495, expr: !DIExpression())
!2495 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2461, file: !2491, line: 17, type: !2496, isLocal: true, isDefinition: true)
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2469)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2498)
!2498 = !{!2499}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2497, file: !420, line: 52, baseType: !22, size: 32)
!2500 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2501, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2501 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2502 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2503, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2503 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2505, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2506, retainedTypes: !2526, splitDebugInlining: false, nameTableKind: None)
!2505 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2506 = !{!2507, !2515}
!2507 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2508, line: 69, baseType: !32, size: 32, elements: !2509)
!2508 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2509 = !{!2510, !2511, !2512, !2513, !2514}
!2510 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2511 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2512 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2513 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2514 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2515 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2508, line: 56, baseType: !32, size: 32, elements: !2516)
!2516 = !{!2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525}
!2517 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2518 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2519 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2520 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2521 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2522 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2523 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2524 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2525 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2526 = !{!107, !2507, !2515, !2527, !360, !264, !2529, !2530, !196, !198, !118, !185, !106, !22, !32, !187, !2532, !2533, !189, !188, !191, !190, !2528, !2534, !2535, !2536, !2537}
!2527 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2508, line: 31, baseType: !2528)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !191)
!2529 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !186, line: 329, baseType: !32)
!2530 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2508, line: 32, baseType: !2531)
!2531 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !567)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !186, line: 145, baseType: !107)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 32)
!2538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2540 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2541, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2541 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2542 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2543, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2544, splitDebugInlining: false, nameTableKind: None)
!2543 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2544 = !{!118, !196, !107, !32}
!2545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2546, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2547, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2546 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2547 = !{!2548, !30}
!2548 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2549, line: 27, baseType: !32, size: 32, elements: !2550)
!2549 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2550 = !{!2551, !2552, !2553, !2554, !2555}
!2551 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2552 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2553 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2554 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2555 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2557, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2558, retainedTypes: !2559, splitDebugInlining: false, nameTableKind: None)
!2557 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2558 = !{!734, !2548, !30}
!2559 = !{!921, !2560, !106, !107, !895, !152, !195, !2577}
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2562)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2563)
!2563 = !{!2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2562, file: !463, line: 413, baseType: !1707, size: 256)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2562, file: !463, line: 414, baseType: !1709, size: 768, offset: 256)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2562, file: !463, line: 415, baseType: !1707, size: 256, offset: 1024)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2562, file: !463, line: 416, baseType: !1709, size: 768, offset: 1280)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2562, file: !463, line: 417, baseType: !1707, size: 256, offset: 2048)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2562, file: !463, line: 418, baseType: !1709, size: 768, offset: 2304)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2562, file: !463, line: 419, baseType: !1707, size: 256, offset: 3072)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2562, file: !463, line: 420, baseType: !1709, size: 768, offset: 3328)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2562, file: !463, line: 421, baseType: !1707, size: 256, offset: 4096)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2562, file: !463, line: 422, baseType: !1720, size: 1792, offset: 4352)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2562, file: !463, line: 423, baseType: !1724, size: 1920, offset: 6144)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2562, file: !463, line: 424, baseType: !1729, size: 20608, offset: 8064)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2562, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2579)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2580)
!2580 = !{!2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2579, file: !463, line: 447, baseType: !467, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2579, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2579, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2579, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2579, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2579, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2579, file: !463, line: 453, baseType: !1744, size: 96, offset: 192)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2579, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2579, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2579, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2579, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2579, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2579, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2579, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2579, file: !463, line: 461, baseType: !1753, size: 64, offset: 512)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2579, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2579, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2579, file: !463, line: 464, baseType: !1757, size: 128, offset: 640)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2579, file: !463, line: 465, baseType: !1759, size: 160, offset: 768)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2579, file: !463, line: 466, baseType: !1761, size: 160, offset: 928)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2579, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2602 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2603, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2603 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2604 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2605, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2606, splitDebugInlining: false, nameTableKind: None)
!2605 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2606 = !{!106, !107, !22, !2607}
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2609)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2610)
!2610 = !{!2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2609, file: !463, line: 447, baseType: !467, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2609, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2609, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2609, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2609, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2609, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2609, file: !463, line: 453, baseType: !1744, size: 96, offset: 192)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2609, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2609, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2609, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2609, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2609, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2609, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2609, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2609, file: !463, line: 461, baseType: !1753, size: 64, offset: 512)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2609, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2609, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2609, file: !463, line: 464, baseType: !1757, size: 128, offset: 640)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2609, file: !463, line: 465, baseType: !1759, size: 160, offset: 768)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2609, file: !463, line: 466, baseType: !1761, size: 160, offset: 928)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2609, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2632 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2633, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2634, splitDebugInlining: false, nameTableKind: None)
!2633 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2634 = !{!2635, !106, !107}
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2637)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2638)
!2638 = !{!2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2637, file: !463, line: 447, baseType: !467, size: 32)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2637, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2637, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2637, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2637, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2637, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2637, file: !463, line: 453, baseType: !1744, size: 96, offset: 192)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2637, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2637, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2637, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2637, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2637, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2637, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2637, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2637, file: !463, line: 461, baseType: !1753, size: 64, offset: 512)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2637, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2637, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2637, file: !463, line: 464, baseType: !1757, size: 128, offset: 640)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2637, file: !463, line: 465, baseType: !1759, size: 160, offset: 768)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2637, file: !463, line: 466, baseType: !1761, size: 160, offset: 928)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2637, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2660 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2661, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2662, splitDebugInlining: false, nameTableKind: None)
!2661 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2662 = !{!2663, !152, !106, !107}
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 32)
!2664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2665, line: 98, size: 256, elements: !2666)
!2665 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2666 = !{!2667, !2672, !2677, !2682, !2687, !2692, !2697, !2702}
!2667 = !DIDerivedType(tag: DW_TAG_member, scope: !2664, file: !2665, line: 99, baseType: !2668, size: 32)
!2668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2664, file: !2665, line: 99, size: 32, elements: !2669)
!2669 = !{!2670, !2671}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2668, file: !2665, line: 99, baseType: !152, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2668, file: !2665, line: 99, baseType: !152, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, scope: !2664, file: !2665, line: 100, baseType: !2673, size: 32, offset: 32)
!2673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2664, file: !2665, line: 100, size: 32, elements: !2674)
!2674 = !{!2675, !2676}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2673, file: !2665, line: 100, baseType: !152, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2673, file: !2665, line: 100, baseType: !152, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, scope: !2664, file: !2665, line: 101, baseType: !2678, size: 32, offset: 64)
!2678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2664, file: !2665, line: 101, size: 32, elements: !2679)
!2679 = !{!2680, !2681}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2678, file: !2665, line: 101, baseType: !152, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2678, file: !2665, line: 101, baseType: !152, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, scope: !2664, file: !2665, line: 102, baseType: !2683, size: 32, offset: 96)
!2683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2664, file: !2665, line: 102, size: 32, elements: !2684)
!2684 = !{!2685, !2686}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2683, file: !2665, line: 102, baseType: !152, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2683, file: !2665, line: 102, baseType: !152, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, scope: !2664, file: !2665, line: 103, baseType: !2688, size: 32, offset: 128)
!2688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2664, file: !2665, line: 103, size: 32, elements: !2689)
!2689 = !{!2690, !2691}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2688, file: !2665, line: 103, baseType: !152, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2688, file: !2665, line: 103, baseType: !152, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, scope: !2664, file: !2665, line: 104, baseType: !2693, size: 32, offset: 160)
!2693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2664, file: !2665, line: 104, size: 32, elements: !2694)
!2694 = !{!2695, !2696}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2693, file: !2665, line: 104, baseType: !152, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2693, file: !2665, line: 104, baseType: !152, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, scope: !2664, file: !2665, line: 105, baseType: !2698, size: 32, offset: 192)
!2698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2664, file: !2665, line: 105, size: 32, elements: !2699)
!2699 = !{!2700, !2701}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2698, file: !2665, line: 105, baseType: !152, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2698, file: !2665, line: 105, baseType: !152, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2664, file: !2665, line: 106, baseType: !152, size: 32, offset: 224)
!2703 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2704, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2547, retainedTypes: !2705, splitDebugInlining: false, nameTableKind: None)
!2704 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2705 = !{!2706, !106, !107, !2731, !2774, !152}
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2708)
!2708 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2709)
!2709 = !{!2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2708, file: !463, line: 447, baseType: !467, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2708, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2708, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2708, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2708, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2708, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2708, file: !463, line: 453, baseType: !1744, size: 96, offset: 192)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2708, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2708, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2708, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2708, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2708, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2708, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2708, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2708, file: !463, line: 461, baseType: !1753, size: 64, offset: 512)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2708, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2708, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2708, file: !463, line: 464, baseType: !1757, size: 128, offset: 640)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2708, file: !463, line: 465, baseType: !1759, size: 160, offset: 768)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2708, file: !463, line: 466, baseType: !1761, size: 160, offset: 928)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2708, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2665, line: 141, baseType: !2733)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2665, line: 97, size: 256, elements: !2734)
!2734 = !{!2735}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2733, file: !2665, line: 107, baseType: !2736, size: 256)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2665, line: 98, size: 256, elements: !2737)
!2737 = !{!2738, !2743, !2748, !2753, !2758, !2763, !2768, !2773}
!2738 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !2665, line: 99, baseType: !2739, size: 32)
!2739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !2665, line: 99, size: 32, elements: !2740)
!2740 = !{!2741, !2742}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2739, file: !2665, line: 99, baseType: !152, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2739, file: !2665, line: 99, baseType: !152, size: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !2665, line: 100, baseType: !2744, size: 32, offset: 32)
!2744 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !2665, line: 100, size: 32, elements: !2745)
!2745 = !{!2746, !2747}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2744, file: !2665, line: 100, baseType: !152, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2744, file: !2665, line: 100, baseType: !152, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !2665, line: 101, baseType: !2749, size: 32, offset: 64)
!2749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !2665, line: 101, size: 32, elements: !2750)
!2750 = !{!2751, !2752}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2749, file: !2665, line: 101, baseType: !152, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2749, file: !2665, line: 101, baseType: !152, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !2665, line: 102, baseType: !2754, size: 32, offset: 96)
!2754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !2665, line: 102, size: 32, elements: !2755)
!2755 = !{!2756, !2757}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2754, file: !2665, line: 102, baseType: !152, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2754, file: !2665, line: 102, baseType: !152, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !2665, line: 103, baseType: !2759, size: 32, offset: 128)
!2759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !2665, line: 103, size: 32, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2759, file: !2665, line: 103, baseType: !152, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2759, file: !2665, line: 103, baseType: !152, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !2665, line: 104, baseType: !2764, size: 32, offset: 160)
!2764 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !2665, line: 104, size: 32, elements: !2765)
!2765 = !{!2766, !2767}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2764, file: !2665, line: 104, baseType: !152, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2764, file: !2665, line: 104, baseType: !152, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !2665, line: 105, baseType: !2769, size: 32, offset: 192)
!2769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !2665, line: 105, size: 32, elements: !2770)
!2770 = !{!2771, !2772}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2769, file: !2665, line: 105, baseType: !152, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2769, file: !2665, line: 105, baseType: !152, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2736, file: !2665, line: 106, baseType: !152, size: 32, offset: 224)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!2775 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2776, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1692, retainedTypes: !2777, splitDebugInlining: false, nameTableKind: None)
!2776 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2777 = !{!921, !895, !195, !152, !2778, !2795}
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2780)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2781)
!2781 = !{!2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2780, file: !463, line: 413, baseType: !1707, size: 256)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2780, file: !463, line: 414, baseType: !1709, size: 768, offset: 256)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2780, file: !463, line: 415, baseType: !1707, size: 256, offset: 1024)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2780, file: !463, line: 416, baseType: !1709, size: 768, offset: 1280)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2780, file: !463, line: 417, baseType: !1707, size: 256, offset: 2048)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2780, file: !463, line: 418, baseType: !1709, size: 768, offset: 2304)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2780, file: !463, line: 419, baseType: !1707, size: 256, offset: 3072)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2780, file: !463, line: 420, baseType: !1709, size: 768, offset: 3328)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2780, file: !463, line: 421, baseType: !1707, size: 256, offset: 4096)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2780, file: !463, line: 422, baseType: !1720, size: 1792, offset: 4352)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2780, file: !463, line: 423, baseType: !1724, size: 1920, offset: 6144)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2780, file: !463, line: 424, baseType: !1729, size: 20608, offset: 8064)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2780, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2797)
!2797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2798)
!2798 = !{!2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2797, file: !463, line: 447, baseType: !467, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2797, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2797, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2797, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2797, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2797, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2797, file: !463, line: 453, baseType: !1744, size: 96, offset: 192)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2797, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2797, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2797, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2797, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2797, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2797, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2797, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2797, file: !463, line: 461, baseType: !1753, size: 64, offset: 512)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2797, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2797, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2797, file: !463, line: 464, baseType: !1757, size: 128, offset: 640)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2797, file: !463, line: 465, baseType: !1759, size: 160, offset: 768)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2797, file: !463, line: 466, baseType: !1761, size: 160, offset: 928)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2797, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2820 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2821, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2822, splitDebugInlining: false, nameTableKind: None)
!2821 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2822 = !{!2823, !106, !107}
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2825)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2826)
!2826 = !{!2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2825, file: !463, line: 447, baseType: !467, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2825, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2825, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2825, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2825, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2825, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2825, file: !463, line: 453, baseType: !1744, size: 96, offset: 192)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2825, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2825, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2825, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2825, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2825, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2825, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2825, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2825, file: !463, line: 461, baseType: !1753, size: 64, offset: 512)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2825, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2825, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2825, file: !463, line: 464, baseType: !1757, size: 128, offset: 640)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2825, file: !463, line: 465, baseType: !1759, size: 160, offset: 768)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2825, file: !463, line: 466, baseType: !1761, size: 160, offset: 928)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2825, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2848 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2849, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2850, splitDebugInlining: false, nameTableKind: None)
!2849 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2850 = !{!120, !193, !185, !1119, !2851, !196, !106}
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 32)
!2852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!2853 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2854, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2855, splitDebugInlining: false, nameTableKind: None)
!2854 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2855 = !{!2856}
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 510, baseType: !2858)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 477, size: 1216, elements: !2859)
!2859 = !{!2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2858, file: !223, line: 479, baseType: !227, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2858, file: !223, line: 480, baseType: !227, size: 32, offset: 32)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2858, file: !223, line: 481, baseType: !227, size: 32, offset: 64)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2858, file: !223, line: 482, baseType: !227, size: 32, offset: 96)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2858, file: !223, line: 483, baseType: !227, size: 32, offset: 128)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2858, file: !223, line: 484, baseType: !227, size: 32, offset: 160)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2858, file: !223, line: 485, baseType: !983, size: 64, offset: 192)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2858, file: !223, line: 486, baseType: !227, size: 32, offset: 256)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2858, file: !223, line: 487, baseType: !227, size: 32, offset: 288)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2858, file: !223, line: 488, baseType: !983, size: 64, offset: 320)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2858, file: !223, line: 489, baseType: !227, size: 32, offset: 384)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2858, file: !223, line: 490, baseType: !227, size: 32, offset: 416)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2858, file: !223, line: 491, baseType: !983, size: 64, offset: 448)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2858, file: !223, line: 492, baseType: !227, size: 32, offset: 512)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2858, file: !223, line: 493, baseType: !227, size: 32, offset: 544)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2858, file: !223, line: 494, baseType: !983, size: 64, offset: 576)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2858, file: !223, line: 495, baseType: !227, size: 32, offset: 640)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2858, file: !223, line: 496, baseType: !227, size: 32, offset: 672)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2858, file: !223, line: 497, baseType: !983, size: 64, offset: 704)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2858, file: !223, line: 498, baseType: !227, size: 32, offset: 768)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2858, file: !223, line: 499, baseType: !227, size: 32, offset: 800)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2858, file: !223, line: 500, baseType: !983, size: 64, offset: 832)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2858, file: !223, line: 501, baseType: !227, size: 32, offset: 896)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2858, file: !223, line: 502, baseType: !227, size: 32, offset: 928)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2858, file: !223, line: 503, baseType: !983, size: 64, offset: 960)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2858, file: !223, line: 504, baseType: !227, size: 32, offset: 1024)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2858, file: !223, line: 505, baseType: !227, size: 32, offset: 1056)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2858, file: !223, line: 506, baseType: !152, size: 32, offset: 1088)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2858, file: !223, line: 507, baseType: !227, size: 32, offset: 1120)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2858, file: !223, line: 508, baseType: !227, size: 32, offset: 1152)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2858, file: !223, line: 509, baseType: !227, size: 32, offset: 1184)
!2891 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2892, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2892 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2893 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2894, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2895, retainedTypes: !2911, splitDebugInlining: false, nameTableKind: None)
!2894 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2895 = !{!2896, !2903, !2907}
!2896 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2897, line: 38, baseType: !32, size: 32, elements: !2898)
!2897 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2898 = !{!2899, !2900, !2901, !2902}
!2899 = !DIEnumerator(name: "HAL_OK", value: 0)
!2900 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2901 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2902 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2903 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !960, line: 184, baseType: !32, size: 32, elements: !2904)
!2904 = !{!2905, !2906}
!2905 = !DIEnumerator(name: "RESET", value: 0)
!2906 = !DIEnumerator(name: "SET", value: 1)
!2907 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !960, line: 190, baseType: !32, size: 32, elements: !2908)
!2908 = !{!2909, !2910}
!2909 = !DIEnumerator(name: "DISABLE", value: 0)
!2910 = !DIEnumerator(name: "ENABLE", value: 1)
!2911 = !{!106, !2912, !195, !152, !1601, !2947, !2953, !2964, !197, !2965, !566}
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 510, baseType: !2914)
!2914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 477, size: 1216, elements: !2915)
!2915 = !{!2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2914, file: !223, line: 479, baseType: !227, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2914, file: !223, line: 480, baseType: !227, size: 32, offset: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2914, file: !223, line: 481, baseType: !227, size: 32, offset: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2914, file: !223, line: 482, baseType: !227, size: 32, offset: 96)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2914, file: !223, line: 483, baseType: !227, size: 32, offset: 128)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2914, file: !223, line: 484, baseType: !227, size: 32, offset: 160)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2914, file: !223, line: 485, baseType: !983, size: 64, offset: 192)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2914, file: !223, line: 486, baseType: !227, size: 32, offset: 256)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2914, file: !223, line: 487, baseType: !227, size: 32, offset: 288)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2914, file: !223, line: 488, baseType: !983, size: 64, offset: 320)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2914, file: !223, line: 489, baseType: !227, size: 32, offset: 384)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2914, file: !223, line: 490, baseType: !227, size: 32, offset: 416)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2914, file: !223, line: 491, baseType: !983, size: 64, offset: 448)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2914, file: !223, line: 492, baseType: !227, size: 32, offset: 512)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2914, file: !223, line: 493, baseType: !227, size: 32, offset: 544)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2914, file: !223, line: 494, baseType: !983, size: 64, offset: 576)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2914, file: !223, line: 495, baseType: !227, size: 32, offset: 640)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2914, file: !223, line: 496, baseType: !227, size: 32, offset: 672)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2914, file: !223, line: 497, baseType: !983, size: 64, offset: 704)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2914, file: !223, line: 498, baseType: !227, size: 32, offset: 768)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2914, file: !223, line: 499, baseType: !227, size: 32, offset: 800)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2914, file: !223, line: 500, baseType: !983, size: 64, offset: 832)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2914, file: !223, line: 501, baseType: !227, size: 32, offset: 896)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2914, file: !223, line: 502, baseType: !227, size: 32, offset: 928)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2914, file: !223, line: 503, baseType: !983, size: 64, offset: 960)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2914, file: !223, line: 504, baseType: !227, size: 32, offset: 1024)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2914, file: !223, line: 505, baseType: !227, size: 32, offset: 1056)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2914, file: !223, line: 506, baseType: !152, size: 32, offset: 1088)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2914, file: !223, line: 507, baseType: !227, size: 32, offset: 1120)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2914, file: !223, line: 508, baseType: !227, size: 32, offset: 1152)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2914, file: !223, line: 509, baseType: !227, size: 32, offset: 1184)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 471, baseType: !2949)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 467, size: 64, elements: !2950)
!2950 = !{!2951, !2952}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2949, file: !223, line: 469, baseType: !227, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2949, file: !223, line: 470, baseType: !227, size: 32, offset: 32)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 32)
!2954 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 379, baseType: !2955)
!2955 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 224, elements: !2956)
!2956 = !{!2957, !2958, !2959, !2960, !2961, !2962, !2963}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2955, file: !223, line: 372, baseType: !227, size: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2955, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2955, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2955, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2955, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2955, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2955, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 32)
!2966 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 396, baseType: !2967)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 385, size: 320, elements: !2968)
!2968 = !{!2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2967, file: !223, line: 387, baseType: !227, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2967, file: !223, line: 388, baseType: !227, size: 32, offset: 32)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2967, file: !223, line: 389, baseType: !227, size: 32, offset: 64)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2967, file: !223, line: 390, baseType: !227, size: 32, offset: 96)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2967, file: !223, line: 391, baseType: !227, size: 32, offset: 128)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2967, file: !223, line: 392, baseType: !227, size: 32, offset: 160)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2967, file: !223, line: 393, baseType: !227, size: 32, offset: 192)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2967, file: !223, line: 394, baseType: !227, size: 32, offset: 224)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2967, file: !223, line: 395, baseType: !1273, size: 64, offset: 256)
!2978 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2979, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2980, retainedTypes: !2981, splitDebugInlining: false, nameTableKind: None)
!2979 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!2980 = !{!959}
!2981 = !{!2982, !152, !2990, !2996, !3007}
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !2984)
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !2985)
!2985 = !{!2986, !2987, !2988, !2989}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2984, file: !463, line: 766, baseType: !227, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2984, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2984, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2984, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 471, baseType: !2992)
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 467, size: 64, elements: !2993)
!2993 = !{!2994, !2995}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2992, file: !223, line: 469, baseType: !227, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2992, file: !223, line: 470, baseType: !227, size: 32, offset: 32)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 32)
!2997 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 379, baseType: !2998)
!2998 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 224, elements: !2999)
!2999 = !{!3000, !3001, !3002, !3003, !3004, !3005, !3006}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2998, file: !223, line: 372, baseType: !227, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2998, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2998, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2998, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2998, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2998, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2998, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!3007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 32)
!3008 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 510, baseType: !3009)
!3009 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 477, size: 1216, elements: !3010)
!3010 = !{!3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041}
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3009, file: !223, line: 479, baseType: !227, size: 32)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3009, file: !223, line: 480, baseType: !227, size: 32, offset: 32)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3009, file: !223, line: 481, baseType: !227, size: 32, offset: 64)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3009, file: !223, line: 482, baseType: !227, size: 32, offset: 96)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3009, file: !223, line: 483, baseType: !227, size: 32, offset: 128)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3009, file: !223, line: 484, baseType: !227, size: 32, offset: 160)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3009, file: !223, line: 485, baseType: !983, size: 64, offset: 192)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3009, file: !223, line: 486, baseType: !227, size: 32, offset: 256)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3009, file: !223, line: 487, baseType: !227, size: 32, offset: 288)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3009, file: !223, line: 488, baseType: !983, size: 64, offset: 320)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3009, file: !223, line: 489, baseType: !227, size: 32, offset: 384)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3009, file: !223, line: 490, baseType: !227, size: 32, offset: 416)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3009, file: !223, line: 491, baseType: !983, size: 64, offset: 448)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3009, file: !223, line: 492, baseType: !227, size: 32, offset: 512)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3009, file: !223, line: 493, baseType: !227, size: 32, offset: 544)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3009, file: !223, line: 494, baseType: !983, size: 64, offset: 576)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3009, file: !223, line: 495, baseType: !227, size: 32, offset: 640)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3009, file: !223, line: 496, baseType: !227, size: 32, offset: 672)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3009, file: !223, line: 497, baseType: !983, size: 64, offset: 704)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3009, file: !223, line: 498, baseType: !227, size: 32, offset: 768)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3009, file: !223, line: 499, baseType: !227, size: 32, offset: 800)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3009, file: !223, line: 500, baseType: !983, size: 64, offset: 832)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3009, file: !223, line: 501, baseType: !227, size: 32, offset: 896)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3009, file: !223, line: 502, baseType: !227, size: 32, offset: 928)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3009, file: !223, line: 503, baseType: !983, size: 64, offset: 960)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3009, file: !223, line: 504, baseType: !227, size: 32, offset: 1024)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3009, file: !223, line: 505, baseType: !227, size: 32, offset: 1056)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3009, file: !223, line: 506, baseType: !152, size: 32, offset: 1088)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3009, file: !223, line: 507, baseType: !227, size: 32, offset: 1120)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3009, file: !223, line: 508, baseType: !227, size: 32, offset: 1152)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3009, file: !223, line: 509, baseType: !227, size: 32, offset: 1184)
!3042 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3043, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3044, splitDebugInlining: false, nameTableKind: None)
!3043 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!3044 = !{!106, !185}
!3045 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3046, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3047, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3046 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!3047 = !{!3048, !3055, !2548, !30}
!3048 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3049, line: 14, baseType: !32, size: 32, elements: !3050)
!3049 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3050 = !{!3051, !3052, !3053, !3054}
!3051 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3052 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3053 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3054 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3055 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3049, line: 42, baseType: !32, size: 32, elements: !3056)
!3056 = !{!3057, !3058, !3059, !3060, !3061, !3062}
!3057 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3058 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3059 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3060 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3061 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3062 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3063 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3064, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3064 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!3065 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3066, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3067, splitDebugInlining: false, nameTableKind: None)
!3066 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!3067 = !{!22, !106, !107}
!3068 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3069, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3069 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!3070 = !{!"Ubuntu clang version 14.0.6"}
!3071 = !{i32 7, !"Dwarf Version", i32 4}
!3072 = !{i32 2, !"Debug Info Version", i32 3}
!3073 = !{i32 1, !"wchar_size", i32 4}
!3074 = !{i32 1, !"min_enum_size", i32 4}
!3075 = !{i32 1, !"branch-target-enforcement", i32 0}
!3076 = !{i32 1, !"sign-return-address", i32 0}
!3077 = !{i32 1, !"sign-return-address-all", i32 0}
!3078 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3079 = !{i32 7, !"frame-pointer", i32 2}
!3080 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3081, file: !3081, line: 26, type: !3082, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2500, retainedNodes: !2156)
!3081 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3082 = !DISubroutineType(types: !3083)
!3083 = !{null}
!3084 = !DILocation(line: 28, column: 1, scope: !3080)
!3085 = !{i64 2155037836, i64 2155037856, i64 2155037919}
!3086 = !DILocation(line: 29, column: 1, scope: !3080)
!3087 = !{i64 2155038251, i64 2155038271, i64 2155038334}
!3088 = !DILocation(line: 30, column: 1, scope: !3080)
!3089 = !{i64 2155038670, i64 2155038690, i64 2155038753}
!3090 = !DILocation(line: 31, column: 1, scope: !3080)
!3091 = !{i64 2155039089, i64 2155039109, i64 2155039172}
!3092 = !DILocation(line: 33, column: 1, scope: !3080)
!3093 = !{i64 2155039381, i64 2155039401, i64 2155039464}
!3094 = !DILocation(line: 35, column: 1, scope: !3080)
!3095 = !{i64 2155039706, i64 2155039726, i64 2155039789}
!3096 = !DILocation(line: 50, column: 1, scope: !3080)
!3097 = !{i64 2155040133, i64 2155040153, i64 2155040216}
!3098 = !DILocation(line: 54, column: 1, scope: !3080)
!3099 = !{i64 2155040572, i64 2155040592, i64 2155040655}
!3100 = !DILocation(line: 61, column: 1, scope: !3080)
!3101 = !{i64 2155040889, i64 2155040909, i64 2155040972}
!3102 = !DILocation(line: 63, column: 1, scope: !3080)
!3103 = !{i64 2155041269, i64 2155041289, i64 2155041352}
!3104 = !DILocation(line: 64, column: 1, scope: !3080)
!3105 = !{i64 2155041791, i64 2155041811, i64 2155041874}
!3106 = !DILocation(line: 65, column: 1, scope: !3080)
!3107 = !{i64 2155046350, i64 2155046370, i64 2155046433}
!3108 = !DILocation(line: 66, column: 1, scope: !3080)
!3109 = !{i64 2155046832, i64 2155046852, i64 2155046915}
!3110 = !DILocation(line: 67, column: 1, scope: !3080)
!3111 = !{i64 2155047339, i64 2155047359, i64 2155047422}
!3112 = !DILocation(line: 68, column: 1, scope: !3080)
!3113 = !{i64 2155047827, i64 2155047847, i64 2155047910}
!3114 = !DILocation(line: 70, column: 1, scope: !3080)
!3115 = !{i64 2155048295, i64 2155048315, i64 2155048378}
!3116 = !DILocation(line: 71, column: 1, scope: !3080)
!3117 = !{i64 2155048737, i64 2155048757, i64 2155048820}
!3118 = !DILocation(line: 72, column: 1, scope: !3080)
!3119 = !{i64 2155049195, i64 2155049215, i64 2155049278}
!3120 = !DILocation(line: 79, column: 1, scope: !3080)
!3121 = !{i64 2155049649, i64 2155049669, i64 2155049732}
!3122 = !DILocation(line: 80, column: 1, scope: !3080)
!3123 = !{i64 2155050160, i64 2155050180, i64 2155050243}
!3124 = !DILocation(line: 82, column: 1, scope: !3080)
!3125 = !{i64 2155050651, i64 2155050671, i64 2155050734}
!3126 = !DILocation(line: 97, column: 1, scope: !3080)
!3127 = !{i64 2155050988, i64 2155051008, i64 2155051071}
!3128 = !DILocation(line: 99, column: 1, scope: !3080)
!3129 = !{i64 2155051206, i64 2155051226, i64 2155051289}
!3130 = !DILocation(line: 102, column: 1, scope: !3080)
!3131 = !{i64 2155051463, i64 2155051483, i64 2155051546}
!3132 = !DILocation(line: 105, column: 1, scope: !3080)
!3133 = !{i64 2155051703, i64 2155051723, i64 2155051786}
!3134 = !DILocation(line: 115, column: 1, scope: !3080)
!3135 = !{i64 2155052042, i64 2155052062, i64 2155052125}
!3136 = !DILocation(line: 118, column: 1, scope: !3080)
!3137 = !{i64 2155052386, i64 2155052406, i64 2155052469}
!3138 = !DILocation(line: 32, column: 1, scope: !3139)
!3139 = !DILexicalBlockFile(scope: !3080, file: !3140, discriminator: 0)
!3140 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3141 = !{i64 2155052742, i64 2155052762, i64 2155052825}
!3142 = !DILocation(line: 33, column: 1, scope: !3139)
!3143 = !{i64 2155053254, i64 2155053274, i64 2155053337}
!3144 = !DILocation(line: 53, column: 1, scope: !3139)
!3145 = !{i64 2155053762, i64 2155053782, i64 2155053845}
!3146 = !DILocation(line: 54, column: 1, scope: !3139)
!3147 = !{i64 2155054180, i64 2155054200, i64 2155054263}
!3148 = !DILocation(line: 55, column: 1, scope: !3139)
!3149 = !{i64 2155054598, i64 2155054618, i64 2155054681}
!3150 = !DILocation(line: 56, column: 1, scope: !3139)
!3151 = !{i64 2155055016, i64 2155055036, i64 2155055099}
!3152 = !DILocation(line: 57, column: 1, scope: !3139)
!3153 = !{i64 2155055434, i64 2155055454, i64 2155055517}
!3154 = !DILocation(line: 58, column: 1, scope: !3139)
!3155 = !{i64 2155059913, i64 2155059933, i64 2155059996}
!3156 = !DILocation(line: 59, column: 1, scope: !3139)
!3157 = !{i64 2155060331, i64 2155060351, i64 2155060414}
!3158 = !DILocation(line: 60, column: 1, scope: !3139)
!3159 = !{i64 2155060755, i64 2155060775, i64 2155060838}
!3160 = !DILocation(line: 61, column: 1, scope: !3139)
!3161 = !{i64 2155061072, i64 2155061092, i64 2155061155}
!3162 = !DILocation(line: 70, column: 1, scope: !3139)
!3163 = !{i64 2155061301, i64 2155061321, i64 2155061384}
!3164 = !DILocation(line: 72, column: 1, scope: !3139)
!3165 = !{i64 2155061633, i64 2155061653, i64 2155061716}
!3166 = !DILocation(line: 73, column: 1, scope: !3139)
!3167 = !{i64 2155062083, i64 2155062103, i64 2155062166}
!3168 = !DILocation(line: 74, column: 1, scope: !3139)
!3169 = !{i64 2155062533, i64 2155062553, i64 2155062616}
!3170 = !DILocation(line: 75, column: 1, scope: !3139)
!3171 = !{i64 2155062983, i64 2155063003, i64 2155063066}
!3172 = !DILocation(line: 76, column: 1, scope: !3139)
!3173 = !{i64 2155063433, i64 2155063453, i64 2155063516}
!3174 = !DILocation(line: 77, column: 1, scope: !3139)
!3175 = !{i64 2155063883, i64 2155063903, i64 2155063966}
!3176 = !DILocation(line: 78, column: 1, scope: !3139)
!3177 = !{i64 2155064333, i64 2155064353, i64 2155064416}
!3178 = !DILocation(line: 79, column: 1, scope: !3139)
!3179 = !{i64 2155064783, i64 2155064803, i64 2155064866}
!3180 = !DILocation(line: 80, column: 1, scope: !3139)
!3181 = !{i64 2155065236, i64 2155065256, i64 2155065319}
!3182 = !DILocation(line: 84, column: 1, scope: !3139)
!3183 = !{i64 2155065568, i64 2155065588, i64 2155065651}
!3184 = !DILocation(line: 91, column: 1, scope: !3139)
!3185 = !{i64 2155065965, i64 2155065985, i64 2155066048}
!3186 = !DILocation(line: 93, column: 1, scope: !3139)
!3187 = !{i64 2155066332, i64 2155066352, i64 2155066415}
!3188 = !DILocation(line: 106, column: 1, scope: !3139)
!3189 = !{i64 2155066602, i64 2155066622, i64 2155066685}
!3190 = !DILocation(line: 11, column: 1, scope: !3191)
!3191 = !DILexicalBlockFile(scope: !3080, file: !3192, discriminator: 0)
!3192 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3193 = distinct !DISubprogram(name: "_test_pytest_test_pytest_wrapper", scope: !111, file: !111, line: 10, type: !131, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3194)
!3194 = !{!3195}
!3195 = !DILocalVariable(name: "data", arg: 1, scope: !3193, file: !111, line: 10, type: !106)
!3196 = !DILocation(line: 0, scope: !3193)
!3197 = !DILocation(line: 10, column: 1, scope: !3193)
!3198 = distinct !DISubprogram(name: "test_pytest_test_pytest", scope: !111, file: !111, line: 10, type: !3082, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2156)
!3199 = !DILocation(line: 12, column: 2, scope: !3198)
!3200 = !DILocation(line: 13, column: 1, scope: !3198)
!3201 = distinct !DISubprogram(name: "cbvprintf_package", scope: !200, file: !200, line: 233, type: !3202, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3211)
!3202 = !DISubroutineType(types: !3203)
!3203 = !{!107, !106, !185, !152, !118, !3204}
!3204 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3205, line: 99, baseType: !3206)
!3205 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3206 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3205, line: 40, baseType: !3207)
!3207 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !200, baseType: !3208)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3209)
!3209 = !{!3210}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3208, file: !200, line: 18, baseType: !106, size: 32)
!3211 = !{!3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3247, !3256, !3259, !3260, !3263, !3266, !3269, !3272, !3278}
!3212 = !DILocalVariable(name: "packaged", arg: 1, scope: !3201, file: !200, line: 233, type: !106)
!3213 = !DILocalVariable(name: "len", arg: 2, scope: !3201, file: !200, line: 233, type: !185)
!3214 = !DILocalVariable(name: "flags", arg: 3, scope: !3201, file: !200, line: 233, type: !152)
!3215 = !DILocalVariable(name: "fmt", arg: 4, scope: !3201, file: !200, line: 234, type: !118)
!3216 = !DILocalVariable(name: "ap", arg: 5, scope: !3201, file: !200, line: 234, type: !3204)
!3217 = !DILocalVariable(name: "buf0", scope: !3201, file: !200, line: 247, type: !194)
!3218 = !DILocalVariable(name: "buf", scope: !3201, file: !200, line: 248, type: !194)
!3219 = !DILocalVariable(name: "size", scope: !3201, file: !200, line: 249, type: !32)
!3220 = !DILocalVariable(name: "align", scope: !3201, file: !200, line: 250, type: !32)
!3221 = !DILocalVariable(name: "str_ptr_pos", scope: !3201, file: !200, line: 251, type: !3222)
!3222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !1939)
!3223 = !DILocalVariable(name: "str_ptr_arg", scope: !3201, file: !200, line: 252, type: !3222)
!3224 = !DILocalVariable(name: "s_idx", scope: !3201, file: !200, line: 253, type: !32)
!3225 = !DILocalVariable(name: "s_rw_cnt", scope: !3201, file: !200, line: 254, type: !32)
!3226 = !DILocalVariable(name: "s_ro_cnt", scope: !3201, file: !200, line: 255, type: !32)
!3227 = !DILocalVariable(name: "arg_idx", scope: !3201, file: !200, line: 256, type: !107)
!3228 = !DILocalVariable(name: "i", scope: !3201, file: !200, line: 257, type: !32)
!3229 = !DILocalVariable(name: "s", scope: !3201, file: !200, line: 258, type: !118)
!3230 = !DILocalVariable(name: "parsing", scope: !3201, file: !200, line: 259, type: !145)
!3231 = !DILocalVariable(name: "rws_pos_en", scope: !3201, file: !200, line: 263, type: !145)
!3232 = !DILocalVariable(name: "fros_cnt", scope: !3201, file: !200, line: 268, type: !107)
!3233 = !DILocalVariable(name: "is_str_arg", scope: !3201, file: !200, line: 269, type: !145)
!3234 = !DILocalVariable(name: "pkg_hdr", scope: !3201, file: !200, line: 270, type: !3235)
!3235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3236, size: 32)
!3236 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3237, line: 78, size: 32, elements: !3238)
!3237 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3238 = !{!3239, !3246}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3236, file: !3237, line: 80, baseType: !3240, size: 32)
!3240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3237, line: 45, size: 32, elements: !3241)
!3241 = !{!3242, !3243, !3244, !3245}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3240, file: !3237, line: 47, baseType: !195, size: 8)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3240, file: !3237, line: 50, baseType: !195, size: 8, offset: 8)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3240, file: !3237, line: 53, baseType: !195, size: 8, offset: 16)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3240, file: !3237, line: 56, baseType: !195, size: 8, offset: 24)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3236, file: !3237, line: 82, baseType: !106, size: 32)
!3247 = !DILocalVariable(name: "v", scope: !3248, file: !200, line: 567, type: !3252)
!3248 = distinct !DILexicalBlock(scope: !3249, file: !200, line: 562, column: 14)
!3249 = distinct !DILexicalBlock(scope: !3250, file: !200, line: 481, column: 18)
!3250 = distinct !DILexicalBlock(scope: !3251, file: !200, line: 466, column: 3)
!3251 = distinct !DILexicalBlock(scope: !3201, file: !200, line: 343, column: 15)
!3252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3201, file: !200, line: 567, size: 64, elements: !3253)
!3253 = !{!3254, !3255}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3252, file: !200, line: 567, baseType: !183, size: 64)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3252, file: !200, line: 567, baseType: !181, size: 64)
!3256 = !DILocalVariable(name: "is_ro", scope: !3257, file: !200, line: 620, type: !145)
!3257 = distinct !DILexicalBlock(scope: !3258, file: !200, line: 613, column: 19)
!3258 = distinct !DILexicalBlock(scope: !3251, file: !200, line: 613, column: 7)
!3259 = !DILocalVariable(name: "do_ro", scope: !3257, file: !200, line: 621, type: !145)
!3260 = !DILocalVariable(name: "s_ptr_idx", scope: !3261, file: !200, line: 626, type: !152)
!3261 = distinct !DILexicalBlock(scope: !3262, file: !200, line: 625, column: 11)
!3262 = distinct !DILexicalBlock(scope: !3257, file: !200, line: 623, column: 8)
!3263 = !DILocalVariable(name: "v", scope: !3264, file: !200, line: 684, type: !107)
!3264 = distinct !DILexicalBlock(scope: !3265, file: !200, line: 683, column: 35)
!3265 = distinct !DILexicalBlock(scope: !3258, file: !200, line: 683, column: 14)
!3266 = !DILocalVariable(name: "v", scope: !3267, file: !200, line: 691, type: !189)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !200, line: 690, column: 36)
!3268 = distinct !DILexicalBlock(scope: !3265, file: !200, line: 690, column: 14)
!3269 = !DILocalVariable(name: "v", scope: !3270, file: !200, line: 698, type: !191)
!3270 = distinct !DILexicalBlock(scope: !3271, file: !200, line: 697, column: 41)
!3271 = distinct !DILexicalBlock(scope: !3268, file: !200, line: 697, column: 14)
!3272 = !DILocalVariable(name: "pos", scope: !3273, file: !200, line: 762, type: !195)
!3273 = distinct !DILexicalBlock(scope: !3274, file: !200, line: 757, column: 31)
!3274 = distinct !DILexicalBlock(scope: !3275, file: !200, line: 757, column: 3)
!3275 = distinct !DILexicalBlock(scope: !3276, file: !200, line: 757, column: 3)
!3276 = distinct !DILexicalBlock(scope: !3277, file: !200, line: 756, column: 16)
!3277 = distinct !DILexicalBlock(scope: !3201, file: !200, line: 756, column: 6)
!3278 = !DILabel(scope: !3257, name: "process_string", file: !200, line: 615)
!3279 = !DILocation(line: 0, scope: !3201)
!3280 = !DILocation(line: 251, column: 2, scope: !3201)
!3281 = !DILocation(line: 251, column: 10, scope: !3201)
!3282 = !DILocation(line: 252, column: 2, scope: !3201)
!3283 = !DILocation(line: 252, column: 10, scope: !3201)
!3284 = !DILocation(line: 263, column: 29, scope: !3201)
!3285 = !DILocation(line: 263, column: 21, scope: !3201)
!3286 = !DILocation(line: 268, column: 21, scope: !3201)
!3287 = !DILocation(line: 268, column: 19, scope: !3201)
!3288 = !DILocation(line: 273, column: 6, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3201, file: !200, line: 273, column: 6)
!3290 = !DILocation(line: 273, column: 26, scope: !3289)
!3291 = !DILocation(line: 273, column: 6, scope: !3201)
!3292 = !DILocation(line: 297, column: 6, scope: !3201)
!3293 = !DILocation(line: 305, column: 11, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3201, file: !200, line: 305, column: 6)
!3295 = !DILocation(line: 305, column: 6, scope: !3201)
!3296 = !DILocation(line: 327, column: 19, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3201, file: !200, line: 327, column: 6)
!3298 = !DILocation(line: 327, column: 22, scope: !3297)
!3299 = !DILocation(line: 327, column: 33, scope: !3297)
!3300 = !DILocation(line: 327, column: 50, scope: !3297)
!3301 = !DILocation(line: 327, column: 6, scope: !3201)
!3302 = !DILocation(line: 338, column: 9, scope: !3201)
!3303 = !DILocation(line: 341, column: 2, scope: !3201)
!3304 = !DILocation(line: 472, column: 8, scope: !3250)
!3305 = !DILocation(line: 473, column: 14, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3307, file: !200, line: 473, column: 9)
!3307 = distinct !DILexicalBlock(scope: !3308, file: !200, line: 472, column: 18)
!3308 = distinct !DILexicalBlock(scope: !3250, file: !200, line: 472, column: 8)
!3309 = !DILocation(line: 473, column: 9, scope: !3307)
!3310 = !DILocation(line: 479, column: 5, scope: !3307)
!3311 = !DILocation(line: 468, column: 9, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3250, file: !200, line: 468, column: 8)
!3313 = !DILocation(line: 468, column: 8, scope: !3312)
!3314 = !DILocation(line: 468, column: 15, scope: !3312)
!3315 = !DILocation(line: 468, column: 8, scope: !3250)
!3316 = distinct !{!3316, !3317, !3318}
!3317 = !DILocation(line: 343, column: 2, scope: !3201)
!3318 = !DILocation(line: 712, column: 2, scope: !3201)
!3319 = !DILocation(line: 481, column: 4, scope: !3250)
!3320 = !DILocation(line: 484, column: 12, scope: !3249)
!3321 = !DILocation(line: 485, column: 5, scope: !3249)
!3322 = !DILocation(line: 505, column: 5, scope: !3249)
!3323 = !DILocation(line: 518, column: 5, scope: !3249)
!3324 = !DILocation(line: 523, column: 5, scope: !3249)
!3325 = !DILocation(line: 532, column: 9, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3249, file: !200, line: 532, column: 9)
!3327 = !DILocation(line: 532, column: 17, scope: !3326)
!3328 = !DILocation(line: 532, column: 9, scope: !3249)
!3329 = !DILocation(line: 533, column: 10, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3331, file: !200, line: 533, column: 10)
!3331 = distinct !DILexicalBlock(scope: !3326, file: !200, line: 532, column: 25)
!3332 = !DILocation(line: 533, column: 18, scope: !3330)
!3333 = !DILocation(line: 0, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3248, file: !200, line: 569, column: 9)
!3335 = !DILocation(line: 0, scope: !3248)
!3336 = !DILocation(line: 579, column: 20, scope: !3248)
!3337 = !DILocation(line: 579, column: 11, scope: !3248)
!3338 = !DILocation(line: 580, column: 9, scope: !3248)
!3339 = !DILocation(line: 582, column: 21, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3341, file: !200, line: 582, column: 10)
!3341 = distinct !DILexicalBlock(scope: !3342, file: !200, line: 580, column: 23)
!3342 = distinct !DILexicalBlock(scope: !3248, file: !200, line: 580, column: 9)
!3343 = !DILocation(line: 582, column: 28, scope: !3340)
!3344 = !DILocation(line: 582, column: 10, scope: !3341)
!3345 = !DILocation(line: 0, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3347, file: !200, line: 587, column: 17)
!3347 = distinct !DILexicalBlock(scope: !3341, file: !200, line: 585, column: 10)
!3348 = !DILocation(line: 593, column: 9, scope: !3248)
!3349 = !DILocation(line: 600, column: 5, scope: !3249)
!3350 = !DILocation(line: 605, column: 18, scope: !3251)
!3351 = !DILocation(line: 605, column: 9, scope: !3251)
!3352 = !DILocation(line: 608, column: 20, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3251, file: !200, line: 608, column: 7)
!3354 = !DILocation(line: 608, column: 23, scope: !3353)
!3355 = !DILocation(line: 608, column: 34, scope: !3353)
!3356 = !DILocation(line: 608, column: 41, scope: !3353)
!3357 = !DILocation(line: 608, column: 7, scope: !3251)
!3358 = !DILocation(line: 613, column: 7, scope: !3251)
!3359 = !DILocation(line: 614, column: 8, scope: !3257)
!3360 = !DILocation(line: 614, column: 4, scope: !3257)
!3361 = !DILocation(line: 256, column: 6, scope: !3201)
!3362 = !DILocation(line: 254, column: 15, scope: !3201)
!3363 = !DILocation(line: 320, column: 7, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3294, file: !200, line: 305, column: 20)
!3365 = !DILocation(line: 615, column: 1, scope: !3257)
!3366 = !DILocation(line: 616, column: 8, scope: !3257)
!3367 = !DILocation(line: 617, column: 5, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3369, file: !200, line: 616, column: 22)
!3369 = distinct !DILexicalBlock(scope: !3257, file: !200, line: 616, column: 8)
!3370 = !DILocation(line: 617, column: 25, scope: !3368)
!3371 = !DILocation(line: 618, column: 4, scope: !3368)
!3372 = !DILocation(line: 620, column: 26, scope: !3257)
!3373 = !DILocation(line: 620, column: 29, scope: !3257)
!3374 = !DILocation(line: 620, column: 17, scope: !3257)
!3375 = !DILocation(line: 620, column: 43, scope: !3257)
!3376 = !DILocation(line: 0, scope: !3257)
!3377 = !DILocation(line: 623, column: 14, scope: !3262)
!3378 = !DILocation(line: 626, column: 26, scope: !3261)
!3379 = !DILocation(line: 626, column: 37, scope: !3261)
!3380 = !DILocation(line: 0, scope: !3261)
!3381 = !DILocation(line: 634, column: 15, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3261, file: !200, line: 634, column: 9)
!3383 = !DILocation(line: 635, column: 6, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3385, file: !200, line: 635, column: 6)
!3385 = distinct !DILexicalBlock(scope: !3386, file: !200, line: 635, column: 6)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !200, line: 635, column: 6)
!3387 = distinct !DILexicalBlock(scope: !3382, file: !200, line: 634, column: 44)
!3388 = !DILocation(line: 639, column: 15, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3261, file: !200, line: 639, column: 9)
!3390 = !DILocation(line: 639, column: 9, scope: !3261)
!3391 = !DILocation(line: 640, column: 6, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3393, file: !200, line: 640, column: 6)
!3393 = distinct !DILexicalBlock(scope: !3394, file: !200, line: 640, column: 6)
!3394 = distinct !DILexicalBlock(scope: !3395, file: !200, line: 640, column: 6)
!3395 = distinct !DILexicalBlock(scope: !3389, file: !200, line: 639, column: 43)
!3396 = !DILocation(line: 644, column: 9, scope: !3261)
!3397 = !DILocation(line: 649, column: 27, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3399, file: !200, line: 644, column: 23)
!3399 = distinct !DILexicalBlock(scope: !3261, file: !200, line: 644, column: 9)
!3400 = !DILocation(line: 649, column: 6, scope: !3398)
!3401 = !DILocation(line: 649, column: 25, scope: !3398)
!3402 = !DILocation(line: 650, column: 27, scope: !3398)
!3403 = !DILocation(line: 650, column: 6, scope: !3398)
!3404 = !DILocation(line: 650, column: 25, scope: !3398)
!3405 = !DILocation(line: 651, column: 10, scope: !3398)
!3406 = !DILocation(line: 653, column: 26, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3408, file: !200, line: 651, column: 17)
!3408 = distinct !DILexicalBlock(scope: !3398, file: !200, line: 651, column: 10)
!3409 = !DILocation(line: 654, column: 15, scope: !3407)
!3410 = !DILocation(line: 655, column: 6, scope: !3407)
!3411 = !DILocation(line: 656, column: 15, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3408, file: !200, line: 655, column: 13)
!3413 = !DILocation(line: 658, column: 16, scope: !3399)
!3414 = !DILocation(line: 663, column: 10, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3416, file: !200, line: 658, column: 23)
!3416 = distinct !DILexicalBlock(scope: !3399, file: !200, line: 658, column: 16)
!3417 = !DILocation(line: 664, column: 5, scope: !3415)
!3418 = !DILocation(line: 664, column: 16, scope: !3416)
!3419 = !DILocation(line: 669, column: 10, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !200, line: 664, column: 28)
!3421 = distinct !DILexicalBlock(scope: !3416, file: !200, line: 664, column: 16)
!3422 = !DILocation(line: 670, column: 5, scope: !3420)
!3423 = !DILocation(line: 675, column: 13, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3421, file: !200, line: 670, column: 12)
!3425 = !DILocation(line: 675, column: 27, scope: !3424)
!3426 = !DILocation(line: 675, column: 10, scope: !3424)
!3427 = !DILocation(line: 678, column: 10, scope: !3261)
!3428 = !DILocation(line: 680, column: 8, scope: !3257)
!3429 = !DILocation(line: 683, column: 14, scope: !3258)
!3430 = !DILocation(line: 684, column: 12, scope: !3264)
!3431 = !DILocation(line: 0, scope: !3264)
!3432 = !DILocation(line: 686, column: 8, scope: !3264)
!3433 = !DILocation(line: 687, column: 5, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3435, file: !200, line: 686, column: 22)
!3435 = distinct !DILexicalBlock(scope: !3264, file: !200, line: 686, column: 8)
!3436 = !DILocation(line: 687, column: 17, scope: !3434)
!3437 = !DILocation(line: 688, column: 4, scope: !3434)
!3438 = !DILocation(line: 698, column: 18, scope: !3270)
!3439 = !DILocation(line: 0, scope: !3270)
!3440 = !DILocation(line: 700, column: 8, scope: !3270)
!3441 = !DILocation(line: 704, column: 6, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3443, file: !200, line: 703, column: 12)
!3443 = distinct !DILexicalBlock(scope: !3444, file: !200, line: 701, column: 9)
!3444 = distinct !DILexicalBlock(scope: !3445, file: !200, line: 700, column: 22)
!3445 = distinct !DILexicalBlock(scope: !3270, file: !200, line: 700, column: 8)
!3446 = !DILocation(line: 704, column: 24, scope: !3442)
!3447 = !DILocation(line: 706, column: 4, scope: !3444)
!3448 = !DILocation(line: 709, column: 4, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3450, file: !200, line: 709, column: 4)
!3450 = distinct !DILexicalBlock(scope: !3451, file: !200, line: 709, column: 4)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !200, line: 709, column: 4)
!3452 = distinct !DILexicalBlock(scope: !3271, file: !200, line: 708, column: 10)
!3453 = !DILocation(line: 0, scope: !3265)
!3454 = !DILocation(line: 0, scope: !3251)
!3455 = !DILocation(line: 720, column: 6, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3201, file: !200, line: 720, column: 6)
!3457 = !DILocation(line: 720, column: 17, scope: !3456)
!3458 = !DILocation(line: 720, column: 31, scope: !3456)
!3459 = !DILocation(line: 720, column: 6, scope: !3201)
!3460 = !DILocation(line: 721, column: 3, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3462, file: !200, line: 721, column: 3)
!3462 = distinct !DILexicalBlock(scope: !3463, file: !200, line: 721, column: 3)
!3463 = distinct !DILexicalBlock(scope: !3464, file: !200, line: 721, column: 3)
!3464 = distinct !DILexicalBlock(scope: !3456, file: !200, line: 720, column: 38)
!3465 = !DILocation(line: 729, column: 6, scope: !3201)
!3466 = !DILocation(line: 730, column: 21, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !200, line: 729, column: 20)
!3468 = distinct !DILexicalBlock(scope: !3201, file: !200, line: 729, column: 6)
!3469 = !DILocation(line: 730, column: 27, scope: !3467)
!3470 = !DILocation(line: 730, column: 3, scope: !3467)
!3471 = !DILocation(line: 737, column: 22, scope: !3201)
!3472 = !DILocation(line: 737, column: 20, scope: !3201)
!3473 = !DILocation(line: 0, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3201, file: !200, line: 739, column: 6)
!3475 = !DILocation(line: 745, column: 17, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3474, file: !200, line: 743, column: 9)
!3477 = !DILocation(line: 745, column: 25, scope: !3476)
!3478 = !DILocation(line: 746, column: 17, scope: !3476)
!3479 = !DILocation(line: 746, column: 28, scope: !3476)
!3480 = !DILocation(line: 749, column: 29, scope: !3201)
!3481 = !DILocation(line: 749, column: 16, scope: !3201)
!3482 = !DILocation(line: 749, column: 27, scope: !3201)
!3483 = !DILocation(line: 756, column: 6, scope: !3277)
!3484 = !DILocation(line: 756, column: 6, scope: !3201)
!3485 = !DILocation(line: 757, column: 3, scope: !3275)
!3486 = !DILocation(line: 758, column: 10, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3273, file: !200, line: 758, column: 8)
!3488 = !DILocation(line: 758, column: 25, scope: !3487)
!3489 = !DILocation(line: 758, column: 8, scope: !3273)
!3490 = !DILocation(line: 0, scope: !3273)
!3491 = !DILocation(line: 765, column: 8, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3273, file: !200, line: 765, column: 8)
!3493 = !DILocation(line: 765, column: 19, scope: !3492)
!3494 = !DILocation(line: 765, column: 23, scope: !3492)
!3495 = !DILocation(line: 765, column: 8, scope: !3273)
!3496 = !DILocation(line: 762, column: 33, scope: !3273)
!3497 = !DILocation(line: 769, column: 8, scope: !3273)
!3498 = !DILocation(line: 769, column: 11, scope: !3273)
!3499 = !DILocation(line: 757, column: 27, scope: !3274)
!3500 = !DILocation(line: 757, column: 17, scope: !3274)
!3501 = distinct !{!3501, !3485, !3502}
!3502 = !DILocation(line: 770, column: 3, scope: !3275)
!3503 = !DILocation(line: 774, column: 16, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3505, file: !200, line: 774, column: 2)
!3505 = distinct !DILexicalBlock(scope: !3201, file: !200, line: 774, column: 2)
!3506 = !DILocation(line: 774, column: 2, scope: !3505)
!3507 = !DILocation(line: 776, column: 16, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !200, line: 776, column: 7)
!3509 = distinct !DILexicalBlock(scope: !3504, file: !200, line: 774, column: 30)
!3510 = !DILocation(line: 776, column: 19, scope: !3508)
!3511 = !DILocation(line: 776, column: 34, scope: !3508)
!3512 = !DILocation(line: 776, column: 7, scope: !3509)
!3513 = !DILocation(line: 780, column: 7, scope: !3509)
!3514 = !DILocation(line: 782, column: 13, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3516, file: !200, line: 780, column: 19)
!3516 = distinct !DILexicalBlock(scope: !3509, file: !200, line: 780, column: 7)
!3517 = !DILocation(line: 782, column: 8, scope: !3515)
!3518 = !DILocation(line: 782, column: 11, scope: !3515)
!3519 = !DILocation(line: 783, column: 3, scope: !3515)
!3520 = !DILocation(line: 785, column: 26, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3516, file: !200, line: 783, column: 10)
!3522 = !DILocation(line: 785, column: 41, scope: !3521)
!3523 = !DILocation(line: 785, column: 24, scope: !3521)
!3524 = !DILocation(line: 785, column: 8, scope: !3521)
!3525 = !DILocation(line: 787, column: 52, scope: !3521)
!3526 = !DILocation(line: 789, column: 11, scope: !3521)
!3527 = !DILocation(line: 789, column: 21, scope: !3521)
!3528 = !DILocation(line: 0, scope: !3516)
!3529 = !DILocation(line: 793, column: 7, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3509, file: !200, line: 793, column: 7)
!3531 = !DILocation(line: 793, column: 18, scope: !3530)
!3532 = !DILocation(line: 793, column: 22, scope: !3530)
!3533 = !DILocation(line: 793, column: 29, scope: !3530)
!3534 = !DILocation(line: 793, column: 7, scope: !3509)
!3535 = !DILocation(line: 797, column: 12, scope: !3509)
!3536 = !DILocation(line: 797, column: 7, scope: !3509)
!3537 = !DILocation(line: 797, column: 10, scope: !3509)
!3538 = !DILocation(line: 799, column: 3, scope: !3509)
!3539 = !DILocation(line: 800, column: 7, scope: !3509)
!3540 = !DILocation(line: 801, column: 2, scope: !3509)
!3541 = !DILocation(line: 338, column: 4, scope: !3201)
!3542 = !DILocation(line: 774, column: 26, scope: !3504)
!3543 = distinct !{!3543, !3506, !3544}
!3544 = !DILocation(line: 801, column: 2, scope: !3505)
!3545 = !DILocation(line: 808, column: 9, scope: !3201)
!3546 = !DILocation(line: 808, column: 2, scope: !3201)
!3547 = !DILocation(line: 813, column: 1, scope: !3201)
!3548 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !200, file: !200, line: 33, type: !3549, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3551)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{!145, !118}
!3551 = !{!3552}
!3552 = !DILocalVariable(name: "addr", arg: 1, scope: !3548, file: !200, line: 33, type: !118)
!3553 = !DILocation(line: 0, scope: !3548)
!3554 = !DILocation(line: 41, column: 9, scope: !3548)
!3555 = !DILocation(line: 41, column: 2, scope: !3548)
!3556 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3557, file: !3557, line: 24, type: !143, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3558)
!3557 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3558 = !{!3559}
!3559 = !DILocalVariable(name: "addr", arg: 1, scope: !3556, file: !3557, line: 24, type: !13)
!3560 = !DILocation(line: 0, scope: !3556)
!3561 = !DILocation(line: 49, column: 30, scope: !3556)
!3562 = !DILocation(line: 49, column: 57, scope: !3556)
!3563 = !DILocation(line: 49, column: 2, scope: !3556)
!3564 = distinct !DISubprogram(name: "cbprintf_package", scope: !200, file: !200, line: 815, type: !3565, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3567)
!3565 = !DISubroutineType(types: !3566)
!3566 = !{!107, !106, !185, !152, !118, null}
!3567 = !{!3568, !3569, !3570, !3571, !3572, !3573}
!3568 = !DILocalVariable(name: "packaged", arg: 1, scope: !3564, file: !200, line: 815, type: !106)
!3569 = !DILocalVariable(name: "len", arg: 2, scope: !3564, file: !200, line: 815, type: !185)
!3570 = !DILocalVariable(name: "flags", arg: 3, scope: !3564, file: !200, line: 815, type: !152)
!3571 = !DILocalVariable(name: "format", arg: 4, scope: !3564, file: !200, line: 816, type: !118)
!3572 = !DILocalVariable(name: "ap", scope: !3564, file: !200, line: 818, type: !3204)
!3573 = !DILocalVariable(name: "ret", scope: !3564, file: !200, line: 819, type: !107)
!3574 = !DILocation(line: 0, scope: !3564)
!3575 = !DILocation(line: 818, column: 2, scope: !3564)
!3576 = !DILocation(line: 818, column: 10, scope: !3564)
!3577 = !DILocation(line: 821, column: 2, scope: !3564)
!3578 = !DILocation(line: 822, column: 8, scope: !3564)
!3579 = !DILocation(line: 823, column: 2, scope: !3564)
!3580 = !DILocation(line: 825, column: 1, scope: !3564)
!3581 = !DILocation(line: 824, column: 2, scope: !3564)
!3582 = distinct !DISubprogram(name: "cbpprintf_external", scope: !200, file: !200, line: 827, type: !3583, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3593)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{!107, !3585, !3589, !106, !106}
!3585 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3237, line: 297, baseType: !3586)
!3586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3587, size: 32)
!3587 = !DISubroutineType(types: !3588)
!3588 = !{!107, null}
!3589 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3237, line: 328, baseType: !3590)
!3590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3591, size: 32)
!3591 = !DISubroutineType(types: !3592)
!3592 = !{!107, !3585, !106, !118, !3204}
!3593 = !{!3594, !3595, !3596, !3597, !3598, !3599, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3612}
!3594 = !DILocalVariable(name: "out", arg: 1, scope: !3582, file: !200, line: 827, type: !3585)
!3595 = !DILocalVariable(name: "formatter", arg: 2, scope: !3582, file: !200, line: 828, type: !3589)
!3596 = !DILocalVariable(name: "ctx", arg: 3, scope: !3582, file: !200, line: 829, type: !106)
!3597 = !DILocalVariable(name: "packaged", arg: 4, scope: !3582, file: !200, line: 829, type: !106)
!3598 = !DILocalVariable(name: "buf", scope: !3582, file: !200, line: 831, type: !194)
!3599 = !DILocalVariable(name: "hdr", scope: !3582, file: !200, line: 832, type: !3600)
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3601, size: 32)
!3601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3237, line: 96, size: 64, elements: !3602)
!3602 = !{!3603, !3604}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3601, file: !3237, line: 98, baseType: !3236, size: 32)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3601, file: !3237, line: 101, baseType: !193, size: 32, offset: 32)
!3605 = !DILocalVariable(name: "s", scope: !3582, file: !200, line: 833, type: !193)
!3606 = !DILocalVariable(name: "ps", scope: !3582, file: !200, line: 833, type: !192)
!3607 = !DILocalVariable(name: "i", scope: !3582, file: !200, line: 834, type: !32)
!3608 = !DILocalVariable(name: "args_size", scope: !3582, file: !200, line: 834, type: !32)
!3609 = !DILocalVariable(name: "s_nbr", scope: !3582, file: !200, line: 834, type: !32)
!3610 = !DILocalVariable(name: "ros_nbr", scope: !3582, file: !200, line: 834, type: !32)
!3611 = !DILocalVariable(name: "rws_nbr", scope: !3582, file: !200, line: 834, type: !32)
!3612 = !DILocalVariable(name: "s_idx", scope: !3582, file: !200, line: 834, type: !32)
!3613 = !DILocation(line: 0, scope: !3582)
!3614 = !DILocation(line: 836, column: 10, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3582, file: !200, line: 836, column: 6)
!3616 = !DILocation(line: 836, column: 6, scope: !3582)
!3617 = !DILocation(line: 842, column: 28, scope: !3582)
!3618 = !DILocation(line: 842, column: 14, scope: !3582)
!3619 = !DILocation(line: 852, column: 16, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !200, line: 852, column: 2)
!3621 = distinct !DILexicalBlock(scope: !3582, file: !200, line: 852, column: 2)
!3622 = !DILocation(line: 852, column: 2, scope: !3621)
!3623 = !DILocation(line: 841, column: 28, scope: !3582)
!3624 = !DILocation(line: 841, column: 14, scope: !3582)
!3625 = !DILocation(line: 841, column: 32, scope: !3582)
!3626 = !DILocation(line: 847, column: 19, scope: !3582)
!3627 = !DILocation(line: 843, column: 28, scope: !3582)
!3628 = !DILocation(line: 843, column: 14, scope: !3582)
!3629 = !DILocation(line: 847, column: 31, scope: !3582)
!3630 = !DILocation(line: 844, column: 28, scope: !3582)
!3631 = !DILocation(line: 844, column: 14, scope: !3582)
!3632 = !DILocation(line: 847, column: 45, scope: !3582)
!3633 = !DILocation(line: 847, column: 41, scope: !3582)
!3634 = !DILocation(line: 854, column: 24, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3620, file: !200, line: 852, column: 30)
!3636 = !DILocation(line: 854, column: 11, scope: !3635)
!3637 = !DILocation(line: 855, column: 30, scope: !3635)
!3638 = !DILocation(line: 855, column: 22, scope: !3635)
!3639 = !DILocation(line: 855, column: 8, scope: !3635)
!3640 = !DILocation(line: 857, column: 7, scope: !3635)
!3641 = !DILocation(line: 859, column: 8, scope: !3635)
!3642 = !DILocation(line: 859, column: 18, scope: !3635)
!3643 = !DILocation(line: 859, column: 5, scope: !3635)
!3644 = !DILocation(line: 852, column: 26, scope: !3620)
!3645 = distinct !{!3645, !3622, !3646}
!3646 = !DILocation(line: 860, column: 2, scope: !3621)
!3647 = !DILocation(line: 863, column: 6, scope: !3582)
!3648 = !DILocation(line: 866, column: 56, scope: !3582)
!3649 = !DILocation(line: 866, column: 9, scope: !3582)
!3650 = !DILocation(line: 866, column: 2, scope: !3582)
!3651 = !DILocation(line: 867, column: 1, scope: !3582)
!3652 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !200, file: !200, line: 179, type: !3653, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3655)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{!107, !3585, !3589, !106, !118, !106}
!3655 = !{!3656, !3657, !3658, !3659, !3660, !3661}
!3656 = !DILocalVariable(name: "out", arg: 1, scope: !3652, file: !200, line: 179, type: !3585)
!3657 = !DILocalVariable(name: "formatter", arg: 2, scope: !3652, file: !200, line: 180, type: !3589)
!3658 = !DILocalVariable(name: "ctx", arg: 3, scope: !3652, file: !200, line: 181, type: !106)
!3659 = !DILocalVariable(name: "fmt", arg: 4, scope: !3652, file: !200, line: 182, type: !118)
!3660 = !DILocalVariable(name: "buf", arg: 5, scope: !3652, file: !200, line: 182, type: !106)
!3661 = !DILocalVariable(name: "u", scope: !3652, file: !200, line: 187, type: !3662)
!3662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3652, file: !200, line: 184, size: 32, elements: !3663)
!3663 = !{!3664, !3665}
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3662, file: !200, line: 185, baseType: !3204, size: 32)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3662, file: !200, line: 186, baseType: !106, size: 32)
!3666 = !DILocation(line: 0, scope: !3652)
!3667 = !DILocation(line: 191, column: 9, scope: !3652)
!3668 = !DILocation(line: 191, column: 2, scope: !3652)
!3669 = distinct !DISubprogram(name: "is_ptr", scope: !200, file: !200, line: 881, type: !3670, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3672)
!3670 = !DISubroutineType(types: !3671)
!3671 = !{!145, !118, !107}
!3672 = !{!3673, !3674, !3675, !3676, !3677}
!3673 = !DILocalVariable(name: "fmt", arg: 1, scope: !3669, file: !200, line: 881, type: !118)
!3674 = !DILocalVariable(name: "n", arg: 2, scope: !3669, file: !200, line: 881, type: !107)
!3675 = !DILocalVariable(name: "c", scope: !3669, file: !200, line: 883, type: !120)
!3676 = !DILocalVariable(name: "mod", scope: !3669, file: !200, line: 884, type: !145)
!3677 = !DILocalVariable(name: "cnt", scope: !3669, file: !200, line: 885, type: !107)
!3678 = !DILocation(line: 0, scope: !3669)
!3679 = !DILocation(line: 887, column: 14, scope: !3669)
!3680 = !DILocation(line: 887, column: 22, scope: !3669)
!3681 = !DILocation(line: 887, column: 2, scope: !3669)
!3682 = !DILocation(line: 887, column: 18, scope: !3669)
!3683 = !DILocation(line: 888, column: 7, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3669, file: !200, line: 887, column: 31)
!3685 = !DILocation(line: 889, column: 12, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3687, file: !200, line: 889, column: 8)
!3687 = distinct !DILexicalBlock(scope: !3688, file: !200, line: 888, column: 12)
!3688 = distinct !DILexicalBlock(scope: !3684, file: !200, line: 888, column: 7)
!3689 = !DILocation(line: 889, column: 8, scope: !3687)
!3690 = !DILocation(line: 890, column: 11, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !200, line: 890, column: 9)
!3692 = distinct !DILexicalBlock(scope: !3686, file: !200, line: 889, column: 18)
!3693 = !DILocation(line: 890, column: 9, scope: !3692)
!3694 = !DILocation(line: 892, column: 16, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3691, file: !200, line: 892, column: 16)
!3696 = !DILocation(line: 892, column: 16, scope: !3691)
!3697 = !DILocation(line: 895, column: 15, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3686, file: !200, line: 895, column: 15)
!3699 = !DILocation(line: 895, column: 15, scope: !3686)
!3700 = !DILocation(line: 900, column: 9, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3684, file: !200, line: 900, column: 7)
!3702 = !DILocation(line: 900, column: 7, scope: !3684)
!3703 = distinct !{!3703, !3681, !3704}
!3704 = !DILocation(line: 903, column: 2, scope: !3669)
!3705 = !DILocation(line: 906, column: 1, scope: !3669)
!3706 = distinct !DISubprogram(name: "is_fmt_spec", scope: !200, file: !200, line: 873, type: !3707, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3709)
!3707 = !DISubroutineType(types: !3708)
!3708 = !{!145, !120}
!3709 = !{!3710}
!3710 = !DILocalVariable(name: "c", arg: 1, scope: !3706, file: !200, line: 873, type: !120)
!3711 = !DILocation(line: 0, scope: !3706)
!3712 = !DILocation(line: 875, column: 19, scope: !3706)
!3713 = !DILocation(line: 875, column: 2, scope: !3706)
!3714 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !200, file: !200, line: 908, type: !3715, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3721)
!3715 = !DISubroutineType(types: !3716)
!3716 = !{!107, !106, !185, !3717, !106, !152, !2774, !185}
!3717 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3237, line: 308, baseType: !3718)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 32)
!3719 = !DISubroutineType(types: !3720)
!3720 = !{!107, !13, !185, !106}
!3721 = !{!3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3739, !3740, !3741, !3742, !3743, !3749, !3752, !3753, !3754, !3756, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3772, !3775, !3776, !3777, !3778, !3779, !3780, !3782, !3785, !3786, !3787}
!3722 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3714, file: !200, line: 908, type: !106)
!3723 = !DILocalVariable(name: "in_len", arg: 2, scope: !3714, file: !200, line: 909, type: !185)
!3724 = !DILocalVariable(name: "cb", arg: 3, scope: !3714, file: !200, line: 910, type: !3717)
!3725 = !DILocalVariable(name: "ctx", arg: 4, scope: !3714, file: !200, line: 911, type: !106)
!3726 = !DILocalVariable(name: "flags", arg: 5, scope: !3714, file: !200, line: 912, type: !152)
!3727 = !DILocalVariable(name: "strl", arg: 6, scope: !3714, file: !200, line: 913, type: !2774)
!3728 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3714, file: !200, line: 914, type: !185)
!3729 = !DILocalVariable(name: "buf", scope: !3714, file: !200, line: 918, type: !194)
!3730 = !DILocalVariable(name: "buf32", scope: !3714, file: !200, line: 919, type: !1014)
!3731 = !DILocalVariable(name: "args_size", scope: !3714, file: !200, line: 920, type: !32)
!3732 = !DILocalVariable(name: "ros_nbr", scope: !3714, file: !200, line: 920, type: !32)
!3733 = !DILocalVariable(name: "rws_nbr", scope: !3714, file: !200, line: 920, type: !32)
!3734 = !DILocalVariable(name: "fmt_present", scope: !3714, file: !200, line: 921, type: !145)
!3735 = !DILocalVariable(name: "rw_cpy", scope: !3714, file: !200, line: 922, type: !145)
!3736 = !DILocalVariable(name: "ro_cpy", scope: !3714, file: !200, line: 923, type: !145)
!3737 = !DILocalVariable(name: "in_desc", scope: !3714, file: !200, line: 924, type: !3738)
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 32)
!3739 = !DILocalVariable(name: "out_len", scope: !3714, file: !200, line: 960, type: !107)
!3740 = !DILocalVariable(name: "fmt", scope: !3714, file: !200, line: 965, type: !118)
!3741 = !DILocalVariable(name: "str_pos", scope: !3714, file: !200, line: 966, type: !194)
!3742 = !DILocalVariable(name: "strl_cnt", scope: !3714, file: !200, line: 967, type: !185)
!3743 = !DILocalVariable(name: "i", scope: !3744, file: !200, line: 973, type: !107)
!3744 = distinct !DILexicalBlock(scope: !3745, file: !200, line: 973, column: 4)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !200, line: 972, column: 15)
!3746 = distinct !DILexicalBlock(scope: !3747, file: !200, line: 972, column: 7)
!3747 = distinct !DILexicalBlock(scope: !3748, file: !200, line: 970, column: 18)
!3748 = distinct !DILexicalBlock(scope: !3714, file: !200, line: 970, column: 6)
!3749 = !DILocalVariable(name: "str", scope: !3750, file: !200, line: 974, type: !118)
!3750 = distinct !DILexicalBlock(scope: !3751, file: !200, line: 973, column: 38)
!3751 = distinct !DILexicalBlock(scope: !3744, file: !200, line: 973, column: 4)
!3752 = !DILocalVariable(name: "len", scope: !3750, file: !200, line: 975, type: !107)
!3753 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3747, file: !200, line: 990, type: !145)
!3754 = !DILocalVariable(name: "i", scope: !3755, file: !200, line: 995, type: !107)
!3755 = distinct !DILexicalBlock(scope: !3747, file: !200, line: 995, column: 3)
!3756 = !DILocalVariable(name: "arg_idx", scope: !3757, file: !200, line: 996, type: !195)
!3757 = distinct !DILexicalBlock(scope: !3758, file: !200, line: 995, column: 37)
!3758 = distinct !DILexicalBlock(scope: !3755, file: !200, line: 995, column: 3)
!3759 = !DILocalVariable(name: "arg_pos", scope: !3757, file: !200, line: 997, type: !195)
!3760 = !DILocalVariable(name: "str", scope: !3757, file: !200, line: 998, type: !118)
!3761 = !DILocalVariable(name: "is_ro", scope: !3757, file: !200, line: 999, type: !145)
!3762 = !DILocalVariable(name: "len", scope: !3757, file: !200, line: 1000, type: !107)
!3763 = !DILocalVariable(name: "out_desc", scope: !3714, file: !200, line: 1038, type: !3240)
!3764 = !DILocalVariable(name: "cpy_str_pos", scope: !3714, file: !200, line: 1040, type: !3222)
!3765 = !DILocalVariable(name: "keep_str_pos", scope: !3714, file: !200, line: 1042, type: !3222)
!3766 = !DILocalVariable(name: "scpy_cnt", scope: !3714, file: !200, line: 1043, type: !195)
!3767 = !DILocalVariable(name: "keep_cnt", scope: !3714, file: !200, line: 1044, type: !195)
!3768 = !DILocalVariable(name: "dst", scope: !3714, file: !200, line: 1045, type: !194)
!3769 = !DILocalVariable(name: "rv", scope: !3714, file: !200, line: 1046, type: !107)
!3770 = !DILocalVariable(name: "i", scope: !3771, file: !200, line: 1074, type: !107)
!3771 = distinct !DILexicalBlock(scope: !3714, file: !200, line: 1074, column: 2)
!3772 = !DILocalVariable(name: "arg_idx", scope: !3773, file: !200, line: 1075, type: !195)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !200, line: 1074, column: 36)
!3774 = distinct !DILexicalBlock(scope: !3771, file: !200, line: 1074, column: 2)
!3775 = !DILocalVariable(name: "arg_pos", scope: !3773, file: !200, line: 1076, type: !195)
!3776 = !DILocalVariable(name: "str", scope: !3773, file: !200, line: 1077, type: !118)
!3777 = !DILocalVariable(name: "is_ro", scope: !3773, file: !200, line: 1078, type: !145)
!3778 = !DILocalVariable(name: "in_desc_backup", scope: !3714, file: !200, line: 1114, type: !3240)
!3779 = !DILocalVariable(name: "strs_len", scope: !3714, file: !200, line: 1134, type: !185)
!3780 = !DILocalVariable(name: "i", scope: !3781, file: !200, line: 1143, type: !107)
!3781 = distinct !DILexicalBlock(scope: !3714, file: !200, line: 1143, column: 2)
!3782 = !DILocalVariable(name: "loc", scope: !3783, file: !200, line: 1144, type: !195)
!3783 = distinct !DILexicalBlock(scope: !3784, file: !200, line: 1143, column: 37)
!3784 = distinct !DILexicalBlock(scope: !3781, file: !200, line: 1143, column: 2)
!3785 = !DILocalVariable(name: "str", scope: !3783, file: !200, line: 1145, type: !118)
!3786 = !DILocalVariable(name: "str_len", scope: !3783, file: !200, line: 1146, type: !197)
!3787 = !DILabel(scope: !3788, name: "calculate_string_length", file: !200, line: 1021)
!3788 = distinct !DILexicalBlock(scope: !3789, file: !200, line: 1020, column: 56)
!3789 = distinct !DILexicalBlock(scope: !3790, file: !200, line: 1020, column: 15)
!3790 = distinct !DILexicalBlock(scope: !3757, file: !200, line: 1014, column: 8)
!3791 = !DILocation(line: 0, scope: !3714)
!3792 = !DILocation(line: 916, column: 2, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3794, file: !200, line: 916, column: 2)
!3794 = distinct !DILexicalBlock(scope: !3714, file: !200, line: 916, column: 2)
!3795 = !DILocation(line: 916, column: 2, scope: !3794)
!3796 = !DILocation(line: 916, column: 2, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3793, file: !200, line: 916, column: 2)
!3798 = !DILocation(line: 919, column: 20, scope: !3714)
!3799 = !DILocation(line: 921, column: 27, scope: !3714)
!3800 = !DILocation(line: 921, column: 21, scope: !3714)
!3801 = !DILocation(line: 926, column: 18, scope: !3714)
!3802 = !DILocation(line: 926, column: 11, scope: !3714)
!3803 = !DILocation(line: 926, column: 34, scope: !3714)
!3804 = !DILocation(line: 931, column: 21, scope: !3714)
!3805 = !DILocation(line: 931, column: 12, scope: !3714)
!3806 = !DILocation(line: 932, column: 11, scope: !3714)
!3807 = !DILocation(line: 932, column: 19, scope: !3714)
!3808 = !DILocation(line: 938, column: 21, scope: !3714)
!3809 = !DILocation(line: 938, column: 12, scope: !3714)
!3810 = !DILocation(line: 939, column: 19, scope: !3714)
!3811 = !DILocation(line: 939, column: 23, scope: !3714)
!3812 = !DILocation(line: 946, column: 14, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3714, file: !200, line: 946, column: 6)
!3814 = !DILocation(line: 947, column: 7, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3816, file: !200, line: 947, column: 7)
!3816 = distinct !DILexicalBlock(scope: !3813, file: !200, line: 946, column: 26)
!3817 = !DILocation(line: 947, column: 7, scope: !3816)
!3818 = !DILocation(line: 948, column: 4, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3815, file: !200, line: 947, column: 11)
!3820 = !DILocation(line: 949, column: 3, scope: !3819)
!3821 = !DILocation(line: 958, column: 23, scope: !3714)
!3822 = !DILocation(line: 958, column: 14, scope: !3714)
!3823 = !DILocation(line: 958, column: 27, scope: !3714)
!3824 = !DILocation(line: 965, column: 41, scope: !3714)
!3825 = !DILocation(line: 965, column: 20, scope: !3714)
!3826 = !DILocation(line: 966, column: 22, scope: !3714)
!3827 = !DILocation(line: 970, column: 9, scope: !3748)
!3828 = !DILocation(line: 970, column: 6, scope: !3714)
!3829 = !DILocation(line: 972, column: 7, scope: !3747)
!3830 = !DILocation(line: 0, scope: !3744)
!3831 = !DILocation(line: 973, column: 4, scope: !3744)
!3832 = !DILocation(line: 974, column: 46, scope: !3750)
!3833 = !DILocation(line: 974, column: 40, scope: !3750)
!3834 = !DILocation(line: 974, column: 23, scope: !3750)
!3835 = !DILocation(line: 0, scope: !3750)
!3836 = !DILocation(line: 975, column: 15, scope: !3750)
!3837 = !DILocation(line: 978, column: 14, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3750, file: !200, line: 978, column: 9)
!3839 = !DILocation(line: 979, column: 25, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3838, file: !200, line: 978, column: 38)
!3841 = !DILocation(line: 979, column: 19, scope: !3840)
!3842 = !DILocation(line: 979, column: 6, scope: !3840)
!3843 = !DILocation(line: 979, column: 23, scope: !3840)
!3844 = !DILocation(line: 980, column: 5, scope: !3840)
!3845 = !DILocation(line: 981, column: 13, scope: !3750)
!3846 = !DILocation(line: 982, column: 12, scope: !3750)
!3847 = !DILocation(line: 973, column: 34, scope: !3751)
!3848 = !DILocation(line: 973, column: 22, scope: !3751)
!3849 = distinct !{!3849, !3831, !3850}
!3850 = !DILocation(line: 983, column: 4, scope: !3744)
!3851 = !DILocation(line: 985, column: 16, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3853, file: !200, line: 985, column: 8)
!3853 = distinct !DILexicalBlock(scope: !3746, file: !200, line: 984, column: 10)
!3854 = !DILocation(line: 967, column: 9, scope: !3714)
!3855 = !DILocation(line: 971, column: 11, scope: !3747)
!3856 = !DILocation(line: 0, scope: !3747)
!3857 = !DILocation(line: 0, scope: !3755)
!3858 = !DILocation(line: 995, column: 21, scope: !3758)
!3859 = !DILocation(line: 995, column: 3, scope: !3755)
!3860 = !DILocation(line: 990, column: 34, scope: !3747)
!3861 = !DILocation(line: 990, column: 26, scope: !3747)
!3862 = !DILocation(line: 996, column: 30, scope: !3757)
!3863 = !DILocation(line: 0, scope: !3757)
!3864 = !DILocation(line: 997, column: 30, scope: !3757)
!3865 = !DILocation(line: 997, column: 22, scope: !3757)
!3866 = !DILocation(line: 998, column: 39, scope: !3757)
!3867 = !DILocation(line: 998, column: 22, scope: !3757)
!3868 = !DILocation(line: 999, column: 17, scope: !3757)
!3869 = !DILocation(line: 1002, column: 20, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3757, file: !200, line: 1002, column: 8)
!3871 = !DILocation(line: 996, column: 22, scope: !3757)
!3872 = !DILocation(line: 1002, column: 35, scope: !3870)
!3873 = !DILocation(line: 1002, column: 23, scope: !3870)
!3874 = !DILocation(line: 1002, column: 8, scope: !3757)
!3875 = !DILocation(line: 1003, column: 5, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3877, file: !200, line: 1003, column: 5)
!3877 = distinct !DILexicalBlock(scope: !3878, file: !200, line: 1003, column: 5)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !200, line: 1003, column: 5)
!3879 = distinct !DILexicalBlock(scope: !3880, file: !200, line: 1003, column: 5)
!3880 = distinct !DILexicalBlock(scope: !3870, file: !200, line: 1002, column: 45)
!3881 = !DILocation(line: 1010, column: 13, scope: !3880)
!3882 = !DILocation(line: 1011, column: 5, scope: !3880)
!3883 = !DILocation(line: 1014, column: 8, scope: !3757)
!3884 = !DILocation(line: 1015, column: 9, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3790, file: !200, line: 1014, column: 15)
!3886 = !DILocation(line: 1018, column: 14, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3888, file: !200, line: 1017, column: 12)
!3888 = distinct !DILexicalBlock(scope: !3885, file: !200, line: 1015, column: 9)
!3889 = !DILocation(line: 1020, column: 4, scope: !3885)
!3890 = !DILocation(line: 1020, column: 15, scope: !3790)
!3891 = !DILocation(line: 1021, column: 1, scope: !3788)
!3892 = !DILocation(line: 1022, column: 11, scope: !3788)
!3893 = !DILocation(line: 1025, column: 14, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3788, file: !200, line: 1025, column: 9)
!3895 = !DILocation(line: 1026, column: 25, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3894, file: !200, line: 1025, column: 38)
!3897 = !DILocation(line: 1026, column: 19, scope: !3896)
!3898 = !DILocation(line: 1026, column: 6, scope: !3896)
!3899 = !DILocation(line: 1026, column: 23, scope: !3896)
!3900 = !DILocation(line: 1027, column: 5, scope: !3896)
!3901 = !DILocation(line: 1031, column: 21, scope: !3788)
!3902 = !DILocation(line: 1031, column: 13, scope: !3788)
!3903 = !DILocation(line: 1032, column: 4, scope: !3788)
!3904 = !DILocation(line: 995, column: 33, scope: !3758)
!3905 = distinct !{!3905, !3859, !3906}
!3906 = !DILocation(line: 1033, column: 3, scope: !3755)
!3907 = !DILocation(line: 1040, column: 10, scope: !3714)
!3908 = !DILocation(line: 1042, column: 10, scope: !3714)
!3909 = !DILocation(line: 1052, column: 6, scope: !3714)
!3910 = !DILocation(line: 1055, column: 9, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3912, file: !200, line: 1052, column: 14)
!3912 = distinct !DILexicalBlock(scope: !3714, file: !200, line: 1052, column: 6)
!3913 = !DILocation(line: 1056, column: 2, scope: !3911)
!3914 = !DILocation(line: 1056, column: 21, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3912, file: !200, line: 1056, column: 13)
!3916 = !DILocation(line: 1066, column: 3, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3918, file: !200, line: 1065, column: 11)
!3918 = distinct !DILexicalBlock(scope: !3714, file: !200, line: 1065, column: 6)
!3919 = !DILocation(line: 1067, column: 2, scope: !3917)
!3920 = !DILocation(line: 1068, column: 10, scope: !3714)
!3921 = !DILocation(line: 0, scope: !3771)
!3922 = !DILocation(line: 1074, column: 20, scope: !3774)
!3923 = !DILocation(line: 1074, column: 2, scope: !3771)
!3924 = !DILocation(line: 1110, column: 24, scope: !3714)
!3925 = !DILocation(line: 1053, column: 12, scope: !3911)
!3926 = !DILocation(line: 1054, column: 12, scope: !3911)
!3927 = !DILocation(line: 1108, column: 30, scope: !3714)
!3928 = !DILocation(line: 1108, column: 40, scope: !3714)
!3929 = !DILocation(line: 1108, column: 38, scope: !3714)
!3930 = !DILocation(line: 1109, column: 31, scope: !3714)
!3931 = !DILocation(line: 1109, column: 24, scope: !3714)
!3932 = !DILocation(line: 1110, column: 31, scope: !3714)
!3933 = !DILocation(line: 1114, column: 31, scope: !3714)
!3934 = !DILocation(line: 1114, column: 48, scope: !3714)
!3935 = !DILocation(line: 1115, column: 13, scope: !3714)
!3936 = !DILocation(line: 1118, column: 7, scope: !3714)
!3937 = !DILocation(line: 1119, column: 9, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3714, file: !200, line: 1119, column: 6)
!3939 = !DILocation(line: 1119, column: 6, scope: !3714)
!3940 = !DILocation(line: 1075, column: 29, scope: !3773)
!3941 = !DILocation(line: 1075, column: 21, scope: !3773)
!3942 = !DILocation(line: 0, scope: !3773)
!3943 = !DILocation(line: 1076, column: 29, scope: !3773)
!3944 = !DILocation(line: 1076, column: 21, scope: !3773)
!3945 = !DILocation(line: 1077, column: 38, scope: !3773)
!3946 = !DILocation(line: 1077, column: 21, scope: !3773)
!3947 = !DILocation(line: 1078, column: 16, scope: !3773)
!3948 = !DILocation(line: 1080, column: 19, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3773, file: !200, line: 1080, column: 7)
!3950 = !DILocation(line: 1080, column: 34, scope: !3949)
!3951 = !DILocation(line: 1080, column: 22, scope: !3949)
!3952 = !DILocation(line: 1080, column: 7, scope: !3773)
!3953 = !DILocation(line: 1084, column: 7, scope: !3773)
!3954 = !DILocation(line: 1085, column: 8, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3956, file: !200, line: 1084, column: 14)
!3956 = distinct !DILexicalBlock(scope: !3773, file: !200, line: 1084, column: 7)
!3957 = !DILocation(line: 1086, column: 5, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3959, file: !200, line: 1086, column: 5)
!3959 = distinct !DILexicalBlock(scope: !3960, file: !200, line: 1086, column: 5)
!3960 = distinct !DILexicalBlock(scope: !3961, file: !200, line: 1085, column: 49)
!3961 = distinct !DILexicalBlock(scope: !3955, file: !200, line: 1085, column: 8)
!3962 = !DILocation(line: 1086, column: 5, scope: !3959)
!3963 = !DILocation(line: 1086, column: 5, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3958, file: !200, line: 1086, column: 5)
!3965 = !DILocation(line: 1087, column: 25, scope: !3960)
!3966 = !DILocation(line: 1087, column: 5, scope: !3960)
!3967 = !DILocation(line: 1088, column: 4, scope: !3960)
!3968 = !DILocation(line: 1088, column: 15, scope: !3961)
!3969 = !DILocation(line: 1089, column: 5, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3971, file: !200, line: 1089, column: 5)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !200, line: 1089, column: 5)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !200, line: 1088, column: 61)
!3973 = distinct !DILexicalBlock(scope: !3961, file: !200, line: 1088, column: 15)
!3974 = !DILocation(line: 1089, column: 5, scope: !3971)
!3975 = !DILocation(line: 1089, column: 5, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3970, file: !200, line: 1089, column: 5)
!3977 = !DILocation(line: 1090, column: 26, scope: !3972)
!3978 = !DILocation(line: 1090, column: 5, scope: !3972)
!3979 = !DILocation(line: 1091, column: 4, scope: !3972)
!3980 = !DILocation(line: 1095, column: 8, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3956, file: !200, line: 1094, column: 10)
!3982 = !DILocation(line: 1096, column: 5, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3984, file: !200, line: 1096, column: 5)
!3984 = distinct !DILexicalBlock(scope: !3985, file: !200, line: 1096, column: 5)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !200, line: 1095, column: 49)
!3986 = distinct !DILexicalBlock(scope: !3981, file: !200, line: 1095, column: 8)
!3987 = !DILocation(line: 1096, column: 5, scope: !3984)
!3988 = !DILocation(line: 1096, column: 5, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3983, file: !200, line: 1096, column: 5)
!3990 = !DILocation(line: 1097, column: 25, scope: !3985)
!3991 = !DILocation(line: 1097, column: 5, scope: !3985)
!3992 = !DILocation(line: 1098, column: 4, scope: !3985)
!3993 = !DILocation(line: 1099, column: 5, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3995, file: !200, line: 1099, column: 5)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !200, line: 1099, column: 5)
!3996 = distinct !DILexicalBlock(scope: !3986, file: !200, line: 1098, column: 11)
!3997 = !DILocation(line: 1099, column: 5, scope: !3995)
!3998 = !DILocation(line: 1099, column: 5, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3994, file: !200, line: 1099, column: 5)
!4000 = !DILocation(line: 1100, column: 26, scope: !3996)
!4001 = !DILocation(line: 1100, column: 5, scope: !3996)
!4002 = !DILocation(line: 1100, column: 30, scope: !3996)
!4003 = !DILocation(line: 1101, column: 26, scope: !3996)
!4004 = !DILocation(line: 1101, column: 5, scope: !3996)
!4005 = !DILocation(line: 0, scope: !3956)
!4006 = !DILocation(line: 1074, column: 32, scope: !3774)
!4007 = distinct !{!4007, !3923, !4008}
!4008 = !DILocation(line: 1104, column: 2, scope: !3771)
!4009 = !DILocation(line: 1124, column: 13, scope: !3714)
!4010 = !DILocation(line: 1127, column: 10, scope: !3714)
!4011 = !DILocation(line: 1127, column: 7, scope: !3714)
!4012 = !DILocation(line: 1128, column: 9, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !3714, file: !200, line: 1128, column: 6)
!4014 = !DILocation(line: 1128, column: 6, scope: !3714)
!4015 = !DILocation(line: 1134, column: 27, scope: !3714)
!4016 = !DILocation(line: 1136, column: 7, scope: !3714)
!4017 = !DILocation(line: 1137, column: 9, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !3714, file: !200, line: 1137, column: 6)
!4019 = !DILocation(line: 1137, column: 6, scope: !3714)
!4020 = !DILocation(line: 1131, column: 10, scope: !3714)
!4021 = !DILocation(line: 1140, column: 10, scope: !3714)
!4022 = !DILocation(line: 0, scope: !3781)
!4023 = !DILocation(line: 1143, column: 20, scope: !3784)
!4024 = !DILocation(line: 1143, column: 2, scope: !3781)
!4025 = !DILocation(line: 1144, column: 3, scope: !3783)
!4026 = !DILocation(line: 1144, column: 17, scope: !3783)
!4027 = !DILocation(line: 0, scope: !3783)
!4028 = !DILocation(line: 1144, column: 11, scope: !3783)
!4029 = !DILocation(line: 1145, column: 38, scope: !3783)
!4030 = !DILocation(line: 1145, column: 21, scope: !3783)
!4031 = !DILocation(line: 1146, column: 22, scope: !3783)
!4032 = !DILocation(line: 1146, column: 29, scope: !3783)
!4033 = !DILocation(line: 1148, column: 8, scope: !3783)
!4034 = !DILocation(line: 1149, column: 10, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !3783, file: !200, line: 1149, column: 7)
!4036 = !DILocation(line: 1149, column: 7, scope: !3783)
!4037 = !DILocation(line: 1154, column: 8, scope: !3783)
!4038 = !DILocation(line: 1155, column: 10, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !3783, file: !200, line: 1155, column: 7)
!4040 = !DILocation(line: 1155, column: 7, scope: !3783)
!4041 = !DILocation(line: 1159, column: 2, scope: !3784)
!4042 = !DILocation(line: 1152, column: 11, scope: !3783)
!4043 = !DILocation(line: 1158, column: 11, scope: !3783)
!4044 = !DILocation(line: 1143, column: 33, scope: !3784)
!4045 = distinct !{!4045, !4024, !4046}
!4046 = !DILocation(line: 1159, column: 2, scope: !3781)
!4047 = !DILocation(line: 1162, column: 8, scope: !3714)
!4048 = !DILocation(line: 1164, column: 2, scope: !3714)
!4049 = !DILocation(line: 1165, column: 1, scope: !3714)
!4050 = distinct !DISubprogram(name: "get_package_len", scope: !200, file: !200, line: 196, type: !4051, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4053)
!4051 = !DISubroutineType(types: !4052)
!4052 = !{!185, !106}
!4053 = !{!4054, !4055, !4056, !4057, !4058, !4059, !4060}
!4054 = !DILocalVariable(name: "packaged", arg: 1, scope: !4050, file: !200, line: 196, type: !106)
!4055 = !DILocalVariable(name: "buf", scope: !4050, file: !200, line: 200, type: !194)
!4056 = !DILocalVariable(name: "start", scope: !4050, file: !200, line: 201, type: !194)
!4057 = !DILocalVariable(name: "args_size", scope: !4050, file: !200, line: 202, type: !32)
!4058 = !DILocalVariable(name: "s_nbr", scope: !4050, file: !200, line: 202, type: !32)
!4059 = !DILocalVariable(name: "ros_nbr", scope: !4050, file: !200, line: 202, type: !32)
!4060 = !DILocalVariable(name: "i", scope: !4061, file: !200, line: 215, type: !107)
!4061 = distinct !DILexicalBlock(scope: !4050, file: !200, line: 215, column: 2)
!4062 = !DILocation(line: 0, scope: !4050)
!4063 = !DILocation(line: 198, column: 2, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4065, file: !200, line: 198, column: 2)
!4065 = distinct !DILexicalBlock(scope: !4050, file: !200, line: 198, column: 2)
!4066 = !DILocation(line: 198, column: 2, scope: !4065)
!4067 = !DILocation(line: 198, column: 2, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4064, file: !200, line: 198, column: 2)
!4069 = !DILocation(line: 204, column: 14, scope: !4050)
!4070 = !DILocation(line: 204, column: 21, scope: !4050)
!4071 = !DILocation(line: 205, column: 14, scope: !4050)
!4072 = !DILocation(line: 206, column: 14, scope: !4050)
!4073 = !DILocation(line: 209, column: 6, scope: !4050)
!4074 = !DILocation(line: 212, column: 6, scope: !4050)
!4075 = !DILocation(line: 0, scope: !4061)
!4076 = !DILocation(line: 215, column: 20, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4061, file: !200, line: 215, column: 2)
!4078 = !DILocation(line: 215, column: 2, scope: !4061)
!4079 = !DILocation(line: 220, column: 33, scope: !4050)
!4080 = !DILocation(line: 220, column: 2, scope: !4050)
!4081 = !DILocation(line: 216, column: 6, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4077, file: !200, line: 215, column: 34)
!4083 = !DILocation(line: 217, column: 10, scope: !4082)
!4084 = !DILocation(line: 217, column: 36, scope: !4082)
!4085 = !DILocation(line: 217, column: 7, scope: !4082)
!4086 = !DILocation(line: 215, column: 30, scope: !4077)
!4087 = distinct !{!4087, !4078, !4088}
!4088 = !DILocation(line: 218, column: 2, scope: !4061)
!4089 = distinct !DISubprogram(name: "append_string", scope: !200, file: !200, line: 223, type: !4090, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4092)
!4090 = !DISubroutineType(types: !4091)
!4091 = !{!107, !3717, !106, !118, !197}
!4092 = !{!4093, !4094, !4095, !4096}
!4093 = !DILocalVariable(name: "cb", arg: 1, scope: !4089, file: !200, line: 223, type: !3717)
!4094 = !DILocalVariable(name: "ctx", arg: 2, scope: !4089, file: !200, line: 223, type: !106)
!4095 = !DILocalVariable(name: "str", arg: 3, scope: !4089, file: !200, line: 223, type: !118)
!4096 = !DILocalVariable(name: "strl", arg: 4, scope: !4089, file: !200, line: 223, type: !197)
!4097 = !DILocation(line: 0, scope: !4089)
!4098 = !DILocation(line: 225, column: 9, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4089, file: !200, line: 225, column: 6)
!4100 = !DILocation(line: 225, column: 6, scope: !4089)
!4101 = !DILocation(line: 226, column: 14, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4099, file: !200, line: 225, column: 18)
!4103 = !DILocation(line: 226, column: 12, scope: !4102)
!4104 = !DILocation(line: 226, column: 3, scope: !4102)
!4105 = !DILocation(line: 229, column: 14, scope: !4089)
!4106 = !DILocation(line: 229, column: 9, scope: !4089)
!4107 = !DILocation(line: 229, column: 27, scope: !4089)
!4108 = !DILocation(line: 229, column: 39, scope: !4089)
!4109 = !DILocation(line: 230, column: 17, scope: !4089)
!4110 = !DILocation(line: 230, column: 9, scope: !4089)
!4111 = !DILocation(line: 230, column: 2, scope: !4089)
!4112 = !DILocation(line: 231, column: 1, scope: !4089)
!4113 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !212, file: !212, line: 45, type: !214, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4114)
!4114 = !{!4115}
!4115 = !DILocalVariable(name: "c", arg: 1, scope: !4113, file: !212, line: 45, type: !107)
!4116 = !DILocation(line: 0, scope: !4113)
!4117 = !DILocation(line: 50, column: 2, scope: !4113)
!4118 = distinct !DISubprogram(name: "__printk_hook_install", scope: !212, file: !212, line: 63, type: !4119, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4121)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{null, !213}
!4121 = !{!4122}
!4122 = !DILocalVariable(name: "fn", arg: 1, scope: !4118, file: !212, line: 63, type: !213)
!4123 = !DILocation(line: 0, scope: !4118)
!4124 = !DILocation(line: 65, column: 12, scope: !4118)
!4125 = !DILocation(line: 66, column: 1, scope: !4118)
!4126 = distinct !DISubprogram(name: "__printk_get_hook", scope: !212, file: !212, line: 76, type: !125, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !2156)
!4127 = !DILocation(line: 78, column: 9, scope: !4126)
!4128 = !DILocation(line: 78, column: 2, scope: !4126)
!4129 = distinct !DISubprogram(name: "vprintk", scope: !212, file: !212, line: 113, type: !4130, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4138)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{null, !118, !4132}
!4132 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3205, line: 99, baseType: !4133)
!4133 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3205, line: 40, baseType: !4134)
!4134 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !212, baseType: !4135)
!4135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4136)
!4136 = !{!4137}
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4135, file: !212, line: 79, baseType: !106, size: 32)
!4138 = !{!4139, !4140, !4141}
!4139 = !DILocalVariable(name: "fmt", arg: 1, scope: !4129, file: !212, line: 113, type: !118)
!4140 = !DILocalVariable(name: "ap", arg: 2, scope: !4129, file: !212, line: 113, type: !4132)
!4141 = !DILocalVariable(name: "ctx", scope: !4142, file: !212, line: 121, type: !4144)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !212, line: 120, column: 27)
!4143 = distinct !DILexicalBlock(scope: !4129, file: !212, line: 120, column: 6)
!4144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !212, line: 81, size: 32, elements: !4145)
!4145 = !{!4146, !4147}
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4144, file: !212, line: 85, baseType: !32, size: 32)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4144, file: !212, line: 86, baseType: !4148, offset: 32)
!4148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !4149)
!4149 = !{!4150}
!4150 = !DISubrange(count: 0)
!4151 = !DILocation(line: 0, scope: !4129)
!4152 = !DILocation(line: 148, column: 3, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4143, file: !212, line: 138, column: 9)
!4154 = !DILocation(line: 155, column: 1, scope: !4129)
!4155 = distinct !DISubprogram(name: "char_out", scope: !212, file: !212, line: 107, type: !4156, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4158)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{!107, !107, !106}
!4158 = !{!4159, !4160}
!4159 = !DILocalVariable(name: "c", arg: 1, scope: !4155, file: !212, line: 107, type: !107)
!4160 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4155, file: !212, line: 107, type: !106)
!4161 = !DILocation(line: 0, scope: !4155)
!4162 = !DILocation(line: 110, column: 9, scope: !4155)
!4163 = !DILocation(line: 110, column: 2, scope: !4155)
!4164 = distinct !DISubprogram(name: "cbvprintf", scope: !3237, file: !3237, line: 739, type: !4165, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4167)
!4165 = !DISubroutineType(types: !4166)
!4166 = !{!107, !3585, !106, !118, !4132}
!4167 = !{!4168, !4169, !4170, !4171}
!4168 = !DILocalVariable(name: "out", arg: 1, scope: !4164, file: !3237, line: 739, type: !3585)
!4169 = !DILocalVariable(name: "ctx", arg: 2, scope: !4164, file: !3237, line: 739, type: !106)
!4170 = !DILocalVariable(name: "format", arg: 3, scope: !4164, file: !3237, line: 739, type: !118)
!4171 = !DILocalVariable(name: "ap", arg: 4, scope: !4164, file: !3237, line: 739, type: !4132)
!4172 = !DILocation(line: 0, scope: !4164)
!4173 = !DILocation(line: 741, column: 9, scope: !4164)
!4174 = !DILocation(line: 741, column: 2, scope: !4164)
!4175 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !212, file: !212, line: 157, type: !4176, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4178)
!4176 = !DISubroutineType(types: !4177)
!4177 = !{null, !193, !185}
!4178 = !{!4179, !4180, !4181}
!4179 = !DILocalVariable(name: "c", arg: 1, scope: !4175, file: !212, line: 157, type: !193)
!4180 = !DILocalVariable(name: "n", arg: 2, scope: !4175, file: !212, line: 157, type: !185)
!4181 = !DILocalVariable(name: "i", scope: !4175, file: !212, line: 159, type: !185)
!4182 = !DILocation(line: 0, scope: !4175)
!4183 = !DILocation(line: 164, column: 16, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4185, file: !212, line: 164, column: 2)
!4185 = distinct !DILexicalBlock(scope: !4175, file: !212, line: 164, column: 2)
!4186 = !DILocation(line: 164, column: 2, scope: !4185)
!4187 = !DILocation(line: 165, column: 3, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4184, file: !212, line: 164, column: 26)
!4189 = !DILocation(line: 165, column: 13, scope: !4188)
!4190 = !DILocation(line: 164, column: 22, scope: !4184)
!4191 = distinct !{!4191, !4186, !4192}
!4192 = !DILocation(line: 166, column: 2, scope: !4185)
!4193 = !DILocation(line: 171, column: 1, scope: !4175)
!4194 = distinct !DISubprogram(name: "printk", scope: !212, file: !212, line: 203, type: !4195, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4197)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{null, !118, null}
!4197 = !{!4198, !4199}
!4198 = !DILocalVariable(name: "fmt", arg: 1, scope: !4194, file: !212, line: 203, type: !118)
!4199 = !DILocalVariable(name: "ap", scope: !4194, file: !212, line: 205, type: !4132)
!4200 = !DILocation(line: 0, scope: !4194)
!4201 = !DILocation(line: 205, column: 2, scope: !4194)
!4202 = !DILocation(line: 205, column: 10, scope: !4194)
!4203 = !DILocation(line: 207, column: 2, scope: !4194)
!4204 = !DILocation(line: 209, column: 2, scope: !4194)
!4205 = !DILocation(line: 211, column: 2, scope: !4194)
!4206 = !DILocation(line: 212, column: 1, scope: !4194)
!4207 = distinct !DISubprogram(name: "snprintk", scope: !212, file: !212, line: 239, type: !4208, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4210)
!4208 = !DISubroutineType(types: !4209)
!4209 = !{!107, !193, !185, !118, null}
!4210 = !{!4211, !4212, !4213, !4214, !4215}
!4211 = !DILocalVariable(name: "str", arg: 1, scope: !4207, file: !212, line: 239, type: !193)
!4212 = !DILocalVariable(name: "size", arg: 2, scope: !4207, file: !212, line: 239, type: !185)
!4213 = !DILocalVariable(name: "fmt", arg: 3, scope: !4207, file: !212, line: 239, type: !118)
!4214 = !DILocalVariable(name: "ap", scope: !4207, file: !212, line: 241, type: !4132)
!4215 = !DILocalVariable(name: "ret", scope: !4207, file: !212, line: 242, type: !107)
!4216 = !DILocation(line: 0, scope: !4207)
!4217 = !DILocation(line: 241, column: 2, scope: !4207)
!4218 = !DILocation(line: 241, column: 10, scope: !4207)
!4219 = !DILocation(line: 244, column: 2, scope: !4207)
!4220 = !DILocation(line: 245, column: 8, scope: !4207)
!4221 = !DILocation(line: 246, column: 2, scope: !4207)
!4222 = !DILocation(line: 249, column: 1, scope: !4207)
!4223 = !DILocation(line: 248, column: 2, scope: !4207)
!4224 = distinct !DISubprogram(name: "vsnprintk", scope: !212, file: !212, line: 251, type: !4225, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4227)
!4225 = !DISubroutineType(types: !4226)
!4226 = !{!107, !193, !185, !118, !4132}
!4227 = !{!4228, !4229, !4230, !4231, !4232}
!4228 = !DILocalVariable(name: "str", arg: 1, scope: !4224, file: !212, line: 251, type: !193)
!4229 = !DILocalVariable(name: "size", arg: 2, scope: !4224, file: !212, line: 251, type: !185)
!4230 = !DILocalVariable(name: "fmt", arg: 3, scope: !4224, file: !212, line: 251, type: !118)
!4231 = !DILocalVariable(name: "ap", arg: 4, scope: !4224, file: !212, line: 251, type: !4132)
!4232 = !DILocalVariable(name: "ctx", scope: !4224, file: !212, line: 253, type: !4233)
!4233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !212, line: 217, size: 96, elements: !4234)
!4234 = !{!4235, !4236, !4237}
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4233, file: !212, line: 218, baseType: !193, size: 32)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4233, file: !212, line: 219, baseType: !107, size: 32, offset: 32)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4233, file: !212, line: 220, baseType: !107, size: 32, offset: 64)
!4238 = !DILocation(line: 0, scope: !4224)
!4239 = !DILocation(line: 253, column: 2, scope: !4224)
!4240 = !DILocation(line: 253, column: 21, scope: !4224)
!4241 = !DILocation(line: 253, column: 27, scope: !4224)
!4242 = !DILocation(line: 255, column: 2, scope: !4224)
!4243 = !DILocation(line: 257, column: 10, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4224, file: !212, line: 257, column: 6)
!4245 = !DILocation(line: 257, column: 22, scope: !4244)
!4246 = !DILocation(line: 257, column: 16, scope: !4244)
!4247 = !DILocation(line: 257, column: 6, scope: !4224)
!4248 = !DILocation(line: 258, column: 3, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4244, file: !212, line: 257, column: 27)
!4250 = !DILocation(line: 258, column: 18, scope: !4249)
!4251 = !DILocation(line: 259, column: 2, scope: !4249)
!4252 = !DILocation(line: 262, column: 1, scope: !4224)
!4253 = !DILocation(line: 261, column: 2, scope: !4224)
!4254 = distinct !DISubprogram(name: "str_out", scope: !212, file: !212, line: 223, type: !4255, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4258)
!4255 = !DISubroutineType(types: !4256)
!4256 = !{!107, !107, !4257}
!4257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 32)
!4258 = !{!4259, !4260}
!4259 = !DILocalVariable(name: "c", arg: 1, scope: !4254, file: !212, line: 223, type: !107)
!4260 = !DILocalVariable(name: "ctx", arg: 2, scope: !4254, file: !212, line: 223, type: !4257)
!4261 = !DILocation(line: 0, scope: !4254)
!4262 = !DILocation(line: 225, column: 11, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4254, file: !212, line: 225, column: 6)
!4264 = !DILocation(line: 225, column: 15, scope: !4263)
!4265 = !DILocation(line: 0, scope: !4263)
!4266 = !DILocation(line: 225, column: 23, scope: !4263)
!4267 = !DILocation(line: 225, column: 45, scope: !4263)
!4268 = !DILocation(line: 225, column: 37, scope: !4263)
!4269 = !DILocation(line: 225, column: 6, scope: !4254)
!4270 = !DILocation(line: 226, column: 8, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4263, file: !212, line: 225, column: 50)
!4272 = !DILocation(line: 226, column: 13, scope: !4271)
!4273 = !DILocation(line: 227, column: 3, scope: !4271)
!4274 = !DILocation(line: 230, column: 29, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4254, file: !212, line: 230, column: 6)
!4276 = !DILocation(line: 230, column: 17, scope: !4275)
!4277 = !DILocation(line: 230, column: 6, scope: !4254)
!4278 = !DILocation(line: 231, column: 22, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4275, file: !212, line: 230, column: 34)
!4280 = !DILocation(line: 231, column: 3, scope: !4279)
!4281 = !DILocation(line: 231, column: 26, scope: !4279)
!4282 = !DILocation(line: 232, column: 2, scope: !4279)
!4283 = !DILocation(line: 233, column: 28, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4275, file: !212, line: 232, column: 9)
!4285 = !DILocation(line: 233, column: 22, scope: !4284)
!4286 = !DILocation(line: 233, column: 3, scope: !4284)
!4287 = !DILocation(line: 233, column: 26, scope: !4284)
!4288 = !DILocation(line: 237, column: 1, scope: !4254)
!4289 = distinct !DISubprogram(name: "z_thread_entry", scope: !4290, file: !4290, line: 30, type: !4291, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2502, retainedNodes: !4293)
!4290 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4291 = !DISubroutineType(types: !4292)
!4292 = !{null, !559, !106, !106, !106}
!4293 = !{!4294, !4295, !4296, !4297}
!4294 = !DILocalVariable(name: "entry", arg: 1, scope: !4289, file: !4290, line: 30, type: !559)
!4295 = !DILocalVariable(name: "p1", arg: 2, scope: !4289, file: !4290, line: 31, type: !106)
!4296 = !DILocalVariable(name: "p2", arg: 3, scope: !4289, file: !4290, line: 31, type: !106)
!4297 = !DILocalVariable(name: "p3", arg: 4, scope: !4289, file: !4290, line: 31, type: !106)
!4298 = !DILocation(line: 0, scope: !4289)
!4299 = !DILocation(line: 36, column: 2, scope: !4289)
!4300 = !DILocation(line: 38, column: 17, scope: !4289)
!4301 = !DILocation(line: 38, column: 2, scope: !4289)
!4302 = !DILocation(line: 45, column: 2, scope: !4289)
!4303 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !4304, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2502, retainedNodes: !2156)
!4304 = !DISubroutineType(types: !4305)
!4305 = !{!4306}
!4306 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !4307)
!4307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4308, size: 32)
!4308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !4309)
!4309 = !{!4310, !4368, !4380, !4381, !4382, !4383, !4384, !4390, !4405}
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4308, file: !309, line: 247, baseType: !4311, size: 384)
!4311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !4312)
!4312 = !{!4313, !4337, !4344, !4345, !4346, !4355, !4356, !4357}
!4313 = !DIDerivedType(tag: DW_TAG_member, scope: !4311, file: !309, line: 60, baseType: !4314, size: 64)
!4314 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4311, file: !309, line: 60, size: 64, elements: !4315)
!4315 = !{!4316, !4331}
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4314, file: !309, line: 61, baseType: !4317, size: 64)
!4317 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !4318)
!4318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !4319)
!4319 = !{!4320, !4326}
!4320 = !DIDerivedType(tag: DW_TAG_member, scope: !4318, file: !319, line: 38, baseType: !4321, size: 32)
!4321 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4318, file: !319, line: 38, size: 32, elements: !4322)
!4322 = !{!4323, !4325}
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4321, file: !319, line: 39, baseType: !4324, size: 32)
!4324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 32)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4321, file: !319, line: 40, baseType: !4324, size: 32)
!4326 = !DIDerivedType(tag: DW_TAG_member, scope: !4318, file: !319, line: 42, baseType: !4327, size: 32, offset: 32)
!4327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4318, file: !319, line: 42, size: 32, elements: !4328)
!4328 = !{!4329, !4330}
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4327, file: !319, line: 43, baseType: !4324, size: 32)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4327, file: !319, line: 44, baseType: !4324, size: 32)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4314, file: !309, line: 62, baseType: !4332, size: 64)
!4332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !4333)
!4333 = !{!4334}
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4332, file: !335, line: 50, baseType: !4335, size: 64)
!4335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4336, size: 64, elements: !340)
!4336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4332, size: 32)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4311, file: !309, line: 68, baseType: !4338, size: 32, offset: 64)
!4338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4339, size: 32)
!4339 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !4340)
!4340 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !4341)
!4341 = !{!4342}
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4340, file: !345, line: 232, baseType: !4343, size: 64)
!4343 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !4318)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4311, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4311, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!4346 = !DIDerivedType(tag: DW_TAG_member, scope: !4311, file: !309, line: 90, baseType: !4347, size: 16, offset: 112)
!4347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4311, file: !309, line: 90, size: 16, elements: !4348)
!4348 = !{!4349, !4354}
!4349 = !DIDerivedType(tag: DW_TAG_member, scope: !4347, file: !309, line: 91, baseType: !4350, size: 16)
!4350 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4347, file: !309, line: 91, size: 16, elements: !4351)
!4351 = !{!4352, !4353}
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4350, file: !309, line: 96, baseType: !359, size: 8)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4350, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4347, file: !309, line: 100, baseType: !197, size: 16)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4311, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4311, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4311, file: !309, line: 131, baseType: !4358, size: 192, offset: 192)
!4358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !4359)
!4359 = !{!4360, !4361, !4367}
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4358, file: !345, line: 245, baseType: !4317, size: 64)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4358, file: !345, line: 246, baseType: !4362, size: 32, offset: 64)
!4362 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !4363)
!4363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4364, size: 32)
!4364 = !DISubroutineType(types: !4365)
!4365 = !{null, !4366}
!4366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4358, size: 32)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4358, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4308, file: !309, line: 250, baseType: !4369, size: 288, offset: 384)
!4369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !4370)
!4370 = !{!4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379}
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4369, file: !379, line: 26, baseType: !152, size: 32)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4369, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4369, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4369, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4369, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4369, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4369, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4369, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4369, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4308, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4308, file: !309, line: 256, baseType: !4339, size: 64, offset: 704)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4308, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4308, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4308, file: !309, line: 300, baseType: !4385, size: 96, offset: 1056)
!4385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !4386)
!4386 = !{!4387, !4388, !4389}
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4385, file: !309, line: 153, baseType: !22, size: 32)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4385, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4385, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4308, file: !309, line: 325, baseType: !4391, size: 32, offset: 1152)
!4391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4392, size: 32)
!4392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !4393)
!4393 = !{!4394, !4400, !4401}
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4392, file: !406, line: 5074, baseType: !4395, size: 96)
!4395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !4396)
!4396 = !{!4397, !4398, !4399}
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4395, file: !410, line: 57, baseType: !413, size: 32)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4395, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4395, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4392, file: !406, line: 5075, baseType: !4339, size: 64, offset: 96)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4392, file: !406, line: 5076, baseType: !4402, size: 32, offset: 160)
!4402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !4403)
!4403 = !{!4404}
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4402, file: !420, line: 52, baseType: !22, size: 32)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4308, file: !309, line: 343, baseType: !4406, size: 64, offset: 1184)
!4406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !4407)
!4407 = !{!4408, !4409}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4406, file: !379, line: 63, baseType: !152, size: 32)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4406, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!4410 = !DILocation(line: 535, column: 9, scope: !4303)
!4411 = !DILocation(line: 535, column: 2, scope: !4303)
!4412 = distinct !DISubprogram(name: "k_thread_abort", scope: !4413, file: !4413, line: 188, type: !4414, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2502, retainedNodes: !4416)
!4413 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!4414 = !DISubroutineType(types: !4415)
!4415 = !{null, !4306}
!4416 = !{!4417}
!4417 = !DILocalVariable(name: "thread", arg: 1, scope: !4412, file: !4413, line: 188, type: !4306)
!4418 = !DILocation(line: 0, scope: !4412)
!4419 = !DILocation(line: 197, column: 2, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4412, file: !4413, line: 197, column: 2)
!4421 = !{i64 2154747126}
!4422 = !DILocation(line: 198, column: 2, scope: !4412)
!4423 = !DILocation(line: 199, column: 1, scope: !4412)
!4424 = distinct !DISubprogram(name: "z_current_get", scope: !4413, file: !4413, line: 173, type: !4304, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2502, retainedNodes: !2156)
!4425 = !DILocation(line: 180, column: 2, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4424, file: !4413, line: 180, column: 2)
!4427 = !{i64 2154747058}
!4428 = !DILocation(line: 181, column: 9, scope: !4424)
!4429 = !DILocation(line: 181, column: 2, scope: !4424)
!4430 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2508, file: !2508, line: 1338, type: !4431, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !4439)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{!107, !3585, !106, !118, !4433, !152}
!4433 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3205, line: 99, baseType: !4434)
!4434 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3205, line: 40, baseType: !4435)
!4435 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2508, baseType: !4436)
!4436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4437)
!4437 = !{!4438}
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4436, file: !2508, baseType: !106, size: 32)
!4439 = !{!4440, !4441, !4442, !4443, !4444, !4445, !4449, !4450, !4451, !4453, !4458, !4501, !4504, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4516, !4517, !4518, !4522, !4525, !4527, !4530, !4531, !4532, !4537, !4543, !4546, !4550, !4556, !4560, !4563, !4565, !4568}
!4440 = !DILocalVariable(name: "out", arg: 1, scope: !4430, file: !2508, line: 1338, type: !3585)
!4441 = !DILocalVariable(name: "ctx", arg: 2, scope: !4430, file: !2508, line: 1338, type: !106)
!4442 = !DILocalVariable(name: "fp", arg: 3, scope: !4430, file: !2508, line: 1338, type: !118)
!4443 = !DILocalVariable(name: "ap", arg: 4, scope: !4430, file: !2508, line: 1339, type: !4433)
!4444 = !DILocalVariable(name: "flags", arg: 5, scope: !4430, file: !2508, line: 1339, type: !152)
!4445 = !DILocalVariable(name: "buf", scope: !4430, file: !2508, line: 1341, type: !4446)
!4446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 176, elements: !4447)
!4447 = !{!4448}
!4448 = !DISubrange(count: 22)
!4449 = !DILocalVariable(name: "count", scope: !4430, file: !2508, line: 1342, type: !185)
!4450 = !DILocalVariable(name: "sint", scope: !4430, file: !2508, line: 1343, type: !2527)
!4451 = !DILocalVariable(name: "tagged_ap", scope: !4430, file: !2508, line: 1345, type: !4452)
!4452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!4453 = !DILocalVariable(name: "rc", scope: !4454, file: !2508, line: 1377, type: !107)
!4454 = distinct !DILexicalBlock(scope: !4455, file: !2508, line: 1377, column: 4)
!4455 = distinct !DILexicalBlock(scope: !4456, file: !2508, line: 1376, column: 19)
!4456 = distinct !DILexicalBlock(scope: !4457, file: !2508, line: 1376, column: 7)
!4457 = distinct !DILexicalBlock(scope: !4430, file: !2508, line: 1375, column: 19)
!4458 = !DILocalVariable(name: "state", scope: !4457, file: !2508, line: 1395, type: !4459)
!4459 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4430, file: !2508, line: 1392, size: 192, elements: !4460)
!4460 = !{!4461, !4469}
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4459, file: !2508, line: 1393, baseType: !4462, size: 64)
!4462 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2508, line: 166, size: 64, elements: !4463)
!4463 = !{!4464, !4465, !4466, !4467, !4468}
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4462, file: !2508, line: 168, baseType: !2527, size: 64)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4462, file: !2508, line: 171, baseType: !2530, size: 64)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4462, file: !2508, line: 174, baseType: !183, size: 64)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4462, file: !2508, line: 177, baseType: !181, size: 64)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4462, file: !2508, line: 180, baseType: !106, size: 32)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4459, file: !2508, line: 1394, baseType: !4470, size: 96, offset: 64)
!4470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2508, line: 189, size: 96, elements: !4471)
!4471 = !{!4472, !4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4496}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4470, file: !2508, line: 191, baseType: !145, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4470, file: !2508, line: 194, baseType: !145, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4470, file: !2508, line: 197, baseType: !145, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4470, file: !2508, line: 200, baseType: !145, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4470, file: !2508, line: 203, baseType: !145, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4470, file: !2508, line: 206, baseType: !145, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4470, file: !2508, line: 209, baseType: !145, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4470, file: !2508, line: 212, baseType: !145, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4470, file: !2508, line: 219, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4470, file: !2508, line: 222, baseType: !145, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4470, file: !2508, line: 229, baseType: !145, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4470, file: !2508, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4470, file: !2508, line: 238, baseType: !145, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4470, file: !2508, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4470, file: !2508, line: 244, baseType: !145, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4470, file: !2508, line: 247, baseType: !145, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4470, file: !2508, line: 252, baseType: !145, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4470, file: !2508, line: 257, baseType: !145, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4470, file: !2508, line: 260, baseType: !196, size: 8, offset: 24)
!4491 = !DIDerivedType(tag: DW_TAG_member, scope: !4470, file: !2508, line: 262, baseType: !4492, size: 32, offset: 32)
!4492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4470, file: !2508, line: 262, size: 32, elements: !4493)
!4493 = !{!4494, !4495}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4492, file: !2508, line: 267, baseType: !107, size: 32)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4492, file: !2508, line: 289, baseType: !107, size: 32)
!4496 = !DIDerivedType(tag: DW_TAG_member, scope: !4470, file: !2508, line: 292, baseType: !4497, size: 32, offset: 64)
!4497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4470, file: !2508, line: 292, size: 32, elements: !4498)
!4498 = !{!4499, !4500}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4497, file: !2508, line: 297, baseType: !107, size: 32)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4497, file: !2508, line: 306, baseType: !107, size: 32)
!4501 = !DILocalVariable(name: "conv", scope: !4457, file: !2508, line: 1400, type: !4502)
!4502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4503)
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 32)
!4504 = !DILocalVariable(name: "value", scope: !4457, file: !2508, line: 1401, type: !4505)
!4505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4506)
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4462, size: 32)
!4507 = !DILocalVariable(name: "sp", scope: !4457, file: !2508, line: 1402, type: !118)
!4508 = !DILocalVariable(name: "width", scope: !4457, file: !2508, line: 1403, type: !107)
!4509 = !DILocalVariable(name: "precision", scope: !4457, file: !2508, line: 1404, type: !107)
!4510 = !DILocalVariable(name: "bps", scope: !4457, file: !2508, line: 1405, type: !118)
!4511 = !DILocalVariable(name: "bpe", scope: !4457, file: !2508, line: 1406, type: !118)
!4512 = !DILocalVariable(name: "sign", scope: !4457, file: !2508, line: 1407, type: !120)
!4513 = !DILocalVariable(name: "arg", scope: !4514, file: !2508, line: 1432, type: !107)
!4514 = distinct !DILexicalBlock(scope: !4515, file: !2508, line: 1431, column: 24)
!4515 = distinct !DILexicalBlock(scope: !4457, file: !2508, line: 1431, column: 7)
!4516 = !DILocalVariable(name: "specifier_cat", scope: !4457, file: !2508, line: 1468, type: !2507)
!4517 = !DILocalVariable(name: "length_mod", scope: !4457, file: !2508, line: 1470, type: !2515)
!4518 = !DILocalVariable(name: "rc", scope: !4519, file: !2508, line: 1575, type: !107)
!4519 = distinct !DILexicalBlock(scope: !4520, file: !2508, line: 1575, column: 4)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !2508, line: 1574, column: 43)
!4521 = distinct !DILexicalBlock(scope: !4457, file: !2508, line: 1574, column: 7)
!4522 = !DILocalVariable(name: "rc", scope: !4523, file: !2508, line: 1584, type: !107)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !2508, line: 1584, column: 4)
!4524 = distinct !DILexicalBlock(scope: !4457, file: !2508, line: 1582, column: 28)
!4525 = !DILocalVariable(name: "len", scope: !4526, file: !2508, line: 1589, type: !185)
!4526 = distinct !DILexicalBlock(scope: !4524, file: !2508, line: 1586, column: 13)
!4527 = !DILocalVariable(name: "len", scope: !4528, file: !2508, line: 1641, type: !185)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !2508, line: 1640, column: 24)
!4529 = distinct !DILexicalBlock(scope: !4524, file: !2508, line: 1640, column: 8)
!4530 = !DILocalVariable(name: "nj_len", scope: !4457, file: !2508, line: 1722, type: !185)
!4531 = !DILocalVariable(name: "pad_len", scope: !4457, file: !2508, line: 1723, type: !107)
!4532 = !DILocalVariable(name: "pad", scope: !4533, file: !2508, line: 1751, type: !120)
!4533 = distinct !DILexicalBlock(scope: !4534, file: !2508, line: 1750, column: 26)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !2508, line: 1750, column: 8)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !2508, line: 1747, column: 18)
!4536 = distinct !DILexicalBlock(scope: !4457, file: !2508, line: 1747, column: 7)
!4537 = !DILocalVariable(name: "rc", scope: !4538, file: !2508, line: 1758, type: !107)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !2508, line: 1758, column: 7)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !2508, line: 1757, column: 21)
!4540 = distinct !DILexicalBlock(scope: !4541, file: !2508, line: 1757, column: 10)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !2508, line: 1756, column: 26)
!4542 = distinct !DILexicalBlock(scope: !4533, file: !2508, line: 1756, column: 9)
!4543 = !DILocalVariable(name: "rc", scope: !4544, file: !2508, line: 1765, type: !107)
!4544 = distinct !DILexicalBlock(scope: !4545, file: !2508, line: 1765, column: 6)
!4545 = distinct !DILexicalBlock(scope: !4533, file: !2508, line: 1764, column: 25)
!4546 = !DILocalVariable(name: "rc", scope: !4547, file: !2508, line: 1774, type: !107)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !2508, line: 1774, column: 4)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !2508, line: 1773, column: 18)
!4549 = distinct !DILexicalBlock(scope: !4457, file: !2508, line: 1773, column: 7)
!4550 = !DILocalVariable(name: "rc", scope: !4551, file: !2508, line: 1819, type: !107)
!4551 = distinct !DILexicalBlock(scope: !4552, file: !2508, line: 1819, column: 5)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !2508, line: 1818, column: 44)
!4553 = distinct !DILexicalBlock(scope: !4554, file: !2508, line: 1818, column: 8)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !2508, line: 1817, column: 10)
!4555 = distinct !DILexicalBlock(scope: !4457, file: !2508, line: 1777, column: 7)
!4556 = !DILocalVariable(name: "rc", scope: !4557, file: !2508, line: 1823, type: !107)
!4557 = distinct !DILexicalBlock(scope: !4558, file: !2508, line: 1823, column: 5)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !2508, line: 1822, column: 26)
!4559 = distinct !DILexicalBlock(scope: !4554, file: !2508, line: 1822, column: 8)
!4560 = !DILocalVariable(name: "rc", scope: !4561, file: !2508, line: 1828, type: !107)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !2508, line: 1828, column: 5)
!4562 = distinct !DILexicalBlock(scope: !4554, file: !2508, line: 1827, column: 26)
!4563 = !DILocalVariable(name: "rc", scope: !4564, file: !2508, line: 1831, type: !107)
!4564 = distinct !DILexicalBlock(scope: !4554, file: !2508, line: 1831, column: 4)
!4565 = !DILocalVariable(name: "rc", scope: !4566, file: !2508, line: 1836, type: !107)
!4566 = distinct !DILexicalBlock(scope: !4567, file: !2508, line: 1836, column: 4)
!4567 = distinct !DILexicalBlock(scope: !4457, file: !2508, line: 1835, column: 21)
!4568 = !DILabel(scope: !4524, name: "prec_int_pad0", file: !2508, line: 1634)
!4569 = !DILocation(line: 0, scope: !4430)
!4570 = !DILocation(line: 1341, column: 2, scope: !4430)
!4571 = !DILocation(line: 1341, column: 7, scope: !4430)
!4572 = !DILocation(line: 1375, column: 2, scope: !4430)
!4573 = !DILocation(line: 1342, column: 9, scope: !4430)
!4574 = !DILocation(line: 1375, column: 9, scope: !4430)
!4575 = !DILocation(line: 1377, column: 4, scope: !4454)
!4576 = !DILocation(line: 0, scope: !4454)
!4577 = !DILocation(line: 1377, column: 4, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4454, file: !2508, line: 1377, column: 4)
!4579 = distinct !{!4579, !4572, !4580}
!4580 = !DILocation(line: 1839, column: 2, scope: !4430)
!4581 = !DILocation(line: 1392, column: 3, scope: !4457)
!4582 = !DILocation(line: 1395, column: 5, scope: !4457)
!4583 = !DILocation(line: 0, scope: !4457)
!4584 = !DILocation(line: 1409, column: 8, scope: !4457)
!4585 = !DILocation(line: 1414, column: 13, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4457, file: !2508, line: 1414, column: 7)
!4587 = !DILocation(line: 1414, column: 7, scope: !4457)
!4588 = !DILocation(line: 1415, column: 12, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4586, file: !2508, line: 1414, column: 25)
!4590 = !DILocation(line: 1417, column: 14, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4589, file: !2508, line: 1417, column: 8)
!4592 = !DILocation(line: 1417, column: 8, scope: !4589)
!4593 = !DILocation(line: 1418, column: 21, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4591, file: !2508, line: 1417, column: 19)
!4595 = !DILocation(line: 1419, column: 13, scope: !4594)
!4596 = !DILocation(line: 1420, column: 4, scope: !4594)
!4597 = !DILocation(line: 1421, column: 20, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4586, file: !2508, line: 1421, column: 14)
!4599 = !DILocation(line: 1421, column: 14, scope: !4586)
!4600 = !DILocation(line: 1431, column: 13, scope: !4515)
!4601 = !DILocation(line: 1431, column: 7, scope: !4457)
!4602 = !DILocation(line: 1432, column: 14, scope: !4514)
!4603 = !DILocation(line: 0, scope: !4514)
!4604 = !DILocation(line: 1434, column: 12, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4514, file: !2508, line: 1434, column: 8)
!4606 = !DILocation(line: 1434, column: 8, scope: !4514)
!4607 = !DILocation(line: 1435, column: 24, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4605, file: !2508, line: 1434, column: 17)
!4609 = !DILocation(line: 1436, column: 4, scope: !4608)
!4610 = !DILocation(line: 1439, column: 20, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4515, file: !2508, line: 1439, column: 14)
!4612 = !DILocation(line: 1439, column: 14, scope: !4515)
!4613 = !DILocation(line: 1469, column: 37, scope: !4457)
!4614 = !DILocation(line: 1448, column: 20, scope: !4457)
!4615 = !DILocation(line: 1449, column: 22, scope: !4457)
!4616 = !DILocation(line: 1471, column: 34, scope: !4457)
!4617 = !DILocation(line: 1478, column: 7, scope: !4457)
!4618 = !DILocation(line: 1479, column: 4, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !2508, line: 1478, column: 40)
!4620 = distinct !DILexicalBlock(scope: !4457, file: !2508, line: 1478, column: 7)
!4621 = !DILocation(line: 1484, column: 19, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4619, file: !2508, line: 1479, column: 24)
!4623 = !DILocation(line: 1484, column: 17, scope: !4622)
!4624 = !DILocation(line: 1485, column: 5, scope: !4622)
!4625 = !DILocation(line: 1492, column: 20, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4627, file: !2508, line: 1491, column: 12)
!4627 = distinct !DILexicalBlock(scope: !4622, file: !2508, line: 1487, column: 9)
!4628 = !DILocation(line: 1492, column: 18, scope: !4626)
!4629 = !DILocation(line: 1494, column: 5, scope: !4622)
!4630 = !DILocation(line: 1497, column: 23, scope: !4622)
!4631 = !DILocation(line: 1496, column: 17, scope: !4622)
!4632 = !DILocation(line: 1498, column: 5, scope: !4622)
!4633 = !DILocation(line: 1501, column: 23, scope: !4622)
!4634 = !DILocation(line: 1500, column: 17, scope: !4622)
!4635 = !DILocation(line: 1502, column: 5, scope: !4622)
!4636 = !DILocation(line: 1513, column: 23, scope: !4622)
!4637 = !DILocation(line: 1513, column: 6, scope: !4622)
!4638 = !DILocation(line: 1512, column: 17, scope: !4622)
!4639 = !DILocation(line: 1514, column: 5, scope: !4622)
!4640 = !DILocation(line: 0, scope: !4622)
!4641 = !DILocation(line: 1516, column: 8, scope: !4619)
!4642 = !DILocation(line: 1517, column: 19, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4644, file: !2508, line: 1516, column: 33)
!4644 = distinct !DILexicalBlock(scope: !4619, file: !2508, line: 1516, column: 8)
!4645 = !DILocation(line: 1517, column: 17, scope: !4643)
!4646 = !DILocation(line: 1518, column: 4, scope: !4643)
!4647 = !DILocation(line: 1519, column: 19, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !2508, line: 1518, column: 39)
!4649 = distinct !DILexicalBlock(scope: !4644, file: !2508, line: 1518, column: 15)
!4650 = !DILocation(line: 1519, column: 17, scope: !4648)
!4651 = !DILocation(line: 1520, column: 4, scope: !4648)
!4652 = !DILocation(line: 1522, column: 4, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !2508, line: 1521, column: 47)
!4654 = distinct !DILexicalBlock(scope: !4620, file: !2508, line: 1521, column: 14)
!4655 = !DILocation(line: 1527, column: 19, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4653, file: !2508, line: 1522, column: 24)
!4657 = !DILocation(line: 1527, column: 17, scope: !4656)
!4658 = !DILocation(line: 1528, column: 5, scope: !4656)
!4659 = !DILocation(line: 0, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4656, file: !2508, line: 1530, column: 9)
!4661 = !DILocation(line: 1540, column: 23, scope: !4656)
!4662 = !DILocation(line: 1539, column: 17, scope: !4656)
!4663 = !DILocation(line: 1542, column: 5, scope: !4656)
!4664 = !DILocation(line: 1545, column: 23, scope: !4656)
!4665 = !DILocation(line: 1544, column: 17, scope: !4656)
!4666 = !DILocation(line: 1547, column: 5, scope: !4656)
!4667 = !DILocation(line: 1551, column: 23, scope: !4656)
!4668 = !DILocation(line: 1551, column: 6, scope: !4656)
!4669 = !DILocation(line: 1550, column: 17, scope: !4656)
!4670 = !DILocation(line: 1552, column: 5, scope: !4656)
!4671 = !DILocation(line: 0, scope: !4656)
!4672 = !DILocation(line: 1554, column: 8, scope: !4653)
!4673 = !DILocation(line: 1555, column: 19, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !2508, line: 1554, column: 33)
!4675 = distinct !DILexicalBlock(scope: !4653, file: !2508, line: 1554, column: 8)
!4676 = !DILocation(line: 1555, column: 17, scope: !4674)
!4677 = !DILocation(line: 1556, column: 4, scope: !4674)
!4678 = !DILocation(line: 1557, column: 19, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4680, file: !2508, line: 1556, column: 39)
!4680 = distinct !DILexicalBlock(scope: !4675, file: !2508, line: 1556, column: 15)
!4681 = !DILocation(line: 1557, column: 17, scope: !4679)
!4682 = !DILocation(line: 1558, column: 4, scope: !4679)
!4683 = !DILocation(line: 0, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4685, file: !2508, line: 1560, column: 8)
!4685 = distinct !DILexicalBlock(scope: !4686, file: !2508, line: 1559, column: 45)
!4686 = distinct !DILexicalBlock(scope: !4654, file: !2508, line: 1559, column: 14)
!4687 = !DILocation(line: 1566, column: 17, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !2508, line: 1565, column: 46)
!4689 = distinct !DILexicalBlock(scope: !4686, file: !2508, line: 1565, column: 14)
!4690 = !DILocation(line: 1566, column: 15, scope: !4688)
!4691 = !DILocation(line: 1567, column: 3, scope: !4688)
!4692 = !DILocation(line: 1574, column: 21, scope: !4521)
!4693 = !DILocation(line: 1575, column: 4, scope: !4519)
!4694 = !DILocation(line: 0, scope: !4519)
!4695 = !DILocation(line: 1575, column: 4, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4519, file: !2508, line: 1575, column: 4)
!4697 = !DILocation(line: 1582, column: 17, scope: !4457)
!4698 = !DILocation(line: 1582, column: 3, scope: !4457)
!4699 = !DILocation(line: 1584, column: 4, scope: !4523)
!4700 = !DILocation(line: 0, scope: !4523)
!4701 = !DILocation(line: 1584, column: 4, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4523, file: !2508, line: 1584, column: 4)
!4703 = !DILocation(line: 1587, column: 31, scope: !4526)
!4704 = !DILocation(line: 1591, column: 18, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4526, file: !2508, line: 1591, column: 8)
!4706 = !DILocation(line: 1591, column: 8, scope: !4526)
!4707 = !DILocation(line: 1592, column: 11, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4705, file: !2508, line: 1591, column: 24)
!4709 = !DILocation(line: 0, scope: !4526)
!4710 = !DILocation(line: 1593, column: 4, scope: !4708)
!4711 = !DILocation(line: 1594, column: 11, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4705, file: !2508, line: 1593, column: 11)
!4713 = !DILocation(line: 1604, column: 51, scope: !4524)
!4714 = !DILocation(line: 1604, column: 13, scope: !4524)
!4715 = !DILocation(line: 1604, column: 11, scope: !4524)
!4716 = !DILocation(line: 1606, column: 4, scope: !4524)
!4717 = !DILocation(line: 1609, column: 14, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4524, file: !2508, line: 1609, column: 8)
!4719 = !DILocation(line: 1609, column: 8, scope: !4524)
!4720 = !DILocation(line: 1619, column: 18, scope: !4524)
!4721 = !DILocation(line: 1620, column: 13, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4524, file: !2508, line: 1620, column: 8)
!4723 = !DILocation(line: 1620, column: 8, scope: !4524)
!4724 = !DILocation(line: 1622, column: 36, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4722, file: !2508, line: 1620, column: 18)
!4726 = !DILocation(line: 1622, column: 17, scope: !4725)
!4727 = !DILocation(line: 1623, column: 4, scope: !4725)
!4728 = !DILocation(line: 1632, column: 29, scope: !4524)
!4729 = !DILocation(line: 1632, column: 10, scope: !4524)
!4730 = !DILocation(line: 1632, column: 4, scope: !4524)
!4731 = !DILocation(line: 1407, column: 8, scope: !4457)
!4732 = !DILocation(line: 0, scope: !4524)
!4733 = !DILocation(line: 1634, column: 3, scope: !4524)
!4734 = !DILocation(line: 1640, column: 18, scope: !4529)
!4735 = !DILocation(line: 1640, column: 8, scope: !4524)
!4736 = !DILocation(line: 1729, column: 13, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4457, file: !2508, line: 1729, column: 7)
!4738 = !DILocation(line: 1641, column: 22, scope: !4528)
!4739 = !DILocation(line: 0, scope: !4528)
!4740 = !DILocation(line: 1646, column: 21, scope: !4528)
!4741 = !DILocation(line: 1649, column: 13, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4528, file: !2508, line: 1649, column: 9)
!4743 = !DILocation(line: 1649, column: 9, scope: !4528)
!4744 = !DILocation(line: 1650, column: 35, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4742, file: !2508, line: 1649, column: 34)
!4746 = !DILocation(line: 1650, column: 23, scope: !4745)
!4747 = !DILocation(line: 1651, column: 5, scope: !4745)
!4748 = !DILocation(line: 1660, column: 15, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4524, file: !2508, line: 1660, column: 8)
!4750 = !DILocation(line: 1660, column: 19, scope: !4749)
!4751 = !DILocation(line: 1660, column: 8, scope: !4524)
!4752 = !DILocation(line: 1661, column: 23, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4749, file: !2508, line: 1660, column: 28)
!4754 = !DILocation(line: 1661, column: 11, scope: !4753)
!4755 = !DILocation(line: 1665, column: 22, scope: !4753)
!4756 = !DILocation(line: 1666, column: 21, scope: !4753)
!4757 = !DILocation(line: 1668, column: 5, scope: !4753)
!4758 = !DILocation(line: 1677, column: 30, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4760, file: !2508, line: 1676, column: 49)
!4760 = distinct !DILexicalBlock(scope: !4524, file: !2508, line: 1676, column: 8)
!4761 = !DILocation(line: 1677, column: 5, scope: !4759)
!4762 = !DILocation(line: 1680, column: 4, scope: !4524)
!4763 = !DILocation(line: 0, scope: !4705)
!4764 = !DILocation(line: 1597, column: 14, scope: !4526)
!4765 = !DILocation(line: 1699, column: 11, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4457, file: !2508, line: 1699, column: 7)
!4767 = !DILocation(line: 1699, column: 7, scope: !4457)
!4768 = !DILocation(line: 1725, column: 7, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4457, file: !2508, line: 1725, column: 7)
!4770 = !DILocation(line: 1725, column: 12, scope: !4769)
!4771 = !DILocation(line: 1747, column: 13, scope: !4536)
!4772 = !DILocation(line: 1747, column: 7, scope: !4457)
!4773 = !DILocation(line: 1722, column: 24, scope: !4457)
!4774 = !DILocation(line: 1725, column: 7, scope: !4457)
!4775 = !DILocation(line: 1729, column: 7, scope: !4457)
!4776 = !DILocation(line: 1736, column: 13, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4457, file: !2508, line: 1736, column: 7)
!4778 = !DILocation(line: 1735, column: 19, scope: !4457)
!4779 = !DILocation(line: 1736, column: 7, scope: !4457)
!4780 = !DILocation(line: 1748, column: 10, scope: !4535)
!4781 = !DILocation(line: 1750, column: 15, scope: !4534)
!4782 = !DILocation(line: 1750, column: 8, scope: !4535)
!4783 = !DILocation(line: 0, scope: !4533)
!4784 = !DILocation(line: 1756, column: 15, scope: !4542)
!4785 = !DILocation(line: 1756, column: 9, scope: !4533)
!4786 = !DILocation(line: 1758, column: 7, scope: !4538)
!4787 = !DILocation(line: 0, scope: !4538)
!4788 = !DILocation(line: 1758, column: 7, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4538, file: !2508, line: 1758, column: 7)
!4790 = !DILocation(line: 1764, column: 5, scope: !4533)
!4791 = !DILocation(line: 0, scope: !4535)
!4792 = !DILocation(line: 1764, column: 20, scope: !4533)
!4793 = !DILocation(line: 1764, column: 17, scope: !4533)
!4794 = !DILocation(line: 1765, column: 6, scope: !4544)
!4795 = !DILocation(line: 0, scope: !4544)
!4796 = !DILocation(line: 1765, column: 6, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4544, file: !2508, line: 1765, column: 6)
!4798 = distinct !{!4798, !4790, !4799}
!4799 = !DILocation(line: 1766, column: 5, scope: !4533)
!4800 = !DILocation(line: 1773, column: 12, scope: !4549)
!4801 = !DILocation(line: 1773, column: 7, scope: !4457)
!4802 = !DILocation(line: 1773, column: 7, scope: !4549)
!4803 = !DILocation(line: 1774, column: 4, scope: !4547)
!4804 = !DILocation(line: 0, scope: !4547)
!4805 = !DILocation(line: 1774, column: 4, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4547, file: !2508, line: 1774, column: 4)
!4807 = !DILocation(line: 1818, column: 8, scope: !4553)
!4808 = !DILocation(line: 1818, column: 27, scope: !4553)
!4809 = !DILocation(line: 1818, column: 25, scope: !4553)
!4810 = !DILocation(line: 1818, column: 8, scope: !4554)
!4811 = !DILocation(line: 1819, column: 5, scope: !4551)
!4812 = !DILocation(line: 0, scope: !4551)
!4813 = !DILocation(line: 1819, column: 5, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4551, file: !2508, line: 1819, column: 5)
!4815 = !DILocation(line: 1822, column: 14, scope: !4559)
!4816 = !DILocation(line: 1822, column: 8, scope: !4554)
!4817 = !DILocation(line: 1823, column: 5, scope: !4557)
!4818 = !DILocation(line: 0, scope: !4557)
!4819 = !DILocation(line: 1823, column: 5, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4557, file: !2508, line: 1823, column: 5)
!4821 = !DILocation(line: 1826, column: 20, scope: !4554)
!4822 = !DILocation(line: 1827, column: 4, scope: !4554)
!4823 = !DILocation(line: 0, scope: !4554)
!4824 = !DILocation(line: 1827, column: 21, scope: !4554)
!4825 = !DILocation(line: 1827, column: 18, scope: !4554)
!4826 = !DILocation(line: 1828, column: 5, scope: !4561)
!4827 = !DILocation(line: 0, scope: !4561)
!4828 = !DILocation(line: 1828, column: 5, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4561, file: !2508, line: 1828, column: 5)
!4830 = distinct !{!4830, !4822, !4831}
!4831 = !DILocation(line: 1829, column: 4, scope: !4554)
!4832 = !DILocation(line: 1831, column: 4, scope: !4564)
!4833 = !DILocation(line: 0, scope: !4564)
!4834 = !DILocation(line: 1831, column: 4, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4564, file: !2508, line: 1831, column: 4)
!4836 = !DILocation(line: 1835, column: 16, scope: !4457)
!4837 = !DILocation(line: 1835, column: 3, scope: !4457)
!4838 = !DILocation(line: 1836, column: 4, scope: !4566)
!4839 = !DILocation(line: 0, scope: !4566)
!4840 = !DILocation(line: 1836, column: 4, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4566, file: !2508, line: 1836, column: 4)
!4842 = !DILocation(line: 1837, column: 4, scope: !4567)
!4843 = distinct !{!4843, !4837, !4844}
!4844 = !DILocation(line: 1838, column: 3, scope: !4457)
!4845 = !DILocation(line: 1844, column: 1, scope: !4430)
!4846 = distinct !DISubprogram(name: "extract_conversion", scope: !2508, file: !2508, line: 642, type: !4847, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !4849)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{!118, !4503, !118}
!4849 = !{!4850, !4851}
!4850 = !DILocalVariable(name: "conv", arg: 1, scope: !4846, file: !2508, line: 642, type: !4503)
!4851 = !DILocalVariable(name: "sp", arg: 2, scope: !4846, file: !2508, line: 643, type: !118)
!4852 = !DILocation(line: 0, scope: !4846)
!4853 = !DILocation(line: 645, column: 10, scope: !4846)
!4854 = !DILocation(line: 653, column: 2, scope: !4846)
!4855 = !DILocation(line: 654, column: 6, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4846, file: !2508, line: 654, column: 6)
!4857 = !DILocation(line: 654, column: 10, scope: !4856)
!4858 = !DILocation(line: 654, column: 6, scope: !4846)
!4859 = !DILocation(line: 655, column: 24, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4856, file: !2508, line: 654, column: 18)
!4861 = !DILocation(line: 655, column: 19, scope: !4860)
!4862 = !DILocation(line: 656, column: 3, scope: !4860)
!4863 = !DILocation(line: 659, column: 7, scope: !4846)
!4864 = !DILocation(line: 660, column: 7, scope: !4846)
!4865 = !DILocation(line: 661, column: 7, scope: !4846)
!4866 = !DILocation(line: 662, column: 7, scope: !4846)
!4867 = !DILocation(line: 663, column: 7, scope: !4846)
!4868 = !DILocation(line: 665, column: 2, scope: !4846)
!4869 = !DILocation(line: 666, column: 1, scope: !4846)
!4870 = distinct !DISubprogram(name: "outs", scope: !2508, file: !2508, line: 1319, type: !4871, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !4873)
!4871 = !DISubroutineType(types: !4872)
!4872 = !{!107, !3585, !106, !118, !118}
!4873 = !{!4874, !4875, !4876, !4877, !4878, !4879}
!4874 = !DILocalVariable(name: "out", arg: 1, scope: !4870, file: !2508, line: 1319, type: !3585)
!4875 = !DILocalVariable(name: "ctx", arg: 2, scope: !4870, file: !2508, line: 1320, type: !106)
!4876 = !DILocalVariable(name: "sp", arg: 3, scope: !4870, file: !2508, line: 1321, type: !118)
!4877 = !DILocalVariable(name: "ep", arg: 4, scope: !4870, file: !2508, line: 1322, type: !118)
!4878 = !DILocalVariable(name: "count", scope: !4870, file: !2508, line: 1324, type: !185)
!4879 = !DILocalVariable(name: "rc", scope: !4880, file: !2508, line: 1327, type: !107)
!4880 = distinct !DILexicalBlock(scope: !4870, file: !2508, line: 1326, column: 45)
!4881 = !DILocation(line: 0, scope: !4870)
!4882 = !DILocation(line: 1326, column: 2, scope: !4870)
!4883 = !DILocation(line: 1324, column: 9, scope: !4870)
!4884 = !DILocation(line: 1326, column: 13, scope: !4870)
!4885 = !DILocation(line: 1326, column: 19, scope: !4870)
!4886 = !DILocation(line: 1327, column: 21, scope: !4880)
!4887 = !DILocation(line: 1326, column: 36, scope: !4870)
!4888 = !DILocation(line: 1326, column: 39, scope: !4870)
!4889 = !DILocation(line: 1327, column: 24, scope: !4880)
!4890 = !DILocation(line: 1327, column: 16, scope: !4880)
!4891 = !DILocation(line: 1327, column: 12, scope: !4880)
!4892 = !DILocation(line: 0, scope: !4880)
!4893 = !DILocation(line: 1329, column: 10, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4880, file: !2508, line: 1329, column: 7)
!4895 = !DILocation(line: 1329, column: 7, scope: !4880)
!4896 = distinct !{!4896, !4882, !4897}
!4897 = !DILocation(line: 1333, column: 2, scope: !4870)
!4898 = !DILocation(line: 1336, column: 1, scope: !4870)
!4899 = distinct !DISubprogram(name: "encode_uint", scope: !2508, file: !2508, line: 788, type: !4900, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !4902)
!4900 = !DISubroutineType(types: !4901)
!4901 = !{!193, !2530, !4503, !193, !118}
!4902 = !{!4903, !4904, !4905, !4906, !4907, !4908, !4910, !4911}
!4903 = !DILocalVariable(name: "value", arg: 1, scope: !4899, file: !2508, line: 788, type: !2530)
!4904 = !DILocalVariable(name: "conv", arg: 2, scope: !4899, file: !2508, line: 789, type: !4503)
!4905 = !DILocalVariable(name: "bps", arg: 3, scope: !4899, file: !2508, line: 790, type: !193)
!4906 = !DILocalVariable(name: "bpe", arg: 4, scope: !4899, file: !2508, line: 791, type: !118)
!4907 = !DILocalVariable(name: "upcase", scope: !4899, file: !2508, line: 793, type: !145)
!4908 = !DILocalVariable(name: "radix", scope: !4899, file: !2508, line: 794, type: !4909)
!4909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4910 = !DILocalVariable(name: "bp", scope: !4899, file: !2508, line: 795, type: !193)
!4911 = !DILocalVariable(name: "lsv", scope: !4912, file: !2508, line: 798, type: !32)
!4912 = distinct !DILexicalBlock(scope: !4899, file: !2508, line: 797, column: 5)
!4913 = !DILocation(line: 0, scope: !4899)
!4914 = !DILocation(line: 793, column: 35, scope: !4899)
!4915 = !DILocation(line: 793, column: 24, scope: !4899)
!4916 = !DILocation(line: 793, column: 16, scope: !4899)
!4917 = !DILocation(line: 794, column: 29, scope: !4899)
!4918 = !DILocation(line: 795, column: 24, scope: !4899)
!4919 = !DILocation(line: 795, column: 17, scope: !4899)
!4920 = !DILocation(line: 797, column: 2, scope: !4899)
!4921 = !DILocation(line: 802, column: 9, scope: !4912)
!4922 = !DILocation(line: 798, column: 22, scope: !4912)
!4923 = !DILocation(line: 0, scope: !4912)
!4924 = !DILocation(line: 800, column: 16, scope: !4912)
!4925 = !DILocation(line: 800, column: 11, scope: !4912)
!4926 = !DILocation(line: 800, column: 4, scope: !4912)
!4927 = !DILocation(line: 800, column: 9, scope: !4912)
!4928 = !DILocation(line: 803, column: 18, scope: !4899)
!4929 = !DILocation(line: 803, column: 24, scope: !4899)
!4930 = !DILocation(line: 803, column: 2, scope: !4912)
!4931 = distinct !{!4931, !4920, !4932}
!4932 = !DILocation(line: 803, column: 37, scope: !4899)
!4933 = !DILocation(line: 808, column: 12, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4899, file: !2508, line: 808, column: 6)
!4935 = !DILocation(line: 808, column: 6, scope: !4899)
!4936 = !DILocation(line: 809, column: 7, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4934, file: !2508, line: 808, column: 23)
!4938 = !DILocation(line: 813, column: 3, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4940, file: !2508, line: 811, column: 27)
!4940 = distinct !DILexicalBlock(scope: !4941, file: !2508, line: 811, column: 14)
!4941 = distinct !DILexicalBlock(scope: !4937, file: !2508, line: 809, column: 7)
!4942 = !DILocation(line: 0, scope: !4941)
!4943 = !DILocation(line: 818, column: 2, scope: !4899)
!4944 = distinct !DISubprogram(name: "store_count", scope: !2508, file: !2508, line: 1280, type: !4945, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !4949)
!4945 = !DISubroutineType(types: !4946)
!4946 = !{null, !4947, !106, !107}
!4947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4948, size: 32)
!4948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4470)
!4949 = !{!4950, !4951, !4952}
!4950 = !DILocalVariable(name: "conv", arg: 1, scope: !4944, file: !2508, line: 1280, type: !4947)
!4951 = !DILocalVariable(name: "dp", arg: 2, scope: !4944, file: !2508, line: 1281, type: !106)
!4952 = !DILocalVariable(name: "count", arg: 3, scope: !4944, file: !2508, line: 1282, type: !107)
!4953 = !DILocation(line: 0, scope: !4944)
!4954 = !DILocation(line: 1284, column: 38, scope: !4944)
!4955 = !DILocation(line: 1284, column: 2, scope: !4944)
!4956 = !DILocation(line: 1286, column: 4, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4944, file: !2508, line: 1284, column: 50)
!4958 = !DILocation(line: 1286, column: 14, scope: !4957)
!4959 = !DILocation(line: 1287, column: 3, scope: !4957)
!4960 = !DILocation(line: 1289, column: 24, scope: !4957)
!4961 = !DILocation(line: 1289, column: 22, scope: !4957)
!4962 = !DILocation(line: 1290, column: 3, scope: !4957)
!4963 = !DILocation(line: 1292, column: 18, scope: !4957)
!4964 = !DILocation(line: 1292, column: 4, scope: !4957)
!4965 = !DILocation(line: 1292, column: 16, scope: !4957)
!4966 = !DILocation(line: 1293, column: 3, scope: !4957)
!4967 = !DILocation(line: 1295, column: 4, scope: !4957)
!4968 = !DILocation(line: 1295, column: 15, scope: !4957)
!4969 = !DILocation(line: 1296, column: 3, scope: !4957)
!4970 = !DILocation(line: 1298, column: 22, scope: !4957)
!4971 = !DILocation(line: 1298, column: 4, scope: !4957)
!4972 = !DILocation(line: 1298, column: 20, scope: !4957)
!4973 = !DILocation(line: 1299, column: 3, scope: !4957)
!4974 = !DILocation(line: 1301, column: 21, scope: !4957)
!4975 = !DILocation(line: 1301, column: 4, scope: !4957)
!4976 = !DILocation(line: 1301, column: 19, scope: !4957)
!4977 = !DILocation(line: 1302, column: 3, scope: !4957)
!4978 = !DILocation(line: 1304, column: 4, scope: !4957)
!4979 = !DILocation(line: 1304, column: 17, scope: !4957)
!4980 = !DILocation(line: 1305, column: 3, scope: !4957)
!4981 = !DILocation(line: 1307, column: 4, scope: !4957)
!4982 = !DILocation(line: 1307, column: 20, scope: !4957)
!4983 = !DILocation(line: 1308, column: 3, scope: !4957)
!4984 = !DILocation(line: 1316, column: 1, scope: !4944)
!4985 = distinct !DISubprogram(name: "isupper", scope: !4986, file: !4986, line: 16, type: !214, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !4987)
!4986 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4987 = !{!4988}
!4988 = !DILocalVariable(name: "a", arg: 1, scope: !4985, file: !4986, line: 16, type: !107)
!4989 = !DILocation(line: 0, scope: !4985)
!4990 = !DILocation(line: 18, column: 29, scope: !4985)
!4991 = !DILocation(line: 18, column: 45, scope: !4985)
!4992 = !DILocation(line: 18, column: 2, scope: !4985)
!4993 = distinct !DISubprogram(name: "conversion_radix", scope: !2508, file: !2508, line: 761, type: !4994, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !4996)
!4994 = !DISubroutineType(types: !4995)
!4995 = !{!185, !120}
!4996 = !{!4997}
!4997 = !DILocalVariable(name: "specifier", arg: 1, scope: !4993, file: !2508, line: 761, type: !120)
!4998 = !DILocation(line: 0, scope: !4993)
!4999 = !DILocation(line: 763, column: 2, scope: !4993)
!5000 = !DILocation(line: 770, column: 3, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4993, file: !2508, line: 763, column: 21)
!5002 = !DILocation(line: 774, column: 3, scope: !5001)
!5003 = !DILocation(line: 0, scope: !5001)
!5004 = !DILocation(line: 776, column: 1, scope: !4993)
!5005 = distinct !DISubprogram(name: "extract_flags", scope: !2508, file: !2508, line: 339, type: !4847, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !5006)
!5006 = !{!5007, !5008, !5009}
!5007 = !DILocalVariable(name: "conv", arg: 1, scope: !5005, file: !2508, line: 339, type: !4503)
!5008 = !DILocalVariable(name: "sp", arg: 2, scope: !5005, file: !2508, line: 340, type: !118)
!5009 = !DILocalVariable(name: "loop", scope: !5005, file: !2508, line: 342, type: !145)
!5010 = !DILocation(line: 0, scope: !5005)
!5011 = !DILocation(line: 344, column: 2, scope: !5005)
!5012 = !DILocation(line: 345, column: 11, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5005, file: !2508, line: 344, column: 5)
!5014 = !DILocation(line: 345, column: 3, scope: !5013)
!5015 = !DILocation(line: 351, column: 4, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5013, file: !2508, line: 345, column: 16)
!5017 = !DILocation(line: 354, column: 4, scope: !5016)
!5018 = !DILocation(line: 357, column: 4, scope: !5016)
!5019 = !DILocation(line: 360, column: 4, scope: !5016)
!5020 = !DILocation(line: 0, scope: !5016)
!5021 = !DILocation(line: 370, column: 12, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5005, file: !2508, line: 370, column: 6)
!5023 = !DILocation(line: 370, column: 22, scope: !5022)
!5024 = !DILocation(line: 371, column: 19, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5022, file: !2508, line: 370, column: 42)
!5026 = !DILocation(line: 372, column: 2, scope: !5025)
!5027 = !DILocation(line: 376, column: 2, scope: !5005)
!5028 = distinct !DISubprogram(name: "extract_width", scope: !2508, file: !2508, line: 388, type: !4847, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !5029)
!5029 = !{!5030, !5031, !5032, !5033}
!5030 = !DILocalVariable(name: "conv", arg: 1, scope: !5028, file: !2508, line: 388, type: !4503)
!5031 = !DILocalVariable(name: "sp", arg: 2, scope: !5028, file: !2508, line: 389, type: !118)
!5032 = !DILocalVariable(name: "wp", scope: !5028, file: !2508, line: 398, type: !118)
!5033 = !DILocalVariable(name: "width", scope: !5028, file: !2508, line: 399, type: !185)
!5034 = !DILocation(line: 0, scope: !5028)
!5035 = !DILocation(line: 391, column: 8, scope: !5028)
!5036 = !DILocation(line: 391, column: 22, scope: !5028)
!5037 = !DILocation(line: 393, column: 6, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5028, file: !2508, line: 393, column: 6)
!5039 = !DILocation(line: 393, column: 10, scope: !5038)
!5040 = !DILocation(line: 393, column: 6, scope: !5028)
!5041 = !DILocation(line: 394, column: 20, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5038, file: !2508, line: 393, column: 18)
!5043 = !DILocation(line: 395, column: 10, scope: !5042)
!5044 = !DILocation(line: 395, column: 3, scope: !5042)
!5045 = !DILocation(line: 399, column: 17, scope: !5028)
!5046 = !DILocation(line: 401, column: 6, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5028, file: !2508, line: 401, column: 6)
!5048 = !DILocation(line: 401, column: 9, scope: !5047)
!5049 = !DILocation(line: 401, column: 6, scope: !5028)
!5050 = !DILocation(line: 402, column: 23, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5047, file: !2508, line: 401, column: 16)
!5052 = !DILocation(line: 403, column: 9, scope: !5051)
!5053 = !DILocation(line: 403, column: 21, scope: !5051)
!5054 = !DILocation(line: 405, column: 11, scope: !5051)
!5055 = !DILocation(line: 404, column: 21, scope: !5051)
!5056 = !DILocation(line: 406, column: 2, scope: !5051)
!5057 = !DILocation(line: 409, column: 1, scope: !5028)
!5058 = distinct !DISubprogram(name: "extract_prec", scope: !2508, file: !2508, line: 420, type: !4847, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !5059)
!5059 = !{!5060, !5061, !5062}
!5060 = !DILocalVariable(name: "conv", arg: 1, scope: !5058, file: !2508, line: 420, type: !4503)
!5061 = !DILocalVariable(name: "sp", arg: 2, scope: !5058, file: !2508, line: 421, type: !118)
!5062 = !DILocalVariable(name: "prec", scope: !5058, file: !2508, line: 435, type: !185)
!5063 = !DILocation(line: 0, scope: !5058)
!5064 = !DILocation(line: 423, column: 24, scope: !5058)
!5065 = !DILocation(line: 423, column: 28, scope: !5058)
!5066 = !DILocation(line: 423, column: 8, scope: !5058)
!5067 = !DILocation(line: 423, column: 21, scope: !5058)
!5068 = !DILocation(line: 425, column: 6, scope: !5058)
!5069 = !DILocation(line: 428, column: 2, scope: !5058)
!5070 = !DILocation(line: 430, column: 6, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5058, file: !2508, line: 430, column: 6)
!5072 = !DILocation(line: 430, column: 10, scope: !5071)
!5073 = !DILocation(line: 430, column: 6, scope: !5058)
!5074 = !DILocation(line: 431, column: 19, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5071, file: !2508, line: 430, column: 18)
!5076 = !DILocation(line: 432, column: 10, scope: !5075)
!5077 = !DILocation(line: 432, column: 3, scope: !5075)
!5078 = !DILocation(line: 435, column: 16, scope: !5058)
!5079 = !DILocation(line: 437, column: 8, scope: !5058)
!5080 = !DILocation(line: 437, column: 19, scope: !5058)
!5081 = !DILocation(line: 439, column: 10, scope: !5058)
!5082 = !DILocation(line: 438, column: 20, scope: !5058)
!5083 = !DILocation(line: 441, column: 9, scope: !5058)
!5084 = !DILocation(line: 442, column: 1, scope: !5058)
!5085 = distinct !DISubprogram(name: "extract_length", scope: !2508, file: !2508, line: 453, type: !4847, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !5086)
!5086 = !{!5087, !5088}
!5087 = !DILocalVariable(name: "conv", arg: 1, scope: !5085, file: !2508, line: 453, type: !4503)
!5088 = !DILocalVariable(name: "sp", arg: 2, scope: !5085, file: !2508, line: 454, type: !118)
!5089 = !DILocation(line: 0, scope: !5085)
!5090 = !DILocation(line: 456, column: 10, scope: !5085)
!5091 = !DILocation(line: 456, column: 2, scope: !5085)
!5092 = !DILocation(line: 458, column: 8, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5094, file: !2508, line: 458, column: 7)
!5094 = distinct !DILexicalBlock(scope: !5085, file: !2508, line: 456, column: 15)
!5095 = !DILocation(line: 458, column: 7, scope: !5093)
!5096 = !DILocation(line: 458, column: 13, scope: !5093)
!5097 = !DILocation(line: 0, scope: !5093)
!5098 = !DILocation(line: 458, column: 7, scope: !5094)
!5099 = !DILocation(line: 459, column: 21, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5093, file: !2508, line: 458, column: 21)
!5101 = !DILocation(line: 460, column: 4, scope: !5100)
!5102 = !DILocation(line: 461, column: 3, scope: !5100)
!5103 = !DILocation(line: 462, column: 21, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5093, file: !2508, line: 461, column: 10)
!5105 = !DILocation(line: 466, column: 8, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5094, file: !2508, line: 466, column: 7)
!5107 = !DILocation(line: 466, column: 7, scope: !5106)
!5108 = !DILocation(line: 466, column: 13, scope: !5106)
!5109 = !DILocation(line: 0, scope: !5106)
!5110 = !DILocation(line: 466, column: 7, scope: !5094)
!5111 = !DILocation(line: 467, column: 21, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5106, file: !2508, line: 466, column: 21)
!5113 = !DILocation(line: 468, column: 4, scope: !5112)
!5114 = !DILocation(line: 469, column: 3, scope: !5112)
!5115 = !DILocation(line: 470, column: 21, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5106, file: !2508, line: 469, column: 10)
!5117 = !DILocation(line: 474, column: 9, scope: !5094)
!5118 = !DILocation(line: 474, column: 20, scope: !5094)
!5119 = !DILocation(line: 475, column: 3, scope: !5094)
!5120 = !DILocation(line: 476, column: 3, scope: !5094)
!5121 = !DILocation(line: 478, column: 9, scope: !5094)
!5122 = !DILocation(line: 478, column: 20, scope: !5094)
!5123 = !DILocation(line: 479, column: 3, scope: !5094)
!5124 = !DILocation(line: 480, column: 3, scope: !5094)
!5125 = !DILocation(line: 482, column: 9, scope: !5094)
!5126 = !DILocation(line: 482, column: 20, scope: !5094)
!5127 = !DILocation(line: 483, column: 3, scope: !5094)
!5128 = !DILocation(line: 484, column: 3, scope: !5094)
!5129 = !DILocation(line: 486, column: 9, scope: !5094)
!5130 = !DILocation(line: 486, column: 20, scope: !5094)
!5131 = !DILocation(line: 487, column: 3, scope: !5094)
!5132 = !DILocation(line: 492, column: 21, scope: !5094)
!5133 = !DILocation(line: 493, column: 3, scope: !5094)
!5134 = !DILocation(line: 495, column: 9, scope: !5094)
!5135 = !DILocation(line: 495, column: 20, scope: !5094)
!5136 = !DILocation(line: 496, column: 3, scope: !5094)
!5137 = !DILocation(line: 498, column: 2, scope: !5085)
!5138 = distinct !DISubprogram(name: "extract_specifier", scope: !2508, file: !2508, line: 513, type: !4847, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !5139)
!5139 = !{!5140, !5141, !5142, !5143}
!5140 = !DILocalVariable(name: "conv", arg: 1, scope: !5138, file: !2508, line: 513, type: !4503)
!5141 = !DILocalVariable(name: "sp", arg: 2, scope: !5138, file: !2508, line: 514, type: !118)
!5142 = !DILocalVariable(name: "unsupported", scope: !5138, file: !2508, line: 516, type: !145)
!5143 = !DILabel(scope: !5144, name: "int_conv", file: !2508, line: 526)
!5144 = distinct !DILexicalBlock(scope: !5138, file: !2508, line: 520, column: 27)
!5145 = !DILocation(line: 0, scope: !5138)
!5146 = !DILocation(line: 518, column: 20, scope: !5138)
!5147 = !DILocation(line: 518, column: 8, scope: !5138)
!5148 = !DILocation(line: 518, column: 18, scope: !5138)
!5149 = !DILocation(line: 520, column: 2, scope: !5138)
!5150 = !DILocation(line: 525, column: 3, scope: !5144)
!5151 = !DILocation(line: 0, scope: !5144)
!5152 = !DILocation(line: 526, column: 1, scope: !5144)
!5153 = !DILocation(line: 528, column: 24, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5144, file: !2508, line: 528, column: 7)
!5155 = !DILocation(line: 528, column: 7, scope: !5144)
!5156 = !DILocation(line: 535, column: 23, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5144, file: !2508, line: 535, column: 7)
!5158 = !DILocation(line: 535, column: 7, scope: !5144)
!5159 = !DILocation(line: 536, column: 36, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5157, file: !2508, line: 535, column: 31)
!5161 = !DILocation(line: 537, column: 3, scope: !5160)
!5162 = !DILocation(line: 570, column: 9, scope: !5144)
!5163 = !DILocation(line: 570, column: 23, scope: !5144)
!5164 = !DILocation(line: 575, column: 4, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5166, file: !2508, line: 573, column: 48)
!5166 = distinct !DILexicalBlock(scope: !5144, file: !2508, line: 573, column: 7)
!5167 = !DILocation(line: 603, column: 9, scope: !5144)
!5168 = !DILocation(line: 603, column: 23, scope: !5144)
!5169 = !DILocation(line: 605, column: 24, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5144, file: !2508, line: 605, column: 7)
!5171 = !DILocation(line: 605, column: 7, scope: !5144)
!5172 = !DILocation(line: 612, column: 9, scope: !5144)
!5173 = !DILocation(line: 612, column: 23, scope: !5144)
!5174 = !DILocation(line: 619, column: 24, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5144, file: !2508, line: 619, column: 7)
!5176 = !DILocation(line: 619, column: 7, scope: !5144)
!5177 = !DILocation(line: 625, column: 9, scope: !5144)
!5178 = !DILocation(line: 625, column: 17, scope: !5144)
!5179 = !DILocation(line: 626, column: 3, scope: !5144)
!5180 = !DILocation(line: 629, column: 20, scope: !5138)
!5181 = !DILocation(line: 629, column: 8, scope: !5138)
!5182 = !DILocation(line: 518, column: 23, scope: !5138)
!5183 = !DILocation(line: 631, column: 2, scope: !5138)
!5184 = distinct !DISubprogram(name: "extract_decimal", scope: !2508, file: !2508, line: 318, type: !5185, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !5187)
!5185 = !DISubroutineType(types: !5186)
!5186 = !{!185, !184}
!5187 = !{!5188, !5189, !5190}
!5188 = !DILocalVariable(name: "str", arg: 1, scope: !5184, file: !2508, line: 318, type: !184)
!5189 = !DILocalVariable(name: "sp", scope: !5184, file: !2508, line: 320, type: !118)
!5190 = !DILocalVariable(name: "val", scope: !5184, file: !2508, line: 321, type: !185)
!5191 = !DILocation(line: 0, scope: !5184)
!5192 = !DILocation(line: 320, column: 19, scope: !5184)
!5193 = !DILocation(line: 323, column: 37, scope: !5184)
!5194 = !DILocation(line: 323, column: 17, scope: !5184)
!5195 = !DILocation(line: 323, column: 9, scope: !5184)
!5196 = !DILocation(line: 323, column: 2, scope: !5184)
!5197 = !DILocation(line: 324, column: 13, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5184, file: !2508, line: 323, column: 43)
!5199 = !DILocation(line: 324, column: 24, scope: !5198)
!5200 = !DILocation(line: 324, column: 19, scope: !5198)
!5201 = !DILocation(line: 324, column: 27, scope: !5198)
!5202 = distinct !{!5202, !5196, !5203}
!5203 = !DILocation(line: 325, column: 2, scope: !5184)
!5204 = !DILocation(line: 326, column: 7, scope: !5184)
!5205 = !DILocation(line: 327, column: 2, scope: !5184)
!5206 = distinct !DISubprogram(name: "isdigit", scope: !4986, file: !4986, line: 43, type: !214, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !5207)
!5207 = !{!5208}
!5208 = !DILocalVariable(name: "a", arg: 1, scope: !5206, file: !4986, line: 43, type: !107)
!5209 = !DILocation(line: 0, scope: !5206)
!5210 = !DILocation(line: 45, column: 29, scope: !5206)
!5211 = !DILocation(line: 45, column: 45, scope: !5206)
!5212 = !DILocation(line: 45, column: 2, scope: !5206)
!5213 = distinct !DISubprogram(name: "assert_post_action", scope: !5214, file: !5214, line: 26, type: !5215, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !5217)
!5214 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5215 = !DISubroutineType(types: !5216)
!5216 = !{null, !118, !32}
!5217 = !{!5218, !5219}
!5218 = !DILocalVariable(name: "file", arg: 1, scope: !5213, file: !5214, line: 26, type: !118)
!5219 = !DILocalVariable(name: "line", arg: 2, scope: !5213, file: !5214, line: 26, type: !32)
!5220 = !DILocation(line: 0, scope: !5213)
!5221 = !DILocation(line: 43, column: 2, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5213, file: !5214, line: 43, column: 2)
!5223 = !{i64 2154752470, i64 2154752486, i64 2154752512, i64 2154752540, i64 2154752560}
!5224 = !DILocation(line: 44, column: 1, scope: !5213)
!5225 = distinct !DISubprogram(name: "assert_print", scope: !5214, file: !5214, line: 46, type: !4195, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !5226)
!5226 = !{!5227, !5228}
!5227 = !DILocalVariable(name: "fmt", arg: 1, scope: !5225, file: !5214, line: 46, type: !118)
!5228 = !DILocalVariable(name: "ap", scope: !5225, file: !5214, line: 48, type: !5229)
!5229 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3205, line: 99, baseType: !5230)
!5230 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3205, line: 40, baseType: !5231)
!5231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5214, baseType: !5232)
!5232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5233)
!5233 = !{!5234}
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5232, file: !5214, line: 48, baseType: !106, size: 32)
!5235 = !DILocation(line: 0, scope: !5225)
!5236 = !DILocation(line: 48, column: 2, scope: !5225)
!5237 = !DILocation(line: 48, column: 10, scope: !5225)
!5238 = !DILocation(line: 50, column: 2, scope: !5225)
!5239 = !DILocation(line: 52, column: 2, scope: !5225)
!5240 = !DILocation(line: 54, column: 2, scope: !5225)
!5241 = !DILocation(line: 55, column: 1, scope: !5225)
!5242 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5243, file: !5243, line: 9, type: !3082, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2540, retainedNodes: !2156)
!5243 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!5244 = !DILocation(line: 11, column: 1, scope: !5242)
!5245 = !{i64 2147567116, i64 2147567159, i64 2147567199}
!5246 = !DILocation(line: 12, column: 1, scope: !5242)
!5247 = !{i64 2147571343, i64 2147571386, i64 2147571426}
!5248 = !DILocation(line: 13, column: 1, scope: !5242)
!5249 = !{i64 2147571552, i64 2147571595, i64 2147571635}
!5250 = !DILocation(line: 14, column: 1, scope: !5242)
!5251 = !{i64 2147571721, i64 2147571764, i64 2147571804}
!5252 = !DILocation(line: 15, column: 1, scope: !5242)
!5253 = !{i64 2147571884, i64 2147571927, i64 2147571967}
!5254 = !DILocation(line: 16, column: 1, scope: !5242)
!5255 = !{i64 2147572068, i64 2147572111, i64 2147572151}
!5256 = !DILocation(line: 17, column: 1, scope: !5242)
!5257 = !{i64 2147572247, i64 2147572290, i64 2147572330}
!5258 = !DILocation(line: 18, column: 1, scope: !5242)
!5259 = !{i64 2147572489, i64 2147572532, i64 2147572572}
!5260 = !DILocation(line: 19, column: 1, scope: !5242)
!5261 = !{i64 2147572724, i64 2147572767, i64 2147572807}
!5262 = !DILocation(line: 20, column: 1, scope: !5242)
!5263 = !{i64 2147572911, i64 2147572954, i64 2147572994}
!5264 = !DILocation(line: 21, column: 1, scope: !5242)
!5265 = !{i64 2147573127, i64 2147573170, i64 2147573210}
!5266 = !DILocation(line: 22, column: 1, scope: !5242)
!5267 = !{i64 2147573330, i64 2147573373, i64 2147573413}
!5268 = !DILocation(line: 23, column: 1, scope: !5242)
!5269 = !{i64 2147573533, i64 2147573576, i64 2147573616}
!5270 = !DILocation(line: 24, column: 1, scope: !5242)
!5271 = !{i64 2147573708, i64 2147573751, i64 2147573791}
!5272 = !DILocation(line: 25, column: 1, scope: !5242)
!5273 = !{i64 2147573916, i64 2147573959, i64 2147573999}
!5274 = !DILocation(line: 26, column: 1, scope: !5242)
!5275 = !{i64 2147574120, i64 2147574163, i64 2147574203}
!5276 = !DILocation(line: 27, column: 1, scope: !5242)
!5277 = !{i64 2147574313, i64 2147574356, i64 2147574396}
!5278 = !DILocation(line: 28, column: 1, scope: !5242)
!5279 = !{i64 2147574515, i64 2147574558, i64 2147574598}
!5280 = !DILocation(line: 29, column: 1, scope: !5242)
!5281 = !{i64 2147574714, i64 2147574757, i64 2147574797}
!5282 = !DILocation(line: 30, column: 1, scope: !5242)
!5283 = !{i64 2147574941, i64 2147574984, i64 2147575024}
!5284 = !DILocation(line: 31, column: 1, scope: !5242)
!5285 = !{i64 2147575143, i64 2147575186, i64 2147575226}
!5286 = !DILocation(line: 32, column: 1, scope: !5242)
!5287 = !{i64 2147575358, i64 2147575401, i64 2147575441}
!5288 = !DILocation(line: 33, column: 1, scope: !5242)
!5289 = !{i64 2147575575, i64 2147575618, i64 2147575658}
!5290 = !DILocation(line: 34, column: 1, scope: !5242)
!5291 = !{i64 2147575747, i64 2147575790, i64 2147575830}
!5292 = !DILocation(line: 35, column: 1, scope: !5242)
!5293 = !{i64 2147575949, i64 2147575992, i64 2147576032}
!5294 = !DILocation(line: 36, column: 1, scope: !5242)
!5295 = !{i64 2147576175, i64 2147576218, i64 2147576258}
!5296 = !DILocation(line: 37, column: 1, scope: !5242)
!5297 = !{i64 2147576374, i64 2147576417, i64 2147576457}
!5298 = !DILocation(line: 38, column: 1, scope: !5242)
!5299 = !{i64 2147576549, i64 2147576592, i64 2147576632}
!5300 = !DILocation(line: 39, column: 1, scope: !5242)
!5301 = !{i64 2147576802, i64 2147576845, i64 2147576885}
!5302 = !DILocation(line: 40, column: 1, scope: !5242)
!5303 = !{i64 2147577043, i64 2147577086, i64 2147577126}
!5304 = !DILocation(line: 41, column: 1, scope: !5242)
!5305 = !{i64 2147577278, i64 2147577321, i64 2147577361}
!5306 = !DILocation(line: 42, column: 1, scope: !5242)
!5307 = !{i64 2147577510, i64 2147577553, i64 2147577593}
!5308 = !DILocation(line: 43, column: 1, scope: !5242)
!5309 = !{i64 2147577736, i64 2147577779, i64 2147577819}
!5310 = !DILocation(line: 44, column: 1, scope: !5242)
!5311 = !{i64 2147577962, i64 2147578005, i64 2147578045}
!5312 = !DILocation(line: 45, column: 1, scope: !5242)
!5313 = !{i64 2147578188, i64 2147578231, i64 2147578271}
!5314 = !DILocation(line: 46, column: 1, scope: !5242)
!5315 = !{i64 2147578423, i64 2147578466, i64 2147578506}
!5316 = !DILocation(line: 47, column: 1, scope: !5242)
!5317 = !{i64 2147578649, i64 2147578692, i64 2147578732}
!5318 = !DILocation(line: 48, column: 1, scope: !5242)
!5319 = !{i64 2147578896, i64 2147578939, i64 2147578979}
!5320 = !DILocation(line: 49, column: 1, scope: !5242)
!5321 = !{i64 2147579125, i64 2147579168, i64 2147579208}
!5322 = !DILocation(line: 50, column: 1, scope: !5242)
!5323 = !{i64 2147579357, i64 2147579400, i64 2147579440}
!5324 = !DILocation(line: 51, column: 1, scope: !5242)
!5325 = !{i64 2147579601, i64 2147579644, i64 2147579684}
!5326 = !DILocation(line: 52, column: 1, scope: !5242)
!5327 = !{i64 2147579839, i64 2147579882, i64 2147579922}
!5328 = !DILocation(line: 53, column: 1, scope: !5242)
!5329 = !{i64 2147584174, i64 2147584217, i64 2147584257}
!5330 = !DILocation(line: 54, column: 1, scope: !5242)
!5331 = !{i64 2147584412, i64 2147584455, i64 2147584495}
!5332 = !DILocation(line: 55, column: 1, scope: !5242)
!5333 = !{i64 2147584665, i64 2147584708, i64 2147584748}
!5334 = !DILocation(line: 56, column: 1, scope: !5242)
!5335 = !{i64 2147584909, i64 2147584952, i64 2147584992}
!5336 = !DILocation(line: 57, column: 1, scope: !5242)
!5337 = !{i64 2147585144, i64 2147585187, i64 2147585227}
!5338 = !DILocation(line: 58, column: 1, scope: !5242)
!5339 = !{i64 2147585394, i64 2147585437, i64 2147585477}
!5340 = !DILocation(line: 59, column: 1, scope: !5242)
!5341 = !{i64 2147585641, i64 2147585684, i64 2147585724}
!5342 = !DILocation(line: 60, column: 1, scope: !5242)
!5343 = !{i64 2147585876, i64 2147585919, i64 2147585959}
!5344 = !DILocation(line: 61, column: 1, scope: !5242)
!5345 = !{i64 2147586111, i64 2147586154, i64 2147586194}
!5346 = !DILocation(line: 62, column: 1, scope: !5242)
!5347 = !{i64 2147586346, i64 2147586389, i64 2147586429}
!5348 = !DILocation(line: 63, column: 1, scope: !5242)
!5349 = !{i64 2147586584, i64 2147586627, i64 2147586667}
!5350 = !DILocation(line: 64, column: 1, scope: !5242)
!5351 = !{i64 2147586825, i64 2147586868, i64 2147586908}
!5352 = !DILocation(line: 65, column: 1, scope: !5242)
!5353 = !{i64 2147587105, i64 2147587148, i64 2147587188}
!5354 = !DILocation(line: 66, column: 1, scope: !5242)
!5355 = !{i64 2147587364, i64 2147587407, i64 2147587447}
!5356 = !DILocation(line: 67, column: 1, scope: !5242)
!5357 = !{i64 2147587593, i64 2147587636, i64 2147587676}
!5358 = !DILocation(line: 68, column: 1, scope: !5242)
!5359 = !{i64 2147587819, i64 2147587862, i64 2147587902}
!5360 = !DILocation(line: 69, column: 1, scope: !5242)
!5361 = !{i64 2147588057, i64 2147588100, i64 2147588140}
!5362 = !DILocation(line: 70, column: 1, scope: !5242)
!5363 = !{i64 2147588286, i64 2147588329, i64 2147588369}
!5364 = !DILocation(line: 71, column: 1, scope: !5242)
!5365 = !{i64 2147588494, i64 2147588537, i64 2147588577}
!5366 = !DILocation(line: 72, column: 1, scope: !5242)
!5367 = !{i64 2147588705, i64 2147588748, i64 2147588788}
!5368 = !DILocation(line: 73, column: 1, scope: !5242)
!5369 = !{i64 2147588940, i64 2147588983, i64 2147589023}
!5370 = !DILocation(line: 74, column: 1, scope: !5242)
!5371 = !{i64 2147589169, i64 2147589212, i64 2147589252}
!5372 = !DILocation(line: 75, column: 1, scope: !5242)
!5373 = !{i64 2147589386, i64 2147589429, i64 2147589469}
!5374 = !DILocation(line: 76, column: 1, scope: !5242)
!5375 = !{i64 2147589615, i64 2147589658, i64 2147589698}
!5376 = !DILocation(line: 77, column: 1, scope: !5242)
!5377 = !{i64 2147589853, i64 2147589896, i64 2147589936}
!5378 = !DILocation(line: 78, column: 1, scope: !5242)
!5379 = !{i64 2147590085, i64 2147590128, i64 2147590168}
!5380 = !DILocation(line: 79, column: 1, scope: !5242)
!5381 = !{i64 2147590311, i64 2147590354, i64 2147590394}
!5382 = !DILocation(line: 80, column: 1, scope: !5242)
!5383 = !{i64 2147590528, i64 2147590571, i64 2147590611}
!5384 = !DILocation(line: 81, column: 1, scope: !5242)
!5385 = !{i64 2147590760, i64 2147590803, i64 2147590843}
!5386 = !DILocation(line: 82, column: 1, scope: !5242)
!5387 = !{i64 2147590986, i64 2147591029, i64 2147591069}
!5388 = !DILocation(line: 83, column: 1, scope: !5242)
!5389 = !{i64 2147591200, i64 2147591243, i64 2147591283}
!5390 = !DILocation(line: 84, column: 1, scope: !5242)
!5391 = !{i64 2147591420, i64 2147591463, i64 2147591503}
!5392 = !DILocation(line: 85, column: 1, scope: !5242)
!5393 = !{i64 2147591652, i64 2147591695, i64 2147591735}
!5394 = !DILocation(line: 86, column: 1, scope: !5242)
!5395 = !{i64 2147591860, i64 2147591903, i64 2147591943}
!5396 = !DILocation(line: 87, column: 1, scope: !5242)
!5397 = !{i64 2147592065, i64 2147592108, i64 2147592148}
!5398 = !DILocation(line: 88, column: 1, scope: !5242)
!5399 = !{i64 2147596343, i64 2147596386, i64 2147596426}
!5400 = !DILocation(line: 89, column: 1, scope: !5242)
!5401 = !{i64 2147596557, i64 2147596600, i64 2147596640}
!5402 = !DILocation(line: 90, column: 1, scope: !5242)
!5403 = !{i64 2147596783, i64 2147596826, i64 2147596866}
!5404 = !DILocation(line: 91, column: 1, scope: !5242)
!5405 = !{i64 2147597003, i64 2147597046, i64 2147597086}
!5406 = !DILocation(line: 92, column: 1, scope: !5242)
!5407 = !{i64 2147597208, i64 2147597251, i64 2147597291}
!5408 = !DILocation(line: 93, column: 1, scope: !5242)
!5409 = !{i64 2147597440, i64 2147597483, i64 2147597523}
!5410 = !DILocation(line: 94, column: 1, scope: !5242)
!5411 = !{i64 2147597675, i64 2147597718, i64 2147597758}
!5412 = !DILocation(line: 95, column: 1, scope: !5242)
!5413 = !{i64 2147597925, i64 2147597968, i64 2147598008}
!5414 = !DILocation(line: 96, column: 1, scope: !5242)
!5415 = !{i64 2147598175, i64 2147598218, i64 2147598258}
!5416 = !DILocation(line: 97, column: 1, scope: !5242)
!5417 = !{i64 2147598413, i64 2147598456, i64 2147598496}
!5418 = !DILocation(line: 98, column: 1, scope: !5242)
!5419 = !{i64 2147598624, i64 2147598667, i64 2147598707}
!5420 = !DILocation(line: 99, column: 1, scope: !5242)
!5421 = !{i64 2147598841, i64 2147598884, i64 2147598924}
!5422 = !DILocation(line: 100, column: 1, scope: !5242)
!5423 = !{i64 2147599037, i64 2147599080, i64 2147599120}
!5424 = !DILocation(line: 101, column: 1, scope: !5242)
!5425 = !{i64 2147599239, i64 2147599282, i64 2147599322}
!5426 = !DILocation(line: 102, column: 1, scope: !5242)
!5427 = !{i64 2147599432, i64 2147599475, i64 2147599515}
!5428 = !DILocation(line: 103, column: 1, scope: !5242)
!5429 = !{i64 2147599640, i64 2147599683, i64 2147599723}
!5430 = !DILocation(line: 104, column: 1, scope: !5242)
!5431 = !{i64 2147599836, i64 2147599879, i64 2147599919}
!5432 = !DILocation(line: 105, column: 1, scope: !5242)
!5433 = !{i64 2147600044, i64 2147600087, i64 2147600127}
!5434 = !DILocation(line: 106, column: 1, scope: !5242)
!5435 = !{i64 2147600255, i64 2147600298, i64 2147600338}
!5436 = !DILocation(line: 107, column: 1, scope: !5242)
!5437 = !{i64 2147600454, i64 2147600497, i64 2147600537}
!5438 = !DILocation(line: 108, column: 1, scope: !5242)
!5439 = !{i64 2147600629, i64 2147600672, i64 2147600712}
!5440 = !DILocation(line: 109, column: 1, scope: !5242)
!5441 = !{i64 2147600813, i64 2147600856, i64 2147600896}
!5442 = !DILocation(line: 110, column: 1, scope: !5242)
!5443 = !{i64 2147601015, i64 2147601058, i64 2147601098}
!5444 = !DILocation(line: 111, column: 1, scope: !5242)
!5445 = !{i64 2147601214, i64 2147601257, i64 2147601297}
!5446 = !DILocation(line: 112, column: 1, scope: !5242)
!5447 = !{i64 2147601419, i64 2147601462, i64 2147601502}
!5448 = !DILocation(line: 113, column: 1, scope: !5242)
!5449 = !{i64 2147601612, i64 2147601655, i64 2147601695}
!5450 = !DILocation(line: 114, column: 1, scope: !5242)
!5451 = !{i64 2147601778, i64 2147601821, i64 2147601861}
!5452 = !DILocation(line: 115, column: 1, scope: !5242)
!5453 = !{i64 2147601962, i64 2147602005, i64 2147602045}
!5454 = !DILocation(line: 116, column: 1, scope: !5242)
!5455 = !{i64 2147602152, i64 2147602195, i64 2147602235}
!5456 = !DILocation(line: 117, column: 1, scope: !5242)
!5457 = !{i64 2147602336, i64 2147602379, i64 2147602419}
!5458 = !DILocation(line: 118, column: 1, scope: !5242)
!5459 = !{i64 2147602550, i64 2147602593, i64 2147602633}
!5460 = !DILocation(line: 119, column: 1, scope: !5242)
!5461 = !{i64 2147602761, i64 2147602804, i64 2147602844}
!5462 = !DILocation(line: 120, column: 1, scope: !5242)
!5463 = !{i64 2147602984, i64 2147603027, i64 2147603067}
!5464 = !DILocation(line: 121, column: 1, scope: !5242)
!5465 = !{i64 2147603168, i64 2147603211, i64 2147603251}
!5466 = !DILocation(line: 122, column: 1, scope: !5242)
!5467 = !{i64 2147603382, i64 2147603425, i64 2147603465}
!5468 = !DILocation(line: 123, column: 1, scope: !5242)
!5469 = !{i64 2147603548, i64 2147603591, i64 2147603631}
!5470 = !DILocation(line: 124, column: 1, scope: !5242)
!5471 = !{i64 2147603729, i64 2147603772, i64 2147603812}
!5472 = !DILocation(line: 125, column: 1, scope: !5242)
!5473 = !{i64 2147603922, i64 2147603965, i64 2147604005}
!5474 = !DILocation(line: 126, column: 1, scope: !5242)
!5475 = !{i64 2147604148, i64 2147604191, i64 2147604231}
!5476 = !DILocation(line: 127, column: 1, scope: !5242)
!5477 = !{i64 2147604362, i64 2147604405, i64 2147604445}
!5478 = !DILocation(line: 128, column: 1, scope: !5242)
!5479 = !{i64 2147604588, i64 2147604631, i64 2147604671}
!5480 = !DILocation(line: 129, column: 1, scope: !5242)
!5481 = !{i64 2147604805, i64 2147604848, i64 2147604888}
!5482 = !DILocation(line: 130, column: 1, scope: !5242)
!5483 = !{i64 2147605082, i64 2147605125, i64 2147605165}
!5484 = !DILocation(line: 131, column: 1, scope: !5242)
!5485 = !{i64 2147605308, i64 2147605351, i64 2147605391}
!5486 = !DILocation(line: 132, column: 1, scope: !5242)
!5487 = !{i64 2147609577, i64 2147609620, i64 2147609660}
!5488 = !DILocation(line: 133, column: 1, scope: !5242)
!5489 = !{i64 2147609773, i64 2147609816, i64 2147609856}
!5490 = !DILocation(line: 134, column: 1, scope: !5242)
!5491 = !{i64 2147610038, i64 2147610081, i64 2147610121}
!5492 = !DILocation(line: 135, column: 1, scope: !5242)
!5493 = !{i64 2147610252, i64 2147610295, i64 2147610335}
!5494 = !DILocation(line: 136, column: 1, scope: !5242)
!5495 = !{i64 2147610427, i64 2147610470, i64 2147610510}
!5496 = !DILocation(line: 137, column: 1, scope: !5242)
!5497 = !{i64 2147610681, i64 2147610724, i64 2147610764}
!5498 = !DILocation(line: 138, column: 1, scope: !5242)
!5499 = !{i64 2147610880, i64 2147610923, i64 2147610963}
!5500 = !DILocation(line: 139, column: 1, scope: !5242)
!5501 = !{i64 2147611122, i64 2147611165, i64 2147611205}
!5502 = !DILocation(line: 140, column: 1, scope: !5242)
!5503 = !{i64 2147611285, i64 2147611328, i64 2147611368}
!5504 = !DILocation(line: 141, column: 1, scope: !5242)
!5505 = !{i64 2147611472, i64 2147611515, i64 2147611555}
!5506 = !DILocation(line: 142, column: 1, scope: !5242)
!5507 = !{i64 2147611680, i64 2147611723, i64 2147611763}
!5508 = !DILocation(line: 143, column: 1, scope: !5242)
!5509 = !{i64 2147611876, i64 2147611919, i64 2147611959}
!5510 = !DILocation(line: 144, column: 1, scope: !5242)
!5511 = !{i64 2147612069, i64 2147612112, i64 2147612152}
!5512 = !DILocation(line: 145, column: 1, scope: !5242)
!5513 = !{i64 2147612252, i64 2147612295, i64 2147612335}
!5514 = !DILocation(line: 146, column: 1, scope: !5242)
!5515 = !{i64 2147612466, i64 2147612509, i64 2147612549}
!5516 = !DILocation(line: 147, column: 1, scope: !5242)
!5517 = !{i64 2147612677, i64 2147612720, i64 2147612760}
!5518 = !DILocation(line: 148, column: 1, scope: !5242)
!5519 = !{i64 2147612897, i64 2147612940, i64 2147612980}
!5520 = !DILocation(line: 149, column: 1, scope: !5242)
!5521 = !{i64 2147613104, i64 2147613147, i64 2147613187}
!5522 = !DILocation(line: 150, column: 1, scope: !5242)
!5523 = !{i64 2147613377, i64 2147613420, i64 2147613460}
!5524 = !DILocation(line: 151, column: 1, scope: !5242)
!5525 = !{i64 2147613625, i64 2147613668, i64 2147613708}
!5526 = !DILocation(line: 152, column: 1, scope: !5242)
!5527 = !{i64 2147613824, i64 2147613867, i64 2147613907}
!5528 = !DILocation(line: 153, column: 1, scope: !5242)
!5529 = !{i64 2147614059, i64 2147614102, i64 2147614142}
!5530 = !DILocation(line: 154, column: 1, scope: !5242)
!5531 = !{i64 2147614309, i64 2147614352, i64 2147614392}
!5532 = !DILocation(line: 155, column: 1, scope: !5242)
!5533 = !{i64 2147614511, i64 2147614554, i64 2147614594}
!5534 = !DILocation(line: 156, column: 1, scope: !5242)
!5535 = !{i64 2147614734, i64 2147614777, i64 2147614817}
!5536 = !DILocation(line: 157, column: 1, scope: !5242)
!5537 = !{i64 2147614948, i64 2147614991, i64 2147615031}
!5538 = !DILocation(line: 158, column: 1, scope: !5242)
!5539 = !{i64 2147615192, i64 2147615235, i64 2147615275}
!5540 = !DILocation(line: 159, column: 1, scope: !5242)
!5541 = !{i64 2147615421, i64 2147615464, i64 2147615504}
!5542 = !DILocation(line: 160, column: 1, scope: !5242)
!5543 = !{i64 2147615650, i64 2147615693, i64 2147615733}
!5544 = !DILocation(line: 161, column: 1, scope: !5242)
!5545 = !{i64 2147615858, i64 2147615901, i64 2147615941}
!5546 = !DILocation(line: 162, column: 1, scope: !5242)
!5547 = !{i64 2147616096, i64 2147616139, i64 2147616179}
!5548 = !DILocation(line: 163, column: 1, scope: !5242)
!5549 = !{i64 2147616322, i64 2147616365, i64 2147616405}
!5550 = !DILocation(line: 164, column: 1, scope: !5242)
!5551 = !{i64 2147616581, i64 2147616624, i64 2147616664}
!5552 = !DILocation(line: 165, column: 1, scope: !5242)
!5553 = !{i64 2147616801, i64 2147616844, i64 2147616884}
!5554 = !DILocation(line: 166, column: 1, scope: !5242)
!5555 = !{i64 2147617033, i64 2147617076, i64 2147617116}
!5556 = !DILocation(line: 167, column: 1, scope: !5242)
!5557 = !{i64 2147617274, i64 2147617317, i64 2147617357}
!5558 = !DILocation(line: 168, column: 1, scope: !5242)
!5559 = !{i64 2147617515, i64 2147617558, i64 2147617598}
!5560 = !DILocation(line: 169, column: 1, scope: !5242)
!5561 = !{i64 2147617738, i64 2147617781, i64 2147617821}
!5562 = !DILocation(line: 170, column: 1, scope: !5242)
!5563 = !{i64 2147622016, i64 2147622059, i64 2147622099}
!5564 = !DILocation(line: 171, column: 1, scope: !5242)
!5565 = !{i64 2147622257, i64 2147622300, i64 2147622340}
!5566 = !DILocation(line: 172, column: 1, scope: !5242)
!5567 = !{i64 2147622444, i64 2147622487, i64 2147622527}
!5568 = !DILocation(line: 173, column: 1, scope: !5242)
!5569 = !{i64 2147622631, i64 2147622674, i64 2147622714}
!5570 = !DILocation(line: 174, column: 1, scope: !5242)
!5571 = !{i64 2147622794, i64 2147622837, i64 2147622877}
!5572 = !DILocation(line: 175, column: 1, scope: !5242)
!5573 = !{i64 2147622999, i64 2147623042, i64 2147623082}
!5574 = !DILocation(line: 176, column: 1, scope: !5242)
!5575 = !{i64 2147623192, i64 2147623235, i64 2147623275}
!5576 = !DILocation(line: 177, column: 1, scope: !5242)
!5577 = !{i64 2147623451, i64 2147623494, i64 2147623534}
!5578 = !DILocation(line: 178, column: 1, scope: !5242)
!5579 = !{i64 2147623674, i64 2147623717, i64 2147623757}
!5580 = !DILocation(line: 179, column: 1, scope: !5242)
!5581 = !{i64 2147623903, i64 2147623946, i64 2147623986}
!5582 = !DILocation(line: 180, column: 1, scope: !5242)
!5583 = !{i64 2147624117, i64 2147624160, i64 2147624200}
!5584 = !DILocation(line: 181, column: 1, scope: !5242)
!5585 = !{i64 2147624319, i64 2147624362, i64 2147624402}
!5586 = !DILocation(line: 182, column: 1, scope: !5242)
!5587 = !{i64 2147624515, i64 2147624558, i64 2147624598}
!5588 = !DILocation(line: 183, column: 1, scope: !5242)
!5589 = !{i64 2147624727, i64 2147624770, i64 2147624810}
!5590 = !DILocation(line: 184, column: 1, scope: !5242)
!5591 = !{i64 2147624948, i64 2147624991, i64 2147625031}
!5592 = !DILocation(line: 185, column: 1, scope: !5242)
!5593 = !{i64 2147625162, i64 2147625205, i64 2147625245}
!5594 = !DILocation(line: 186, column: 1, scope: !5242)
!5595 = !{i64 2147625352, i64 2147625395, i64 2147625435}
!5596 = !DILocation(line: 187, column: 1, scope: !5242)
!5597 = !{i64 2147625551, i64 2147625594, i64 2147625634}
!5598 = !DILocation(line: 188, column: 1, scope: !5242)
!5599 = !{i64 2147625756, i64 2147625799, i64 2147625839}
!5600 = !DILocation(line: 189, column: 1, scope: !5242)
!5601 = !{i64 2147625976, i64 2147626019, i64 2147626059}
!5602 = !DILocation(line: 190, column: 1, scope: !5242)
!5603 = !{i64 2147626178, i64 2147626221, i64 2147626261}
!5604 = !DILocation(line: 191, column: 1, scope: !5242)
!5605 = !{i64 2147626377, i64 2147626420, i64 2147626460}
!5606 = !DILocation(line: 192, column: 1, scope: !5242)
!5607 = !{i64 2147626582, i64 2147626625, i64 2147626665}
!5608 = !DILocation(line: 193, column: 1, scope: !5242)
!5609 = !{i64 2147626751, i64 2147626794, i64 2147626834}
!5610 = !DILocation(line: 194, column: 1, scope: !5242)
!5611 = !{i64 2147626935, i64 2147626978, i64 2147627018}
!5612 = !DILocation(line: 195, column: 1, scope: !5242)
!5613 = !{i64 2147627119, i64 2147627162, i64 2147627202}
!5614 = !DILocation(line: 196, column: 1, scope: !5242)
!5615 = !{i64 2147627306, i64 2147627349, i64 2147627389}
!5616 = !DILocation(line: 197, column: 1, scope: !5242)
!5617 = !{i64 2147627490, i64 2147627533, i64 2147627573}
!5618 = !DILocation(line: 198, column: 1, scope: !5242)
!5619 = !{i64 2147627677, i64 2147627720, i64 2147627760}
!5620 = !DILocation(line: 199, column: 1, scope: !5242)
!5621 = !{i64 2147627889, i64 2147627932, i64 2147627972}
!5622 = !DILocation(line: 200, column: 1, scope: !5242)
!5623 = !{i64 2147628127, i64 2147628170, i64 2147628210}
!5624 = !DILocation(line: 201, column: 1, scope: !5242)
!5625 = !{i64 2147628357, i64 2147628400, i64 2147628440}
!5626 = !DILocation(line: 202, column: 1, scope: !5242)
!5627 = !{i64 2147628586, i64 2147628629, i64 2147628669}
!5628 = !DILocation(line: 203, column: 1, scope: !5242)
!5629 = !{i64 2147628773, i64 2147628816, i64 2147628856}
!5630 = !DILocation(line: 204, column: 1, scope: !5242)
!5631 = !{i64 2147628969, i64 2147629012, i64 2147629052}
!5632 = !DILocation(line: 205, column: 1, scope: !5242)
!5633 = !{i64 2147629177, i64 2147629220, i64 2147629260}
!5634 = !DILocation(line: 206, column: 1, scope: !5242)
!5635 = !{i64 2147629389, i64 2147629432, i64 2147629472}
!5636 = !DILocation(line: 207, column: 1, scope: !5242)
!5637 = !{i64 2147629588, i64 2147629631, i64 2147629671}
!5638 = !DILocation(line: 208, column: 1, scope: !5242)
!5639 = !{i64 2147629826, i64 2147629869, i64 2147629909}
!5640 = !DILocation(line: 209, column: 1, scope: !5242)
!5641 = !{i64 2147630022, i64 2147630065, i64 2147630105}
!5642 = !DILocation(line: 210, column: 1, scope: !5242)
!5643 = !{i64 2147630224, i64 2147630267, i64 2147630307}
!5644 = !DILocation(line: 211, column: 1, scope: !5242)
!5645 = !{i64 2147630417, i64 2147630460, i64 2147630500}
!5646 = !DILocation(line: 212, column: 1, scope: !5242)
!5647 = !{i64 2147630651, i64 2147630694, i64 2147630734}
!5648 = !DILocation(line: 213, column: 1, scope: !5242)
!5649 = !{i64 2147630814, i64 2147630857, i64 2147630897}
!5650 = !DILocation(line: 214, column: 1, scope: !5242)
!5651 = !{i64 2147631053, i64 2147631096, i64 2147631136}
!5652 = !DILocation(line: 215, column: 1, scope: !5242)
!5653 = !{i64 2147635353, i64 2147635396, i64 2147635436}
!5654 = !DILocation(line: 216, column: 1, scope: !5242)
!5655 = !{i64 2147635589, i64 2147635632, i64 2147635672}
!5656 = !DILocation(line: 217, column: 1, scope: !5242)
!5657 = !{i64 2147635819, i64 2147635862, i64 2147635902}
!5658 = !DILocation(line: 218, column: 1, scope: !5242)
!5659 = !{i64 2147636006, i64 2147636049, i64 2147636089}
!5660 = !DILocation(line: 219, column: 1, scope: !5242)
!5661 = !{i64 2147636205, i64 2147636248, i64 2147636288}
!5662 = !DILocation(line: 220, column: 1, scope: !5242)
!5663 = !{i64 2147636476, i64 2147636519, i64 2147636559}
!5664 = !DILocation(line: 221, column: 1, scope: !5242)
!5665 = !{i64 2147636651, i64 2147636694, i64 2147636734}
!5666 = !DILocation(line: 222, column: 1, scope: !5242)
!5667 = !{i64 2147636885, i64 2147636928, i64 2147636968}
!5668 = !DILocation(line: 223, column: 1, scope: !5242)
!5669 = !{i64 2147637093, i64 2147637136, i64 2147637176}
!5670 = !DILocation(line: 224, column: 1, scope: !5242)
!5671 = !{i64 2147637311, i64 2147637354, i64 2147637394}
!5672 = !DILocation(line: 225, column: 1, scope: !5242)
!5673 = !{i64 2147637501, i64 2147637544, i64 2147637584}
!5674 = !DILocation(line: 226, column: 1, scope: !5242)
!5675 = !{i64 2147637733, i64 2147637776, i64 2147637816}
!5676 = !DILocation(line: 227, column: 1, scope: !5242)
!5677 = !{i64 2147637953, i64 2147637996, i64 2147638036}
!5678 = !DILocation(line: 228, column: 1, scope: !5242)
!5679 = !{i64 2147638149, i64 2147638192, i64 2147638232}
!5680 = !DILocation(line: 229, column: 1, scope: !5242)
!5681 = !{i64 2147638355, i64 2147638398, i64 2147638438}
!5682 = !DILocation(line: 230, column: 1, scope: !5242)
!5683 = !{i64 2147638560, i64 2147638603, i64 2147638643}
!5684 = !DILocation(line: 231, column: 1, scope: !5242)
!5685 = !{i64 2147638774, i64 2147638817, i64 2147638857}
!5686 = !DILocation(line: 232, column: 1, scope: !5242)
!5687 = !{i64 2147639000, i64 2147639043, i64 2147639083}
!5688 = !DILocation(line: 233, column: 1, scope: !5242)
!5689 = !{i64 2147639208, i64 2147639251, i64 2147639291}
!5690 = !DILocation(line: 234, column: 1, scope: !5242)
!5691 = !{i64 2147639404, i64 2147639447, i64 2147639487}
!5692 = !DILocation(line: 235, column: 1, scope: !5242)
!5693 = !{i64 2147639636, i64 2147639679, i64 2147639719}
!5694 = !DILocation(line: 236, column: 1, scope: !5242)
!5695 = !{i64 2147639820, i64 2147639863, i64 2147639903}
!5696 = !DILocation(line: 237, column: 1, scope: !5242)
!5697 = !{i64 2147640029, i64 2147640072, i64 2147640112}
!5698 = !DILocation(line: 238, column: 1, scope: !5242)
!5699 = !{i64 2147640237, i64 2147640280, i64 2147640320}
!5700 = !DILocation(line: 239, column: 1, scope: !5242)
!5701 = !{i64 2147640433, i64 2147640476, i64 2147640516}
!5702 = !DILocation(line: 240, column: 1, scope: !5242)
!5703 = !{i64 2147640617, i64 2147640660, i64 2147640700}
!5704 = !DILocation(line: 241, column: 1, scope: !5242)
!5705 = !{i64 2147640843, i64 2147640886, i64 2147640926}
!5706 = !DILocation(line: 242, column: 1, scope: !5242)
!5707 = !{i64 2147641069, i64 2147641112, i64 2147641152}
!5708 = !DILocation(line: 243, column: 1, scope: !5242)
!5709 = !{i64 2147641295, i64 2147641338, i64 2147641378}
!5710 = !DILocation(line: 244, column: 1, scope: !5242)
!5711 = !{i64 2147641521, i64 2147641564, i64 2147641604}
!5712 = !DILocation(line: 245, column: 1, scope: !5242)
!5713 = !{i64 2147641747, i64 2147641790, i64 2147641830}
!5714 = !DILocation(line: 246, column: 1, scope: !5242)
!5715 = !{i64 2147641979, i64 2147642022, i64 2147642062}
!5716 = !DILocation(line: 247, column: 1, scope: !5242)
!5717 = !{i64 2147642217, i64 2147642260, i64 2147642300}
!5718 = !DILocation(line: 248, column: 1, scope: !5242)
!5719 = !{i64 2147642437, i64 2147642480, i64 2147642520}
!5720 = !DILocation(line: 249, column: 1, scope: !5242)
!5721 = !{i64 2147642681, i64 2147642724, i64 2147642764}
!5722 = !DILocation(line: 250, column: 1, scope: !5242)
!5723 = !{i64 2147642922, i64 2147642965, i64 2147643005}
!5724 = !DILocation(line: 251, column: 1, scope: !5242)
!5725 = !{i64 2147643157, i64 2147643200, i64 2147643240}
!5726 = !DILocation(line: 252, column: 1, scope: !5242)
!5727 = !{i64 2147643389, i64 2147643432, i64 2147643472}
!5728 = !DILocation(line: 253, column: 1, scope: !5242)
!5729 = !{i64 2147643591, i64 2147643634, i64 2147643674}
!5730 = !DILocation(line: 254, column: 1, scope: !5242)
!5731 = !{i64 2147643841, i64 2147643884, i64 2147643924}
!5732 = !DILocation(line: 255, column: 1, scope: !5242)
!5733 = !{i64 2147648140, i64 2147648183, i64 2147648223}
!5734 = !DILocation(line: 256, column: 1, scope: !5242)
!5735 = !{i64 2147648348, i64 2147648391, i64 2147648431}
!5736 = !DILocation(line: 257, column: 1, scope: !5242)
!5737 = !{i64 2147648544, i64 2147648587, i64 2147648627}
!5738 = !DILocation(line: 258, column: 1, scope: !5242)
!5739 = !{i64 2147648728, i64 2147648771, i64 2147648811}
!5740 = !DILocation(line: 259, column: 1, scope: !5242)
!5741 = !{i64 2147648945, i64 2147648988, i64 2147649028}
!5742 = !DILocation(line: 260, column: 1, scope: !5242)
!5743 = !{i64 2147649150, i64 2147649193, i64 2147649233}
!5744 = !DILocation(line: 261, column: 1, scope: !5242)
!5745 = !{i64 2147649385, i64 2147649428, i64 2147649468}
!5746 = !DILocation(line: 262, column: 1, scope: !5242)
!5747 = !{i64 2147649608, i64 2147649651, i64 2147649691}
!5748 = !DILocation(line: 263, column: 1, scope: !5242)
!5749 = !{i64 2147649832, i64 2147649875, i64 2147649915}
!5750 = !DILocation(line: 264, column: 1, scope: !5242)
!5751 = !{i64 2147650070, i64 2147650113, i64 2147650153}
!5752 = !DILocation(line: 265, column: 1, scope: !5242)
!5753 = !{i64 2147650308, i64 2147650351, i64 2147650391}
!5754 = !DILocation(line: 266, column: 1, scope: !5242)
!5755 = !{i64 2147650525, i64 2147650568, i64 2147650608}
!5756 = !DILocation(line: 267, column: 1, scope: !5242)
!5757 = !{i64 2147650730, i64 2147650773, i64 2147650813}
!5758 = !DILocation(line: 268, column: 1, scope: !5242)
!5759 = !{i64 2147650923, i64 2147650966, i64 2147651006}
!5760 = !DILocation(line: 269, column: 1, scope: !5242)
!5761 = !{i64 2147651176, i64 2147651219, i64 2147651259}
!5762 = !DILocation(line: 270, column: 1, scope: !5242)
!5763 = !{i64 2147651384, i64 2147651427, i64 2147651467}
!5764 = !DILocation(line: 271, column: 1, scope: !5242)
!5765 = !{i64 2147651580, i64 2147651623, i64 2147651663}
!5766 = !DILocation(line: 272, column: 1, scope: !5242)
!5767 = !{i64 2147651794, i64 2147651837, i64 2147651877}
!5768 = !DILocation(line: 273, column: 1, scope: !5242)
!5769 = !{i64 2147652002, i64 2147652045, i64 2147652085}
!5770 = !DILocation(line: 274, column: 1, scope: !5242)
!5771 = !{i64 2147652192, i64 2147652235, i64 2147652275}
!5772 = !DILocation(line: 275, column: 1, scope: !5242)
!5773 = !{i64 2147652406, i64 2147652449, i64 2147652489}
!5774 = !DILocation(line: 276, column: 1, scope: !5242)
!5775 = !{i64 2147652668, i64 2147652711, i64 2147652751}
!5776 = !DILocation(line: 277, column: 1, scope: !5242)
!5777 = !{i64 2147652879, i64 2147652922, i64 2147652962}
!5778 = !DILocation(line: 278, column: 1, scope: !5242)
!5779 = !{i64 2147653123, i64 2147653166, i64 2147653206}
!5780 = !DILocation(line: 279, column: 1, scope: !5242)
!5781 = !{i64 2147653334, i64 2147653377, i64 2147653417}
!5782 = !DILocation(line: 280, column: 1, scope: !5242)
!5783 = !{i64 2147653563, i64 2147653606, i64 2147653646}
!5784 = !DILocation(line: 281, column: 1, scope: !5242)
!5785 = !{i64 2147653828, i64 2147653871, i64 2147653911}
!5786 = !DILocation(line: 282, column: 1, scope: !5242)
!5787 = !{i64 2147654033, i64 2147654076, i64 2147654116}
!5788 = !DILocation(line: 283, column: 1, scope: !5242)
!5789 = !{i64 2147654229, i64 2147654272, i64 2147654312}
!5790 = !DILocation(line: 284, column: 1, scope: !5242)
!5791 = !{i64 2147654452, i64 2147654495, i64 2147654535}
!5792 = !DILocation(line: 285, column: 1, scope: !5242)
!5793 = !{i64 2147654615, i64 2147654658, i64 2147654698}
!5794 = !DILocation(line: 286, column: 1, scope: !5242)
!5795 = !{i64 2147654820, i64 2147654863, i64 2147654903}
!5796 = !DILocation(line: 287, column: 1, scope: !5242)
!5797 = !{i64 2147655040, i64 2147655083, i64 2147655123}
!5798 = !DILocation(line: 288, column: 1, scope: !5242)
!5799 = !{i64 2147655254, i64 2147655297, i64 2147655337}
!5800 = !DILocation(line: 289, column: 1, scope: !5242)
!5801 = !{i64 2147655498, i64 2147655541, i64 2147655581}
!5802 = !DILocation(line: 290, column: 1, scope: !5242)
!5803 = !{i64 2147655730, i64 2147655773, i64 2147655813}
!5804 = !DILocation(line: 291, column: 1, scope: !5242)
!5805 = !{i64 2147655944, i64 2147655987, i64 2147656027}
!5806 = !DILocation(line: 292, column: 1, scope: !5242)
!5807 = !{i64 2147656155, i64 2147656198, i64 2147656238}
!5808 = !DILocation(line: 293, column: 1, scope: !5242)
!5809 = !{i64 2147656348, i64 2147656391, i64 2147656431}
!5810 = !DILocation(line: 294, column: 1, scope: !5242)
!5811 = !{i64 2147656547, i64 2147656590, i64 2147656630}
!5812 = !DILocation(line: 295, column: 1, scope: !5242)
!5813 = !{i64 2147656719, i64 2147656762, i64 2147656802}
!5814 = !DILocation(line: 296, column: 1, scope: !5242)
!5815 = !{i64 2147660973, i64 2147661016, i64 2147661056}
!5816 = !DILocation(line: 297, column: 1, scope: !5242)
!5817 = !{i64 2147661145, i64 2147661188, i64 2147661228}
!5818 = !DILocation(line: 298, column: 1, scope: !5242)
!5819 = !{i64 2147661335, i64 2147661378, i64 2147661418}
!5820 = !DILocation(line: 299, column: 1, scope: !5242)
!5821 = !{i64 2147661528, i64 2147661571, i64 2147661611}
!5822 = !DILocation(line: 300, column: 1, scope: !5242)
!5823 = !{i64 2147661724, i64 2147661767, i64 2147661807}
!5824 = !DILocation(line: 301, column: 1, scope: !5242)
!5825 = !{i64 2147661887, i64 2147661930, i64 2147661970}
!5826 = !DILocation(line: 302, column: 1, scope: !5242)
!5827 = !{i64 2147662089, i64 2147662132, i64 2147662172}
!5828 = !DILocation(line: 303, column: 1, scope: !5242)
!5829 = !{i64 2147662300, i64 2147662343, i64 2147662383}
!5830 = !DILocation(line: 304, column: 1, scope: !5242)
!5831 = !{i64 2147662505, i64 2147662548, i64 2147662588}
!5832 = !DILocation(line: 305, column: 1, scope: !5242)
!5833 = !{i64 2147662713, i64 2147662756, i64 2147662796}
!5834 = !DILocation(line: 306, column: 1, scope: !5242)
!5835 = !{i64 2147662906, i64 2147662949, i64 2147662989}
!5836 = !DILocation(line: 307, column: 1, scope: !5242)
!5837 = !{i64 2147663144, i64 2147663187, i64 2147663227}
!5838 = !DILocation(line: 308, column: 1, scope: !5242)
!5839 = !{i64 2147663331, i64 2147663374, i64 2147663414}
!5840 = !DILocation(line: 309, column: 1, scope: !5242)
!5841 = !{i64 2147663500, i64 2147663543, i64 2147663583}
!5842 = !DILocation(line: 310, column: 1, scope: !5242)
!5843 = !{i64 2147663693, i64 2147663736, i64 2147663776}
!5844 = !DILocation(line: 311, column: 1, scope: !5242)
!5845 = !{i64 2147663898, i64 2147663941, i64 2147663981}
!5846 = !DILocation(line: 312, column: 1, scope: !5242)
!5847 = !{i64 2147664109, i64 2147664152, i64 2147664192}
!5848 = !DILocation(line: 313, column: 1, scope: !5242)
!5849 = !{i64 2147664332, i64 2147664375, i64 2147664415}
!5850 = !DILocation(line: 314, column: 1, scope: !5242)
!5851 = !{i64 2147664546, i64 2147664589, i64 2147664629}
!5852 = !DILocation(line: 315, column: 1, scope: !5242)
!5853 = !{i64 2147664764, i64 2147664807, i64 2147664847}
!5854 = !DILocation(line: 316, column: 1, scope: !5242)
!5855 = !{i64 2147664978, i64 2147665021, i64 2147665061}
!5856 = !DILocation(line: 317, column: 1, scope: !5242)
!5857 = !{i64 2147665192, i64 2147665235, i64 2147665275}
!5858 = !DILocation(line: 318, column: 1, scope: !5242)
!5859 = !{i64 2147665409, i64 2147665452, i64 2147665492}
!5860 = !DILocation(line: 319, column: 1, scope: !5242)
!5861 = !{i64 2147665623, i64 2147665666, i64 2147665706}
!5862 = !DILocation(line: 320, column: 1, scope: !5242)
!5863 = !{i64 2147665864, i64 2147665907, i64 2147665947}
!5864 = !DILocation(line: 321, column: 1, scope: !5242)
!5865 = !{i64 2147666030, i64 2147666073, i64 2147666113}
!5866 = !DILocation(line: 322, column: 1, scope: !5242)
!5867 = !{i64 2147666257, i64 2147666300, i64 2147666340}
!5868 = !DILocation(line: 323, column: 1, scope: !5242)
!5869 = !{i64 2147666474, i64 2147666517, i64 2147666557}
!5870 = !DILocation(line: 324, column: 1, scope: !5242)
!5871 = !{i64 2147666700, i64 2147666743, i64 2147666783}
!5872 = !DILocation(line: 325, column: 1, scope: !5242)
!5873 = !{i64 2147666905, i64 2147666948, i64 2147666988}
!5874 = !DILocation(line: 326, column: 1, scope: !5242)
!5875 = !{i64 2147667122, i64 2147667165, i64 2147667205}
!5876 = !DILocation(line: 327, column: 1, scope: !5242)
!5877 = !{i64 2147667414, i64 2147667457, i64 2147667497}
!5878 = !DILocation(line: 328, column: 1, scope: !5242)
!5879 = !{i64 2147667646, i64 2147667689, i64 2147667729}
!5880 = !DILocation(line: 329, column: 1, scope: !5242)
!5881 = !{i64 2147667863, i64 2147667906, i64 2147667946}
!5882 = !DILocation(line: 330, column: 1, scope: !5242)
!5883 = !{i64 2147668070, i64 2147668113, i64 2147668153}
!5884 = !DILocation(line: 331, column: 1, scope: !5242)
!5885 = !{i64 2147668271, i64 2147668314, i64 2147668354}
!5886 = !DILocation(line: 332, column: 1, scope: !5242)
!5887 = !{i64 2147668503, i64 2147668546, i64 2147668586}
!5888 = !DILocation(line: 333, column: 1, scope: !5242)
!5889 = !{i64 2147668711, i64 2147668754, i64 2147668794}
!5890 = !DILocation(line: 334, column: 1, scope: !5242)
!5891 = !{i64 2147668901, i64 2147668944, i64 2147668984}
!5892 = !DILocation(line: 335, column: 1, scope: !5242)
!5893 = !{i64 2147669127, i64 2147669170, i64 2147669210}
!5894 = !DILocation(line: 336, column: 1, scope: !5242)
!5895 = !{i64 2147669316, i64 2147669359, i64 2147669399}
!5896 = !DILocation(line: 337, column: 1, scope: !5242)
!5897 = !{i64 2147669587, i64 2147669630, i64 2147669670}
!5898 = !DILocation(line: 338, column: 1, scope: !5242)
!5899 = !{i64 2147669807, i64 2147669850, i64 2147669890}
!5900 = !DILocation(line: 339, column: 1, scope: !5242)
!5901 = !{i64 2147674121, i64 2147674164, i64 2147674204}
!5902 = !DILocation(line: 340, column: 1, scope: !5242)
!5903 = !{i64 2147674329, i64 2147674372, i64 2147674412}
!5904 = !DILocation(line: 341, column: 1, scope: !5242)
!5905 = !{i64 2147674561, i64 2147674604, i64 2147674644}
!5906 = !DILocation(line: 342, column: 1, scope: !5242)
!5907 = !{i64 2147674772, i64 2147674815, i64 2147674855}
!5908 = !DILocation(line: 343, column: 1, scope: !5242)
!5909 = !{i64 2147674962, i64 2147675005, i64 2147675045}
!5910 = !DILocation(line: 344, column: 1, scope: !5242)
!5911 = !{i64 2147675176, i64 2147675219, i64 2147675259}
!5912 = !DILocation(line: 345, column: 1, scope: !5242)
!5913 = !{i64 2147675375, i64 2147675418, i64 2147675458}
!5914 = !DILocation(line: 346, column: 1, scope: !5242)
!5915 = !{i64 2147675562, i64 2147675605, i64 2147675645}
!5916 = !DILocation(line: 347, column: 1, scope: !5242)
!5917 = !{i64 2147675758, i64 2147675801, i64 2147675841}
!5918 = !DILocation(line: 348, column: 1, scope: !5242)
!5919 = !{i64 2147675966, i64 2147676009, i64 2147676049}
!5920 = !DILocation(line: 349, column: 1, scope: !5242)
!5921 = !{i64 2147676195, i64 2147676238, i64 2147676278}
!5922 = !DILocation(line: 350, column: 1, scope: !5242)
!5923 = !{i64 2147676397, i64 2147676440, i64 2147676480}
!5924 = !DILocation(line: 351, column: 1, scope: !5242)
!5925 = !{i64 2147676596, i64 2147676639, i64 2147676679}
!5926 = !DILocation(line: 352, column: 1, scope: !5242)
!5927 = !{i64 2147676813, i64 2147676856, i64 2147676896}
!5928 = !DILocation(line: 354, column: 1, scope: !5242)
!5929 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !235, file: !235, line: 30, type: !242, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5930)
!5930 = !{!5931, !5932}
!5931 = !DILocalVariable(name: "arg", arg: 1, scope: !5929, file: !235, line: 30, type: !244)
!5932 = !DILocalVariable(name: "key", scope: !5929, file: !235, line: 32, type: !152)
!5933 = !DILocation(line: 0, scope: !5929)
!5934 = !DILocation(line: 37, column: 2, scope: !5929)
!5935 = !DILocation(line: 38, column: 2, scope: !5929)
!5936 = !DILocation(line: 55, column: 2, scope: !5937, inlinedAt: !5944)
!5937 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5938, file: !5938, line: 42, type: !5939, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5941)
!5938 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5939 = !DISubroutineType(types: !5940)
!5940 = !{!32}
!5941 = !{!5942, !5943}
!5942 = !DILocalVariable(name: "key", scope: !5937, file: !5938, line: 44, type: !32)
!5943 = !DILocalVariable(name: "tmp", scope: !5937, file: !5938, line: 53, type: !32)
!5944 = distinct !DILocation(line: 40, column: 8, scope: !5929)
!5945 = !{i64 2135954}
!5946 = !DILocation(line: 0, scope: !5937, inlinedAt: !5944)
!5947 = !DILocalVariable(name: "key", arg: 1, scope: !5948, file: !5938, line: 84, type: !32)
!5948 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5938, file: !5938, line: 84, type: !5949, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5951)
!5949 = !DISubroutineType(types: !5950)
!5950 = !{null, !32}
!5951 = !{!5947}
!5952 = !DILocation(line: 0, scope: !5948, inlinedAt: !5953)
!5953 = distinct !DILocation(line: 47, column: 2, scope: !5929)
!5954 = !DILocation(line: 95, column: 2, scope: !5948, inlinedAt: !5953)
!5955 = !{i64 2136771}
!5956 = !DILocation(line: 51, column: 18, scope: !5929)
!5957 = !DILocation(line: 53, column: 2, scope: !5929)
!5958 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5959, file: !5959, line: 1609, type: !3082, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2156)
!5959 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5960 = !DILocation(line: 1611, column: 3, scope: !5958)
!5961 = !DILocation(line: 1612, column: 1, scope: !5958)
!5962 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5959, file: !5959, line: 1629, type: !3082, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2156)
!5963 = !DILocation(line: 1631, column: 3, scope: !5962)
!5964 = !DILocation(line: 1632, column: 1, scope: !5962)
!5965 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !271, file: !271, line: 26, type: !277, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !268, retainedNodes: !5966)
!5966 = !{!5967}
!5967 = !DILocalVariable(name: "dev", arg: 1, scope: !5965, file: !271, line: 26, type: !279)
!5968 = !DILocation(line: 0, scope: !5965)
!5969 = !DILocation(line: 68, column: 2, scope: !5965)
!5970 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !5971, file: !5971, line: 14, type: !4195, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5972)
!5971 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5972 = !{!5973, !5974}
!5973 = !DILocalVariable(name: "fmt", arg: 1, scope: !5970, file: !5971, line: 14, type: !118)
!5974 = !DILocalVariable(name: "ap", scope: !5970, file: !5971, line: 16, type: !5975)
!5975 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3205, line: 99, baseType: !5976)
!5976 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3205, line: 40, baseType: !5977)
!5977 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5971, baseType: !5978)
!5978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5979)
!5979 = !{!5980}
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5978, file: !5971, line: 16, baseType: !106, size: 32)
!5981 = !DILocation(line: 0, scope: !5970)
!5982 = !DILocation(line: 16, column: 2, scope: !5970)
!5983 = !DILocation(line: 16, column: 10, scope: !5970)
!5984 = !DILocation(line: 18, column: 2, scope: !5970)
!5985 = !DILocation(line: 19, column: 2, scope: !5970)
!5986 = !DILocation(line: 20, column: 2, scope: !5970)
!5987 = !DILocation(line: 21, column: 1, scope: !5970)
!5988 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !5971, file: !5971, line: 23, type: !5989, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5991)
!5989 = !DISubroutineType(types: !5990)
!5990 = !{null, !118, !5975}
!5991 = !{!5992, !5993}
!5992 = !DILocalVariable(name: "fmt", arg: 1, scope: !5988, file: !5971, line: 23, type: !118)
!5993 = !DILocalVariable(name: "ap", arg: 2, scope: !5988, file: !5971, line: 23, type: !5975)
!5994 = !DILocation(line: 0, scope: !5988)
!5995 = !DILocation(line: 25, column: 2, scope: !5988)
!5996 = !DILocation(line: 26, column: 1, scope: !5988)
!5997 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !5971, file: !5971, line: 52, type: !5998, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !6000)
!5998 = !DISubroutineType(types: !5999)
!5999 = !{null, !107, !13, !185}
!6000 = !{!6001, !6002, !6003, !6004}
!6001 = !DILocalVariable(name: "level", arg: 1, scope: !5997, file: !5971, line: 52, type: !107)
!6002 = !DILocalVariable(name: "data", arg: 2, scope: !5997, file: !5971, line: 52, type: !13)
!6003 = !DILocalVariable(name: "size", arg: 3, scope: !5997, file: !5971, line: 52, type: !185)
!6004 = !DILocalVariable(name: "data_buffer", scope: !5997, file: !5971, line: 54, type: !118)
!6005 = !DILocation(line: 0, scope: !5997)
!6006 = !DILocation(line: 55, column: 14, scope: !5997)
!6007 = !DILocation(line: 55, column: 2, scope: !5997)
!6008 = !DILocation(line: 56, column: 3, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !5997, file: !5971, line: 55, column: 20)
!6010 = !DILocation(line: 57, column: 3, scope: !6009)
!6011 = !DILocation(line: 59, column: 7, scope: !6009)
!6012 = distinct !{!6012, !6007, !6013}
!6013 = !DILocation(line: 65, column: 2, scope: !5997)
!6014 = !DILocation(line: 66, column: 1, scope: !5997)
!6015 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6016, file: !6016, line: 175, type: !6017, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !6019)
!6016 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6017 = !DISubroutineType(types: !6018)
!6018 = !{!120, !107}
!6019 = !{!6020}
!6020 = !DILocalVariable(name: "level", arg: 1, scope: !6015, file: !6016, line: 175, type: !107)
!6021 = !DILocation(line: 0, scope: !6015)
!6022 = !DILocation(line: 177, column: 2, scope: !6015)
!6023 = !DILocation(line: 189, column: 1, scope: !6015)
!6024 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !5971, file: !5971, line: 28, type: !6025, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !6027)
!6025 = !DISubroutineType(types: !6026)
!6026 = !{null, !118, !185}
!6027 = !{!6028, !6029, !6030, !6032, !6034}
!6028 = !DILocalVariable(name: "data", arg: 1, scope: !6024, file: !5971, line: 28, type: !118)
!6029 = !DILocalVariable(name: "length", arg: 2, scope: !6024, file: !5971, line: 28, type: !185)
!6030 = !DILocalVariable(name: "i", scope: !6031, file: !5971, line: 30, type: !185)
!6031 = distinct !DILexicalBlock(scope: !6024, file: !5971, line: 30, column: 2)
!6032 = !DILocalVariable(name: "i", scope: !6033, file: !5971, line: 40, type: !185)
!6033 = distinct !DILexicalBlock(scope: !6024, file: !5971, line: 40, column: 2)
!6034 = !DILocalVariable(name: "c", scope: !6035, file: !5971, line: 42, type: !196)
!6035 = distinct !DILexicalBlock(scope: !6036, file: !5971, line: 41, column: 19)
!6036 = distinct !DILexicalBlock(scope: !6037, file: !5971, line: 41, column: 7)
!6037 = distinct !DILexicalBlock(scope: !6038, file: !5971, line: 40, column: 54)
!6038 = distinct !DILexicalBlock(scope: !6033, file: !5971, line: 40, column: 2)
!6039 = !DILocation(line: 0, scope: !6024)
!6040 = !DILocation(line: 0, scope: !6031)
!6041 = !DILocation(line: 30, column: 2, scope: !6031)
!6042 = !DILocation(line: 38, column: 2, scope: !6024)
!6043 = !DILocation(line: 0, scope: !6033)
!6044 = !DILocation(line: 40, column: 2, scope: !6033)
!6045 = !DILocation(line: 31, column: 9, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6047, file: !5971, line: 31, column: 7)
!6047 = distinct !DILexicalBlock(scope: !6048, file: !5971, line: 30, column: 54)
!6048 = distinct !DILexicalBlock(scope: !6031, file: !5971, line: 30, column: 2)
!6049 = !DILocation(line: 31, column: 7, scope: !6047)
!6050 = !DILocation(line: 32, column: 35, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6046, file: !5971, line: 31, column: 19)
!6052 = !DILocation(line: 32, column: 20, scope: !6051)
!6053 = !DILocation(line: 32, column: 4, scope: !6051)
!6054 = !DILocation(line: 33, column: 3, scope: !6051)
!6055 = !DILocation(line: 34, column: 4, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6046, file: !5971, line: 33, column: 10)
!6057 = !DILocation(line: 30, column: 50, scope: !6048)
!6058 = !DILocation(line: 30, column: 24, scope: !6048)
!6059 = distinct !{!6059, !6041, !6060}
!6060 = !DILocation(line: 36, column: 2, scope: !6031)
!6061 = !DILocation(line: 49, column: 2, scope: !6024)
!6062 = !DILocation(line: 50, column: 1, scope: !6024)
!6063 = !DILocation(line: 41, column: 9, scope: !6036)
!6064 = !DILocation(line: 41, column: 7, scope: !6037)
!6065 = !DILocation(line: 42, column: 22, scope: !6035)
!6066 = !DILocation(line: 0, scope: !6035)
!6067 = !DILocation(line: 44, column: 25, scope: !6035)
!6068 = !DILocation(line: 44, column: 17, scope: !6035)
!6069 = !DILocation(line: 44, column: 33, scope: !6035)
!6070 = !DILocation(line: 44, column: 4, scope: !6035)
!6071 = !DILocation(line: 45, column: 3, scope: !6035)
!6072 = !DILocation(line: 46, column: 4, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6036, file: !5971, line: 45, column: 10)
!6074 = !DILocation(line: 40, column: 50, scope: !6038)
!6075 = !DILocation(line: 40, column: 24, scope: !6038)
!6076 = distinct !{!6076, !6044, !6077}
!6077 = !DILocation(line: 48, column: 2, scope: !6033)
!6078 = distinct !DISubprogram(name: "isprint", scope: !4986, file: !4986, line: 37, type: !214, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !6079)
!6079 = !{!6080}
!6080 = !DILocalVariable(name: "c", arg: 1, scope: !6078, file: !4986, line: 37, type: !107)
!6081 = !DILocation(line: 0, scope: !6078)
!6082 = !DILocation(line: 39, column: 38, scope: !6078)
!6083 = !DILocation(line: 39, column: 2, scope: !6078)
!6084 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6085, file: !6085, line: 57, type: !6086, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !6132)
!6085 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6086 = !DISubroutineType(types: !6087)
!6087 = !{null, !32, !6088}
!6088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6089, size: 32)
!6089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6090)
!6090 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2665, line: 141, baseType: !6091)
!6091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2665, line: 97, size: 256, elements: !6092)
!6092 = !{!6093}
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6091, file: !2665, line: 107, baseType: !6094, size: 256)
!6094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2665, line: 98, size: 256, elements: !6095)
!6095 = !{!6096, !6101, !6106, !6111, !6116, !6121, !6126, !6131}
!6096 = !DIDerivedType(tag: DW_TAG_member, scope: !6094, file: !2665, line: 99, baseType: !6097, size: 32)
!6097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6094, file: !2665, line: 99, size: 32, elements: !6098)
!6098 = !{!6099, !6100}
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6097, file: !2665, line: 99, baseType: !152, size: 32)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6097, file: !2665, line: 99, baseType: !152, size: 32)
!6101 = !DIDerivedType(tag: DW_TAG_member, scope: !6094, file: !2665, line: 100, baseType: !6102, size: 32, offset: 32)
!6102 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6094, file: !2665, line: 100, size: 32, elements: !6103)
!6103 = !{!6104, !6105}
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6102, file: !2665, line: 100, baseType: !152, size: 32)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6102, file: !2665, line: 100, baseType: !152, size: 32)
!6106 = !DIDerivedType(tag: DW_TAG_member, scope: !6094, file: !2665, line: 101, baseType: !6107, size: 32, offset: 64)
!6107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6094, file: !2665, line: 101, size: 32, elements: !6108)
!6108 = !{!6109, !6110}
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6107, file: !2665, line: 101, baseType: !152, size: 32)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6107, file: !2665, line: 101, baseType: !152, size: 32)
!6111 = !DIDerivedType(tag: DW_TAG_member, scope: !6094, file: !2665, line: 102, baseType: !6112, size: 32, offset: 96)
!6112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6094, file: !2665, line: 102, size: 32, elements: !6113)
!6113 = !{!6114, !6115}
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6112, file: !2665, line: 102, baseType: !152, size: 32)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6112, file: !2665, line: 102, baseType: !152, size: 32)
!6116 = !DIDerivedType(tag: DW_TAG_member, scope: !6094, file: !2665, line: 103, baseType: !6117, size: 32, offset: 128)
!6117 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6094, file: !2665, line: 103, size: 32, elements: !6118)
!6118 = !{!6119, !6120}
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6117, file: !2665, line: 103, baseType: !152, size: 32)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6117, file: !2665, line: 103, baseType: !152, size: 32)
!6121 = !DIDerivedType(tag: DW_TAG_member, scope: !6094, file: !2665, line: 104, baseType: !6122, size: 32, offset: 160)
!6122 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6094, file: !2665, line: 104, size: 32, elements: !6123)
!6123 = !{!6124, !6125}
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6122, file: !2665, line: 104, baseType: !152, size: 32)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6122, file: !2665, line: 104, baseType: !152, size: 32)
!6126 = !DIDerivedType(tag: DW_TAG_member, scope: !6094, file: !2665, line: 105, baseType: !6127, size: 32, offset: 192)
!6127 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6094, file: !2665, line: 105, size: 32, elements: !6128)
!6128 = !{!6129, !6130}
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6127, file: !2665, line: 105, baseType: !152, size: 32)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6127, file: !2665, line: 105, baseType: !152, size: 32)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6094, file: !2665, line: 106, baseType: !152, size: 32, offset: 224)
!6132 = !{!6133, !6134}
!6133 = !DILocalVariable(name: "reason", arg: 1, scope: !6084, file: !6085, line: 57, type: !32)
!6134 = !DILocalVariable(name: "esf", arg: 2, scope: !6084, file: !6085, line: 57, type: !6088)
!6135 = !DILocation(line: 0, scope: !6084)
!6136 = !DILocation(line: 60, column: 10, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6084, file: !6085, line: 60, column: 6)
!6138 = !DILocation(line: 60, column: 6, scope: !6084)
!6139 = !DILocation(line: 61, column: 3, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6137, file: !6085, line: 60, column: 19)
!6141 = !DILocation(line: 62, column: 2, scope: !6140)
!6142 = !DILocation(line: 63, column: 2, scope: !6084)
!6143 = !DILocation(line: 64, column: 1, scope: !6084)
!6144 = distinct !DISubprogram(name: "esf_dump", scope: !6085, file: !6085, line: 20, type: !6145, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !6147)
!6145 = !DISubroutineType(types: !6146)
!6146 = !{null, !6088}
!6147 = !{!6148}
!6148 = !DILocalVariable(name: "esf", arg: 1, scope: !6144, file: !6085, line: 20, type: !6088)
!6149 = !DILocation(line: 0, scope: !6144)
!6150 = !DILocation(line: 22, column: 2, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6152, file: !6085, line: 22, column: 2)
!6152 = distinct !DILexicalBlock(scope: !6153, file: !6085, line: 22, column: 2)
!6153 = distinct !DILexicalBlock(scope: !6154, file: !6085, line: 22, column: 2)
!6154 = distinct !DILexicalBlock(scope: !6144, file: !6085, line: 22, column: 2)
!6155 = !DILocation(line: 24, column: 2, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6157, file: !6085, line: 24, column: 2)
!6157 = distinct !DILexicalBlock(scope: !6158, file: !6085, line: 24, column: 2)
!6158 = distinct !DILexicalBlock(scope: !6159, file: !6085, line: 24, column: 2)
!6159 = distinct !DILexicalBlock(scope: !6144, file: !6085, line: 24, column: 2)
!6160 = !DILocation(line: 26, column: 2, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6162, file: !6085, line: 26, column: 2)
!6162 = distinct !DILexicalBlock(scope: !6163, file: !6085, line: 26, column: 2)
!6163 = distinct !DILexicalBlock(scope: !6164, file: !6085, line: 26, column: 2)
!6164 = distinct !DILexicalBlock(scope: !6144, file: !6085, line: 26, column: 2)
!6165 = !DILocation(line: 53, column: 2, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6167, file: !6085, line: 53, column: 2)
!6167 = distinct !DILexicalBlock(scope: !6168, file: !6085, line: 53, column: 2)
!6168 = distinct !DILexicalBlock(scope: !6169, file: !6085, line: 53, column: 2)
!6169 = distinct !DILexicalBlock(scope: !6144, file: !6085, line: 53, column: 2)
!6170 = !DILocation(line: 55, column: 1, scope: !6144)
!6171 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6085, file: !6085, line: 82, type: !6172, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !6187)
!6172 = !DISubroutineType(types: !6173)
!6173 = !{null, !6088, !6174}
!6174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6175, size: 32)
!6175 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6176)
!6176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6177)
!6177 = !{!6178, !6179, !6180, !6181, !6182, !6183, !6184, !6185, !6186}
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6176, file: !379, line: 26, baseType: !152, size: 32)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6176, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6176, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6176, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6176, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6176, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6176, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6176, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6176, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6187 = !{!6188, !6189, !6190}
!6188 = !DILocalVariable(name: "esf", arg: 1, scope: !6171, file: !6085, line: 82, type: !6088)
!6189 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6171, file: !6085, line: 82, type: !6174)
!6190 = !DILocalVariable(name: "reason", scope: !6171, file: !6085, line: 88, type: !32)
!6191 = !DILocation(line: 0, scope: !6171)
!6192 = !DILocation(line: 88, column: 35, scope: !6171)
!6193 = !DILocation(line: 108, column: 2, scope: !6171)
!6194 = !DILocation(line: 131, column: 1, scope: !6171)
!6195 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6085, file: !6085, line: 133, type: !131, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !6196)
!6196 = !{!6197, !6198, !6199}
!6197 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6195, file: !6085, line: 133, type: !106)
!6198 = !DILocalVariable(name: "ssf_contents", scope: !6195, file: !6085, line: 135, type: !1014)
!6199 = !DILocalVariable(name: "oops_esf", scope: !6195, file: !6085, line: 136, type: !6090)
!6200 = !DILocation(line: 0, scope: !6195)
!6201 = !DILocation(line: 136, column: 2, scope: !6195)
!6202 = !DILocation(line: 136, column: 15, scope: !6195)
!6203 = !DILocation(line: 139, column: 22, scope: !6195)
!6204 = !DILocation(line: 139, column: 17, scope: !6195)
!6205 = !DILocation(line: 139, column: 20, scope: !6195)
!6206 = !DILocation(line: 141, column: 2, scope: !6195)
!6207 = !DILocation(line: 142, column: 2, scope: !6195)
!6208 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6209, file: !6209, line: 40, type: !5949, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !6210)
!6209 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6210 = !{!6211}
!6211 = !DILocalVariable(name: "irq", arg: 1, scope: !6208, file: !6209, line: 40, type: !32)
!6212 = !DILocation(line: 0, scope: !6208)
!6213 = !DILocation(line: 42, column: 2, scope: !6208)
!6214 = !DILocation(line: 43, column: 1, scope: !6208)
!6215 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !463, file: !463, line: 1684, type: !6216, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !6218)
!6216 = !DISubroutineType(types: !6217)
!6217 = !{null, !921}
!6218 = !{!6219}
!6219 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6215, file: !463, line: 1684, type: !921)
!6220 = !DILocation(line: 0, scope: !6215)
!6221 = !DILocation(line: 1686, column: 23, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6215, file: !463, line: 1686, column: 7)
!6223 = !DILocation(line: 1686, column: 7, scope: !6215)
!6224 = !DILocation(line: 1688, column: 5, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6222, file: !463, line: 1687, column: 3)
!6226 = !{i64 2151028180}
!6227 = !DILocation(line: 1689, column: 81, scope: !6225)
!6228 = !DILocation(line: 1689, column: 60, scope: !6225)
!6229 = !DILocation(line: 1689, column: 34, scope: !6225)
!6230 = !DILocation(line: 1689, column: 5, scope: !6225)
!6231 = !DILocation(line: 1689, column: 43, scope: !6225)
!6232 = !DILocation(line: 1690, column: 5, scope: !6225)
!6233 = !{i64 2151028294}
!6234 = !DILocation(line: 1691, column: 3, scope: !6225)
!6235 = !DILocation(line: 1692, column: 1, scope: !6215)
!6236 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6209, file: !6209, line: 45, type: !5949, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !6237)
!6237 = !{!6238}
!6238 = !DILocalVariable(name: "irq", arg: 1, scope: !6236, file: !6209, line: 45, type: !32)
!6239 = !DILocation(line: 0, scope: !6236)
!6240 = !DILocation(line: 47, column: 2, scope: !6236)
!6241 = !DILocation(line: 48, column: 1, scope: !6236)
!6242 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !463, file: !463, line: 1722, type: !6216, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !6243)
!6243 = !{!6244}
!6244 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6242, file: !463, line: 1722, type: !921)
!6245 = !DILocation(line: 0, scope: !6242)
!6246 = !DILocation(line: 1724, column: 23, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6242, file: !463, line: 1724, column: 7)
!6248 = !DILocation(line: 1724, column: 7, scope: !6242)
!6249 = !DILocation(line: 1726, column: 81, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6247, file: !463, line: 1725, column: 3)
!6251 = !DILocation(line: 1726, column: 60, scope: !6250)
!6252 = !DILocation(line: 1726, column: 34, scope: !6250)
!6253 = !DILocation(line: 1726, column: 5, scope: !6250)
!6254 = !DILocation(line: 1726, column: 43, scope: !6250)
!6255 = !DILocation(line: 271, column: 3, scope: !6256, inlinedAt: !6258)
!6256 = distinct !DISubprogram(name: "__DSB", scope: !6257, file: !6257, line: 269, type: !3082, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !2156)
!6257 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6258 = distinct !DILocation(line: 1727, column: 5, scope: !6250)
!6259 = !{i64 3482563}
!6260 = !DILocation(line: 260, column: 3, scope: !6261, inlinedAt: !6262)
!6261 = distinct !DISubprogram(name: "__ISB", scope: !6257, file: !6257, line: 258, type: !3082, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !2156)
!6262 = distinct !DILocation(line: 1728, column: 5, scope: !6250)
!6263 = !{i64 3482280}
!6264 = !DILocation(line: 1729, column: 3, scope: !6250)
!6265 = !DILocation(line: 1730, column: 1, scope: !6242)
!6266 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6209, file: !6209, line: 50, type: !6267, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !6269)
!6267 = !DISubroutineType(types: !6268)
!6268 = !{!107, !32}
!6269 = !{!6270}
!6270 = !DILocalVariable(name: "irq", arg: 1, scope: !6266, file: !6209, line: 50, type: !32)
!6271 = !DILocation(line: 0, scope: !6266)
!6272 = !DILocation(line: 52, column: 20, scope: !6266)
!6273 = !DILocation(line: 52, column: 9, scope: !6266)
!6274 = !DILocation(line: 52, column: 41, scope: !6266)
!6275 = !DILocation(line: 52, column: 39, scope: !6266)
!6276 = !DILocation(line: 52, column: 2, scope: !6266)
!6277 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6209, file: !6209, line: 64, type: !6278, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !6280)
!6278 = !DISubroutineType(types: !6279)
!6279 = !{null, !32, !32, !152}
!6280 = !{!6281, !6282, !6283}
!6281 = !DILocalVariable(name: "irq", arg: 1, scope: !6277, file: !6209, line: 64, type: !32)
!6282 = !DILocalVariable(name: "prio", arg: 2, scope: !6277, file: !6209, line: 64, type: !32)
!6283 = !DILocalVariable(name: "flags", arg: 3, scope: !6277, file: !6209, line: 64, type: !152)
!6284 = !DILocation(line: 0, scope: !6277)
!6285 = !DILocation(line: 83, column: 8, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6287, file: !6209, line: 82, column: 9)
!6287 = distinct !DILexicalBlock(scope: !6277, file: !6209, line: 76, column: 6)
!6288 = !DILocation(line: 91, column: 2, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6290, file: !6209, line: 91, column: 2)
!6290 = distinct !DILexicalBlock(scope: !6277, file: !6209, line: 91, column: 2)
!6291 = !DILocation(line: 91, column: 2, scope: !6290)
!6292 = !DILocation(line: 91, column: 2, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6289, file: !6209, line: 91, column: 2)
!6294 = !DILocation(line: 95, column: 2, scope: !6277)
!6295 = !DILocation(line: 96, column: 1, scope: !6277)
!6296 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6297, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !6299)
!6297 = !DISubroutineType(types: !6298)
!6298 = !{null, !921, !152}
!6299 = !{!6300, !6301}
!6300 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6296, file: !463, line: 1814, type: !921)
!6301 = !DILocalVariable(name: "priority", arg: 2, scope: !6296, file: !463, line: 1814, type: !152)
!6302 = !DILocation(line: 0, scope: !6296)
!6303 = !DILocation(line: 0, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6296, file: !463, line: 1816, column: 7)
!6305 = !DILocation(line: 1816, column: 7, scope: !6296)
!6306 = !DILocation(line: 1824, column: 1, scope: !6296)
!6307 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6209, file: !6209, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !6308)
!6308 = !{!6309}
!6309 = !DILocalVariable(name: "unused", arg: 1, scope: !6307, file: !6209, line: 155, type: !13)
!6310 = !DILocation(line: 0, scope: !6307)
!6311 = !DILocation(line: 159, column: 2, scope: !6307)
!6312 = !DILocation(line: 160, column: 1, scope: !6307)
!6313 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6314, file: !6314, line: 87, type: !3082, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !2156)
!6314 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6315 = !DILocation(line: 89, column: 2, scope: !6313)
!6316 = !DILocation(line: 90, column: 2, scope: !6313)
!6317 = !DILocation(line: 91, column: 1, scope: !6313)
!6318 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6314, file: !6314, line: 23, type: !3082, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!6319 = !DISubprogram(name: "z_arm_int_exit", scope: !6320, file: !6320, line: 153, type: !3082, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!6320 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6321 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6322, file: !6322, line: 256, type: !3082, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !2156)
!6322 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6323 = !DILocation(line: 258, column: 2, scope: !6321)
!6324 = !DILocation(line: 260, column: 2, scope: !6321)
!6325 = !DILocation(line: 262, column: 2, scope: !6321)
!6326 = !DILocation(line: 263, column: 2, scope: !6321)
!6327 = !DILocation(line: 267, column: 2, scope: !6321)
!6328 = !DILocation(line: 268, column: 2, scope: !6321)
!6329 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6322, file: !6322, line: 53, type: !3082, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !2156)
!6330 = !DILocation(line: 55, column: 12, scope: !6329)
!6331 = !DILocation(line: 271, column: 3, scope: !6332, inlinedAt: !6333)
!6332 = distinct !DISubprogram(name: "__DSB", scope: !6257, file: !6257, line: 269, type: !3082, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !2156)
!6333 = distinct !DILocation(line: 56, column: 2, scope: !6329)
!6334 = !{i64 3481234}
!6335 = !DILocation(line: 260, column: 3, scope: !6336, inlinedAt: !6337)
!6336 = distinct !DISubprogram(name: "__ISB", scope: !6257, file: !6257, line: 258, type: !3082, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !2156)
!6337 = distinct !DILocation(line: 57, column: 2, scope: !6329)
!6338 = !{i64 3480951}
!6339 = !DILocation(line: 58, column: 1, scope: !6329)
!6340 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6322, file: !6322, line: 96, type: !3082, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !2156)
!6341 = !DILocation(line: 103, column: 13, scope: !6340)
!6342 = !DILocation(line: 975, column: 3, scope: !6343, inlinedAt: !6348)
!6343 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6257, file: !6257, line: 971, type: !6344, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !6346)
!6344 = !DISubroutineType(types: !6345)
!6345 = !{!152}
!6346 = !{!6347}
!6347 = !DILocalVariable(name: "result", scope: !6343, file: !6257, line: 973, type: !152)
!6348 = distinct !DILocation(line: 189, column: 16, scope: !6340)
!6349 = !{i64 3502064}
!6350 = !DILocation(line: 0, scope: !6343, inlinedAt: !6348)
!6351 = !DILocation(line: 189, column: 32, scope: !6340)
!6352 = !DILocalVariable(name: "control", arg: 1, scope: !6353, file: !6257, line: 1001, type: !152)
!6353 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6257, file: !6257, line: 1001, type: !6354, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !6356)
!6354 = !DISubroutineType(types: !6355)
!6355 = !{null, !152}
!6356 = !{!6352}
!6357 = !DILocation(line: 0, scope: !6353, inlinedAt: !6358)
!6358 = distinct !DILocation(line: 189, column: 2, scope: !6340)
!6359 = !DILocation(line: 1003, column: 3, scope: !6353, inlinedAt: !6358)
!6360 = !{i64 3502784}
!6361 = !DILocation(line: 260, column: 3, scope: !6336, inlinedAt: !6362)
!6362 = distinct !DILocation(line: 1004, column: 3, scope: !6353, inlinedAt: !6358)
!6363 = !DILocation(line: 191, column: 1, scope: !6340)
!6364 = distinct !DISubprogram(name: "arch_swap", scope: !6365, file: !6365, line: 33, type: !6267, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !6366)
!6365 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6366 = !{!6367}
!6367 = !DILocalVariable(name: "key", arg: 1, scope: !6364, file: !6365, line: 33, type: !32)
!6368 = !DILocation(line: 0, scope: !6364)
!6369 = !DILocation(line: 36, column: 2, scope: !6364)
!6370 = !DILocation(line: 36, column: 17, scope: !6364)
!6371 = !DILocation(line: 36, column: 25, scope: !6364)
!6372 = !DILocation(line: 37, column: 37, scope: !6364)
!6373 = !DILocation(line: 37, column: 17, scope: !6364)
!6374 = !DILocation(line: 37, column: 35, scope: !6364)
!6375 = !DILocation(line: 41, column: 12, scope: !6364)
!6376 = !DILocalVariable(name: "key", arg: 1, scope: !6377, file: !5938, line: 84, type: !32)
!6377 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5938, file: !5938, line: 84, type: !5949, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !6378)
!6378 = !{!6376}
!6379 = !DILocation(line: 0, scope: !6377, inlinedAt: !6380)
!6380 = distinct !DILocation(line: 44, column: 2, scope: !6364)
!6381 = !DILocation(line: 95, column: 2, scope: !6377, inlinedAt: !6380)
!6382 = !{i64 2243298}
!6383 = !DILocation(line: 53, column: 9, scope: !6364)
!6384 = !DILocation(line: 53, column: 24, scope: !6364)
!6385 = !DILocation(line: 53, column: 2, scope: !6364)
!6386 = distinct !DISubprogram(name: "arch_new_thread", scope: !6387, file: !6387, line: 56, type: !6388, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !6498)
!6387 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6388 = !DISubroutineType(types: !6389)
!6389 = !{null, !6390, !6493, !193, !559, !106, !106, !106}
!6390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6391, size: 32)
!6391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !6392)
!6392 = !{!6393, !6451, !6463, !6464, !6465, !6466, !6467, !6473, !6488}
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6391, file: !309, line: 247, baseType: !6394, size: 384)
!6394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !6395)
!6395 = !{!6396, !6420, !6427, !6428, !6429, !6438, !6439, !6440}
!6396 = !DIDerivedType(tag: DW_TAG_member, scope: !6394, file: !309, line: 60, baseType: !6397, size: 64)
!6397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6394, file: !309, line: 60, size: 64, elements: !6398)
!6398 = !{!6399, !6414}
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6397, file: !309, line: 61, baseType: !6400, size: 64)
!6400 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !6401)
!6401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !6402)
!6402 = !{!6403, !6409}
!6403 = !DIDerivedType(tag: DW_TAG_member, scope: !6401, file: !319, line: 38, baseType: !6404, size: 32)
!6404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6401, file: !319, line: 38, size: 32, elements: !6405)
!6405 = !{!6406, !6408}
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6404, file: !319, line: 39, baseType: !6407, size: 32)
!6407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6401, size: 32)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6404, file: !319, line: 40, baseType: !6407, size: 32)
!6409 = !DIDerivedType(tag: DW_TAG_member, scope: !6401, file: !319, line: 42, baseType: !6410, size: 32, offset: 32)
!6410 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6401, file: !319, line: 42, size: 32, elements: !6411)
!6411 = !{!6412, !6413}
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6410, file: !319, line: 43, baseType: !6407, size: 32)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6410, file: !319, line: 44, baseType: !6407, size: 32)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6397, file: !309, line: 62, baseType: !6415, size: 64)
!6415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !6416)
!6416 = !{!6417}
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6415, file: !335, line: 50, baseType: !6418, size: 64)
!6418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6419, size: 64, elements: !340)
!6419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6415, size: 32)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6394, file: !309, line: 68, baseType: !6421, size: 32, offset: 64)
!6421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6422, size: 32)
!6422 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !6423)
!6423 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !6424)
!6424 = !{!6425}
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6423, file: !345, line: 232, baseType: !6426, size: 64)
!6426 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !6401)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6394, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6394, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!6429 = !DIDerivedType(tag: DW_TAG_member, scope: !6394, file: !309, line: 90, baseType: !6430, size: 16, offset: 112)
!6430 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6394, file: !309, line: 90, size: 16, elements: !6431)
!6431 = !{!6432, !6437}
!6432 = !DIDerivedType(tag: DW_TAG_member, scope: !6430, file: !309, line: 91, baseType: !6433, size: 16)
!6433 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6430, file: !309, line: 91, size: 16, elements: !6434)
!6434 = !{!6435, !6436}
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6433, file: !309, line: 96, baseType: !359, size: 8)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6433, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6430, file: !309, line: 100, baseType: !197, size: 16)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6394, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6394, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6394, file: !309, line: 131, baseType: !6441, size: 192, offset: 192)
!6441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !6442)
!6442 = !{!6443, !6444, !6450}
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6441, file: !345, line: 245, baseType: !6400, size: 64)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6441, file: !345, line: 246, baseType: !6445, size: 32, offset: 64)
!6445 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !6446)
!6446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6447, size: 32)
!6447 = !DISubroutineType(types: !6448)
!6448 = !{null, !6449}
!6449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6441, size: 32)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6441, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6391, file: !309, line: 250, baseType: !6452, size: 288, offset: 384)
!6452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6453)
!6453 = !{!6454, !6455, !6456, !6457, !6458, !6459, !6460, !6461, !6462}
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6452, file: !379, line: 26, baseType: !152, size: 32)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6452, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6452, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6452, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6452, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6452, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6452, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6452, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6452, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6391, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6391, file: !309, line: 256, baseType: !6422, size: 64, offset: 704)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6391, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6391, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6391, file: !309, line: 300, baseType: !6468, size: 96, offset: 1056)
!6468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !6469)
!6469 = !{!6470, !6471, !6472}
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6468, file: !309, line: 153, baseType: !22, size: 32)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6468, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6468, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6391, file: !309, line: 325, baseType: !6474, size: 32, offset: 1152)
!6474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6475, size: 32)
!6475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !6476)
!6476 = !{!6477, !6483, !6484}
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6475, file: !406, line: 5074, baseType: !6478, size: 96)
!6478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !6479)
!6479 = !{!6480, !6481, !6482}
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6478, file: !410, line: 57, baseType: !413, size: 32)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6478, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6478, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6475, file: !406, line: 5075, baseType: !6422, size: 64, offset: 96)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6475, file: !406, line: 5076, baseType: !6485, size: 32, offset: 160)
!6485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !6486)
!6486 = !{!6487}
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6485, file: !420, line: 52, baseType: !22, size: 32)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6391, file: !309, line: 343, baseType: !6489, size: 64, offset: 1184)
!6489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !6490)
!6490 = !{!6491, !6492}
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6489, file: !379, line: 63, baseType: !152, size: 32)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6489, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!6493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6494, size: 32)
!6494 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !6495)
!6495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !6496)
!6496 = !{!6497}
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6495, file: !577, line: 48, baseType: !120, size: 8)
!6498 = !{!6499, !6500, !6501, !6502, !6503, !6504, !6505, !6506}
!6499 = !DILocalVariable(name: "thread", arg: 1, scope: !6386, file: !6387, line: 56, type: !6390)
!6500 = !DILocalVariable(name: "stack", arg: 2, scope: !6386, file: !6387, line: 56, type: !6493)
!6501 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6386, file: !6387, line: 57, type: !193)
!6502 = !DILocalVariable(name: "entry", arg: 4, scope: !6386, file: !6387, line: 57, type: !559)
!6503 = !DILocalVariable(name: "p1", arg: 5, scope: !6386, file: !6387, line: 58, type: !106)
!6504 = !DILocalVariable(name: "p2", arg: 6, scope: !6386, file: !6387, line: 58, type: !106)
!6505 = !DILocalVariable(name: "p3", arg: 7, scope: !6386, file: !6387, line: 58, type: !106)
!6506 = !DILocalVariable(name: "iframe", scope: !6386, file: !6387, line: 60, type: !2663)
!6507 = !DILocation(line: 0, scope: !6386)
!6508 = !DILocation(line: 85, column: 11, scope: !6386)
!6509 = !DILocation(line: 93, column: 10, scope: !6386)
!6510 = !DILocation(line: 98, column: 13, scope: !6386)
!6511 = !DILocation(line: 100, column: 15, scope: !6386)
!6512 = !DILocation(line: 100, column: 10, scope: !6386)
!6513 = !DILocation(line: 100, column: 13, scope: !6386)
!6514 = !DILocation(line: 101, column: 15, scope: !6386)
!6515 = !DILocation(line: 101, column: 10, scope: !6386)
!6516 = !DILocation(line: 101, column: 13, scope: !6386)
!6517 = !DILocation(line: 102, column: 15, scope: !6386)
!6518 = !DILocation(line: 102, column: 10, scope: !6386)
!6519 = !DILocation(line: 102, column: 13, scope: !6386)
!6520 = !DILocation(line: 103, column: 15, scope: !6386)
!6521 = !DILocation(line: 103, column: 10, scope: !6386)
!6522 = !DILocation(line: 103, column: 13, scope: !6386)
!6523 = !DILocation(line: 106, column: 10, scope: !6386)
!6524 = !DILocation(line: 106, column: 15, scope: !6386)
!6525 = !DILocation(line: 122, column: 29, scope: !6386)
!6526 = !DILocation(line: 122, column: 23, scope: !6386)
!6527 = !DILocation(line: 122, column: 27, scope: !6386)
!6528 = !DILocation(line: 123, column: 15, scope: !6386)
!6529 = !DILocation(line: 123, column: 23, scope: !6386)
!6530 = !DILocation(line: 143, column: 1, scope: !6386)
!6531 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6387, file: !6387, line: 385, type: !6532, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !6535)
!6532 = !DISubroutineType(types: !6533)
!6533 = !{!152, !6534, !6534}
!6534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!6535 = !{!6536, !6537, !6538, !6541}
!6536 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6531, file: !6387, line: 385, type: !6534)
!6537 = !DILocalVariable(name: "psp", arg: 2, scope: !6531, file: !6387, line: 385, type: !6534)
!6538 = !DILocalVariable(name: "thread", scope: !6531, file: !6387, line: 388, type: !6539)
!6539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6540, size: 32)
!6540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6391)
!6541 = !DILocalVariable(name: "guard_len", scope: !6531, file: !6387, line: 405, type: !152)
!6542 = !DILocation(line: 0, scope: !6531)
!6543 = !DILocation(line: 388, column: 34, scope: !6531)
!6544 = !DILocation(line: 390, column: 13, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6531, file: !6387, line: 390, column: 6)
!6546 = !DILocation(line: 390, column: 6, scope: !6531)
!6547 = !DILocation(line: 438, column: 6, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6531, file: !6387, line: 438, column: 6)
!6549 = !DILocation(line: 438, column: 6, scope: !6531)
!6550 = !DILocation(line: 442, column: 3, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6548, file: !6387, line: 440, column: 22)
!6552 = !DILocation(line: 455, column: 1, scope: !6531)
!6553 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6387, file: !6387, line: 530, type: !6554, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !6556)
!6554 = !DISubroutineType(types: !6555)
!6555 = !{null, !6390, !193, !559}
!6556 = !{!6557, !6558, !6559}
!6557 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6553, file: !6387, line: 530, type: !6390)
!6558 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6553, file: !6387, line: 530, type: !193)
!6559 = !DILocalVariable(name: "_main", arg: 3, scope: !6553, file: !6387, line: 531, type: !559)
!6560 = !DILocation(line: 0, scope: !6553)
!6561 = !DILocation(line: 535, column: 11, scope: !6553)
!6562 = !DILocation(line: 560, column: 2, scope: !6553)
!6563 = !DILocation(line: 576, column: 2, scope: !6553)
!6564 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6565 = !DILocation(line: 603, column: 2, scope: !6553)
!6566 = distinct !DISubprogram(name: "z_arm_fault", scope: !6567, file: !6567, line: 1036, type: !6568, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6583)
!6567 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6568 = !DISubroutineType(types: !6569)
!6569 = !{null, !152, !152, !152, !6570}
!6570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6571, size: 32)
!6571 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6572)
!6572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6573)
!6573 = !{!6574, !6575, !6576, !6577, !6578, !6579, !6580, !6581, !6582}
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6572, file: !379, line: 26, baseType: !152, size: 32)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6572, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6572, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6572, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6572, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6572, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6572, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6572, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6572, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6583 = !{!6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592, !6593}
!6584 = !DILocalVariable(name: "msp", arg: 1, scope: !6566, file: !6567, line: 1036, type: !152)
!6585 = !DILocalVariable(name: "psp", arg: 2, scope: !6566, file: !6567, line: 1036, type: !152)
!6586 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6566, file: !6567, line: 1036, type: !152)
!6587 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6566, file: !6567, line: 1037, type: !6570)
!6588 = !DILocalVariable(name: "reason", scope: !6566, file: !6567, line: 1039, type: !152)
!6589 = !DILocalVariable(name: "fault", scope: !6566, file: !6567, line: 1040, type: !107)
!6590 = !DILocalVariable(name: "recoverable", scope: !6566, file: !6567, line: 1041, type: !145)
!6591 = !DILocalVariable(name: "nested_exc", scope: !6566, file: !6567, line: 1041, type: !145)
!6592 = !DILocalVariable(name: "esf", scope: !6566, file: !6567, line: 1042, type: !2731)
!6593 = !DILocalVariable(name: "esf_copy", scope: !6566, file: !6567, line: 1047, type: !2732)
!6594 = !DILocation(line: 0, scope: !6566)
!6595 = !DILocation(line: 1040, column: 19, scope: !6566)
!6596 = !DILocation(line: 1041, column: 2, scope: !6566)
!6597 = !DILocation(line: 1047, column: 2, scope: !6566)
!6598 = !DILocation(line: 1047, column: 15, scope: !6566)
!6599 = !DILocalVariable(name: "key", arg: 1, scope: !6600, file: !5938, line: 84, type: !32)
!6600 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5938, file: !5938, line: 84, type: !5949, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6601)
!6601 = !{!6599}
!6602 = !DILocation(line: 0, scope: !6600, inlinedAt: !6603)
!6603 = distinct !DILocation(line: 1050, column: 2, scope: !6566)
!6604 = !DILocation(line: 95, column: 2, scope: !6600, inlinedAt: !6603)
!6605 = !{i64 2276542}
!6606 = !DILocation(line: 1055, column: 9, scope: !6566)
!6607 = !DILocation(line: 1056, column: 2, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6609, file: !6567, line: 1056, column: 2)
!6609 = distinct !DILexicalBlock(scope: !6566, file: !6567, line: 1056, column: 2)
!6610 = !DILocation(line: 1056, column: 2, scope: !6609)
!6611 = !DILocation(line: 1056, column: 2, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6608, file: !6567, line: 1056, column: 2)
!6613 = !DILocation(line: 1040, column: 24, scope: !6566)
!6614 = !DILocation(line: 1063, column: 11, scope: !6566)
!6615 = !DILocation(line: 1064, column: 6, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6566, file: !6567, line: 1064, column: 6)
!6617 = !{i8 0, i8 2}
!6618 = !DILocation(line: 1064, column: 6, scope: !6566)
!6619 = !DILocation(line: 1070, column: 20, scope: !6566)
!6620 = !DILocation(line: 1070, column: 2, scope: !6566)
!6621 = !DILocation(line: 1089, column: 6, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6566, file: !6567, line: 1089, column: 6)
!6623 = !DILocation(line: 0, scope: !6622)
!6624 = !DILocation(line: 1089, column: 6, scope: !6566)
!6625 = !DILocation(line: 1090, column: 28, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6627, file: !6567, line: 1090, column: 7)
!6627 = distinct !DILexicalBlock(scope: !6622, file: !6567, line: 1089, column: 18)
!6628 = !DILocation(line: 1090, column: 44, scope: !6626)
!6629 = !DILocation(line: 1090, column: 7, scope: !6627)
!6630 = !DILocation(line: 1091, column: 24, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6626, file: !6567, line: 1090, column: 50)
!6632 = !DILocation(line: 1092, column: 3, scope: !6631)
!6633 = !DILocation(line: 1094, column: 23, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6622, file: !6567, line: 1093, column: 9)
!6635 = !DILocation(line: 1097, column: 2, scope: !6566)
!6636 = !DILocation(line: 1098, column: 1, scope: !6566)
!6637 = distinct !DISubprogram(name: "get_esf", scope: !6567, file: !6567, line: 894, type: !6638, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6641)
!6638 = !DISubroutineType(types: !6639)
!6639 = !{!2731, !152, !152, !152, !6640}
!6640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!6641 = !{!6642, !6643, !6644, !6645, !6646, !6647}
!6642 = !DILocalVariable(name: "msp", arg: 1, scope: !6637, file: !6567, line: 894, type: !152)
!6643 = !DILocalVariable(name: "psp", arg: 2, scope: !6637, file: !6567, line: 894, type: !152)
!6644 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6637, file: !6567, line: 894, type: !152)
!6645 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6637, file: !6567, line: 895, type: !6640)
!6646 = !DILocalVariable(name: "alternative_state_exc", scope: !6637, file: !6567, line: 897, type: !145)
!6647 = !DILocalVariable(name: "ptr_esf", scope: !6637, file: !6567, line: 898, type: !2731)
!6648 = !DILocation(line: 0, scope: !6637)
!6649 = !DILocation(line: 900, column: 14, scope: !6637)
!6650 = !DILocation(line: 902, column: 49, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6637, file: !6567, line: 902, column: 6)
!6652 = !DILocation(line: 902, column: 6, scope: !6637)
!6653 = !DILocation(line: 983, column: 44, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6637, file: !6567, line: 983, column: 6)
!6655 = !DILocation(line: 985, column: 3, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6657, file: !6567, line: 985, column: 3)
!6657 = distinct !DILexicalBlock(scope: !6658, file: !6567, line: 985, column: 3)
!6658 = distinct !DILexicalBlock(scope: !6659, file: !6567, line: 985, column: 3)
!6659 = distinct !DILexicalBlock(scope: !6660, file: !6567, line: 985, column: 3)
!6660 = distinct !DILexicalBlock(scope: !6654, file: !6567, line: 984, column: 47)
!6661 = !DILocation(line: 986, column: 3, scope: !6660)
!6662 = !DILocation(line: 983, column: 18, scope: !6654)
!6663 = !DILocation(line: 991, column: 7, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6665, file: !6567, line: 990, column: 30)
!6665 = distinct !DILexicalBlock(scope: !6637, file: !6567, line: 990, column: 6)
!6666 = !DILocation(line: 998, column: 16, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6668, file: !6567, line: 995, column: 10)
!6668 = distinct !DILexicalBlock(scope: !6664, file: !6567, line: 991, column: 7)
!6669 = !DILocation(line: 1002, column: 2, scope: !6637)
!6670 = !DILocation(line: 1003, column: 1, scope: !6637)
!6671 = distinct !DISubprogram(name: "fault_handle", scope: !6567, file: !6567, line: 786, type: !6672, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6674)
!6672 = !DISubroutineType(types: !6673)
!6673 = !{!152, !2731, !107, !6640}
!6674 = !{!6675, !6676, !6677, !6678}
!6675 = !DILocalVariable(name: "esf", arg: 1, scope: !6671, file: !6567, line: 786, type: !2731)
!6676 = !DILocalVariable(name: "fault", arg: 2, scope: !6671, file: !6567, line: 786, type: !107)
!6677 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6671, file: !6567, line: 786, type: !6640)
!6678 = !DILocalVariable(name: "reason", scope: !6671, file: !6567, line: 788, type: !152)
!6679 = !DILocation(line: 0, scope: !6671)
!6680 = !DILocation(line: 790, column: 15, scope: !6671)
!6681 = !DILocation(line: 792, column: 2, scope: !6671)
!6682 = !DILocation(line: 794, column: 12, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6671, file: !6567, line: 792, column: 17)
!6684 = !DILocation(line: 795, column: 3, scope: !6683)
!6685 = !DILocation(line: 800, column: 12, scope: !6683)
!6686 = !DILocation(line: 801, column: 3, scope: !6683)
!6687 = !DILocation(line: 803, column: 12, scope: !6683)
!6688 = !DILocation(line: 804, column: 3, scope: !6683)
!6689 = !DILocation(line: 806, column: 12, scope: !6683)
!6690 = !DILocation(line: 807, column: 3, scope: !6683)
!6691 = !DILocation(line: 814, column: 3, scope: !6683)
!6692 = !DILocation(line: 815, column: 3, scope: !6683)
!6693 = !DILocation(line: 820, column: 3, scope: !6683)
!6694 = !DILocation(line: 821, column: 3, scope: !6683)
!6695 = !DILocation(line: 829, column: 2, scope: !6671)
!6696 = distinct !DISubprogram(name: "hard_fault", scope: !6567, file: !6567, line: 709, type: !6697, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6699)
!6697 = !DISubroutineType(types: !6698)
!6698 = !{!152, !2731, !6640}
!6699 = !{!6700, !6701, !6702}
!6700 = !DILocalVariable(name: "esf", arg: 1, scope: !6696, file: !6567, line: 709, type: !2731)
!6701 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6696, file: !6567, line: 709, type: !6640)
!6702 = !DILocalVariable(name: "reason", scope: !6696, file: !6567, line: 711, type: !152)
!6703 = !DILocation(line: 0, scope: !6696)
!6704 = !DILocation(line: 713, column: 2, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6706, file: !6567, line: 713, column: 2)
!6706 = distinct !DILexicalBlock(scope: !6707, file: !6567, line: 713, column: 2)
!6707 = distinct !DILexicalBlock(scope: !6708, file: !6567, line: 713, column: 2)
!6708 = distinct !DILexicalBlock(scope: !6696, file: !6567, line: 713, column: 2)
!6709 = !DILocation(line: 732, column: 15, scope: !6696)
!6710 = !DILocation(line: 734, column: 12, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6696, file: !6567, line: 734, column: 6)
!6712 = !DILocation(line: 734, column: 17, scope: !6711)
!6713 = !DILocation(line: 734, column: 41, scope: !6711)
!6714 = !DILocation(line: 734, column: 6, scope: !6696)
!6715 = !DILocation(line: 735, column: 3, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6717, file: !6567, line: 735, column: 3)
!6717 = distinct !DILexicalBlock(scope: !6718, file: !6567, line: 735, column: 3)
!6718 = distinct !DILexicalBlock(scope: !6719, file: !6567, line: 735, column: 3)
!6719 = distinct !DILexicalBlock(scope: !6720, file: !6567, line: 735, column: 3)
!6720 = distinct !DILexicalBlock(scope: !6711, file: !6567, line: 734, column: 47)
!6721 = !DILocation(line: 736, column: 2, scope: !6720)
!6722 = !DILocation(line: 736, column: 19, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6711, file: !6567, line: 736, column: 13)
!6724 = !DILocation(line: 736, column: 49, scope: !6723)
!6725 = !DILocation(line: 736, column: 13, scope: !6711)
!6726 = !DILocation(line: 737, column: 3, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6728, file: !6567, line: 737, column: 3)
!6728 = distinct !DILexicalBlock(scope: !6729, file: !6567, line: 737, column: 3)
!6729 = distinct !DILexicalBlock(scope: !6730, file: !6567, line: 737, column: 3)
!6730 = distinct !DILexicalBlock(scope: !6731, file: !6567, line: 737, column: 3)
!6731 = distinct !DILexicalBlock(scope: !6723, file: !6567, line: 736, column: 55)
!6732 = !DILocation(line: 738, column: 2, scope: !6731)
!6733 = !DILocation(line: 738, column: 19, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6723, file: !6567, line: 738, column: 13)
!6735 = !DILocation(line: 738, column: 24, scope: !6734)
!6736 = !DILocation(line: 738, column: 47, scope: !6734)
!6737 = !DILocation(line: 738, column: 13, scope: !6723)
!6738 = !DILocation(line: 739, column: 3, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6740, file: !6567, line: 739, column: 3)
!6740 = distinct !DILexicalBlock(scope: !6741, file: !6567, line: 739, column: 3)
!6741 = distinct !DILexicalBlock(scope: !6742, file: !6567, line: 739, column: 3)
!6742 = distinct !DILexicalBlock(scope: !6743, file: !6567, line: 739, column: 3)
!6743 = distinct !DILexicalBlock(scope: !6734, file: !6567, line: 738, column: 53)
!6744 = !DILocation(line: 740, column: 7, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6743, file: !6567, line: 740, column: 7)
!6746 = !DILocation(line: 740, column: 7, scope: !6743)
!6747 = !DILocation(line: 741, column: 4, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6749, file: !6567, line: 741, column: 4)
!6749 = distinct !DILexicalBlock(scope: !6750, file: !6567, line: 741, column: 4)
!6750 = distinct !DILexicalBlock(scope: !6751, file: !6567, line: 741, column: 4)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !6567, line: 741, column: 4)
!6752 = distinct !DILexicalBlock(scope: !6745, file: !6567, line: 740, column: 38)
!6753 = !DILocation(line: 742, column: 24, scope: !6752)
!6754 = !DILocation(line: 743, column: 3, scope: !6752)
!6755 = !DILocation(line: 743, column: 20, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6745, file: !6567, line: 743, column: 14)
!6757 = !DILocation(line: 743, column: 25, scope: !6756)
!6758 = !DILocation(line: 743, column: 52, scope: !6756)
!6759 = !DILocation(line: 743, column: 14, scope: !6745)
!6760 = !DILocation(line: 744, column: 13, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6756, file: !6567, line: 743, column: 58)
!6762 = !DILocation(line: 745, column: 3, scope: !6761)
!6763 = !DILocation(line: 745, column: 20, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6756, file: !6567, line: 745, column: 14)
!6765 = !DILocation(line: 745, column: 25, scope: !6764)
!6766 = !DILocation(line: 745, column: 52, scope: !6764)
!6767 = !DILocation(line: 745, column: 14, scope: !6756)
!6768 = !DILocation(line: 746, column: 13, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6764, file: !6567, line: 745, column: 58)
!6770 = !DILocation(line: 747, column: 3, scope: !6769)
!6771 = !DILocation(line: 747, column: 20, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6764, file: !6567, line: 747, column: 14)
!6773 = !DILocation(line: 747, column: 52, scope: !6772)
!6774 = !DILocation(line: 747, column: 14, scope: !6764)
!6775 = !DILocation(line: 748, column: 13, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6772, file: !6567, line: 747, column: 58)
!6777 = !DILocation(line: 754, column: 4, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6779, file: !6567, line: 754, column: 4)
!6779 = distinct !DILexicalBlock(scope: !6780, file: !6567, line: 754, column: 4)
!6780 = distinct !DILexicalBlock(scope: !6781, file: !6567, line: 754, column: 4)
!6781 = distinct !DILexicalBlock(scope: !6772, file: !6567, line: 753, column: 10)
!6782 = !DILocation(line: 758, column: 3, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6784, file: !6567, line: 758, column: 3)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !6567, line: 758, column: 3)
!6785 = distinct !DILexicalBlock(scope: !6786, file: !6567, line: 758, column: 3)
!6786 = distinct !DILexicalBlock(scope: !6734, file: !6567, line: 757, column: 9)
!6787 = !DILocation(line: 766, column: 2, scope: !6696)
!6788 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6567, file: !6567, line: 229, type: !6672, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6789)
!6789 = !{!6790, !6791, !6792, !6793, !6794, !6795, !6798}
!6790 = !DILocalVariable(name: "esf", arg: 1, scope: !6788, file: !6567, line: 229, type: !2731)
!6791 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6788, file: !6567, line: 229, type: !107)
!6792 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6788, file: !6567, line: 230, type: !6640)
!6793 = !DILocalVariable(name: "reason", scope: !6788, file: !6567, line: 232, type: !152)
!6794 = !DILocalVariable(name: "mmfar", scope: !6788, file: !6567, line: 233, type: !152)
!6795 = !DILocalVariable(name: "temp", scope: !6796, file: !6567, line: 254, type: !152)
!6796 = distinct !DILexicalBlock(scope: !6797, file: !6567, line: 244, column: 48)
!6797 = distinct !DILexicalBlock(scope: !6788, file: !6567, line: 244, column: 6)
!6798 = !DILocalVariable(name: "min_stack_ptr", scope: !6799, file: !6567, line: 309, type: !152)
!6799 = distinct !DILexicalBlock(scope: !6800, file: !6567, line: 308, column: 43)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !6567, line: 308, column: 7)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !6567, line: 289, column: 40)
!6802 = distinct !DILexicalBlock(scope: !6788, file: !6567, line: 288, column: 6)
!6803 = !DILocation(line: 0, scope: !6788)
!6804 = !DILocation(line: 235, column: 2, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !6567, line: 235, column: 2)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !6567, line: 235, column: 2)
!6807 = distinct !DILexicalBlock(scope: !6808, file: !6567, line: 235, column: 2)
!6808 = distinct !DILexicalBlock(scope: !6788, file: !6567, line: 235, column: 2)
!6809 = !DILocation(line: 237, column: 12, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6788, file: !6567, line: 237, column: 6)
!6811 = !DILocation(line: 237, column: 17, scope: !6810)
!6812 = !DILocation(line: 237, column: 41, scope: !6810)
!6813 = !DILocation(line: 237, column: 6, scope: !6788)
!6814 = !DILocation(line: 238, column: 3, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !6567, line: 238, column: 3)
!6816 = distinct !DILexicalBlock(scope: !6817, file: !6567, line: 238, column: 3)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !6567, line: 238, column: 3)
!6818 = distinct !DILexicalBlock(scope: !6819, file: !6567, line: 238, column: 3)
!6819 = distinct !DILexicalBlock(scope: !6810, file: !6567, line: 237, column: 47)
!6820 = !DILocation(line: 240, column: 2, scope: !6819)
!6821 = !DILocation(line: 241, column: 12, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6788, file: !6567, line: 241, column: 6)
!6823 = !DILocation(line: 241, column: 17, scope: !6822)
!6824 = !DILocation(line: 241, column: 43, scope: !6822)
!6825 = !DILocation(line: 241, column: 6, scope: !6788)
!6826 = !DILocation(line: 242, column: 3, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !6567, line: 242, column: 3)
!6828 = distinct !DILexicalBlock(scope: !6829, file: !6567, line: 242, column: 3)
!6829 = distinct !DILexicalBlock(scope: !6830, file: !6567, line: 242, column: 3)
!6830 = distinct !DILexicalBlock(scope: !6831, file: !6567, line: 242, column: 3)
!6831 = distinct !DILexicalBlock(scope: !6822, file: !6567, line: 241, column: 49)
!6832 = !DILocation(line: 243, column: 2, scope: !6831)
!6833 = !DILocation(line: 244, column: 12, scope: !6797)
!6834 = !DILocation(line: 244, column: 17, scope: !6797)
!6835 = !DILocation(line: 244, column: 42, scope: !6797)
!6836 = !DILocation(line: 244, column: 6, scope: !6788)
!6837 = !DILocation(line: 245, column: 3, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6839, file: !6567, line: 245, column: 3)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !6567, line: 245, column: 3)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !6567, line: 245, column: 3)
!6841 = distinct !DILexicalBlock(scope: !6796, file: !6567, line: 245, column: 3)
!6842 = !DILocation(line: 254, column: 24, scope: !6796)
!6843 = !DILocation(line: 0, scope: !6796)
!6844 = !DILocation(line: 256, column: 13, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6796, file: !6567, line: 256, column: 7)
!6846 = !DILocation(line: 256, column: 18, scope: !6845)
!6847 = !DILocation(line: 256, column: 44, scope: !6845)
!6848 = !DILocation(line: 256, column: 7, scope: !6796)
!6849 = !DILocation(line: 258, column: 4, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6851, file: !6567, line: 258, column: 4)
!6851 = distinct !DILexicalBlock(scope: !6852, file: !6567, line: 258, column: 4)
!6852 = distinct !DILexicalBlock(scope: !6853, file: !6567, line: 258, column: 4)
!6853 = distinct !DILexicalBlock(scope: !6854, file: !6567, line: 258, column: 4)
!6854 = distinct !DILexicalBlock(scope: !6845, file: !6567, line: 256, column: 50)
!6855 = !DILocation(line: 259, column: 24, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6854, file: !6567, line: 259, column: 8)
!6857 = !DILocation(line: 259, column: 8, scope: !6854)
!6858 = !DILocation(line: 261, column: 15, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6856, file: !6567, line: 259, column: 30)
!6860 = !DILocation(line: 262, column: 4, scope: !6859)
!6861 = !DILocation(line: 265, column: 12, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6788, file: !6567, line: 265, column: 6)
!6863 = !DILocation(line: 265, column: 17, scope: !6862)
!6864 = !DILocation(line: 265, column: 42, scope: !6862)
!6865 = !DILocation(line: 265, column: 6, scope: !6788)
!6866 = !DILocation(line: 266, column: 3, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6868, file: !6567, line: 266, column: 3)
!6868 = distinct !DILexicalBlock(scope: !6869, file: !6567, line: 266, column: 3)
!6869 = distinct !DILexicalBlock(scope: !6870, file: !6567, line: 266, column: 3)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !6567, line: 266, column: 3)
!6871 = distinct !DILexicalBlock(scope: !6862, file: !6567, line: 265, column: 48)
!6872 = !DILocation(line: 267, column: 2, scope: !6871)
!6873 = !DILocation(line: 269, column: 12, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6788, file: !6567, line: 269, column: 6)
!6875 = !DILocation(line: 269, column: 17, scope: !6874)
!6876 = !DILocation(line: 269, column: 41, scope: !6874)
!6877 = !DILocation(line: 269, column: 6, scope: !6788)
!6878 = !DILocation(line: 270, column: 3, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6880, file: !6567, line: 270, column: 3)
!6880 = distinct !DILexicalBlock(scope: !6881, file: !6567, line: 270, column: 3)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !6567, line: 270, column: 3)
!6882 = distinct !DILexicalBlock(scope: !6883, file: !6567, line: 270, column: 3)
!6883 = distinct !DILexicalBlock(scope: !6874, file: !6567, line: 269, column: 47)
!6884 = !DILocation(line: 272, column: 2, scope: !6883)
!6885 = !DILocation(line: 288, column: 12, scope: !6802)
!6886 = !DILocation(line: 288, column: 17, scope: !6802)
!6887 = !DILocation(line: 288, column: 41, scope: !6802)
!6888 = !DILocation(line: 289, column: 9, scope: !6802)
!6889 = !DILocation(line: 289, column: 14, scope: !6802)
!6890 = !DILocation(line: 288, column: 6, scope: !6788)
!6891 = !DILocation(line: 308, column: 12, scope: !6800)
!6892 = !DILocation(line: 308, column: 17, scope: !6800)
!6893 = !DILocation(line: 308, column: 7, scope: !6801)
!6894 = !DILocation(line: 310, column: 6, scope: !6799)
!6895 = !DILocation(line: 309, column: 29, scope: !6799)
!6896 = !DILocation(line: 0, scope: !6799)
!6897 = !DILocation(line: 312, column: 8, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6799, file: !6567, line: 312, column: 8)
!6899 = !DILocation(line: 312, column: 8, scope: !6799)
!6900 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6901, file: !6257, line: 1099, type: !152)
!6901 = distinct !DISubprogram(name: "__set_PSP", scope: !6257, file: !6257, line: 1099, type: !6354, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6902)
!6902 = !{!6900}
!6903 = !DILocation(line: 0, scope: !6901, inlinedAt: !6904)
!6904 = distinct !DILocation(line: 338, column: 5, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6898, file: !6567, line: 312, column: 23)
!6906 = !DILocation(line: 1101, column: 3, scope: !6901, inlinedAt: !6904)
!6907 = !{i64 3532203}
!6908 = !DILocation(line: 341, column: 4, scope: !6905)
!6909 = !DILocation(line: 342, column: 5, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6911, file: !6567, line: 342, column: 5)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !6567, line: 342, column: 5)
!6912 = distinct !DILexicalBlock(scope: !6898, file: !6567, line: 341, column: 11)
!6913 = !DILocation(line: 342, column: 5, scope: !6911)
!6914 = !DILocation(line: 342, column: 5, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6910, file: !6567, line: 342, column: 5)
!6916 = !DILocation(line: 360, column: 12, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6788, file: !6567, line: 360, column: 6)
!6918 = !DILocation(line: 360, column: 17, scope: !6917)
!6919 = !DILocation(line: 360, column: 41, scope: !6917)
!6920 = !DILocation(line: 360, column: 6, scope: !6788)
!6921 = !DILocation(line: 361, column: 14, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6917, file: !6567, line: 360, column: 47)
!6923 = !DILocation(line: 362, column: 2, scope: !6922)
!6924 = !DILocation(line: 366, column: 12, scope: !6788)
!6925 = !DILocation(line: 369, column: 15, scope: !6788)
!6926 = !DILocation(line: 371, column: 2, scope: !6788)
!6927 = distinct !DISubprogram(name: "bus_fault", scope: !6567, file: !6567, line: 383, type: !6928, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6930)
!6928 = !DISubroutineType(types: !6929)
!6929 = !{!107, !2731, !107, !6640}
!6930 = !{!6931, !6932, !6933, !6934, !6935}
!6931 = !DILocalVariable(name: "esf", arg: 1, scope: !6927, file: !6567, line: 383, type: !2731)
!6932 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6927, file: !6567, line: 383, type: !107)
!6933 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6927, file: !6567, line: 383, type: !6640)
!6934 = !DILocalVariable(name: "reason", scope: !6927, file: !6567, line: 385, type: !152)
!6935 = !DILocalVariable(name: "bfar", scope: !6936, file: !6567, line: 405, type: !152)
!6936 = distinct !DILexicalBlock(scope: !6937, file: !6567, line: 395, column: 42)
!6937 = distinct !DILexicalBlock(scope: !6927, file: !6567, line: 395, column: 6)
!6938 = !DILocation(line: 0, scope: !6927)
!6939 = !DILocation(line: 387, column: 2, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6941, file: !6567, line: 387, column: 2)
!6941 = distinct !DILexicalBlock(scope: !6942, file: !6567, line: 387, column: 2)
!6942 = distinct !DILexicalBlock(scope: !6943, file: !6567, line: 387, column: 2)
!6943 = distinct !DILexicalBlock(scope: !6927, file: !6567, line: 387, column: 2)
!6944 = !DILocation(line: 389, column: 11, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6927, file: !6567, line: 389, column: 6)
!6946 = !DILocation(line: 389, column: 16, scope: !6945)
!6947 = !DILocation(line: 389, column: 6, scope: !6927)
!6948 = !DILocation(line: 390, column: 3, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !6567, line: 390, column: 3)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !6567, line: 390, column: 3)
!6951 = distinct !DILexicalBlock(scope: !6952, file: !6567, line: 390, column: 3)
!6952 = distinct !DILexicalBlock(scope: !6953, file: !6567, line: 390, column: 3)
!6953 = distinct !DILexicalBlock(scope: !6945, file: !6567, line: 389, column: 39)
!6954 = !DILocation(line: 391, column: 2, scope: !6953)
!6955 = !DILocation(line: 392, column: 11, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6927, file: !6567, line: 392, column: 6)
!6957 = !DILocation(line: 392, column: 16, scope: !6956)
!6958 = !DILocation(line: 392, column: 6, scope: !6927)
!6959 = !DILocation(line: 393, column: 3, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !6567, line: 393, column: 3)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !6567, line: 393, column: 3)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !6567, line: 393, column: 3)
!6963 = distinct !DILexicalBlock(scope: !6964, file: !6567, line: 393, column: 3)
!6964 = distinct !DILexicalBlock(scope: !6956, file: !6567, line: 392, column: 41)
!6965 = !DILocation(line: 394, column: 2, scope: !6964)
!6966 = !DILocation(line: 395, column: 11, scope: !6937)
!6967 = !DILocation(line: 395, column: 16, scope: !6937)
!6968 = !DILocation(line: 395, column: 6, scope: !6927)
!6969 = !DILocation(line: 396, column: 3, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !6567, line: 396, column: 3)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !6567, line: 396, column: 3)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !6567, line: 396, column: 3)
!6973 = distinct !DILexicalBlock(scope: !6936, file: !6567, line: 396, column: 3)
!6974 = !DILocation(line: 405, column: 3, scope: !6936)
!6975 = !DILocation(line: 0, scope: !6936)
!6976 = !DILocation(line: 407, column: 13, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6936, file: !6567, line: 407, column: 7)
!6978 = !DILocation(line: 407, column: 18, scope: !6977)
!6979 = !DILocation(line: 407, column: 44, scope: !6977)
!6980 = !DILocation(line: 407, column: 7, scope: !6936)
!6981 = !DILocation(line: 408, column: 4, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6983, file: !6567, line: 408, column: 4)
!6983 = distinct !DILexicalBlock(scope: !6984, file: !6567, line: 408, column: 4)
!6984 = distinct !DILexicalBlock(scope: !6985, file: !6567, line: 408, column: 4)
!6985 = distinct !DILexicalBlock(scope: !6986, file: !6567, line: 408, column: 4)
!6986 = distinct !DILexicalBlock(scope: !6977, file: !6567, line: 407, column: 50)
!6987 = !DILocation(line: 409, column: 24, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6986, file: !6567, line: 409, column: 8)
!6989 = !DILocation(line: 409, column: 8, scope: !6986)
!6990 = !DILocation(line: 411, column: 15, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6988, file: !6567, line: 409, column: 30)
!6992 = !DILocation(line: 412, column: 4, scope: !6991)
!6993 = !DILocation(line: 415, column: 11, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6927, file: !6567, line: 415, column: 6)
!6995 = !DILocation(line: 415, column: 16, scope: !6994)
!6996 = !DILocation(line: 415, column: 6, scope: !6927)
!6997 = !DILocation(line: 416, column: 3, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !6567, line: 416, column: 3)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !6567, line: 416, column: 3)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !6567, line: 416, column: 3)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !6567, line: 416, column: 3)
!7002 = distinct !DILexicalBlock(scope: !6994, file: !6567, line: 415, column: 44)
!7003 = !DILocation(line: 417, column: 2, scope: !7002)
!7004 = !DILocation(line: 418, column: 12, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !6927, file: !6567, line: 418, column: 6)
!7006 = !DILocation(line: 418, column: 17, scope: !7005)
!7007 = !DILocation(line: 418, column: 41, scope: !7005)
!7008 = !DILocation(line: 418, column: 6, scope: !6927)
!7009 = !DILocation(line: 423, column: 18, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7005, file: !6567, line: 423, column: 13)
!7011 = !DILocation(line: 423, column: 23, scope: !7010)
!7012 = !DILocation(line: 423, column: 13, scope: !7005)
!7013 = !DILocation(line: 0, scope: !7005)
!7014 = !DILocation(line: 524, column: 12, scope: !6927)
!7015 = !DILocation(line: 526, column: 15, scope: !6927)
!7016 = !DILocation(line: 528, column: 2, scope: !6927)
!7017 = distinct !DISubprogram(name: "usage_fault", scope: !6567, file: !6567, line: 539, type: !7018, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !7022)
!7018 = !DISubroutineType(types: !7019)
!7019 = !{!152, !7020}
!7020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7021, size: 32)
!7021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2732)
!7022 = !{!7023, !7024}
!7023 = !DILocalVariable(name: "esf", arg: 1, scope: !7017, file: !6567, line: 539, type: !7020)
!7024 = !DILocalVariable(name: "reason", scope: !7017, file: !6567, line: 541, type: !152)
!7025 = !DILocation(line: 0, scope: !7017)
!7026 = !DILocation(line: 543, column: 2, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !6567, line: 543, column: 2)
!7028 = distinct !DILexicalBlock(scope: !7029, file: !6567, line: 543, column: 2)
!7029 = distinct !DILexicalBlock(scope: !7030, file: !6567, line: 543, column: 2)
!7030 = distinct !DILexicalBlock(scope: !7017, file: !6567, line: 543, column: 2)
!7031 = !DILocation(line: 546, column: 12, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7017, file: !6567, line: 546, column: 6)
!7033 = !DILocation(line: 546, column: 17, scope: !7032)
!7034 = !DILocation(line: 546, column: 43, scope: !7032)
!7035 = !DILocation(line: 546, column: 6, scope: !7017)
!7036 = !DILocation(line: 547, column: 3, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !6567, line: 547, column: 3)
!7038 = distinct !DILexicalBlock(scope: !7039, file: !6567, line: 547, column: 3)
!7039 = distinct !DILexicalBlock(scope: !7040, file: !6567, line: 547, column: 3)
!7040 = distinct !DILexicalBlock(scope: !7041, file: !6567, line: 547, column: 3)
!7041 = distinct !DILexicalBlock(scope: !7032, file: !6567, line: 546, column: 49)
!7042 = !DILocation(line: 548, column: 2, scope: !7041)
!7043 = !DILocation(line: 549, column: 12, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7017, file: !6567, line: 549, column: 6)
!7045 = !DILocation(line: 549, column: 17, scope: !7044)
!7046 = !DILocation(line: 549, column: 43, scope: !7044)
!7047 = !DILocation(line: 549, column: 6, scope: !7017)
!7048 = !DILocation(line: 550, column: 3, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !6567, line: 550, column: 3)
!7050 = distinct !DILexicalBlock(scope: !7051, file: !6567, line: 550, column: 3)
!7051 = distinct !DILexicalBlock(scope: !7052, file: !6567, line: 550, column: 3)
!7052 = distinct !DILexicalBlock(scope: !7053, file: !6567, line: 550, column: 3)
!7053 = distinct !DILexicalBlock(scope: !7044, file: !6567, line: 549, column: 49)
!7054 = !DILocation(line: 551, column: 2, scope: !7053)
!7055 = !DILocation(line: 567, column: 12, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7017, file: !6567, line: 567, column: 6)
!7057 = !DILocation(line: 567, column: 17, scope: !7056)
!7058 = !DILocation(line: 567, column: 38, scope: !7056)
!7059 = !DILocation(line: 567, column: 6, scope: !7017)
!7060 = !DILocation(line: 568, column: 3, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !6567, line: 568, column: 3)
!7062 = distinct !DILexicalBlock(scope: !7063, file: !6567, line: 568, column: 3)
!7063 = distinct !DILexicalBlock(scope: !7064, file: !6567, line: 568, column: 3)
!7064 = distinct !DILexicalBlock(scope: !7065, file: !6567, line: 568, column: 3)
!7065 = distinct !DILexicalBlock(scope: !7056, file: !6567, line: 567, column: 44)
!7066 = !DILocation(line: 569, column: 2, scope: !7065)
!7067 = !DILocation(line: 570, column: 12, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7017, file: !6567, line: 570, column: 6)
!7069 = !DILocation(line: 570, column: 17, scope: !7068)
!7070 = !DILocation(line: 570, column: 39, scope: !7068)
!7071 = !DILocation(line: 570, column: 6, scope: !7017)
!7072 = !DILocation(line: 571, column: 3, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7074, file: !6567, line: 571, column: 3)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !6567, line: 571, column: 3)
!7075 = distinct !DILexicalBlock(scope: !7076, file: !6567, line: 571, column: 3)
!7076 = distinct !DILexicalBlock(scope: !7077, file: !6567, line: 571, column: 3)
!7077 = distinct !DILexicalBlock(scope: !7068, file: !6567, line: 570, column: 45)
!7078 = !DILocation(line: 572, column: 2, scope: !7077)
!7079 = !DILocation(line: 573, column: 12, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7017, file: !6567, line: 573, column: 6)
!7081 = !DILocation(line: 573, column: 17, scope: !7080)
!7082 = !DILocation(line: 573, column: 42, scope: !7080)
!7083 = !DILocation(line: 573, column: 6, scope: !7017)
!7084 = !DILocation(line: 574, column: 3, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7086, file: !6567, line: 574, column: 3)
!7086 = distinct !DILexicalBlock(scope: !7087, file: !6567, line: 574, column: 3)
!7087 = distinct !DILexicalBlock(scope: !7088, file: !6567, line: 574, column: 3)
!7088 = distinct !DILexicalBlock(scope: !7089, file: !6567, line: 574, column: 3)
!7089 = distinct !DILexicalBlock(scope: !7080, file: !6567, line: 573, column: 48)
!7090 = !DILocation(line: 575, column: 2, scope: !7089)
!7091 = !DILocation(line: 576, column: 12, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7017, file: !6567, line: 576, column: 6)
!7093 = !DILocation(line: 576, column: 17, scope: !7092)
!7094 = !DILocation(line: 576, column: 44, scope: !7092)
!7095 = !DILocation(line: 576, column: 6, scope: !7017)
!7096 = !DILocation(line: 577, column: 3, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !6567, line: 577, column: 3)
!7098 = distinct !DILexicalBlock(scope: !7099, file: !6567, line: 577, column: 3)
!7099 = distinct !DILexicalBlock(scope: !7100, file: !6567, line: 577, column: 3)
!7100 = distinct !DILexicalBlock(scope: !7101, file: !6567, line: 577, column: 3)
!7101 = distinct !DILexicalBlock(scope: !7092, file: !6567, line: 576, column: 50)
!7102 = !DILocation(line: 578, column: 2, scope: !7101)
!7103 = !DILocation(line: 581, column: 12, scope: !7017)
!7104 = !DILocation(line: 583, column: 2, scope: !7017)
!7105 = distinct !DISubprogram(name: "debug_monitor", scope: !6567, file: !6567, line: 632, type: !7106, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !7108)
!7106 = !DISubroutineType(types: !7107)
!7107 = !{null, !2731, !6640}
!7108 = !{!7109, !7110}
!7109 = !DILocalVariable(name: "esf", arg: 1, scope: !7105, file: !6567, line: 632, type: !2731)
!7110 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7105, file: !6567, line: 632, type: !6640)
!7111 = !DILocation(line: 0, scope: !7105)
!7112 = !DILocation(line: 634, column: 15, scope: !7105)
!7113 = !DILocation(line: 636, column: 2, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7115, file: !6567, line: 636, column: 2)
!7115 = distinct !DILexicalBlock(scope: !7116, file: !6567, line: 636, column: 2)
!7116 = distinct !DILexicalBlock(scope: !7117, file: !6567, line: 636, column: 2)
!7117 = distinct !DILexicalBlock(scope: !7105, file: !6567, line: 636, column: 2)
!7118 = !DILocation(line: 652, column: 1, scope: !7105)
!7119 = distinct !DISubprogram(name: "reserved_exception", scope: !6567, file: !6567, line: 776, type: !7120, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !7122)
!7120 = !DISubroutineType(types: !7121)
!7121 = !{null, !7020, !107}
!7122 = !{!7123, !7124}
!7123 = !DILocalVariable(name: "esf", arg: 1, scope: !7119, file: !6567, line: 776, type: !7020)
!7124 = !DILocalVariable(name: "fault", arg: 2, scope: !7119, file: !6567, line: 776, type: !107)
!7125 = !DILocation(line: 0, scope: !7119)
!7126 = !DILocation(line: 780, column: 2, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !6567, line: 780, column: 2)
!7128 = distinct !DILexicalBlock(scope: !7129, file: !6567, line: 780, column: 2)
!7129 = distinct !DILexicalBlock(scope: !7130, file: !6567, line: 780, column: 2)
!7130 = distinct !DILexicalBlock(scope: !7119, file: !6567, line: 780, column: 2)
!7131 = !DILocation(line: 783, column: 1, scope: !7119)
!7132 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6567, file: !6567, line: 658, type: !7133, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !7135)
!7133 = !DISubroutineType(types: !7134)
!7134 = !{!145, !2731}
!7135 = !{!7136, !7137, !7138}
!7136 = !DILocalVariable(name: "esf", arg: 1, scope: !7132, file: !6567, line: 658, type: !2731)
!7137 = !DILocalVariable(name: "ret_addr", scope: !7132, file: !6567, line: 660, type: !2774)
!7138 = !DILocalVariable(name: "fault_insn", scope: !7132, file: !6567, line: 686, type: !197)
!7139 = !DILocation(line: 0, scope: !7132)
!7140 = !DILocation(line: 660, column: 46, scope: !7132)
!7141 = !DILocation(line: 660, column: 23, scope: !7132)
!7142 = !DILocation(line: 682, column: 11, scope: !7132)
!7143 = !DILocation(line: 271, column: 3, scope: !7144, inlinedAt: !7145)
!7144 = distinct !DISubprogram(name: "__DSB", scope: !6257, file: !6257, line: 269, type: !3082, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !2156)
!7145 = distinct !DILocation(line: 683, column: 2, scope: !7132)
!7146 = !{i64 3508338}
!7147 = !DILocation(line: 260, column: 3, scope: !7148, inlinedAt: !7149)
!7148 = distinct !DISubprogram(name: "__ISB", scope: !6257, file: !6257, line: 258, type: !3082, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !2156)
!7149 = distinct !DILocation(line: 684, column: 2, scope: !7132)
!7150 = !{i64 3508055}
!7151 = !DILocation(line: 686, column: 35, scope: !7132)
!7152 = !DILocation(line: 686, column: 24, scope: !7132)
!7153 = !DILocation(line: 688, column: 11, scope: !7132)
!7154 = !DILocation(line: 271, column: 3, scope: !7144, inlinedAt: !7155)
!7155 = distinct !DILocation(line: 689, column: 2, scope: !7132)
!7156 = !DILocation(line: 260, column: 3, scope: !7148, inlinedAt: !7157)
!7157 = distinct !DILocation(line: 690, column: 2, scope: !7132)
!7158 = !DILocation(line: 693, column: 45, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7132, file: !6567, line: 693, column: 6)
!7160 = !DILocation(line: 699, column: 1, scope: !7132)
!7161 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6567, file: !6567, line: 1107, type: !3082, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !2156)
!7162 = !DILocation(line: 1111, column: 11, scope: !7161)
!7163 = !DILocation(line: 1136, column: 1, scope: !7161)
!7164 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7165, file: !7165, line: 26, type: !3082, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2775, retainedNodes: !7166)
!7165 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7166 = !{!7167}
!7167 = !DILocalVariable(name: "irq", scope: !7164, file: !7165, line: 28, type: !107)
!7168 = !DILocation(line: 0, scope: !7164)
!7169 = !DILocation(line: 30, column: 2, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7164, file: !7165, line: 30, column: 2)
!7171 = !DILocation(line: 31, column: 3, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7173, file: !7165, line: 30, column: 39)
!7173 = distinct !DILexicalBlock(scope: !7170, file: !7165, line: 30, column: 2)
!7174 = !DILocation(line: 30, column: 35, scope: !7173)
!7175 = !DILocation(line: 30, column: 13, scope: !7173)
!7176 = distinct !{!7176, !7169, !7177}
!7177 = !DILocation(line: 32, column: 2, scope: !7170)
!7178 = !DILocation(line: 33, column: 1, scope: !7164)
!7179 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6297, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2775, retainedNodes: !7180)
!7180 = !{!7181, !7182}
!7181 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7179, file: !463, line: 1814, type: !921)
!7182 = !DILocalVariable(name: "priority", arg: 2, scope: !7179, file: !463, line: 1814, type: !152)
!7183 = !DILocation(line: 0, scope: !7179)
!7184 = !DILocation(line: 1816, column: 7, scope: !7179)
!7185 = !DILocation(line: 0, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7179, file: !463, line: 1816, column: 7)
!7187 = !DILocation(line: 1824, column: 1, scope: !7179)
!7188 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7189, file: !7189, line: 27, type: !7190, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !7296)
!7189 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7190 = !DISubroutineType(types: !7191)
!7191 = !{null, !7192}
!7192 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !7193)
!7193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7194, size: 32)
!7194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !7195)
!7195 = !{!7196, !7254, !7266, !7267, !7268, !7269, !7270, !7276, !7291}
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7194, file: !309, line: 247, baseType: !7197, size: 384)
!7197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !7198)
!7198 = !{!7199, !7223, !7230, !7231, !7232, !7241, !7242, !7243}
!7199 = !DIDerivedType(tag: DW_TAG_member, scope: !7197, file: !309, line: 60, baseType: !7200, size: 64)
!7200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7197, file: !309, line: 60, size: 64, elements: !7201)
!7201 = !{!7202, !7217}
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7200, file: !309, line: 61, baseType: !7203, size: 64)
!7203 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !7204)
!7204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !7205)
!7205 = !{!7206, !7212}
!7206 = !DIDerivedType(tag: DW_TAG_member, scope: !7204, file: !319, line: 38, baseType: !7207, size: 32)
!7207 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7204, file: !319, line: 38, size: 32, elements: !7208)
!7208 = !{!7209, !7211}
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7207, file: !319, line: 39, baseType: !7210, size: 32)
!7210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7204, size: 32)
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7207, file: !319, line: 40, baseType: !7210, size: 32)
!7212 = !DIDerivedType(tag: DW_TAG_member, scope: !7204, file: !319, line: 42, baseType: !7213, size: 32, offset: 32)
!7213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7204, file: !319, line: 42, size: 32, elements: !7214)
!7214 = !{!7215, !7216}
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7213, file: !319, line: 43, baseType: !7210, size: 32)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7213, file: !319, line: 44, baseType: !7210, size: 32)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7200, file: !309, line: 62, baseType: !7218, size: 64)
!7218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !7219)
!7219 = !{!7220}
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7218, file: !335, line: 50, baseType: !7221, size: 64)
!7221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7222, size: 64, elements: !340)
!7222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7218, size: 32)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7197, file: !309, line: 68, baseType: !7224, size: 32, offset: 64)
!7224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7225, size: 32)
!7225 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !7226)
!7226 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !7227)
!7227 = !{!7228}
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7226, file: !345, line: 232, baseType: !7229, size: 64)
!7229 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !7204)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7197, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7197, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!7232 = !DIDerivedType(tag: DW_TAG_member, scope: !7197, file: !309, line: 90, baseType: !7233, size: 16, offset: 112)
!7233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7197, file: !309, line: 90, size: 16, elements: !7234)
!7234 = !{!7235, !7240}
!7235 = !DIDerivedType(tag: DW_TAG_member, scope: !7233, file: !309, line: 91, baseType: !7236, size: 16)
!7236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7233, file: !309, line: 91, size: 16, elements: !7237)
!7237 = !{!7238, !7239}
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7236, file: !309, line: 96, baseType: !359, size: 8)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7236, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7233, file: !309, line: 100, baseType: !197, size: 16)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7197, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7197, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7197, file: !309, line: 131, baseType: !7244, size: 192, offset: 192)
!7244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !7245)
!7245 = !{!7246, !7247, !7253}
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7244, file: !345, line: 245, baseType: !7203, size: 64)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7244, file: !345, line: 246, baseType: !7248, size: 32, offset: 64)
!7248 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !7249)
!7249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7250, size: 32)
!7250 = !DISubroutineType(types: !7251)
!7251 = !{null, !7252}
!7252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7244, size: 32)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7244, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7194, file: !309, line: 250, baseType: !7255, size: 288, offset: 384)
!7255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !7256)
!7256 = !{!7257, !7258, !7259, !7260, !7261, !7262, !7263, !7264, !7265}
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7255, file: !379, line: 26, baseType: !152, size: 32)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7255, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7255, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7255, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7255, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7255, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7255, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7255, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7255, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7194, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7194, file: !309, line: 256, baseType: !7225, size: 64, offset: 704)
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7194, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7194, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7194, file: !309, line: 300, baseType: !7271, size: 96, offset: 1056)
!7271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !7272)
!7272 = !{!7273, !7274, !7275}
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7271, file: !309, line: 153, baseType: !22, size: 32)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7271, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7271, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7194, file: !309, line: 325, baseType: !7277, size: 32, offset: 1152)
!7277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7278, size: 32)
!7278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !7279)
!7279 = !{!7280, !7286, !7287}
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7278, file: !406, line: 5074, baseType: !7281, size: 96)
!7281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !7282)
!7282 = !{!7283, !7284, !7285}
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7281, file: !410, line: 57, baseType: !413, size: 32)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7281, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7281, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7278, file: !406, line: 5075, baseType: !7225, size: 64, offset: 96)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7278, file: !406, line: 5076, baseType: !7288, size: 32, offset: 160)
!7288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !7289)
!7289 = !{!7290}
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7288, file: !420, line: 52, baseType: !22, size: 32)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7194, file: !309, line: 343, baseType: !7292, size: 64, offset: 1184)
!7292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !7293)
!7293 = !{!7294, !7295}
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7292, file: !379, line: 63, baseType: !152, size: 32)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7292, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!7296 = !{!7297}
!7297 = !DILocalVariable(name: "thread", arg: 1, scope: !7188, file: !7189, line: 27, type: !7192)
!7298 = !DILocation(line: 0, scope: !7188)
!7299 = !DILocation(line: 29, column: 6, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7188, file: !7189, line: 29, column: 6)
!7301 = !DILocation(line: 29, column: 15, scope: !7300)
!7302 = !DILocation(line: 29, column: 6, scope: !7188)
!7303 = !DILocation(line: 1031, column: 3, scope: !7304, inlinedAt: !7307)
!7304 = distinct !DISubprogram(name: "__get_IPSR", scope: !6257, file: !6257, line: 1027, type: !6344, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !7305)
!7305 = !{!7306}
!7306 = !DILocalVariable(name: "result", scope: !7304, file: !6257, line: 1029, type: !152)
!7307 = distinct !DILocation(line: 48, column: 10, scope: !7308, inlinedAt: !7312)
!7308 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7309, file: !7309, line: 46, type: !7310, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2820, retainedNodes: !2156)
!7309 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7310 = !DISubroutineType(types: !7311)
!7311 = !{!145}
!7312 = distinct !DILocation(line: 30, column: 7, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7314, file: !7189, line: 30, column: 7)
!7314 = distinct !DILexicalBlock(scope: !7300, file: !7189, line: 29, column: 26)
!7315 = !{i64 3497186}
!7316 = !DILocation(line: 0, scope: !7304, inlinedAt: !7307)
!7317 = !DILocation(line: 48, column: 9, scope: !7308, inlinedAt: !7312)
!7318 = !DILocation(line: 30, column: 7, scope: !7314)
!7319 = !DILocation(line: 42, column: 14, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7313, file: !7189, line: 30, column: 25)
!7321 = !DILocation(line: 48, column: 15, scope: !7320)
!7322 = !DILocation(line: 49, column: 3, scope: !7320)
!7323 = !DILocation(line: 52, column: 2, scope: !7188)
!7324 = !DILocation(line: 53, column: 1, scope: !7188)
!7325 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !304, file: !304, line: 127, type: !3082, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2156)
!7326 = !DILocation(line: 134, column: 2, scope: !7325)
!7327 = !DILocation(line: 156, column: 1, scope: !7325)
!7328 = !DILocation(line: 0, scope: !303)
!7329 = !DILocation(line: 289, column: 36, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !303, file: !304, line: 285, column: 2)
!7331 = !DILocation(line: 289, column: 42, scope: !7330)
!7332 = !DILocation(line: 300, column: 36, scope: !303)
!7333 = !DILocation(line: 301, column: 35, scope: !303)
!7334 = !DILocation(line: 302, column: 37, scope: !303)
!7335 = !DILocation(line: 311, column: 2, scope: !303)
!7336 = !DILocation(line: 316, column: 1, scope: !303)
!7337 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !491, file: !491, line: 180, type: !3082, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2156)
!7338 = !DILocation(line: 188, column: 12, scope: !7337)
!7339 = !DILocation(line: 271, column: 3, scope: !7340, inlinedAt: !7341)
!7340 = distinct !DISubprogram(name: "__DSB", scope: !6257, file: !6257, line: 269, type: !3082, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2156)
!7341 = distinct !DILocation(line: 192, column: 2, scope: !7337)
!7342 = !{i64 3669002}
!7343 = !DILocation(line: 260, column: 3, scope: !7344, inlinedAt: !7345)
!7344 = distinct !DISubprogram(name: "__ISB", scope: !6257, file: !6257, line: 258, type: !3082, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2156)
!7345 = distinct !DILocation(line: 193, column: 2, scope: !7337)
!7346 = !{i64 3668719}
!7347 = !DILocation(line: 194, column: 1, scope: !7337)
!7348 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !491, file: !491, line: 199, type: !3082, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2156)
!7349 = !DILocation(line: 282, column: 3, scope: !7350, inlinedAt: !7351)
!7350 = distinct !DISubprogram(name: "__DMB", scope: !6257, file: !6257, line: 280, type: !3082, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2156)
!7351 = distinct !DILocation(line: 202, column: 2, scope: !7348)
!7352 = !{i64 3669278}
!7353 = !DILocation(line: 205, column: 12, scope: !7348)
!7354 = !DILocation(line: 206, column: 1, scope: !7348)
!7355 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !491, file: !491, line: 275, type: !7356, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7369)
!7356 = !DISubroutineType(types: !7357)
!7357 = !{null, !7358, !1938, !6534, !6534}
!7358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7359, size: 32)
!7359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7360)
!7360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !7361)
!7361 = !{!7362, !7363, !7364}
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7360, file: !435, line: 53, baseType: !22, size: 32)
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7360, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7360, file: !435, line: 55, baseType: !7365, size: 32, offset: 64)
!7365 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !7366)
!7366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !7367)
!7367 = !{!7368}
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7366, file: !441, line: 150, baseType: !152, size: 32)
!7369 = !{!7370, !7371, !7372, !7373}
!7370 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7355, file: !491, line: 276, type: !7358)
!7371 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7355, file: !491, line: 276, type: !1938)
!7372 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7355, file: !491, line: 277, type: !6534)
!7373 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7355, file: !491, line: 277, type: !6534)
!7374 = !DILocation(line: 0, scope: !7355)
!7375 = !DILocation(line: 279, column: 6, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7355, file: !491, line: 279, column: 6)
!7377 = !DILocation(line: 280, column: 57, scope: !7376)
!7378 = !DILocation(line: 279, column: 6, scope: !7355)
!7379 = !DILocation(line: 282, column: 3, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7381, file: !491, line: 282, column: 3)
!7381 = distinct !DILexicalBlock(scope: !7382, file: !491, line: 282, column: 3)
!7382 = distinct !DILexicalBlock(scope: !7383, file: !491, line: 282, column: 3)
!7383 = distinct !DILexicalBlock(scope: !7376, file: !491, line: 280, column: 69)
!7384 = !DILocation(line: 285, column: 1, scope: !7355)
!7385 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7386, file: !7386, line: 220, type: !7387, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7389)
!7386 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7387 = !DISubroutineType(types: !7388)
!7388 = !{!107, !7358, !1938, !6534, !6534}
!7389 = !{!7390, !7391, !7392, !7393, !7394}
!7390 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7385, file: !7386, line: 221, type: !7358)
!7391 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7385, file: !7386, line: 221, type: !1938)
!7392 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7385, file: !7386, line: 222, type: !6534)
!7393 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7385, file: !7386, line: 223, type: !6534)
!7394 = !DILocalVariable(name: "mpu_reg_index", scope: !7385, file: !7386, line: 225, type: !107)
!7395 = !DILocation(line: 0, scope: !7385)
!7396 = !DILocation(line: 225, column: 22, scope: !7385)
!7397 = !DILocation(line: 233, column: 18, scope: !7385)
!7398 = !DILocation(line: 236, column: 23, scope: !7385)
!7399 = !DILocation(line: 236, column: 21, scope: !7385)
!7400 = !DILocation(line: 238, column: 2, scope: !7385)
!7401 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !491, file: !491, line: 105, type: !7402, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7404)
!7402 = !DISubroutineType(types: !7403)
!7403 = !{!107, !7358, !195, !195, !145}
!7404 = !{!7405, !7406, !7407, !7408, !7409, !7410}
!7405 = !DILocalVariable(name: "regions", arg: 1, scope: !7401, file: !491, line: 106, type: !7358)
!7406 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7401, file: !491, line: 106, type: !195)
!7407 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7401, file: !491, line: 106, type: !195)
!7408 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7401, file: !491, line: 107, type: !145)
!7409 = !DILocalVariable(name: "i", scope: !7401, file: !491, line: 109, type: !107)
!7410 = !DILocalVariable(name: "reg_index", scope: !7401, file: !491, line: 110, type: !107)
!7411 = !DILocation(line: 0, scope: !7401)
!7412 = !DILocation(line: 110, column: 18, scope: !7401)
!7413 = !DILocation(line: 112, column: 16, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7415, file: !491, line: 112, column: 2)
!7415 = distinct !DILexicalBlock(scope: !7401, file: !491, line: 112, column: 2)
!7416 = !DILocation(line: 112, column: 2, scope: !7415)
!7417 = !DILocation(line: 113, column: 7, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7419, file: !491, line: 113, column: 7)
!7419 = distinct !DILexicalBlock(scope: !7414, file: !491, line: 112, column: 36)
!7420 = !DILocation(line: 113, column: 18, scope: !7418)
!7421 = !DILocation(line: 113, column: 23, scope: !7418)
!7422 = !DILocation(line: 113, column: 7, scope: !7419)
!7423 = !DILocation(line: 118, column: 23, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7419, file: !491, line: 118, column: 7)
!7425 = !DILocation(line: 119, column: 7, scope: !7424)
!7426 = !DILocation(line: 118, column: 7, scope: !7419)
!7427 = !DILocation(line: 120, column: 4, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7429, file: !491, line: 120, column: 4)
!7429 = distinct !DILexicalBlock(scope: !7430, file: !491, line: 120, column: 4)
!7430 = distinct !DILexicalBlock(scope: !7431, file: !491, line: 120, column: 4)
!7431 = distinct !DILexicalBlock(scope: !7432, file: !491, line: 120, column: 4)
!7432 = distinct !DILexicalBlock(scope: !7424, file: !491, line: 119, column: 45)
!7433 = !DILocation(line: 121, column: 4, scope: !7432)
!7434 = !DILocation(line: 124, column: 36, scope: !7419)
!7435 = !DILocation(line: 124, column: 15, scope: !7419)
!7436 = !DILocation(line: 126, column: 17, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7419, file: !491, line: 126, column: 7)
!7438 = !DILocation(line: 126, column: 7, scope: !7419)
!7439 = !DILocation(line: 131, column: 12, scope: !7419)
!7440 = !DILocation(line: 132, column: 2, scope: !7419)
!7441 = !DILocation(line: 112, column: 32, scope: !7414)
!7442 = distinct !{!7442, !7416, !7443}
!7443 = !DILocation(line: 132, column: 2, scope: !7415)
!7444 = !DILocation(line: 135, column: 1, scope: !7401)
!7445 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7386, file: !7386, line: 63, type: !7446, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7448)
!7446 = !DISubroutineType(types: !7447)
!7447 = !{!107, !7358}
!7448 = !{!7449, !7450}
!7449 = !DILocalVariable(name: "part", arg: 1, scope: !7445, file: !7386, line: 63, type: !7358)
!7450 = !DILocalVariable(name: "partition_is_valid", scope: !7445, file: !7386, line: 70, type: !107)
!7451 = !DILocation(line: 0, scope: !7445)
!7452 = !DILocation(line: 71, column: 11, scope: !7445)
!7453 = !DILocation(line: 71, column: 37, scope: !7445)
!7454 = !{i32 0, i32 33}
!7455 = !DILocation(line: 72, column: 3, scope: !7445)
!7456 = !DILocation(line: 71, column: 30, scope: !7445)
!7457 = !DILocation(line: 75, column: 11, scope: !7445)
!7458 = !DILocation(line: 75, column: 17, scope: !7445)
!7459 = !DILocation(line: 75, column: 38, scope: !7445)
!7460 = !DILocation(line: 77, column: 2, scope: !7445)
!7461 = distinct !DISubprogram(name: "mpu_configure_region", scope: !491, file: !491, line: 79, type: !7462, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7464)
!7462 = !DISubroutineType(types: !7463)
!7463 = !{!107, !1938, !7358}
!7464 = !{!7465, !7466, !7467}
!7465 = !DILocalVariable(name: "index", arg: 1, scope: !7461, file: !491, line: 79, type: !1938)
!7466 = !DILocalVariable(name: "new_region", arg: 2, scope: !7461, file: !491, line: 80, type: !7358)
!7467 = !DILocalVariable(name: "region_conf", scope: !7461, file: !491, line: 82, type: !480)
!7468 = !DILocation(line: 0, scope: !7461)
!7469 = !DILocation(line: 82, column: 2, scope: !7461)
!7470 = !DILocation(line: 82, column: 24, scope: !7461)
!7471 = !DILocation(line: 87, column: 33, scope: !7461)
!7472 = !DILocation(line: 87, column: 14, scope: !7461)
!7473 = !DILocation(line: 87, column: 19, scope: !7461)
!7474 = !DILocation(line: 91, column: 55, scope: !7461)
!7475 = !DILocation(line: 92, column: 16, scope: !7461)
!7476 = !DILocation(line: 92, column: 53, scope: !7461)
!7477 = !DILocation(line: 91, column: 2, scope: !7461)
!7478 = !DILocation(line: 95, column: 9, scope: !7461)
!7479 = !DILocation(line: 97, column: 1, scope: !7461)
!7480 = !DILocation(line: 95, column: 2, scope: !7461)
!7481 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7386, file: !7386, line: 113, type: !7482, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7487)
!7482 = !DISubroutineType(types: !7483)
!7483 = !{null, !7484, !7485, !152, !152}
!7484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 32)
!7485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7486, size: 32)
!7486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7365)
!7487 = !{!7488, !7489, !7490, !7491}
!7488 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7481, file: !7386, line: 114, type: !7484)
!7489 = !DILocalVariable(name: "attr", arg: 2, scope: !7481, file: !7386, line: 115, type: !7485)
!7490 = !DILocalVariable(name: "base", arg: 3, scope: !7481, file: !7386, line: 115, type: !152)
!7491 = !DILocalVariable(name: "size", arg: 4, scope: !7481, file: !7386, line: 115, type: !152)
!7492 = !DILocation(line: 0, scope: !7481)
!7493 = !DILocation(line: 127, column: 23, scope: !7481)
!7494 = !DILocation(line: 127, column: 35, scope: !7481)
!7495 = !DILocation(line: 127, column: 33, scope: !7481)
!7496 = !DILocation(line: 127, column: 10, scope: !7481)
!7497 = !DILocation(line: 127, column: 15, scope: !7481)
!7498 = !DILocation(line: 129, column: 1, scope: !7481)
!7499 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !491, file: !491, line: 57, type: !7500, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7502)
!7500 = !DISubroutineType(types: !7501)
!7501 = !{!107, !1938, !478}
!7502 = !{!7503, !7504}
!7503 = !DILocalVariable(name: "index", arg: 1, scope: !7499, file: !491, line: 57, type: !1938)
!7504 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7499, file: !491, line: 58, type: !478)
!7505 = !DILocation(line: 0, scope: !7499)
!7506 = !DILocation(line: 61, column: 6, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7499, file: !491, line: 61, column: 6)
!7508 = !DILocation(line: 61, column: 12, scope: !7507)
!7509 = !DILocation(line: 61, column: 6, scope: !7499)
!7510 = !DILocation(line: 64, column: 3, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7512, file: !491, line: 64, column: 3)
!7512 = distinct !DILexicalBlock(scope: !7513, file: !491, line: 64, column: 3)
!7513 = distinct !DILexicalBlock(scope: !7514, file: !491, line: 64, column: 3)
!7514 = distinct !DILexicalBlock(scope: !7515, file: !491, line: 64, column: 3)
!7515 = distinct !DILexicalBlock(scope: !7507, file: !491, line: 61, column: 40)
!7516 = !DILocation(line: 65, column: 3, scope: !7515)
!7517 = !DILocation(line: 71, column: 2, scope: !7499)
!7518 = !DILocation(line: 73, column: 2, scope: !7499)
!7519 = !DILocation(line: 74, column: 1, scope: !7499)
!7520 = distinct !DISubprogram(name: "region_init", scope: !7386, file: !7386, line: 29, type: !7521, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7523)
!7521 = !DISubroutineType(types: !7522)
!7522 = !{null, !6534, !478}
!7523 = !{!7524, !7525}
!7524 = !DILocalVariable(name: "index", arg: 1, scope: !7520, file: !7386, line: 29, type: !6534)
!7525 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7520, file: !7386, line: 30, type: !478)
!7526 = !DILocation(line: 0, scope: !7520)
!7527 = !DILocation(line: 33, column: 2, scope: !7520)
!7528 = !DILocation(line: 47, column: 28, scope: !7520)
!7529 = !DILocation(line: 47, column: 33, scope: !7520)
!7530 = !DILocation(line: 48, column: 26, scope: !7520)
!7531 = !DILocation(line: 47, column: 12, scope: !7520)
!7532 = !DILocation(line: 49, column: 32, scope: !7520)
!7533 = !DILocation(line: 49, column: 37, scope: !7520)
!7534 = !DILocation(line: 49, column: 12, scope: !7520)
!7535 = !DILocation(line: 53, column: 1, scope: !7520)
!7536 = distinct !DISubprogram(name: "set_region_number", scope: !7537, file: !7537, line: 32, type: !6354, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7538)
!7537 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7538 = !{!7539}
!7539 = !DILocalVariable(name: "index", arg: 1, scope: !7536, file: !7537, line: 32, type: !152)
!7540 = !DILocation(line: 0, scope: !7536)
!7541 = !DILocation(line: 34, column: 11, scope: !7536)
!7542 = !DILocation(line: 35, column: 1, scope: !7536)
!7543 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7386, file: !7386, line: 88, type: !7544, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7546)
!7544 = !DISubroutineType(types: !7545)
!7545 = !{!152, !152}
!7546 = !{!7547}
!7547 = !DILocalVariable(name: "size", arg: 1, scope: !7543, file: !7386, line: 88, type: !152)
!7548 = !DILocation(line: 0, scope: !7543)
!7549 = !DILocation(line: 91, column: 11, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7543, file: !7386, line: 91, column: 6)
!7551 = !DILocation(line: 91, column: 6, scope: !7543)
!7552 = !DILocation(line: 100, column: 11, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7543, file: !7386, line: 100, column: 6)
!7554 = !DILocation(line: 100, column: 6, scope: !7543)
!7555 = !DILocation(line: 104, column: 35, scope: !7543)
!7556 = !DILocation(line: 104, column: 16, scope: !7543)
!7557 = !DILocation(line: 104, column: 50, scope: !7543)
!7558 = !DILocation(line: 104, column: 72, scope: !7543)
!7559 = !DILocation(line: 104, column: 2, scope: !7543)
!7560 = !DILocation(line: 106, column: 1, scope: !7543)
!7561 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !491, file: !491, line: 307, type: !7562, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7564)
!7562 = !DISubroutineType(types: !7563)
!7563 = !{null, !7358, !195}
!7564 = !{!7565, !7566}
!7565 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7561, file: !491, line: 308, type: !7358)
!7566 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7561, file: !491, line: 308, type: !195)
!7567 = !DILocation(line: 0, scope: !7561)
!7568 = !DILocation(line: 310, column: 6, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7561, file: !491, line: 310, column: 6)
!7570 = !DILocation(line: 311, column: 3, scope: !7569)
!7571 = !DILocation(line: 310, column: 6, scope: !7561)
!7572 = !DILocation(line: 313, column: 3, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7574, file: !491, line: 313, column: 3)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !491, line: 313, column: 3)
!7575 = distinct !DILexicalBlock(scope: !7576, file: !491, line: 313, column: 3)
!7576 = distinct !DILexicalBlock(scope: !7569, file: !491, line: 311, column: 15)
!7577 = !DILocation(line: 316, column: 1, scope: !7561)
!7578 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7386, file: !7386, line: 249, type: !7579, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7581)
!7579 = !DISubroutineType(types: !7580)
!7580 = !{!107, !7358, !195}
!7581 = !{!7582, !7583, !7584, !7585}
!7582 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7578, file: !7386, line: 250, type: !7358)
!7583 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7578, file: !7386, line: 250, type: !195)
!7584 = !DILocalVariable(name: "mpu_reg_index", scope: !7578, file: !7386, line: 252, type: !107)
!7585 = !DILocalVariable(name: "i", scope: !7586, file: !7386, line: 264, type: !107)
!7586 = distinct !DILexicalBlock(scope: !7587, file: !7386, line: 264, column: 3)
!7587 = distinct !DILexicalBlock(scope: !7588, file: !7386, line: 261, column: 32)
!7588 = distinct !DILexicalBlock(scope: !7578, file: !7386, line: 261, column: 6)
!7589 = !DILocation(line: 0, scope: !7578)
!7590 = !DILocation(line: 252, column: 22, scope: !7578)
!7591 = !DILocation(line: 258, column: 18, scope: !7578)
!7592 = !DILocation(line: 261, column: 20, scope: !7588)
!7593 = !DILocation(line: 261, column: 6, scope: !7578)
!7594 = !DILocation(line: 0, scope: !7586)
!7595 = !DILocation(line: 265, column: 4, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7597, file: !7386, line: 264, column: 59)
!7597 = distinct !DILexicalBlock(scope: !7586, file: !7386, line: 264, column: 3)
!7598 = !DILocation(line: 264, column: 55, scope: !7597)
!7599 = !DILocation(line: 264, column: 33, scope: !7597)
!7600 = !DILocation(line: 264, column: 3, scope: !7586)
!7601 = distinct !{!7601, !7600, !7602}
!7602 = !DILocation(line: 266, column: 3, scope: !7586)
!7603 = !DILocation(line: 269, column: 2, scope: !7578)
!7604 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7605, file: !7605, line: 218, type: !6354, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7606)
!7605 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7606 = !{!7607}
!7607 = !DILocalVariable(name: "rnr", arg: 1, scope: !7604, file: !7605, line: 218, type: !152)
!7608 = !DILocation(line: 0, scope: !7604)
!7609 = !DILocation(line: 220, column: 12, scope: !7604)
!7610 = !DILocation(line: 221, column: 13, scope: !7604)
!7611 = !DILocation(line: 222, column: 1, scope: !7604)
!7612 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !491, file: !491, line: 326, type: !7613, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7615)
!7613 = !DISubroutineType(types: !7614)
!7614 = !{!107}
!7615 = !{!7616}
!7616 = !DILocalVariable(name: "r_index", scope: !7612, file: !491, line: 328, type: !152)
!7617 = !DILocation(line: 330, column: 17, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7612, file: !491, line: 330, column: 6)
!7619 = !DILocation(line: 330, column: 29, scope: !7618)
!7620 = !DILocation(line: 330, column: 6, scope: !7612)
!7621 = !DILocation(line: 337, column: 3, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7623, file: !491, line: 337, column: 3)
!7623 = distinct !DILexicalBlock(scope: !7624, file: !491, line: 337, column: 3)
!7624 = distinct !DILexicalBlock(scope: !7625, file: !491, line: 337, column: 3)
!7625 = distinct !DILexicalBlock(scope: !7618, file: !491, line: 330, column: 50)
!7626 = !DILocation(line: 347, column: 2, scope: !7612)
!7627 = !DILocation(line: 0, scope: !7612)
!7628 = !DILocation(line: 364, column: 29, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7630, file: !491, line: 364, column: 2)
!7630 = distinct !DILexicalBlock(scope: !7612, file: !491, line: 364, column: 2)
!7631 = !DILocation(line: 364, column: 2, scope: !7630)
!7632 = !DILocation(line: 365, column: 25, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7629, file: !491, line: 364, column: 66)
!7634 = !DILocation(line: 365, column: 3, scope: !7633)
!7635 = !DILocation(line: 364, column: 62, scope: !7629)
!7636 = distinct !{!7636, !7631, !7637}
!7637 = !DILocation(line: 366, column: 2, scope: !7630)
!7638 = !DILocation(line: 369, column: 23, scope: !7612)
!7639 = !DILocation(line: 369, column: 21, scope: !7612)
!7640 = !DILocation(line: 372, column: 2, scope: !7612)
!7641 = !DILocation(line: 433, column: 2, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7643, file: !491, line: 433, column: 2)
!7643 = distinct !DILexicalBlock(scope: !7612, file: !491, line: 433, column: 2)
!7644 = !DILocation(line: 433, column: 2, scope: !7643)
!7645 = !DILocation(line: 433, column: 2, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7642, file: !491, line: 433, column: 2)
!7647 = !DILocation(line: 444, column: 1, scope: !7612)
!7648 = distinct !DISubprogram(name: "strcpy", scope: !7649, file: !7649, line: 20, type: !7650, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7654)
!7649 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7650 = !DISubroutineType(types: !7651)
!7651 = !{!193, !7652, !7653}
!7652 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !193)
!7653 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !118)
!7654 = !{!7655, !7656, !7657}
!7655 = !DILocalVariable(name: "d", arg: 1, scope: !7648, file: !7649, line: 20, type: !7652)
!7656 = !DILocalVariable(name: "s", arg: 2, scope: !7648, file: !7649, line: 20, type: !7653)
!7657 = !DILocalVariable(name: "dest", scope: !7648, file: !7649, line: 22, type: !193)
!7658 = !DILocation(line: 0, scope: !7648)
!7659 = !DILocation(line: 24, column: 9, scope: !7648)
!7660 = !DILocation(line: 24, column: 12, scope: !7648)
!7661 = !DILocation(line: 24, column: 2, scope: !7648)
!7662 = !DILocation(line: 25, column: 6, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7648, file: !7649, line: 24, column: 21)
!7664 = !DILocation(line: 26, column: 4, scope: !7663)
!7665 = !DILocation(line: 27, column: 4, scope: !7663)
!7666 = distinct !{!7666, !7661, !7667}
!7667 = !DILocation(line: 28, column: 2, scope: !7648)
!7668 = !DILocation(line: 30, column: 5, scope: !7648)
!7669 = !DILocation(line: 32, column: 2, scope: !7648)
!7670 = distinct !DISubprogram(name: "strncpy", scope: !7649, file: !7649, line: 42, type: !7671, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7673)
!7671 = !DISubroutineType(types: !7672)
!7672 = !{!193, !7652, !7653, !185}
!7673 = !{!7674, !7675, !7676, !7677}
!7674 = !DILocalVariable(name: "d", arg: 1, scope: !7670, file: !7649, line: 42, type: !7652)
!7675 = !DILocalVariable(name: "s", arg: 2, scope: !7670, file: !7649, line: 42, type: !7653)
!7676 = !DILocalVariable(name: "n", arg: 3, scope: !7670, file: !7649, line: 42, type: !185)
!7677 = !DILocalVariable(name: "dest", scope: !7670, file: !7649, line: 44, type: !193)
!7678 = !DILocation(line: 0, scope: !7670)
!7679 = !DILocation(line: 46, column: 12, scope: !7670)
!7680 = !DILocation(line: 46, column: 17, scope: !7670)
!7681 = !DILocation(line: 46, column: 20, scope: !7670)
!7682 = !DILocation(line: 46, column: 23, scope: !7670)
!7683 = !DILocation(line: 46, column: 2, scope: !7670)
!7684 = !DILocation(line: 47, column: 6, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7670, file: !7649, line: 46, column: 32)
!7686 = !DILocation(line: 48, column: 4, scope: !7685)
!7687 = !DILocation(line: 49, column: 4, scope: !7685)
!7688 = !DILocation(line: 50, column: 4, scope: !7685)
!7689 = distinct !{!7689, !7683, !7690}
!7690 = !DILocation(line: 51, column: 2, scope: !7670)
!7691 = !DILocation(line: 54, column: 6, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7670, file: !7649, line: 53, column: 16)
!7693 = !DILocation(line: 55, column: 4, scope: !7692)
!7694 = !DILocation(line: 56, column: 4, scope: !7692)
!7695 = !DILocation(line: 53, column: 11, scope: !7670)
!7696 = !DILocation(line: 53, column: 2, scope: !7670)
!7697 = distinct !{!7697, !7696, !7698}
!7698 = !DILocation(line: 57, column: 2, scope: !7670)
!7699 = !DILocation(line: 59, column: 2, scope: !7670)
!7700 = distinct !DISubprogram(name: "strchr", scope: !7649, file: !7649, line: 69, type: !7701, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7703)
!7701 = !DISubroutineType(types: !7702)
!7702 = !{!193, !118, !107}
!7703 = !{!7704, !7705, !7706}
!7704 = !DILocalVariable(name: "s", arg: 1, scope: !7700, file: !7649, line: 69, type: !118)
!7705 = !DILocalVariable(name: "c", arg: 2, scope: !7700, file: !7649, line: 69, type: !107)
!7706 = !DILocalVariable(name: "tmp", scope: !7700, file: !7649, line: 71, type: !120)
!7707 = !DILocation(line: 0, scope: !7700)
!7708 = !DILocation(line: 73, column: 2, scope: !7700)
!7709 = !DILocation(line: 73, column: 10, scope: !7700)
!7710 = !DILocation(line: 73, column: 13, scope: !7700)
!7711 = !DILocation(line: 73, column: 21, scope: !7700)
!7712 = !DILocation(line: 74, column: 4, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7700, file: !7649, line: 73, column: 38)
!7714 = distinct !{!7714, !7708, !7715}
!7715 = !DILocation(line: 75, column: 2, scope: !7700)
!7716 = !DILocation(line: 77, column: 9, scope: !7700)
!7717 = !DILocation(line: 77, column: 2, scope: !7700)
!7718 = distinct !DISubprogram(name: "strrchr", scope: !7649, file: !7649, line: 87, type: !7701, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7719)
!7719 = !{!7720, !7721, !7722}
!7720 = !DILocalVariable(name: "s", arg: 1, scope: !7718, file: !7649, line: 87, type: !118)
!7721 = !DILocalVariable(name: "c", arg: 2, scope: !7718, file: !7649, line: 87, type: !107)
!7722 = !DILocalVariable(name: "match", scope: !7718, file: !7649, line: 89, type: !193)
!7723 = !DILocation(line: 0, scope: !7718)
!7724 = !DILocation(line: 91, column: 2, scope: !7718)
!7725 = !DILocation(line: 92, column: 7, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !7649, line: 92, column: 7)
!7727 = distinct !DILexicalBlock(scope: !7718, file: !7649, line: 91, column: 5)
!7728 = !DILocation(line: 92, column: 10, scope: !7726)
!7729 = !DILocation(line: 92, column: 7, scope: !7727)
!7730 = !DILocation(line: 95, column: 13, scope: !7718)
!7731 = !DILocation(line: 95, column: 2, scope: !7727)
!7732 = distinct !{!7732, !7724, !7733}
!7733 = !DILocation(line: 95, column: 15, scope: !7718)
!7734 = !DILocation(line: 97, column: 2, scope: !7718)
!7735 = distinct !DISubprogram(name: "strlen", scope: !7649, file: !7649, line: 107, type: !7736, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7738)
!7736 = !DISubroutineType(types: !7737)
!7737 = !{!185, !118}
!7738 = !{!7739, !7740}
!7739 = !DILocalVariable(name: "s", arg: 1, scope: !7735, file: !7649, line: 107, type: !118)
!7740 = !DILocalVariable(name: "n", scope: !7735, file: !7649, line: 109, type: !185)
!7741 = !DILocation(line: 0, scope: !7735)
!7742 = !DILocation(line: 111, column: 9, scope: !7735)
!7743 = !DILocation(line: 111, column: 12, scope: !7735)
!7744 = !DILocation(line: 111, column: 2, scope: !7735)
!7745 = !DILocation(line: 112, column: 4, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7735, file: !7649, line: 111, column: 21)
!7747 = !DILocation(line: 113, column: 4, scope: !7746)
!7748 = distinct !{!7748, !7744, !7749}
!7749 = !DILocation(line: 114, column: 2, scope: !7735)
!7750 = !DILocation(line: 116, column: 2, scope: !7735)
!7751 = distinct !DISubprogram(name: "strnlen", scope: !7649, file: !7649, line: 126, type: !7752, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7754)
!7752 = !DISubroutineType(types: !7753)
!7753 = !{!185, !118, !185}
!7754 = !{!7755, !7756, !7757}
!7755 = !DILocalVariable(name: "s", arg: 1, scope: !7751, file: !7649, line: 126, type: !118)
!7756 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7751, file: !7649, line: 126, type: !185)
!7757 = !DILocalVariable(name: "n", scope: !7751, file: !7649, line: 128, type: !185)
!7758 = !DILocation(line: 0, scope: !7751)
!7759 = !DILocation(line: 130, column: 9, scope: !7751)
!7760 = !DILocation(line: 130, column: 12, scope: !7751)
!7761 = !DILocation(line: 130, column: 20, scope: !7751)
!7762 = !DILocation(line: 130, column: 2, scope: !7751)
!7763 = !DILocation(line: 131, column: 4, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7751, file: !7649, line: 130, column: 35)
!7765 = !DILocation(line: 132, column: 4, scope: !7764)
!7766 = distinct !{!7766, !7762, !7767}
!7767 = !DILocation(line: 133, column: 2, scope: !7751)
!7768 = !DILocation(line: 135, column: 2, scope: !7751)
!7769 = distinct !DISubprogram(name: "strcmp", scope: !7649, file: !7649, line: 145, type: !7770, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7772)
!7770 = !DISubroutineType(types: !7771)
!7771 = !{!107, !118, !118}
!7772 = !{!7773, !7774}
!7773 = !DILocalVariable(name: "s1", arg: 1, scope: !7769, file: !7649, line: 145, type: !118)
!7774 = !DILocalVariable(name: "s2", arg: 2, scope: !7769, file: !7649, line: 145, type: !118)
!7775 = !DILocation(line: 0, scope: !7769)
!7776 = !DILocation(line: 147, column: 10, scope: !7769)
!7777 = !DILocation(line: 147, column: 17, scope: !7769)
!7778 = !DILocation(line: 147, column: 14, scope: !7769)
!7779 = !DILocation(line: 147, column: 22, scope: !7769)
!7780 = !DILocation(line: 148, column: 5, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7769, file: !7649, line: 147, column: 40)
!7782 = !DILocation(line: 149, column: 5, scope: !7781)
!7783 = distinct !{!7783, !7784, !7785}
!7784 = !DILocation(line: 147, column: 2, scope: !7769)
!7785 = !DILocation(line: 150, column: 2, scope: !7769)
!7786 = !DILocation(line: 152, column: 9, scope: !7769)
!7787 = !DILocation(line: 152, column: 15, scope: !7769)
!7788 = !DILocation(line: 152, column: 13, scope: !7769)
!7789 = !DILocation(line: 152, column: 2, scope: !7769)
!7790 = distinct !DISubprogram(name: "strncmp", scope: !7649, file: !7649, line: 162, type: !7791, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7793)
!7791 = !DISubroutineType(types: !7792)
!7792 = !{!107, !118, !118, !185}
!7793 = !{!7794, !7795, !7796}
!7794 = !DILocalVariable(name: "s1", arg: 1, scope: !7790, file: !7649, line: 162, type: !118)
!7795 = !DILocalVariable(name: "s2", arg: 2, scope: !7790, file: !7649, line: 162, type: !118)
!7796 = !DILocalVariable(name: "n", arg: 3, scope: !7790, file: !7649, line: 162, type: !185)
!7797 = !DILocation(line: 0, scope: !7790)
!7798 = !DILocation(line: 164, column: 17, scope: !7790)
!7799 = !DILocation(line: 164, column: 21, scope: !7790)
!7800 = !DILocation(line: 164, column: 28, scope: !7790)
!7801 = !DILocation(line: 164, column: 25, scope: !7790)
!7802 = !DILocation(line: 164, column: 33, scope: !7790)
!7803 = !DILocation(line: 165, column: 5, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7790, file: !7649, line: 164, column: 51)
!7805 = !DILocation(line: 166, column: 5, scope: !7804)
!7806 = !DILocation(line: 167, column: 4, scope: !7804)
!7807 = distinct !{!7807, !7808, !7809}
!7808 = !DILocation(line: 164, column: 2, scope: !7790)
!7809 = !DILocation(line: 168, column: 2, scope: !7790)
!7810 = !DILocation(line: 170, column: 25, scope: !7790)
!7811 = !DILocation(line: 170, column: 31, scope: !7790)
!7812 = !DILocation(line: 170, column: 29, scope: !7790)
!7813 = !DILocation(line: 170, column: 9, scope: !7790)
!7814 = !DILocation(line: 170, column: 2, scope: !7790)
!7815 = distinct !DISubprogram(name: "strtok_r", scope: !7649, file: !7649, line: 180, type: !7816, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7818)
!7816 = !DISubroutineType(types: !7817)
!7817 = !{!193, !193, !118, !192}
!7818 = !{!7819, !7820, !7821, !7822, !7823}
!7819 = !DILocalVariable(name: "str", arg: 1, scope: !7815, file: !7649, line: 180, type: !193)
!7820 = !DILocalVariable(name: "sep", arg: 2, scope: !7815, file: !7649, line: 180, type: !118)
!7821 = !DILocalVariable(name: "state", arg: 3, scope: !7815, file: !7649, line: 180, type: !192)
!7822 = !DILocalVariable(name: "start", scope: !7815, file: !7649, line: 182, type: !193)
!7823 = !DILocalVariable(name: "end", scope: !7815, file: !7649, line: 182, type: !193)
!7824 = !DILocation(line: 0, scope: !7815)
!7825 = !DILocation(line: 184, column: 10, scope: !7815)
!7826 = !DILocation(line: 184, column: 22, scope: !7815)
!7827 = !DILocation(line: 187, column: 9, scope: !7815)
!7828 = !DILocation(line: 187, column: 16, scope: !7815)
!7829 = !DILocation(line: 187, column: 19, scope: !7815)
!7830 = !DILocation(line: 187, column: 2, scope: !7815)
!7831 = !DILocation(line: 188, column: 8, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7815, file: !7649, line: 187, column: 40)
!7833 = distinct !{!7833, !7830, !7834}
!7834 = !DILocation(line: 189, column: 2, scope: !7815)
!7835 = !DILocation(line: 198, column: 9, scope: !7815)
!7836 = !DILocation(line: 198, column: 18, scope: !7815)
!7837 = !DILocation(line: 198, column: 17, scope: !7815)
!7838 = !DILocation(line: 198, column: 2, scope: !7815)
!7839 = !DILocation(line: 199, column: 6, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7815, file: !7649, line: 198, column: 37)
!7841 = !DILocation(line: 198, column: 14, scope: !7815)
!7842 = distinct !{!7842, !7838, !7843}
!7843 = !DILocation(line: 200, column: 2, scope: !7815)
!7844 = !DILocation(line: 203, column: 8, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7846, file: !7649, line: 202, column: 20)
!7846 = distinct !DILexicalBlock(scope: !7815, file: !7649, line: 202, column: 6)
!7847 = !DILocation(line: 204, column: 16, scope: !7845)
!7848 = !DILocation(line: 205, column: 2, scope: !7845)
!7849 = !DILocation(line: 210, column: 1, scope: !7815)
!7850 = distinct !DISubprogram(name: "strcat", scope: !7649, file: !7649, line: 212, type: !7650, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7851)
!7851 = !{!7852, !7853}
!7852 = !DILocalVariable(name: "dest", arg: 1, scope: !7850, file: !7649, line: 212, type: !7652)
!7853 = !DILocalVariable(name: "src", arg: 2, scope: !7850, file: !7649, line: 212, type: !7653)
!7854 = !DILocation(line: 0, scope: !7850)
!7855 = !DILocation(line: 214, column: 16, scope: !7850)
!7856 = !DILocation(line: 214, column: 14, scope: !7850)
!7857 = !DILocation(line: 214, column: 2, scope: !7850)
!7858 = !DILocation(line: 215, column: 2, scope: !7850)
!7859 = distinct !DISubprogram(name: "strncat", scope: !7649, file: !7649, line: 218, type: !7671, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7860)
!7860 = !{!7861, !7862, !7863, !7864, !7865}
!7861 = !DILocalVariable(name: "dest", arg: 1, scope: !7859, file: !7649, line: 218, type: !7652)
!7862 = !DILocalVariable(name: "src", arg: 2, scope: !7859, file: !7649, line: 218, type: !7653)
!7863 = !DILocalVariable(name: "n", arg: 3, scope: !7859, file: !7649, line: 219, type: !185)
!7864 = !DILocalVariable(name: "orig_dest", scope: !7859, file: !7649, line: 221, type: !193)
!7865 = !DILocalVariable(name: "len", scope: !7859, file: !7649, line: 222, type: !185)
!7866 = !DILocation(line: 0, scope: !7859)
!7867 = !DILocation(line: 222, column: 15, scope: !7859)
!7868 = !DILocation(line: 224, column: 7, scope: !7859)
!7869 = !DILocation(line: 225, column: 14, scope: !7859)
!7870 = !DILocation(line: 225, column: 19, scope: !7859)
!7871 = !DILocation(line: 225, column: 11, scope: !7859)
!7872 = !DILocation(line: 225, column: 23, scope: !7859)
!7873 = !DILocation(line: 225, column: 28, scope: !7859)
!7874 = !DILocation(line: 225, column: 2, scope: !7859)
!7875 = !DILocation(line: 226, column: 17, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7859, file: !7649, line: 225, column: 38)
!7877 = !DILocation(line: 226, column: 8, scope: !7876)
!7878 = !DILocation(line: 226, column: 11, scope: !7876)
!7879 = distinct !{!7879, !7874, !7880}
!7880 = !DILocation(line: 227, column: 2, scope: !7859)
!7881 = !DILocation(line: 228, column: 8, scope: !7859)
!7882 = !DILocation(line: 230, column: 2, scope: !7859)
!7883 = distinct !DISubprogram(name: "memcmp", scope: !7649, file: !7649, line: 239, type: !7884, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7886)
!7884 = !DISubroutineType(types: !7885)
!7885 = !{!107, !13, !13, !185}
!7886 = !{!7887, !7888, !7889, !7890, !7891}
!7887 = !DILocalVariable(name: "m1", arg: 1, scope: !7883, file: !7649, line: 239, type: !13)
!7888 = !DILocalVariable(name: "m2", arg: 2, scope: !7883, file: !7649, line: 239, type: !13)
!7889 = !DILocalVariable(name: "n", arg: 3, scope: !7883, file: !7649, line: 239, type: !185)
!7890 = !DILocalVariable(name: "c1", scope: !7883, file: !7649, line: 241, type: !118)
!7891 = !DILocalVariable(name: "c2", scope: !7883, file: !7649, line: 242, type: !118)
!7892 = !DILocation(line: 0, scope: !7883)
!7893 = !DILocation(line: 244, column: 7, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7883, file: !7649, line: 244, column: 6)
!7895 = !DILocation(line: 244, column: 6, scope: !7883)
!7896 = !DILocation(line: 248, column: 10, scope: !7883)
!7897 = !DILocation(line: 248, column: 14, scope: !7883)
!7898 = !DILocation(line: 248, column: 19, scope: !7883)
!7899 = !DILocation(line: 248, column: 2, scope: !7883)
!7900 = !DILocation(line: 248, column: 23, scope: !7883)
!7901 = !DILocation(line: 248, column: 30, scope: !7883)
!7902 = !DILocation(line: 248, column: 27, scope: !7883)
!7903 = !DILocation(line: 249, column: 5, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7883, file: !7649, line: 248, column: 36)
!7905 = !DILocation(line: 250, column: 5, scope: !7904)
!7906 = distinct !{!7906, !7899, !7907}
!7907 = !DILocation(line: 251, column: 2, scope: !7883)
!7908 = !DILocation(line: 253, column: 9, scope: !7883)
!7909 = !DILocation(line: 253, column: 15, scope: !7883)
!7910 = !DILocation(line: 253, column: 13, scope: !7883)
!7911 = !DILocation(line: 253, column: 2, scope: !7883)
!7912 = !DILocation(line: 254, column: 1, scope: !7883)
!7913 = distinct !DISubprogram(name: "memmove", scope: !7649, file: !7649, line: 263, type: !7914, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7916)
!7914 = !DISubroutineType(types: !7915)
!7915 = !{!106, !106, !13, !185}
!7916 = !{!7917, !7918, !7919, !7920, !7921}
!7917 = !DILocalVariable(name: "d", arg: 1, scope: !7913, file: !7649, line: 263, type: !106)
!7918 = !DILocalVariable(name: "s", arg: 2, scope: !7913, file: !7649, line: 263, type: !13)
!7919 = !DILocalVariable(name: "n", arg: 3, scope: !7913, file: !7649, line: 263, type: !185)
!7920 = !DILocalVariable(name: "dest", scope: !7913, file: !7649, line: 265, type: !193)
!7921 = !DILocalVariable(name: "src", scope: !7913, file: !7649, line: 266, type: !118)
!7922 = !DILocation(line: 0, scope: !7913)
!7923 = !DILocation(line: 268, column: 21, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7913, file: !7649, line: 268, column: 6)
!7925 = !DILocation(line: 268, column: 28, scope: !7924)
!7926 = !DILocation(line: 268, column: 6, scope: !7913)
!7927 = !DILocation(line: 280, column: 12, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7924, file: !7649, line: 278, column: 9)
!7929 = !DILocation(line: 280, column: 3, scope: !7928)
!7930 = !DILocation(line: 275, column: 5, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7932, file: !7649, line: 274, column: 17)
!7932 = distinct !DILexicalBlock(scope: !7924, file: !7649, line: 268, column: 33)
!7933 = !DILocation(line: 276, column: 14, scope: !7931)
!7934 = !DILocation(line: 276, column: 4, scope: !7931)
!7935 = !DILocation(line: 276, column: 12, scope: !7931)
!7936 = !DILocation(line: 274, column: 12, scope: !7932)
!7937 = !DILocation(line: 274, column: 3, scope: !7932)
!7938 = distinct !{!7938, !7937, !7939}
!7939 = !DILocation(line: 277, column: 3, scope: !7932)
!7940 = !DILocation(line: 281, column: 12, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7928, file: !7649, line: 280, column: 17)
!7942 = !DILocation(line: 281, column: 10, scope: !7941)
!7943 = !DILocation(line: 282, column: 8, scope: !7941)
!7944 = !DILocation(line: 283, column: 7, scope: !7941)
!7945 = !DILocation(line: 284, column: 5, scope: !7941)
!7946 = distinct !{!7946, !7929, !7947}
!7947 = !DILocation(line: 285, column: 3, scope: !7928)
!7948 = !DILocation(line: 288, column: 2, scope: !7913)
!7949 = distinct !DISubprogram(name: "memcpy", scope: !7649, file: !7649, line: 298, type: !7950, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7954)
!7950 = !DISubroutineType(types: !7951)
!7951 = !{!106, !7952, !7953, !185}
!7952 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7953 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7954 = !{!7955, !7956, !7957, !7958, !7959}
!7955 = !DILocalVariable(name: "d", arg: 1, scope: !7949, file: !7649, line: 298, type: !7952)
!7956 = !DILocalVariable(name: "s", arg: 2, scope: !7949, file: !7649, line: 298, type: !7953)
!7957 = !DILocalVariable(name: "n", arg: 3, scope: !7949, file: !7649, line: 298, type: !185)
!7958 = !DILocalVariable(name: "d_byte", scope: !7949, file: !7649, line: 302, type: !1119)
!7959 = !DILocalVariable(name: "s_byte", scope: !7949, file: !7649, line: 303, type: !2851)
!7960 = !DILocation(line: 0, scope: !7949)
!7961 = !DILocation(line: 337, column: 11, scope: !7949)
!7962 = !DILocation(line: 337, column: 2, scope: !7949)
!7963 = !DILocation(line: 338, column: 25, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7949, file: !7649, line: 337, column: 16)
!7965 = !DILocation(line: 338, column: 17, scope: !7964)
!7966 = !DILocation(line: 338, column: 11, scope: !7964)
!7967 = !DILocation(line: 338, column: 15, scope: !7964)
!7968 = !DILocation(line: 339, column: 4, scope: !7964)
!7969 = distinct !{!7969, !7962, !7970}
!7970 = !DILocation(line: 340, column: 2, scope: !7949)
!7971 = !DILocation(line: 342, column: 2, scope: !7949)
!7972 = distinct !DISubprogram(name: "memset", scope: !7649, file: !7649, line: 352, type: !7973, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7975)
!7973 = !DISubroutineType(types: !7974)
!7974 = !{!106, !106, !107, !185}
!7975 = !{!7976, !7977, !7978, !7979, !7980}
!7976 = !DILocalVariable(name: "buf", arg: 1, scope: !7972, file: !7649, line: 352, type: !106)
!7977 = !DILocalVariable(name: "c", arg: 2, scope: !7972, file: !7649, line: 352, type: !107)
!7978 = !DILocalVariable(name: "n", arg: 3, scope: !7972, file: !7649, line: 352, type: !185)
!7979 = !DILocalVariable(name: "d_byte", scope: !7972, file: !7649, line: 356, type: !1119)
!7980 = !DILocalVariable(name: "c_byte", scope: !7972, file: !7649, line: 357, type: !196)
!7981 = !DILocation(line: 0, scope: !7972)
!7982 = !DILocation(line: 357, column: 25, scope: !7972)
!7983 = !DILocation(line: 389, column: 11, scope: !7972)
!7984 = !DILocation(line: 389, column: 2, scope: !7972)
!7985 = !DILocation(line: 390, column: 11, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7972, file: !7649, line: 389, column: 16)
!7987 = !DILocation(line: 390, column: 15, scope: !7986)
!7988 = !DILocation(line: 391, column: 4, scope: !7986)
!7989 = distinct !{!7989, !7984, !7990}
!7990 = !DILocation(line: 392, column: 2, scope: !7972)
!7991 = !DILocation(line: 394, column: 2, scope: !7972)
!7992 = distinct !DISubprogram(name: "memchr", scope: !7649, file: !7649, line: 404, type: !7993, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !7995)
!7993 = !DISubroutineType(types: !7994)
!7994 = !{!106, !13, !107, !185}
!7995 = !{!7996, !7997, !7998, !7999}
!7996 = !DILocalVariable(name: "s", arg: 1, scope: !7992, file: !7649, line: 404, type: !13)
!7997 = !DILocalVariable(name: "c", arg: 2, scope: !7992, file: !7649, line: 404, type: !107)
!7998 = !DILocalVariable(name: "n", arg: 3, scope: !7992, file: !7649, line: 404, type: !185)
!7999 = !DILocalVariable(name: "p", scope: !8000, file: !7649, line: 407, type: !2851)
!8000 = distinct !DILexicalBlock(scope: !8001, file: !7649, line: 406, column: 14)
!8001 = distinct !DILexicalBlock(scope: !7992, file: !7649, line: 406, column: 6)
!8002 = !DILocation(line: 0, scope: !7992)
!8003 = !DILocation(line: 406, column: 8, scope: !8001)
!8004 = !DILocation(line: 406, column: 6, scope: !7992)
!8005 = !DILocation(line: 409, column: 3, scope: !8000)
!8006 = !DILocation(line: 0, scope: !8000)
!8007 = !DILocation(line: 410, column: 8, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !8009, file: !7649, line: 410, column: 8)
!8009 = distinct !DILexicalBlock(scope: !8000, file: !7649, line: 409, column: 6)
!8010 = !DILocation(line: 410, column: 13, scope: !8008)
!8011 = !DILocation(line: 410, column: 8, scope: !8009)
!8012 = distinct !{!8012, !8005, !8013}
!8013 = !DILocation(line: 414, column: 20, scope: !8000)
!8014 = !DILocation(line: 417, column: 2, scope: !7992)
!8015 = !DILocation(line: 418, column: 1, scope: !7992)
!8016 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !501, file: !501, line: 23, type: !4119, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8017)
!8017 = !{!8018}
!8018 = !DILocalVariable(name: "hook", arg: 1, scope: !8016, file: !501, line: 23, type: !213)
!8019 = !DILocation(line: 0, scope: !8016)
!8020 = !DILocation(line: 25, column: 15, scope: !8016)
!8021 = !DILocation(line: 26, column: 1, scope: !8016)
!8022 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !501, file: !501, line: 14, type: !214, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8023)
!8023 = !{!8024}
!8024 = !DILocalVariable(name: "c", arg: 1, scope: !8022, file: !501, line: 14, type: !107)
!8025 = !DILocation(line: 0, scope: !8022)
!8026 = !DILocation(line: 18, column: 2, scope: !8022)
!8027 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !501, file: !501, line: 28, type: !8028, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8030)
!8028 = !DISubroutineType(types: !8029)
!8029 = !{!107, !107, !497}
!8030 = !{!8031, !8032}
!8031 = !DILocalVariable(name: "c", arg: 1, scope: !8027, file: !501, line: 28, type: !107)
!8032 = !DILocalVariable(name: "stream", arg: 2, scope: !8027, file: !501, line: 28, type: !497)
!8033 = !DILocation(line: 0, scope: !8027)
!8034 = !DILocation(line: 30, column: 27, scope: !8027)
!8035 = !DILocation(line: 30, column: 50, scope: !8027)
!8036 = !DILocation(line: 30, column: 9, scope: !8027)
!8037 = !DILocation(line: 30, column: 2, scope: !8027)
!8038 = distinct !DISubprogram(name: "fputc", scope: !501, file: !501, line: 41, type: !8028, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8039)
!8039 = !{!8040, !8041}
!8040 = !DILocalVariable(name: "c", arg: 1, scope: !8038, file: !501, line: 41, type: !107)
!8041 = !DILocalVariable(name: "stream", arg: 2, scope: !8038, file: !501, line: 41, type: !497)
!8042 = !DILocation(line: 0, scope: !8038)
!8043 = !DILocation(line: 43, column: 9, scope: !8038)
!8044 = !DILocation(line: 43, column: 2, scope: !8038)
!8045 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8046, file: !8046, line: 72, type: !8028, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8047)
!8046 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!8047 = !{!8048, !8049}
!8048 = !DILocalVariable(name: "c", arg: 1, scope: !8045, file: !8046, line: 72, type: !107)
!8049 = !DILocalVariable(name: "stream", arg: 2, scope: !8045, file: !8046, line: 72, type: !497)
!8050 = !DILocation(line: 0, scope: !8045)
!8051 = !DILocation(line: 81, column: 2, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8045, file: !8046, line: 81, column: 2)
!8053 = !{i64 2154812675}
!8054 = !DILocation(line: 82, column: 9, scope: !8045)
!8055 = !DILocation(line: 82, column: 2, scope: !8045)
!8056 = distinct !DISubprogram(name: "fputs", scope: !501, file: !501, line: 46, type: !8057, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8060)
!8057 = !DISubroutineType(types: !8058)
!8058 = !{!107, !7653, !8059}
!8059 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !497)
!8060 = !{!8061, !8062, !8063, !8064}
!8061 = !DILocalVariable(name: "s", arg: 1, scope: !8056, file: !501, line: 46, type: !7653)
!8062 = !DILocalVariable(name: "stream", arg: 2, scope: !8056, file: !501, line: 46, type: !8059)
!8063 = !DILocalVariable(name: "len", scope: !8056, file: !501, line: 48, type: !107)
!8064 = !DILocalVariable(name: "ret", scope: !8056, file: !501, line: 49, type: !107)
!8065 = !DILocation(line: 0, scope: !8056)
!8066 = !DILocation(line: 48, column: 12, scope: !8056)
!8067 = !DILocation(line: 51, column: 8, scope: !8056)
!8068 = !DILocation(line: 53, column: 13, scope: !8056)
!8069 = !DILocation(line: 53, column: 9, scope: !8056)
!8070 = !DILocation(line: 53, column: 2, scope: !8056)
!8071 = distinct !DISubprogram(name: "fwrite", scope: !501, file: !501, line: 99, type: !8072, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8074)
!8072 = !DISubroutineType(types: !8073)
!8073 = !{!185, !7953, !185, !185, !8059}
!8074 = !{!8075, !8076, !8077, !8078}
!8075 = !DILocalVariable(name: "ptr", arg: 1, scope: !8071, file: !501, line: 99, type: !7953)
!8076 = !DILocalVariable(name: "size", arg: 2, scope: !8071, file: !501, line: 99, type: !185)
!8077 = !DILocalVariable(name: "nitems", arg: 3, scope: !8071, file: !501, line: 99, type: !185)
!8078 = !DILocalVariable(name: "stream", arg: 4, scope: !8071, file: !501, line: 100, type: !8059)
!8079 = !DILocation(line: 0, scope: !8071)
!8080 = !DILocation(line: 102, column: 9, scope: !8071)
!8081 = !DILocation(line: 102, column: 2, scope: !8071)
!8082 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8046, file: !8046, line: 96, type: !8072, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8083)
!8083 = !{!8084, !8085, !8086, !8087}
!8084 = !DILocalVariable(name: "ptr", arg: 1, scope: !8082, file: !8046, line: 96, type: !7953)
!8085 = !DILocalVariable(name: "size", arg: 2, scope: !8082, file: !8046, line: 96, type: !185)
!8086 = !DILocalVariable(name: "nitems", arg: 3, scope: !8082, file: !8046, line: 96, type: !185)
!8087 = !DILocalVariable(name: "stream", arg: 4, scope: !8082, file: !8046, line: 96, type: !8059)
!8088 = !DILocation(line: 0, scope: !8082)
!8089 = !DILocation(line: 107, column: 2, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8082, file: !8046, line: 107, column: 2)
!8091 = !{i64 2154812779}
!8092 = !DILocation(line: 108, column: 9, scope: !8082)
!8093 = !DILocation(line: 108, column: 2, scope: !8082)
!8094 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !501, file: !501, line: 56, type: !8072, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8095)
!8095 = !{!8096, !8097, !8098, !8099, !8100, !8101, !8102, !8103}
!8096 = !DILocalVariable(name: "ptr", arg: 1, scope: !8094, file: !501, line: 56, type: !7953)
!8097 = !DILocalVariable(name: "size", arg: 2, scope: !8094, file: !501, line: 56, type: !185)
!8098 = !DILocalVariable(name: "nitems", arg: 3, scope: !8094, file: !501, line: 57, type: !185)
!8099 = !DILocalVariable(name: "stream", arg: 4, scope: !8094, file: !501, line: 57, type: !8059)
!8100 = !DILocalVariable(name: "i", scope: !8094, file: !501, line: 59, type: !185)
!8101 = !DILocalVariable(name: "j", scope: !8094, file: !501, line: 60, type: !185)
!8102 = !DILocalVariable(name: "p", scope: !8094, file: !501, line: 61, type: !2851)
!8103 = !DILabel(scope: !8094, name: "done", file: !501, line: 82)
!8104 = !DILocation(line: 0, scope: !8094)
!8105 = !DILocation(line: 63, column: 14, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8094, file: !501, line: 63, column: 6)
!8107 = !DILocation(line: 63, column: 24, scope: !8106)
!8108 = !DILocation(line: 72, column: 3, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8094, file: !501, line: 70, column: 5)
!8110 = !DILocation(line: 0, scope: !8109)
!8111 = !DILocation(line: 73, column: 8, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8113, file: !501, line: 73, column: 8)
!8113 = distinct !DILexicalBlock(scope: !8109, file: !501, line: 72, column: 6)
!8114 = !DILocation(line: 73, column: 29, scope: !8112)
!8115 = !DILocation(line: 73, column: 27, scope: !8112)
!8116 = !DILocation(line: 73, column: 21, scope: !8112)
!8117 = !DILocation(line: 73, column: 33, scope: !8112)
!8118 = !DILocation(line: 73, column: 8, scope: !8113)
!8119 = !DILocation(line: 76, column: 5, scope: !8113)
!8120 = !DILocation(line: 77, column: 14, scope: !8109)
!8121 = !DILocation(line: 77, column: 3, scope: !8113)
!8122 = distinct !{!8122, !8108, !8123}
!8123 = !DILocation(line: 77, column: 17, scope: !8109)
!8124 = !DILocation(line: 79, column: 4, scope: !8109)
!8125 = !DILocation(line: 80, column: 13, scope: !8094)
!8126 = !DILocation(line: 80, column: 2, scope: !8109)
!8127 = distinct !{!8127, !8128, !8129}
!8128 = !DILocation(line: 70, column: 2, scope: !8094)
!8129 = !DILocation(line: 80, column: 16, scope: !8094)
!8130 = !DILocation(line: 82, column: 1, scope: !8094)
!8131 = !DILocation(line: 83, column: 17, scope: !8094)
!8132 = !DILocation(line: 83, column: 2, scope: !8094)
!8133 = !DILocation(line: 84, column: 1, scope: !8094)
!8134 = distinct !DISubprogram(name: "puts", scope: !501, file: !501, line: 106, type: !8135, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8137)
!8135 = !DISubroutineType(types: !8136)
!8136 = !{!107, !118}
!8137 = !{!8138}
!8138 = !DILocalVariable(name: "s", arg: 1, scope: !8134, file: !501, line: 106, type: !118)
!8139 = !DILocation(line: 0, scope: !8134)
!8140 = !DILocation(line: 108, column: 6, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8134, file: !501, line: 108, column: 6)
!8142 = !DILocation(line: 108, column: 23, scope: !8141)
!8143 = !DILocation(line: 108, column: 6, scope: !8134)
!8144 = !DILocation(line: 112, column: 9, scope: !8134)
!8145 = !DILocation(line: 112, column: 29, scope: !8134)
!8146 = !DILocation(line: 112, column: 2, scope: !8134)
!8147 = !DILocation(line: 113, column: 1, scope: !8134)
!8148 = distinct !DISubprogram(name: "end_report", scope: !533, file: !533, line: 67, type: !3082, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8149 = !DILocation(line: 69, column: 6, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8148, file: !533, line: 69, column: 6)
!8151 = !DILocation(line: 0, scope: !8150)
!8152 = !DILocation(line: 74, column: 1, scope: !8148)
!8153 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_start", scope: !533, file: !533, line: 159, type: !3082, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8154 = !DILocation(line: 183, column: 1, scope: !8153)
!8155 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_stop", scope: !533, file: !533, line: 185, type: !3082, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8156 = !DILocation(line: 196, column: 1, scope: !8155)
!8157 = distinct !DISubprogram(name: "ztest_skip_failed_assumption", scope: !533, file: !533, line: 295, type: !3082, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8158 = !DILocation(line: 298, column: 34, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8160, file: !533, line: 297, column: 47)
!8160 = distinct !DILexicalBlock(scope: !8157, file: !533, line: 297, column: 6)
!8161 = !DILocation(line: 300, column: 2, scope: !8157)
!8162 = !DILocation(line: 301, column: 1, scope: !8157)
!8163 = distinct !DISubprogram(name: "ztest_test_skip", scope: !533, file: !533, line: 476, type: !3082, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8164 = !DILocation(line: 478, column: 10, scope: !8163)
!8165 = !DILocation(line: 478, column: 2, scope: !8163)
!8166 = !DILocation(line: 480, column: 15, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8163, file: !533, line: 478, column: 17)
!8168 = !DILocation(line: 481, column: 3, scope: !8167)
!8169 = !DILocation(line: 484, column: 15, scope: !8167)
!8170 = !DILocation(line: 485, column: 3, scope: !8167)
!8171 = !DILocation(line: 486, column: 3, scope: !8167)
!8172 = !DILocation(line: 489, column: 9, scope: !8167)
!8173 = !DILocation(line: 488, column: 3, scope: !8167)
!8174 = !DILocation(line: 490, column: 15, scope: !8167)
!8175 = !DILocation(line: 491, column: 3, scope: !8167)
!8176 = !DILocation(line: 493, column: 1, scope: !8163)
!8177 = distinct !DISubprogram(name: "test_finalize", scope: !533, file: !533, line: 432, type: !3082, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8178 = !DILocation(line: 435, column: 3, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8180, file: !533, line: 434, column: 41)
!8180 = distinct !DILexicalBlock(scope: !8177, file: !533, line: 434, column: 6)
!8181 = !DILocation(line: 436, column: 18, scope: !8179)
!8182 = !DILocation(line: 436, column: 3, scope: !8179)
!8183 = !DILocation(line: 438, column: 1, scope: !8177)
!8184 = distinct !DISubprogram(name: "get_friendly_phase_name", scope: !533, file: !533, line: 274, type: !8185, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8187)
!8185 = !DISubroutineType(types: !8186)
!8186 = !{!118, !532}
!8187 = !{!8188}
!8188 = !DILocalVariable(name: "phase", arg: 1, scope: !8184, file: !533, line: 274, type: !532)
!8189 = !DILocation(line: 0, scope: !8184)
!8190 = !DILocation(line: 276, column: 2, scope: !8184)
!8191 = !DILocation(line: 0, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8184, file: !533, line: 276, column: 17)
!8193 = !DILocation(line: 292, column: 1, scope: !8184)
!8194 = distinct !DISubprogram(name: "k_thread_abort", scope: !4413, file: !4413, line: 188, type: !8195, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8199)
!8195 = !DISubroutineType(types: !8196)
!8196 = !{null, !8197}
!8197 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !8198)
!8198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!8199 = !{!8200}
!8200 = !DILocalVariable(name: "thread", arg: 1, scope: !8194, file: !4413, line: 188, type: !8197)
!8201 = !DILocation(line: 0, scope: !8194)
!8202 = !DILocation(line: 197, column: 2, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8194, file: !4413, line: 197, column: 2)
!8204 = !{i64 2154774478}
!8205 = !DILocation(line: 198, column: 2, scope: !8194)
!8206 = !DILocation(line: 199, column: 1, scope: !8194)
!8207 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !8208, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8208 = !DISubroutineType(types: !8209)
!8209 = !{!8197}
!8210 = !DILocation(line: 535, column: 9, scope: !8207)
!8211 = !DILocation(line: 535, column: 2, scope: !8207)
!8212 = distinct !DISubprogram(name: "z_current_get", scope: !4413, file: !4413, line: 173, type: !8208, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8213 = !DILocation(line: 180, column: 2, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8212, file: !4413, line: 180, column: 2)
!8215 = !{i64 2154774410}
!8216 = !DILocation(line: 181, column: 9, scope: !8212)
!8217 = !DILocation(line: 181, column: 2, scope: !8212)
!8218 = distinct !DISubprogram(name: "ztest_test_fail", scope: !533, file: !533, line: 440, type: !3082, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8219 = !DILocation(line: 442, column: 10, scope: !8218)
!8220 = !DILocation(line: 442, column: 2, scope: !8218)
!8221 = !DILocation(line: 444, column: 15, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8218, file: !533, line: 442, column: 17)
!8223 = !DILocation(line: 445, column: 3, scope: !8222)
!8224 = !DILocation(line: 448, column: 15, scope: !8222)
!8225 = !DILocation(line: 449, column: 3, scope: !8222)
!8226 = !DILocation(line: 450, column: 3, scope: !8222)
!8227 = !DILocation(line: 453, column: 9, scope: !8222)
!8228 = !DILocation(line: 452, column: 3, scope: !8222)
!8229 = !DILocation(line: 454, column: 15, scope: !8222)
!8230 = !DILocation(line: 455, column: 3, scope: !8222)
!8231 = !DILocation(line: 457, column: 1, scope: !8218)
!8232 = distinct !DISubprogram(name: "ztest_test_pass", scope: !533, file: !533, line: 459, type: !3082, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8233 = !DILocation(line: 461, column: 10, scope: !8232)
!8234 = !DILocation(line: 461, column: 2, scope: !8232)
!8235 = !DILocation(line: 463, column: 15, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8232, file: !533, line: 461, column: 17)
!8237 = !DILocation(line: 465, column: 3, scope: !8236)
!8238 = !DILocation(line: 468, column: 9, scope: !8236)
!8239 = !DILocation(line: 467, column: 3, scope: !8236)
!8240 = !DILocation(line: 469, column: 15, scope: !8236)
!8241 = !DILocation(line: 470, column: 7, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8236, file: !533, line: 470, column: 7)
!8243 = !DILocation(line: 470, column: 13, scope: !8242)
!8244 = !DILocation(line: 470, column: 7, scope: !8236)
!8245 = !DILocation(line: 0, scope: !8236)
!8246 = !DILocation(line: 474, column: 1, scope: !8232)
!8247 = distinct !DISubprogram(name: "ztest_simple_1cpu_before", scope: !533, file: !533, line: 495, type: !131, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8248)
!8248 = !{!8249}
!8249 = !DILocalVariable(name: "data", arg: 1, scope: !8247, file: !533, line: 495, type: !106)
!8250 = !DILocation(line: 0, scope: !8247)
!8251 = !DILocation(line: 498, column: 2, scope: !8247)
!8252 = !DILocation(line: 499, column: 1, scope: !8247)
!8253 = distinct !DISubprogram(name: "z_test_1cpu_start", scope: !8254, file: !8254, line: 24, type: !3082, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8254 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!8255 = !DILocation(line: 32, column: 2, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8253, file: !8254, line: 32, column: 2)
!8257 = !{i64 2154896865}
!8258 = !DILocation(line: 34, column: 1, scope: !8253)
!8259 = distinct !DISubprogram(name: "ztest_simple_1cpu_after", scope: !533, file: !533, line: 501, type: !131, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8260)
!8260 = !{!8261}
!8261 = !DILocalVariable(name: "data", arg: 1, scope: !8259, file: !533, line: 501, type: !106)
!8262 = !DILocation(line: 0, scope: !8259)
!8263 = !DILocation(line: 504, column: 2, scope: !8259)
!8264 = !DILocation(line: 505, column: 1, scope: !8259)
!8265 = distinct !DISubprogram(name: "z_test_1cpu_stop", scope: !8254, file: !8254, line: 47, type: !3082, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8266 = !DILocation(line: 55, column: 2, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8265, file: !8254, line: 55, column: 2)
!8268 = !{i64 2154896933}
!8269 = !DILocation(line: 57, column: 1, scope: !8265)
!8270 = distinct !DISubprogram(name: "z_ztest_get_next_test", scope: !533, file: !533, line: 617, type: !8271, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8290)
!8271 = !DISubroutineType(types: !8272)
!8272 = !{!8273, !118, !8273}
!8273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8274, size: 32)
!8274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !8275)
!8275 = !{!8276, !8277, !8278, !8279, !8280}
!8276 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8274, file: !114, line: 98, baseType: !118, size: 32)
!8277 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8274, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !8274, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !8274, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!8280 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8274, file: !114, line: 104, baseType: !8281, size: 32, offset: 128)
!8281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8282)
!8282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8283, size: 32)
!8283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !8284)
!8284 = !{!8285, !8286, !8287, !8288, !8289}
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8283, file: !114, line: 125, baseType: !152, size: 32)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8283, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8283, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !8283, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !8283, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!8290 = !{!8291, !8292, !8293}
!8291 = !DILocalVariable(name: "suite", arg: 1, scope: !8270, file: !533, line: 617, type: !118)
!8292 = !DILocalVariable(name: "prev", arg: 2, scope: !8270, file: !533, line: 617, type: !8273)
!8293 = !DILocalVariable(name: "test", scope: !8270, file: !533, line: 619, type: !8273)
!8294 = !DILocation(line: 0, scope: !8270)
!8295 = !DILocation(line: 619, column: 39, scope: !8270)
!8296 = !DILocation(line: 619, column: 33, scope: !8270)
!8297 = !DILocation(line: 621, column: 14, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8299, file: !533, line: 621, column: 2)
!8299 = distinct !DILexicalBlock(scope: !8270, file: !533, line: 621, column: 2)
!8300 = !DILocation(line: 621, column: 2, scope: !8299)
!8301 = !DILocation(line: 622, column: 27, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8303, file: !533, line: 622, column: 7)
!8303 = distinct !DILexicalBlock(scope: !8298, file: !533, line: 621, column: 51)
!8304 = !DILocation(line: 622, column: 7, scope: !8302)
!8305 = !DILocation(line: 622, column: 44, scope: !8302)
!8306 = !DILocation(line: 622, column: 7, scope: !8303)
!8307 = !DILocation(line: 621, column: 43, scope: !8298)
!8308 = distinct !{!8308, !8300, !8309}
!8309 = !DILocation(line: 625, column: 2, scope: !8299)
!8310 = !DILocation(line: 627, column: 1, scope: !8270)
!8311 = distinct !DISubprogram(name: "z_ztest_run_test_suite", scope: !533, file: !533, line: 764, type: !8135, scopeLine: 765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8312)
!8312 = !{!8313}
!8313 = !DILocalVariable(name: "name", arg: 1, scope: !8311, file: !533, line: 764, type: !118)
!8314 = !DILocation(line: 0, scope: !8311)
!8315 = !DILocation(line: 766, column: 36, scope: !8311)
!8316 = !DILocation(line: 766, column: 9, scope: !8311)
!8317 = !DILocation(line: 766, column: 2, scope: !8311)
!8318 = distinct !DISubprogram(name: "ztest_find_test_suite", scope: !533, file: !533, line: 604, type: !8319, scopeLine: 605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8338)
!8319 = !DISubroutineType(types: !8320)
!8320 = !{!8321, !118}
!8321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8322, size: 32)
!8322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !8323)
!8323 = !{!8324, !8325, !8326, !8327, !8328, !8329, !8330}
!8324 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8322, file: !114, line: 179, baseType: !117, size: 32)
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !8322, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !8322, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!8327 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !8322, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!8328 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !8322, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!8329 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !8322, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8322, file: !114, line: 197, baseType: !8331, size: 32, offset: 192)
!8331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8332)
!8332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8333, size: 32)
!8333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !8334)
!8334 = !{!8335, !8336, !8337}
!8335 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8333, file: !114, line: 116, baseType: !152, size: 32)
!8336 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8333, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!8337 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8333, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!8338 = !{!8339, !8340}
!8339 = !DILocalVariable(name: "name", arg: 1, scope: !8318, file: !533, line: 604, type: !118)
!8340 = !DILocalVariable(name: "node", scope: !8318, file: !533, line: 606, type: !8321)
!8341 = !DILocation(line: 0, scope: !8318)
!8342 = !DILocation(line: 608, column: 2, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8318, file: !533, line: 608, column: 2)
!8344 = !DILocation(line: 609, column: 26, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8346, file: !533, line: 609, column: 7)
!8346 = distinct !DILexicalBlock(scope: !8347, file: !533, line: 608, column: 87)
!8347 = distinct !DILexicalBlock(scope: !8343, file: !533, line: 608, column: 2)
!8348 = !DILocation(line: 609, column: 7, scope: !8345)
!8349 = !DILocation(line: 609, column: 32, scope: !8345)
!8350 = !DILocation(line: 609, column: 7, scope: !8346)
!8351 = !DILocation(line: 608, column: 79, scope: !8347)
!8352 = !DILocation(line: 608, column: 49, scope: !8347)
!8353 = distinct !{!8353, !8342, !8354}
!8354 = !DILocation(line: 612, column: 2, scope: !8343)
!8355 = !DILocation(line: 615, column: 1, scope: !8318)
!8356 = distinct !DISubprogram(name: "z_ztest_run_test_suite_ptr", scope: !533, file: !533, line: 652, type: !8357, scopeLine: 653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8359)
!8357 = !DISubroutineType(types: !8358)
!8358 = !{!107, !8321}
!8359 = !{!8360, !8361, !8362, !8363, !8364, !8365}
!8360 = !DILocalVariable(name: "suite", arg: 1, scope: !8356, file: !533, line: 652, type: !8321)
!8361 = !DILocalVariable(name: "test", scope: !8356, file: !533, line: 654, type: !8273)
!8362 = !DILocalVariable(name: "data", scope: !8356, file: !533, line: 655, type: !106)
!8363 = !DILocalVariable(name: "fail", scope: !8356, file: !533, line: 656, type: !107)
!8364 = !DILocalVariable(name: "tc_result", scope: !8356, file: !533, line: 657, type: !107)
!8365 = !DILocalVariable(name: "i", scope: !8366, file: !533, line: 692, type: !107)
!8366 = distinct !DILexicalBlock(scope: !8356, file: !533, line: 692, column: 2)
!8367 = !DILocation(line: 0, scope: !8356)
!8368 = !DILocation(line: 663, column: 12, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8356, file: !533, line: 663, column: 6)
!8370 = !DILocation(line: 663, column: 6, scope: !8356)
!8371 = !DILocation(line: 664, column: 15, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8369, file: !533, line: 663, column: 21)
!8373 = !DILocation(line: 665, column: 3, scope: !8372)
!8374 = !DILocation(line: 679, column: 2, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8356, file: !533, line: 679, column: 2)
!8376 = !DILocation(line: 680, column: 33, scope: !8356)
!8377 = !DILocation(line: 681, column: 14, scope: !8356)
!8378 = !DILocation(line: 682, column: 8, scope: !8356)
!8379 = !DILocation(line: 688, column: 55, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8356, file: !533, line: 688, column: 6)
!8381 = !DILocation(line: 688, column: 61, scope: !8380)
!8382 = !DILocation(line: 688, column: 6, scope: !8356)
!8383 = !DILocation(line: 689, column: 10, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8380, file: !533, line: 688, column: 70)
!8385 = !DILocation(line: 690, column: 2, scope: !8384)
!8386 = !DILocation(line: 0, scope: !8366)
!8387 = !DILocation(line: 727, column: 3, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8389, file: !533, line: 692, column: 46)
!8389 = distinct !DILexicalBlock(scope: !8366, file: !533, line: 692, column: 2)
!8390 = !DILocation(line: 0, scope: !8388)
!8391 = !DILocation(line: 727, column: 48, scope: !8388)
!8392 = !DILocation(line: 727, column: 19, scope: !8388)
!8393 = !DILocation(line: 727, column: 61, scope: !8388)
!8394 = !DILocation(line: 728, column: 41, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8396, file: !533, line: 728, column: 8)
!8396 = distinct !DILexicalBlock(scope: !8388, file: !533, line: 727, column: 71)
!8397 = !DILocation(line: 728, column: 53, scope: !8395)
!8398 = !DILocation(line: 728, column: 8, scope: !8395)
!8399 = !DILocation(line: 728, column: 8, scope: !8396)
!8400 = !DILocation(line: 729, column: 11, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8395, file: !533, line: 728, column: 60)
!8402 = !DILocation(line: 729, column: 18, scope: !8401)
!8403 = !DILocation(line: 729, column: 27, scope: !8401)
!8404 = !DILocation(line: 730, column: 17, scope: !8401)
!8405 = !DILocation(line: 731, column: 9, scope: !8401)
!8406 = !DILocation(line: 732, column: 12, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !533, line: 731, column: 31)
!8408 = distinct !DILexicalBlock(scope: !8401, file: !533, line: 731, column: 9)
!8409 = !DILocation(line: 732, column: 19, scope: !8407)
!8410 = !DILocation(line: 733, column: 5, scope: !8407)
!8411 = !DILocation(line: 734, column: 12, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8413, file: !533, line: 733, column: 38)
!8413 = distinct !DILexicalBlock(scope: !8408, file: !533, line: 733, column: 16)
!8414 = !DILocation(line: 734, column: 19, scope: !8412)
!8415 = !DILocation(line: 735, column: 5, scope: !8412)
!8416 = !DILocation(line: 736, column: 12, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8418, file: !533, line: 735, column: 38)
!8418 = distinct !DILexicalBlock(scope: !8413, file: !533, line: 735, column: 16)
!8419 = !DILocation(line: 736, column: 19, scope: !8417)
!8420 = !DILocation(line: 737, column: 5, scope: !8417)
!8421 = !DILocation(line: 0, scope: !8408)
!8422 = !DILocation(line: 739, column: 19, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8401, file: !533, line: 739, column: 9)
!8424 = !DILocation(line: 739, column: 9, scope: !8401)
!8425 = !DILocation(line: 744, column: 31, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8396, file: !533, line: 744, column: 8)
!8427 = !DILocation(line: 744, column: 43, scope: !8426)
!8428 = !DILocation(line: 744, column: 8, scope: !8396)
!8429 = distinct !{!8429, !8387, !8430}
!8430 = !DILocation(line: 747, column: 3, scope: !8388)
!8431 = !DILocation(line: 750, column: 7, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8388, file: !533, line: 750, column: 7)
!8433 = !DILocation(line: 750, column: 38, scope: !8432)
!8434 = !DILocation(line: 751, column: 16, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8432, file: !533, line: 750, column: 52)
!8436 = !DILocation(line: 752, column: 3, scope: !8435)
!8437 = !DILocation(line: 755, column: 2, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8439, file: !533, line: 755, column: 2)
!8439 = distinct !DILexicalBlock(scope: !8356, file: !533, line: 755, column: 2)
!8440 = !DILocation(line: 0, scope: !8438)
!8441 = !DILocation(line: 756, column: 8, scope: !8356)
!8442 = !DILocation(line: 757, column: 13, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8356, file: !533, line: 757, column: 6)
!8444 = !DILocation(line: 757, column: 22, scope: !8443)
!8445 = !DILocation(line: 757, column: 6, scope: !8356)
!8446 = !DILocation(line: 758, column: 3, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8443, file: !533, line: 757, column: 31)
!8448 = !DILocation(line: 759, column: 2, scope: !8447)
!8449 = !DILocation(line: 762, column: 1, scope: !8356)
!8450 = distinct !DISubprogram(name: "run_test", scope: !533, file: !533, line: 521, type: !8451, scopeLine: 522, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8453)
!8451 = !DISubroutineType(types: !8452)
!8452 = !{!107, !8321, !8273, !106}
!8453 = !{!8454, !8455, !8456, !8457}
!8454 = !DILocalVariable(name: "suite", arg: 1, scope: !8450, file: !533, line: 521, type: !8321)
!8455 = !DILocalVariable(name: "test", arg: 2, scope: !8450, file: !533, line: 521, type: !8273)
!8456 = !DILocalVariable(name: "data", arg: 3, scope: !8450, file: !533, line: 521, type: !106)
!8457 = !DILocalVariable(name: "ret", scope: !8450, file: !533, line: 523, type: !107)
!8458 = !DILocation(line: 0, scope: !8450)
!8459 = !DILocation(line: 528, column: 2, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8450, file: !533, line: 528, column: 2)
!8461 = !DILocation(line: 530, column: 8, scope: !8450)
!8462 = !DILocation(line: 536, column: 3, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8464, file: !533, line: 535, column: 41)
!8464 = distinct !DILexicalBlock(scope: !8450, file: !533, line: 535, column: 6)
!8465 = !DILocation(line: 539, column: 32, scope: !8463)
!8466 = !DILocation(line: 539, column: 39, scope: !8463)
!8467 = !DILocation(line: 541, column: 11, scope: !8463)
!8468 = !DILocation(line: 541, column: 26, scope: !8463)
!8469 = !DILocation(line: 537, column: 3, scope: !8463)
!8470 = !DILocation(line: 543, column: 3, scope: !8463)
!8471 = !DILocation(line: 544, column: 13, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8463, file: !533, line: 544, column: 7)
!8473 = !DILocation(line: 544, column: 18, scope: !8472)
!8474 = !DILocation(line: 544, column: 7, scope: !8463)
!8475 = !DILocation(line: 545, column: 4, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8472, file: !533, line: 544, column: 27)
!8477 = !DILocation(line: 546, column: 3, scope: !8476)
!8478 = !DILocation(line: 548, column: 7, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8463, file: !533, line: 548, column: 7)
!8480 = !DILocation(line: 548, column: 46, scope: !8479)
!8481 = !DILocation(line: 550, column: 4, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8479, file: !533, line: 549, column: 47)
!8483 = !DILocation(line: 551, column: 4, scope: !8482)
!8484 = !DILocation(line: 552, column: 3, scope: !8482)
!8485 = !DILocation(line: 564, column: 8, scope: !8450)
!8486 = !DILocation(line: 565, column: 13, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8450, file: !533, line: 565, column: 6)
!8488 = !DILocation(line: 565, column: 19, scope: !8487)
!8489 = !DILocation(line: 565, column: 6, scope: !8450)
!8490 = !DILocation(line: 566, column: 3, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8487, file: !533, line: 565, column: 28)
!8492 = !DILocation(line: 567, column: 2, scope: !8491)
!8493 = !DILocation(line: 568, column: 2, scope: !8450)
!8494 = !DILocation(line: 570, column: 2, scope: !8450)
!8495 = !DILocation(line: 571, column: 6, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8450, file: !533, line: 571, column: 6)
!8497 = !DILocation(line: 571, column: 28, scope: !8496)
!8498 = !DILocation(line: 571, column: 35, scope: !8496)
!8499 = !DILocation(line: 571, column: 20, scope: !8496)
!8500 = !DILocation(line: 571, column: 6, scope: !8450)
!8501 = !DILocation(line: 572, column: 34, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8496, file: !533, line: 571, column: 54)
!8503 = !DILocation(line: 573, column: 2, scope: !8502)
!8504 = !DILocation(line: 575, column: 8, scope: !8450)
!8505 = !DILocation(line: 583, column: 6, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8450, file: !533, line: 583, column: 6)
!8507 = !DILocation(line: 583, column: 39, scope: !8506)
!8508 = !DILocation(line: 585, column: 46, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8506, file: !533, line: 585, column: 13)
!8510 = !DILocation(line: 590, column: 10, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8512, file: !533, line: 589, column: 54)
!8512 = distinct !DILexicalBlock(scope: !8450, file: !533, line: 589, column: 6)
!8513 = !DILocation(line: 593, column: 8, scope: !8450)
!8514 = !DILocation(line: 594, column: 2, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8450, file: !533, line: 594, column: 2)
!8516 = !DILocation(line: 595, column: 10, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8450, file: !533, line: 595, column: 6)
!8518 = !DILocation(line: 595, column: 21, scope: !8517)
!8519 = !DILocation(line: 595, column: 24, scope: !8517)
!8520 = !DILocation(line: 595, column: 6, scope: !8450)
!8521 = !DILocation(line: 596, column: 15, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8517, file: !533, line: 595, column: 56)
!8523 = !DILocation(line: 597, column: 2, scope: !8522)
!8524 = !DILocation(line: 599, column: 2, scope: !8450)
!8525 = distinct !DISubprogram(name: "get_start_time_cyc", scope: !690, file: !690, line: 98, type: !3082, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8526 = !DILocation(line: 100, column: 18, scope: !8525)
!8527 = !DILocation(line: 100, column: 16, scope: !8525)
!8528 = !DILocation(line: 101, column: 1, scope: !8525)
!8529 = distinct !DISubprogram(name: "k_thread_create", scope: !4413, file: !4413, line: 24, type: !8530, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8538)
!8530 = !DISubroutineType(types: !8531)
!8531 = !{!8197, !8198, !8532, !185, !559, !106, !106, !106, !107, !152, !8534}
!8532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8533, size: 32)
!8533 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !576)
!8534 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !8535)
!8535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !8536)
!8536 = !{!8537}
!8537 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8535, file: !565, line: 66, baseType: !564, size: 64)
!8538 = !{!8539, !8540, !8541, !8542, !8543, !8544, !8545, !8546, !8547, !8548}
!8539 = !DILocalVariable(name: "new_thread", arg: 1, scope: !8529, file: !4413, line: 24, type: !8198)
!8540 = !DILocalVariable(name: "stack", arg: 2, scope: !8529, file: !4413, line: 24, type: !8532)
!8541 = !DILocalVariable(name: "stack_size", arg: 3, scope: !8529, file: !4413, line: 24, type: !185)
!8542 = !DILocalVariable(name: "entry", arg: 4, scope: !8529, file: !4413, line: 24, type: !559)
!8543 = !DILocalVariable(name: "p1", arg: 5, scope: !8529, file: !4413, line: 24, type: !106)
!8544 = !DILocalVariable(name: "p2", arg: 6, scope: !8529, file: !4413, line: 24, type: !106)
!8545 = !DILocalVariable(name: "p3", arg: 7, scope: !8529, file: !4413, line: 24, type: !106)
!8546 = !DILocalVariable(name: "prio", arg: 8, scope: !8529, file: !4413, line: 24, type: !107)
!8547 = !DILocalVariable(name: "options", arg: 9, scope: !8529, file: !4413, line: 24, type: !152)
!8548 = !DILocalVariable(name: "delay", arg: 10, scope: !8529, file: !4413, line: 24, type: !8534)
!8549 = !DILocation(line: 0, scope: !8529)
!8550 = !DILocation(line: 49, column: 2, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8529, file: !4413, line: 49, column: 2)
!8552 = !{i64 2154773866}
!8553 = !DILocation(line: 50, column: 9, scope: !8529)
!8554 = !DILocation(line: 50, column: 2, scope: !8529)
!8555 = distinct !DISubprogram(name: "k_object_access_grant", scope: !8556, file: !8556, line: 24, type: !8557, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8559)
!8556 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!8557 = !DISubroutineType(types: !8558)
!8558 = !{null, !13, !8198}
!8559 = !{!8560, !8561}
!8560 = !DILocalVariable(name: "object", arg: 1, scope: !8555, file: !8556, line: 24, type: !13)
!8561 = !DILocalVariable(name: "thread", arg: 2, scope: !8555, file: !8556, line: 24, type: !8198)
!8562 = !DILocation(line: 0, scope: !8555)
!8563 = !DILocation(line: 34, column: 2, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8555, file: !8556, line: 34, column: 2)
!8565 = !{i64 2154290286}
!8566 = !DILocation(line: 36, column: 1, scope: !8555)
!8567 = distinct !DISubprogram(name: "k_thread_name_set", scope: !4413, file: !4413, line: 391, type: !8568, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8570)
!8568 = !DISubroutineType(types: !8569)
!8569 = !{!107, !8197, !118}
!8570 = !{!8571, !8572}
!8571 = !DILocalVariable(name: "thread", arg: 1, scope: !8567, file: !4413, line: 391, type: !8197)
!8572 = !DILocalVariable(name: "str", arg: 2, scope: !8567, file: !4413, line: 391, type: !118)
!8573 = !DILocation(line: 0, scope: !8567)
!8574 = !DILocation(line: 400, column: 2, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8567, file: !4413, line: 400, column: 2)
!8576 = !{i64 2154775294}
!8577 = !DILocation(line: 401, column: 9, scope: !8567)
!8578 = !DILocation(line: 401, column: 2, scope: !8567)
!8579 = distinct !DISubprogram(name: "k_thread_start", scope: !4413, file: !4413, line: 205, type: !8195, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8580)
!8580 = !{!8581}
!8581 = !DILocalVariable(name: "thread", arg: 1, scope: !8579, file: !4413, line: 205, type: !8197)
!8582 = !DILocation(line: 0, scope: !8579)
!8583 = !DILocation(line: 214, column: 2, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8579, file: !4413, line: 214, column: 2)
!8585 = !{i64 2154774546}
!8586 = !DILocation(line: 215, column: 2, scope: !8579)
!8587 = !DILocation(line: 216, column: 1, scope: !8579)
!8588 = distinct !DISubprogram(name: "k_thread_join", scope: !4413, file: !4413, line: 74, type: !8589, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8591)
!8589 = !DISubroutineType(types: !8590)
!8590 = !{!107, !8198, !8534}
!8591 = !{!8592, !8593}
!8592 = !DILocalVariable(name: "thread", arg: 1, scope: !8588, file: !4413, line: 74, type: !8198)
!8593 = !DILocalVariable(name: "timeout", arg: 2, scope: !8588, file: !4413, line: 74, type: !8534)
!8594 = !DILocation(line: 0, scope: !8588)
!8595 = !DILocation(line: 83, column: 2, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8588, file: !4413, line: 83, column: 2)
!8597 = !{i64 2154774002}
!8598 = !DILocation(line: 84, column: 9, scope: !8588)
!8599 = !DILocation(line: 84, column: 2, scope: !8588)
!8600 = distinct !DISubprogram(name: "run_test_rules", scope: !533, file: !533, line: 207, type: !8601, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8603)
!8601 = !DISubroutineType(types: !8602)
!8602 = !{null, !145, !8273, !106}
!8603 = !{!8604, !8605, !8606, !8607}
!8604 = !DILocalVariable(name: "is_before", arg: 1, scope: !8600, file: !533, line: 207, type: !145)
!8605 = !DILocalVariable(name: "test", arg: 2, scope: !8600, file: !533, line: 207, type: !8273)
!8606 = !DILocalVariable(name: "data", arg: 3, scope: !8600, file: !533, line: 207, type: !106)
!8607 = !DILocalVariable(name: "rule", scope: !8608, file: !533, line: 209, type: !8609)
!8608 = distinct !DILexicalBlock(scope: !8600, file: !533, line: 209, column: 2)
!8609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8610, size: 32)
!8610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_test_rule", file: !114, line: 437, size: 64, elements: !8611)
!8611 = !{!8612, !8619}
!8612 = !DIDerivedType(tag: DW_TAG_member, name: "before_each", scope: !8610, file: !114, line: 438, baseType: !8613, size: 32)
!8613 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_rule_cb", file: !114, line: 434, baseType: !8614)
!8614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8615, size: 32)
!8615 = !DISubroutineType(types: !8616)
!8616 = !{null, !8617, !106}
!8617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8618, size: 32)
!8618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8274)
!8619 = !DIDerivedType(tag: DW_TAG_member, name: "after_each", scope: !8610, file: !114, line: 439, baseType: !8613, size: 32, offset: 32)
!8620 = !DILocation(line: 0, scope: !8600)
!8621 = !DILocation(line: 0, scope: !8608)
!8622 = !DILocation(line: 209, column: 2, scope: !8608)
!8623 = !DILocation(line: 217, column: 1, scope: !8600)
!8624 = !DILocation(line: 211, column: 17, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8626, file: !533, line: 211, column: 7)
!8626 = distinct !DILexicalBlock(scope: !8627, file: !533, line: 210, column: 49)
!8627 = distinct !DILexicalBlock(scope: !8608, file: !533, line: 209, column: 2)
!8628 = !DILocation(line: 211, column: 26, scope: !8625)
!8629 = !DILocation(line: 211, column: 20, scope: !8625)
!8630 = !DILocation(line: 211, column: 7, scope: !8626)
!8631 = !DILocation(line: 213, column: 34, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8625, file: !533, line: 213, column: 14)
!8633 = !DILocation(line: 213, column: 28, scope: !8632)
!8634 = !DILocation(line: 213, column: 14, scope: !8625)
!8635 = !DILocation(line: 0, scope: !8625)
!8636 = !DILocation(line: 210, column: 41, scope: !8627)
!8637 = !DILocation(line: 210, column: 12, scope: !8627)
!8638 = distinct !{!8638, !8622, !8639}
!8639 = !DILocation(line: 216, column: 2, scope: !8608)
!8640 = distinct !DISubprogram(name: "get_test_duration_ms", scope: !690, file: !690, line: 103, type: !3082, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8641)
!8641 = !{!8642}
!8642 = !DILocalVariable(name: "spend_cycle", scope: !8640, file: !690, line: 105, type: !152)
!8643 = !DILocation(line: 105, column: 25, scope: !8640)
!8644 = !DILocation(line: 105, column: 44, scope: !8640)
!8645 = !DILocation(line: 105, column: 42, scope: !8640)
!8646 = !DILocation(line: 0, scope: !8640)
!8647 = !DILocation(line: 107, column: 18, scope: !8640)
!8648 = !DILocation(line: 107, column: 16, scope: !8640)
!8649 = !DILocation(line: 108, column: 1, scope: !8640)
!8650 = distinct !DISubprogram(name: "cleanup_test", scope: !533, file: !533, line: 76, type: !8651, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8653)
!8651 = !DISubroutineType(types: !8652)
!8652 = !{!107, !8273}
!8653 = !{!8654, !8655, !8656}
!8654 = !DILocalVariable(name: "test", arg: 1, scope: !8650, file: !533, line: 76, type: !8273)
!8655 = !DILocalVariable(name: "ret", scope: !8650, file: !533, line: 78, type: !107)
!8656 = !DILocalVariable(name: "mock_status", scope: !8650, file: !533, line: 79, type: !107)
!8657 = !DILocation(line: 0, scope: !8650)
!8658 = !DILocation(line: 89, column: 3, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8660, file: !533, line: 88, column: 41)
!8660 = distinct !DILexicalBlock(scope: !8650, file: !533, line: 88, column: 6)
!8661 = !DILocation(line: 103, column: 2, scope: !8650)
!8662 = distinct !DISubprogram(name: "get_final_test_result", scope: !533, file: !533, line: 236, type: !8663, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8665)
!8663 = !DISubroutineType(types: !8664)
!8664 = !{!107, !8617, !107}
!8665 = !{!8666, !8667, !8668, !8669}
!8666 = !DILocalVariable(name: "test", arg: 1, scope: !8662, file: !533, line: 236, type: !8617)
!8667 = !DILocalVariable(name: "ret", arg: 2, scope: !8662, file: !533, line: 236, type: !107)
!8668 = !DILocalVariable(name: "expected_result", scope: !8662, file: !533, line: 238, type: !554)
!8669 = !DILocalVariable(name: "expectation", scope: !8670, file: !533, line: 240, type: !8671)
!8670 = distinct !DILexicalBlock(scope: !8662, file: !533, line: 240, column: 2)
!8671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8672, size: 32)
!8672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_expected_result_entry", file: !114, line: 47, size: 96, elements: !8673)
!8673 = !{!8674, !8675, !8676}
!8674 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8672, file: !114, line: 48, baseType: !118, size: 32)
!8675 = !DIDerivedType(tag: DW_TAG_member, name: "test_name", scope: !8672, file: !114, line: 49, baseType: !118, size: 32, offset: 32)
!8676 = !DIDerivedType(tag: DW_TAG_member, name: "expected_result", scope: !8672, file: !114, line: 50, baseType: !554, size: 32, offset: 64)
!8677 = !DILocation(line: 0, scope: !8662)
!8678 = !DILocation(line: 0, scope: !8670)
!8679 = !DILocation(line: 240, column: 2, scope: !8670)
!8680 = !DILocation(line: 243, column: 27, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8682, file: !533, line: 243, column: 7)
!8682 = distinct !DILexicalBlock(scope: !8683, file: !533, line: 242, column: 75)
!8683 = distinct !DILexicalBlock(scope: !8670, file: !533, line: 240, column: 2)
!8684 = !DILocation(line: 243, column: 44, scope: !8681)
!8685 = !DILocation(line: 243, column: 7, scope: !8681)
!8686 = !DILocation(line: 243, column: 50, scope: !8681)
!8687 = !DILocation(line: 243, column: 55, scope: !8681)
!8688 = !DILocation(line: 244, column: 27, scope: !8681)
!8689 = !DILocation(line: 244, column: 50, scope: !8681)
!8690 = !DILocation(line: 244, column: 7, scope: !8681)
!8691 = !DILocation(line: 244, column: 67, scope: !8681)
!8692 = !DILocation(line: 243, column: 7, scope: !8682)
!8693 = !DILocation(line: 242, column: 60, scope: !8683)
!8694 = !DILocation(line: 242, column: 19, scope: !8683)
!8695 = distinct !{!8695, !8679, !8696}
!8696 = !DILocation(line: 248, column: 2, scope: !8670)
!8697 = !DILocation(line: 245, column: 35, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8681, file: !533, line: 244, column: 73)
!8699 = !DILocation(line: 250, column: 6, scope: !8662)
!8700 = !DILocation(line: 255, column: 15, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8702, file: !533, line: 250, column: 53)
!8702 = distinct !DILexicalBlock(scope: !8662, file: !533, line: 250, column: 6)
!8703 = !DILocation(line: 255, column: 10, scope: !8701)
!8704 = !DILocation(line: 255, column: 3, scope: !8701)
!8705 = !DILocation(line: 262, column: 15, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8707, file: !533, line: 257, column: 53)
!8707 = distinct !DILexicalBlock(scope: !8662, file: !533, line: 257, column: 6)
!8708 = !DILocation(line: 262, column: 10, scope: !8706)
!8709 = !DILocation(line: 262, column: 3, scope: !8706)
!8710 = !DILocation(line: 266, column: 1, scope: !8662)
!8711 = distinct !DISubprogram(name: "TC_RESULT_TO_STR", scope: !690, file: !690, line: 81, type: !8712, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8714)
!8712 = !DISubroutineType(types: !8713)
!8713 = !{!118, !107}
!8714 = !{!8715}
!8715 = !DILocalVariable(name: "result", arg: 1, scope: !8711, file: !690, line: 81, type: !107)
!8716 = !DILocation(line: 0, scope: !8711)
!8717 = !DILocation(line: 83, column: 2, scope: !8711)
!8718 = !DILocation(line: 0, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8711, file: !690, line: 83, column: 18)
!8720 = !DILocation(line: 93, column: 1, scope: !8711)
!8721 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6344, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8722 = !DILocation(line: 1677, column: 9, scope: !8721)
!8723 = !DILocation(line: 1677, column: 2, scope: !8721)
!8724 = distinct !DISubprogram(name: "k_cyc_to_ms_ceil32", scope: !8725, file: !8725, line: 809, type: !7544, scopeLine: 810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8726)
!8725 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8726 = !{!8727}
!8727 = !DILocalVariable(name: "t", arg: 1, scope: !8724, file: !8725, line: 809, type: !152)
!8728 = !DILocation(line: 0, scope: !8724)
!8729 = !DILocation(line: 812, column: 17, scope: !8724)
!8730 = !DILocalVariable(name: "t", arg: 1, scope: !8731, file: !8725, line: 102, type: !566)
!8731 = distinct !DISubprogram(name: "z_tmcvt", scope: !8725, file: !8725, line: 102, type: !8732, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8734)
!8732 = !DISubroutineType(types: !8733)
!8733 = !{!566, !566, !152, !152, !145, !145, !145, !145}
!8734 = !{!8730, !8735, !8736, !8737, !8738, !8739, !8740, !8741, !8742, !8743, !8744}
!8735 = !DILocalVariable(name: "from_hz", arg: 2, scope: !8731, file: !8725, line: 102, type: !152)
!8736 = !DILocalVariable(name: "to_hz", arg: 3, scope: !8731, file: !8725, line: 103, type: !152)
!8737 = !DILocalVariable(name: "const_hz", arg: 4, scope: !8731, file: !8725, line: 103, type: !145)
!8738 = !DILocalVariable(name: "result32", arg: 5, scope: !8731, file: !8725, line: 104, type: !145)
!8739 = !DILocalVariable(name: "round_up", arg: 6, scope: !8731, file: !8725, line: 104, type: !145)
!8740 = !DILocalVariable(name: "round_off", arg: 7, scope: !8731, file: !8725, line: 105, type: !145)
!8741 = !DILocalVariable(name: "mul_ratio", scope: !8731, file: !8725, line: 107, type: !145)
!8742 = !DILocalVariable(name: "div_ratio", scope: !8731, file: !8725, line: 109, type: !145)
!8743 = !DILocalVariable(name: "off", scope: !8731, file: !8725, line: 116, type: !566)
!8744 = !DILocalVariable(name: "rdivisor", scope: !8745, file: !8725, line: 119, type: !152)
!8745 = distinct !DILexicalBlock(scope: !8746, file: !8725, line: 118, column: 18)
!8746 = distinct !DILexicalBlock(scope: !8731, file: !8725, line: 118, column: 6)
!8747 = !DILocation(line: 0, scope: !8731, inlinedAt: !8748)
!8748 = distinct !DILocation(line: 812, column: 9, scope: !8724)
!8749 = !DILocation(line: 135, column: 5, scope: !8750, inlinedAt: !8748)
!8750 = distinct !DILexicalBlock(scope: !8751, file: !8725, line: 134, column: 17)
!8751 = distinct !DILexicalBlock(scope: !8731, file: !8725, line: 134, column: 6)
!8752 = !DILocation(line: 136, column: 16, scope: !8753, inlinedAt: !8748)
!8753 = distinct !DILexicalBlock(scope: !8750, file: !8725, line: 136, column: 7)
!8754 = !DILocation(line: 812, column: 9, scope: !8724)
!8755 = !DILocation(line: 812, column: 2, scope: !8724)
!8756 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8757, file: !8757, line: 24, type: !6344, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!8757 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8758 = !DILocation(line: 26, column: 9, scope: !8756)
!8759 = !DILocation(line: 26, column: 2, scope: !8756)
!8760 = distinct !DISubprogram(name: "test_cb", scope: !533, file: !533, line: 507, type: !562, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8761)
!8761 = !{!8762, !8763, !8764, !8765, !8766}
!8762 = !DILocalVariable(name: "a", arg: 1, scope: !8760, file: !533, line: 507, type: !106)
!8763 = !DILocalVariable(name: "b", arg: 2, scope: !8760, file: !533, line: 507, type: !106)
!8764 = !DILocalVariable(name: "c", arg: 3, scope: !8760, file: !533, line: 507, type: !106)
!8765 = !DILocalVariable(name: "suite", scope: !8760, file: !533, line: 509, type: !8321)
!8766 = !DILocalVariable(name: "test", scope: !8760, file: !533, line: 510, type: !8273)
!8767 = !DILocation(line: 0, scope: !8760)
!8768 = !DILocation(line: 510, column: 33, scope: !8760)
!8769 = !DILocation(line: 512, column: 14, scope: !8760)
!8770 = !DILocation(line: 513, column: 2, scope: !8760)
!8771 = !DILocation(line: 514, column: 13, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8760, file: !533, line: 514, column: 6)
!8773 = !DILocation(line: 514, column: 6, scope: !8772)
!8774 = !DILocation(line: 514, column: 6, scope: !8760)
!8775 = !DILocation(line: 515, column: 3, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8772, file: !533, line: 514, column: 21)
!8777 = !DILocation(line: 516, column: 2, scope: !8776)
!8778 = !DILocation(line: 517, column: 2, scope: !8760)
!8779 = !DILocation(line: 518, column: 14, scope: !8760)
!8780 = !DILocation(line: 519, column: 1, scope: !8760)
!8781 = distinct !DISubprogram(name: "run_test_functions", scope: !533, file: !533, line: 219, type: !8782, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8784)
!8782 = !DISubroutineType(types: !8783)
!8783 = !{null, !8321, !8273, !106}
!8784 = !{!8785, !8786, !8787}
!8785 = !DILocalVariable(name: "suite", arg: 1, scope: !8781, file: !533, line: 219, type: !8321)
!8786 = !DILocalVariable(name: "test", arg: 2, scope: !8781, file: !533, line: 219, type: !8273)
!8787 = !DILocalVariable(name: "data", arg: 3, scope: !8781, file: !533, line: 220, type: !106)
!8788 = !DILocation(line: 0, scope: !8781)
!8789 = !DILocation(line: 222, column: 8, scope: !8781)
!8790 = !DILocation(line: 223, column: 8, scope: !8781)
!8791 = !DILocation(line: 223, column: 2, scope: !8781)
!8792 = !DILocation(line: 224, column: 1, scope: !8781)
!8793 = distinct !DISubprogram(name: "z_impl_ztest_run_test_suites", scope: !533, file: !533, line: 929, type: !8794, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8796)
!8794 = !DISubroutineType(types: !8795)
!8795 = !{!107, !13}
!8796 = !{!8797, !8798, !8799}
!8797 = !DILocalVariable(name: "state", arg: 1, scope: !8793, file: !533, line: 929, type: !13)
!8798 = !DILocalVariable(name: "count", scope: !8793, file: !533, line: 931, type: !107)
!8799 = !DILocalVariable(name: "ptr", scope: !8800, file: !533, line: 954, type: !8321)
!8800 = distinct !DILexicalBlock(scope: !8793, file: !533, line: 954, column: 2)
!8801 = !DILocation(line: 0, scope: !8793)
!8802 = !DILocation(line: 933, column: 6, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8793, file: !533, line: 933, column: 6)
!8804 = !DILocation(line: 933, column: 18, scope: !8803)
!8805 = !DILocation(line: 933, column: 6, scope: !8793)
!8806 = !DILocation(line: 0, scope: !8800)
!8807 = !DILocation(line: 954, column: 2, scope: !8800)
!8808 = !DILocation(line: 956, column: 12, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8810, file: !533, line: 955, column: 48)
!8810 = distinct !DILexicalBlock(scope: !8800, file: !533, line: 954, column: 2)
!8811 = !DILocation(line: 956, column: 9, scope: !8809)
!8812 = !DILocation(line: 960, column: 7, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8809, file: !533, line: 960, column: 7)
!8814 = !DILocation(line: 960, column: 19, scope: !8813)
!8815 = !DILocation(line: 955, column: 41, scope: !8810)
!8816 = !DILocation(line: 960, column: 50, scope: !8813)
!8817 = distinct !{!8817, !8807, !8818}
!8818 = !DILocation(line: 964, column: 2, scope: !8800)
!8819 = !DILocation(line: 967, column: 2, scope: !8793)
!8820 = !DILocation(line: 969, column: 2, scope: !8793)
!8821 = !DILocation(line: 970, column: 1, scope: !8793)
!8822 = distinct !DISubprogram(name: "__ztest_run_test_suite", scope: !533, file: !533, line: 907, type: !8823, scopeLine: 908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8825)
!8823 = !DISubroutineType(types: !8824)
!8824 = !{!107, !8321, !13}
!8825 = !{!8826, !8827, !8828, !8829, !8830, !8832}
!8826 = !DILocalVariable(name: "ptr", arg: 1, scope: !8822, file: !533, line: 907, type: !8321)
!8827 = !DILocalVariable(name: "state", arg: 2, scope: !8822, file: !533, line: 907, type: !13)
!8828 = !DILocalVariable(name: "stats", scope: !8822, file: !533, line: 909, type: !8332)
!8829 = !DILocalVariable(name: "count", scope: !8822, file: !533, line: 910, type: !107)
!8830 = !DILocalVariable(name: "i", scope: !8831, file: !533, line: 914, type: !107)
!8831 = distinct !DILexicalBlock(scope: !8822, file: !533, line: 914, column: 2)
!8832 = !DILocalVariable(name: "fail", scope: !8833, file: !533, line: 916, type: !107)
!8833 = distinct !DILexicalBlock(scope: !8834, file: !533, line: 915, column: 47)
!8834 = distinct !DILexicalBlock(scope: !8835, file: !533, line: 915, column: 7)
!8835 = distinct !DILexicalBlock(scope: !8836, file: !533, line: 914, column: 47)
!8836 = distinct !DILexicalBlock(scope: !8831, file: !533, line: 914, column: 2)
!8837 = !DILocation(line: 0, scope: !8822)
!8838 = !DILocation(line: 909, column: 41, scope: !8822)
!8839 = !DILocation(line: 912, column: 2, scope: !8822)
!8840 = !DILocation(line: 0, scope: !8831)
!8841 = !DILocation(line: 915, column: 7, scope: !8834)
!8842 = !DILocation(line: 915, column: 7, scope: !8835)
!8843 = !DILocation(line: 916, column: 15, scope: !8833)
!8844 = !DILocation(line: 0, scope: !8833)
!8845 = !DILocation(line: 919, column: 20, scope: !8833)
!8846 = !DILocation(line: 920, column: 31, scope: !8833)
!8847 = !DILocation(line: 920, column: 25, scope: !8833)
!8848 = !DILocation(line: 921, column: 3, scope: !8833)
!8849 = !DILocation(line: 0, scope: !8834)
!8850 = !DILocation(line: 926, column: 2, scope: !8822)
!8851 = distinct !DISubprogram(name: "__ztest_show_suite_summary", scope: !533, file: !533, line: 886, type: !3082, scopeLine: 887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8852)
!8852 = !{!8853}
!8853 = !DILocalVariable(name: "ptr", scope: !8854, file: !533, line: 894, type: !8321)
!8854 = distinct !DILexicalBlock(scope: !8851, file: !533, line: 894, column: 2)
!8855 = !DILocation(line: 892, column: 2, scope: !8851)
!8856 = !DILocation(line: 0, scope: !8854)
!8857 = !DILocation(line: 894, column: 2, scope: !8854)
!8858 = !DILocation(line: 903, column: 2, scope: !8851)
!8859 = !DILocation(line: 905, column: 1, scope: !8851)
!8860 = !DILocation(line: 898, column: 3, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8862, file: !533, line: 895, column: 48)
!8862 = distinct !DILexicalBlock(scope: !8854, file: !533, line: 894, column: 2)
!8863 = !DILocation(line: 895, column: 41, scope: !8862)
!8864 = !DILocation(line: 895, column: 11, scope: !8862)
!8865 = distinct !{!8865, !8857, !8866}
!8866 = !DILocation(line: 902, column: 2, scope: !8854)
!8867 = distinct !DISubprogram(name: "__ztest_show_suite_summary_verbose", scope: !533, file: !533, line: 852, type: !8868, scopeLine: 853, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8870)
!8868 = !DISubroutineType(types: !8869)
!8869 = !{null, !8321}
!8870 = !{!8871, !8872, !8873, !8874}
!8871 = !DILocalVariable(name: "suite", arg: 1, scope: !8867, file: !533, line: 852, type: !8321)
!8872 = !DILocalVariable(name: "test", scope: !8867, file: !533, line: 854, type: !8273)
!8873 = !DILocalVariable(name: "tc_result", scope: !8867, file: !533, line: 855, type: !107)
!8874 = !DILocalVariable(name: "flush_frequency", scope: !8867, file: !533, line: 856, type: !107)
!8875 = !DILocation(line: 0, scope: !8867)
!8876 = !DILocation(line: 858, column: 2, scope: !8867)
!8877 = !DILocation(line: 860, column: 47, scope: !8867)
!8878 = !DILocation(line: 860, column: 18, scope: !8867)
!8879 = !DILocation(line: 860, column: 60, scope: !8867)
!8880 = !DILocation(line: 860, column: 2, scope: !8867)
!8881 = !DILocation(line: 861, column: 13, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8883, file: !533, line: 861, column: 7)
!8883 = distinct !DILexicalBlock(scope: !8867, file: !533, line: 860, column: 70)
!8884 = !DILocation(line: 861, column: 20, scope: !8882)
!8885 = !DILocation(line: 861, column: 47, scope: !8882)
!8886 = !DILocation(line: 861, column: 31, scope: !8882)
!8887 = !DILocation(line: 861, column: 7, scope: !8883)
!8888 = !DILocation(line: 863, column: 27, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8882, file: !533, line: 863, column: 14)
!8890 = !DILocation(line: 863, column: 38, scope: !8889)
!8891 = !DILocation(line: 0, scope: !8882)
!8892 = !DILocation(line: 869, column: 3, scope: !8883)
!8893 = distinct !{!8893, !8880, !8894}
!8894 = !DILocation(line: 880, column: 2, scope: !8867)
!8895 = !DILocation(line: 881, column: 2, scope: !8867)
!8896 = !DILocation(line: 883, column: 1, scope: !8867)
!8897 = distinct !DISubprogram(name: "__ztest_show_suite_summary_oneline", scope: !533, file: !533, line: 801, type: !8868, scopeLine: 802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8898)
!8898 = !{!8899, !8900, !8901, !8902, !8903, !8904, !8905, !8906, !8907, !8908, !8909, !8910, !8911, !8912}
!8899 = !DILocalVariable(name: "suite", arg: 1, scope: !8897, file: !533, line: 801, type: !8321)
!8900 = !DILocalVariable(name: "distinct_pass", scope: !8897, file: !533, line: 803, type: !107)
!8901 = !DILocalVariable(name: "distinct_fail", scope: !8897, file: !533, line: 803, type: !107)
!8902 = !DILocalVariable(name: "distinct_skip", scope: !8897, file: !533, line: 803, type: !107)
!8903 = !DILocalVariable(name: "distinct_total", scope: !8897, file: !533, line: 803, type: !107)
!8904 = !DILocalVariable(name: "effective_total", scope: !8897, file: !533, line: 804, type: !107)
!8905 = !DILocalVariable(name: "expanded_pass", scope: !8897, file: !533, line: 805, type: !107)
!8906 = !DILocalVariable(name: "expanded_passrate", scope: !8897, file: !533, line: 805, type: !107)
!8907 = !DILocalVariable(name: "passrate_major", scope: !8897, file: !533, line: 806, type: !107)
!8908 = !DILocalVariable(name: "passrate_minor", scope: !8897, file: !533, line: 806, type: !107)
!8909 = !DILocalVariable(name: "passrate_tail", scope: !8897, file: !533, line: 806, type: !107)
!8910 = !DILocalVariable(name: "suite_result", scope: !8897, file: !533, line: 807, type: !107)
!8911 = !DILocalVariable(name: "test", scope: !8897, file: !533, line: 809, type: !8273)
!8912 = !DILocalVariable(name: "suite_duration_worst_ms", scope: !8897, file: !533, line: 810, type: !32)
!8913 = !DILocation(line: 0, scope: !8897)
!8914 = !DILocation(line: 813, column: 47, scope: !8897)
!8915 = !DILocation(line: 813, column: 18, scope: !8897)
!8916 = !DILocation(line: 813, column: 60, scope: !8897)
!8917 = !DILocation(line: 813, column: 2, scope: !8897)
!8918 = !DILocation(line: 814, column: 17, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8897, file: !533, line: 813, column: 70)
!8920 = !DILocation(line: 815, column: 36, scope: !8919)
!8921 = !DILocation(line: 815, column: 43, scope: !8919)
!8922 = !DILocation(line: 815, column: 27, scope: !8919)
!8923 = !DILocation(line: 816, column: 20, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8919, file: !533, line: 816, column: 7)
!8925 = !DILocation(line: 816, column: 47, scope: !8924)
!8926 = !DILocation(line: 816, column: 31, scope: !8924)
!8927 = !DILocation(line: 816, column: 7, scope: !8919)
!8928 = !DILocation(line: 817, column: 17, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8924, file: !533, line: 816, column: 58)
!8930 = !DILocation(line: 818, column: 3, scope: !8929)
!8931 = !DILocation(line: 818, column: 27, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8924, file: !533, line: 818, column: 14)
!8933 = !DILocation(line: 818, column: 38, scope: !8932)
!8934 = !DILocation(line: 818, column: 14, scope: !8924)
!8935 = !DILocation(line: 819, column: 17, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8932, file: !533, line: 818, column: 65)
!8937 = !DILocation(line: 820, column: 3, scope: !8936)
!8938 = !DILocation(line: 821, column: 17, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8932, file: !533, line: 820, column: 10)
!8940 = distinct !{!8940, !8917, !8941}
!8941 = !DILocation(line: 823, column: 2, scope: !8897)
!8942 = !DILocation(line: 825, column: 20, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8897, file: !533, line: 825, column: 6)
!8944 = !DILocation(line: 825, column: 6, scope: !8897)
!8945 = !DILocation(line: 829, column: 33, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8943, file: !533, line: 828, column: 9)
!8947 = !DILocation(line: 829, column: 18, scope: !8946)
!8948 = !DILocation(line: 830, column: 36, scope: !8946)
!8949 = !DILocation(line: 831, column: 33, scope: !8946)
!8950 = !DILocation(line: 832, column: 37, scope: !8946)
!8951 = !DILocation(line: 833, column: 38, scope: !8946)
!8952 = !DILocation(line: 834, column: 56, scope: !8946)
!8953 = !DILocation(line: 834, column: 39, scope: !8946)
!8954 = !DILocation(line: 834, column: 64, scope: !8946)
!8955 = !DILocation(line: 835, column: 78, scope: !8946)
!8956 = !DILocation(line: 835, column: 61, scope: !8946)
!8957 = !DILocation(line: 836, column: 21, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8946, file: !533, line: 836, column: 7)
!8959 = !DILocation(line: 836, column: 7, scope: !8946)
!8960 = !DILocation(line: 0, scope: !8943)
!8961 = !DILocation(line: 841, column: 2, scope: !8897)
!8962 = !DILocation(line: 849, column: 1, scope: !8897)
!8963 = distinct !DISubprogram(name: "__ztest_init_unit_test_result_for_suite", scope: !533, file: !533, line: 773, type: !8868, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8964)
!8964 = !{!8965, !8966}
!8965 = !DILocalVariable(name: "suite", arg: 1, scope: !8963, file: !533, line: 773, type: !8321)
!8966 = !DILocalVariable(name: "test", scope: !8963, file: !533, line: 775, type: !8273)
!8967 = !DILocation(line: 0, scope: !8963)
!8968 = !DILocation(line: 777, column: 47, scope: !8963)
!8969 = !DILocation(line: 777, column: 18, scope: !8963)
!8970 = !DILocation(line: 777, column: 60, scope: !8963)
!8971 = !DILocation(line: 777, column: 2, scope: !8963)
!8972 = !DILocation(line: 778, column: 9, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8963, file: !533, line: 777, column: 70)
!8974 = !DILocation(line: 778, column: 16, scope: !8973)
!8975 = !DILocation(line: 778, column: 26, scope: !8973)
!8976 = !DILocation(line: 779, column: 9, scope: !8973)
!8977 = !DILocation(line: 779, column: 16, scope: !8973)
!8978 = !DILocation(line: 779, column: 27, scope: !8973)
!8979 = !DILocation(line: 780, column: 9, scope: !8973)
!8980 = !DILocation(line: 780, column: 16, scope: !8973)
!8981 = !DILocation(line: 780, column: 27, scope: !8973)
!8982 = !DILocation(line: 781, column: 9, scope: !8973)
!8983 = !DILocation(line: 781, column: 16, scope: !8973)
!8984 = !DILocation(line: 781, column: 27, scope: !8973)
!8985 = !DILocation(line: 782, column: 9, scope: !8973)
!8986 = !DILocation(line: 782, column: 16, scope: !8973)
!8987 = !DILocation(line: 782, column: 34, scope: !8973)
!8988 = distinct !{!8988, !8971, !8989}
!8989 = !DILocation(line: 783, column: 2, scope: !8963)
!8990 = !DILocation(line: 784, column: 1, scope: !8963)
!8991 = distinct !DISubprogram(name: "ztest_verify_all_test_suites_ran", scope: !533, file: !533, line: 972, type: !3082, scopeLine: 973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8992)
!8992 = !{!8993, !8994, !8995}
!8993 = !DILocalVariable(name: "all_tests_run", scope: !8991, file: !533, line: 974, type: !145)
!8994 = !DILocalVariable(name: "suite", scope: !8991, file: !533, line: 975, type: !8321)
!8995 = !DILocalVariable(name: "test", scope: !8991, file: !533, line: 976, type: !8273)
!8996 = !DILocation(line: 0, scope: !8991)
!8997 = !DILocation(line: 979, column: 3, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8999, file: !533, line: 979, column: 3)
!8999 = distinct !DILexicalBlock(scope: !9000, file: !533, line: 978, column: 47)
!9000 = distinct !DILexicalBlock(scope: !8991, file: !533, line: 978, column: 6)
!9001 = !DILocation(line: 987, column: 3, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8999, file: !533, line: 987, column: 3)
!9003 = !DILocation(line: 981, column: 15, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !9005, file: !533, line: 981, column: 8)
!9005 = distinct !DILexicalBlock(scope: !9006, file: !533, line: 980, column: 17)
!9006 = distinct !DILexicalBlock(scope: !8998, file: !533, line: 979, column: 3)
!9007 = !DILocation(line: 981, column: 22, scope: !9004)
!9008 = !DILocation(line: 981, column: 32, scope: !9004)
!9009 = !DILocation(line: 981, column: 8, scope: !9005)
!9010 = !DILocation(line: 982, column: 59, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !9004, file: !533, line: 981, column: 37)
!9012 = !DILocation(line: 982, column: 5, scope: !9011)
!9013 = !DILocation(line: 984, column: 4, scope: !9011)
!9014 = !DILocation(line: 980, column: 8, scope: !9006)
!9015 = !DILocation(line: 979, column: 52, scope: !9006)
!9016 = distinct !{!9016, !8997, !9017}
!9017 = !DILocation(line: 985, column: 3, scope: !8998)
!9018 = !DILocation(line: 988, column: 40, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !9020, file: !533, line: 987, column: 86)
!9020 = distinct !DILexicalBlock(scope: !9002, file: !533, line: 987, column: 3)
!9021 = !DILocation(line: 988, column: 12, scope: !9019)
!9022 = !DILocation(line: 989, column: 14, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9019, file: !533, line: 989, column: 8)
!9024 = !DILocation(line: 989, column: 8, scope: !9019)
!9025 = !DILocation(line: 992, column: 17, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9023, file: !533, line: 989, column: 23)
!9027 = !DILocation(line: 992, column: 29, scope: !9026)
!9028 = !DILocation(line: 990, column: 5, scope: !9026)
!9029 = !DILocation(line: 994, column: 4, scope: !9026)
!9030 = !DILocation(line: 987, column: 78, scope: !9020)
!9031 = !DILocation(line: 987, column: 49, scope: !9020)
!9032 = distinct !{!9032, !9001, !9033}
!9033 = !DILocation(line: 995, column: 3, scope: !9002)
!9034 = !DILocation(line: 997, column: 7, scope: !8999)
!9035 = !DILocation(line: 998, column: 16, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9037, file: !533, line: 997, column: 23)
!9037 = distinct !DILexicalBlock(scope: !8999, file: !533, line: 997, column: 7)
!9038 = !DILocation(line: 999, column: 3, scope: !9036)
!9039 = !DILocation(line: 1002, column: 2, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !8991, file: !533, line: 1002, column: 2)
!9041 = !DILocation(line: 1003, column: 13, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9043, file: !533, line: 1003, column: 7)
!9043 = distinct !DILexicalBlock(scope: !9044, file: !533, line: 1002, column: 85)
!9044 = distinct !DILexicalBlock(scope: !9040, file: !533, line: 1002, column: 2)
!9045 = !DILocation(line: 1003, column: 20, scope: !9042)
!9046 = !DILocation(line: 1003, column: 46, scope: !9042)
!9047 = !DILocation(line: 1003, column: 31, scope: !9042)
!9048 = !DILocation(line: 1003, column: 72, scope: !9042)
!9049 = !DILocation(line: 1003, column: 57, scope: !9042)
!9050 = !DILocation(line: 1004, column: 20, scope: !9042)
!9051 = !DILocation(line: 1003, column: 83, scope: !9042)
!9052 = !DILocation(line: 1003, column: 7, scope: !9043)
!9053 = !DILocation(line: 1005, column: 41, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9042, file: !533, line: 1004, column: 31)
!9055 = !DILocation(line: 1005, column: 64, scope: !9054)
!9056 = !DILocation(line: 1005, column: 4, scope: !9054)
!9057 = !DILocation(line: 1006, column: 16, scope: !9054)
!9058 = !DILocation(line: 1007, column: 3, scope: !9054)
!9059 = !DILocation(line: 1002, column: 77, scope: !9044)
!9060 = !DILocation(line: 1002, column: 48, scope: !9044)
!9061 = distinct !{!9061, !9039, !9062}
!9062 = !DILocation(line: 1008, column: 2, scope: !9040)
!9063 = !DILocation(line: 1009, column: 1, scope: !8991)
!9064 = distinct !DISubprogram(name: "ztest_run_all", scope: !533, file: !533, line: 1011, type: !17, scopeLine: 1011, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9065)
!9065 = !{!9066}
!9066 = !DILocalVariable(name: "state", arg: 1, scope: !9064, file: !533, line: 1011, type: !13)
!9067 = !DILocation(line: 0, scope: !9064)
!9068 = !DILocation(line: 1011, column: 51, scope: !9064)
!9069 = !DILocation(line: 1011, column: 41, scope: !9064)
!9070 = !DILocation(line: 1011, column: 67, scope: !9064)
!9071 = distinct !DISubprogram(name: "test_main", scope: !533, file: !533, line: 1013, type: !3082, scopeLine: 1014, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!9072 = !DILocation(line: 1015, column: 2, scope: !9071)
!9073 = !DILocation(line: 1017, column: 2, scope: !9071)
!9074 = !DILocation(line: 1018, column: 1, scope: !9071)
!9075 = distinct !DISubprogram(name: "main", scope: !533, file: !533, line: 1030, type: !3082, scopeLine: 1031, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2156)
!9076 = !DILocation(line: 1046, column: 2, scope: !9075)
!9077 = !DILocation(line: 1047, column: 2, scope: !9075)
!9078 = !DILocation(line: 1071, column: 1, scope: !9075)
!9079 = distinct !DISubprogram(name: "z_ztest_run_all", scope: !699, file: !699, line: 30, type: !17, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9080)
!9080 = !{!9081}
!9081 = !DILocalVariable(name: "state", arg: 1, scope: !9079, file: !699, line: 30, type: !13)
!9082 = !DILocation(line: 0, scope: !9079)
!9083 = !DILocation(line: 32, column: 2, scope: !9079)
!9084 = !DILocation(line: 33, column: 1, scope: !9079)
!9085 = distinct !DISubprogram(name: "z_ztest_should_suite_run", scope: !699, file: !699, line: 45, type: !706, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9086)
!9086 = !{!9087, !9088, !9089}
!9087 = !DILocalVariable(name: "state", arg: 1, scope: !9085, file: !699, line: 45, type: !13)
!9088 = !DILocalVariable(name: "suite", arg: 2, scope: !9085, file: !699, line: 45, type: !708)
!9089 = !DILocalVariable(name: "run_suite", scope: !9085, file: !699, line: 47, type: !145)
!9090 = !DILocation(line: 0, scope: !9085)
!9091 = !DILocation(line: 49, column: 13, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9085, file: !699, line: 49, column: 6)
!9093 = !DILocation(line: 49, column: 23, scope: !9092)
!9094 = !DILocation(line: 49, column: 6, scope: !9085)
!9095 = !DILocation(line: 50, column: 15, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9092, file: !699, line: 49, column: 32)
!9097 = !DILocation(line: 51, column: 2, scope: !9096)
!9098 = !DILocation(line: 53, column: 2, scope: !9085)
!9099 = distinct !DISubprogram(name: "z_ztest_should_test_run", scope: !699, file: !699, line: 65, type: !727, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9100)
!9100 = !{!9101, !9102}
!9101 = !DILocalVariable(name: "suite", arg: 1, scope: !9099, file: !699, line: 65, type: !118)
!9102 = !DILocalVariable(name: "test", arg: 2, scope: !9099, file: !699, line: 65, type: !118)
!9103 = !DILocation(line: 0, scope: !9099)
!9104 = !DILocation(line: 67, column: 2, scope: !9099)
!9105 = distinct !DISubprogram(name: "ztest_run_test_suites", scope: !9106, file: !9106, line: 24, type: !8794, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9107)
!9106 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!9107 = !{!9108}
!9108 = !DILocalVariable(name: "state", arg: 1, scope: !9105, file: !9106, line: 24, type: !13)
!9109 = !DILocation(line: 0, scope: !9105)
!9110 = !DILocation(line: 32, column: 2, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9105, file: !9106, line: 32, column: 2)
!9112 = !{i64 2154869617}
!9113 = !DILocation(line: 33, column: 9, scope: !9105)
!9114 = !DILocation(line: 33, column: 2, scope: !9105)
!9115 = distinct !DISubprogram(name: "ztest_relative_filename", scope: !699, file: !699, line: 20, type: !9116, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9118)
!9116 = !DISubroutineType(types: !9117)
!9117 = !{!118, !118}
!9118 = !{!9119}
!9119 = !DILocalVariable(name: "file", arg: 1, scope: !9115, file: !699, line: 20, type: !118)
!9120 = !DILocation(line: 0, scope: !9115)
!9121 = !DILocation(line: 22, column: 2, scope: !9115)
!9122 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !835, file: !835, line: 368, type: !888, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9123)
!9123 = !{!9124}
!9124 = !DILocalVariable(name: "dev", arg: 1, scope: !9122, file: !835, line: 368, type: !864)
!9125 = !DILocation(line: 0, scope: !9122)
!9126 = !DILocation(line: 370, column: 2, scope: !9122)
!9127 = !DILocation(line: 371, column: 1, scope: !9122)
!9128 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !835, file: !835, line: 243, type: !9129, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9131)
!9129 = !DISubroutineType(types: !9130)
!9130 = !{null, !107, !107, !864}
!9131 = !{!9132, !9133, !9134, !9135, !9137}
!9132 = !DILocalVariable(name: "min", arg: 1, scope: !9128, file: !835, line: 243, type: !107)
!9133 = !DILocalVariable(name: "max", arg: 2, scope: !9128, file: !835, line: 243, type: !107)
!9134 = !DILocalVariable(name: "dev", arg: 3, scope: !9128, file: !835, line: 243, type: !864)
!9135 = !DILocalVariable(name: "data", scope: !9128, file: !835, line: 245, type: !9136)
!9136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 32)
!9137 = !DILocalVariable(name: "line", scope: !9128, file: !835, line: 246, type: !107)
!9138 = !DILocation(line: 0, scope: !9128)
!9139 = !DILocation(line: 245, column: 38, scope: !9128)
!9140 = !DILocation(line: 249, column: 24, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9142, file: !835, line: 249, column: 2)
!9142 = distinct !DILexicalBlock(scope: !9128, file: !835, line: 249, column: 2)
!9143 = !DILocation(line: 249, column: 2, scope: !9142)
!9144 = !DILocation(line: 251, column: 7, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9146, file: !835, line: 251, column: 7)
!9146 = distinct !DILexicalBlock(scope: !9141, file: !835, line: 249, column: 39)
!9147 = !DILocation(line: 251, column: 7, scope: !9146)
!9148 = !DILocation(line: 253, column: 4, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9145, file: !835, line: 251, column: 36)
!9150 = !DILocation(line: 256, column: 24, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9149, file: !835, line: 256, column: 8)
!9152 = !DILocation(line: 256, column: 9, scope: !9151)
!9153 = !DILocation(line: 256, column: 8, scope: !9149)
!9154 = !DILocation(line: 260, column: 43, scope: !9149)
!9155 = !DILocation(line: 260, column: 4, scope: !9149)
!9156 = !DILocation(line: 261, column: 3, scope: !9149)
!9157 = !DILocation(line: 249, column: 35, scope: !9141)
!9158 = distinct !{!9158, !9143, !9159}
!9159 = !DILocation(line: 262, column: 2, scope: !9142)
!9160 = !DILocation(line: 263, column: 1, scope: !9128)
!9161 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !835, file: !835, line: 158, type: !214, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9162)
!9162 = !{!9163}
!9163 = !DILocalVariable(name: "line", arg: 1, scope: !9161, file: !835, line: 158, type: !107)
!9164 = !DILocation(line: 0, scope: !9161)
!9165 = !DILocation(line: 170, column: 38, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9167, file: !835, line: 160, column: 17)
!9167 = distinct !DILexicalBlock(scope: !9161, file: !835, line: 160, column: 6)
!9168 = !DILocation(line: 170, column: 10, scope: !9166)
!9169 = !DILocation(line: 176, column: 1, scope: !9161)
!9170 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !835, file: !835, line: 183, type: !9171, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9173)
!9171 = !DISubroutineType(types: !9172)
!9172 = !{null, !107}
!9173 = !{!9174}
!9174 = !DILocalVariable(name: "line", arg: 1, scope: !9170, file: !835, line: 183, type: !107)
!9175 = !DILocation(line: 0, scope: !9170)
!9176 = !DILocation(line: 195, column: 28, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9178, file: !835, line: 185, column: 17)
!9178 = distinct !DILexicalBlock(scope: !9170, file: !835, line: 185, column: 6)
!9179 = !DILocation(line: 195, column: 3, scope: !9177)
!9180 = !DILocation(line: 200, column: 1, scope: !9170)
!9181 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9182, file: !9182, line: 910, type: !6354, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9183)
!9182 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9183 = !{!9184}
!9184 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9181, file: !9182, line: 910, type: !152)
!9185 = !DILocation(line: 0, scope: !9181)
!9186 = !DILocation(line: 912, column: 3, scope: !9181)
!9187 = !DILocation(line: 913, column: 1, scope: !9181)
!9188 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9182, file: !9182, line: 834, type: !7544, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9189)
!9189 = !{!9190}
!9190 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9188, file: !9182, line: 834, type: !152)
!9191 = !DILocation(line: 0, scope: !9188)
!9192 = !DILocation(line: 836, column: 11, scope: !9188)
!9193 = !DILocation(line: 836, column: 40, scope: !9188)
!9194 = !DILocation(line: 836, column: 3, scope: !9188)
!9195 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !835, file: !835, line: 304, type: !888, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9196)
!9196 = !{!9197}
!9197 = !DILocalVariable(name: "dev", arg: 1, scope: !9195, file: !835, line: 304, type: !864)
!9198 = !DILocation(line: 0, scope: !9195)
!9199 = !DILocation(line: 306, column: 2, scope: !9195)
!9200 = !DILocation(line: 307, column: 1, scope: !9195)
!9201 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !835, file: !835, line: 299, type: !888, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9202)
!9202 = !{!9203}
!9203 = !DILocalVariable(name: "dev", arg: 1, scope: !9201, file: !835, line: 299, type: !864)
!9204 = !DILocation(line: 0, scope: !9201)
!9205 = !DILocation(line: 301, column: 2, scope: !9201)
!9206 = !DILocation(line: 302, column: 1, scope: !9201)
!9207 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !835, file: !835, line: 294, type: !888, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9208)
!9208 = !{!9209}
!9209 = !DILocalVariable(name: "dev", arg: 1, scope: !9207, file: !835, line: 294, type: !864)
!9210 = !DILocation(line: 0, scope: !9207)
!9211 = !DILocation(line: 296, column: 2, scope: !9207)
!9212 = !DILocation(line: 297, column: 1, scope: !9207)
!9213 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !835, file: !835, line: 397, type: !888, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9214)
!9214 = !{!9215}
!9215 = !DILocalVariable(name: "dev", arg: 1, scope: !9213, file: !835, line: 397, type: !864)
!9216 = !DILocation(line: 0, scope: !9213)
!9217 = !DILocation(line: 399, column: 2, scope: !9213)
!9218 = !DILocation(line: 400, column: 1, scope: !9213)
!9219 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !835, file: !835, line: 392, type: !888, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9220)
!9220 = !{!9221}
!9221 = !DILocalVariable(name: "dev", arg: 1, scope: !9219, file: !835, line: 392, type: !864)
!9222 = !DILocation(line: 0, scope: !9219)
!9223 = !DILocation(line: 394, column: 2, scope: !9219)
!9224 = !DILocation(line: 395, column: 1, scope: !9219)
!9225 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !835, file: !835, line: 289, type: !888, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9226)
!9226 = !{!9227}
!9227 = !DILocalVariable(name: "dev", arg: 1, scope: !9225, file: !835, line: 289, type: !864)
!9228 = !DILocation(line: 0, scope: !9225)
!9229 = !DILocation(line: 291, column: 2, scope: !9225)
!9230 = !DILocation(line: 292, column: 1, scope: !9225)
!9231 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !835, file: !835, line: 387, type: !888, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9232)
!9232 = !{!9233}
!9233 = !DILocalVariable(name: "dev", arg: 1, scope: !9231, file: !835, line: 387, type: !864)
!9234 = !DILocation(line: 0, scope: !9231)
!9235 = !DILocation(line: 389, column: 2, scope: !9231)
!9236 = !DILocation(line: 390, column: 1, scope: !9231)
!9237 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !835, file: !835, line: 382, type: !888, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9238)
!9238 = !{!9239}
!9239 = !DILocalVariable(name: "dev", arg: 1, scope: !9237, file: !835, line: 382, type: !864)
!9240 = !DILocation(line: 0, scope: !9237)
!9241 = !DILocation(line: 384, column: 2, scope: !9237)
!9242 = !DILocation(line: 385, column: 1, scope: !9237)
!9243 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !835, file: !835, line: 373, type: !888, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9244)
!9244 = !{!9245}
!9245 = !DILocalVariable(name: "dev", arg: 1, scope: !9243, file: !835, line: 373, type: !864)
!9246 = !DILocation(line: 0, scope: !9243)
!9247 = !DILocation(line: 375, column: 2, scope: !9243)
!9248 = !DILocation(line: 376, column: 1, scope: !9243)
!9249 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !835, file: !835, line: 284, type: !888, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9250)
!9250 = !{!9251}
!9251 = !DILocalVariable(name: "dev", arg: 1, scope: !9249, file: !835, line: 284, type: !864)
!9252 = !DILocation(line: 0, scope: !9249)
!9253 = !DILocation(line: 286, column: 2, scope: !9249)
!9254 = !DILocation(line: 287, column: 1, scope: !9249)
!9255 = distinct !DISubprogram(name: "stm32_exti_init", scope: !835, file: !835, line: 416, type: !862, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9256)
!9256 = !{!9257}
!9257 = !DILocalVariable(name: "dev", arg: 1, scope: !9255, file: !835, line: 416, type: !864)
!9258 = !DILocation(line: 0, scope: !9255)
!9259 = !DILocation(line: 418, column: 2, scope: !9255)
!9260 = !DILocation(line: 420, column: 2, scope: !9255)
!9261 = !DILocation(line: 0, scope: !887)
!9262 = !DILocation(line: 493, column: 2, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !887, file: !835, line: 493, column: 2)
!9264 = !DILocation(line: 497, column: 2, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !887, file: !835, line: 497, column: 2)
!9266 = !DILocation(line: 507, column: 2, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !887, file: !835, line: 507, column: 2)
!9268 = !DILocation(line: 512, column: 2, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !887, file: !835, line: 512, column: 2)
!9270 = !DILocation(line: 516, column: 2, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !887, file: !835, line: 516, column: 2)
!9272 = !DILocation(line: 523, column: 2, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !887, file: !835, line: 523, column: 2)
!9274 = !DILocation(line: 527, column: 2, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !887, file: !835, line: 527, column: 2)
!9276 = !DILocation(line: 581, column: 2, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !887, file: !835, line: 581, column: 2)
!9278 = !DILocation(line: 586, column: 2, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !887, file: !835, line: 586, column: 2)
!9280 = !DILocation(line: 591, column: 2, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !887, file: !835, line: 591, column: 2)
!9282 = !DILocation(line: 595, column: 2, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !887, file: !835, line: 595, column: 2)
!9284 = !DILocation(line: 607, column: 1, scope: !887)
!9285 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !835, file: !835, line: 112, type: !9171, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9286)
!9286 = !{!9287, !9288}
!9287 = !DILocalVariable(name: "line", arg: 1, scope: !9285, file: !835, line: 112, type: !107)
!9288 = !DILocalVariable(name: "irqnum", scope: !9285, file: !835, line: 114, type: !107)
!9289 = !DILocation(line: 0, scope: !9285)
!9290 = !DILocation(line: 122, column: 13, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9285, file: !835, line: 122, column: 6)
!9292 = !DILocation(line: 122, column: 6, scope: !9285)
!9293 = !DILocation(line: 123, column: 3, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9295, file: !835, line: 123, column: 3)
!9295 = distinct !DILexicalBlock(scope: !9296, file: !835, line: 123, column: 3)
!9296 = distinct !DILexicalBlock(scope: !9297, file: !835, line: 123, column: 3)
!9297 = distinct !DILexicalBlock(scope: !9291, file: !835, line: 122, column: 22)
!9298 = !DILocation(line: 121, column: 11, scope: !9285)
!9299 = !DILocation(line: 130, column: 26, scope: !9285)
!9300 = !DILocation(line: 130, column: 2, scope: !9285)
!9301 = !DILocation(line: 134, column: 2, scope: !9285)
!9302 = !DILocation(line: 135, column: 1, scope: !9285)
!9303 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9182, file: !9182, line: 268, type: !6354, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9304)
!9304 = !{!9305}
!9305 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9303, file: !9182, line: 268, type: !152)
!9306 = !DILocation(line: 0, scope: !9303)
!9307 = !DILocation(line: 270, column: 3, scope: !9303)
!9308 = !DILocation(line: 271, column: 1, scope: !9303)
!9309 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !835, file: !835, line: 137, type: !9171, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9310)
!9310 = !{!9311}
!9311 = !DILocalVariable(name: "line", arg: 1, scope: !9309, file: !835, line: 137, type: !107)
!9312 = !DILocation(line: 0, scope: !9309)
!9313 = !DILocation(line: 141, column: 11, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9309, file: !835, line: 141, column: 6)
!9315 = !DILocation(line: 141, column: 6, scope: !9309)
!9316 = !DILocation(line: 145, column: 28, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9314, file: !835, line: 141, column: 17)
!9318 = !DILocation(line: 145, column: 3, scope: !9317)
!9319 = !DILocation(line: 147, column: 2, scope: !9317)
!9320 = !DILocation(line: 151, column: 1, scope: !9309)
!9321 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9182, file: !9182, line: 309, type: !6354, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9322)
!9322 = !{!9323}
!9323 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9321, file: !9182, line: 309, type: !152)
!9324 = !DILocation(line: 0, scope: !9321)
!9325 = !DILocation(line: 311, column: 3, scope: !9321)
!9326 = !DILocation(line: 312, column: 1, scope: !9321)
!9327 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !835, file: !835, line: 202, type: !9328, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9330)
!9328 = !DISubroutineType(types: !9329)
!9329 = !{null, !107, !107}
!9330 = !{!9331, !9332}
!9331 = !DILocalVariable(name: "line", arg: 1, scope: !9327, file: !835, line: 202, type: !107)
!9332 = !DILocalVariable(name: "trigger", arg: 2, scope: !9327, file: !835, line: 202, type: !107)
!9333 = !DILocation(line: 0, scope: !9327)
!9334 = !DILocation(line: 211, column: 2, scope: !9327)
!9335 = !DILocation(line: 213, column: 36, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9327, file: !835, line: 211, column: 19)
!9337 = !DILocation(line: 213, column: 3, scope: !9336)
!9338 = !DILocation(line: 214, column: 3, scope: !9336)
!9339 = !DILocation(line: 215, column: 3, scope: !9336)
!9340 = !DILocation(line: 217, column: 35, scope: !9336)
!9341 = !DILocation(line: 217, column: 3, scope: !9336)
!9342 = !DILocation(line: 218, column: 3, scope: !9336)
!9343 = !DILocation(line: 219, column: 3, scope: !9336)
!9344 = !DILocation(line: 221, column: 36, scope: !9336)
!9345 = !DILocation(line: 221, column: 3, scope: !9336)
!9346 = !DILocation(line: 222, column: 3, scope: !9336)
!9347 = !DILocation(line: 223, column: 3, scope: !9336)
!9348 = !DILocation(line: 225, column: 35, scope: !9336)
!9349 = !DILocation(line: 225, column: 3, scope: !9336)
!9350 = !DILocation(line: 226, column: 3, scope: !9336)
!9351 = !DILocation(line: 227, column: 3, scope: !9336)
!9352 = !DILocation(line: 232, column: 1, scope: !9327)
!9353 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9182, file: !9182, line: 573, type: !6354, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9354)
!9354 = !{!9355}
!9355 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9353, file: !9182, line: 573, type: !152)
!9356 = !DILocation(line: 0, scope: !9353)
!9357 = !DILocation(line: 575, column: 3, scope: !9353)
!9358 = !DILocation(line: 577, column: 1, scope: !9353)
!9359 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9182, file: !9182, line: 703, type: !6354, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9360)
!9360 = !{!9361}
!9361 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9359, file: !9182, line: 703, type: !152)
!9362 = !DILocation(line: 0, scope: !9359)
!9363 = !DILocation(line: 705, column: 3, scope: !9359)
!9364 = !DILocation(line: 706, column: 1, scope: !9359)
!9365 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9182, file: !9182, line: 529, type: !6354, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9366)
!9366 = !{!9367}
!9367 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9365, file: !9182, line: 529, type: !152)
!9368 = !DILocation(line: 0, scope: !9365)
!9369 = !DILocation(line: 531, column: 3, scope: !9365)
!9370 = !DILocation(line: 533, column: 1, scope: !9365)
!9371 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9182, file: !9182, line: 661, type: !6354, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9372)
!9372 = !{!9373}
!9373 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9371, file: !9182, line: 661, type: !152)
!9374 = !DILocation(line: 0, scope: !9371)
!9375 = !DILocation(line: 663, column: 3, scope: !9371)
!9376 = !DILocation(line: 664, column: 1, scope: !9371)
!9377 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !835, file: !835, line: 433, type: !9378, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9380)
!9378 = !DISubroutineType(types: !9379)
!9379 = !{!107, !107, !875, !106}
!9380 = !{!9381, !9382, !9383, !9384, !9386}
!9381 = !DILocalVariable(name: "line", arg: 1, scope: !9377, file: !835, line: 433, type: !107)
!9382 = !DILocalVariable(name: "cb", arg: 2, scope: !9377, file: !835, line: 433, type: !875)
!9383 = !DILocalVariable(name: "arg", arg: 3, scope: !9377, file: !835, line: 433, type: !106)
!9384 = !DILocalVariable(name: "dev", scope: !9377, file: !835, line: 435, type: !9385)
!9385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !864)
!9386 = !DILocalVariable(name: "data", scope: !9377, file: !835, line: 436, type: !9136)
!9387 = !DILocation(line: 0, scope: !9377)
!9388 = !DILocation(line: 438, column: 21, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9377, file: !835, line: 438, column: 6)
!9390 = !DILocation(line: 438, column: 6, scope: !9389)
!9391 = !DILocation(line: 438, column: 6, scope: !9377)
!9392 = !DILocation(line: 442, column: 20, scope: !9377)
!9393 = !DILocation(line: 443, column: 17, scope: !9377)
!9394 = !DILocation(line: 443, column: 22, scope: !9377)
!9395 = !DILocation(line: 445, column: 2, scope: !9377)
!9396 = !DILocation(line: 446, column: 1, scope: !9377)
!9397 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !835, file: !835, line: 448, type: !9171, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9398)
!9398 = !{!9399, !9400, !9401}
!9399 = !DILocalVariable(name: "line", arg: 1, scope: !9397, file: !835, line: 448, type: !107)
!9400 = !DILocalVariable(name: "dev", scope: !9397, file: !835, line: 450, type: !9385)
!9401 = !DILocalVariable(name: "data", scope: !9397, file: !835, line: 451, type: !9136)
!9402 = !DILocation(line: 0, scope: !9397)
!9403 = !DILocation(line: 453, column: 17, scope: !9397)
!9404 = !DILocation(line: 453, column: 20, scope: !9397)
!9405 = !DILocation(line: 454, column: 17, scope: !9397)
!9406 = !DILocation(line: 454, column: 22, scope: !9397)
!9407 = !DILocation(line: 455, column: 1, scope: !9397)
!9408 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1018, file: !1018, line: 183, type: !1056, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9409)
!9409 = !{!9410, !9411, !9412, !9413, !9414}
!9410 = !DILocalVariable(name: "dev", arg: 1, scope: !9408, file: !1018, line: 183, type: !1047)
!9411 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9408, file: !1018, line: 184, type: !1058)
!9412 = !DILocalVariable(name: "pclken", scope: !9408, file: !1018, line: 186, type: !1008)
!9413 = !DILocalVariable(name: "reg", scope: !9408, file: !1018, line: 187, type: !1601)
!9414 = !DILocalVariable(name: "reg_val", scope: !9408, file: !1018, line: 188, type: !152)
!9415 = !DILocation(line: 0, scope: !9408)
!9416 = !DILocation(line: 192, column: 6, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9408, file: !1018, line: 192, column: 6)
!9418 = !DILocation(line: 192, column: 6, scope: !9408)
!9419 = !DILocation(line: 197, column: 52, scope: !9408)
!9420 = !DILocation(line: 197, column: 8, scope: !9408)
!9421 = !DILocation(line: 198, column: 12, scope: !9408)
!9422 = !DILocation(line: 199, column: 21, scope: !9408)
!9423 = !DILocation(line: 199, column: 10, scope: !9408)
!9424 = !DILocation(line: 200, column: 7, scope: !9408)
!9425 = !DILocation(line: 202, column: 2, scope: !9408)
!9426 = !DILocation(line: 203, column: 1, scope: !9408)
!9427 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1018, file: !1018, line: 205, type: !1056, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9428)
!9428 = !{!9429, !9430, !9431, !9432, !9433}
!9429 = !DILocalVariable(name: "dev", arg: 1, scope: !9427, file: !1018, line: 205, type: !1047)
!9430 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9427, file: !1018, line: 206, type: !1058)
!9431 = !DILocalVariable(name: "pclken", scope: !9427, file: !1018, line: 208, type: !1008)
!9432 = !DILocalVariable(name: "reg", scope: !9427, file: !1018, line: 209, type: !1601)
!9433 = !DILocalVariable(name: "reg_val", scope: !9427, file: !1018, line: 210, type: !152)
!9434 = !DILocation(line: 0, scope: !9427)
!9435 = !DILocation(line: 214, column: 6, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9427, file: !1018, line: 214, column: 6)
!9437 = !DILocation(line: 214, column: 6, scope: !9427)
!9438 = !DILocation(line: 219, column: 52, scope: !9427)
!9439 = !DILocation(line: 219, column: 8, scope: !9427)
!9440 = !DILocation(line: 220, column: 12, scope: !9427)
!9441 = !DILocation(line: 221, column: 22, scope: !9427)
!9442 = !DILocation(line: 221, column: 13, scope: !9427)
!9443 = !DILocation(line: 221, column: 10, scope: !9427)
!9444 = !DILocation(line: 222, column: 7, scope: !9427)
!9445 = !DILocation(line: 224, column: 2, scope: !9427)
!9446 = !DILocation(line: 225, column: 1, scope: !9427)
!9447 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1018, file: !1018, line: 262, type: !1072, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9448)
!9448 = !{!9449, !9450, !9451, !9452, !9453, !9454, !9455, !9456}
!9449 = !DILocalVariable(name: "clock", arg: 1, scope: !9447, file: !1018, line: 262, type: !1047)
!9450 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9447, file: !1018, line: 263, type: !1058)
!9451 = !DILocalVariable(name: "rate", arg: 3, scope: !9447, file: !1018, line: 264, type: !1014)
!9452 = !DILocalVariable(name: "pclken", scope: !9447, file: !1018, line: 266, type: !1008)
!9453 = !DILocalVariable(name: "ahb_clock", scope: !9447, file: !1018, line: 273, type: !152)
!9454 = !DILocalVariable(name: "apb1_clock", scope: !9447, file: !1018, line: 274, type: !152)
!9455 = !DILocalVariable(name: "apb2_clock", scope: !9447, file: !1018, line: 276, type: !152)
!9456 = !DILocalVariable(name: "ahb3_clock", scope: !9447, file: !1018, line: 286, type: !152)
!9457 = !DILocation(line: 0, scope: !9447)
!9458 = !DILocation(line: 273, column: 23, scope: !9447)
!9459 = !DILocation(line: 274, column: 24, scope: !9447)
!9460 = !DILocation(line: 299, column: 18, scope: !9447)
!9461 = !DILocation(line: 299, column: 2, scope: !9447)
!9462 = !DILocation(line: 319, column: 3, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9447, file: !1018, line: 299, column: 23)
!9464 = !DILocation(line: 323, column: 3, scope: !9463)
!9465 = !DILocation(line: 346, column: 33, scope: !9463)
!9466 = !DILocation(line: 346, column: 11, scope: !9463)
!9467 = !DILocation(line: 350, column: 3, scope: !9463)
!9468 = !DILocation(line: 354, column: 33, scope: !9463)
!9469 = !DILocation(line: 354, column: 11, scope: !9463)
!9470 = !DILocation(line: 358, column: 3, scope: !9463)
!9471 = !DILocation(line: 374, column: 3, scope: !9463)
!9472 = !DILocation(line: 379, column: 3, scope: !9463)
!9473 = !DILocation(line: 0, scope: !9463)
!9474 = !DILocation(line: 396, column: 1, scope: !9447)
!9475 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1018, file: !1018, line: 227, type: !1088, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9476)
!9476 = !{!9477, !9478, !9479, !9480, !9481, !9482, !9483, !9484}
!9477 = !DILocalVariable(name: "dev", arg: 1, scope: !9475, file: !1018, line: 227, type: !1047)
!9478 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9475, file: !1018, line: 228, type: !1058)
!9479 = !DILocalVariable(name: "data", arg: 3, scope: !9475, file: !1018, line: 229, type: !106)
!9480 = !DILocalVariable(name: "pclken", scope: !9475, file: !1018, line: 233, type: !1008)
!9481 = !DILocalVariable(name: "reg", scope: !9475, file: !1018, line: 234, type: !1601)
!9482 = !DILocalVariable(name: "reg_val", scope: !9475, file: !1018, line: 235, type: !152)
!9483 = !DILocalVariable(name: "dt_val", scope: !9475, file: !1018, line: 235, type: !152)
!9484 = !DILocalVariable(name: "err", scope: !9475, file: !1018, line: 236, type: !107)
!9485 = !DILocation(line: 0, scope: !9475)
!9486 = !DILocation(line: 241, column: 30, scope: !9475)
!9487 = !DILocation(line: 241, column: 8, scope: !9475)
!9488 = !DILocation(line: 242, column: 10, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9475, file: !1018, line: 242, column: 6)
!9490 = !DILocation(line: 242, column: 6, scope: !9475)
!9491 = !DILocation(line: 247, column: 11, scope: !9475)
!9492 = !DILocation(line: 248, column: 6, scope: !9475)
!9493 = !DILocation(line: 247, column: 44, scope: !9475)
!9494 = !DILocation(line: 250, column: 6, scope: !9475)
!9495 = !DILocation(line: 249, column: 52, scope: !9475)
!9496 = !DILocation(line: 249, column: 8, scope: !9475)
!9497 = !DILocation(line: 251, column: 12, scope: !9475)
!9498 = !DILocation(line: 252, column: 10, scope: !9475)
!9499 = !DILocation(line: 253, column: 7, scope: !9475)
!9500 = !DILocation(line: 255, column: 2, scope: !9475)
!9501 = !DILocation(line: 260, column: 1, scope: !9475)
!9502 = distinct !DISubprogram(name: "enabled_clock", scope: !1018, file: !1018, line: 100, type: !9503, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9505)
!9503 = !DISubroutineType(types: !9504)
!9504 = !{!107, !152}
!9505 = !{!9506, !9507}
!9506 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9502, file: !1018, line: 100, type: !152)
!9507 = !DILocalVariable(name: "r", scope: !9502, file: !1018, line: 102, type: !107)
!9508 = !DILocation(line: 0, scope: !9502)
!9509 = !DILocation(line: 104, column: 2, scope: !9502)
!9510 = !DILocation(line: 180, column: 2, scope: !9502)
!9511 = !DILocation(line: 181, column: 1, scope: !9502)
!9512 = distinct !DISubprogram(name: "get_bus_clock", scope: !1018, file: !1018, line: 79, type: !9513, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9515)
!9513 = !DISubroutineType(types: !9514)
!9514 = !{!152, !152, !152}
!9515 = !{!9516, !9517}
!9516 = !DILocalVariable(name: "clock", arg: 1, scope: !9512, file: !1018, line: 79, type: !152)
!9517 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9512, file: !1018, line: 79, type: !152)
!9518 = !DILocation(line: 0, scope: !9512)
!9519 = !DILocation(line: 81, column: 15, scope: !9512)
!9520 = !DILocation(line: 81, column: 2, scope: !9512)
!9521 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1018, file: !1018, line: 68, type: !9522, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9524)
!9522 = !DISubroutineType(types: !9523)
!9523 = !{!152, !152, !107, !107, !107}
!9524 = !{!9525, !9526, !9527, !9528}
!9525 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9521, file: !1018, line: 68, type: !152)
!9526 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9521, file: !1018, line: 69, type: !107)
!9527 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9521, file: !1018, line: 70, type: !107)
!9528 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9521, file: !1018, line: 71, type: !107)
!9529 = !DILocation(line: 0, scope: !9521)
!9530 = !DILocation(line: 75, column: 22, scope: !9521)
!9531 = !DILocation(line: 76, column: 13, scope: !9521)
!9532 = !DILocation(line: 75, column: 34, scope: !9521)
!9533 = !DILocation(line: 75, column: 2, scope: !9521)
!9534 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1018, file: !1018, line: 641, type: !1045, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9535)
!9535 = !{!9536, !9537, !9538}
!9536 = !DILocalVariable(name: "dev", arg: 1, scope: !9534, file: !1018, line: 641, type: !1047)
!9537 = !DILocalVariable(name: "old_flash_freq", scope: !9534, file: !1018, line: 664, type: !152)
!9538 = !DILocalVariable(name: "new_flash_freq", scope: !9534, file: !1018, line: 665, type: !152)
!9539 = !DILocation(line: 0, scope: !9534)
!9540 = !DILocation(line: 646, column: 2, scope: !9534)
!9541 = !DILocation(line: 667, column: 19, scope: !9534)
!9542 = !DILocation(line: 674, column: 21, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9534, file: !1018, line: 674, column: 6)
!9544 = !DILocation(line: 674, column: 6, scope: !9534)
!9545 = !DILocation(line: 675, column: 3, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9543, file: !1018, line: 674, column: 59)
!9547 = !DILocation(line: 676, column: 2, scope: !9546)
!9548 = !DILocation(line: 680, column: 2, scope: !9534)
!9549 = !DILocation(line: 683, column: 2, scope: !9534)
!9550 = !DILocation(line: 690, column: 3, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9552, file: !1018, line: 689, column: 9)
!9552 = distinct !DILexicalBlock(scope: !9534, file: !1018, line: 685, column: 6)
!9553 = !DILocation(line: 695, column: 2, scope: !9534)
!9554 = !DILocation(line: 696, column: 2, scope: !9534)
!9555 = !DILocation(line: 696, column: 9, scope: !9534)
!9556 = !DILocation(line: 696, column: 34, scope: !9534)
!9557 = distinct !{!9557, !9554, !9558}
!9558 = !DILocation(line: 697, column: 2, scope: !9534)
!9559 = !DILocation(line: 720, column: 21, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9534, file: !1018, line: 720, column: 6)
!9561 = !DILocation(line: 720, column: 6, scope: !9534)
!9562 = !DILocation(line: 721, column: 3, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9560, file: !1018, line: 720, column: 60)
!9564 = !DILocation(line: 722, column: 2, scope: !9563)
!9565 = !DILocation(line: 725, column: 18, scope: !9534)
!9566 = !DILocation(line: 728, column: 2, scope: !9534)
!9567 = !DILocation(line: 730, column: 2, scope: !9534)
!9568 = !DILocation(line: 745, column: 2, scope: !9534)
!9569 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9570, file: !9570, line: 3275, type: !6344, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9570 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9571 = !DILocation(line: 3277, column: 21, scope: !9569)
!9572 = !DILocation(line: 3277, column: 3, scope: !9569)
!9573 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1018, file: !1018, line: 507, type: !3082, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9574 = !DILocation(line: 516, column: 4, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9576, file: !1018, line: 515, column: 10)
!9576 = distinct !DILexicalBlock(scope: !9577, file: !1018, line: 513, column: 7)
!9577 = distinct !DILexicalBlock(scope: !9578, file: !1018, line: 510, column: 37)
!9578 = distinct !DILexicalBlock(scope: !9573, file: !1018, line: 510, column: 6)
!9579 = !DILocation(line: 526, column: 3, scope: !9577)
!9580 = !DILocation(line: 527, column: 3, scope: !9577)
!9581 = !DILocation(line: 527, column: 10, scope: !9577)
!9582 = !DILocation(line: 527, column: 31, scope: !9577)
!9583 = distinct !{!9583, !9580, !9584}
!9584 = !DILocation(line: 529, column: 3, scope: !9577)
!9585 = !DILocation(line: 583, column: 3, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9587, file: !1018, line: 577, column: 37)
!9587 = distinct !DILexicalBlock(scope: !9573, file: !1018, line: 577, column: 6)
!9588 = !DILocation(line: 584, column: 3, scope: !9586)
!9589 = !DILocation(line: 584, column: 10, scope: !9586)
!9590 = !DILocation(line: 584, column: 31, scope: !9586)
!9591 = distinct !{!9591, !9588, !9592}
!9592 = !DILocation(line: 585, column: 3, scope: !9586)
!9593 = !DILocation(line: 627, column: 1, scope: !9573)
!9594 = distinct !DISubprogram(name: "set_up_plls", scope: !1018, file: !1018, line: 448, type: !3082, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9595 = !DILocation(line: 460, column: 6, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9594, file: !1018, line: 460, column: 6)
!9597 = !DILocation(line: 460, column: 31, scope: !9596)
!9598 = !DILocation(line: 460, column: 6, scope: !9594)
!9599 = !DILocation(line: 461, column: 3, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9596, file: !1018, line: 460, column: 67)
!9601 = !DILocation(line: 462, column: 3, scope: !9600)
!9602 = !DILocation(line: 463, column: 2, scope: !9600)
!9603 = !DILocation(line: 464, column: 2, scope: !9594)
!9604 = !DILocation(line: 488, column: 2, scope: !9594)
!9605 = !DILocation(line: 492, column: 2, scope: !9594)
!9606 = !DILocation(line: 496, column: 2, scope: !9594)
!9607 = !DILocation(line: 499, column: 2, scope: !9594)
!9608 = !DILocation(line: 500, column: 2, scope: !9594)
!9609 = !DILocation(line: 500, column: 9, scope: !9594)
!9610 = !DILocation(line: 500, column: 30, scope: !9594)
!9611 = distinct !{!9611, !9608, !9612}
!9612 = !DILocation(line: 502, column: 2, scope: !9594)
!9613 = !DILocation(line: 505, column: 1, scope: !9594)
!9614 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9570, file: !9570, line: 3224, type: !6354, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9615)
!9615 = !{!9616}
!9616 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9614, file: !9570, line: 3224, type: !152)
!9617 = !DILocation(line: 0, scope: !9614)
!9618 = !DILocation(line: 3226, column: 3, scope: !9614)
!9619 = !DILocation(line: 3227, column: 1, scope: !9614)
!9620 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9570, file: !9570, line: 3188, type: !6354, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9621)
!9621 = !{!9622}
!9622 = !DILocalVariable(name: "Source", arg: 1, scope: !9620, file: !9570, line: 3188, type: !152)
!9623 = !DILocation(line: 0, scope: !9620)
!9624 = !DILocation(line: 3190, column: 3, scope: !9620)
!9625 = !DILocation(line: 3191, column: 1, scope: !9620)
!9626 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9570, file: !9570, line: 3204, type: !6344, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9627 = !DILocation(line: 3206, column: 21, scope: !9626)
!9628 = !DILocation(line: 3206, column: 3, scope: !9626)
!9629 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9570, file: !9570, line: 3240, type: !6354, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9630)
!9630 = !{!9631}
!9631 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9629, file: !9570, line: 3240, type: !152)
!9632 = !DILocation(line: 0, scope: !9629)
!9633 = !DILocation(line: 3242, column: 3, scope: !9629)
!9634 = !DILocation(line: 3243, column: 1, scope: !9629)
!9635 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9570, file: !9570, line: 3256, type: !6354, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9636)
!9636 = !{!9637}
!9637 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9635, file: !9570, line: 3256, type: !152)
!9638 = !DILocation(line: 0, scope: !9635)
!9639 = !DILocation(line: 3258, column: 3, scope: !9635)
!9640 = !DILocation(line: 3259, column: 1, scope: !9635)
!9641 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1018, file: !1018, line: 409, type: !3082, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9642 = !DILocation(line: 412, column: 6, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9641, file: !1018, line: 412, column: 6)
!9644 = !DILocation(line: 412, column: 27, scope: !9643)
!9645 = !DILocation(line: 412, column: 6, scope: !9641)
!9646 = !DILocation(line: 414, column: 3, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9643, file: !1018, line: 412, column: 33)
!9648 = !DILocation(line: 415, column: 3, scope: !9647)
!9649 = !DILocation(line: 415, column: 10, scope: !9647)
!9650 = !DILocation(line: 415, column: 31, scope: !9647)
!9651 = distinct !{!9651, !9648, !9652}
!9652 = !DILocation(line: 417, column: 3, scope: !9647)
!9653 = !DILocation(line: 421, column: 2, scope: !9641)
!9654 = !DILocation(line: 422, column: 2, scope: !9641)
!9655 = !DILocation(line: 422, column: 9, scope: !9641)
!9656 = !DILocation(line: 422, column: 34, scope: !9641)
!9657 = distinct !{!9657, !9654, !9658}
!9658 = !DILocation(line: 423, column: 2, scope: !9641)
!9659 = !DILocation(line: 424, column: 1, scope: !9641)
!9660 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9570, file: !9570, line: 4195, type: !3082, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9661 = !DILocation(line: 4197, column: 3, scope: !9660)
!9662 = !DILocation(line: 4198, column: 1, scope: !9660)
!9663 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9570, file: !9570, line: 4184, type: !3082, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9664 = !DILocation(line: 4186, column: 3, scope: !9663)
!9665 = !DILocation(line: 4187, column: 1, scope: !9663)
!9666 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9570, file: !9570, line: 4205, type: !6344, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9667 = !DILocation(line: 4207, column: 11, scope: !9666)
!9668 = !DILocation(line: 4207, column: 44, scope: !9666)
!9669 = !DILocation(line: 4207, column: 3, scope: !9666)
!9670 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9570, file: !9570, line: 3007, type: !6344, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9671 = !DILocation(line: 3009, column: 11, scope: !9670)
!9672 = !DILocation(line: 3009, column: 44, scope: !9670)
!9673 = !DILocation(line: 3009, column: 3, scope: !9670)
!9674 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9570, file: !9570, line: 2987, type: !3082, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9675 = !DILocation(line: 2989, column: 3, scope: !9674)
!9676 = !DILocation(line: 2990, column: 1, scope: !9674)
!9677 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9570, file: !9570, line: 2939, type: !3082, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9678 = !DILocation(line: 2941, column: 3, scope: !9677)
!9679 = !DILocation(line: 2942, column: 1, scope: !9677)
!9680 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9570, file: !9570, line: 2949, type: !3082, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9681 = !DILocation(line: 2951, column: 3, scope: !9680)
!9682 = !DILocation(line: 2952, column: 1, scope: !9680)
!9683 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9570, file: !9570, line: 2969, type: !6344, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9684 = !DILocation(line: 2971, column: 11, scope: !9683)
!9685 = !DILocation(line: 2971, column: 44, scope: !9683)
!9686 = !DILocation(line: 2971, column: 3, scope: !9683)
!9687 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9570, file: !9570, line: 3143, type: !3082, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9688 = !DILocation(line: 3145, column: 3, scope: !9687)
!9689 = !DILocation(line: 3146, column: 1, scope: !9687)
!9690 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9570, file: !9570, line: 3163, type: !6344, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !2156)
!9691 = !DILocation(line: 3165, column: 11, scope: !9690)
!9692 = !DILocation(line: 3165, column: 46, scope: !9690)
!9693 = !DILocation(line: 3165, column: 3, scope: !9690)
!9694 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9695, file: !9695, line: 40, type: !6344, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !2156)
!9695 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9696 = !DILocation(line: 45, column: 3, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9698, file: !9695, line: 44, column: 44)
!9698 = distinct !DILexicalBlock(scope: !9699, file: !9695, line: 44, column: 13)
!9699 = distinct !DILexicalBlock(scope: !9694, file: !9695, line: 42, column: 6)
!9700 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9695, file: !9695, line: 56, type: !3082, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !2156)
!9701 = !DILocation(line: 58, column: 2, scope: !9700)
!9702 = !DILocation(line: 62, column: 1, scope: !9700)
!9703 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9570, file: !9570, line: 4304, type: !9704, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !9706)
!9704 = !DISubroutineType(types: !9705)
!9705 = !{null, !152, !152, !152, !152}
!9706 = !{!9707, !9708, !9709, !9710}
!9707 = !DILocalVariable(name: "Source", arg: 1, scope: !9703, file: !9570, line: 4304, type: !152)
!9708 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9703, file: !9570, line: 4304, type: !152)
!9709 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9703, file: !9570, line: 4304, type: !152)
!9710 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9703, file: !9570, line: 4304, type: !152)
!9711 = !DILocation(line: 0, scope: !9703)
!9712 = !DILocation(line: 4306, column: 3, scope: !9703)
!9713 = !DILocation(line: 4308, column: 3, scope: !9703)
!9714 = !DILocation(line: 4312, column: 1, scope: !9703)
!9715 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9695, file: !9695, line: 69, type: !3082, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !2156)
!9716 = !DILocation(line: 72, column: 2, scope: !9715)
!9717 = !DILocation(line: 73, column: 1, scope: !9715)
!9718 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9719, file: !9719, line: 1185, type: !6354, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !9720)
!9719 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9720 = !{!9721, !9722}
!9721 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9718, file: !9719, line: 1185, type: !152)
!9722 = !DILocalVariable(name: "tmpreg", scope: !9718, file: !9719, line: 1187, type: !227)
!9723 = !DILocation(line: 0, scope: !9718)
!9724 = !DILocation(line: 1187, column: 3, scope: !9718)
!9725 = !DILocation(line: 1187, column: 17, scope: !9718)
!9726 = !DILocation(line: 1188, column: 3, scope: !9718)
!9727 = !DILocation(line: 1190, column: 12, scope: !9718)
!9728 = !DILocation(line: 1190, column: 10, scope: !9718)
!9729 = !DILocation(line: 1191, column: 9, scope: !9718)
!9730 = !DILocation(line: 1192, column: 1, scope: !9718)
!9731 = distinct !DISubprogram(name: "uart_console_init", scope: !1149, file: !1149, line: 588, type: !1126, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !9732)
!9732 = !{!9733}
!9733 = !DILocalVariable(name: "arg", arg: 1, scope: !9731, file: !1149, line: 588, type: !1104)
!9734 = !DILocation(line: 0, scope: !9731)
!9735 = !DILocation(line: 593, column: 7, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9731, file: !1149, line: 593, column: 6)
!9737 = !DILocation(line: 593, column: 6, scope: !9731)
!9738 = !DILocation(line: 597, column: 2, scope: !9731)
!9739 = !DILocation(line: 599, column: 2, scope: !9731)
!9740 = !DILocation(line: 600, column: 1, scope: !9731)
!9741 = distinct !DISubprogram(name: "device_is_ready", scope: !9742, file: !9742, line: 47, type: !9743, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !9745)
!9742 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!9743 = !DISubroutineType(types: !9744)
!9744 = !{!145, !1104}
!9745 = !{!9746}
!9746 = !DILocalVariable(name: "dev", arg: 1, scope: !9741, file: !9742, line: 47, type: !1104)
!9747 = !DILocation(line: 0, scope: !9741)
!9748 = !DILocation(line: 55, column: 2, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9741, file: !9742, line: 55, column: 2)
!9750 = !{i64 2154963743}
!9751 = !DILocation(line: 56, column: 9, scope: !9741)
!9752 = !DILocation(line: 56, column: 2, scope: !9741)
!9753 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1149, file: !1149, line: 573, type: !3082, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !2156)
!9754 = !DILocation(line: 576, column: 2, scope: !9753)
!9755 = !DILocation(line: 579, column: 2, scope: !9753)
!9756 = !DILocation(line: 581, column: 1, scope: !9753)
!9757 = distinct !DISubprogram(name: "console_out", scope: !1149, file: !1149, line: 77, type: !214, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !9758)
!9758 = !{!9759}
!9759 = !DILocalVariable(name: "c", arg: 1, scope: !9757, file: !1149, line: 77, type: !107)
!9760 = !DILocation(line: 0, scope: !9757)
!9761 = !DILocation(line: 89, column: 11, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9757, file: !1149, line: 89, column: 6)
!9763 = !DILocation(line: 89, column: 6, scope: !9757)
!9764 = !DILocation(line: 90, column: 3, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9762, file: !1149, line: 89, column: 17)
!9766 = !DILocation(line: 91, column: 2, scope: !9765)
!9767 = !DILocation(line: 92, column: 34, scope: !9757)
!9768 = !DILocation(line: 92, column: 2, scope: !9757)
!9769 = !DILocation(line: 94, column: 2, scope: !9757)
!9770 = distinct !DISubprogram(name: "uart_poll_out", scope: !9771, file: !9771, line: 95, type: !1122, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !9772)
!9771 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/pytest")
!9772 = !{!9773, !9774}
!9773 = !DILocalVariable(name: "dev", arg: 1, scope: !9770, file: !9771, line: 95, type: !1104)
!9774 = !DILocalVariable(name: "out_char", arg: 2, scope: !9770, file: !9771, line: 95, type: !196)
!9775 = !DILocation(line: 0, scope: !9770)
!9776 = !DILocation(line: 105, column: 2, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9770, file: !9771, line: 105, column: 2)
!9778 = !{i64 2155047134}
!9779 = !DILocation(line: 106, column: 2, scope: !9770)
!9780 = !DILocation(line: 107, column: 1, scope: !9770)
!9781 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1098, file: !1098, line: 574, type: !1122, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !9782)
!9782 = !{!9783, !9784, !9785}
!9783 = !DILocalVariable(name: "dev", arg: 1, scope: !9781, file: !1098, line: 574, type: !1104)
!9784 = !DILocalVariable(name: "out_char", arg: 2, scope: !9781, file: !1098, line: 575, type: !196)
!9785 = !DILocalVariable(name: "api", scope: !9781, file: !1098, line: 577, type: !1095)
!9786 = !DILocation(line: 0, scope: !9781)
!9787 = !DILocation(line: 578, column: 40, scope: !9781)
!9788 = !DILocation(line: 580, column: 7, scope: !9781)
!9789 = !DILocation(line: 580, column: 2, scope: !9781)
!9790 = !DILocation(line: 581, column: 1, scope: !9781)
!9791 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !9743, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !9792)
!9792 = !{!9793}
!9793 = !DILocalVariable(name: "dev", arg: 1, scope: !9791, file: !247, line: 730, type: !1104)
!9794 = !DILocation(line: 0, scope: !9791)
!9795 = !DILocation(line: 732, column: 9, scope: !9791)
!9796 = !DILocation(line: 732, column: 2, scope: !9791)
!9797 = distinct !DISubprogram(name: "uart_register_input", scope: !1149, file: !1149, line: 560, type: !9798, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !9845)
!9798 = !DISubroutineType(types: !9799)
!9799 = !{null, !9800, !9800, !9842}
!9800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9801, size: 32)
!9801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !406, line: 2208, size: 160, elements: !9802)
!9802 = !{!9803}
!9803 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9801, file: !406, line: 2209, baseType: !9804, size: 160)
!9804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !406, line: 1709, size: 160, elements: !9805)
!9805 = !{!9806, !9819, !9823}
!9806 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9804, file: !406, line: 1710, baseType: !9807, size: 64)
!9807 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9808, line: 46, baseType: !9809)
!9808 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9808, line: 41, size: 64, elements: !9810)
!9810 = !{!9811, !9818}
!9811 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9809, file: !9808, line: 42, baseType: !9812, size: 32)
!9812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9813, size: 32)
!9813 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9808, line: 39, baseType: !9814)
!9814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9808, line: 35, size: 32, elements: !9815)
!9815 = !{!9816}
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9814, file: !9808, line: 36, baseType: !9817, size: 32)
!9817 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9808, line: 32, baseType: !152)
!9818 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9809, file: !9808, line: 43, baseType: !9812, size: 32, offset: 32)
!9819 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9804, file: !406, line: 1711, baseType: !9820, size: 32, offset: 64)
!9820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !9821)
!9821 = !{!9822}
!9822 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9820, file: !420, line: 52, baseType: !22, size: 32)
!9823 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9804, file: !406, line: 1712, baseType: !9824, size: 64, offset: 96)
!9824 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !9825)
!9825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !9826)
!9826 = !{!9827}
!9827 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9825, file: !345, line: 232, baseType: !9828, size: 64)
!9828 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !9829)
!9829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !9830)
!9830 = !{!9831, !9837}
!9831 = !DIDerivedType(tag: DW_TAG_member, scope: !9829, file: !319, line: 38, baseType: !9832, size: 32)
!9832 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9829, file: !319, line: 38, size: 32, elements: !9833)
!9833 = !{!9834, !9836}
!9834 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9832, file: !319, line: 39, baseType: !9835, size: 32)
!9835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9829, size: 32)
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9832, file: !319, line: 40, baseType: !9835, size: 32)
!9837 = !DIDerivedType(tag: DW_TAG_member, scope: !9829, file: !319, line: 42, baseType: !9838, size: 32, offset: 32)
!9838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9829, file: !319, line: 42, size: 32, elements: !9839)
!9839 = !{!9840, !9841}
!9840 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9838, file: !319, line: 43, baseType: !9835, size: 32)
!9841 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9838, file: !319, line: 44, baseType: !9835, size: 32)
!9842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9843, size: 32)
!9843 = !DISubroutineType(types: !9844)
!9844 = !{!195, !193, !195}
!9845 = !{!9846, !9847, !9848}
!9846 = !DILocalVariable(name: "avail", arg: 1, scope: !9797, file: !1149, line: 560, type: !9800)
!9847 = !DILocalVariable(name: "lines", arg: 2, scope: !9797, file: !1149, line: 560, type: !9800)
!9848 = !DILocalVariable(name: "completion", arg: 3, scope: !9797, file: !1149, line: 561, type: !9842)
!9849 = !DILocation(line: 0, scope: !9797)
!9850 = !DILocation(line: 566, column: 1, scope: !9797)
!9851 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1329, file: !1329, line: 523, type: !1185, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !9852)
!9852 = !{!9853, !9854, !9855, !9856, !9857}
!9853 = !DILocalVariable(name: "dev", arg: 1, scope: !9851, file: !1329, line: 523, type: !1187)
!9854 = !DILocalVariable(name: "pin", arg: 2, scope: !9851, file: !1329, line: 524, type: !1202)
!9855 = !DILocalVariable(name: "flags", arg: 3, scope: !9851, file: !1329, line: 524, type: !1203)
!9856 = !DILocalVariable(name: "err", scope: !9851, file: !1329, line: 526, type: !107)
!9857 = !DILocalVariable(name: "pincfg", scope: !9851, file: !1329, line: 527, type: !107)
!9858 = !DILocation(line: 0, scope: !9851)
!9859 = !DILocation(line: 527, column: 2, scope: !9851)
!9860 = !DILocation(line: 532, column: 8, scope: !9851)
!9861 = !DILocation(line: 533, column: 10, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9851, file: !1329, line: 533, column: 6)
!9863 = !DILocation(line: 533, column: 6, scope: !9851)
!9864 = !DILocation(line: 543, column: 13, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9851, file: !1329, line: 543, column: 6)
!9866 = !DILocation(line: 543, column: 28, scope: !9865)
!9867 = !DILocation(line: 543, column: 6, scope: !9851)
!9868 = !DILocation(line: 544, column: 14, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9870, file: !1329, line: 544, column: 7)
!9870 = distinct !DILexicalBlock(scope: !9865, file: !1329, line: 543, column: 34)
!9871 = !DILocation(line: 544, column: 39, scope: !9869)
!9872 = !DILocation(line: 544, column: 7, scope: !9870)
!9873 = !DILocation(line: 545, column: 38, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9869, file: !1329, line: 544, column: 45)
!9875 = !DILocation(line: 545, column: 4, scope: !9874)
!9876 = !DILocation(line: 546, column: 3, scope: !9874)
!9877 = !DILocation(line: 546, column: 21, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9869, file: !1329, line: 546, column: 14)
!9879 = !DILocation(line: 546, column: 45, scope: !9878)
!9880 = !DILocation(line: 546, column: 14, scope: !9869)
!9881 = !DILocation(line: 547, column: 40, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9878, file: !1329, line: 546, column: 51)
!9883 = !DILocation(line: 547, column: 4, scope: !9882)
!9884 = !DILocation(line: 548, column: 3, scope: !9882)
!9885 = !DILocation(line: 551, column: 32, scope: !9851)
!9886 = !DILocation(line: 551, column: 37, scope: !9851)
!9887 = !DILocation(line: 551, column: 2, scope: !9851)
!9888 = !DILocation(line: 554, column: 6, scope: !9851)
!9889 = !DILocation(line: 562, column: 1, scope: !9851)
!9890 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1329, file: !1329, line: 410, type: !9891, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !9893)
!9891 = !DISubroutineType(types: !9892)
!9892 = !{!107, !1187, !1014}
!9893 = !{!9894, !9895, !9896, !9898}
!9894 = !DILocalVariable(name: "dev", arg: 1, scope: !9890, file: !1329, line: 410, type: !1187)
!9895 = !DILocalVariable(name: "value", arg: 2, scope: !9890, file: !1329, line: 410, type: !1014)
!9896 = !DILocalVariable(name: "cfg", scope: !9890, file: !1329, line: 412, type: !9897)
!9897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 32)
!9898 = !DILocalVariable(name: "gpio", scope: !9890, file: !1329, line: 413, type: !1260)
!9899 = !DILocation(line: 0, scope: !9890)
!9900 = !DILocation(line: 412, column: 45, scope: !9890)
!9901 = !DILocation(line: 413, column: 44, scope: !9890)
!9902 = !DILocation(line: 415, column: 11, scope: !9890)
!9903 = !DILocation(line: 415, column: 9, scope: !9890)
!9904 = !DILocation(line: 417, column: 2, scope: !9890)
!9905 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1329, file: !1329, line: 420, type: !1212, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !9906)
!9906 = !{!9907, !9908, !9909, !9910, !9911, !9912}
!9907 = !DILocalVariable(name: "dev", arg: 1, scope: !9905, file: !1329, line: 420, type: !1187)
!9908 = !DILocalVariable(name: "mask", arg: 2, scope: !9905, file: !1329, line: 421, type: !1214)
!9909 = !DILocalVariable(name: "value", arg: 3, scope: !9905, file: !1329, line: 422, type: !1209)
!9910 = !DILocalVariable(name: "cfg", scope: !9905, file: !1329, line: 424, type: !9897)
!9911 = !DILocalVariable(name: "gpio", scope: !9905, file: !1329, line: 425, type: !1260)
!9912 = !DILocalVariable(name: "port_value", scope: !9905, file: !1329, line: 426, type: !152)
!9913 = !DILocation(line: 0, scope: !9905)
!9914 = !DILocation(line: 424, column: 45, scope: !9905)
!9915 = !DILocation(line: 425, column: 44, scope: !9905)
!9916 = !DILocation(line: 430, column: 15, scope: !9905)
!9917 = !DILocation(line: 431, column: 46, scope: !9905)
!9918 = !DILocation(line: 431, column: 44, scope: !9905)
!9919 = !DILocation(line: 431, column: 61, scope: !9905)
!9920 = !DILocation(line: 431, column: 53, scope: !9905)
!9921 = !DILocation(line: 431, column: 2, scope: !9905)
!9922 = !DILocation(line: 435, column: 2, scope: !9905)
!9923 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1329, file: !1329, line: 438, type: !1217, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !9924)
!9924 = !{!9925, !9926, !9927, !9928}
!9925 = !DILocalVariable(name: "dev", arg: 1, scope: !9923, file: !1329, line: 438, type: !1187)
!9926 = !DILocalVariable(name: "pins", arg: 2, scope: !9923, file: !1329, line: 439, type: !1214)
!9927 = !DILocalVariable(name: "cfg", scope: !9923, file: !1329, line: 441, type: !9897)
!9928 = !DILocalVariable(name: "gpio", scope: !9923, file: !1329, line: 442, type: !1260)
!9929 = !DILocation(line: 0, scope: !9923)
!9930 = !DILocation(line: 441, column: 45, scope: !9923)
!9931 = !DILocation(line: 442, column: 44, scope: !9923)
!9932 = !DILocation(line: 448, column: 2, scope: !9923)
!9933 = !DILocation(line: 450, column: 2, scope: !9923)
!9934 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1329, file: !1329, line: 453, type: !1217, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !9935)
!9935 = !{!9936, !9937, !9938, !9939}
!9936 = !DILocalVariable(name: "dev", arg: 1, scope: !9934, file: !1329, line: 453, type: !1187)
!9937 = !DILocalVariable(name: "pins", arg: 2, scope: !9934, file: !1329, line: 454, type: !1214)
!9938 = !DILocalVariable(name: "cfg", scope: !9934, file: !1329, line: 456, type: !9897)
!9939 = !DILocalVariable(name: "gpio", scope: !9934, file: !1329, line: 457, type: !1260)
!9940 = !DILocation(line: 0, scope: !9934)
!9941 = !DILocation(line: 456, column: 45, scope: !9934)
!9942 = !DILocation(line: 457, column: 44, scope: !9934)
!9943 = !DILocation(line: 467, column: 2, scope: !9934)
!9944 = !DILocation(line: 470, column: 2, scope: !9934)
!9945 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1329, file: !1329, line: 473, type: !1217, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !9946)
!9946 = !{!9947, !9948, !9949, !9950}
!9947 = !DILocalVariable(name: "dev", arg: 1, scope: !9945, file: !1329, line: 473, type: !1187)
!9948 = !DILocalVariable(name: "pins", arg: 2, scope: !9945, file: !1329, line: 474, type: !1214)
!9949 = !DILocalVariable(name: "cfg", scope: !9945, file: !1329, line: 476, type: !9897)
!9950 = !DILocalVariable(name: "gpio", scope: !9945, file: !1329, line: 477, type: !1260)
!9951 = !DILocation(line: 0, scope: !9945)
!9952 = !DILocation(line: 476, column: 45, scope: !9945)
!9953 = !DILocation(line: 477, column: 44, scope: !9945)
!9954 = !DILocation(line: 484, column: 2, scope: !9945)
!9955 = !DILocation(line: 487, column: 2, scope: !9945)
!9956 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1329, file: !1329, line: 594, type: !1223, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !9957)
!9957 = !{!9958, !9959, !9960, !9961, !9962, !9963, !9965, !9966, !9967}
!9958 = !DILocalVariable(name: "dev", arg: 1, scope: !9956, file: !1329, line: 594, type: !1187)
!9959 = !DILocalVariable(name: "pin", arg: 2, scope: !9956, file: !1329, line: 595, type: !1202)
!9960 = !DILocalVariable(name: "mode", arg: 3, scope: !9956, file: !1329, line: 596, type: !1161)
!9961 = !DILocalVariable(name: "trig", arg: 4, scope: !9956, file: !1329, line: 597, type: !1167)
!9962 = !DILocalVariable(name: "cfg", scope: !9956, file: !1329, line: 599, type: !9897)
!9963 = !DILocalVariable(name: "data", scope: !9956, file: !1329, line: 600, type: !9964)
!9964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 32)
!9965 = !DILocalVariable(name: "edge", scope: !9956, file: !1329, line: 601, type: !107)
!9966 = !DILocalVariable(name: "err", scope: !9956, file: !1329, line: 602, type: !107)
!9967 = !DILabel(scope: !9956, name: "exit", file: !1329, line: 643)
!9968 = !DILocation(line: 0, scope: !9956)
!9969 = !DILocation(line: 599, column: 45, scope: !9956)
!9970 = !DILocation(line: 604, column: 6, scope: !9956)
!9971 = !DILocation(line: 605, column: 34, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9973, file: !1329, line: 605, column: 7)
!9973 = distinct !DILexicalBlock(scope: !9974, file: !1329, line: 604, column: 38)
!9974 = distinct !DILexicalBlock(scope: !9956, file: !1329, line: 604, column: 6)
!9975 = !DILocation(line: 605, column: 7, scope: !9972)
!9976 = !DILocation(line: 605, column: 47, scope: !9972)
!9977 = !DILocation(line: 605, column: 39, scope: !9972)
!9978 = !DILocation(line: 605, column: 7, scope: !9973)
!9979 = !DILocation(line: 606, column: 4, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9972, file: !1329, line: 605, column: 53)
!9981 = !DILocation(line: 607, column: 4, scope: !9980)
!9982 = !DILocation(line: 608, column: 4, scope: !9980)
!9983 = !DILocation(line: 609, column: 3, scope: !9980)
!9984 = !DILocation(line: 600, column: 38, scope: !9956)
!9985 = !DILocation(line: 620, column: 30, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9956, file: !1329, line: 620, column: 6)
!9987 = !DILocation(line: 620, column: 6, scope: !9986)
!9988 = !DILocation(line: 620, column: 57, scope: !9986)
!9989 = !DILocation(line: 620, column: 6, scope: !9956)
!9990 = !DILocation(line: 625, column: 29, scope: !9956)
!9991 = !DILocation(line: 625, column: 2, scope: !9956)
!9992 = !DILocation(line: 627, column: 2, scope: !9956)
!9993 = !DILocation(line: 630, column: 3, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9956, file: !1329, line: 627, column: 16)
!9995 = !DILocation(line: 633, column: 3, scope: !9994)
!9996 = !DILocation(line: 636, column: 3, scope: !9994)
!9997 = !DILocation(line: 639, column: 2, scope: !9956)
!9998 = !DILocation(line: 641, column: 2, scope: !9956)
!9999 = !DILocation(line: 643, column: 1, scope: !9956)
!10000 = !DILocation(line: 644, column: 2, scope: !9956)
!10001 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1329, file: !1329, line: 647, type: !1227, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10002)
!10002 = !{!10003, !10004, !10005, !10006}
!10003 = !DILocalVariable(name: "dev", arg: 1, scope: !10001, file: !1329, line: 647, type: !1187)
!10004 = !DILocalVariable(name: "callback", arg: 2, scope: !10001, file: !1329, line: 648, type: !1229)
!10005 = !DILocalVariable(name: "set", arg: 3, scope: !10001, file: !1329, line: 649, type: !145)
!10006 = !DILocalVariable(name: "data", scope: !10001, file: !1329, line: 651, type: !9964)
!10007 = !DILocation(line: 0, scope: !10001)
!10008 = !DILocation(line: 651, column: 38, scope: !10001)
!10009 = !DILocation(line: 653, column: 37, scope: !10001)
!10010 = !DILocation(line: 653, column: 9, scope: !10001)
!10011 = !DILocation(line: 653, column: 2, scope: !10001)
!10012 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10013, file: !10013, line: 38, type: !10014, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10017)
!10013 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10014 = !DISubroutineType(types: !10015)
!10015 = !{!107, !10016, !1229, !145}
!10016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!10017 = !{!10018, !10019, !10020}
!10018 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10012, file: !10013, line: 38, type: !10016)
!10019 = !DILocalVariable(name: "callback", arg: 2, scope: !10012, file: !10013, line: 39, type: !1229)
!10020 = !DILocalVariable(name: "set", arg: 3, scope: !10012, file: !10013, line: 40, type: !145)
!10021 = !DILocation(line: 0, scope: !10012)
!10022 = !DILocation(line: 42, column: 2, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10024, file: !10013, line: 42, column: 2)
!10024 = distinct !DILexicalBlock(scope: !10012, file: !10013, line: 42, column: 2)
!10025 = !DILocation(line: 42, column: 2, scope: !10024)
!10026 = !DILocation(line: 42, column: 2, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10023, file: !10013, line: 42, column: 2)
!10028 = !DILocation(line: 43, column: 2, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10030, file: !10013, line: 43, column: 2)
!10030 = distinct !DILexicalBlock(scope: !10012, file: !10013, line: 43, column: 2)
!10031 = !DILocation(line: 43, column: 2, scope: !10030)
!10032 = !DILocation(line: 43, column: 2, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10029, file: !10013, line: 43, column: 2)
!10034 = !DILocation(line: 45, column: 7, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10012, file: !10013, line: 45, column: 6)
!10036 = !DILocation(line: 45, column: 6, scope: !10012)
!10037 = !DILocation(line: 46, column: 56, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10039, file: !10013, line: 46, column: 7)
!10039 = distinct !DILexicalBlock(scope: !10035, file: !10013, line: 45, column: 38)
!10040 = !DILocation(line: 46, column: 8, scope: !10038)
!10041 = !DILocation(line: 46, column: 7, scope: !10039)
!10042 = !DILocation(line: 51, column: 13, scope: !10035)
!10043 = !DILocation(line: 56, column: 43, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10045, file: !10013, line: 55, column: 11)
!10045 = distinct !DILexicalBlock(scope: !10012, file: !10013, line: 55, column: 6)
!10046 = !DILocation(line: 56, column: 3, scope: !10044)
!10047 = !DILocation(line: 57, column: 2, scope: !10044)
!10048 = !DILocation(line: 60, column: 1, scope: !10012)
!10049 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1234, file: !1234, line: 261, type: !10050, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10052)
!10050 = !DISubroutineType(types: !10051)
!10051 = !{!145, !10016}
!10052 = !{!10053}
!10053 = !DILocalVariable(name: "list", arg: 1, scope: !10049, file: !1234, line: 261, type: !10016)
!10054 = !DILocation(line: 0, scope: !10049)
!10055 = !DILocation(line: 261, column: 1, scope: !10049)
!10056 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1234, file: !1234, line: 417, type: !10057, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10059)
!10057 = !DISubroutineType(types: !10058)
!10058 = !{!145, !10016, !1405}
!10059 = !{!10060, !10061, !10062, !10063}
!10060 = !DILocalVariable(name: "list", arg: 1, scope: !10056, file: !1234, line: 417, type: !10016)
!10061 = !DILocalVariable(name: "node", arg: 2, scope: !10056, file: !1234, line: 417, type: !1405)
!10062 = !DILocalVariable(name: "prev", scope: !10056, file: !1234, line: 417, type: !1405)
!10063 = !DILocalVariable(name: "test", scope: !10056, file: !1234, line: 417, type: !1405)
!10064 = !DILocation(line: 0, scope: !10056)
!10065 = !DILocation(line: 417, column: 1, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10056, file: !1234, line: 417, column: 1)
!10067 = !DILocation(line: 417, column: 1, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10066, file: !1234, line: 417, column: 1)
!10069 = !DILocation(line: 417, column: 1, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10071, file: !1234, line: 417, column: 1)
!10071 = distinct !DILexicalBlock(scope: !10068, file: !1234, line: 417, column: 1)
!10072 = !DILocation(line: 417, column: 1, scope: !10071)
!10073 = distinct !{!10073, !10065, !10065}
!10074 = !DILocation(line: 417, column: 1, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10070, file: !1234, line: 417, column: 1)
!10076 = !DILocation(line: 417, column: 1, scope: !10056)
!10077 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1234, file: !1234, line: 298, type: !10078, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10080)
!10078 = !DISubroutineType(types: !10079)
!10079 = !{null, !10016, !1405}
!10080 = !{!10081, !10082}
!10081 = !DILocalVariable(name: "list", arg: 1, scope: !10077, file: !1234, line: 298, type: !10016)
!10082 = !DILocalVariable(name: "node", arg: 2, scope: !10077, file: !1234, line: 298, type: !1405)
!10083 = !DILocation(line: 0, scope: !10077)
!10084 = !DILocation(line: 298, column: 1, scope: !10077)
!10085 = !DILocation(line: 298, column: 1, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10077, file: !1234, line: 298, column: 1)
!10087 = !DILocation(line: 298, column: 1, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10086, file: !1234, line: 298, column: 1)
!10089 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1234, file: !1234, line: 231, type: !10090, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10092)
!10090 = !DISubroutineType(types: !10091)
!10091 = !{!1405, !10016}
!10092 = !{!10093}
!10093 = !DILocalVariable(name: "list", arg: 1, scope: !10089, file: !1234, line: 231, type: !10016)
!10094 = !DILocation(line: 0, scope: !10089)
!10095 = !DILocation(line: 233, column: 15, scope: !10089)
!10096 = !DILocation(line: 233, column: 2, scope: !10089)
!10097 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1234, file: !1234, line: 209, type: !10098, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10100)
!10098 = !DISubroutineType(types: !10099)
!10099 = !{null, !1405, !1405}
!10100 = !{!10101, !10102}
!10101 = !DILocalVariable(name: "parent", arg: 1, scope: !10097, file: !1234, line: 209, type: !1405)
!10102 = !DILocalVariable(name: "child", arg: 2, scope: !10097, file: !1234, line: 209, type: !1405)
!10103 = !DILocation(line: 0, scope: !10097)
!10104 = !DILocation(line: 211, column: 10, scope: !10097)
!10105 = !DILocation(line: 211, column: 15, scope: !10097)
!10106 = !DILocation(line: 212, column: 1, scope: !10097)
!10107 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1234, file: !1234, line: 214, type: !10078, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10108)
!10108 = !{!10109, !10110}
!10109 = !DILocalVariable(name: "list", arg: 1, scope: !10107, file: !1234, line: 214, type: !10016)
!10110 = !DILocalVariable(name: "node", arg: 2, scope: !10107, file: !1234, line: 214, type: !1405)
!10111 = !DILocation(line: 0, scope: !10107)
!10112 = !DILocation(line: 216, column: 8, scope: !10107)
!10113 = !DILocation(line: 216, column: 13, scope: !10107)
!10114 = !DILocation(line: 217, column: 1, scope: !10107)
!10115 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1234, file: !1234, line: 243, type: !10090, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10116)
!10116 = !{!10117}
!10117 = !DILocalVariable(name: "list", arg: 1, scope: !10115, file: !1234, line: 243, type: !10016)
!10118 = !DILocation(line: 0, scope: !10115)
!10119 = !DILocation(line: 245, column: 15, scope: !10115)
!10120 = !DILocation(line: 245, column: 2, scope: !10115)
!10121 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1234, file: !1234, line: 219, type: !10078, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10122)
!10122 = !{!10123, !10124}
!10123 = !DILocalVariable(name: "list", arg: 1, scope: !10121, file: !1234, line: 219, type: !10016)
!10124 = !DILocalVariable(name: "node", arg: 2, scope: !10121, file: !1234, line: 219, type: !1405)
!10125 = !DILocation(line: 0, scope: !10121)
!10126 = !DILocation(line: 221, column: 8, scope: !10121)
!10127 = !DILocation(line: 221, column: 13, scope: !10121)
!10128 = !DILocation(line: 222, column: 1, scope: !10121)
!10129 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1234, file: !1234, line: 401, type: !10130, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10132)
!10130 = !DISubroutineType(types: !10131)
!10131 = !{null, !10016, !1405, !1405}
!10132 = !{!10133, !10134, !10135}
!10133 = !DILocalVariable(name: "list", arg: 1, scope: !10129, file: !1234, line: 401, type: !10016)
!10134 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10129, file: !1234, line: 401, type: !1405)
!10135 = !DILocalVariable(name: "node", arg: 3, scope: !10129, file: !1234, line: 401, type: !1405)
!10136 = !DILocation(line: 0, scope: !10129)
!10137 = !DILocation(line: 401, column: 1, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10129, file: !1234, line: 401, column: 1)
!10139 = !DILocation(line: 0, scope: !10138)
!10140 = !DILocation(line: 401, column: 1, scope: !10129)
!10141 = !DILocation(line: 401, column: 1, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10138, file: !1234, line: 401, column: 1)
!10143 = !DILocation(line: 401, column: 1, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10142, file: !1234, line: 401, column: 1)
!10145 = !DILocation(line: 401, column: 1, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10144, file: !1234, line: 401, column: 1)
!10147 = !DILocation(line: 401, column: 1, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10138, file: !1234, line: 401, column: 1)
!10149 = !DILocation(line: 401, column: 1, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10148, file: !1234, line: 401, column: 1)
!10151 = !DILocation(line: 401, column: 1, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10150, file: !1234, line: 401, column: 1)
!10153 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1234, file: !1234, line: 285, type: !10154, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10156)
!10154 = !DISubroutineType(types: !10155)
!10155 = !{!1405, !1405}
!10156 = !{!10157}
!10157 = !DILocalVariable(name: "node", arg: 1, scope: !10153, file: !1234, line: 285, type: !1405)
!10158 = !DILocation(line: 0, scope: !10153)
!10159 = !DILocation(line: 285, column: 1, scope: !10153)
!10160 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1234, file: !1234, line: 274, type: !10154, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10161)
!10161 = !{!10162}
!10162 = !DILocalVariable(name: "node", arg: 1, scope: !10160, file: !1234, line: 274, type: !1405)
!10163 = !DILocation(line: 0, scope: !10160)
!10164 = !DILocation(line: 274, column: 1, scope: !10160)
!10165 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1234, file: !1234, line: 204, type: !10154, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10166)
!10166 = !{!10167}
!10167 = !DILocalVariable(name: "node", arg: 1, scope: !10165, file: !1234, line: 204, type: !1405)
!10168 = !DILocation(line: 0, scope: !10165)
!10169 = !DILocation(line: 206, column: 15, scope: !10165)
!10170 = !DILocation(line: 206, column: 2, scope: !10165)
!10171 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1329, file: !1329, line: 342, type: !214, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10172)
!10172 = !{!10173, !10174, !10175}
!10173 = !DILocalVariable(name: "pin", arg: 1, scope: !10171, file: !1329, line: 342, type: !107)
!10174 = !DILocalVariable(name: "line", scope: !10171, file: !1329, line: 344, type: !152)
!10175 = !DILocalVariable(name: "port", scope: !10171, file: !1329, line: 345, type: !107)
!10176 = !DILocation(line: 0, scope: !10171)
!10177 = !DILocation(line: 344, column: 18, scope: !10171)
!10178 = !{i32 983040, i32 0}
!10179 = !DILocation(line: 356, column: 9, scope: !10171)
!10180 = !DILocation(line: 370, column: 2, scope: !10171)
!10181 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1329, file: !1329, line: 37, type: !878, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10182)
!10182 = !{!10183, !10184, !10185}
!10183 = !DILocalVariable(name: "line", arg: 1, scope: !10181, file: !1329, line: 37, type: !107)
!10184 = !DILocalVariable(name: "arg", arg: 2, scope: !10181, file: !1329, line: 37, type: !106)
!10185 = !DILocalVariable(name: "data", scope: !10181, file: !1329, line: 39, type: !9964)
!10186 = !DILocation(line: 0, scope: !10181)
!10187 = !DILocation(line: 41, column: 29, scope: !10181)
!10188 = !DILocation(line: 41, column: 39, scope: !10181)
!10189 = !DILocation(line: 41, column: 44, scope: !10181)
!10190 = !DILocation(line: 41, column: 2, scope: !10181)
!10191 = !DILocation(line: 42, column: 1, scope: !10181)
!10192 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1329, file: !1329, line: 376, type: !10193, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10195)
!10193 = !DISubroutineType(types: !10194)
!10194 = !{!107, !107, !107}
!10195 = !{!10196, !10197, !10198, !10200, !10201}
!10196 = !DILocalVariable(name: "port", arg: 1, scope: !10192, file: !1329, line: 376, type: !107)
!10197 = !DILocalVariable(name: "pin", arg: 2, scope: !10192, file: !1329, line: 376, type: !107)
!10198 = !DILocalVariable(name: "clk", scope: !10192, file: !1329, line: 386, type: !10199)
!10199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1187)
!10200 = !DILocalVariable(name: "pclken", scope: !10192, file: !1329, line: 387, type: !1448)
!10201 = !DILocalVariable(name: "ret", scope: !10192, file: !1329, line: 396, type: !107)
!10202 = !DILocation(line: 0, scope: !10192)
!10203 = !DILocation(line: 387, column: 2, scope: !10192)
!10204 = !DILocation(line: 387, column: 22, scope: !10192)
!10205 = !DILocation(line: 399, column: 8, scope: !10192)
!10206 = !DILocation(line: 400, column: 10, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10192, file: !1329, line: 400, column: 6)
!10208 = !DILocation(line: 400, column: 6, scope: !10192)
!10209 = !DILocation(line: 405, column: 2, scope: !10192)
!10210 = !DILocation(line: 407, column: 2, scope: !10192)
!10211 = !DILocation(line: 408, column: 1, scope: !10192)
!10212 = distinct !DISubprogram(name: "clock_control_on", scope: !965, file: !965, line: 123, type: !1294, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10213)
!10213 = !{!10214, !10215, !10216}
!10214 = !DILocalVariable(name: "dev", arg: 1, scope: !10212, file: !965, line: 123, type: !1187)
!10215 = !DILocalVariable(name: "sys", arg: 2, scope: !10212, file: !965, line: 124, type: !1058)
!10216 = !DILocalVariable(name: "api", scope: !10212, file: !965, line: 126, type: !1287)
!10217 = !DILocation(line: 0, scope: !10212)
!10218 = !DILocation(line: 127, column: 49, scope: !10212)
!10219 = !DILocation(line: 129, column: 14, scope: !10212)
!10220 = !DILocation(line: 129, column: 9, scope: !10212)
!10221 = !DILocation(line: 129, column: 2, scope: !10212)
!10222 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1329, file: !1329, line: 311, type: !9328, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10223)
!10223 = !{!10224, !10225, !10226}
!10224 = !DILocalVariable(name: "port", arg: 1, scope: !10222, file: !1329, line: 311, type: !107)
!10225 = !DILocalVariable(name: "pin", arg: 2, scope: !10222, file: !1329, line: 311, type: !107)
!10226 = !DILocalVariable(name: "line", scope: !10222, file: !1329, line: 313, type: !152)
!10227 = !DILocation(line: 0, scope: !10222)
!10228 = !DILocation(line: 313, column: 18, scope: !10222)
!10229 = !DILocation(line: 337, column: 2, scope: !10222)
!10230 = !DILocation(line: 340, column: 1, scope: !10222)
!10231 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1329, file: !1329, line: 295, type: !10232, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10234)
!10232 = !DISubroutineType(types: !10233)
!10233 = !{!152, !107}
!10234 = !{!10235}
!10235 = !DILocalVariable(name: "pin", arg: 1, scope: !10231, file: !1329, line: 295, type: !107)
!10236 = !DILocation(line: 0, scope: !10231)
!10237 = !DILocation(line: 307, column: 46, scope: !10231)
!10238 = !DILocation(line: 307, column: 27, scope: !10231)
!10239 = !DILocation(line: 307, column: 32, scope: !10231)
!10240 = !DILocation(line: 307, column: 14, scope: !10231)
!10241 = !DILocation(line: 307, column: 39, scope: !10231)
!10242 = !DILocation(line: 307, column: 2, scope: !10231)
!10243 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5959, file: !5959, line: 671, type: !10244, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10246)
!10244 = !DISubroutineType(types: !10245)
!10245 = !{null, !152, !152}
!10246 = !{!10247, !10248}
!10247 = !DILocalVariable(name: "Port", arg: 1, scope: !10243, file: !5959, line: 671, type: !152)
!10248 = !DILocalVariable(name: "Line", arg: 2, scope: !10243, file: !5959, line: 671, type: !152)
!10249 = !DILocation(line: 0, scope: !10243)
!10250 = !DILocation(line: 673, column: 3, scope: !10243)
!10251 = !DILocalVariable(name: "value", arg: 1, scope: !10252, file: !6257, line: 373, type: !152)
!10252 = distinct !DISubprogram(name: "__RBIT", scope: !6257, file: !6257, line: 373, type: !7544, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10253)
!10253 = !{!10251, !10254}
!10254 = !DILocalVariable(name: "result", scope: !10252, file: !6257, line: 375, type: !152)
!10255 = !DILocation(line: 0, scope: !10252, inlinedAt: !10256)
!10256 = distinct !DILocation(line: 673, column: 3, scope: !10243)
!10257 = !DILocation(line: 380, column: 4, scope: !10252, inlinedAt: !10256)
!10258 = !{i64 3504486}
!10259 = !DILocalVariable(name: "value", arg: 1, scope: !10260, file: !6257, line: 403, type: !152)
!10260 = distinct !DISubprogram(name: "__CLZ", scope: !6257, file: !6257, line: 403, type: !10261, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10263)
!10261 = !DISubroutineType(types: !10262)
!10262 = !{!195, !152}
!10263 = !{!10259}
!10264 = !DILocation(line: 0, scope: !10260, inlinedAt: !10265)
!10265 = distinct !DILocation(line: 673, column: 3, scope: !10243)
!10266 = !DILocation(line: 414, column: 7, scope: !10260, inlinedAt: !10265)
!10267 = !DILocation(line: 674, column: 1, scope: !10243)
!10268 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10013, file: !10013, line: 69, type: !10269, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10271)
!10269 = !DISubroutineType(types: !10270)
!10270 = !{null, !10016, !1187, !152}
!10271 = !{!10272, !10273, !10274, !10275, !10276}
!10272 = !DILocalVariable(name: "list", arg: 1, scope: !10268, file: !10013, line: 69, type: !10016)
!10273 = !DILocalVariable(name: "port", arg: 2, scope: !10268, file: !10013, line: 70, type: !1187)
!10274 = !DILocalVariable(name: "pins", arg: 3, scope: !10268, file: !10013, line: 71, type: !152)
!10275 = !DILocalVariable(name: "cb", scope: !10268, file: !10013, line: 73, type: !1229)
!10276 = !DILocalVariable(name: "tmp", scope: !10268, file: !10013, line: 73, type: !1229)
!10277 = !DILocation(line: 0, scope: !10268)
!10278 = !DILocation(line: 75, column: 2, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10268, file: !10013, line: 75, column: 2)
!10280 = !DILocation(line: 0, scope: !10279)
!10281 = !DILocation(line: 76, column: 11, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10283, file: !10013, line: 76, column: 7)
!10283 = distinct !DILexicalBlock(scope: !10284, file: !10013, line: 75, column: 57)
!10284 = distinct !DILexicalBlock(scope: !10279, file: !10013, line: 75, column: 2)
!10285 = !DILocation(line: 76, column: 20, scope: !10282)
!10286 = !DILocation(line: 76, column: 7, scope: !10283)
!10287 = !DILocation(line: 77, column: 4, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10289, file: !10013, line: 77, column: 4)
!10289 = distinct !DILexicalBlock(scope: !10290, file: !10013, line: 77, column: 4)
!10290 = distinct !DILexicalBlock(scope: !10282, file: !10013, line: 76, column: 28)
!10291 = !DILocation(line: 77, column: 4, scope: !10289)
!10292 = !DILocation(line: 77, column: 4, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10288, file: !10013, line: 77, column: 4)
!10294 = !DILocation(line: 78, column: 4, scope: !10290)
!10295 = !DILocation(line: 79, column: 3, scope: !10290)
!10296 = !DILocation(line: 75, column: 2, scope: !10284)
!10297 = !DILocation(line: 81, column: 1, scope: !10268)
!10298 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5959, file: !5959, line: 710, type: !7544, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10299)
!10299 = !{!10300}
!10300 = !DILocalVariable(name: "Line", arg: 1, scope: !10298, file: !5959, line: 710, type: !152)
!10301 = !DILocation(line: 0, scope: !10298)
!10302 = !DILocation(line: 712, column: 21, scope: !10298)
!10303 = !DILocation(line: 0, scope: !10252, inlinedAt: !10304)
!10304 = distinct !DILocation(line: 712, column: 76, scope: !10298)
!10305 = !DILocation(line: 380, column: 4, scope: !10252, inlinedAt: !10304)
!10306 = !DILocation(line: 0, scope: !10260, inlinedAt: !10307)
!10307 = distinct !DILocation(line: 712, column: 76, scope: !10298)
!10308 = !DILocation(line: 414, column: 7, scope: !10260, inlinedAt: !10307)
!10309 = !DILocation(line: 712, column: 73, scope: !10298)
!10310 = !DILocation(line: 712, column: 3, scope: !10298)
!10311 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10312, file: !10312, line: 910, type: !10313, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10315)
!10312 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10313 = !DISubroutineType(types: !10314)
!10314 = !{null, !1260, !152}
!10315 = !{!10316, !10317}
!10316 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10311, file: !10312, line: 910, type: !1260)
!10317 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10311, file: !10312, line: 910, type: !152)
!10318 = !DILocation(line: 0, scope: !10311)
!10319 = !DILocation(line: 912, column: 3, scope: !10311)
!10320 = !DILocation(line: 913, column: 1, scope: !10311)
!10321 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10312, file: !10312, line: 823, type: !10322, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10324)
!10322 = !DISubroutineType(types: !10323)
!10323 = !{!152, !1260}
!10324 = !{!10325}
!10325 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10321, file: !10312, line: 823, type: !1260)
!10326 = !DILocation(line: 0, scope: !10321)
!10327 = !DILocation(line: 825, column: 21, scope: !10321)
!10328 = !DILocation(line: 825, column: 3, scope: !10321)
!10329 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10312, file: !10312, line: 812, type: !10313, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10330)
!10330 = !{!10331, !10332}
!10331 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10329, file: !10312, line: 812, type: !1260)
!10332 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10329, file: !10312, line: 812, type: !152)
!10333 = !DILocation(line: 0, scope: !10329)
!10334 = !DILocation(line: 814, column: 3, scope: !10329)
!10335 = !DILocation(line: 815, column: 1, scope: !10329)
!10336 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10312, file: !10312, line: 771, type: !10322, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10337)
!10337 = !{!10338}
!10338 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10336, file: !10312, line: 771, type: !1260)
!10339 = !DILocation(line: 0, scope: !10336)
!10340 = !DILocation(line: 773, column: 21, scope: !10336)
!10341 = !DILocation(line: 773, column: 3, scope: !10336)
!10342 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1329, file: !1329, line: 47, type: !10343, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10345)
!10343 = !DISubroutineType(types: !10344)
!10344 = !{!107, !1203, !187}
!10345 = !{!10346, !10347}
!10346 = !DILocalVariable(name: "flags", arg: 1, scope: !10342, file: !1329, line: 47, type: !1203)
!10347 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10342, file: !1329, line: 47, type: !187)
!10348 = !DILocation(line: 0, scope: !10342)
!10349 = !DILocation(line: 50, column: 13, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10342, file: !1329, line: 50, column: 6)
!10351 = !DILocation(line: 50, column: 28, scope: !10350)
!10352 = !DILocation(line: 50, column: 6, scope: !10342)
!10353 = !DILocation(line: 53, column: 11, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10350, file: !1329, line: 50, column: 34)
!10355 = !DILocation(line: 55, column: 14, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10354, file: !1329, line: 55, column: 7)
!10357 = !DILocation(line: 55, column: 35, scope: !10356)
!10358 = !DILocation(line: 55, column: 7, scope: !10354)
!10359 = !DILocation(line: 56, column: 14, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10361, file: !1329, line: 56, column: 8)
!10361 = distinct !DILexicalBlock(scope: !10356, file: !1329, line: 55, column: 41)
!10362 = !DILocation(line: 56, column: 8, scope: !10361)
!10363 = !DILocation(line: 0, scope: !10356)
!10364 = !DILocation(line: 66, column: 14, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10354, file: !1329, line: 66, column: 7)
!10366 = !DILocation(line: 66, column: 30, scope: !10365)
!10367 = !DILocation(line: 66, column: 7, scope: !10354)
!10368 = !DILocation(line: 67, column: 12, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10365, file: !1329, line: 66, column: 36)
!10370 = !DILocation(line: 68, column: 3, scope: !10369)
!10371 = !DILocation(line: 68, column: 21, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10365, file: !1329, line: 68, column: 14)
!10373 = !DILocation(line: 68, column: 39, scope: !10372)
!10374 = !DILocation(line: 68, column: 14, scope: !10365)
!10375 = !DILocation(line: 69, column: 12, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10372, file: !1329, line: 68, column: 45)
!10377 = !DILocation(line: 70, column: 3, scope: !10376)
!10378 = !DILocation(line: 72, column: 21, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10350, file: !1329, line: 72, column: 14)
!10380 = !DILocation(line: 72, column: 35, scope: !10379)
!10381 = !DILocation(line: 72, column: 14, scope: !10350)
!10382 = !DILocation(line: 77, column: 14, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10384, file: !1329, line: 77, column: 7)
!10384 = distinct !DILexicalBlock(scope: !10379, file: !1329, line: 72, column: 41)
!10385 = !DILocation(line: 77, column: 30, scope: !10383)
!10386 = !DILocation(line: 77, column: 7, scope: !10384)
!10387 = !DILocation(line: 0, scope: !10350)
!10388 = !DILocation(line: 90, column: 1, scope: !10342)
!10389 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1329, file: !1329, line: 157, type: !10390, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10392)
!10390 = !DISubroutineType(types: !10391)
!10391 = !{null, !1187, !107, !107, !107}
!10392 = !{!10393, !10394, !10395, !10396, !10397, !10398, !10399, !10400, !10401, !10402, !10403}
!10393 = !DILocalVariable(name: "dev", arg: 1, scope: !10389, file: !1329, line: 157, type: !1187)
!10394 = !DILocalVariable(name: "pin", arg: 2, scope: !10389, file: !1329, line: 157, type: !107)
!10395 = !DILocalVariable(name: "conf", arg: 3, scope: !10389, file: !1329, line: 158, type: !107)
!10396 = !DILocalVariable(name: "func", arg: 4, scope: !10389, file: !1329, line: 158, type: !107)
!10397 = !DILocalVariable(name: "cfg", scope: !10389, file: !1329, line: 160, type: !9897)
!10398 = !DILocalVariable(name: "gpio", scope: !10389, file: !1329, line: 161, type: !1260)
!10399 = !DILocalVariable(name: "pin_ll", scope: !10389, file: !1329, line: 163, type: !107)
!10400 = !DILocalVariable(name: "mode", scope: !10389, file: !1329, line: 227, type: !32)
!10401 = !DILocalVariable(name: "otype", scope: !10389, file: !1329, line: 227, type: !32)
!10402 = !DILocalVariable(name: "ospeed", scope: !10389, file: !1329, line: 227, type: !32)
!10403 = !DILocalVariable(name: "pupd", scope: !10389, file: !1329, line: 227, type: !32)
!10404 = !DILocation(line: 0, scope: !10389)
!10405 = !DILocation(line: 160, column: 45, scope: !10389)
!10406 = !DILocation(line: 161, column: 44, scope: !10389)
!10407 = !DILocation(line: 163, column: 15, scope: !10389)
!10408 = !DILocation(line: 229, column: 14, scope: !10389)
!10409 = !DILocation(line: 246, column: 47, scope: !10389)
!10410 = !DILocation(line: 246, column: 2, scope: !10389)
!10411 = !DILocation(line: 248, column: 43, scope: !10389)
!10412 = !DILocation(line: 248, column: 2, scope: !10389)
!10413 = !DILocation(line: 250, column: 40, scope: !10389)
!10414 = !DILocation(line: 250, column: 2, scope: !10389)
!10415 = !DILocation(line: 252, column: 11, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10389, file: !1329, line: 252, column: 6)
!10417 = !DILocation(line: 252, column: 6, scope: !10389)
!10418 = !DILocation(line: 253, column: 11, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10420, file: !1329, line: 253, column: 7)
!10420 = distinct !DILexicalBlock(scope: !10416, file: !1329, line: 252, column: 36)
!10421 = !DILocation(line: 253, column: 7, scope: !10420)
!10422 = !DILocation(line: 254, column: 4, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10419, file: !1329, line: 253, column: 16)
!10424 = !DILocation(line: 255, column: 3, scope: !10423)
!10425 = !DILocation(line: 256, column: 4, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10419, file: !1329, line: 255, column: 10)
!10427 = !DILocation(line: 260, column: 40, scope: !10389)
!10428 = !DILocation(line: 260, column: 2, scope: !10389)
!10429 = !DILocation(line: 265, column: 1, scope: !10389)
!10430 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1329, file: !1329, line: 137, type: !10232, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10431)
!10431 = !{!10432, !10433}
!10432 = !DILocalVariable(name: "pin", arg: 1, scope: !10430, file: !1329, line: 137, type: !107)
!10433 = !DILocalVariable(name: "pinval", scope: !10430, file: !1329, line: 139, type: !152)
!10434 = !DILocation(line: 0, scope: !10430)
!10435 = !DILocation(line: 149, column: 13, scope: !10430)
!10436 = !DILocation(line: 151, column: 2, scope: !10430)
!10437 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10312, file: !10312, line: 342, type: !10438, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10440)
!10438 = !DISubroutineType(types: !10439)
!10439 = !{null, !1260, !152, !152}
!10440 = !{!10441, !10442, !10443}
!10441 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10437, file: !10312, line: 342, type: !1260)
!10442 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10437, file: !10312, line: 342, type: !152)
!10443 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10437, file: !10312, line: 342, type: !152)
!10444 = !DILocation(line: 0, scope: !10437)
!10445 = !DILocation(line: 344, column: 3, scope: !10437)
!10446 = !DILocation(line: 345, column: 1, scope: !10437)
!10447 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10312, file: !10312, line: 413, type: !10438, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10448)
!10448 = !{!10449, !10450, !10451}
!10449 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10447, file: !10312, line: 413, type: !1260)
!10450 = !DILocalVariable(name: "Pin", arg: 2, scope: !10447, file: !10312, line: 413, type: !152)
!10451 = !DILocalVariable(name: "Speed", arg: 3, scope: !10447, file: !10312, line: 413, type: !152)
!10452 = !DILocation(line: 0, scope: !10447)
!10453 = !DILocation(line: 415, column: 3, scope: !10447)
!10454 = !DILocation(line: 0, scope: !10252, inlinedAt: !10455)
!10455 = distinct !DILocation(line: 415, column: 3, scope: !10447)
!10456 = !DILocation(line: 380, column: 4, scope: !10252, inlinedAt: !10455)
!10457 = !DILocation(line: 0, scope: !10260, inlinedAt: !10458)
!10458 = distinct !DILocation(line: 415, column: 3, scope: !10447)
!10459 = !DILocation(line: 414, column: 7, scope: !10260, inlinedAt: !10458)
!10460 = !DILocation(line: 0, scope: !10252, inlinedAt: !10461)
!10461 = distinct !DILocation(line: 415, column: 3, scope: !10447)
!10462 = !DILocation(line: 0, scope: !10260, inlinedAt: !10463)
!10463 = distinct !DILocation(line: 415, column: 3, scope: !10447)
!10464 = !DILocation(line: 417, column: 1, scope: !10447)
!10465 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10312, file: !10312, line: 484, type: !10438, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10466)
!10466 = !{!10467, !10468, !10469}
!10467 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10465, file: !10312, line: 484, type: !1260)
!10468 = !DILocalVariable(name: "Pin", arg: 2, scope: !10465, file: !10312, line: 484, type: !152)
!10469 = !DILocalVariable(name: "Pull", arg: 3, scope: !10465, file: !10312, line: 484, type: !152)
!10470 = !DILocation(line: 0, scope: !10465)
!10471 = !DILocation(line: 486, column: 3, scope: !10465)
!10472 = !DILocation(line: 0, scope: !10252, inlinedAt: !10473)
!10473 = distinct !DILocation(line: 486, column: 3, scope: !10465)
!10474 = !DILocation(line: 380, column: 4, scope: !10252, inlinedAt: !10473)
!10475 = !DILocation(line: 0, scope: !10260, inlinedAt: !10476)
!10476 = distinct !DILocation(line: 486, column: 3, scope: !10465)
!10477 = !DILocation(line: 414, column: 7, scope: !10260, inlinedAt: !10476)
!10478 = !DILocation(line: 0, scope: !10252, inlinedAt: !10479)
!10479 = distinct !DILocation(line: 486, column: 3, scope: !10465)
!10480 = !DILocation(line: 0, scope: !10260, inlinedAt: !10481)
!10481 = distinct !DILocation(line: 486, column: 3, scope: !10465)
!10482 = !DILocation(line: 487, column: 1, scope: !10465)
!10483 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10312, file: !10312, line: 556, type: !10438, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10484)
!10484 = !{!10485, !10486, !10487}
!10485 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10483, file: !10312, line: 556, type: !1260)
!10486 = !DILocalVariable(name: "Pin", arg: 2, scope: !10483, file: !10312, line: 556, type: !152)
!10487 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10483, file: !10312, line: 556, type: !152)
!10488 = !DILocation(line: 0, scope: !10483)
!10489 = !DILocation(line: 558, column: 3, scope: !10483)
!10490 = !DILocation(line: 0, scope: !10252, inlinedAt: !10491)
!10491 = distinct !DILocation(line: 558, column: 3, scope: !10483)
!10492 = !DILocation(line: 380, column: 4, scope: !10252, inlinedAt: !10491)
!10493 = !DILocation(line: 0, scope: !10260, inlinedAt: !10494)
!10494 = distinct !DILocation(line: 558, column: 3, scope: !10483)
!10495 = !DILocation(line: 414, column: 7, scope: !10260, inlinedAt: !10494)
!10496 = !DILocation(line: 0, scope: !10252, inlinedAt: !10497)
!10497 = distinct !DILocation(line: 558, column: 3, scope: !10483)
!10498 = !DILocation(line: 0, scope: !10260, inlinedAt: !10499)
!10499 = distinct !DILocation(line: 558, column: 3, scope: !10483)
!10500 = !DILocation(line: 560, column: 1, scope: !10483)
!10501 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10312, file: !10312, line: 633, type: !10438, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10502)
!10502 = !{!10503, !10504, !10505}
!10503 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10501, file: !10312, line: 633, type: !1260)
!10504 = !DILocalVariable(name: "Pin", arg: 2, scope: !10501, file: !10312, line: 633, type: !152)
!10505 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10501, file: !10312, line: 633, type: !152)
!10506 = !DILocation(line: 0, scope: !10501)
!10507 = !DILocation(line: 635, column: 3, scope: !10501)
!10508 = !DILocation(line: 0, scope: !10252, inlinedAt: !10509)
!10509 = distinct !DILocation(line: 635, column: 3, scope: !10501)
!10510 = !DILocation(line: 380, column: 4, scope: !10252, inlinedAt: !10509)
!10511 = !DILocation(line: 0, scope: !10260, inlinedAt: !10512)
!10512 = distinct !DILocation(line: 635, column: 3, scope: !10501)
!10513 = !DILocation(line: 414, column: 7, scope: !10260, inlinedAt: !10512)
!10514 = !DILocation(line: 0, scope: !10252, inlinedAt: !10515)
!10515 = distinct !DILocation(line: 635, column: 3, scope: !10501)
!10516 = !DILocation(line: 0, scope: !10260, inlinedAt: !10517)
!10517 = distinct !DILocation(line: 635, column: 3, scope: !10501)
!10518 = !DILocation(line: 637, column: 1, scope: !10501)
!10519 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10312, file: !10312, line: 273, type: !10438, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10520)
!10520 = !{!10521, !10522, !10523}
!10521 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10519, file: !10312, line: 273, type: !1260)
!10522 = !DILocalVariable(name: "Pin", arg: 2, scope: !10519, file: !10312, line: 273, type: !152)
!10523 = !DILocalVariable(name: "Mode", arg: 3, scope: !10519, file: !10312, line: 273, type: !152)
!10524 = !DILocation(line: 0, scope: !10519)
!10525 = !DILocation(line: 275, column: 3, scope: !10519)
!10526 = !DILocation(line: 0, scope: !10252, inlinedAt: !10527)
!10527 = distinct !DILocation(line: 275, column: 3, scope: !10519)
!10528 = !DILocation(line: 380, column: 4, scope: !10252, inlinedAt: !10527)
!10529 = !DILocation(line: 0, scope: !10260, inlinedAt: !10530)
!10530 = distinct !DILocation(line: 275, column: 3, scope: !10519)
!10531 = !DILocation(line: 414, column: 7, scope: !10260, inlinedAt: !10530)
!10532 = !DILocation(line: 0, scope: !10252, inlinedAt: !10533)
!10533 = distinct !DILocation(line: 275, column: 3, scope: !10519)
!10534 = !DILocation(line: 0, scope: !10260, inlinedAt: !10535)
!10535 = distinct !DILocation(line: 275, column: 3, scope: !10519)
!10536 = !DILocation(line: 276, column: 1, scope: !10519)
!10537 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1329, file: !1329, line: 698, type: !1342, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10538)
!10538 = !{!10539, !10540, !10541}
!10539 = !DILocalVariable(name: "dev", arg: 1, scope: !10537, file: !1329, line: 698, type: !1187)
!10540 = !DILocalVariable(name: "data", scope: !10537, file: !1329, line: 700, type: !9964)
!10541 = !DILocalVariable(name: "ret", scope: !10537, file: !1329, line: 701, type: !107)
!10542 = !DILocation(line: 0, scope: !10537)
!10543 = !DILocation(line: 700, column: 38, scope: !10537)
!10544 = !DILocation(line: 703, column: 8, scope: !10537)
!10545 = !DILocation(line: 703, column: 12, scope: !10537)
!10546 = !DILocation(line: 705, column: 7, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10537, file: !1329, line: 705, column: 6)
!10548 = !DILocation(line: 705, column: 6, scope: !10537)
!10549 = !DILocation(line: 722, column: 8, scope: !10537)
!10550 = !DILocation(line: 723, column: 10, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10537, file: !1329, line: 723, column: 6)
!10552 = !DILocation(line: 723, column: 6, scope: !10537)
!10553 = !DILocation(line: 731, column: 1, scope: !10537)
!10554 = distinct !DISubprogram(name: "device_is_ready", scope: !9742, file: !9742, line: 47, type: !10555, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10557)
!10555 = !DISubroutineType(types: !10556)
!10556 = !{!145, !1187}
!10557 = !{!10558}
!10558 = !DILocalVariable(name: "dev", arg: 1, scope: !10554, file: !9742, line: 47, type: !1187)
!10559 = !DILocation(line: 0, scope: !10554)
!10560 = !DILocation(line: 55, column: 2, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10554, file: !9742, line: 55, column: 2)
!10562 = !{i64 2154954950}
!10563 = !DILocation(line: 56, column: 9, scope: !10554)
!10564 = !DILocation(line: 56, column: 2, scope: !10554)
!10565 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1329, file: !1329, line: 270, type: !10566, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10568)
!10566 = !DISubroutineType(types: !10567)
!10567 = !{!107, !1187, !145}
!10568 = !{!10569, !10570, !10571, !10572, !10573}
!10569 = !DILocalVariable(name: "dev", arg: 1, scope: !10565, file: !1329, line: 270, type: !1187)
!10570 = !DILocalVariable(name: "on", arg: 2, scope: !10565, file: !1329, line: 270, type: !145)
!10571 = !DILocalVariable(name: "cfg", scope: !10565, file: !1329, line: 272, type: !9897)
!10572 = !DILocalVariable(name: "ret", scope: !10565, file: !1329, line: 273, type: !107)
!10573 = !DILocalVariable(name: "clk", scope: !10565, file: !1329, line: 278, type: !10199)
!10574 = !DILocation(line: 0, scope: !10565)
!10575 = !DILocation(line: 272, column: 45, scope: !10565)
!10576 = !DILocation(line: 282, column: 38, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10578, file: !1329, line: 280, column: 10)
!10578 = distinct !DILexicalBlock(scope: !10565, file: !1329, line: 280, column: 6)
!10579 = !DILocation(line: 282, column: 6, scope: !10577)
!10580 = !DILocation(line: 281, column: 9, scope: !10577)
!10581 = !DILocation(line: 293, column: 1, scope: !10565)
!10582 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !10555, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10583)
!10583 = !{!10584}
!10584 = !DILocalVariable(name: "dev", arg: 1, scope: !10582, file: !247, line: 730, type: !1187)
!10585 = !DILocation(line: 0, scope: !10582)
!10586 = !DILocation(line: 732, column: 9, scope: !10582)
!10587 = !DILocation(line: 732, column: 2, scope: !10582)
!10588 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1329, file: !1329, line: 496, type: !10589, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10591)
!10589 = !DISubroutineType(types: !10590)
!10590 = !{!107, !1187, !107, !107, !107}
!10591 = !{!10592, !10593, !10594, !10595, !10596, !10597}
!10592 = !DILocalVariable(name: "dev", arg: 1, scope: !10588, file: !1329, line: 496, type: !1187)
!10593 = !DILocalVariable(name: "pin", arg: 2, scope: !10588, file: !1329, line: 496, type: !107)
!10594 = !DILocalVariable(name: "conf", arg: 3, scope: !10588, file: !1329, line: 496, type: !107)
!10595 = !DILocalVariable(name: "func", arg: 4, scope: !10588, file: !1329, line: 496, type: !107)
!10596 = !DILocalVariable(name: "ret", scope: !10588, file: !1329, line: 498, type: !107)
!10597 = !DILocalVariable(name: "gpio_out", scope: !10598, file: !1329, line: 508, type: !152)
!10598 = distinct !DILexicalBlock(scope: !10599, file: !1329, line: 507, column: 27)
!10599 = distinct !DILexicalBlock(scope: !10588, file: !1329, line: 507, column: 6)
!10600 = !DILocation(line: 0, scope: !10588)
!10601 = !DILocation(line: 505, column: 2, scope: !10588)
!10602 = !DILocation(line: 507, column: 11, scope: !10599)
!10603 = !DILocation(line: 507, column: 6, scope: !10588)
!10604 = !DILocation(line: 508, column: 28, scope: !10598)
!10605 = !DILocation(line: 0, scope: !10598)
!10606 = !DILocation(line: 510, column: 16, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10598, file: !1329, line: 510, column: 7)
!10608 = !DILocation(line: 0, scope: !10607)
!10609 = !DILocation(line: 510, column: 7, scope: !10598)
!10610 = !DILocation(line: 511, column: 4, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10607, file: !1329, line: 510, column: 32)
!10612 = !DILocation(line: 512, column: 3, scope: !10611)
!10613 = !DILocation(line: 513, column: 4, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10615, file: !1329, line: 512, column: 39)
!10615 = distinct !DILexicalBlock(scope: !10607, file: !1329, line: 512, column: 14)
!10616 = !DILocation(line: 514, column: 3, scope: !10614)
!10617 = !DILocation(line: 518, column: 1, scope: !10588)
!10618 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1605, file: !1605, line: 526, type: !1508, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10619)
!10619 = !{!10620, !10621, !10622}
!10620 = !DILocalVariable(name: "dev", arg: 1, scope: !10618, file: !1605, line: 526, type: !1510)
!10621 = !DILocalVariable(name: "c", arg: 2, scope: !10618, file: !1605, line: 526, type: !1119)
!10622 = !DILocalVariable(name: "config", scope: !10618, file: !1605, line: 528, type: !10623)
!10623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 32)
!10624 = !DILocation(line: 0, scope: !10618)
!10625 = !DILocation(line: 528, column: 48, scope: !10618)
!10626 = !DILocation(line: 531, column: 40, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10618, file: !1605, line: 531, column: 6)
!10628 = !DILocation(line: 531, column: 6, scope: !10627)
!10629 = !DILocation(line: 531, column: 6, scope: !10618)
!10630 = !DILocation(line: 532, column: 34, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10627, file: !1605, line: 531, column: 48)
!10632 = !DILocation(line: 532, column: 3, scope: !10631)
!10633 = !DILocation(line: 533, column: 2, scope: !10631)
!10634 = !DILocation(line: 539, column: 42, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10618, file: !1605, line: 539, column: 6)
!10636 = !DILocation(line: 539, column: 7, scope: !10635)
!10637 = !DILocation(line: 539, column: 6, scope: !10618)
!10638 = !DILocation(line: 543, column: 52, scope: !10618)
!10639 = !DILocation(line: 543, column: 22, scope: !10618)
!10640 = !DILocation(line: 543, column: 5, scope: !10618)
!10641 = !DILocation(line: 545, column: 2, scope: !10618)
!10642 = !DILocation(line: 546, column: 1, scope: !10618)
!10643 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1605, file: !1605, line: 548, type: !1527, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10644)
!10644 = !{!10645, !10646, !10647, !10648}
!10645 = !DILocalVariable(name: "dev", arg: 1, scope: !10643, file: !1605, line: 548, type: !1510)
!10646 = !DILocalVariable(name: "c", arg: 2, scope: !10643, file: !1605, line: 549, type: !196)
!10647 = !DILocalVariable(name: "config", scope: !10643, file: !1605, line: 551, type: !10623)
!10648 = !DILocalVariable(name: "key", scope: !10643, file: !1605, line: 555, type: !32)
!10649 = !DILocation(line: 0, scope: !10643)
!10650 = !DILocation(line: 551, column: 48, scope: !10643)
!10651 = !DILocation(line: 562, column: 2, scope: !10643)
!10652 = !DILocation(line: 563, column: 41, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10654, file: !1605, line: 563, column: 7)
!10654 = distinct !DILexicalBlock(scope: !10643, file: !1605, line: 562, column: 12)
!10655 = !DILocation(line: 563, column: 7, scope: !10653)
!10656 = !DILocation(line: 563, column: 7, scope: !10654)
!10657 = !DILocation(line: 55, column: 2, scope: !10658, inlinedAt: !10662)
!10658 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5938, file: !5938, line: 42, type: !5939, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10659)
!10659 = !{!10660, !10661}
!10660 = !DILocalVariable(name: "key", scope: !10658, file: !5938, line: 44, type: !32)
!10661 = !DILocalVariable(name: "tmp", scope: !10658, file: !5938, line: 53, type: !32)
!10662 = distinct !DILocation(line: 564, column: 10, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10653, file: !1605, line: 563, column: 49)
!10664 = !{i64 2292899}
!10665 = !DILocation(line: 0, scope: !10658, inlinedAt: !10662)
!10666 = !DILocation(line: 565, column: 42, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10663, file: !1605, line: 565, column: 8)
!10668 = !DILocation(line: 565, column: 8, scope: !10667)
!10669 = !DILocation(line: 565, column: 8, scope: !10663)
!10670 = !DILocalVariable(name: "key", arg: 1, scope: !10671, file: !5938, line: 84, type: !32)
!10671 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5938, file: !5938, line: 84, type: !5949, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10672)
!10672 = !{!10670}
!10673 = !DILocation(line: 0, scope: !10671, inlinedAt: !10674)
!10674 = distinct !DILocation(line: 568, column: 4, scope: !10663)
!10675 = !DILocation(line: 95, column: 2, scope: !10671, inlinedAt: !10674)
!10676 = !{i64 2293716}
!10677 = !DILocation(line: 569, column: 3, scope: !10663)
!10678 = distinct !{!10678, !10651, !10679}
!10679 = !DILocation(line: 570, column: 2, scope: !10643)
!10680 = !DILocation(line: 592, column: 33, scope: !10643)
!10681 = !DILocation(line: 592, column: 2, scope: !10643)
!10682 = !DILocation(line: 0, scope: !10671, inlinedAt: !10683)
!10683 = distinct !DILocation(line: 593, column: 2, scope: !10643)
!10684 = !DILocation(line: 95, column: 2, scope: !10671, inlinedAt: !10683)
!10685 = !DILocation(line: 594, column: 1, scope: !10643)
!10686 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1605, file: !1605, line: 596, type: !1531, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10687)
!10687 = !{!10688, !10689, !10690}
!10688 = !DILocalVariable(name: "dev", arg: 1, scope: !10686, file: !1605, line: 596, type: !1510)
!10689 = !DILocalVariable(name: "config", scope: !10686, file: !1605, line: 598, type: !10623)
!10690 = !DILocalVariable(name: "err", scope: !10686, file: !1605, line: 599, type: !152)
!10691 = !DILocation(line: 0, scope: !10686)
!10692 = !DILocation(line: 598, column: 48, scope: !10686)
!10693 = !DILocation(line: 606, column: 40, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10686, file: !1605, line: 606, column: 6)
!10695 = !DILocation(line: 606, column: 6, scope: !10694)
!10696 = !DILocation(line: 606, column: 6, scope: !10686)
!10697 = !DILocation(line: 610, column: 39, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10686, file: !1605, line: 610, column: 6)
!10699 = !DILocation(line: 610, column: 6, scope: !10698)
!10700 = !DILocation(line: 610, column: 6, scope: !10686)
!10701 = !DILocation(line: 614, column: 39, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10686, file: !1605, line: 614, column: 6)
!10703 = !DILocation(line: 614, column: 6, scope: !10702)
!10704 = !DILocation(line: 614, column: 6, scope: !10686)
!10705 = !DILocation(line: 619, column: 40, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10686, file: !1605, line: 619, column: 6)
!10707 = !DILocation(line: 619, column: 6, scope: !10706)
!10708 = !DILocation(line: 619, column: 6, scope: !10686)
!10709 = !DILocation(line: 623, column: 10, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10686, file: !1605, line: 623, column: 6)
!10711 = !DILocation(line: 623, column: 6, scope: !10686)
!10712 = !DILocation(line: 624, column: 34, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10710, file: !1605, line: 623, column: 24)
!10714 = !DILocation(line: 624, column: 3, scope: !10713)
!10715 = !DILocation(line: 625, column: 2, scope: !10713)
!10716 = !DILocation(line: 632, column: 10, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10686, file: !1605, line: 632, column: 6)
!10718 = !DILocation(line: 632, column: 6, scope: !10686)
!10719 = !DILocation(line: 633, column: 34, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10717, file: !1605, line: 632, column: 32)
!10721 = !DILocation(line: 633, column: 3, scope: !10720)
!10722 = !DILocation(line: 634, column: 2, scope: !10720)
!10723 = !DILocation(line: 636, column: 10, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10686, file: !1605, line: 636, column: 6)
!10725 = !DILocation(line: 636, column: 6, scope: !10686)
!10726 = !DILocation(line: 637, column: 33, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10724, file: !1605, line: 636, column: 31)
!10728 = !DILocation(line: 637, column: 3, scope: !10727)
!10729 = !DILocation(line: 638, column: 2, scope: !10727)
!10730 = !DILocation(line: 640, column: 10, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10686, file: !1605, line: 640, column: 6)
!10732 = !DILocation(line: 640, column: 6, scope: !10686)
!10733 = !DILocation(line: 641, column: 33, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10731, file: !1605, line: 640, column: 32)
!10735 = !DILocation(line: 641, column: 3, scope: !10734)
!10736 = !DILocation(line: 642, column: 2, scope: !10734)
!10737 = !DILocation(line: 646, column: 32, scope: !10686)
!10738 = !DILocation(line: 646, column: 2, scope: !10686)
!10739 = !DILocation(line: 648, column: 2, scope: !10686)
!10740 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1605, file: !1605, line: 419, type: !1535, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10741)
!10741 = !{!10742, !10743, !10744, !10745, !10747, !10748, !10749, !10750}
!10742 = !DILocalVariable(name: "dev", arg: 1, scope: !10740, file: !1605, line: 419, type: !1510)
!10743 = !DILocalVariable(name: "cfg", arg: 2, scope: !10740, file: !1605, line: 420, type: !1537)
!10744 = !DILocalVariable(name: "config", scope: !10740, file: !1605, line: 422, type: !10623)
!10745 = !DILocalVariable(name: "data", scope: !10740, file: !1605, line: 423, type: !10746)
!10746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!10747 = !DILocalVariable(name: "parity", scope: !10740, file: !1605, line: 424, type: !6534)
!10748 = !DILocalVariable(name: "stopbits", scope: !10740, file: !1605, line: 425, type: !6534)
!10749 = !DILocalVariable(name: "databits", scope: !10740, file: !1605, line: 426, type: !6534)
!10750 = !DILocalVariable(name: "flowctrl", scope: !10740, file: !1605, line: 428, type: !6534)
!10751 = !DILocation(line: 0, scope: !10740)
!10752 = !DILocation(line: 422, column: 48, scope: !10740)
!10753 = !DILocation(line: 423, column: 38, scope: !10740)
!10754 = !DILocation(line: 424, column: 56, scope: !10740)
!10755 = !DILocation(line: 424, column: 51, scope: !10740)
!10756 = !DILocation(line: 424, column: 26, scope: !10740)
!10757 = !DILocation(line: 425, column: 60, scope: !10740)
!10758 = !DILocation(line: 425, column: 55, scope: !10740)
!10759 = !DILocation(line: 425, column: 28, scope: !10740)
!10760 = !DILocation(line: 426, column: 60, scope: !10740)
!10761 = !DILocation(line: 426, column: 55, scope: !10740)
!10762 = !DILocation(line: 426, column: 28, scope: !10740)
!10763 = !DILocation(line: 428, column: 58, scope: !10740)
!10764 = !DILocation(line: 428, column: 53, scope: !10740)
!10765 = !DILocation(line: 428, column: 28, scope: !10740)
!10766 = !DILocation(line: 431, column: 44, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10740, file: !1605, line: 431, column: 6)
!10768 = !DILocation(line: 438, column: 22, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10740, file: !1605, line: 437, column: 6)
!10770 = !DILocation(line: 437, column: 6, scope: !10740)
!10771 = !DILocation(line: 448, column: 6, scope: !10740)
!10772 = !DILocation(line: 465, column: 47, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10740, file: !1605, line: 465, column: 6)
!10774 = !DILocation(line: 475, column: 21, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10740, file: !1605, line: 475, column: 6)
!10776 = !DILocation(line: 475, column: 6, scope: !10740)
!10777 = !DILocation(line: 476, column: 8, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10779, file: !1605, line: 476, column: 7)
!10779 = distinct !DILexicalBlock(scope: !10775, file: !1605, line: 475, column: 49)
!10780 = !DILocation(line: 477, column: 34, scope: !10778)
!10781 = !DILocation(line: 476, column: 7, scope: !10779)
!10782 = !DILocation(line: 482, column: 27, scope: !10740)
!10783 = !DILocation(line: 482, column: 2, scope: !10740)
!10784 = !DILocation(line: 484, column: 16, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10740, file: !1605, line: 484, column: 6)
!10786 = !DILocation(line: 484, column: 13, scope: !10785)
!10787 = !DILocation(line: 484, column: 6, scope: !10740)
!10788 = !DILocation(line: 485, column: 3, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10785, file: !1605, line: 484, column: 44)
!10790 = !DILocation(line: 486, column: 2, scope: !10789)
!10791 = !DILocation(line: 488, column: 18, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10740, file: !1605, line: 488, column: 6)
!10793 = !DILocation(line: 488, column: 15, scope: !10792)
!10794 = !DILocation(line: 488, column: 6, scope: !10740)
!10795 = !DILocation(line: 489, column: 3, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10792, file: !1605, line: 488, column: 48)
!10797 = !DILocation(line: 490, column: 2, scope: !10796)
!10798 = !DILocation(line: 492, column: 18, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10740, file: !1605, line: 492, column: 6)
!10800 = !DILocation(line: 492, column: 15, scope: !10799)
!10801 = !DILocation(line: 492, column: 6, scope: !10740)
!10802 = !DILocation(line: 493, column: 3, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10799, file: !1605, line: 492, column: 48)
!10804 = !DILocation(line: 494, column: 2, scope: !10803)
!10805 = !DILocation(line: 496, column: 18, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10740, file: !1605, line: 496, column: 6)
!10807 = !DILocation(line: 496, column: 15, scope: !10806)
!10808 = !DILocation(line: 496, column: 6, scope: !10740)
!10809 = !DILocation(line: 497, column: 3, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10806, file: !1605, line: 496, column: 46)
!10811 = !DILocation(line: 498, column: 2, scope: !10810)
!10812 = !DILocation(line: 500, column: 11, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10740, file: !1605, line: 500, column: 6)
!10814 = !DILocation(line: 500, column: 29, scope: !10813)
!10815 = !DILocation(line: 500, column: 20, scope: !10813)
!10816 = !DILocation(line: 500, column: 6, scope: !10740)
!10817 = !DILocation(line: 501, column: 3, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10813, file: !1605, line: 500, column: 40)
!10819 = !DILocation(line: 502, column: 26, scope: !10818)
!10820 = !DILocation(line: 502, column: 19, scope: !10818)
!10821 = !DILocation(line: 503, column: 2, scope: !10818)
!10822 = !DILocation(line: 505, column: 26, scope: !10740)
!10823 = !DILocation(line: 505, column: 2, scope: !10740)
!10824 = !DILocation(line: 506, column: 2, scope: !10740)
!10825 = !DILocation(line: 507, column: 1, scope: !10740)
!10826 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1605, file: !1605, line: 509, type: !1548, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10827)
!10827 = !{!10828, !10829, !10830}
!10828 = !DILocalVariable(name: "dev", arg: 1, scope: !10826, file: !1605, line: 509, type: !1510)
!10829 = !DILocalVariable(name: "cfg", arg: 2, scope: !10826, file: !1605, line: 510, type: !1550)
!10830 = !DILocalVariable(name: "data", scope: !10826, file: !1605, line: 512, type: !10746)
!10831 = !DILocation(line: 0, scope: !10826)
!10832 = !DILocation(line: 512, column: 38, scope: !10826)
!10833 = !DILocation(line: 514, column: 24, scope: !10826)
!10834 = !DILocation(line: 514, column: 7, scope: !10826)
!10835 = !DILocation(line: 514, column: 16, scope: !10826)
!10836 = !DILocation(line: 515, column: 41, scope: !10826)
!10837 = !{i32 0, i32 1537}
!10838 = !DILocation(line: 515, column: 16, scope: !10826)
!10839 = !DILocation(line: 515, column: 7, scope: !10826)
!10840 = !DILocation(line: 515, column: 14, scope: !10826)
!10841 = !DILocation(line: 517, column: 3, scope: !10826)
!10842 = !{i32 0, i32 12289}
!10843 = !DILocation(line: 516, column: 19, scope: !10826)
!10844 = !DILocation(line: 516, column: 7, scope: !10826)
!10845 = !DILocation(line: 516, column: 17, scope: !10826)
!10846 = !DILocation(line: 519, column: 3, scope: !10826)
!10847 = !DILocation(line: 519, column: 33, scope: !10826)
!10848 = !DILocation(line: 518, column: 19, scope: !10826)
!10849 = !DILocation(line: 518, column: 7, scope: !10826)
!10850 = !DILocation(line: 518, column: 17, scope: !10826)
!10851 = !DILocation(line: 521, column: 3, scope: !10826)
!10852 = !{i32 0, i32 769}
!10853 = !DILocation(line: 520, column: 19, scope: !10826)
!10854 = !DILocation(line: 520, column: 7, scope: !10826)
!10855 = !DILocation(line: 520, column: 17, scope: !10826)
!10856 = !DILocation(line: 522, column: 2, scope: !10826)
!10857 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1605, file: !1605, line: 205, type: !10858, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10860)
!10858 = !DISubroutineType(types: !10859)
!10859 = !{!152, !1510}
!10860 = !{!10861, !10862}
!10861 = !DILocalVariable(name: "dev", arg: 1, scope: !10857, file: !1605, line: 205, type: !1510)
!10862 = !DILocalVariable(name: "config", scope: !10857, file: !1605, line: 207, type: !10623)
!10863 = !DILocation(line: 0, scope: !10857)
!10864 = !DILocation(line: 207, column: 48, scope: !10857)
!10865 = !DILocation(line: 209, column: 36, scope: !10857)
!10866 = !DILocation(line: 209, column: 9, scope: !10857)
!10867 = !DILocation(line: 209, column: 2, scope: !10857)
!10868 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1605, file: !1605, line: 270, type: !10869, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10871)
!10869 = !DISubroutineType(types: !10870)
!10870 = !{!1476, !152}
!10871 = !{!10872}
!10872 = !DILocalVariable(name: "parity", arg: 1, scope: !10868, file: !1605, line: 270, type: !152)
!10873 = !DILocation(line: 0, scope: !10868)
!10874 = !DILocation(line: 272, column: 2, scope: !10868)
!10875 = !DILocation(line: 281, column: 1, scope: !10868)
!10876 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1605, file: !1605, line: 220, type: !10858, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10877)
!10877 = !{!10878, !10879}
!10878 = !DILocalVariable(name: "dev", arg: 1, scope: !10876, file: !1605, line: 220, type: !1510)
!10879 = !DILocalVariable(name: "config", scope: !10876, file: !1605, line: 222, type: !10623)
!10880 = !DILocation(line: 0, scope: !10876)
!10881 = !DILocation(line: 222, column: 48, scope: !10876)
!10882 = !DILocation(line: 224, column: 44, scope: !10876)
!10883 = !DILocation(line: 224, column: 9, scope: !10876)
!10884 = !DILocation(line: 224, column: 2, scope: !10876)
!10885 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1605, file: !1605, line: 304, type: !10886, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10888)
!10886 = !DISubroutineType(types: !10887)
!10887 = !{!1490, !152}
!10888 = !{!10889}
!10889 = !DILocalVariable(name: "sb", arg: 1, scope: !10885, file: !1605, line: 304, type: !152)
!10890 = !DILocation(line: 0, scope: !10885)
!10891 = !DILocation(line: 306, column: 2, scope: !10885)
!10892 = !DILocation(line: 0, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10885, file: !1605, line: 306, column: 14)
!10894 = !DILocation(line: 323, column: 1, scope: !10885)
!10895 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1605, file: !1605, line: 235, type: !10858, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10896)
!10896 = !{!10897, !10898}
!10897 = !DILocalVariable(name: "dev", arg: 1, scope: !10895, file: !1605, line: 235, type: !1510)
!10898 = !DILocalVariable(name: "config", scope: !10895, file: !1605, line: 237, type: !10623)
!10899 = !DILocation(line: 0, scope: !10895)
!10900 = !DILocation(line: 237, column: 48, scope: !10895)
!10901 = !DILocation(line: 239, column: 39, scope: !10895)
!10902 = !DILocation(line: 239, column: 9, scope: !10895)
!10903 = !DILocation(line: 239, column: 2, scope: !10895)
!10904 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1605, file: !1605, line: 355, type: !10905, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10907)
!10905 = !DISubroutineType(types: !10906)
!10906 = !{!1483, !152, !152}
!10907 = !{!10908, !10909}
!10908 = !DILocalVariable(name: "db", arg: 1, scope: !10904, file: !1605, line: 355, type: !152)
!10909 = !DILocalVariable(name: "p", arg: 2, scope: !10904, file: !1605, line: 356, type: !152)
!10910 = !DILocation(line: 0, scope: !10904)
!10911 = !DILocation(line: 358, column: 2, scope: !10904)
!10912 = !DILocation(line: 384, column: 1, scope: !10904)
!10913 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1605, file: !1605, line: 250, type: !10858, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10914)
!10914 = !{!10915, !10916}
!10915 = !DILocalVariable(name: "dev", arg: 1, scope: !10913, file: !1605, line: 250, type: !1510)
!10916 = !DILocalVariable(name: "config", scope: !10913, file: !1605, line: 252, type: !10623)
!10917 = !DILocation(line: 0, scope: !10913)
!10918 = !DILocation(line: 252, column: 48, scope: !10913)
!10919 = !DILocation(line: 254, column: 40, scope: !10913)
!10920 = !DILocation(line: 254, column: 9, scope: !10913)
!10921 = !DILocation(line: 254, column: 2, scope: !10913)
!10922 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1605, file: !1605, line: 409, type: !10923, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10925)
!10923 = !DISubroutineType(types: !10924)
!10924 = !{!1496, !152}
!10925 = !{!10926}
!10926 = !DILocalVariable(name: "fc", arg: 1, scope: !10922, file: !1605, line: 409, type: !152)
!10927 = !DILocation(line: 0, scope: !10922)
!10928 = !DILocation(line: 411, column: 9, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10922, file: !1605, line: 411, column: 6)
!10930 = !DILocation(line: 416, column: 1, scope: !10922)
!10931 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10932, file: !10932, line: 967, type: !10933, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10935)
!10932 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10933 = !DISubroutineType(types: !10934)
!10934 = !{!152, !1551}
!10935 = !{!10936}
!10936 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10931, file: !10932, line: 967, type: !1551)
!10937 = !DILocation(line: 0, scope: !10931)
!10938 = !DILocation(line: 969, column: 21, scope: !10931)
!10939 = !DILocation(line: 969, column: 3, scope: !10931)
!10940 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10932, file: !10932, line: 601, type: !10933, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10941)
!10941 = !{!10942}
!10942 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10940, file: !10932, line: 601, type: !1551)
!10943 = !DILocation(line: 0, scope: !10940)
!10944 = !DILocation(line: 603, column: 21, scope: !10940)
!10945 = !DILocation(line: 603, column: 3, scope: !10940)
!10946 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10932, file: !10932, line: 820, type: !10933, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10947)
!10947 = !{!10948}
!10948 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10946, file: !10932, line: 820, type: !1551)
!10949 = !DILocation(line: 0, scope: !10946)
!10950 = !DILocation(line: 822, column: 21, scope: !10946)
!10951 = !DILocation(line: 822, column: 3, scope: !10946)
!10952 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10932, file: !10932, line: 547, type: !10933, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10953)
!10953 = !{!10954}
!10954 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10952, file: !10932, line: 547, type: !1551)
!10955 = !DILocation(line: 0, scope: !10952)
!10956 = !DILocation(line: 549, column: 21, scope: !10952)
!10957 = !DILocation(line: 549, column: 3, scope: !10952)
!10958 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1605, file: !1605, line: 257, type: !10959, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10961)
!10959 = !DISubroutineType(types: !10960)
!10960 = !{!152, !1476}
!10961 = !{!10962}
!10962 = !DILocalVariable(name: "parity", arg: 1, scope: !10958, file: !1605, line: 257, type: !1476)
!10963 = !DILocation(line: 0, scope: !10958)
!10964 = !DILocation(line: 259, column: 2, scope: !10958)
!10965 = !DILocation(line: 268, column: 1, scope: !10958)
!10966 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1605, file: !1605, line: 283, type: !10967, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10969)
!10967 = !DISubroutineType(types: !10968)
!10968 = !{!152, !1490}
!10969 = !{!10970}
!10970 = !DILocalVariable(name: "sb", arg: 1, scope: !10966, file: !1605, line: 283, type: !1490)
!10971 = !DILocation(line: 0, scope: !10966)
!10972 = !DILocation(line: 285, column: 2, scope: !10966)
!10973 = !DILocation(line: 0, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10966, file: !1605, line: 285, column: 14)
!10975 = !DILocation(line: 302, column: 1, scope: !10966)
!10976 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1605, file: !1605, line: 325, type: !10977, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10979)
!10977 = !DISubroutineType(types: !10978)
!10978 = !{!152, !1483, !1476}
!10979 = !{!10980, !10981}
!10980 = !DILocalVariable(name: "db", arg: 1, scope: !10976, file: !1605, line: 325, type: !1483)
!10981 = !DILocalVariable(name: "p", arg: 2, scope: !10976, file: !1605, line: 326, type: !1476)
!10982 = !DILocation(line: 0, scope: !10976)
!10983 = !DILocation(line: 328, column: 2, scope: !10976)
!10984 = !DILocation(line: 353, column: 1, scope: !10976)
!10985 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1605, file: !1605, line: 393, type: !10986, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10988)
!10986 = !DISubroutineType(types: !10987)
!10987 = !{!152, !1496}
!10988 = !{!10989}
!10989 = !DILocalVariable(name: "fc", arg: 1, scope: !10985, file: !1605, line: 393, type: !1496)
!10990 = !DILocation(line: 0, scope: !10985)
!10991 = !DILocation(line: 395, column: 9, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10985, file: !1605, line: 395, column: 6)
!10993 = !DILocation(line: 400, column: 1, scope: !10985)
!10994 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10932, file: !10932, line: 424, type: !10995, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10997)
!10995 = !DISubroutineType(types: !10996)
!10996 = !{null, !1551}
!10997 = !{!10998}
!10998 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10994, file: !10932, line: 424, type: !1551)
!10999 = !DILocation(line: 0, scope: !10994)
!11000 = !DILocation(line: 426, column: 3, scope: !10994)
!11001 = !DILocation(line: 427, column: 1, scope: !10994)
!11002 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1605, file: !1605, line: 197, type: !11003, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11005)
!11003 = !DISubroutineType(types: !11004)
!11004 = !{null, !1510, !152}
!11005 = !{!11006, !11007, !11008}
!11006 = !DILocalVariable(name: "dev", arg: 1, scope: !11002, file: !1605, line: 197, type: !1510)
!11007 = !DILocalVariable(name: "parity", arg: 2, scope: !11002, file: !1605, line: 198, type: !152)
!11008 = !DILocalVariable(name: "config", scope: !11002, file: !1605, line: 200, type: !10623)
!11009 = !DILocation(line: 0, scope: !11002)
!11010 = !DILocation(line: 200, column: 48, scope: !11002)
!11011 = !DILocation(line: 202, column: 29, scope: !11002)
!11012 = !DILocation(line: 202, column: 2, scope: !11002)
!11013 = !DILocation(line: 203, column: 1, scope: !11002)
!11014 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1605, file: !1605, line: 212, type: !11003, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11015)
!11015 = !{!11016, !11017, !11018}
!11016 = !DILocalVariable(name: "dev", arg: 1, scope: !11014, file: !1605, line: 212, type: !1510)
!11017 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11014, file: !1605, line: 213, type: !152)
!11018 = !DILocalVariable(name: "config", scope: !11014, file: !1605, line: 215, type: !10623)
!11019 = !DILocation(line: 0, scope: !11014)
!11020 = !DILocation(line: 215, column: 48, scope: !11014)
!11021 = !DILocation(line: 217, column: 37, scope: !11014)
!11022 = !DILocation(line: 217, column: 2, scope: !11014)
!11023 = !DILocation(line: 218, column: 1, scope: !11014)
!11024 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1605, file: !1605, line: 227, type: !11003, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11025)
!11025 = !{!11026, !11027, !11028}
!11026 = !DILocalVariable(name: "dev", arg: 1, scope: !11024, file: !1605, line: 227, type: !1510)
!11027 = !DILocalVariable(name: "databits", arg: 2, scope: !11024, file: !1605, line: 228, type: !152)
!11028 = !DILocalVariable(name: "config", scope: !11024, file: !1605, line: 230, type: !10623)
!11029 = !DILocation(line: 0, scope: !11024)
!11030 = !DILocation(line: 230, column: 48, scope: !11024)
!11031 = !DILocation(line: 232, column: 32, scope: !11024)
!11032 = !DILocation(line: 232, column: 2, scope: !11024)
!11033 = !DILocation(line: 233, column: 1, scope: !11024)
!11034 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1605, file: !1605, line: 242, type: !11003, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11035)
!11035 = !{!11036, !11037, !11038}
!11036 = !DILocalVariable(name: "dev", arg: 1, scope: !11034, file: !1605, line: 242, type: !1510)
!11037 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11034, file: !1605, line: 243, type: !152)
!11038 = !DILocalVariable(name: "config", scope: !11034, file: !1605, line: 245, type: !10623)
!11039 = !DILocation(line: 0, scope: !11034)
!11040 = !DILocation(line: 245, column: 48, scope: !11034)
!11041 = !DILocation(line: 247, column: 33, scope: !11034)
!11042 = !DILocation(line: 247, column: 2, scope: !11034)
!11043 = !DILocation(line: 248, column: 1, scope: !11034)
!11044 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1605, file: !1605, line: 107, type: !11003, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11045)
!11045 = !{!11046, !11047, !11048, !11049, !11050}
!11046 = !DILocalVariable(name: "dev", arg: 1, scope: !11044, file: !1605, line: 107, type: !1510)
!11047 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11044, file: !1605, line: 107, type: !152)
!11048 = !DILocalVariable(name: "config", scope: !11044, file: !1605, line: 109, type: !10623)
!11049 = !DILocalVariable(name: "data", scope: !11044, file: !1605, line: 110, type: !10746)
!11050 = !DILocalVariable(name: "clock_rate", scope: !11044, file: !1605, line: 112, type: !152)
!11051 = !DILocation(line: 0, scope: !11044)
!11052 = !DILocation(line: 109, column: 48, scope: !11044)
!11053 = !DILocation(line: 110, column: 38, scope: !11044)
!11054 = !DILocation(line: 112, column: 2, scope: !11044)
!11055 = !DILocation(line: 123, column: 36, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11057, file: !1605, line: 123, column: 7)
!11057 = distinct !DILexicalBlock(scope: !11058, file: !1605, line: 122, column: 9)
!11058 = distinct !DILexicalBlock(scope: !11044, file: !1605, line: 115, column: 6)
!11059 = !DILocation(line: 124, column: 42, scope: !11056)
!11060 = !DILocation(line: 123, column: 7, scope: !11056)
!11061 = !DILocation(line: 125, column: 22, scope: !11056)
!11062 = !DILocation(line: 123, column: 7, scope: !11057)
!11063 = !DILocation(line: 126, column: 4, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11065, file: !1605, line: 126, column: 4)
!11065 = distinct !DILexicalBlock(scope: !11066, file: !1605, line: 126, column: 4)
!11066 = distinct !DILexicalBlock(scope: !11067, file: !1605, line: 126, column: 4)
!11067 = distinct !DILexicalBlock(scope: !11068, file: !1605, line: 126, column: 4)
!11068 = distinct !DILexicalBlock(scope: !11056, file: !1605, line: 125, column: 27)
!11069 = !DILocation(line: 127, column: 4, scope: !11068)
!11070 = !DILocation(line: 176, column: 36, scope: !11044)
!11071 = !DILocation(line: 176, column: 3, scope: !11044)
!11072 = !DILocation(line: 179, column: 32, scope: !11044)
!11073 = !DILocation(line: 180, column: 10, scope: !11044)
!11074 = !DILocation(line: 179, column: 3, scope: !11044)
!11075 = !DILocation(line: 189, column: 3, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11077, file: !1605, line: 189, column: 3)
!11077 = distinct !DILexicalBlock(scope: !11044, file: !1605, line: 189, column: 3)
!11078 = !DILocation(line: 189, column: 3, scope: !11077)
!11079 = !DILocation(line: 189, column: 3, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11076, file: !1605, line: 189, column: 3)
!11081 = !DILocation(line: 195, column: 1, scope: !11044)
!11082 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10932, file: !10932, line: 410, type: !10995, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11083)
!11083 = !{!11084}
!11084 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11082, file: !10932, line: 410, type: !1551)
!11085 = !DILocation(line: 0, scope: !11082)
!11086 = !DILocation(line: 412, column: 3, scope: !11082)
!11087 = !DILocation(line: 413, column: 1, scope: !11082)
!11088 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !965, file: !965, line: 216, type: !1584, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11089)
!11089 = !{!11090, !11091, !11092, !11093}
!11090 = !DILocalVariable(name: "dev", arg: 1, scope: !11088, file: !965, line: 216, type: !1510)
!11091 = !DILocalVariable(name: "sys", arg: 2, scope: !11088, file: !965, line: 217, type: !1058)
!11092 = !DILocalVariable(name: "rate", arg: 3, scope: !11088, file: !965, line: 218, type: !1014)
!11093 = !DILocalVariable(name: "api", scope: !11088, file: !965, line: 220, type: !1562)
!11094 = !DILocation(line: 0, scope: !11088)
!11095 = !DILocation(line: 221, column: 49, scope: !11088)
!11096 = !DILocation(line: 223, column: 11, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11088, file: !965, line: 223, column: 6)
!11098 = !DILocation(line: 223, column: 20, scope: !11097)
!11099 = !DILocation(line: 223, column: 6, scope: !11088)
!11100 = !DILocation(line: 227, column: 9, scope: !11088)
!11101 = !DILocation(line: 227, column: 2, scope: !11088)
!11102 = !DILocation(line: 228, column: 1, scope: !11088)
!11103 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6016, file: !6016, line: 175, type: !6017, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11104)
!11104 = !{!11105}
!11105 = !DILocalVariable(name: "level", arg: 1, scope: !11103, file: !6016, line: 175, type: !107)
!11106 = !DILocation(line: 0, scope: !11103)
!11107 = !DILocation(line: 177, column: 2, scope: !11103)
!11108 = !DILocation(line: 189, column: 1, scope: !11103)
!11109 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10932, file: !10932, line: 615, type: !11110, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11112)
!11110 = !DISubroutineType(types: !11111)
!11111 = !{null, !1551, !152}
!11112 = !{!11113, !11114}
!11113 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11109, file: !10932, line: 615, type: !1551)
!11114 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11109, file: !10932, line: 615, type: !152)
!11115 = !DILocation(line: 0, scope: !11109)
!11116 = !DILocation(line: 617, column: 3, scope: !11109)
!11117 = !DILocation(line: 618, column: 1, scope: !11109)
!11118 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10932, file: !10932, line: 1020, type: !11119, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11121)
!11119 = !DISubroutineType(types: !11120)
!11120 = !{null, !1551, !152, !152, !152}
!11121 = !{!11122, !11123, !11124, !11125}
!11122 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11118, file: !10932, line: 1020, type: !1551)
!11123 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11118, file: !10932, line: 1020, type: !152)
!11124 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11118, file: !10932, line: 1020, type: !152)
!11125 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11118, file: !10932, line: 1021, type: !152)
!11126 = !DILocation(line: 0, scope: !11118)
!11127 = !DILocation(line: 1029, column: 30, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11129, file: !10932, line: 1028, column: 3)
!11129 = distinct !DILexicalBlock(scope: !11118, file: !10932, line: 1023, column: 7)
!11130 = !DILocation(line: 1029, column: 19, scope: !11128)
!11131 = !DILocation(line: 1029, column: 13, scope: !11128)
!11132 = !DILocation(line: 1029, column: 17, scope: !11128)
!11133 = !DILocation(line: 1031, column: 1, scope: !11118)
!11134 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10932, file: !10932, line: 949, type: !11110, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11135)
!11135 = !{!11136, !11137}
!11136 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11134, file: !10932, line: 949, type: !1551)
!11137 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11134, file: !10932, line: 949, type: !152)
!11138 = !DILocation(line: 0, scope: !11134)
!11139 = !DILocation(line: 951, column: 3, scope: !11134)
!11140 = !DILocation(line: 952, column: 1, scope: !11134)
!11141 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10932, file: !10932, line: 588, type: !11110, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11142)
!11142 = !{!11143, !11144}
!11143 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11141, file: !10932, line: 588, type: !1551)
!11144 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11141, file: !10932, line: 588, type: !152)
!11145 = !DILocation(line: 0, scope: !11141)
!11146 = !DILocation(line: 590, column: 3, scope: !11141)
!11147 = !DILocation(line: 591, column: 1, scope: !11141)
!11148 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10932, file: !10932, line: 805, type: !11110, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11149)
!11149 = !{!11150, !11151}
!11150 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11148, file: !10932, line: 805, type: !1551)
!11151 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11148, file: !10932, line: 805, type: !152)
!11152 = !DILocation(line: 0, scope: !11148)
!11153 = !DILocation(line: 807, column: 3, scope: !11148)
!11154 = !DILocation(line: 808, column: 1, scope: !11148)
!11155 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10932, file: !10932, line: 532, type: !11110, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11156)
!11156 = !{!11157, !11158}
!11157 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11155, file: !10932, line: 532, type: !1551)
!11158 = !DILocalVariable(name: "Parity", arg: 2, scope: !11155, file: !10932, line: 532, type: !152)
!11159 = !DILocation(line: 0, scope: !11155)
!11160 = !DILocation(line: 534, column: 3, scope: !11155)
!11161 = !DILocation(line: 535, column: 1, scope: !11155)
!11162 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10932, file: !10932, line: 1770, type: !10933, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11163)
!11163 = !{!11164}
!11164 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11162, file: !10932, line: 1770, type: !1551)
!11165 = !DILocation(line: 0, scope: !11162)
!11166 = !DILocation(line: 1772, column: 11, scope: !11162)
!11167 = !DILocation(line: 1772, column: 46, scope: !11162)
!11168 = !DILocation(line: 1772, column: 3, scope: !11162)
!11169 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10932, file: !10932, line: 1737, type: !10933, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11170)
!11170 = !{!11171}
!11171 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11169, file: !10932, line: 1737, type: !1551)
!11172 = !DILocation(line: 0, scope: !11169)
!11173 = !DILocation(line: 1739, column: 11, scope: !11169)
!11174 = !DILocation(line: 1739, column: 3, scope: !11169)
!11175 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10932, file: !10932, line: 1748, type: !10933, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11176)
!11176 = !{!11177}
!11177 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11175, file: !10932, line: 1748, type: !1551)
!11178 = !DILocation(line: 0, scope: !11175)
!11179 = !DILocation(line: 1750, column: 11, scope: !11175)
!11180 = !DILocation(line: 1750, column: 45, scope: !11175)
!11181 = !DILocation(line: 1750, column: 3, scope: !11175)
!11182 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10932, file: !10932, line: 1827, type: !10933, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11183)
!11183 = !{!11184}
!11184 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11182, file: !10932, line: 1827, type: !1551)
!11185 = !DILocation(line: 0, scope: !11182)
!11186 = !DILocation(line: 1829, column: 11, scope: !11182)
!11187 = !DILocation(line: 1829, column: 46, scope: !11182)
!11188 = !DILocation(line: 1829, column: 3, scope: !11182)
!11189 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10932, file: !10932, line: 1992, type: !10995, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11190)
!11190 = !{!11191}
!11191 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11189, file: !10932, line: 1992, type: !1551)
!11192 = !DILocation(line: 0, scope: !11189)
!11193 = !DILocation(line: 1994, column: 3, scope: !11189)
!11194 = !DILocation(line: 1995, column: 1, scope: !11189)
!11195 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10932, file: !10932, line: 1934, type: !10995, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11196)
!11196 = !{!11197, !11198}
!11197 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11195, file: !10932, line: 1934, type: !1551)
!11198 = !DILocalVariable(name: "tmpreg", scope: !11195, file: !10932, line: 1936, type: !227)
!11199 = !DILocation(line: 0, scope: !11195)
!11200 = !DILocation(line: 1936, column: 3, scope: !11195)
!11201 = !DILocation(line: 1936, column: 17, scope: !11195)
!11202 = !DILocation(line: 1937, column: 20, scope: !11195)
!11203 = !DILocation(line: 1937, column: 10, scope: !11195)
!11204 = !DILocation(line: 1938, column: 10, scope: !11195)
!11205 = !DILocation(line: 1939, column: 20, scope: !11195)
!11206 = !DILocation(line: 1939, column: 10, scope: !11195)
!11207 = !DILocation(line: 1940, column: 10, scope: !11195)
!11208 = !DILocation(line: 1941, column: 1, scope: !11195)
!11209 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10932, file: !10932, line: 1877, type: !10995, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11210)
!11210 = !{!11211, !11212}
!11211 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11209, file: !10932, line: 1877, type: !1551)
!11212 = !DILocalVariable(name: "tmpreg", scope: !11209, file: !10932, line: 1879, type: !227)
!11213 = !DILocation(line: 0, scope: !11209)
!11214 = !DILocation(line: 1879, column: 3, scope: !11209)
!11215 = !DILocation(line: 1879, column: 17, scope: !11209)
!11216 = !DILocation(line: 1880, column: 20, scope: !11209)
!11217 = !DILocation(line: 1880, column: 10, scope: !11209)
!11218 = !DILocation(line: 1881, column: 10, scope: !11209)
!11219 = !DILocation(line: 1882, column: 20, scope: !11209)
!11220 = !DILocation(line: 1882, column: 10, scope: !11209)
!11221 = !DILocation(line: 1883, column: 10, scope: !11209)
!11222 = !DILocation(line: 1884, column: 1, scope: !11209)
!11223 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10932, file: !10932, line: 1896, type: !10995, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11224)
!11224 = !{!11225, !11226}
!11225 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11223, file: !10932, line: 1896, type: !1551)
!11226 = !DILocalVariable(name: "tmpreg", scope: !11223, file: !10932, line: 1898, type: !227)
!11227 = !DILocation(line: 0, scope: !11223)
!11228 = !DILocation(line: 1898, column: 3, scope: !11223)
!11229 = !DILocation(line: 1898, column: 17, scope: !11223)
!11230 = !DILocation(line: 1899, column: 20, scope: !11223)
!11231 = !DILocation(line: 1899, column: 10, scope: !11223)
!11232 = !DILocation(line: 1900, column: 10, scope: !11223)
!11233 = !DILocation(line: 1901, column: 20, scope: !11223)
!11234 = !DILocation(line: 1901, column: 10, scope: !11223)
!11235 = !DILocation(line: 1902, column: 10, scope: !11223)
!11236 = !DILocation(line: 1903, column: 1, scope: !11223)
!11237 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10932, file: !10932, line: 1915, type: !10995, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11238)
!11238 = !{!11239, !11240}
!11239 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11237, file: !10932, line: 1915, type: !1551)
!11240 = !DILocalVariable(name: "tmpreg", scope: !11237, file: !10932, line: 1917, type: !227)
!11241 = !DILocation(line: 0, scope: !11237)
!11242 = !DILocation(line: 1917, column: 3, scope: !11237)
!11243 = !DILocation(line: 1917, column: 17, scope: !11237)
!11244 = !DILocation(line: 1918, column: 20, scope: !11237)
!11245 = !DILocation(line: 1918, column: 10, scope: !11237)
!11246 = !DILocation(line: 1919, column: 10, scope: !11237)
!11247 = !DILocation(line: 1920, column: 20, scope: !11237)
!11248 = !DILocation(line: 1920, column: 10, scope: !11237)
!11249 = !DILocation(line: 1921, column: 10, scope: !11237)
!11250 = !DILocation(line: 1922, column: 1, scope: !11237)
!11251 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10932, file: !10932, line: 1814, type: !10933, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11252)
!11252 = !{!11253}
!11253 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11251, file: !10932, line: 1814, type: !1551)
!11254 = !DILocation(line: 0, scope: !11251)
!11255 = !DILocation(line: 1816, column: 11, scope: !11251)
!11256 = !DILocation(line: 1816, column: 46, scope: !11251)
!11257 = !DILocation(line: 1816, column: 3, scope: !11251)
!11258 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10932, file: !10932, line: 2426, type: !11259, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11261)
!11259 = !DISubroutineType(types: !11260)
!11260 = !{null, !1551, !195}
!11261 = !{!11262, !11263}
!11262 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11258, file: !10932, line: 2426, type: !1551)
!11263 = !DILocalVariable(name: "Value", arg: 2, scope: !11258, file: !10932, line: 2426, type: !195)
!11264 = !DILocation(line: 0, scope: !11258)
!11265 = !DILocation(line: 2428, column: 16, scope: !11258)
!11266 = !DILocation(line: 2428, column: 11, scope: !11258)
!11267 = !DILocation(line: 2428, column: 14, scope: !11258)
!11268 = !DILocation(line: 2429, column: 1, scope: !11258)
!11269 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10932, file: !10932, line: 1792, type: !10933, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11270)
!11270 = !{!11271}
!11271 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11269, file: !10932, line: 1792, type: !1551)
!11272 = !DILocation(line: 0, scope: !11269)
!11273 = !DILocation(line: 1794, column: 11, scope: !11269)
!11274 = !DILocation(line: 1794, column: 47, scope: !11269)
!11275 = !DILocation(line: 1794, column: 3, scope: !11269)
!11276 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10932, file: !10932, line: 2403, type: !11277, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11279)
!11277 = !DISubroutineType(types: !11278)
!11278 = !{!195, !1551}
!11279 = !{!11280}
!11280 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11276, file: !10932, line: 2403, type: !1551)
!11281 = !DILocation(line: 0, scope: !11276)
!11282 = !DILocation(line: 2405, column: 20, scope: !11276)
!11283 = !DILocation(line: 2405, column: 10, scope: !11276)
!11284 = !DILocation(line: 2405, column: 3, scope: !11276)
!11285 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1605, file: !1605, line: 1583, type: !1531, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11286)
!11286 = !{!11287, !11288, !11289, !11290, !11291, !11292}
!11287 = !DILocalVariable(name: "dev", arg: 1, scope: !11285, file: !1605, line: 1583, type: !1510)
!11288 = !DILocalVariable(name: "config", scope: !11285, file: !1605, line: 1585, type: !10623)
!11289 = !DILocalVariable(name: "data", scope: !11285, file: !1605, line: 1586, type: !10746)
!11290 = !DILocalVariable(name: "ll_parity", scope: !11285, file: !1605, line: 1587, type: !152)
!11291 = !DILocalVariable(name: "ll_datawidth", scope: !11285, file: !1605, line: 1588, type: !152)
!11292 = !DILocalVariable(name: "err", scope: !11285, file: !1605, line: 1589, type: !107)
!11293 = !DILocation(line: 0, scope: !11285)
!11294 = !DILocation(line: 1585, column: 48, scope: !11285)
!11295 = !DILocation(line: 1586, column: 38, scope: !11285)
!11296 = !DILocation(line: 1591, column: 2, scope: !11285)
!11297 = !DILocation(line: 1593, column: 29, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11285, file: !1605, line: 1593, column: 6)
!11299 = !DILocation(line: 1593, column: 7, scope: !11298)
!11300 = !DILocation(line: 1593, column: 6, scope: !11285)
!11301 = !DILocation(line: 1594, column: 3, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11303, file: !1605, line: 1594, column: 3)
!11303 = distinct !DILexicalBlock(scope: !11304, file: !1605, line: 1594, column: 3)
!11304 = distinct !DILexicalBlock(scope: !11305, file: !1605, line: 1594, column: 3)
!11305 = distinct !DILexicalBlock(scope: !11306, file: !1605, line: 1594, column: 3)
!11306 = distinct !DILexicalBlock(scope: !11298, file: !1605, line: 1593, column: 37)
!11307 = !DILocation(line: 1595, column: 3, scope: !11306)
!11308 = !DILocation(line: 1599, column: 31, scope: !11285)
!11309 = !DILocation(line: 1599, column: 71, scope: !11285)
!11310 = !DILocation(line: 1599, column: 8, scope: !11285)
!11311 = !DILocation(line: 1600, column: 10, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11285, file: !1605, line: 1600, column: 6)
!11313 = !DILocation(line: 1600, column: 6, scope: !11285)
!11314 = !DILocation(line: 1601, column: 3, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11316, file: !1605, line: 1601, column: 3)
!11316 = distinct !DILexicalBlock(scope: !11317, file: !1605, line: 1601, column: 3)
!11317 = distinct !DILexicalBlock(scope: !11318, file: !1605, line: 1601, column: 3)
!11318 = distinct !DILexicalBlock(scope: !11319, file: !1605, line: 1601, column: 3)
!11319 = distinct !DILexicalBlock(scope: !11312, file: !1605, line: 1600, column: 16)
!11320 = !DILocation(line: 1602, column: 3, scope: !11319)
!11321 = !DILocation(line: 1616, column: 36, scope: !11285)
!11322 = !DILocation(line: 1616, column: 8, scope: !11285)
!11323 = !DILocation(line: 1617, column: 10, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11285, file: !1605, line: 1617, column: 6)
!11325 = !DILocation(line: 1617, column: 6, scope: !11285)
!11326 = !DILocation(line: 1621, column: 27, scope: !11285)
!11327 = !DILocation(line: 1621, column: 2, scope: !11285)
!11328 = !DILocation(line: 1624, column: 40, scope: !11285)
!11329 = !DILocation(line: 1624, column: 2, scope: !11285)
!11330 = !DILocation(line: 1630, column: 14, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11285, file: !1605, line: 1630, column: 6)
!11332 = !DILocation(line: 1630, column: 6, scope: !11285)
!11333 = !DILocation(line: 1640, column: 4, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11335, file: !1605, line: 1640, column: 4)
!11335 = distinct !DILexicalBlock(scope: !11336, file: !1605, line: 1640, column: 4)
!11336 = distinct !DILexicalBlock(scope: !11337, file: !1605, line: 1640, column: 4)
!11337 = distinct !DILexicalBlock(scope: !11338, file: !1605, line: 1640, column: 4)
!11338 = distinct !DILexicalBlock(scope: !11339, file: !1605, line: 1639, column: 28)
!11339 = distinct !DILexicalBlock(scope: !11340, file: !1605, line: 1639, column: 7)
!11340 = distinct !DILexicalBlock(scope: !11341, file: !1605, line: 1638, column: 9)
!11341 = distinct !DILexicalBlock(scope: !11331, file: !1605, line: 1634, column: 13)
!11342 = !DILocation(line: 0, scope: !11331)
!11343 = !DILocation(line: 1649, column: 35, scope: !11285)
!11344 = !DILocation(line: 1649, column: 2, scope: !11285)
!11345 = !DILocation(line: 1654, column: 14, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11285, file: !1605, line: 1654, column: 6)
!11347 = !DILocation(line: 1654, column: 6, scope: !11285)
!11348 = !DILocation(line: 1655, column: 3, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11346, file: !1605, line: 1654, column: 31)
!11350 = !DILocation(line: 1656, column: 2, scope: !11349)
!11351 = !DILocation(line: 1659, column: 37, scope: !11285)
!11352 = !DILocation(line: 1659, column: 2, scope: !11285)
!11353 = !DILocation(line: 1662, column: 14, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11285, file: !1605, line: 1662, column: 6)
!11355 = !DILocation(line: 1662, column: 6, scope: !11285)
!11356 = !DILocation(line: 1663, column: 37, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11354, file: !1605, line: 1662, column: 27)
!11358 = !DILocation(line: 1663, column: 3, scope: !11357)
!11359 = !DILocation(line: 1664, column: 2, scope: !11357)
!11360 = !DILocation(line: 1684, column: 26, scope: !11285)
!11361 = !DILocation(line: 1684, column: 2, scope: !11285)
!11362 = !DILocation(line: 1722, column: 2, scope: !11285)
!11363 = !DILocation(line: 1724, column: 1, scope: !11285)
!11364 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1605, file: !1605, line: 651, type: !11365, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11367)
!11365 = !DISubroutineType(types: !11366)
!11366 = !{null, !1510}
!11367 = !{!11368, !11369, !11370}
!11368 = !DILocalVariable(name: "dev", arg: 1, scope: !11364, file: !1605, line: 651, type: !1510)
!11369 = !DILocalVariable(name: "data", scope: !11364, file: !1605, line: 653, type: !10746)
!11370 = !DILocalVariable(name: "clk", scope: !11364, file: !1605, line: 654, type: !11371)
!11371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1510)
!11372 = !DILocation(line: 0, scope: !11364)
!11373 = !DILocation(line: 653, column: 38, scope: !11364)
!11374 = !DILocation(line: 656, column: 8, scope: !11364)
!11375 = !DILocation(line: 656, column: 14, scope: !11364)
!11376 = !DILocation(line: 657, column: 1, scope: !11364)
!11377 = distinct !DISubprogram(name: "device_is_ready", scope: !9742, file: !9742, line: 47, type: !11378, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11380)
!11378 = !DISubroutineType(types: !11379)
!11379 = !{!145, !1510}
!11380 = !{!11381}
!11381 = !DILocalVariable(name: "dev", arg: 1, scope: !11377, file: !9742, line: 47, type: !1510)
!11382 = !DILocation(line: 0, scope: !11377)
!11383 = !DILocation(line: 55, column: 2, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11377, file: !9742, line: 55, column: 2)
!11385 = !{i64 2155046113}
!11386 = !DILocation(line: 56, column: 9, scope: !11377)
!11387 = !DILocation(line: 56, column: 2, scope: !11377)
!11388 = distinct !DISubprogram(name: "clock_control_on", scope: !965, file: !965, line: 123, type: !1569, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11389)
!11389 = !{!11390, !11391, !11392}
!11390 = !DILocalVariable(name: "dev", arg: 1, scope: !11388, file: !965, line: 123, type: !1510)
!11391 = !DILocalVariable(name: "sys", arg: 2, scope: !11388, file: !965, line: 124, type: !1058)
!11392 = !DILocalVariable(name: "api", scope: !11388, file: !965, line: 126, type: !1562)
!11393 = !DILocation(line: 0, scope: !11388)
!11394 = !DILocation(line: 127, column: 49, scope: !11388)
!11395 = !DILocation(line: 129, column: 14, scope: !11388)
!11396 = !DILocation(line: 129, column: 9, scope: !11388)
!11397 = !DILocation(line: 129, column: 2, scope: !11388)
!11398 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1645, file: !1645, line: 342, type: !11399, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11401)
!11399 = !DISubroutineType(types: !11400)
!11400 = !{!107, !1642, !195}
!11401 = !{!11402, !11403, !11404, !11405}
!11402 = !DILocalVariable(name: "config", arg: 1, scope: !11398, file: !1645, line: 342, type: !1642)
!11403 = !DILocalVariable(name: "id", arg: 2, scope: !11398, file: !1645, line: 343, type: !195)
!11404 = !DILocalVariable(name: "ret", scope: !11398, file: !1645, line: 345, type: !107)
!11405 = !DILocalVariable(name: "state", scope: !11398, file: !1645, line: 346, type: !1648)
!11406 = !DILocation(line: 0, scope: !11398)
!11407 = !DILocation(line: 346, column: 2, scope: !11398)
!11408 = !DILocation(line: 348, column: 8, scope: !11398)
!11409 = !DILocation(line: 349, column: 10, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11398, file: !1645, line: 349, column: 6)
!11411 = !DILocation(line: 349, column: 6, scope: !11398)
!11412 = !DILocation(line: 353, column: 44, scope: !11398)
!11413 = !DILocation(line: 353, column: 9, scope: !11398)
!11414 = !DILocation(line: 353, column: 2, scope: !11398)
!11415 = !DILocation(line: 354, column: 1, scope: !11398)
!11416 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10932, file: !10932, line: 497, type: !11110, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11417)
!11417 = !{!11418, !11419, !11420}
!11418 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11416, file: !10932, line: 497, type: !1551)
!11419 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11416, file: !10932, line: 497, type: !152)
!11420 = !DILocalVariable(name: "val", scope: !11421, file: !10932, line: 499, type: !152)
!11421 = distinct !DILexicalBlock(scope: !11416, file: !10932, line: 499, column: 3)
!11422 = !DILocation(line: 0, scope: !11416)
!11423 = !DILocation(line: 499, column: 3, scope: !11421)
!11424 = !DILocalVariable(name: "addr", arg: 1, scope: !11425, file: !6257, line: 476, type: !1601)
!11425 = distinct !DISubprogram(name: "__LDREXW", scope: !6257, file: !6257, line: 476, type: !11426, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11428)
!11426 = !DISubroutineType(types: !11427)
!11427 = !{!152, !1601}
!11428 = !{!11424, !11429}
!11429 = !DILocalVariable(name: "result", scope: !11425, file: !6257, line: 478, type: !152)
!11430 = !DILocation(line: 0, scope: !11425, inlinedAt: !11431)
!11431 = distinct !DILocation(line: 499, column: 3, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11421, file: !10932, line: 499, column: 3)
!11433 = !DILocation(line: 480, column: 4, scope: !11425, inlinedAt: !11431)
!11434 = !{i64 3532093}
!11435 = !DILocation(line: 499, column: 3, scope: !11432)
!11436 = !DILocation(line: 0, scope: !11421)
!11437 = !DILocalVariable(name: "value", arg: 1, scope: !11438, file: !6257, line: 527, type: !152)
!11438 = distinct !DISubprogram(name: "__STREXW", scope: !6257, file: !6257, line: 527, type: !11439, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11441)
!11439 = !DISubroutineType(types: !11440)
!11440 = !{!152, !152, !1601}
!11441 = !{!11437, !11442, !11443}
!11442 = !DILocalVariable(name: "addr", arg: 2, scope: !11438, file: !6257, line: 527, type: !1601)
!11443 = !DILocalVariable(name: "result", scope: !11438, file: !6257, line: 529, type: !152)
!11444 = !DILocation(line: 0, scope: !11438, inlinedAt: !11445)
!11445 = distinct !DILocation(line: 499, column: 3, scope: !11421)
!11446 = !DILocation(line: 531, column: 4, scope: !11438, inlinedAt: !11445)
!11447 = !{i64 3533529}
!11448 = distinct !{!11448, !11423, !11423}
!11449 = !DILocation(line: 500, column: 1, scope: !11416)
!11450 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10932, file: !10932, line: 850, type: !11119, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11451)
!11451 = !{!11452, !11453, !11454, !11455}
!11452 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11450, file: !10932, line: 850, type: !1551)
!11453 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11450, file: !10932, line: 850, type: !152)
!11454 = !DILocalVariable(name: "Parity", arg: 3, scope: !11450, file: !10932, line: 850, type: !152)
!11455 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11450, file: !10932, line: 851, type: !152)
!11456 = !DILocation(line: 0, scope: !11450)
!11457 = !DILocation(line: 853, column: 3, scope: !11450)
!11458 = !DILocation(line: 854, column: 3, scope: !11450)
!11459 = !DILocation(line: 855, column: 1, scope: !11450)
!11460 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10932, file: !10932, line: 1337, type: !10995, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11461)
!11461 = !{!11462}
!11462 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11460, file: !10932, line: 1337, type: !1551)
!11463 = !DILocation(line: 0, scope: !11460)
!11464 = !DILocation(line: 1339, column: 3, scope: !11460)
!11465 = !DILocation(line: 1340, column: 1, scope: !11460)
!11466 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1645, file: !1645, line: 316, type: !11467, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11469)
!11467 = !DISubroutineType(types: !11468)
!11468 = !{!107, !1642, !1648}
!11469 = !{!11470, !11471, !11472}
!11470 = !DILocalVariable(name: "config", arg: 1, scope: !11466, file: !1645, line: 317, type: !1642)
!11471 = !DILocalVariable(name: "state", arg: 2, scope: !11466, file: !1645, line: 318, type: !1648)
!11472 = !DILocalVariable(name: "reg", scope: !11466, file: !1645, line: 320, type: !22)
!11473 = !DILocation(line: 0, scope: !11466)
!11474 = !DILocation(line: 329, column: 39, scope: !11466)
!11475 = !DILocation(line: 329, column: 52, scope: !11466)
!11476 = !DILocation(line: 329, column: 9, scope: !11466)
!11477 = !DILocation(line: 329, column: 2, scope: !11466)
!11478 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11378, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !11479)
!11479 = !{!11480}
!11480 = !DILocalVariable(name: "dev", arg: 1, scope: !11478, file: !247, line: 730, type: !1510)
!11481 = !DILocation(line: 0, scope: !11478)
!11482 = !DILocation(line: 732, column: 9, scope: !11478)
!11483 = !DILocation(line: 732, column: 2, scope: !11478)
!11484 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1766, file: !1766, line: 270, type: !1772, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11485)
!11485 = !{!11486}
!11486 = !DILocalVariable(name: "dev", arg: 1, scope: !11484, file: !1766, line: 270, type: !1774)
!11487 = !DILocation(line: 0, scope: !11484)
!11488 = !DILocation(line: 274, column: 2, scope: !11484)
!11489 = !DILocation(line: 275, column: 12, scope: !11484)
!11490 = !DILocation(line: 276, column: 15, scope: !11484)
!11491 = !DILocation(line: 277, column: 16, scope: !11484)
!11492 = !DILocation(line: 278, column: 15, scope: !11484)
!11493 = !DILocation(line: 279, column: 16, scope: !11484)
!11494 = !DILocation(line: 282, column: 2, scope: !11484)
!11495 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6297, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11496)
!11496 = !{!11497, !11498}
!11497 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11495, file: !463, line: 1814, type: !921)
!11498 = !DILocalVariable(name: "priority", arg: 2, scope: !11495, file: !463, line: 1814, type: !152)
!11499 = !DILocation(line: 0, scope: !11495)
!11500 = !DILocation(line: 1822, column: 46, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !463, line: 1821, column: 3)
!11502 = distinct !DILexicalBlock(scope: !11495, file: !463, line: 1816, column: 7)
!11503 = !DILocation(line: 1824, column: 1, scope: !11495)
!11504 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1766, file: !1766, line: 118, type: !131, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11505)
!11505 = !{!11506, !11507}
!11506 = !DILocalVariable(name: "arg", arg: 1, scope: !11504, file: !1766, line: 118, type: !106)
!11507 = !DILocalVariable(name: "dticks", scope: !11504, file: !1766, line: 121, type: !152)
!11508 = !DILocation(line: 0, scope: !11504)
!11509 = !DILocation(line: 124, column: 2, scope: !11504)
!11510 = !DILocation(line: 129, column: 17, scope: !11504)
!11511 = !DILocation(line: 129, column: 14, scope: !11504)
!11512 = !DILocation(line: 130, column: 15, scope: !11504)
!11513 = !DILocation(line: 145, column: 27, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11515, file: !1766, line: 132, column: 16)
!11515 = distinct !DILexicalBlock(scope: !11504, file: !1766, line: 132, column: 6)
!11516 = !DILocation(line: 145, column: 25, scope: !11514)
!11517 = !DILocation(line: 145, column: 45, scope: !11514)
!11518 = !DILocation(line: 146, column: 30, scope: !11514)
!11519 = !DILocation(line: 146, column: 20, scope: !11514)
!11520 = !DILocation(line: 147, column: 3, scope: !11514)
!11521 = !DILocation(line: 151, column: 2, scope: !11504)
!11522 = !DILocation(line: 152, column: 1, scope: !11504)
!11523 = distinct !DISubprogram(name: "elapsed", scope: !1766, file: !1766, line: 85, type: !6344, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11524)
!11524 = !{!11525, !11526, !11527}
!11525 = !DILocalVariable(name: "val1", scope: !11523, file: !1766, line: 87, type: !152)
!11526 = !DILocalVariable(name: "ctrl", scope: !11523, file: !1766, line: 88, type: !152)
!11527 = !DILocalVariable(name: "val2", scope: !11523, file: !1766, line: 89, type: !152)
!11528 = !DILocation(line: 87, column: 27, scope: !11523)
!11529 = !DILocation(line: 0, scope: !11523)
!11530 = !DILocation(line: 88, column: 27, scope: !11523)
!11531 = !DILocation(line: 89, column: 27, scope: !11523)
!11532 = !DILocation(line: 105, column: 12, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11523, file: !1766, line: 105, column: 6)
!11534 = !DILocation(line: 106, column: 6, scope: !11533)
!11535 = !DILocation(line: 107, column: 16, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11533, file: !1766, line: 106, column: 24)
!11537 = !DILocation(line: 111, column: 18, scope: !11536)
!11538 = !DILocation(line: 112, column: 2, scope: !11536)
!11539 = !DILocation(line: 114, column: 20, scope: !11523)
!11540 = !DILocation(line: 114, column: 30, scope: !11523)
!11541 = !DILocation(line: 114, column: 28, scope: !11523)
!11542 = !DILocation(line: 114, column: 2, scope: !11523)
!11543 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1766, file: !1766, line: 154, type: !11544, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11546)
!11544 = !DISubroutineType(types: !11545)
!11545 = !{null, !895, !145}
!11546 = !{!11547, !11548, !11549, !11550, !11551, !11552, !11553, !11558, !11559}
!11547 = !DILocalVariable(name: "ticks", arg: 1, scope: !11543, file: !1766, line: 154, type: !895)
!11548 = !DILocalVariable(name: "idle", arg: 2, scope: !11543, file: !1766, line: 154, type: !145)
!11549 = !DILocalVariable(name: "delay", scope: !11543, file: !1766, line: 169, type: !152)
!11550 = !DILocalVariable(name: "val1", scope: !11543, file: !1766, line: 170, type: !152)
!11551 = !DILocalVariable(name: "val2", scope: !11543, file: !1766, line: 170, type: !152)
!11552 = !DILocalVariable(name: "last_load_", scope: !11543, file: !1766, line: 171, type: !152)
!11553 = !DILocalVariable(name: "key", scope: !11543, file: !1766, line: 176, type: !11554)
!11554 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !11555)
!11555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !11556)
!11556 = !{!11557}
!11557 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11555, file: !420, line: 33, baseType: !107, size: 32)
!11558 = !DILocalVariable(name: "pending", scope: !11543, file: !1766, line: 178, type: !152)
!11559 = !DILocalVariable(name: "unannounced", scope: !11543, file: !1766, line: 185, type: !152)
!11560 = !DILocation(line: 0, scope: !11543)
!11561 = !DILocation(line: 162, column: 49, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11543, file: !1766, line: 162, column: 6)
!11563 = !DILocation(line: 163, column: 17, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11562, file: !1766, line: 162, column: 78)
!11565 = !DILocation(line: 164, column: 13, scope: !11564)
!11566 = !DILocation(line: 165, column: 3, scope: !11564)
!11567 = !DILocation(line: 171, column: 24, scope: !11543)
!11568 = !DILocation(line: 173, column: 10, scope: !11543)
!11569 = !DILocation(line: 174, column: 10, scope: !11543)
!11570 = !DILocalVariable(name: "l", arg: 1, scope: !11571, file: !420, line: 136, type: !11574)
!11571 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !11572, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11575)
!11572 = !DISubroutineType(types: !11573)
!11573 = !{!11554, !11574}
!11574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 32)
!11575 = !{!11570, !11576}
!11576 = !DILocalVariable(name: "k", scope: !11571, file: !420, line: 139, type: !11554)
!11577 = !DILocation(line: 0, scope: !11571, inlinedAt: !11578)
!11578 = distinct !DILocation(line: 176, column: 25, scope: !11543)
!11579 = !DILocation(line: 55, column: 2, scope: !11580, inlinedAt: !11584)
!11580 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5938, file: !5938, line: 42, type: !5939, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11581)
!11581 = !{!11582, !11583}
!11582 = !DILocalVariable(name: "key", scope: !11580, file: !5938, line: 44, type: !32)
!11583 = !DILocalVariable(name: "tmp", scope: !11580, file: !5938, line: 53, type: !32)
!11584 = distinct !DILocation(line: 145, column: 10, scope: !11571, inlinedAt: !11578)
!11585 = !{i64 2226180}
!11586 = !DILocation(line: 0, scope: !11580, inlinedAt: !11584)
!11587 = !DILocation(line: 148, column: 2, scope: !11588, inlinedAt: !11578)
!11588 = distinct !DILexicalBlock(scope: !11589, file: !420, line: 148, column: 2)
!11589 = distinct !DILexicalBlock(scope: !11571, file: !420, line: 148, column: 2)
!11590 = !DILocation(line: 148, column: 2, scope: !11589, inlinedAt: !11578)
!11591 = !DILocation(line: 148, column: 2, scope: !11592, inlinedAt: !11578)
!11592 = distinct !DILexicalBlock(scope: !11588, file: !420, line: 148, column: 2)
!11593 = !DILocation(line: 160, column: 2, scope: !11571, inlinedAt: !11578)
!11594 = !DILocation(line: 178, column: 21, scope: !11543)
!11595 = !DILocation(line: 180, column: 18, scope: !11543)
!11596 = !DILocation(line: 182, column: 14, scope: !11543)
!11597 = !DILocation(line: 183, column: 15, scope: !11543)
!11598 = !DILocation(line: 185, column: 39, scope: !11543)
!11599 = !DILocation(line: 185, column: 37, scope: !11543)
!11600 = !DILocation(line: 187, column: 27, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11543, file: !1766, line: 187, column: 6)
!11602 = !DILocation(line: 187, column: 6, scope: !11543)
!11603 = !DILocation(line: 202, column: 27, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11601, file: !1766, line: 195, column: 9)
!11605 = !DILocation(line: 202, column: 48, scope: !11604)
!11606 = !DILocation(line: 203, column: 9, scope: !11604)
!11607 = !DILocation(line: 204, column: 11, scope: !11604)
!11608 = !DILocation(line: 205, column: 13, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !11604, file: !1766, line: 205, column: 7)
!11610 = !DILocation(line: 205, column: 7, scope: !11604)
!11611 = !DILocation(line: 0, scope: !11601)
!11612 = !DILocation(line: 212, column: 18, scope: !11543)
!11613 = !DILocation(line: 214, column: 28, scope: !11543)
!11614 = !DILocation(line: 214, column: 16, scope: !11543)
!11615 = !DILocation(line: 215, column: 15, scope: !11543)
!11616 = !DILocation(line: 227, column: 11, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11543, file: !1766, line: 227, column: 6)
!11618 = !DILocation(line: 227, column: 6, scope: !11543)
!11619 = !DILocation(line: 228, column: 15, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11617, file: !1766, line: 227, column: 19)
!11621 = !DILocation(line: 228, column: 38, scope: !11620)
!11622 = !DILocation(line: 228, column: 24, scope: !11620)
!11623 = !DILocation(line: 229, column: 2, scope: !11620)
!11624 = !DILocation(line: 230, column: 24, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11617, file: !1766, line: 229, column: 9)
!11626 = !DILocation(line: 230, column: 15, scope: !11625)
!11627 = !DILocation(line: 0, scope: !11617)
!11628 = !DILocalVariable(name: "key", arg: 2, scope: !11629, file: !420, line: 190, type: !11554)
!11629 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !11630, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11632)
!11630 = !DISubroutineType(types: !11631)
!11631 = !{null, !11574, !11554}
!11632 = !{!11633, !11628}
!11633 = !DILocalVariable(name: "l", arg: 1, scope: !11629, file: !420, line: 189, type: !11574)
!11634 = !DILocation(line: 0, scope: !11629, inlinedAt: !11635)
!11635 = distinct !DILocation(line: 232, column: 2, scope: !11543)
!11636 = !DILocation(line: 194, column: 2, scope: !11637, inlinedAt: !11635)
!11637 = distinct !DILexicalBlock(scope: !11638, file: !420, line: 194, column: 2)
!11638 = distinct !DILexicalBlock(scope: !11629, file: !420, line: 194, column: 2)
!11639 = !DILocation(line: 194, column: 2, scope: !11638, inlinedAt: !11635)
!11640 = !DILocation(line: 194, column: 2, scope: !11641, inlinedAt: !11635)
!11641 = distinct !DILexicalBlock(scope: !11637, file: !420, line: 194, column: 2)
!11642 = !DILocalVariable(name: "key", arg: 1, scope: !11643, file: !5938, line: 84, type: !32)
!11643 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5938, file: !5938, line: 84, type: !5949, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11644)
!11644 = !{!11642}
!11645 = !DILocation(line: 0, scope: !11643, inlinedAt: !11646)
!11646 = distinct !DILocation(line: 215, column: 2, scope: !11629, inlinedAt: !11635)
!11647 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !11646)
!11648 = !{i64 2226997}
!11649 = !DILocation(line: 234, column: 1, scope: !11543)
!11650 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1766, file: !1766, line: 236, type: !6344, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11651)
!11651 = !{!11652, !11653}
!11652 = !DILocalVariable(name: "key", scope: !11650, file: !1766, line: 242, type: !11554)
!11653 = !DILocalVariable(name: "cyc", scope: !11650, file: !1766, line: 243, type: !152)
!11654 = !DILocation(line: 0, scope: !11571, inlinedAt: !11655)
!11655 = distinct !DILocation(line: 242, column: 25, scope: !11650)
!11656 = !DILocation(line: 55, column: 2, scope: !11580, inlinedAt: !11657)
!11657 = distinct !DILocation(line: 145, column: 10, scope: !11571, inlinedAt: !11655)
!11658 = !DILocation(line: 0, scope: !11580, inlinedAt: !11657)
!11659 = !DILocation(line: 148, column: 2, scope: !11588, inlinedAt: !11655)
!11660 = !DILocation(line: 148, column: 2, scope: !11589, inlinedAt: !11655)
!11661 = !DILocation(line: 148, column: 2, scope: !11592, inlinedAt: !11655)
!11662 = !DILocation(line: 160, column: 2, scope: !11571, inlinedAt: !11655)
!11663 = !DILocation(line: 0, scope: !11650)
!11664 = !DILocation(line: 243, column: 17, scope: !11650)
!11665 = !DILocation(line: 243, column: 29, scope: !11650)
!11666 = !DILocation(line: 243, column: 43, scope: !11650)
!11667 = !DILocation(line: 0, scope: !11629, inlinedAt: !11668)
!11668 = distinct !DILocation(line: 245, column: 2, scope: !11650)
!11669 = !DILocation(line: 194, column: 2, scope: !11637, inlinedAt: !11668)
!11670 = !DILocation(line: 194, column: 2, scope: !11638, inlinedAt: !11668)
!11671 = !DILocation(line: 194, column: 2, scope: !11641, inlinedAt: !11668)
!11672 = !DILocation(line: 243, column: 27, scope: !11650)
!11673 = !DILocation(line: 243, column: 41, scope: !11650)
!11674 = !DILocation(line: 0, scope: !11643, inlinedAt: !11675)
!11675 = distinct !DILocation(line: 215, column: 2, scope: !11629, inlinedAt: !11668)
!11676 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !11675)
!11677 = !DILocation(line: 246, column: 13, scope: !11650)
!11678 = !DILocation(line: 246, column: 2, scope: !11650)
!11679 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1766, file: !1766, line: 249, type: !6344, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !11680)
!11680 = !{!11681, !11682}
!11681 = !DILocalVariable(name: "key", scope: !11679, file: !1766, line: 251, type: !11554)
!11682 = !DILocalVariable(name: "ret", scope: !11679, file: !1766, line: 252, type: !152)
!11683 = !DILocation(line: 0, scope: !11571, inlinedAt: !11684)
!11684 = distinct !DILocation(line: 251, column: 25, scope: !11679)
!11685 = !DILocation(line: 55, column: 2, scope: !11580, inlinedAt: !11686)
!11686 = distinct !DILocation(line: 145, column: 10, scope: !11571, inlinedAt: !11684)
!11687 = !DILocation(line: 0, scope: !11580, inlinedAt: !11686)
!11688 = !DILocation(line: 148, column: 2, scope: !11588, inlinedAt: !11684)
!11689 = !DILocation(line: 148, column: 2, scope: !11589, inlinedAt: !11684)
!11690 = !DILocation(line: 148, column: 2, scope: !11592, inlinedAt: !11684)
!11691 = !DILocation(line: 160, column: 2, scope: !11571, inlinedAt: !11684)
!11692 = !DILocation(line: 0, scope: !11679)
!11693 = !DILocation(line: 252, column: 17, scope: !11679)
!11694 = !DILocation(line: 252, column: 29, scope: !11679)
!11695 = !DILocation(line: 0, scope: !11629, inlinedAt: !11696)
!11696 = distinct !DILocation(line: 254, column: 2, scope: !11679)
!11697 = !DILocation(line: 194, column: 2, scope: !11637, inlinedAt: !11696)
!11698 = !DILocation(line: 194, column: 2, scope: !11638, inlinedAt: !11696)
!11699 = !DILocation(line: 194, column: 2, scope: !11641, inlinedAt: !11696)
!11700 = !DILocation(line: 252, column: 27, scope: !11679)
!11701 = !DILocation(line: 0, scope: !11643, inlinedAt: !11702)
!11702 = distinct !DILocation(line: 215, column: 2, scope: !11629, inlinedAt: !11696)
!11703 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !11702)
!11704 = !DILocation(line: 255, column: 2, scope: !11679)
!11705 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1766, file: !1766, line: 258, type: !3082, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !2156)
!11706 = !DILocation(line: 260, column: 6, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11705, file: !1766, line: 260, column: 6)
!11708 = !DILocation(line: 260, column: 16, scope: !11707)
!11709 = !DILocation(line: 260, column: 6, scope: !11705)
!11710 = !DILocation(line: 261, column: 17, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11707, file: !1766, line: 260, column: 34)
!11712 = !DILocation(line: 262, column: 2, scope: !11711)
!11713 = !DILocation(line: 263, column: 1, scope: !11705)
!11714 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1766, file: !1766, line: 265, type: !3082, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1690, retainedNodes: !2156)
!11715 = !DILocation(line: 267, column: 16, scope: !11714)
!11716 = !DILocation(line: 268, column: 1, scope: !11714)
!11717 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11718, file: !11718, line: 9, type: !11719, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2891, retainedNodes: !11742)
!11718 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11719 = !DISubroutineType(types: !11720)
!11720 = !{!107, !11721, !195, !11741}
!11721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11722, size: 32)
!11722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11723)
!11723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1645, line: 60, size: 64, elements: !11724)
!11724 = !{!11725, !11740}
!11725 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11723, file: !1645, line: 69, baseType: !11726, size: 32)
!11726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11727, size: 32)
!11727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11728)
!11728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1645, line: 50, size: 64, elements: !11729)
!11729 = !{!11730, !11738, !11739}
!11730 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11728, file: !1645, line: 52, baseType: !11731, size: 32)
!11731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11732, size: 32)
!11732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11733)
!11733 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1656, line: 37, baseType: !11734)
!11734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1656, line: 32, size: 64, elements: !11735)
!11735 = !{!11736, !11737}
!11736 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11734, file: !1656, line: 34, baseType: !152, size: 32)
!11737 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11734, file: !1656, line: 36, baseType: !152, size: 32, offset: 32)
!11738 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11728, file: !1645, line: 54, baseType: !195, size: 8, offset: 32)
!11739 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11728, file: !1645, line: 56, baseType: !195, size: 8, offset: 40)
!11740 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11723, file: !1645, line: 71, baseType: !195, size: 8, offset: 32)
!11741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11726, size: 32)
!11742 = !{!11743, !11744, !11745}
!11743 = !DILocalVariable(name: "config", arg: 1, scope: !11717, file: !11718, line: 9, type: !11721)
!11744 = !DILocalVariable(name: "id", arg: 2, scope: !11717, file: !11718, line: 9, type: !195)
!11745 = !DILocalVariable(name: "state", arg: 3, scope: !11717, file: !11718, line: 10, type: !11741)
!11746 = !DILocation(line: 0, scope: !11717)
!11747 = !DILocation(line: 12, column: 20, scope: !11717)
!11748 = !DILocation(line: 13, column: 27, scope: !11717)
!11749 = !DILocation(line: 13, column: 42, scope: !11717)
!11750 = !DILocation(line: 13, column: 19, scope: !11717)
!11751 = !DILocation(line: 13, column: 16, scope: !11717)
!11752 = !DILocation(line: 13, column: 2, scope: !11717)
!11753 = distinct !{!11753, !11752, !11754}
!11754 = !DILocation(line: 19, column: 2, scope: !11717)
!11755 = !DILocation(line: 14, column: 23, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11757, file: !11718, line: 14, column: 7)
!11757 = distinct !DILexicalBlock(scope: !11717, file: !11718, line: 13, column: 54)
!11758 = !DILocation(line: 14, column: 10, scope: !11756)
!11759 = !DILocation(line: 18, column: 11, scope: !11757)
!11760 = !DILocation(line: 14, column: 7, scope: !11757)
!11761 = !DILocation(line: 22, column: 1, scope: !11717)
!11762 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1885, file: !1885, line: 193, type: !11763, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1803, retainedNodes: !11772)
!11763 = !DISubroutineType(types: !11764)
!11764 = !{!107, !11765, !195, !22}
!11765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11766, size: 32)
!11766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11767)
!11767 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1656, line: 37, baseType: !11768)
!11768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1656, line: 32, size: 64, elements: !11769)
!11769 = !{!11770, !11771}
!11770 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11768, file: !1656, line: 34, baseType: !152, size: 32)
!11771 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11768, file: !1656, line: 36, baseType: !152, size: 32, offset: 32)
!11772 = !{!11773, !11774, !11775, !11776, !11777, !11778, !11779, !11780, !11782}
!11773 = !DILocalVariable(name: "pins", arg: 1, scope: !11762, file: !1885, line: 193, type: !11765)
!11774 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11762, file: !1885, line: 193, type: !195)
!11775 = !DILocalVariable(name: "reg", arg: 3, scope: !11762, file: !1885, line: 194, type: !22)
!11776 = !DILocalVariable(name: "pin", scope: !11762, file: !1885, line: 196, type: !152)
!11777 = !DILocalVariable(name: "mux", scope: !11762, file: !1885, line: 196, type: !152)
!11778 = !DILocalVariable(name: "pin_cgf", scope: !11762, file: !1885, line: 197, type: !152)
!11779 = !DILocalVariable(name: "ret", scope: !11762, file: !1885, line: 198, type: !107)
!11780 = !DILocalVariable(name: "i", scope: !11781, file: !1885, line: 209, type: !195)
!11781 = distinct !DILexicalBlock(scope: !11762, file: !1885, line: 209, column: 2)
!11782 = !DILocalVariable(name: "gpio_out", scope: !11783, file: !1885, line: 239, type: !152)
!11783 = distinct !DILexicalBlock(scope: !11784, file: !1885, line: 238, column: 55)
!11784 = distinct !DILexicalBlock(scope: !11785, file: !1885, line: 238, column: 14)
!11785 = distinct !DILexicalBlock(scope: !11786, file: !1885, line: 236, column: 14)
!11786 = distinct !DILexicalBlock(scope: !11787, file: !1885, line: 234, column: 7)
!11787 = distinct !DILexicalBlock(scope: !11788, file: !1885, line: 209, column: 41)
!11788 = distinct !DILexicalBlock(scope: !11781, file: !1885, line: 209, column: 2)
!11789 = !DILocation(line: 0, scope: !11762)
!11790 = !DILocation(line: 0, scope: !11781)
!11791 = !DILocation(line: 209, column: 25, scope: !11788)
!11792 = !DILocation(line: 209, column: 2, scope: !11781)
!11793 = distinct !{!11793, !11792, !11794}
!11794 = !DILocation(line: 259, column: 2, scope: !11781)
!11795 = !DILocation(line: 210, column: 17, scope: !11787)
!11796 = !DILocation(line: 234, column: 7, scope: !11786)
!11797 = !DILocation(line: 234, column: 33, scope: !11786)
!11798 = !DILocation(line: 234, column: 7, scope: !11787)
!11799 = !DILocation(line: 235, column: 22, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11786, file: !1885, line: 234, column: 49)
!11801 = !DILocation(line: 235, column: 29, scope: !11800)
!11802 = !DILocation(line: 236, column: 3, scope: !11800)
!11803 = !DILocation(line: 236, column: 14, scope: !11786)
!11804 = !DILocation(line: 239, column: 32, scope: !11783)
!11805 = !DILocation(line: 0, scope: !11783)
!11806 = !DILocation(line: 241, column: 8, scope: !11783)
!11807 = !DILocation(line: 246, column: 3, scope: !11783)
!11808 = !DILocation(line: 252, column: 9, scope: !11787)
!11809 = !DILocation(line: 255, column: 9, scope: !11787)
!11810 = !DILocation(line: 256, column: 11, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11787, file: !1885, line: 256, column: 7)
!11812 = !DILocation(line: 209, column: 37, scope: !11788)
!11813 = !DILocation(line: 256, column: 7, scope: !11787)
!11814 = !DILocation(line: 262, column: 1, scope: !11762)
!11815 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1885, file: !1885, line: 176, type: !11816, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1803, retainedNodes: !11818)
!11816 = !DISubroutineType(types: !11817)
!11817 = !{!107, !152, !152, !152}
!11818 = !{!11819, !11820, !11821, !11822}
!11819 = !DILocalVariable(name: "pin", arg: 1, scope: !11815, file: !1885, line: 176, type: !152)
!11820 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11815, file: !1885, line: 176, type: !152)
!11821 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11815, file: !1885, line: 176, type: !152)
!11822 = !DILocalVariable(name: "port_device", scope: !11815, file: !1885, line: 178, type: !1815)
!11823 = !DILocation(line: 0, scope: !11815)
!11824 = !DILocation(line: 180, column: 22, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11815, file: !1885, line: 180, column: 6)
!11826 = !DILocation(line: 180, column: 6, scope: !11815)
!11827 = !DILocation(line: 180, column: 6, scope: !11825)
!11828 = !DILocation(line: 184, column: 16, scope: !11815)
!11829 = !DILocation(line: 186, column: 19, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11815, file: !1885, line: 186, column: 6)
!11831 = !DILocation(line: 186, column: 28, scope: !11830)
!11832 = !DILocation(line: 186, column: 33, scope: !11830)
!11833 = !DILocation(line: 186, column: 6, scope: !11815)
!11834 = !DILocation(line: 190, column: 43, scope: !11815)
!11835 = !DILocation(line: 190, column: 9, scope: !11815)
!11836 = !DILocation(line: 190, column: 2, scope: !11815)
!11837 = !DILocation(line: 191, column: 1, scope: !11815)
!11838 = distinct !DISubprogram(name: "device_is_ready", scope: !9742, file: !9742, line: 47, type: !11839, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1803, retainedNodes: !11841)
!11839 = !DISubroutineType(types: !11840)
!11840 = !{!145, !1815}
!11841 = !{!11842}
!11842 = !DILocalVariable(name: "dev", arg: 1, scope: !11838, file: !9742, line: 47, type: !1815)
!11843 = !DILocation(line: 0, scope: !11838)
!11844 = !DILocation(line: 55, column: 2, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11838, file: !9742, line: 55, column: 2)
!11846 = !{i64 2149464250}
!11847 = !DILocation(line: 56, column: 9, scope: !11838)
!11848 = !DILocation(line: 56, column: 2, scope: !11838)
!11849 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11839, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1803, retainedNodes: !11850)
!11850 = !{!11851}
!11851 = !DILocalVariable(name: "dev", arg: 1, scope: !11849, file: !247, line: 730, type: !1815)
!11852 = !DILocation(line: 0, scope: !11849)
!11853 = !DILocation(line: 732, column: 9, scope: !11849)
!11854 = !DILocation(line: 732, column: 2, scope: !11849)
!11855 = distinct !DISubprogram(name: "SystemInit", scope: !1934, file: !1934, line: 167, type: !3082, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1893, retainedNodes: !2156)
!11856 = !DILocation(line: 182, column: 1, scope: !11855)
!11857 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1934, file: !1934, line: 220, type: !3082, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1893, retainedNodes: !11858)
!11858 = !{!11859, !11860, !11861, !11862, !11863}
!11859 = !DILocalVariable(name: "tmp", scope: !11857, file: !1934, line: 222, type: !152)
!11860 = !DILocalVariable(name: "pllvco", scope: !11857, file: !1934, line: 222, type: !152)
!11861 = !DILocalVariable(name: "pllp", scope: !11857, file: !1934, line: 222, type: !152)
!11862 = !DILocalVariable(name: "pllsource", scope: !11857, file: !1934, line: 222, type: !152)
!11863 = !DILocalVariable(name: "pllm", scope: !11857, file: !1934, line: 222, type: !152)
!11864 = !DILocation(line: 0, scope: !11857)
!11865 = !DILocation(line: 225, column: 14, scope: !11857)
!11866 = !DILocation(line: 225, column: 19, scope: !11857)
!11867 = !DILocation(line: 227, column: 3, scope: !11857)
!11868 = !DILocation(line: 240, column: 25, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11857, file: !1934, line: 228, column: 3)
!11870 = !DILocation(line: 241, column: 19, scope: !11869)
!11871 = !DILocation(line: 241, column: 27, scope: !11869)
!11872 = !DILocation(line: 0, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11869, file: !1934, line: 243, column: 11)
!11874 = !DILocation(line: 254, column: 22, scope: !11869)
!11875 = !DILocation(line: 254, column: 62, scope: !11869)
!11876 = !DILocation(line: 255, column: 31, scope: !11869)
!11877 = !DILocation(line: 256, column: 7, scope: !11869)
!11878 = !DILocation(line: 0, scope: !11869)
!11879 = !DILocation(line: 263, column: 30, scope: !11857)
!11880 = !DILocation(line: 263, column: 52, scope: !11857)
!11881 = !DILocation(line: 263, column: 9, scope: !11857)
!11882 = !DILocation(line: 265, column: 19, scope: !11857)
!11883 = !DILocation(line: 266, column: 1, scope: !11857)
!11884 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11885, file: !11885, line: 200, type: !11886, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2156)
!11885 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11886 = !DISubroutineType(types: !11887)
!11887 = !{!11888}
!11888 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2897, line: 44, baseType: !2896)
!11889 = !DILocation(line: 202, column: 3, scope: !11884)
!11890 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11885, file: !11885, line: 219, type: !11891, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !11916)
!11891 = !DISubroutineType(types: !11892)
!11892 = !{!11888, !11893}
!11893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11894, size: 32)
!11894 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11895, line: 70, baseType: !11896)
!11895 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11896 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11895, line: 49, size: 416, elements: !11897)
!11897 = !{!11898, !11899, !11900, !11901, !11902, !11903, !11904}
!11898 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11896, file: !11895, line: 51, baseType: !152, size: 32)
!11899 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11896, file: !11895, line: 54, baseType: !152, size: 32, offset: 32)
!11900 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11896, file: !11895, line: 57, baseType: !152, size: 32, offset: 64)
!11901 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11896, file: !11895, line: 60, baseType: !152, size: 32, offset: 96)
!11902 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11896, file: !11895, line: 63, baseType: !152, size: 32, offset: 128)
!11903 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11896, file: !11895, line: 66, baseType: !152, size: 32, offset: 160)
!11904 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11896, file: !11895, line: 69, baseType: !11905, size: 224, offset: 192)
!11905 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11906, line: 73, baseType: !11907)
!11906 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11906, line: 45, size: 224, elements: !11908)
!11908 = !{!11909, !11910, !11911, !11912, !11913, !11914, !11915}
!11909 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11907, file: !11906, line: 47, baseType: !152, size: 32)
!11910 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11907, file: !11906, line: 50, baseType: !152, size: 32, offset: 32)
!11911 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11907, file: !11906, line: 53, baseType: !152, size: 32, offset: 64)
!11912 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11907, file: !11906, line: 56, baseType: !152, size: 32, offset: 96)
!11913 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11907, file: !11906, line: 60, baseType: !152, size: 32, offset: 128)
!11914 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11907, file: !11906, line: 63, baseType: !152, size: 32, offset: 160)
!11915 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !11907, file: !11906, line: 68, baseType: !152, size: 32, offset: 192)
!11916 = !{!11917, !11918, !11919, !11920, !11924}
!11917 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11890, file: !11885, line: 219, type: !11893)
!11918 = !DILocalVariable(name: "tickstart", scope: !11890, file: !11885, line: 221, type: !152)
!11919 = !DILocalVariable(name: "pll_config", scope: !11890, file: !11885, line: 221, type: !152)
!11920 = !DILocalVariable(name: "pwrclkchanged", scope: !11921, file: !11885, line: 391, type: !11923)
!11921 = distinct !DILexicalBlock(scope: !11922, file: !11885, line: 390, column: 3)
!11922 = distinct !DILexicalBlock(scope: !11890, file: !11885, line: 389, column: 6)
!11923 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !960, line: 188, baseType: !2903)
!11924 = !DILocalVariable(name: "tmpreg", scope: !11925, file: !11885, line: 400, type: !227)
!11925 = distinct !DILexicalBlock(scope: !11926, file: !11885, line: 400, column: 7)
!11926 = distinct !DILexicalBlock(scope: !11927, file: !11885, line: 399, column: 5)
!11927 = distinct !DILexicalBlock(scope: !11921, file: !11885, line: 398, column: 8)
!11928 = !DILocation(line: 0, scope: !11890)
!11929 = !DILocation(line: 224, column: 24, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11890, file: !11885, line: 224, column: 6)
!11931 = !DILocation(line: 224, column: 6, scope: !11890)
!11932 = !DILocation(line: 232, column: 27, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11890, file: !11885, line: 232, column: 6)
!11934 = !DILocation(line: 232, column: 43, scope: !11933)
!11935 = !DILocation(line: 232, column: 69, scope: !11933)
!11936 = !DILocation(line: 232, column: 6, scope: !11890)
!11937 = !DILocation(line: 237, column: 9, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11939, file: !11885, line: 237, column: 8)
!11939 = distinct !DILexicalBlock(scope: !11933, file: !11885, line: 233, column: 3)
!11940 = !DILocation(line: 237, column: 39, scope: !11938)
!11941 = !DILocation(line: 237, column: 60, scope: !11938)
!11942 = !DILocation(line: 238, column: 9, scope: !11938)
!11943 = !DILocation(line: 238, column: 39, scope: !11938)
!11944 = !DILocation(line: 238, column: 60, scope: !11938)
!11945 = !DILocation(line: 238, column: 70, scope: !11938)
!11946 = !DILocation(line: 238, column: 78, scope: !11938)
!11947 = !DILocation(line: 238, column: 100, scope: !11938)
!11948 = !DILocation(line: 237, column: 8, scope: !11939)
!11949 = !DILocation(line: 240, column: 11, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11951, file: !11885, line: 240, column: 10)
!11951 = distinct !DILexicalBlock(scope: !11938, file: !11885, line: 239, column: 5)
!11952 = !DILocation(line: 240, column: 57, scope: !11950)
!11953 = !DILocation(line: 240, column: 80, scope: !11950)
!11954 = !DILocation(line: 240, column: 89, scope: !11950)
!11955 = !DILocation(line: 240, column: 10, scope: !11951)
!11956 = !DILocation(line: 248, column: 7, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11958, file: !11885, line: 248, column: 7)
!11958 = distinct !DILexicalBlock(scope: !11959, file: !11885, line: 248, column: 7)
!11959 = distinct !DILexicalBlock(scope: !11938, file: !11885, line: 246, column: 5)
!11960 = !DILocation(line: 248, column: 7, scope: !11958)
!11961 = !DILocation(line: 248, column: 7, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11957, file: !11885, line: 248, column: 7)
!11963 = !DILocation(line: 248, column: 7, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11965, file: !11885, line: 248, column: 7)
!11965 = distinct !DILexicalBlock(scope: !11957, file: !11885, line: 248, column: 7)
!11966 = !DILocation(line: 248, column: 7, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11965, file: !11885, line: 248, column: 7)
!11968 = !DILocation(line: 0, scope: !11957)
!11969 = !DILocation(line: 251, column: 30, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11959, file: !11885, line: 251, column: 10)
!11971 = !DILocation(line: 251, column: 40, scope: !11970)
!11972 = !DILocation(line: 0, scope: !11970)
!11973 = !DILocation(line: 251, column: 10, scope: !11959)
!11974 = !DILocation(line: 257, column: 15, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11970, file: !11885, line: 252, column: 7)
!11976 = !DILocation(line: 257, column: 51, scope: !11975)
!11977 = !DILocation(line: 257, column: 9, scope: !11975)
!11978 = !DILocation(line: 259, column: 15, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11980, file: !11885, line: 259, column: 14)
!11980 = distinct !DILexicalBlock(scope: !11975, file: !11885, line: 258, column: 9)
!11981 = !DILocation(line: 259, column: 29, scope: !11979)
!11982 = !DILocation(line: 259, column: 43, scope: !11979)
!11983 = !DILocation(line: 259, column: 14, scope: !11980)
!11984 = distinct !{!11984, !11977, !11985}
!11985 = !DILocation(line: 263, column: 9, scope: !11975)
!11986 = !DILocation(line: 271, column: 15, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11970, file: !11885, line: 266, column: 7)
!11988 = !DILocation(line: 271, column: 9, scope: !11987)
!11989 = !DILocation(line: 273, column: 15, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11991, file: !11885, line: 273, column: 14)
!11991 = distinct !DILexicalBlock(scope: !11987, file: !11885, line: 272, column: 9)
!11992 = !DILocation(line: 273, column: 29, scope: !11990)
!11993 = !DILocation(line: 273, column: 43, scope: !11990)
!11994 = !DILocation(line: 273, column: 14, scope: !11991)
!11995 = distinct !{!11995, !11988, !11996}
!11996 = !DILocation(line: 277, column: 9, scope: !11987)
!11997 = !DILocation(line: 282, column: 27, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11890, file: !11885, line: 282, column: 6)
!11999 = !DILocation(line: 282, column: 43, scope: !11998)
!12000 = !DILocation(line: 282, column: 69, scope: !11998)
!12001 = !DILocation(line: 282, column: 6, scope: !11890)
!12002 = !DILocation(line: 289, column: 9, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !12004, file: !11885, line: 289, column: 8)
!12004 = distinct !DILexicalBlock(scope: !11998, file: !11885, line: 283, column: 3)
!12005 = !DILocation(line: 289, column: 39, scope: !12003)
!12006 = !DILocation(line: 289, column: 60, scope: !12003)
!12007 = !DILocation(line: 290, column: 9, scope: !12003)
!12008 = !DILocation(line: 290, column: 39, scope: !12003)
!12009 = !DILocation(line: 290, column: 60, scope: !12003)
!12010 = !DILocation(line: 290, column: 70, scope: !12003)
!12011 = !DILocation(line: 290, column: 78, scope: !12003)
!12012 = !DILocation(line: 290, column: 100, scope: !12003)
!12013 = !DILocation(line: 289, column: 8, scope: !12004)
!12014 = !DILocation(line: 293, column: 11, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12016, file: !11885, line: 293, column: 10)
!12016 = distinct !DILexicalBlock(scope: !12003, file: !11885, line: 291, column: 5)
!12017 = !DILocation(line: 293, column: 57, scope: !12015)
!12018 = !DILocation(line: 293, column: 80, scope: !12015)
!12019 = !DILocation(line: 293, column: 89, scope: !12015)
!12020 = !DILocation(line: 293, column: 10, scope: !12016)
!12021 = !DILocation(line: 307, column: 30, scope: !12022)
!12022 = distinct !DILexicalBlock(scope: !12023, file: !11885, line: 307, column: 10)
!12023 = distinct !DILexicalBlock(scope: !12003, file: !11885, line: 305, column: 5)
!12024 = !DILocation(line: 307, column: 39, scope: !12022)
!12025 = !DILocation(line: 307, column: 10, scope: !12023)
!12026 = !DILocation(line: 310, column: 9, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12022, file: !11885, line: 308, column: 7)
!12028 = !DILocation(line: 313, column: 21, scope: !12027)
!12029 = !DILocation(line: 316, column: 9, scope: !12027)
!12030 = !DILocation(line: 316, column: 15, scope: !12027)
!12031 = !DILocation(line: 316, column: 51, scope: !12027)
!12032 = !DILocation(line: 318, column: 15, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !12034, file: !11885, line: 318, column: 14)
!12034 = distinct !DILexicalBlock(scope: !12027, file: !11885, line: 317, column: 9)
!12035 = !DILocation(line: 318, column: 29, scope: !12033)
!12036 = !DILocation(line: 318, column: 43, scope: !12033)
!12037 = !DILocation(line: 318, column: 14, scope: !12034)
!12038 = distinct !{!12038, !12029, !12039}
!12039 = !DILocation(line: 322, column: 9, scope: !12027)
!12040 = !DILocation(line: 330, column: 9, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12022, file: !11885, line: 328, column: 7)
!12042 = !DILocation(line: 333, column: 21, scope: !12041)
!12043 = !DILocation(line: 336, column: 9, scope: !12041)
!12044 = !DILocation(line: 336, column: 15, scope: !12041)
!12045 = !DILocation(line: 338, column: 15, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12047, file: !11885, line: 338, column: 14)
!12047 = distinct !DILexicalBlock(scope: !12041, file: !11885, line: 337, column: 9)
!12048 = !DILocation(line: 338, column: 29, scope: !12046)
!12049 = !DILocation(line: 338, column: 43, scope: !12046)
!12050 = !DILocation(line: 338, column: 14, scope: !12047)
!12051 = distinct !{!12051, !12043, !12052}
!12052 = !DILocation(line: 342, column: 9, scope: !12041)
!12053 = !DILocation(line: 0, scope: !12003)
!12054 = !DILocation(line: 347, column: 27, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !11890, file: !11885, line: 347, column: 6)
!12056 = !DILocation(line: 347, column: 43, scope: !12055)
!12057 = !DILocation(line: 347, column: 69, scope: !12055)
!12058 = !DILocation(line: 347, column: 6, scope: !11890)
!12059 = !DILocation(line: 353, column: 28, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12061, file: !11885, line: 353, column: 8)
!12061 = distinct !DILexicalBlock(scope: !12055, file: !11885, line: 348, column: 3)
!12062 = !DILocation(line: 353, column: 37, scope: !12060)
!12063 = !DILocation(line: 353, column: 8, scope: !12061)
!12064 = !DILocation(line: 356, column: 7, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12060, file: !11885, line: 354, column: 5)
!12066 = !DILocation(line: 359, column: 19, scope: !12065)
!12067 = !DILocation(line: 362, column: 7, scope: !12065)
!12068 = !DILocation(line: 362, column: 13, scope: !12065)
!12069 = !DILocation(line: 362, column: 49, scope: !12065)
!12070 = !DILocation(line: 364, column: 13, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12072, file: !11885, line: 364, column: 12)
!12072 = distinct !DILexicalBlock(scope: !12065, file: !11885, line: 363, column: 7)
!12073 = !DILocation(line: 364, column: 27, scope: !12071)
!12074 = !DILocation(line: 364, column: 41, scope: !12071)
!12075 = !DILocation(line: 364, column: 12, scope: !12072)
!12076 = distinct !{!12076, !12067, !12077}
!12077 = !DILocation(line: 368, column: 7, scope: !12065)
!12078 = !DILocation(line: 373, column: 7, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12060, file: !11885, line: 371, column: 5)
!12080 = !DILocation(line: 376, column: 19, scope: !12079)
!12081 = !DILocation(line: 379, column: 7, scope: !12079)
!12082 = !DILocation(line: 379, column: 13, scope: !12079)
!12083 = !DILocation(line: 381, column: 13, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !12085, file: !11885, line: 381, column: 12)
!12085 = distinct !DILexicalBlock(scope: !12079, file: !11885, line: 380, column: 7)
!12086 = !DILocation(line: 381, column: 27, scope: !12084)
!12087 = !DILocation(line: 381, column: 41, scope: !12084)
!12088 = !DILocation(line: 381, column: 12, scope: !12085)
!12089 = distinct !{!12089, !12081, !12090}
!12090 = !DILocation(line: 385, column: 7, scope: !12079)
!12091 = !DILocation(line: 389, column: 27, scope: !11922)
!12092 = !DILocation(line: 389, column: 43, scope: !11922)
!12093 = !DILocation(line: 389, column: 69, scope: !11922)
!12094 = !DILocation(line: 389, column: 6, scope: !11890)
!12095 = !DILocation(line: 0, scope: !11921)
!12096 = !DILocation(line: 398, column: 8, scope: !11927)
!12097 = !DILocation(line: 398, column: 8, scope: !11921)
!12098 = !DILocation(line: 400, column: 7, scope: !11925)
!12099 = !DILocation(line: 400, column: 7, scope: !11926)
!12100 = !DILocation(line: 402, column: 5, scope: !11926)
!12101 = !DILocation(line: 404, column: 8, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !11921, file: !11885, line: 404, column: 8)
!12103 = !DILocation(line: 404, column: 8, scope: !11921)
!12104 = !DILocation(line: 407, column: 7, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12102, file: !11885, line: 405, column: 5)
!12106 = !DILocation(line: 410, column: 19, scope: !12105)
!12107 = !DILocation(line: 412, column: 7, scope: !12105)
!12108 = !DILocation(line: 412, column: 13, scope: !12105)
!12109 = !DILocation(line: 414, column: 13, scope: !12110)
!12110 = distinct !DILexicalBlock(scope: !12111, file: !11885, line: 414, column: 12)
!12111 = distinct !DILexicalBlock(scope: !12105, file: !11885, line: 413, column: 7)
!12112 = !DILocation(line: 414, column: 27, scope: !12110)
!12113 = !DILocation(line: 414, column: 40, scope: !12110)
!12114 = !DILocation(line: 414, column: 12, scope: !12111)
!12115 = distinct !{!12115, !12107, !12116}
!12116 = !DILocation(line: 418, column: 7, scope: !12105)
!12117 = !DILocation(line: 422, column: 5, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12119, file: !11885, line: 422, column: 5)
!12119 = distinct !DILexicalBlock(scope: !11921, file: !11885, line: 422, column: 5)
!12120 = !DILocation(line: 422, column: 5, scope: !12119)
!12121 = !DILocation(line: 422, column: 5, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12118, file: !11885, line: 422, column: 5)
!12123 = !DILocation(line: 422, column: 5, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12125, file: !11885, line: 422, column: 5)
!12125 = distinct !DILexicalBlock(scope: !12118, file: !11885, line: 422, column: 5)
!12126 = !DILocation(line: 422, column: 5, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12125, file: !11885, line: 422, column: 5)
!12128 = !DILocation(line: 0, scope: !12118)
!12129 = !DILocation(line: 424, column: 28, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !11921, file: !11885, line: 424, column: 8)
!12131 = !DILocation(line: 424, column: 38, scope: !12130)
!12132 = !DILocation(line: 0, scope: !12130)
!12133 = !DILocation(line: 424, column: 8, scope: !11921)
!12134 = !DILocation(line: 430, column: 13, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !12130, file: !11885, line: 425, column: 5)
!12136 = !DILocation(line: 430, column: 49, scope: !12135)
!12137 = !DILocation(line: 430, column: 7, scope: !12135)
!12138 = !DILocation(line: 432, column: 13, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12140, file: !11885, line: 432, column: 12)
!12140 = distinct !DILexicalBlock(scope: !12135, file: !11885, line: 431, column: 7)
!12141 = !DILocation(line: 432, column: 27, scope: !12139)
!12142 = !DILocation(line: 432, column: 41, scope: !12139)
!12143 = !DILocation(line: 432, column: 12, scope: !12140)
!12144 = distinct !{!12144, !12137, !12145}
!12145 = !DILocation(line: 436, column: 7, scope: !12135)
!12146 = !DILocation(line: 444, column: 13, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12130, file: !11885, line: 439, column: 5)
!12148 = !DILocation(line: 444, column: 7, scope: !12147)
!12149 = !DILocation(line: 446, column: 13, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12151, file: !11885, line: 446, column: 12)
!12151 = distinct !DILexicalBlock(scope: !12147, file: !11885, line: 445, column: 7)
!12152 = !DILocation(line: 446, column: 27, scope: !12150)
!12153 = !DILocation(line: 446, column: 41, scope: !12150)
!12154 = !DILocation(line: 446, column: 12, scope: !12151)
!12155 = distinct !{!12155, !12148, !12156}
!12156 = !DILocation(line: 450, column: 7, scope: !12147)
!12157 = !DILocation(line: 454, column: 8, scope: !11921)
!12158 = !DILocation(line: 456, column: 7, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !12160, file: !11885, line: 455, column: 5)
!12160 = distinct !DILexicalBlock(scope: !11921, file: !11885, line: 454, column: 8)
!12161 = !DILocation(line: 457, column: 5, scope: !12159)
!12162 = !DILocation(line: 462, column: 31, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !11890, file: !11885, line: 462, column: 7)
!12164 = !DILocation(line: 462, column: 41, scope: !12163)
!12165 = !DILocation(line: 462, column: 7, scope: !11890)
!12166 = !DILocation(line: 465, column: 8, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12168, file: !11885, line: 465, column: 8)
!12168 = distinct !DILexicalBlock(scope: !12163, file: !11885, line: 463, column: 3)
!12169 = !DILocation(line: 465, column: 38, scope: !12167)
!12170 = !DILocation(line: 465, column: 8, scope: !12168)
!12171 = !DILocation(line: 467, column: 44, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12173, file: !11885, line: 467, column: 10)
!12173 = distinct !DILexicalBlock(scope: !12167, file: !11885, line: 466, column: 5)
!12174 = !DILocation(line: 0, scope: !12172)
!12175 = !DILocation(line: 467, column: 10, scope: !12173)
!12176 = !DILocation(line: 483, column: 15, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12172, file: !11885, line: 468, column: 7)
!12178 = !DILocation(line: 483, column: 9, scope: !12177)
!12179 = !DILocation(line: 485, column: 15, scope: !12180)
!12180 = distinct !DILexicalBlock(scope: !12181, file: !11885, line: 485, column: 14)
!12181 = distinct !DILexicalBlock(scope: !12177, file: !11885, line: 484, column: 9)
!12182 = !DILocation(line: 485, column: 29, scope: !12180)
!12183 = !DILocation(line: 485, column: 43, scope: !12180)
!12184 = !DILocation(line: 485, column: 14, scope: !12181)
!12185 = distinct !{!12185, !12178, !12186}
!12186 = !DILocation(line: 489, column: 9, scope: !12177)
!12187 = !DILocation(line: 492, column: 9, scope: !12177)
!12188 = !DILocation(line: 498, column: 9, scope: !12177)
!12189 = !DILocation(line: 501, column: 21, scope: !12177)
!12190 = !DILocation(line: 504, column: 9, scope: !12177)
!12191 = !DILocation(line: 504, column: 15, scope: !12177)
!12192 = !DILocation(line: 504, column: 51, scope: !12177)
!12193 = !DILocation(line: 506, column: 15, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12195, file: !11885, line: 506, column: 14)
!12195 = distinct !DILexicalBlock(scope: !12177, file: !11885, line: 505, column: 9)
!12196 = !DILocation(line: 506, column: 29, scope: !12194)
!12197 = !DILocation(line: 506, column: 43, scope: !12194)
!12198 = !DILocation(line: 506, column: 14, scope: !12195)
!12199 = distinct !{!12199, !12190, !12200}
!12200 = !DILocation(line: 510, column: 9, scope: !12177)
!12201 = !DILocation(line: 521, column: 15, scope: !12202)
!12202 = distinct !DILexicalBlock(scope: !12172, file: !11885, line: 513, column: 7)
!12203 = !DILocation(line: 521, column: 9, scope: !12202)
!12204 = !DILocation(line: 523, column: 15, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12206, file: !11885, line: 523, column: 14)
!12206 = distinct !DILexicalBlock(scope: !12202, file: !11885, line: 522, column: 9)
!12207 = !DILocation(line: 523, column: 29, scope: !12205)
!12208 = !DILocation(line: 523, column: 43, scope: !12205)
!12209 = !DILocation(line: 523, column: 14, scope: !12206)
!12210 = distinct !{!12210, !12203, !12211}
!12211 = !DILocation(line: 527, column: 9, scope: !12202)
!12212 = !DILocation(line: 533, column: 44, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12214, file: !11885, line: 533, column: 10)
!12214 = distinct !DILexicalBlock(scope: !12167, file: !11885, line: 531, column: 5)
!12215 = !DILocation(line: 533, column: 10, scope: !12214)
!12216 = !DILocation(line: 540, column: 27, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12213, file: !11885, line: 538, column: 7)
!12218 = !DILocation(line: 543, column: 14, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12217, file: !11885, line: 542, column: 13)
!12220 = !DILocation(line: 543, column: 81, scope: !12219)
!12221 = !DILocation(line: 543, column: 55, scope: !12219)
!12222 = !DILocation(line: 543, column: 92, scope: !12219)
!12223 = !DILocation(line: 544, column: 14, scope: !12219)
!12224 = !DILocation(line: 544, column: 80, scope: !12219)
!12225 = !DILocation(line: 544, column: 53, scope: !12219)
!12226 = !DILocation(line: 544, column: 111, scope: !12219)
!12227 = !DILocation(line: 545, column: 14, scope: !12219)
!12228 = !DILocation(line: 545, column: 80, scope: !12219)
!12229 = !DILocation(line: 545, column: 86, scope: !12219)
!12230 = !DILocation(line: 545, column: 53, scope: !12219)
!12231 = !DILocation(line: 545, column: 111, scope: !12219)
!12232 = !DILocation(line: 546, column: 14, scope: !12219)
!12233 = !DILocation(line: 546, column: 82, scope: !12219)
!12234 = !DILocation(line: 546, column: 101, scope: !12219)
!12235 = !DILocation(line: 546, column: 53, scope: !12219)
!12236 = !DILocation(line: 546, column: 126, scope: !12219)
!12237 = !DILocation(line: 547, column: 14, scope: !12219)
!12238 = !DILocation(line: 547, column: 80, scope: !12219)
!12239 = !DILocation(line: 547, column: 85, scope: !12219)
!12240 = !DILocation(line: 547, column: 53, scope: !12219)
!12241 = !DILocation(line: 547, column: 111, scope: !12219)
!12242 = !DILocation(line: 548, column: 14, scope: !12219)
!12243 = !DILocation(line: 548, column: 80, scope: !12219)
!12244 = !DILocation(line: 548, column: 85, scope: !12219)
!12245 = !DILocation(line: 548, column: 53, scope: !12219)
!12246 = !DILocation(line: 542, column: 13, scope: !12217)
!12247 = !DILocation(line: 563, column: 3, scope: !11890)
!12248 = !DILocation(line: 564, column: 1, scope: !11890)
!12249 = !DISubprogram(name: "HAL_GetTick", scope: !12250, file: !12250, line: 234, type: !6344, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!12250 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12251 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11885, file: !11885, line: 591, type: !12252, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !12263)
!12252 = !DISubroutineType(types: !12253)
!12253 = !{!11888, !12254, !152}
!12254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12255, size: 32)
!12255 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11895, line: 92, baseType: !12256)
!12256 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11895, line: 75, size: 160, elements: !12257)
!12257 = !{!12258, !12259, !12260, !12261, !12262}
!12258 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12256, file: !11895, line: 77, baseType: !152, size: 32)
!12259 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12256, file: !11895, line: 80, baseType: !152, size: 32, offset: 32)
!12260 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12256, file: !11895, line: 83, baseType: !152, size: 32, offset: 64)
!12261 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12256, file: !11895, line: 86, baseType: !152, size: 32, offset: 96)
!12262 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12256, file: !11895, line: 89, baseType: !152, size: 32, offset: 128)
!12263 = !{!12264, !12265, !12266}
!12264 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12251, file: !11885, line: 591, type: !12254)
!12265 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12251, file: !11885, line: 591, type: !152)
!12266 = !DILocalVariable(name: "tickstart", scope: !12251, file: !11885, line: 593, type: !152)
!12267 = !DILocation(line: 0, scope: !12251)
!12268 = !DILocation(line: 596, column: 24, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12251, file: !11885, line: 596, column: 6)
!12270 = !DILocation(line: 596, column: 6, scope: !12251)
!12271 = !DILocation(line: 610, column: 17, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12251, file: !11885, line: 610, column: 6)
!12273 = !DILocation(line: 610, column: 15, scope: !12272)
!12274 = !DILocation(line: 610, column: 6, scope: !12251)
!12275 = !DILocation(line: 613, column: 5, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12272, file: !11885, line: 611, column: 3)
!12277 = !DILocation(line: 617, column: 8, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12276, file: !11885, line: 617, column: 8)
!12279 = !DILocation(line: 617, column: 34, scope: !12278)
!12280 = !DILocation(line: 617, column: 8, scope: !12276)
!12281 = !DILocation(line: 624, column: 27, scope: !12282)
!12282 = distinct !DILexicalBlock(scope: !12251, file: !11885, line: 624, column: 6)
!12283 = !DILocation(line: 624, column: 38, scope: !12282)
!12284 = !DILocation(line: 624, column: 60, scope: !12282)
!12285 = !DILocation(line: 624, column: 6, scope: !12251)
!12286 = !DILocation(line: 628, column: 40, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12288, file: !11885, line: 628, column: 8)
!12288 = distinct !DILexicalBlock(scope: !12282, file: !11885, line: 625, column: 3)
!12289 = !DILocation(line: 628, column: 63, scope: !12287)
!12290 = !DILocation(line: 628, column: 8, scope: !12288)
!12291 = !DILocation(line: 630, column: 7, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12287, file: !11885, line: 629, column: 5)
!12293 = !DILocation(line: 633, column: 29, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12288, file: !11885, line: 633, column: 8)
!12295 = !DILocation(line: 631, column: 5, scope: !12292)
!12296 = !DILocation(line: 633, column: 40, scope: !12294)
!12297 = !DILocation(line: 633, column: 63, scope: !12294)
!12298 = !DILocation(line: 633, column: 8, scope: !12288)
!12299 = !DILocation(line: 635, column: 7, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12294, file: !11885, line: 634, column: 5)
!12301 = !DILocation(line: 636, column: 5, scope: !12300)
!12302 = !DILocation(line: 639, column: 5, scope: !12288)
!12303 = !DILocation(line: 643, column: 27, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12251, file: !11885, line: 643, column: 6)
!12305 = !DILocation(line: 640, column: 3, scope: !12288)
!12306 = !DILocation(line: 643, column: 38, scope: !12304)
!12307 = !DILocation(line: 643, column: 62, scope: !12304)
!12308 = !DILocation(line: 643, column: 6, scope: !12251)
!12309 = !DILocation(line: 648, column: 27, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12311, file: !11885, line: 648, column: 8)
!12311 = distinct !DILexicalBlock(scope: !12304, file: !11885, line: 644, column: 3)
!12312 = !DILocation(line: 648, column: 8, scope: !12311)
!12313 = !DILocation(line: 651, column: 10, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12315, file: !11885, line: 651, column: 10)
!12315 = distinct !DILexicalBlock(scope: !12310, file: !11885, line: 649, column: 5)
!12316 = !DILocation(line: 651, column: 46, scope: !12314)
!12317 = !DILocation(line: 651, column: 10, scope: !12315)
!12318 = !DILocation(line: 661, column: 10, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12320, file: !11885, line: 661, column: 10)
!12320 = distinct !DILexicalBlock(scope: !12321, file: !11885, line: 659, column: 5)
!12321 = distinct !DILexicalBlock(scope: !12310, file: !11885, line: 657, column: 13)
!12322 = !DILocation(line: 661, column: 46, scope: !12319)
!12323 = !DILocation(line: 661, column: 10, scope: !12320)
!12324 = !DILocation(line: 670, column: 10, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12326, file: !11885, line: 670, column: 10)
!12326 = distinct !DILexicalBlock(scope: !12321, file: !11885, line: 668, column: 5)
!12327 = !DILocation(line: 670, column: 46, scope: !12325)
!12328 = !DILocation(line: 670, column: 10, scope: !12326)
!12329 = !DILocation(line: 676, column: 5, scope: !12311)
!12330 = !DILocation(line: 679, column: 17, scope: !12311)
!12331 = !DILocation(line: 681, column: 5, scope: !12311)
!12332 = !DILocation(line: 681, column: 12, scope: !12311)
!12333 = !DILocation(line: 681, column: 65, scope: !12311)
!12334 = !DILocation(line: 681, column: 78, scope: !12311)
!12335 = !DILocation(line: 681, column: 42, scope: !12311)
!12336 = !DILocation(line: 683, column: 12, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12338, file: !11885, line: 683, column: 11)
!12338 = distinct !DILexicalBlock(scope: !12311, file: !11885, line: 682, column: 5)
!12339 = !DILocation(line: 683, column: 26, scope: !12337)
!12340 = !DILocation(line: 683, column: 39, scope: !12337)
!12341 = !DILocation(line: 683, column: 11, scope: !12338)
!12342 = distinct !{!12342, !12331, !12343}
!12343 = !DILocation(line: 687, column: 5, scope: !12311)
!12344 = !DILocation(line: 691, column: 17, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12251, file: !11885, line: 691, column: 6)
!12346 = !DILocation(line: 691, column: 15, scope: !12345)
!12347 = !DILocation(line: 691, column: 6, scope: !12251)
!12348 = !DILocation(line: 694, column: 5, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12345, file: !11885, line: 692, column: 3)
!12350 = !DILocation(line: 698, column: 8, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12349, file: !11885, line: 698, column: 8)
!12352 = !DILocation(line: 698, column: 34, scope: !12351)
!12353 = !DILocation(line: 698, column: 8, scope: !12349)
!12354 = !DILocation(line: 705, column: 27, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12251, file: !11885, line: 705, column: 6)
!12356 = !DILocation(line: 705, column: 38, scope: !12355)
!12357 = !DILocation(line: 705, column: 61, scope: !12355)
!12358 = !DILocation(line: 705, column: 6, scope: !12251)
!12359 = !DILocation(line: 708, column: 5, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12355, file: !11885, line: 706, column: 3)
!12361 = !DILocation(line: 712, column: 27, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12251, file: !11885, line: 712, column: 6)
!12363 = !DILocation(line: 709, column: 3, scope: !12360)
!12364 = !DILocation(line: 712, column: 38, scope: !12362)
!12365 = !DILocation(line: 712, column: 61, scope: !12362)
!12366 = !DILocation(line: 712, column: 6, scope: !12251)
!12367 = !DILocation(line: 715, column: 5, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12362, file: !11885, line: 713, column: 3)
!12369 = !DILocation(line: 716, column: 3, scope: !12368)
!12370 = !DILocation(line: 719, column: 21, scope: !12251)
!12371 = !DILocation(line: 719, column: 70, scope: !12251)
!12372 = !DILocation(line: 719, column: 91, scope: !12251)
!12373 = !DILocation(line: 719, column: 50, scope: !12251)
!12374 = !DILocation(line: 719, column: 47, scope: !12251)
!12375 = !DILocation(line: 719, column: 19, scope: !12251)
!12376 = !DILocation(line: 722, column: 17, scope: !12251)
!12377 = !DILocation(line: 722, column: 3, scope: !12251)
!12378 = !DILocation(line: 724, column: 3, scope: !12251)
!12379 = !DILocation(line: 725, column: 1, scope: !12251)
!12380 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11885, file: !11885, line: 885, type: !6344, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !12381)
!12381 = !{!12382, !12383, !12384, !12385}
!12382 = !DILocalVariable(name: "pllm", scope: !12380, file: !11885, line: 887, type: !152)
!12383 = !DILocalVariable(name: "pllvco", scope: !12380, file: !11885, line: 887, type: !152)
!12384 = !DILocalVariable(name: "pllp", scope: !12380, file: !11885, line: 887, type: !152)
!12385 = !DILocalVariable(name: "sysclockfreq", scope: !12380, file: !11885, line: 888, type: !152)
!12386 = !DILocation(line: 0, scope: !12380)
!12387 = !DILocation(line: 891, column: 16, scope: !12380)
!12388 = !DILocation(line: 891, column: 21, scope: !12380)
!12389 = !DILocation(line: 891, column: 3, scope: !12380)
!12390 = !DILocation(line: 907, column: 19, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12392, file: !11885, line: 904, column: 5)
!12392 = distinct !DILexicalBlock(scope: !12380, file: !11885, line: 892, column: 3)
!12393 = !DILocation(line: 907, column: 27, scope: !12391)
!12394 = !DILocation(line: 908, column: 10, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12391, file: !11885, line: 908, column: 10)
!12396 = !DILocation(line: 0, scope: !12395)
!12397 = !DILocation(line: 918, column: 23, scope: !12391)
!12398 = !DILocation(line: 918, column: 82, scope: !12391)
!12399 = !DILocation(line: 920, column: 28, scope: !12391)
!12400 = !DILocation(line: 921, column: 7, scope: !12391)
!12401 = !DILocation(line: 0, scope: !12392)
!12402 = !DILocation(line: 929, column: 3, scope: !12380)
!12403 = !DISubprogram(name: "HAL_InitTick", scope: !12250, file: !12250, line: 223, type: !12404, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!12404 = !DISubroutineType(types: !12405)
!12405 = !{!11888, !152}
!12406 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11885, file: !11885, line: 775, type: !12407, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !12409)
!12407 = !DISubroutineType(types: !12408)
!12408 = !{null, !152, !152, !152}
!12409 = !{!12410, !12411, !12412, !12413, !12423}
!12410 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12406, file: !11885, line: 775, type: !152)
!12411 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12406, file: !11885, line: 775, type: !152)
!12412 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12406, file: !11885, line: 775, type: !152)
!12413 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12406, file: !11885, line: 777, type: !12414)
!12414 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12415, line: 62, baseType: !12416)
!12415 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12416 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12415, line: 46, size: 160, elements: !12417)
!12417 = !{!12418, !12419, !12420, !12421, !12422}
!12418 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12416, file: !12415, line: 48, baseType: !152, size: 32)
!12419 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12416, file: !12415, line: 51, baseType: !152, size: 32, offset: 32)
!12420 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12416, file: !12415, line: 54, baseType: !152, size: 32, offset: 64)
!12421 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12416, file: !12415, line: 57, baseType: !152, size: 32, offset: 96)
!12422 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12416, file: !12415, line: 60, baseType: !152, size: 32, offset: 128)
!12423 = !DILocalVariable(name: "tmpreg", scope: !12424, file: !11885, line: 787, type: !227)
!12424 = distinct !DILexicalBlock(scope: !12425, file: !11885, line: 787, column: 5)
!12425 = distinct !DILexicalBlock(scope: !12426, file: !11885, line: 783, column: 3)
!12426 = distinct !DILexicalBlock(scope: !12406, file: !11885, line: 782, column: 6)
!12427 = !DILocation(line: 0, scope: !12406)
!12428 = !DILocation(line: 777, column: 3, scope: !12406)
!12429 = !DILocation(line: 777, column: 20, scope: !12406)
!12430 = !DILocation(line: 782, column: 15, scope: !12426)
!12431 = !DILocation(line: 782, column: 6, scope: !12406)
!12432 = !DILocation(line: 787, column: 5, scope: !12424)
!12433 = !DILocation(line: 787, column: 5, scope: !12425)
!12434 = !DILocation(line: 790, column: 21, scope: !12425)
!12435 = !DILocation(line: 790, column: 25, scope: !12425)
!12436 = !DILocation(line: 791, column: 21, scope: !12425)
!12437 = !DILocation(line: 791, column: 26, scope: !12425)
!12438 = !DILocation(line: 792, column: 21, scope: !12425)
!12439 = !DILocation(line: 792, column: 27, scope: !12425)
!12440 = !DILocation(line: 793, column: 21, scope: !12425)
!12441 = !DILocation(line: 793, column: 26, scope: !12425)
!12442 = !DILocation(line: 794, column: 21, scope: !12425)
!12443 = !DILocation(line: 794, column: 31, scope: !12425)
!12444 = !DILocation(line: 795, column: 5, scope: !12425)
!12445 = !DILocation(line: 798, column: 5, scope: !12425)
!12446 = !DILocation(line: 804, column: 3, scope: !12425)
!12447 = !DILocation(line: 830, column: 1, scope: !12406)
!12448 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12415, file: !12415, line: 224, type: !12449, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!12449 = !DISubroutineType(types: !12450)
!12450 = !{null, !2965, !12451}
!12451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12414, size: 32)
!12452 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11885, file: !11885, line: 841, type: !3082, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2156)
!12453 = !DILocation(line: 843, column: 38, scope: !12452)
!12454 = !DILocation(line: 844, column: 1, scope: !12452)
!12455 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11885, file: !11885, line: 850, type: !3082, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2156)
!12456 = !DILocation(line: 852, column: 38, scope: !12455)
!12457 = !DILocation(line: 853, column: 1, scope: !12455)
!12458 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11885, file: !11885, line: 941, type: !6344, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2156)
!12459 = !DILocation(line: 943, column: 10, scope: !12458)
!12460 = !DILocation(line: 943, column: 3, scope: !12458)
!12461 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11885, file: !11885, line: 952, type: !6344, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2156)
!12462 = !DILocation(line: 955, column: 11, scope: !12461)
!12463 = !DILocation(line: 955, column: 56, scope: !12461)
!12464 = !DILocation(line: 955, column: 78, scope: !12461)
!12465 = !DILocation(line: 955, column: 36, scope: !12461)
!12466 = !DILocation(line: 955, column: 33, scope: !12461)
!12467 = !DILocation(line: 955, column: 3, scope: !12461)
!12468 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11885, file: !11885, line: 964, type: !6344, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2156)
!12469 = !DILocation(line: 967, column: 11, scope: !12468)
!12470 = !DILocation(line: 967, column: 55, scope: !12468)
!12471 = !DILocation(line: 967, column: 77, scope: !12468)
!12472 = !DILocation(line: 967, column: 35, scope: !12468)
!12473 = !DILocation(line: 967, column: 32, scope: !12468)
!12474 = !DILocation(line: 967, column: 3, scope: !12468)
!12475 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11885, file: !11885, line: 977, type: !12476, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !12478)
!12476 = !DISubroutineType(types: !12477)
!12477 = !{null, !11893}
!12478 = !{!12479}
!12479 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12475, file: !11885, line: 977, type: !11893)
!12480 = !DILocation(line: 0, scope: !12475)
!12481 = !DILocation(line: 980, column: 22, scope: !12475)
!12482 = !DILocation(line: 980, column: 37, scope: !12475)
!12483 = !DILocation(line: 983, column: 12, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12475, file: !11885, line: 983, column: 6)
!12485 = !DILocation(line: 983, column: 15, scope: !12484)
!12486 = !DILocation(line: 983, column: 31, scope: !12484)
!12487 = !DILocation(line: 983, column: 6, scope: !12475)
!12488 = !DILocation(line: 985, column: 24, scope: !12489)
!12489 = distinct !DILexicalBlock(scope: !12484, file: !11885, line: 984, column: 3)
!12490 = !DILocation(line: 985, column: 33, scope: !12489)
!12491 = !DILocation(line: 986, column: 3, scope: !12489)
!12492 = !DILocation(line: 987, column: 17, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12484, file: !11885, line: 987, column: 11)
!12494 = !DILocation(line: 987, column: 20, scope: !12493)
!12495 = !DILocation(line: 987, column: 35, scope: !12493)
!12496 = !DILocation(line: 0, scope: !12493)
!12497 = !DILocation(line: 987, column: 11, scope: !12484)
!12498 = !DILocation(line: 989, column: 33, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12493, file: !11885, line: 988, column: 3)
!12500 = !DILocation(line: 990, column: 3, scope: !12499)
!12501 = !DILocation(line: 993, column: 33, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !12493, file: !11885, line: 992, column: 3)
!12503 = !DILocation(line: 997, column: 12, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12475, file: !11885, line: 997, column: 6)
!12505 = !DILocation(line: 997, column: 15, scope: !12504)
!12506 = !DILocation(line: 1003, column: 24, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12504, file: !11885, line: 1002, column: 3)
!12508 = !DILocation(line: 1003, column: 33, scope: !12507)
!12509 = !DILocation(line: 1006, column: 61, scope: !12475)
!12510 = !DILocation(line: 1006, column: 81, scope: !12475)
!12511 = !DILocation(line: 1006, column: 22, scope: !12475)
!12512 = !DILocation(line: 1006, column: 42, scope: !12475)
!12513 = !DILocation(line: 1009, column: 12, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12475, file: !11885, line: 1009, column: 6)
!12515 = !DILocation(line: 1009, column: 17, scope: !12514)
!12516 = !DILocation(line: 1009, column: 35, scope: !12514)
!12517 = !DILocation(line: 1009, column: 6, scope: !12475)
!12518 = !DILocation(line: 1011, column: 24, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12514, file: !11885, line: 1010, column: 3)
!12520 = !DILocation(line: 1011, column: 33, scope: !12519)
!12521 = !DILocation(line: 1012, column: 3, scope: !12519)
!12522 = !DILocation(line: 1013, column: 17, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12514, file: !11885, line: 1013, column: 11)
!12524 = !DILocation(line: 1013, column: 22, scope: !12523)
!12525 = !DILocation(line: 1013, column: 39, scope: !12523)
!12526 = !DILocation(line: 0, scope: !12523)
!12527 = !DILocation(line: 1013, column: 11, scope: !12514)
!12528 = !DILocation(line: 1015, column: 33, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12523, file: !11885, line: 1014, column: 3)
!12530 = !DILocation(line: 1016, column: 3, scope: !12529)
!12531 = !DILocation(line: 1019, column: 33, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12523, file: !11885, line: 1018, column: 3)
!12533 = !DILocation(line: 1023, column: 12, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12475, file: !11885, line: 1023, column: 6)
!12535 = !DILocation(line: 1023, column: 16, scope: !12534)
!12536 = !DILocation(line: 1029, column: 24, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12534, file: !11885, line: 1028, column: 3)
!12538 = !DILocation(line: 1029, column: 33, scope: !12537)
!12539 = !DILocation(line: 1033, column: 12, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12475, file: !11885, line: 1033, column: 6)
!12541 = !DILocation(line: 1033, column: 15, scope: !12540)
!12542 = !DILocation(line: 1033, column: 30, scope: !12540)
!12543 = !DILocation(line: 1033, column: 6, scope: !12475)
!12544 = !DILocation(line: 1039, column: 28, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12540, file: !11885, line: 1038, column: 3)
!12546 = !DILocation(line: 1039, column: 37, scope: !12545)
!12547 = !DILocation(line: 1041, column: 54, scope: !12475)
!12548 = !DILocation(line: 1041, column: 62, scope: !12475)
!12549 = !DILocation(line: 1041, column: 26, scope: !12475)
!12550 = !DILocation(line: 1041, column: 36, scope: !12475)
!12551 = !DILocation(line: 1042, column: 49, scope: !12475)
!12552 = !DILocation(line: 1042, column: 57, scope: !12475)
!12553 = !DILocation(line: 1042, column: 26, scope: !12475)
!12554 = !DILocation(line: 1042, column: 31, scope: !12475)
!12555 = !DILocation(line: 1043, column: 50, scope: !12475)
!12556 = !DILocation(line: 1043, column: 78, scope: !12475)
!12557 = !DILocation(line: 1043, column: 26, scope: !12475)
!12558 = !DILocation(line: 1043, column: 31, scope: !12475)
!12559 = !DILocation(line: 1044, column: 52, scope: !12475)
!12560 = !DILocation(line: 1044, column: 102, scope: !12475)
!12561 = !DILocation(line: 1044, column: 109, scope: !12475)
!12562 = !DILocation(line: 1044, column: 26, scope: !12475)
!12563 = !DILocation(line: 1044, column: 31, scope: !12475)
!12564 = !DILocation(line: 1045, column: 50, scope: !12475)
!12565 = !DILocation(line: 1045, column: 78, scope: !12475)
!12566 = !DILocation(line: 1045, column: 26, scope: !12475)
!12567 = !DILocation(line: 1045, column: 31, scope: !12475)
!12568 = !DILocation(line: 1046, column: 1, scope: !12475)
!12569 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11885, file: !11885, line: 1056, type: !12570, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !12572)
!12570 = !DISubroutineType(types: !12571)
!12571 = !{null, !12254, !1014}
!12572 = !{!12573, !12574}
!12573 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12569, file: !11885, line: 1056, type: !12254)
!12574 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12569, file: !11885, line: 1056, type: !1014)
!12575 = !DILocation(line: 0, scope: !12569)
!12576 = !DILocation(line: 1059, column: 22, scope: !12569)
!12577 = !DILocation(line: 1059, column: 32, scope: !12569)
!12578 = !DILocation(line: 1062, column: 53, scope: !12569)
!12579 = !DILocation(line: 1062, column: 58, scope: !12569)
!12580 = !DILocation(line: 1062, column: 22, scope: !12569)
!12581 = !DILocation(line: 1062, column: 35, scope: !12569)
!12582 = !DILocation(line: 1065, column: 54, scope: !12569)
!12583 = !DILocation(line: 1065, column: 59, scope: !12569)
!12584 = !DILocation(line: 1065, column: 22, scope: !12569)
!12585 = !DILocation(line: 1065, column: 36, scope: !12569)
!12586 = !DILocation(line: 1068, column: 55, scope: !12569)
!12587 = !DILocation(line: 1068, column: 60, scope: !12569)
!12588 = !DILocation(line: 1068, column: 22, scope: !12569)
!12589 = !DILocation(line: 1068, column: 37, scope: !12569)
!12590 = !DILocation(line: 1071, column: 56, scope: !12569)
!12591 = !DILocation(line: 1071, column: 79, scope: !12569)
!12592 = !DILocation(line: 1071, column: 22, scope: !12569)
!12593 = !DILocation(line: 1071, column: 37, scope: !12569)
!12594 = !DILocation(line: 1074, column: 34, scope: !12569)
!12595 = !DILocation(line: 1074, column: 38, scope: !12569)
!12596 = !DILocation(line: 1074, column: 14, scope: !12569)
!12597 = !DILocation(line: 1075, column: 1, scope: !12569)
!12598 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11885, file: !11885, line: 1082, type: !3082, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2156)
!12599 = !DILocation(line: 1085, column: 6, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12598, file: !11885, line: 1085, column: 6)
!12601 = !DILocation(line: 1085, column: 6, scope: !12598)
!12602 = !DILocation(line: 1088, column: 5, scope: !12603)
!12603 = distinct !DILexicalBlock(scope: !12600, file: !11885, line: 1086, column: 3)
!12604 = !DILocation(line: 1091, column: 5, scope: !12603)
!12605 = !DILocation(line: 1092, column: 3, scope: !12603)
!12606 = !DILocation(line: 1093, column: 1, scope: !12598)
!12607 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11885, file: !11885, line: 1099, type: !3082, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2156)
!12608 = !DILocation(line: 1104, column: 1, scope: !12607)
!12609 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12610, file: !12610, line: 257, type: !6354, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12611)
!12610 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12611 = !{!12612}
!12612 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12609, file: !12610, line: 257, type: !152)
!12613 = !DILocation(line: 0, scope: !12609)
!12614 = !DILocation(line: 260, column: 3, scope: !12609)
!12615 = !DILocation(line: 261, column: 1, scope: !12609)
!12616 = distinct !DISubprogram(name: "LL_InitTick", scope: !12617, file: !12617, line: 260, type: !10244, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12618)
!12617 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12618 = !{!12619, !12620}
!12619 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12616, file: !12617, line: 260, type: !152)
!12620 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12616, file: !12617, line: 260, type: !152)
!12621 = !DILocation(line: 0, scope: !12616)
!12622 = !DILocation(line: 263, column: 46, scope: !12616)
!12623 = !DILocation(line: 263, column: 55, scope: !12616)
!12624 = !DILocation(line: 263, column: 18, scope: !12616)
!12625 = !DILocation(line: 264, column: 18, scope: !12616)
!12626 = !DILocation(line: 265, column: 18, scope: !12616)
!12627 = !DILocation(line: 267, column: 1, scope: !12616)
!12628 = distinct !DISubprogram(name: "LL_mDelay", scope: !12610, file: !12610, line: 273, type: !6354, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12629)
!12629 = !{!12630, !12631}
!12630 = !DILocalVariable(name: "Delay", arg: 1, scope: !12628, file: !12610, line: 273, type: !152)
!12631 = !DILocalVariable(name: "tmp", scope: !12628, file: !12610, line: 275, type: !227)
!12632 = !DILocation(line: 0, scope: !12628)
!12633 = !DILocation(line: 275, column: 3, scope: !12628)
!12634 = !DILocation(line: 275, column: 18, scope: !12628)
!12635 = !DILocation(line: 275, column: 33, scope: !12628)
!12636 = !DILocation(line: 277, column: 10, scope: !12628)
!12637 = !DILocation(line: 280, column: 12, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12628, file: !12610, line: 280, column: 6)
!12639 = !DILocation(line: 285, column: 3, scope: !12628)
!12640 = !DILocation(line: 287, column: 18, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12642, file: !12610, line: 287, column: 8)
!12642 = distinct !DILexicalBlock(scope: !12628, file: !12610, line: 286, column: 3)
!12643 = !DILocation(line: 292, column: 1, scope: !12628)
!12644 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12610, file: !12610, line: 323, type: !6354, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12645)
!12645 = !{!12646}
!12646 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12644, file: !12610, line: 323, type: !152)
!12647 = !DILocation(line: 0, scope: !12644)
!12648 = !DILocation(line: 326, column: 19, scope: !12644)
!12649 = !DILocation(line: 327, column: 1, scope: !12644)
!12650 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12610, file: !12610, line: 338, type: !12651, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12654)
!12651 = !DISubroutineType(types: !12652)
!12652 = !{!12653, !152}
!12653 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !960, line: 201, baseType: !959)
!12654 = !{!12655, !12656, !12657, !12658, !12659}
!12655 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12650, file: !12610, line: 338, type: !152)
!12656 = !DILocalVariable(name: "timeout", scope: !12650, file: !12610, line: 340, type: !152)
!12657 = !DILocalVariable(name: "getlatency", scope: !12650, file: !12610, line: 341, type: !152)
!12658 = !DILocalVariable(name: "latency", scope: !12650, file: !12610, line: 342, type: !152)
!12659 = !DILocalVariable(name: "status", scope: !12650, file: !12610, line: 343, type: !12653)
!12660 = !DILocation(line: 0, scope: !12650)
!12661 = !DILocation(line: 347, column: 21, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12650, file: !12610, line: 347, column: 6)
!12663 = !DILocation(line: 347, column: 6, scope: !12650)
!12664 = !DILocation(line: 353, column: 8, scope: !12665)
!12665 = distinct !DILexicalBlock(scope: !12666, file: !12610, line: 353, column: 8)
!12666 = distinct !DILexicalBlock(scope: !12662, file: !12610, line: 352, column: 3)
!12667 = !DILocation(line: 353, column: 40, scope: !12665)
!12668 = !DILocation(line: 353, column: 8, scope: !12666)
!12669 = !DILocation(line: 374, column: 55, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12671, file: !12610, line: 374, column: 10)
!12671 = distinct !DILexicalBlock(scope: !12665, file: !12610, line: 354, column: 5)
!12672 = !DILocation(line: 368, column: 26, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12671, file: !12610, line: 368, column: 10)
!12674 = !DILocation(line: 368, column: 55, scope: !12673)
!12675 = !DILocation(line: 380, column: 57, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12677, file: !12610, line: 380, column: 12)
!12677 = distinct !DILexicalBlock(scope: !12670, file: !12610, line: 379, column: 7)
!12678 = !DILocation(line: 387, column: 8, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12666, file: !12610, line: 387, column: 8)
!12680 = !DILocation(line: 387, column: 40, scope: !12679)
!12681 = !DILocation(line: 387, column: 8, scope: !12666)
!12682 = !DILocation(line: 407, column: 26, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12684, file: !12610, line: 407, column: 10)
!12684 = distinct !DILexicalBlock(scope: !12679, file: !12610, line: 388, column: 5)
!12685 = !DILocation(line: 407, column: 55, scope: !12683)
!12686 = !DILocation(line: 413, column: 28, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12688, file: !12610, line: 413, column: 12)
!12688 = distinct !DILexicalBlock(scope: !12683, file: !12610, line: 412, column: 7)
!12689 = !DILocation(line: 413, column: 57, scope: !12687)
!12690 = !DILocation(line: 0, scope: !12666)
!12691 = !DILocation(line: 420, column: 8, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12666, file: !12610, line: 420, column: 8)
!12693 = !DILocation(line: 420, column: 40, scope: !12692)
!12694 = !DILocation(line: 420, column: 8, scope: !12666)
!12695 = !DILocation(line: 429, column: 26, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12697, file: !12610, line: 429, column: 10)
!12697 = distinct !DILexicalBlock(scope: !12692, file: !12610, line: 421, column: 5)
!12698 = !DILocation(line: 429, column: 55, scope: !12696)
!12699 = !DILocation(line: 435, column: 28, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12701, file: !12610, line: 435, column: 12)
!12701 = distinct !DILexicalBlock(scope: !12696, file: !12610, line: 434, column: 7)
!12702 = !DILocation(line: 435, column: 57, scope: !12700)
!12703 = !DILocation(line: 444, column: 5, scope: !12666)
!12704 = !DILocation(line: 448, column: 5, scope: !12666)
!12705 = !DILocation(line: 451, column: 18, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12666, file: !12610, line: 449, column: 5)
!12707 = !DILocation(line: 452, column: 12, scope: !12706)
!12708 = !DILocation(line: 453, column: 26, scope: !12666)
!12709 = !DILocation(line: 453, column: 38, scope: !12666)
!12710 = !DILocation(line: 453, column: 5, scope: !12706)
!12711 = distinct !{!12711, !12704, !12712}
!12712 = !DILocation(line: 453, column: 54, scope: !12666)
!12713 = !DILocation(line: 0, scope: !12662)
!12714 = !DILocation(line: 464, column: 3, scope: !12650)
!12715 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12716, file: !12716, line: 519, type: !6344, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12716 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12717 = !DILocation(line: 521, column: 21, scope: !12715)
!12718 = !DILocation(line: 521, column: 3, scope: !12715)
!12719 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5959, file: !5959, line: 1543, type: !6354, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12720)
!12720 = !{!12721}
!12721 = !DILocalVariable(name: "Latency", arg: 1, scope: !12719, file: !5959, line: 1543, type: !152)
!12722 = !DILocation(line: 0, scope: !12719)
!12723 = !DILocation(line: 1545, column: 3, scope: !12719)
!12724 = !DILocation(line: 1546, column: 1, scope: !12719)
!12725 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5959, file: !5959, line: 1569, type: !6344, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12726 = !DILocation(line: 1571, column: 21, scope: !12725)
!12727 = !DILocation(line: 1571, column: 3, scope: !12725)
!12728 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12610, file: !12610, line: 483, type: !12729, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12745)
!12729 = !DISubroutineType(types: !12730)
!12730 = !{!12653, !12731, !12738}
!12731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12732, size: 32)
!12732 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12617, line: 114, baseType: !12733)
!12733 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12617, line: 94, size: 96, elements: !12734)
!12734 = !{!12735, !12736, !12737}
!12735 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12733, file: !12617, line: 96, baseType: !152, size: 32)
!12736 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12733, file: !12617, line: 102, baseType: !152, size: 32, offset: 32)
!12737 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12733, file: !12617, line: 109, baseType: !152, size: 32, offset: 64)
!12738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12739, size: 32)
!12739 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12617, line: 139, baseType: !12740)
!12740 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12617, line: 119, size: 96, elements: !12741)
!12741 = !{!12742, !12743, !12744}
!12742 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12740, file: !12617, line: 121, baseType: !152, size: 32)
!12743 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12740, file: !12617, line: 127, baseType: !152, size: 32, offset: 32)
!12744 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12740, file: !12617, line: 133, baseType: !152, size: 32, offset: 64)
!12745 = !{!12746, !12747, !12748, !12749}
!12746 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12728, file: !12610, line: 483, type: !12731)
!12747 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12728, file: !12610, line: 484, type: !12738)
!12748 = !DILocalVariable(name: "status", scope: !12728, file: !12610, line: 486, type: !12653)
!12749 = !DILocalVariable(name: "pllfreq", scope: !12728, file: !12610, line: 487, type: !152)
!12750 = !DILocation(line: 0, scope: !12728)
!12751 = !DILocation(line: 490, column: 6, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12728, file: !12610, line: 490, column: 6)
!12753 = !DILocation(line: 490, column: 25, scope: !12752)
!12754 = !DILocation(line: 490, column: 6, scope: !12728)
!12755 = !DILocation(line: 493, column: 15, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12752, file: !12610, line: 491, column: 3)
!12757 = !DILocation(line: 496, column: 8, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12756, file: !12610, line: 496, column: 8)
!12759 = !DILocation(line: 496, column: 29, scope: !12758)
!12760 = !DILocation(line: 496, column: 8, scope: !12756)
!12761 = !DILocation(line: 498, column: 7, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12758, file: !12610, line: 497, column: 5)
!12763 = !DILocation(line: 499, column: 7, scope: !12762)
!12764 = !DILocation(line: 499, column: 14, scope: !12762)
!12765 = !DILocation(line: 499, column: 35, scope: !12762)
!12766 = distinct !{!12766, !12763, !12767}
!12767 = !DILocation(line: 502, column: 7, scope: !12762)
!12768 = !DILocation(line: 506, column: 76, scope: !12756)
!12769 = !DILocation(line: 506, column: 103, scope: !12756)
!12770 = !DILocation(line: 507, column: 54, scope: !12756)
!12771 = !DILocation(line: 506, column: 5, scope: !12756)
!12772 = !DILocation(line: 510, column: 14, scope: !12756)
!12773 = !DILocation(line: 511, column: 3, scope: !12756)
!12774 = !DILocation(line: 0, scope: !12752)
!12775 = !DILocation(line: 518, column: 3, scope: !12728)
!12776 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12610, file: !12610, line: 642, type: !12777, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12779)
!12777 = !DISubroutineType(types: !12778)
!12778 = !{!12653}
!12779 = !{!12780}
!12780 = !DILocalVariable(name: "status", scope: !12776, file: !12610, line: 644, type: !12653)
!12781 = !DILocation(line: 0, scope: !12776)
!12782 = !DILocation(line: 647, column: 6, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12776, file: !12610, line: 647, column: 6)
!12784 = !DILocation(line: 647, column: 27, scope: !12783)
!12785 = !DILocation(line: 663, column: 6, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12776, file: !12610, line: 663, column: 6)
!12787 = !DILocation(line: 663, column: 30, scope: !12786)
!12788 = !DILocation(line: 663, column: 6, scope: !12776)
!12789 = !DILocation(line: 669, column: 3, scope: !12776)
!12790 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12610, file: !12610, line: 611, type: !12791, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12793)
!12791 = !DISubroutineType(types: !12792)
!12792 = !{!152, !152, !12731}
!12793 = !{!12794, !12795, !12796}
!12794 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12790, file: !12610, line: 611, type: !152)
!12795 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12790, file: !12610, line: 611, type: !12731)
!12796 = !DILocalVariable(name: "pllfreq", scope: !12790, file: !12610, line: 613, type: !152)
!12797 = !DILocation(line: 0, scope: !12790)
!12798 = !DILocation(line: 622, column: 56, scope: !12790)
!12799 = !DILocation(line: 622, column: 61, scope: !12790)
!12800 = !DILocation(line: 622, column: 32, scope: !12790)
!12801 = !DILocation(line: 626, column: 45, scope: !12790)
!12802 = !DILocation(line: 626, column: 50, scope: !12790)
!12803 = !DILocation(line: 626, column: 21, scope: !12790)
!12804 = !DILocation(line: 630, column: 47, scope: !12790)
!12805 = !DILocation(line: 630, column: 82, scope: !12790)
!12806 = !DILocation(line: 630, column: 21, scope: !12790)
!12807 = !DILocation(line: 633, column: 3, scope: !12790)
!12808 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9570, file: !9570, line: 3007, type: !6344, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12809 = !DILocation(line: 3009, column: 11, scope: !12808)
!12810 = !DILocation(line: 3009, column: 44, scope: !12808)
!12811 = !DILocation(line: 3009, column: 3, scope: !12808)
!12812 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9570, file: !9570, line: 2987, type: !3082, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12813 = !DILocation(line: 2989, column: 3, scope: !12812)
!12814 = !DILocation(line: 2990, column: 1, scope: !12812)
!12815 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9570, file: !9570, line: 4304, type: !9704, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12816)
!12816 = !{!12817, !12818, !12819, !12820}
!12817 = !DILocalVariable(name: "Source", arg: 1, scope: !12815, file: !9570, line: 4304, type: !152)
!12818 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12815, file: !9570, line: 4304, type: !152)
!12819 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12815, file: !9570, line: 4304, type: !152)
!12820 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12815, file: !9570, line: 4304, type: !152)
!12821 = !DILocation(line: 0, scope: !12815)
!12822 = !DILocation(line: 4306, column: 3, scope: !12815)
!12823 = !DILocation(line: 4308, column: 3, scope: !12815)
!12824 = !DILocation(line: 4312, column: 1, scope: !12815)
!12825 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12610, file: !12610, line: 681, type: !12826, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12828)
!12826 = !DISubroutineType(types: !12827)
!12827 = !{!12653, !152, !12738}
!12828 = !{!12829, !12830, !12831, !12832}
!12829 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12825, file: !12610, line: 681, type: !152)
!12830 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12825, file: !12610, line: 681, type: !12738)
!12831 = !DILocalVariable(name: "status", scope: !12825, file: !12610, line: 683, type: !12653)
!12832 = !DILocalVariable(name: "hclk_frequency", scope: !12825, file: !12610, line: 684, type: !152)
!12833 = !DILocation(line: 0, scope: !12825)
!12834 = !DILocation(line: 691, column: 20, scope: !12825)
!12835 = !DILocation(line: 694, column: 6, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12825, file: !12610, line: 694, column: 6)
!12837 = !DILocation(line: 694, column: 22, scope: !12836)
!12838 = !DILocation(line: 694, column: 6, scope: !12825)
!12839 = !DILocation(line: 697, column: 14, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12836, file: !12610, line: 695, column: 3)
!12841 = !DILocation(line: 701, column: 13, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12825, file: !12610, line: 701, column: 6)
!12843 = !DILocation(line: 701, column: 6, scope: !12825)
!12844 = !DILocation(line: 704, column: 5, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12842, file: !12610, line: 702, column: 3)
!12846 = !DILocation(line: 705, column: 5, scope: !12845)
!12847 = !DILocation(line: 705, column: 12, scope: !12845)
!12848 = !DILocation(line: 705, column: 33, scope: !12845)
!12849 = distinct !{!12849, !12846, !12850}
!12850 = !DILocation(line: 708, column: 5, scope: !12845)
!12851 = !DILocation(line: 711, column: 49, scope: !12845)
!12852 = !DILocation(line: 711, column: 5, scope: !12845)
!12853 = !DILocation(line: 712, column: 5, scope: !12845)
!12854 = !DILocation(line: 713, column: 5, scope: !12845)
!12855 = !DILocation(line: 713, column: 12, scope: !12845)
!12856 = !DILocation(line: 713, column: 37, scope: !12845)
!12857 = distinct !{!12857, !12854, !12858}
!12858 = !DILocation(line: 716, column: 5, scope: !12845)
!12859 = !DILocation(line: 719, column: 50, scope: !12845)
!12860 = !DILocation(line: 719, column: 5, scope: !12845)
!12861 = !DILocation(line: 720, column: 50, scope: !12845)
!12862 = !DILocation(line: 720, column: 5, scope: !12845)
!12863 = !DILocation(line: 721, column: 3, scope: !12845)
!12864 = !DILocation(line: 724, column: 6, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12825, file: !12610, line: 724, column: 6)
!12866 = !DILocation(line: 724, column: 22, scope: !12865)
!12867 = !DILocation(line: 724, column: 6, scope: !12825)
!12868 = !DILocation(line: 727, column: 14, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12865, file: !12610, line: 725, column: 3)
!12870 = !DILocation(line: 728, column: 3, scope: !12869)
!12871 = !DILocation(line: 731, column: 13, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12825, file: !12610, line: 731, column: 6)
!12873 = !DILocation(line: 731, column: 6, scope: !12825)
!12874 = !DILocation(line: 733, column: 5, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12872, file: !12610, line: 732, column: 3)
!12876 = !DILocation(line: 734, column: 3, scope: !12875)
!12877 = !DILocation(line: 736, column: 3, scope: !12825)
!12878 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9570, file: !9570, line: 4184, type: !3082, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12879 = !DILocation(line: 4186, column: 3, scope: !12878)
!12880 = !DILocation(line: 4187, column: 1, scope: !12878)
!12881 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9570, file: !9570, line: 4205, type: !6344, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12882 = !DILocation(line: 4207, column: 11, scope: !12881)
!12883 = !DILocation(line: 4207, column: 44, scope: !12881)
!12884 = !DILocation(line: 4207, column: 3, scope: !12881)
!12885 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9570, file: !9570, line: 3224, type: !6354, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12886)
!12886 = !{!12887}
!12887 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12885, file: !9570, line: 3224, type: !152)
!12888 = !DILocation(line: 0, scope: !12885)
!12889 = !DILocation(line: 3226, column: 3, scope: !12885)
!12890 = !DILocation(line: 3227, column: 1, scope: !12885)
!12891 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9570, file: !9570, line: 3188, type: !6354, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12892)
!12892 = !{!12893}
!12893 = !DILocalVariable(name: "Source", arg: 1, scope: !12891, file: !9570, line: 3188, type: !152)
!12894 = !DILocation(line: 0, scope: !12891)
!12895 = !DILocation(line: 3190, column: 3, scope: !12891)
!12896 = !DILocation(line: 3191, column: 1, scope: !12891)
!12897 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9570, file: !9570, line: 3204, type: !6344, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12898 = !DILocation(line: 3206, column: 21, scope: !12897)
!12899 = !DILocation(line: 3206, column: 3, scope: !12897)
!12900 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9570, file: !9570, line: 3240, type: !6354, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12901)
!12901 = !{!12902}
!12902 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12900, file: !9570, line: 3240, type: !152)
!12903 = !DILocation(line: 0, scope: !12900)
!12904 = !DILocation(line: 3242, column: 3, scope: !12900)
!12905 = !DILocation(line: 3243, column: 1, scope: !12900)
!12906 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9570, file: !9570, line: 3256, type: !6354, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12907)
!12907 = !{!12908}
!12908 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12906, file: !9570, line: 3256, type: !152)
!12909 = !DILocation(line: 0, scope: !12906)
!12910 = !DILocation(line: 3258, column: 3, scope: !12906)
!12911 = !DILocation(line: 3259, column: 1, scope: !12906)
!12912 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !9570, file: !9570, line: 5153, type: !6344, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12913 = !DILocation(line: 5155, column: 11, scope: !12912)
!12914 = !DILocation(line: 5155, column: 47, scope: !12912)
!12915 = !DILocation(line: 5155, column: 3, scope: !12912)
!12916 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12610, file: !12610, line: 540, type: !12917, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12919)
!12917 = !DISubroutineType(types: !12918)
!12918 = !{!12653, !152, !152, !12731, !12738}
!12919 = !{!12920, !12921, !12922, !12923, !12924, !12925}
!12920 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12916, file: !12610, line: 540, type: !152)
!12921 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12916, file: !12610, line: 540, type: !152)
!12922 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12916, file: !12610, line: 541, type: !12731)
!12923 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12916, file: !12610, line: 541, type: !12738)
!12924 = !DILocalVariable(name: "status", scope: !12916, file: !12610, line: 543, type: !12653)
!12925 = !DILocalVariable(name: "pllfreq", scope: !12916, file: !12610, line: 544, type: !152)
!12926 = !DILocation(line: 0, scope: !12916)
!12927 = !DILocation(line: 551, column: 6, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12916, file: !12610, line: 551, column: 6)
!12929 = !DILocation(line: 551, column: 25, scope: !12928)
!12930 = !DILocation(line: 551, column: 6, scope: !12916)
!12931 = !DILocation(line: 554, column: 15, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12928, file: !12610, line: 552, column: 3)
!12933 = !DILocation(line: 557, column: 8, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12932, file: !12610, line: 557, column: 8)
!12935 = !DILocation(line: 557, column: 29, scope: !12934)
!12936 = !DILocation(line: 557, column: 8, scope: !12932)
!12937 = !DILocation(line: 560, column: 20, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12939, file: !12610, line: 560, column: 10)
!12939 = distinct !DILexicalBlock(scope: !12934, file: !12610, line: 558, column: 5)
!12940 = !DILocation(line: 560, column: 10, scope: !12939)
!12941 = !DILocation(line: 562, column: 9, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12938, file: !12610, line: 561, column: 7)
!12943 = !DILocation(line: 563, column: 7, scope: !12942)
!12944 = !DILocation(line: 566, column: 9, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12938, file: !12610, line: 565, column: 7)
!12946 = !DILocation(line: 570, column: 7, scope: !12939)
!12947 = !DILocation(line: 571, column: 7, scope: !12939)
!12948 = !DILocation(line: 571, column: 14, scope: !12939)
!12949 = !DILocation(line: 571, column: 35, scope: !12939)
!12950 = distinct !{!12950, !12947, !12951}
!12951 = !DILocation(line: 574, column: 7, scope: !12939)
!12952 = !DILocation(line: 578, column: 76, scope: !12932)
!12953 = !DILocation(line: 578, column: 103, scope: !12932)
!12954 = !DILocation(line: 579, column: 54, scope: !12932)
!12955 = !DILocation(line: 578, column: 5, scope: !12932)
!12956 = !DILocation(line: 582, column: 14, scope: !12932)
!12957 = !DILocation(line: 583, column: 3, scope: !12932)
!12958 = !DILocation(line: 0, scope: !12928)
!12959 = !DILocation(line: 590, column: 3, scope: !12916)
!12960 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9570, file: !9570, line: 2969, type: !6344, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12961 = !DILocation(line: 2971, column: 11, scope: !12960)
!12962 = !DILocation(line: 2971, column: 44, scope: !12960)
!12963 = !DILocation(line: 2971, column: 3, scope: !12960)
!12964 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9570, file: !9570, line: 2929, type: !3082, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12965 = !DILocation(line: 2931, column: 3, scope: !12964)
!12966 = !DILocation(line: 2932, column: 1, scope: !12964)
!12967 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9570, file: !9570, line: 2939, type: !3082, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12968 = !DILocation(line: 2941, column: 3, scope: !12967)
!12969 = !DILocation(line: 2942, column: 1, scope: !12967)
!12970 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9570, file: !9570, line: 2949, type: !3082, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !2156)
!12971 = !DILocation(line: 2951, column: 3, scope: !12970)
!12972 = !DILocation(line: 2952, column: 1, scope: !12970)
!12973 = distinct !DISubprogram(name: "z_device_state_init", scope: !12974, file: !12974, line: 23, type: !3082, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !12975)
!12974 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12975 = !{!12976}
!12976 = !DILocalVariable(name: "dev", scope: !12973, file: !12974, line: 25, type: !12977)
!12977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12978, size: 32)
!12978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12979)
!12979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !12980)
!12980 = !{!12981, !12982, !12983, !12984, !12990, !12991}
!12981 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12979, file: !247, line: 380, baseType: !118, size: 32)
!12982 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12979, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!12983 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12979, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!12984 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12979, file: !247, line: 386, baseType: !12985, size: 32, offset: 96)
!12985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12986, size: 32)
!12986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !12987)
!12987 = !{!12988, !12989}
!12988 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12986, file: !247, line: 359, baseType: !195, size: 8)
!12989 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12986, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12990 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12979, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!12991 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12979, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!12992 = !DILocation(line: 0, scope: !12973)
!12993 = !DILocation(line: 31, column: 1, scope: !12973)
!12994 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12974, file: !12974, line: 33, type: !12995, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !12997)
!12995 = !DISubroutineType(types: !12996)
!12996 = !{!12977, !118}
!12997 = !{!12998, !12999}
!12998 = !DILocalVariable(name: "name", arg: 1, scope: !12994, file: !12974, line: 33, type: !118)
!12999 = !DILocalVariable(name: "dev", scope: !12994, file: !12974, line: 35, type: !12977)
!13000 = !DILocation(line: 0, scope: !12994)
!13001 = !DILocation(line: 40, column: 12, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !12994, file: !12974, line: 40, column: 6)
!13003 = !DILocation(line: 40, column: 21, scope: !13002)
!13004 = !DILocation(line: 40, column: 25, scope: !13002)
!13005 = !DILocation(line: 40, column: 33, scope: !13002)
!13006 = !DILocation(line: 40, column: 6, scope: !12994)
!13007 = !DILocation(line: 55, column: 2, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !12994, file: !12974, line: 55, column: 2)
!13009 = !DILocation(line: 50, column: 7, scope: !13010)
!13010 = distinct !DILexicalBlock(scope: !13011, file: !12974, line: 50, column: 7)
!13011 = distinct !DILexicalBlock(scope: !13012, file: !12974, line: 49, column: 57)
!13012 = distinct !DILexicalBlock(scope: !13013, file: !12974, line: 49, column: 2)
!13013 = distinct !DILexicalBlock(scope: !12994, file: !12974, line: 49, column: 2)
!13014 = !DILocation(line: 50, column: 30, scope: !13010)
!13015 = !DILocation(line: 50, column: 39, scope: !13010)
!13016 = !DILocation(line: 50, column: 44, scope: !13010)
!13017 = !DILocation(line: 50, column: 7, scope: !13011)
!13018 = !DILocation(line: 49, column: 53, scope: !13012)
!13019 = !DILocation(line: 49, column: 33, scope: !13012)
!13020 = !DILocation(line: 49, column: 2, scope: !13013)
!13021 = distinct !{!13021, !13020, !13022}
!13022 = !DILocation(line: 53, column: 2, scope: !13013)
!13023 = !DILocation(line: 56, column: 7, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13025, file: !12974, line: 56, column: 7)
!13025 = distinct !DILexicalBlock(scope: !13026, file: !12974, line: 55, column: 57)
!13026 = distinct !DILexicalBlock(scope: !13008, file: !12974, line: 55, column: 2)
!13027 = !DILocation(line: 56, column: 30, scope: !13024)
!13028 = !DILocation(line: 56, column: 52, scope: !13024)
!13029 = !DILocation(line: 56, column: 34, scope: !13024)
!13030 = !DILocation(line: 56, column: 58, scope: !13024)
!13031 = !DILocation(line: 56, column: 7, scope: !13025)
!13032 = !DILocation(line: 55, column: 53, scope: !13026)
!13033 = !DILocation(line: 55, column: 33, scope: !13026)
!13034 = distinct !{!13034, !13007, !13035}
!13035 = !DILocation(line: 59, column: 2, scope: !13008)
!13036 = !DILocation(line: 62, column: 1, scope: !12994)
!13037 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12974, file: !12974, line: 93, type: !13038, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !13040)
!13038 = !DISubroutineType(types: !13039)
!13039 = !{!145, !12977}
!13040 = !{!13041}
!13041 = !DILocalVariable(name: "dev", arg: 1, scope: !13037, file: !12974, line: 93, type: !12977)
!13042 = !DILocation(line: 0, scope: !13037)
!13043 = !DILocation(line: 99, column: 10, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13037, file: !12974, line: 99, column: 6)
!13045 = !DILocation(line: 99, column: 6, scope: !13037)
!13046 = !DILocation(line: 103, column: 14, scope: !13037)
!13047 = !DILocation(line: 103, column: 21, scope: !13037)
!13048 = !DILocation(line: 103, column: 33, scope: !13037)
!13049 = !DILocation(line: 103, column: 49, scope: !13037)
!13050 = !DILocation(line: 103, column: 58, scope: !13037)
!13051 = !DILocation(line: 104, column: 1, scope: !13037)
!13052 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12974, file: !12974, line: 87, type: !13053, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !13056)
!13053 = !DISubroutineType(types: !13054)
!13054 = !{!185, !13055}
!13055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12977, size: 32)
!13056 = !{!13057}
!13057 = !DILocalVariable(name: "devices", arg: 1, scope: !13052, file: !12974, line: 87, type: !13055)
!13058 = !DILocation(line: 0, scope: !13052)
!13059 = !DILocation(line: 89, column: 11, scope: !13052)
!13060 = !DILocation(line: 90, column: 2, scope: !13052)
!13061 = distinct !DISubprogram(name: "device_required_foreach", scope: !12974, file: !12974, line: 125, type: !13062, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !13068)
!13062 = !DISubroutineType(types: !13063)
!13063 = !{!107, !12977, !13064, !106}
!13064 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !247, line: 471, baseType: !13065)
!13065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13066, size: 32)
!13066 = !DISubroutineType(types: !13067)
!13067 = !{!107, !12977, !106}
!13068 = !{!13069, !13070, !13071, !13072, !13073}
!13069 = !DILocalVariable(name: "dev", arg: 1, scope: !13061, file: !12974, line: 125, type: !12977)
!13070 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13061, file: !12974, line: 126, type: !13064)
!13071 = !DILocalVariable(name: "context", arg: 3, scope: !13061, file: !12974, line: 127, type: !106)
!13072 = !DILocalVariable(name: "handle_count", scope: !13061, file: !12974, line: 129, type: !185)
!13073 = !DILocalVariable(name: "handles", scope: !13061, file: !12974, line: 130, type: !260)
!13074 = !DILocation(line: 0, scope: !13061)
!13075 = !DILocation(line: 129, column: 2, scope: !13061)
!13076 = !DILocation(line: 129, column: 9, scope: !13061)
!13077 = !DILocation(line: 130, column: 35, scope: !13061)
!13078 = !DILocation(line: 132, column: 33, scope: !13061)
!13079 = !DILocation(line: 132, column: 9, scope: !13061)
!13080 = !DILocation(line: 133, column: 1, scope: !13061)
!13081 = !DILocation(line: 132, column: 2, scope: !13061)
!13082 = distinct !DISubprogram(name: "device_required_handles_get", scope: !247, file: !247, line: 493, type: !13083, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !13085)
!13083 = !DISubroutineType(types: !13084)
!13084 = !{!260, !12977, !2535}
!13085 = !{!13086, !13087, !13088, !13089}
!13086 = !DILocalVariable(name: "dev", arg: 1, scope: !13082, file: !247, line: 493, type: !12977)
!13087 = !DILocalVariable(name: "count", arg: 2, scope: !13082, file: !247, line: 493, type: !2535)
!13088 = !DILocalVariable(name: "rv", scope: !13082, file: !247, line: 495, type: !260)
!13089 = !DILocalVariable(name: "i", scope: !13090, file: !247, line: 498, type: !185)
!13090 = distinct !DILexicalBlock(scope: !13091, file: !247, line: 497, column: 18)
!13091 = distinct !DILexicalBlock(scope: !13082, file: !247, line: 497, column: 6)
!13092 = !DILocation(line: 0, scope: !13082)
!13093 = !DILocation(line: 495, column: 35, scope: !13082)
!13094 = !DILocation(line: 497, column: 9, scope: !13091)
!13095 = !DILocation(line: 497, column: 6, scope: !13082)
!13096 = !DILocation(line: 0, scope: !13090)
!13097 = !DILocation(line: 500, column: 11, scope: !13090)
!13098 = !DILocation(line: 500, column: 40, scope: !13090)
!13099 = !DILocation(line: 502, column: 4, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13090, file: !247, line: 501, column: 40)
!13101 = distinct !{!13101, !13102, !13103}
!13102 = !DILocation(line: 500, column: 3, scope: !13090)
!13103 = !DILocation(line: 503, column: 3, scope: !13090)
!13104 = !DILocation(line: 504, column: 10, scope: !13090)
!13105 = !DILocation(line: 505, column: 2, scope: !13090)
!13106 = !DILocation(line: 507, column: 2, scope: !13082)
!13107 = distinct !DISubprogram(name: "device_visitor", scope: !12974, file: !12974, line: 106, type: !13108, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !13110)
!13108 = !DISubroutineType(types: !13109)
!13109 = !{!107, !260, !185, !13064, !106}
!13110 = !{!13111, !13112, !13113, !13114, !13115, !13117, !13120, !13121}
!13111 = !DILocalVariable(name: "handles", arg: 1, scope: !13107, file: !12974, line: 106, type: !260)
!13112 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13107, file: !12974, line: 107, type: !185)
!13113 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13107, file: !12974, line: 108, type: !13064)
!13114 = !DILocalVariable(name: "context", arg: 4, scope: !13107, file: !12974, line: 109, type: !106)
!13115 = !DILocalVariable(name: "i", scope: !13116, file: !12974, line: 112, type: !185)
!13116 = distinct !DILexicalBlock(scope: !13107, file: !12974, line: 112, column: 2)
!13117 = !DILocalVariable(name: "dh", scope: !13118, file: !12974, line: 113, type: !262)
!13118 = distinct !DILexicalBlock(scope: !13119, file: !12974, line: 112, column: 44)
!13119 = distinct !DILexicalBlock(scope: !13116, file: !12974, line: 112, column: 2)
!13120 = !DILocalVariable(name: "rdev", scope: !13118, file: !12974, line: 114, type: !12977)
!13121 = !DILocalVariable(name: "rc", scope: !13118, file: !12974, line: 115, type: !107)
!13122 = !DILocation(line: 0, scope: !13107)
!13123 = !DILocation(line: 0, scope: !13116)
!13124 = !DILocation(line: 112, column: 23, scope: !13119)
!13125 = !DILocation(line: 112, column: 2, scope: !13116)
!13126 = distinct !{!13126, !13125, !13127}
!13127 = !DILocation(line: 120, column: 2, scope: !13116)
!13128 = !DILocation(line: 113, column: 24, scope: !13118)
!13129 = !DILocation(line: 0, scope: !13118)
!13130 = !DILocation(line: 114, column: 31, scope: !13118)
!13131 = !DILocation(line: 115, column: 12, scope: !13118)
!13132 = !DILocation(line: 117, column: 10, scope: !13133)
!13133 = distinct !DILexicalBlock(scope: !13118, file: !12974, line: 117, column: 7)
!13134 = !DILocation(line: 112, column: 39, scope: !13119)
!13135 = !DILocation(line: 123, column: 1, scope: !13107)
!13136 = distinct !DISubprogram(name: "device_from_handle", scope: !247, file: !247, line: 439, type: !13137, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !13139)
!13137 = !DISubroutineType(types: !13138)
!13138 = !{!12977, !262}
!13139 = !{!13140, !13141, !13142}
!13140 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13136, file: !247, line: 439, type: !262)
!13141 = !DILocalVariable(name: "dev", scope: !13136, file: !247, line: 443, type: !12977)
!13142 = !DILocalVariable(name: "numdev", scope: !13136, file: !247, line: 444, type: !185)
!13143 = !DILocation(line: 0, scope: !13136)
!13144 = !DILocation(line: 446, column: 7, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13136, file: !247, line: 446, column: 6)
!13146 = !DILocation(line: 446, column: 18, scope: !13145)
!13147 = !DILocation(line: 446, column: 23, scope: !13145)
!13148 = !DILocation(line: 450, column: 2, scope: !13136)
!13149 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12974, file: !12974, line: 135, type: !13062, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !13150)
!13150 = !{!13151, !13152, !13153, !13154, !13155}
!13151 = !DILocalVariable(name: "dev", arg: 1, scope: !13149, file: !12974, line: 135, type: !12977)
!13152 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13149, file: !12974, line: 136, type: !13064)
!13153 = !DILocalVariable(name: "context", arg: 3, scope: !13149, file: !12974, line: 137, type: !106)
!13154 = !DILocalVariable(name: "handle_count", scope: !13149, file: !12974, line: 139, type: !185)
!13155 = !DILocalVariable(name: "handles", scope: !13149, file: !12974, line: 140, type: !260)
!13156 = !DILocation(line: 0, scope: !13149)
!13157 = !DILocation(line: 139, column: 2, scope: !13149)
!13158 = !DILocation(line: 139, column: 9, scope: !13149)
!13159 = !DILocation(line: 140, column: 35, scope: !13149)
!13160 = !DILocation(line: 142, column: 33, scope: !13149)
!13161 = !DILocation(line: 142, column: 9, scope: !13149)
!13162 = !DILocation(line: 143, column: 1, scope: !13149)
!13163 = !DILocation(line: 142, column: 2, scope: !13149)
!13164 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !247, file: !247, line: 573, type: !13083, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !13165)
!13165 = !{!13166, !13167, !13168, !13169, !13170}
!13166 = !DILocalVariable(name: "dev", arg: 1, scope: !13164, file: !247, line: 573, type: !12977)
!13167 = !DILocalVariable(name: "count", arg: 2, scope: !13164, file: !247, line: 573, type: !2535)
!13168 = !DILocalVariable(name: "rv", scope: !13164, file: !247, line: 575, type: !260)
!13169 = !DILocalVariable(name: "region", scope: !13164, file: !247, line: 576, type: !185)
!13170 = !DILocalVariable(name: "i", scope: !13164, file: !247, line: 577, type: !185)
!13171 = !DILocation(line: 0, scope: !13164)
!13172 = !DILocation(line: 575, column: 35, scope: !13164)
!13173 = !DILocation(line: 579, column: 9, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13164, file: !247, line: 579, column: 6)
!13175 = !DILocation(line: 579, column: 6, scope: !13164)
!13176 = !DILocation(line: 582, column: 8, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13178, file: !247, line: 582, column: 8)
!13178 = distinct !DILexicalBlock(scope: !13179, file: !247, line: 581, column: 23)
!13179 = distinct !DILexicalBlock(scope: !13174, file: !247, line: 579, column: 18)
!13180 = !DILocation(line: 582, column: 12, scope: !13177)
!13181 = !DILocation(line: 585, column: 6, scope: !13178)
!13182 = !DILocation(line: 0, scope: !13179)
!13183 = !DILocation(line: 581, column: 17, scope: !13179)
!13184 = !DILocation(line: 581, column: 3, scope: !13179)
!13185 = !DILocation(line: 588, column: 10, scope: !13179)
!13186 = !DILocation(line: 588, column: 16, scope: !13179)
!13187 = !DILocation(line: 589, column: 4, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13179, file: !247, line: 588, column: 39)
!13189 = !DILocation(line: 588, column: 3, scope: !13179)
!13190 = distinct !{!13190, !13189, !13191}
!13191 = !DILocation(line: 590, column: 3, scope: !13179)
!13192 = !DILocation(line: 591, column: 10, scope: !13179)
!13193 = !DILocation(line: 592, column: 2, scope: !13179)
!13194 = !DILocation(line: 575, column: 25, scope: !13164)
!13195 = !DILocation(line: 594, column: 2, scope: !13164)
!13196 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1947, file: !1947, line: 49, type: !13197, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !2156)
!13197 = !DISubroutineType(types: !13198)
!13198 = !{!187}
!13199 = !DILocation(line: 51, column: 10, scope: !13196)
!13200 = !DILocation(line: 51, column: 20, scope: !13196)
!13201 = !DILocation(line: 51, column: 2, scope: !13196)
!13202 = distinct !DISubprogram(name: "coredump", scope: !3049, file: !3049, line: 209, type: !13203, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13352)
!13203 = !DISubroutineType(types: !13204)
!13204 = !{null, !32, !13205, !13249}
!13205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13206, size: 32)
!13206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13207)
!13207 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2665, line: 141, baseType: !13208)
!13208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2665, line: 97, size: 256, elements: !13209)
!13209 = !{!13210}
!13210 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13208, file: !2665, line: 107, baseType: !13211, size: 256)
!13211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2665, line: 98, size: 256, elements: !13212)
!13212 = !{!13213, !13218, !13223, !13228, !13233, !13238, !13243, !13248}
!13213 = !DIDerivedType(tag: DW_TAG_member, scope: !13211, file: !2665, line: 99, baseType: !13214, size: 32)
!13214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13211, file: !2665, line: 99, size: 32, elements: !13215)
!13215 = !{!13216, !13217}
!13216 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13214, file: !2665, line: 99, baseType: !152, size: 32)
!13217 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13214, file: !2665, line: 99, baseType: !152, size: 32)
!13218 = !DIDerivedType(tag: DW_TAG_member, scope: !13211, file: !2665, line: 100, baseType: !13219, size: 32, offset: 32)
!13219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13211, file: !2665, line: 100, size: 32, elements: !13220)
!13220 = !{!13221, !13222}
!13221 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13219, file: !2665, line: 100, baseType: !152, size: 32)
!13222 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13219, file: !2665, line: 100, baseType: !152, size: 32)
!13223 = !DIDerivedType(tag: DW_TAG_member, scope: !13211, file: !2665, line: 101, baseType: !13224, size: 32, offset: 64)
!13224 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13211, file: !2665, line: 101, size: 32, elements: !13225)
!13225 = !{!13226, !13227}
!13226 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13224, file: !2665, line: 101, baseType: !152, size: 32)
!13227 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13224, file: !2665, line: 101, baseType: !152, size: 32)
!13228 = !DIDerivedType(tag: DW_TAG_member, scope: !13211, file: !2665, line: 102, baseType: !13229, size: 32, offset: 96)
!13229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13211, file: !2665, line: 102, size: 32, elements: !13230)
!13230 = !{!13231, !13232}
!13231 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13229, file: !2665, line: 102, baseType: !152, size: 32)
!13232 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13229, file: !2665, line: 102, baseType: !152, size: 32)
!13233 = !DIDerivedType(tag: DW_TAG_member, scope: !13211, file: !2665, line: 103, baseType: !13234, size: 32, offset: 128)
!13234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13211, file: !2665, line: 103, size: 32, elements: !13235)
!13235 = !{!13236, !13237}
!13236 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13234, file: !2665, line: 103, baseType: !152, size: 32)
!13237 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13234, file: !2665, line: 103, baseType: !152, size: 32)
!13238 = !DIDerivedType(tag: DW_TAG_member, scope: !13211, file: !2665, line: 104, baseType: !13239, size: 32, offset: 160)
!13239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13211, file: !2665, line: 104, size: 32, elements: !13240)
!13240 = !{!13241, !13242}
!13241 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13239, file: !2665, line: 104, baseType: !152, size: 32)
!13242 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13239, file: !2665, line: 104, baseType: !152, size: 32)
!13243 = !DIDerivedType(tag: DW_TAG_member, scope: !13211, file: !2665, line: 105, baseType: !13244, size: 32, offset: 192)
!13244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13211, file: !2665, line: 105, size: 32, elements: !13245)
!13245 = !{!13246, !13247}
!13246 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13244, file: !2665, line: 105, baseType: !152, size: 32)
!13247 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13244, file: !2665, line: 105, baseType: !152, size: 32)
!13248 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13211, file: !2665, line: 106, baseType: !152, size: 32, offset: 224)
!13249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13250, size: 32)
!13250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !13251)
!13251 = !{!13252, !13310, !13322, !13323, !13324, !13325, !13326, !13332, !13347}
!13252 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13250, file: !309, line: 247, baseType: !13253, size: 384)
!13253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !13254)
!13254 = !{!13255, !13279, !13286, !13287, !13288, !13297, !13298, !13299}
!13255 = !DIDerivedType(tag: DW_TAG_member, scope: !13253, file: !309, line: 60, baseType: !13256, size: 64)
!13256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13253, file: !309, line: 60, size: 64, elements: !13257)
!13257 = !{!13258, !13273}
!13258 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13256, file: !309, line: 61, baseType: !13259, size: 64)
!13259 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !13260)
!13260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !13261)
!13261 = !{!13262, !13268}
!13262 = !DIDerivedType(tag: DW_TAG_member, scope: !13260, file: !319, line: 38, baseType: !13263, size: 32)
!13263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13260, file: !319, line: 38, size: 32, elements: !13264)
!13264 = !{!13265, !13267}
!13265 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13263, file: !319, line: 39, baseType: !13266, size: 32)
!13266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13260, size: 32)
!13267 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13263, file: !319, line: 40, baseType: !13266, size: 32)
!13268 = !DIDerivedType(tag: DW_TAG_member, scope: !13260, file: !319, line: 42, baseType: !13269, size: 32, offset: 32)
!13269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13260, file: !319, line: 42, size: 32, elements: !13270)
!13270 = !{!13271, !13272}
!13271 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13269, file: !319, line: 43, baseType: !13266, size: 32)
!13272 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13269, file: !319, line: 44, baseType: !13266, size: 32)
!13273 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13256, file: !309, line: 62, baseType: !13274, size: 64)
!13274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !13275)
!13275 = !{!13276}
!13276 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13274, file: !335, line: 50, baseType: !13277, size: 64)
!13277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13278, size: 64, elements: !340)
!13278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13274, size: 32)
!13279 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13253, file: !309, line: 68, baseType: !13280, size: 32, offset: 64)
!13280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13281, size: 32)
!13281 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !13282)
!13282 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !13283)
!13283 = !{!13284}
!13284 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13282, file: !345, line: 232, baseType: !13285, size: 64)
!13285 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !13260)
!13286 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13253, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!13287 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13253, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!13288 = !DIDerivedType(tag: DW_TAG_member, scope: !13253, file: !309, line: 90, baseType: !13289, size: 16, offset: 112)
!13289 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13253, file: !309, line: 90, size: 16, elements: !13290)
!13290 = !{!13291, !13296}
!13291 = !DIDerivedType(tag: DW_TAG_member, scope: !13289, file: !309, line: 91, baseType: !13292, size: 16)
!13292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13289, file: !309, line: 91, size: 16, elements: !13293)
!13293 = !{!13294, !13295}
!13294 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13292, file: !309, line: 96, baseType: !359, size: 8)
!13295 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13292, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!13296 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13289, file: !309, line: 100, baseType: !197, size: 16)
!13297 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13253, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!13298 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13253, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!13299 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13253, file: !309, line: 131, baseType: !13300, size: 192, offset: 192)
!13300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !13301)
!13301 = !{!13302, !13303, !13309}
!13302 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13300, file: !345, line: 245, baseType: !13259, size: 64)
!13303 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13300, file: !345, line: 246, baseType: !13304, size: 32, offset: 64)
!13304 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !13305)
!13305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13306, size: 32)
!13306 = !DISubroutineType(types: !13307)
!13307 = !{null, !13308}
!13308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13300, size: 32)
!13309 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13300, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!13310 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13250, file: !309, line: 250, baseType: !13311, size: 288, offset: 384)
!13311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !13312)
!13312 = !{!13313, !13314, !13315, !13316, !13317, !13318, !13319, !13320, !13321}
!13313 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13311, file: !379, line: 26, baseType: !152, size: 32)
!13314 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13311, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!13315 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13311, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!13316 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13311, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!13317 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13311, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!13318 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13311, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!13319 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13311, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!13320 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13311, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!13321 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13311, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!13322 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13250, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!13323 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13250, file: !309, line: 256, baseType: !13281, size: 64, offset: 704)
!13324 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13250, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!13325 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13250, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!13326 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13250, file: !309, line: 300, baseType: !13327, size: 96, offset: 1056)
!13327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !13328)
!13328 = !{!13329, !13330, !13331}
!13329 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13327, file: !309, line: 153, baseType: !22, size: 32)
!13330 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13327, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!13331 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13327, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!13332 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13250, file: !309, line: 325, baseType: !13333, size: 32, offset: 1152)
!13333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13334, size: 32)
!13334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !13335)
!13335 = !{!13336, !13342, !13343}
!13336 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13334, file: !406, line: 5074, baseType: !13337, size: 96)
!13337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !13338)
!13338 = !{!13339, !13340, !13341}
!13339 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13337, file: !410, line: 57, baseType: !413, size: 32)
!13340 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13337, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!13341 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13337, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!13342 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13334, file: !406, line: 5075, baseType: !13281, size: 64, offset: 96)
!13343 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13334, file: !406, line: 5076, baseType: !13344, size: 32, offset: 160)
!13344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !13345)
!13345 = !{!13346}
!13346 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13344, file: !420, line: 52, baseType: !22, size: 32)
!13347 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13250, file: !309, line: 343, baseType: !13348, size: 64, offset: 1184)
!13348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !13349)
!13349 = !{!13350, !13351}
!13350 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13348, file: !379, line: 63, baseType: !152, size: 32)
!13351 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13348, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!13352 = !{!13353, !13354, !13355}
!13353 = !DILocalVariable(name: "reason", arg: 1, scope: !13202, file: !3049, line: 209, type: !32)
!13354 = !DILocalVariable(name: "esf", arg: 2, scope: !13202, file: !3049, line: 209, type: !13205)
!13355 = !DILocalVariable(name: "thread", arg: 3, scope: !13202, file: !3049, line: 210, type: !13249)
!13356 = !DILocation(line: 0, scope: !13202)
!13357 = !DILocation(line: 212, column: 1, scope: !13202)
!13358 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3049, file: !3049, line: 214, type: !13359, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13361)
!13359 = !DISubroutineType(types: !13360)
!13360 = !{null, !22, !22}
!13361 = !{!13362, !13363}
!13362 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13358, file: !3049, line: 214, type: !22)
!13363 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13358, file: !3049, line: 214, type: !22)
!13364 = !DILocation(line: 0, scope: !13358)
!13365 = !DILocation(line: 216, column: 1, scope: !13358)
!13366 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3049, file: !3049, line: 218, type: !13367, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13369)
!13367 = !DISubroutineType(types: !13368)
!13368 = !{null, !194, !185}
!13369 = !{!13370, !13371}
!13370 = !DILocalVariable(name: "buf", arg: 1, scope: !13366, file: !3049, line: 218, type: !194)
!13371 = !DILocalVariable(name: "buflen", arg: 2, scope: !13366, file: !3049, line: 218, type: !185)
!13372 = !DILocation(line: 0, scope: !13366)
!13373 = !DILocation(line: 220, column: 1, scope: !13366)
!13374 = distinct !DISubprogram(name: "coredump_query", scope: !3049, file: !3049, line: 222, type: !13375, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13377)
!13375 = !DISubroutineType(types: !13376)
!13376 = !{!107, !3048, !106}
!13377 = !{!13378, !13379}
!13378 = !DILocalVariable(name: "query_id", arg: 1, scope: !13374, file: !3049, line: 222, type: !3048)
!13379 = !DILocalVariable(name: "arg", arg: 2, scope: !13374, file: !3049, line: 222, type: !106)
!13380 = !DILocation(line: 0, scope: !13374)
!13381 = !DILocation(line: 224, column: 2, scope: !13374)
!13382 = distinct !DISubprogram(name: "coredump_cmd", scope: !3049, file: !3049, line: 227, type: !13383, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13385)
!13383 = !DISubroutineType(types: !13384)
!13384 = !{!107, !3055, !106}
!13385 = !{!13386, !13387}
!13386 = !DILocalVariable(name: "query_id", arg: 1, scope: !13382, file: !3049, line: 227, type: !3055)
!13387 = !DILocalVariable(name: "arg", arg: 2, scope: !13382, file: !3049, line: 227, type: !106)
!13388 = !DILocation(line: 0, scope: !13382)
!13389 = !DILocation(line: 229, column: 2, scope: !13382)
!13390 = distinct !DISubprogram(name: "arch_system_halt", scope: !13391, file: !13391, line: 23, type: !5949, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13392)
!13391 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13392 = !{!13393}
!13393 = !DILocalVariable(name: "reason", arg: 1, scope: !13390, file: !13391, line: 23, type: !32)
!13394 = !DILocation(line: 0, scope: !13390)
!13395 = !DILocation(line: 55, column: 2, scope: !13396, inlinedAt: !13400)
!13396 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5938, file: !5938, line: 42, type: !5939, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13397)
!13397 = !{!13398, !13399}
!13398 = !DILocalVariable(name: "key", scope: !13396, file: !5938, line: 44, type: !32)
!13399 = !DILocalVariable(name: "tmp", scope: !13396, file: !5938, line: 53, type: !32)
!13400 = distinct !DILocation(line: 31, column: 8, scope: !13390)
!13401 = !{i64 2245459}
!13402 = !DILocation(line: 0, scope: !13396, inlinedAt: !13400)
!13403 = !DILocation(line: 32, column: 2, scope: !13390)
!13404 = !DILocation(line: 32, column: 2, scope: !13405)
!13405 = distinct !DILexicalBlock(scope: !13406, file: !13391, line: 32, column: 2)
!13406 = distinct !DILexicalBlock(scope: !13390, file: !13391, line: 32, column: 2)
!13407 = distinct !{!13407, !13408, !13409}
!13408 = !DILocation(line: 32, column: 2, scope: !13406)
!13409 = !DILocation(line: 34, column: 2, scope: !13406)
!13410 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13391, file: !13391, line: 39, type: !13411, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13413)
!13411 = !DISubroutineType(types: !13412)
!13412 = !{null, !32, !13205}
!13413 = !{!13414, !13415}
!13414 = !DILocalVariable(name: "reason", arg: 1, scope: !13410, file: !13391, line: 39, type: !32)
!13415 = !DILocalVariable(name: "esf", arg: 2, scope: !13410, file: !13391, line: 40, type: !13205)
!13416 = !DILocation(line: 0, scope: !13410)
!13417 = !DILocation(line: 45, column: 2, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13419, file: !13391, line: 45, column: 2)
!13419 = distinct !DILexicalBlock(scope: !13420, file: !13391, line: 45, column: 2)
!13420 = distinct !DILexicalBlock(scope: !13421, file: !13391, line: 45, column: 2)
!13421 = distinct !DILexicalBlock(scope: !13410, file: !13391, line: 45, column: 2)
!13422 = !DILocation(line: 46, column: 2, scope: !13410)
!13423 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13391, file: !13391, line: 81, type: !5949, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13424)
!13424 = !{!13425}
!13425 = !DILocalVariable(name: "reason", arg: 1, scope: !13423, file: !13391, line: 81, type: !32)
!13426 = !DILocation(line: 0, scope: !13423)
!13427 = !DILocation(line: 83, column: 2, scope: !13423)
!13428 = distinct !DISubprogram(name: "z_fatal_error", scope: !13391, file: !13391, line: 96, type: !13411, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13429)
!13429 = !{!13430, !13431, !13432, !13433}
!13430 = !DILocalVariable(name: "reason", arg: 1, scope: !13428, file: !13391, line: 96, type: !32)
!13431 = !DILocalVariable(name: "esf", arg: 2, scope: !13428, file: !13391, line: 96, type: !13205)
!13432 = !DILocalVariable(name: "key", scope: !13428, file: !13391, line: 102, type: !32)
!13433 = !DILocalVariable(name: "thread", scope: !13428, file: !13391, line: 103, type: !13249)
!13434 = !DILocation(line: 0, scope: !13428)
!13435 = !DILocation(line: 55, column: 2, scope: !13396, inlinedAt: !13436)
!13436 = distinct !DILocation(line: 102, column: 21, scope: !13428)
!13437 = !DILocation(line: 0, scope: !13396, inlinedAt: !13436)
!13438 = !DILocation(line: 104, column: 4, scope: !13428)
!13439 = !DILocation(line: 109, column: 2, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13441, file: !13391, line: 109, column: 2)
!13441 = distinct !DILexicalBlock(scope: !13442, file: !13391, line: 109, column: 2)
!13442 = distinct !DILexicalBlock(scope: !13443, file: !13391, line: 109, column: 2)
!13443 = distinct !DILexicalBlock(scope: !13428, file: !13391, line: 109, column: 2)
!13444 = !DILocation(line: 119, column: 11, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13428, file: !13391, line: 119, column: 6)
!13446 = !DILocation(line: 119, column: 20, scope: !13445)
!13447 = !DILocalVariable(name: "esf", arg: 1, scope: !13448, file: !7309, line: 71, type: !13205)
!13448 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7309, file: !7309, line: 71, type: !13449, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13451)
!13449 = !DISubroutineType(types: !13450)
!13450 = !{!145, !13205}
!13451 = !{!13447}
!13452 = !DILocation(line: 0, scope: !13448, inlinedAt: !13453)
!13453 = distinct !DILocation(line: 119, column: 23, scope: !13445)
!13454 = !DILocation(line: 73, column: 21, scope: !13448, inlinedAt: !13453)
!13455 = !DILocation(line: 73, column: 26, scope: !13448, inlinedAt: !13453)
!13456 = !DILocation(line: 73, column: 9, scope: !13448, inlinedAt: !13453)
!13457 = !DILocation(line: 119, column: 6, scope: !13428)
!13458 = !DILocation(line: 120, column: 3, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13460, file: !13391, line: 120, column: 3)
!13460 = distinct !DILexicalBlock(scope: !13461, file: !13391, line: 120, column: 3)
!13461 = distinct !DILexicalBlock(scope: !13462, file: !13391, line: 120, column: 3)
!13462 = distinct !DILexicalBlock(scope: !13463, file: !13391, line: 120, column: 3)
!13463 = distinct !DILexicalBlock(scope: !13445, file: !13391, line: 119, column: 57)
!13464 = !DILocation(line: 121, column: 2, scope: !13463)
!13465 = !DILocation(line: 124, column: 2, scope: !13466)
!13466 = distinct !DILexicalBlock(scope: !13467, file: !13391, line: 124, column: 2)
!13467 = distinct !DILexicalBlock(scope: !13468, file: !13391, line: 124, column: 2)
!13468 = distinct !DILexicalBlock(scope: !13469, file: !13391, line: 124, column: 2)
!13469 = distinct !DILexicalBlock(scope: !13428, file: !13391, line: 124, column: 2)
!13470 = !DILocation(line: 131, column: 2, scope: !13428)
!13471 = !DILocation(line: 0, scope: !13448, inlinedAt: !13472)
!13472 = distinct !DILocation(line: 163, column: 24, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13474, file: !13391, line: 163, column: 7)
!13474 = distinct !DILexicalBlock(scope: !13475, file: !13391, line: 160, column: 9)
!13475 = distinct !DILexicalBlock(scope: !13428, file: !13391, line: 146, column: 6)
!13476 = !DILocation(line: 73, column: 21, scope: !13448, inlinedAt: !13472)
!13477 = !DILocation(line: 73, column: 26, scope: !13448, inlinedAt: !13472)
!13478 = !DILocation(line: 73, column: 9, scope: !13448, inlinedAt: !13472)
!13479 = !DILocation(line: 163, column: 7, scope: !13474)
!13480 = !DILocalVariable(name: "key", arg: 1, scope: !13481, file: !5938, line: 84, type: !32)
!13481 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5938, file: !5938, line: 84, type: !5949, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13482)
!13482 = !{!13480}
!13483 = !DILocation(line: 0, scope: !13481, inlinedAt: !13484)
!13484 = distinct !DILocation(line: 171, column: 4, scope: !13485)
!13485 = distinct !DILexicalBlock(scope: !13473, file: !13391, line: 163, column: 58)
!13486 = !DILocation(line: 95, column: 2, scope: !13481, inlinedAt: !13484)
!13487 = !{i64 2246276}
!13488 = !DILocation(line: 172, column: 4, scope: !13485)
!13489 = !DILocation(line: 163, column: 21, scope: !13473)
!13490 = !DILocation(line: 178, column: 15, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13492, file: !13391, line: 178, column: 8)
!13492 = distinct !DILexicalBlock(scope: !13473, file: !13391, line: 174, column: 10)
!13493 = !DILocation(line: 0, scope: !13481, inlinedAt: !13494)
!13494 = distinct !DILocation(line: 179, column: 5, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13491, file: !13391, line: 178, column: 38)
!13496 = !DILocation(line: 0, scope: !13481, inlinedAt: !13497)
!13497 = distinct !DILocation(line: 186, column: 2, scope: !13428)
!13498 = !DILocation(line: 178, column: 8, scope: !13492)
!13499 = !DILocation(line: 189, column: 3, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13501, file: !13391, line: 188, column: 41)
!13501 = distinct !DILexicalBlock(scope: !13428, file: !13391, line: 188, column: 6)
!13502 = !DILocation(line: 191, column: 1, scope: !13428)
!13503 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !13504, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2156)
!13504 = !DISubroutineType(types: !13505)
!13505 = !{!13506}
!13506 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !13249)
!13507 = !DILocation(line: 535, column: 9, scope: !13503)
!13508 = !DILocation(line: 535, column: 2, scope: !13503)
!13509 = distinct !DISubprogram(name: "reason_to_str", scope: !13391, file: !13391, line: 62, type: !13510, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13512)
!13510 = !DISubroutineType(types: !13511)
!13511 = !{!118, !32}
!13512 = !{!13513}
!13513 = !DILocalVariable(name: "reason", arg: 1, scope: !13509, file: !13391, line: 62, type: !32)
!13514 = !DILocation(line: 0, scope: !13509)
!13515 = !DILocation(line: 64, column: 2, scope: !13509)
!13516 = !DILocation(line: 0, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13509, file: !13391, line: 64, column: 18)
!13518 = !DILocation(line: 78, column: 1, scope: !13509)
!13519 = distinct !DISubprogram(name: "thread_name_get", scope: !13391, file: !13391, line: 51, type: !13520, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13522)
!13520 = !DISubroutineType(types: !13521)
!13521 = !{!118, !13249}
!13522 = !{!13523, !13524}
!13523 = !DILocalVariable(name: "thread", arg: 1, scope: !13519, file: !13391, line: 51, type: !13249)
!13524 = !DILocalVariable(name: "thread_name", scope: !13519, file: !13391, line: 53, type: !118)
!13525 = !DILocation(line: 0, scope: !13519)
!13526 = !DILocation(line: 53, column: 36, scope: !13519)
!13527 = !DILocation(line: 53, column: 28, scope: !13519)
!13528 = !DILocation(line: 53, column: 47, scope: !13519)
!13529 = !DILocation(line: 55, column: 19, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13519, file: !13391, line: 55, column: 6)
!13531 = !DILocation(line: 55, column: 28, scope: !13530)
!13532 = !DILocation(line: 55, column: 32, scope: !13530)
!13533 = !DILocation(line: 55, column: 47, scope: !13530)
!13534 = !DILocation(line: 55, column: 6, scope: !13519)
!13535 = !DILocation(line: 57, column: 2, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13530, file: !13391, line: 55, column: 57)
!13537 = !DILocation(line: 59, column: 2, scope: !13519)
!13538 = distinct !DISubprogram(name: "k_thread_abort", scope: !4413, file: !4413, line: 188, type: !13539, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !13541)
!13539 = !DISubroutineType(types: !13540)
!13540 = !{null, !13506}
!13541 = !{!13542}
!13542 = !DILocalVariable(name: "thread", arg: 1, scope: !13538, file: !4413, line: 188, type: !13506)
!13543 = !DILocation(line: 0, scope: !13538)
!13544 = !DILocation(line: 197, column: 2, scope: !13545)
!13545 = distinct !DILexicalBlock(scope: !13538, file: !4413, line: 197, column: 2)
!13546 = !{i64 2154750831}
!13547 = !DILocation(line: 198, column: 2, scope: !13538)
!13548 = !DILocation(line: 199, column: 1, scope: !13538)
!13549 = distinct !DISubprogram(name: "z_current_get", scope: !4413, file: !4413, line: 173, type: !13504, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2156)
!13550 = !DILocation(line: 180, column: 2, scope: !13551)
!13551 = distinct !DILexicalBlock(scope: !13549, file: !4413, line: 180, column: 2)
!13552 = !{i64 2154750763}
!13553 = !DILocation(line: 181, column: 9, scope: !13549)
!13554 = !DILocation(line: 181, column: 2, scope: !13549)
!13555 = distinct !DISubprogram(name: "z_early_memset", scope: !1955, file: !1955, line: 108, type: !13556, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13558)
!13556 = !DISubroutineType(types: !13557)
!13557 = !{null, !106, !107, !185}
!13558 = !{!13559, !13560, !13561}
!13559 = !DILocalVariable(name: "dst", arg: 1, scope: !13555, file: !1955, line: 108, type: !106)
!13560 = !DILocalVariable(name: "c", arg: 2, scope: !13555, file: !1955, line: 108, type: !107)
!13561 = !DILocalVariable(name: "n", arg: 3, scope: !13555, file: !1955, line: 108, type: !185)
!13562 = !DILocation(line: 0, scope: !13555)
!13563 = !DILocation(line: 110, column: 9, scope: !13555)
!13564 = !DILocation(line: 111, column: 1, scope: !13555)
!13565 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1955, file: !1955, line: 121, type: !13566, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13568)
!13566 = !DISubroutineType(types: !13567)
!13567 = !{null, !106, !13, !185}
!13568 = !{!13569, !13570, !13571}
!13569 = !DILocalVariable(name: "dst", arg: 1, scope: !13565, file: !1955, line: 121, type: !106)
!13570 = !DILocalVariable(name: "src", arg: 2, scope: !13565, file: !1955, line: 121, type: !13)
!13571 = !DILocalVariable(name: "n", arg: 3, scope: !13565, file: !1955, line: 121, type: !185)
!13572 = !DILocation(line: 0, scope: !13565)
!13573 = !DILocation(line: 123, column: 9, scope: !13565)
!13574 = !DILocation(line: 124, column: 1, scope: !13565)
!13575 = distinct !DISubprogram(name: "z_bss_zero", scope: !1955, file: !1955, line: 132, type: !3082, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !2156)
!13576 = !DILocation(line: 143, column: 2, scope: !13575)
!13577 = !DILocation(line: 168, column: 1, scope: !13575)
!13578 = distinct !DISubprogram(name: "z_init_cpu", scope: !1955, file: !1955, line: 372, type: !9171, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13579)
!13579 = !{!13580}
!13580 = !DILocalVariable(name: "id", arg: 1, scope: !13578, file: !1955, line: 372, type: !107)
!13581 = !DILocation(line: 0, scope: !13578)
!13582 = !DILocation(line: 374, column: 2, scope: !13578)
!13583 = !DILocation(line: 375, column: 34, scope: !13578)
!13584 = !DILocation(line: 375, column: 19, scope: !13578)
!13585 = !DILocation(line: 375, column: 31, scope: !13578)
!13586 = !DILocation(line: 376, column: 24, scope: !13578)
!13587 = !DILocation(line: 376, column: 19, scope: !13578)
!13588 = !DILocation(line: 376, column: 22, scope: !13578)
!13589 = !DILocation(line: 378, column: 26, scope: !13578)
!13590 = !DILocation(line: 378, column: 4, scope: !13578)
!13591 = !DILocation(line: 378, column: 50, scope: !13578)
!13592 = !DILocation(line: 377, column: 19, scope: !13578)
!13593 = !DILocation(line: 377, column: 29, scope: !13578)
!13594 = !DILocation(line: 384, column: 1, scope: !13578)
!13595 = distinct !DISubprogram(name: "init_idle_thread", scope: !1955, file: !1955, line: 343, type: !9171, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13596)
!13596 = !{!13597, !13598, !13599, !13602}
!13597 = !DILocalVariable(name: "i", arg: 1, scope: !13595, file: !1955, line: 343, type: !107)
!13598 = !DILocalVariable(name: "thread", scope: !13595, file: !1955, line: 345, type: !2047)
!13599 = !DILocalVariable(name: "stack", scope: !13595, file: !1955, line: 346, type: !13600)
!13600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13601, size: 32)
!13601 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !2165)
!13602 = !DILocalVariable(name: "tname", scope: !13595, file: !1955, line: 354, type: !193)
!13603 = !DILocation(line: 0, scope: !13595)
!13604 = !DILocation(line: 345, column: 29, scope: !13595)
!13605 = !DILocation(line: 346, column: 28, scope: !13595)
!13606 = !DILocation(line: 362, column: 37, scope: !13595)
!13607 = !DILocation(line: 362, column: 36, scope: !13595)
!13608 = !DILocation(line: 361, column: 2, scope: !13595)
!13609 = !DILocation(line: 365, column: 2, scope: !13595)
!13610 = !DILocation(line: 370, column: 1, scope: !13595)
!13611 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !13612, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13614)
!13612 = !DISubroutineType(types: !13613)
!13613 = !{!193, !13600}
!13614 = !{!13615}
!13615 = !DILocalVariable(name: "sym", arg: 1, scope: !13611, file: !577, line: 331, type: !13600)
!13616 = !DILocation(line: 0, scope: !13611)
!13617 = !DILocation(line: 333, column: 21, scope: !13611)
!13618 = !DILocation(line: 333, column: 2, scope: !13611)
!13619 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13620, file: !13620, line: 155, type: !13621, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13623)
!13620 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13621 = !DISubroutineType(types: !13622)
!13622 = !{null, !2047}
!13623 = !{!13624}
!13624 = !DILocalVariable(name: "thread", arg: 1, scope: !13619, file: !13620, line: 155, type: !2047)
!13625 = !DILocation(line: 0, scope: !13619)
!13626 = !DILocation(line: 157, column: 15, scope: !13619)
!13627 = !DILocation(line: 157, column: 28, scope: !13619)
!13628 = !DILocation(line: 158, column: 1, scope: !13619)
!13629 = distinct !DISubprogram(name: "z_cstart", scope: !1955, file: !1955, line: 501, type: !3082, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13630)
!13630 = !{!13631}
!13631 = !DILocalVariable(name: "dummy_thread", scope: !13629, file: !1955, line: 518, type: !2048)
!13632 = !DILocation(line: 507, column: 2, scope: !13629)
!13633 = !DILocation(line: 43, column: 14, scope: !13634, inlinedAt: !13638)
!13634 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13635, file: !13635, line: 40, type: !3082, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13636)
!13635 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13636 = !{!13637}
!13637 = !DILocalVariable(name: "msp", scope: !13634, file: !13635, line: 42, type: !152)
!13638 = distinct !DILocation(line: 44, column: 2, scope: !13639, inlinedAt: !13641)
!13639 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13640, file: !13640, line: 42, type: !3082, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !2156)
!13640 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13641 = distinct !DILocation(line: 510, column: 2, scope: !13629)
!13642 = !DILocation(line: 43, column: 3, scope: !13634, inlinedAt: !13638)
!13643 = !DILocation(line: 43, column: 60, scope: !13634, inlinedAt: !13638)
!13644 = !DILocation(line: 0, scope: !13634, inlinedAt: !13638)
!13645 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13646, file: !6257, line: 1153, type: !152)
!13646 = distinct !DISubprogram(name: "__set_MSP", scope: !6257, file: !6257, line: 1153, type: !6354, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13647)
!13647 = !{!13645}
!13648 = !DILocation(line: 0, scope: !13646, inlinedAt: !13649)
!13649 = distinct !DILocation(line: 46, column: 2, scope: !13634, inlinedAt: !13638)
!13650 = !DILocation(line: 1155, column: 3, scope: !13646, inlinedAt: !13649)
!13651 = !{i64 3519835}
!13652 = !DILocation(line: 62, column: 11, scope: !13634, inlinedAt: !13638)
!13653 = !DILocation(line: 102, column: 2, scope: !13654, inlinedAt: !13655)
!13654 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7309, file: !7309, line: 97, type: !3082, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !2156)
!13655 = distinct !DILocation(line: 45, column: 2, scope: !13639, inlinedAt: !13641)
!13656 = !DILocation(line: 108, column: 2, scope: !13654, inlinedAt: !13655)
!13657 = !DILocation(line: 112, column: 2, scope: !13654, inlinedAt: !13655)
!13658 = !DILocation(line: 113, column: 2, scope: !13654, inlinedAt: !13655)
!13659 = !DILocation(line: 114, column: 2, scope: !13654, inlinedAt: !13655)
!13660 = !DILocation(line: 116, column: 2, scope: !13654, inlinedAt: !13655)
!13661 = !DILocation(line: 123, column: 13, scope: !13654, inlinedAt: !13655)
!13662 = !DILocation(line: 46, column: 2, scope: !13639, inlinedAt: !13641)
!13663 = !DILocation(line: 47, column: 2, scope: !13639, inlinedAt: !13641)
!13664 = !DILocation(line: 174, column: 12, scope: !13665, inlinedAt: !13666)
!13665 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7309, file: !7309, line: 169, type: !3082, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !2156)
!13666 = distinct !DILocation(line: 48, column: 2, scope: !13639, inlinedAt: !13641)
!13667 = !DILocation(line: 179, column: 12, scope: !13665, inlinedAt: !13666)
!13668 = !DILocation(line: 50, column: 2, scope: !13639, inlinedAt: !13641)
!13669 = !DILocation(line: 57, column: 2, scope: !13639, inlinedAt: !13641)
!13670 = !DILocation(line: 518, column: 2, scope: !13629)
!13671 = !DILocation(line: 518, column: 18, scope: !13629)
!13672 = !DILocation(line: 520, column: 2, scope: !13629)
!13673 = !DILocation(line: 523, column: 2, scope: !13629)
!13674 = !DILocation(line: 526, column: 2, scope: !13629)
!13675 = !DILocation(line: 527, column: 2, scope: !13629)
!13676 = !DILocation(line: 543, column: 24, scope: !13629)
!13677 = !DILocation(line: 543, column: 2, scope: !13629)
!13678 = !DILocation(line: 0, scope: !2187)
!13679 = !DILocation(line: 246, column: 15, scope: !2205)
!13680 = !DILocation(line: 246, column: 36, scope: !2204)
!13681 = !DILocation(line: 246, column: 2, scope: !2205)
!13682 = !DILocation(line: 247, column: 37, scope: !2203)
!13683 = !DILocation(line: 0, scope: !2203)
!13684 = !DILocation(line: 248, column: 19, scope: !2203)
!13685 = !DILocation(line: 248, column: 12, scope: !2203)
!13686 = !DILocation(line: 250, column: 11, scope: !13687)
!13687 = distinct !DILexicalBlock(scope: !2203, file: !1955, line: 250, column: 7)
!13688 = !DILocation(line: 250, column: 7, scope: !2203)
!13689 = !DILocation(line: 254, column: 11, scope: !13690)
!13690 = distinct !DILexicalBlock(scope: !13691, file: !1955, line: 254, column: 8)
!13691 = distinct !DILexicalBlock(scope: !13687, file: !1955, line: 250, column: 20)
!13692 = !DILocation(line: 254, column: 8, scope: !13691)
!13693 = !DILocation(line: 255, column: 9, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13690, file: !1955, line: 254, column: 17)
!13695 = !DILocation(line: 258, column: 9, scope: !13694)
!13696 = !DILocation(line: 261, column: 28, scope: !13694)
!13697 = !DILocation(line: 261, column: 10, scope: !13694)
!13698 = !DILocation(line: 261, column: 17, scope: !13694)
!13699 = !DILocation(line: 261, column: 26, scope: !13694)
!13700 = !DILocation(line: 262, column: 4, scope: !13694)
!13701 = !DILocation(line: 263, column: 9, scope: !13691)
!13702 = !DILocation(line: 263, column: 16, scope: !13691)
!13703 = !DILocation(line: 263, column: 28, scope: !13691)
!13704 = !DILocation(line: 264, column: 3, scope: !13691)
!13705 = !DILocation(line: 246, column: 60, scope: !2204)
!13706 = distinct !{!13706, !13681, !13707}
!13707 = !DILocation(line: 265, column: 2, scope: !2205)
!13708 = !DILocation(line: 266, column: 1, scope: !2187)
!13709 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6297, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13710)
!13710 = !{!13711, !13712}
!13711 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13709, file: !463, line: 1814, type: !921)
!13712 = !DILocalVariable(name: "priority", arg: 2, scope: !13709, file: !463, line: 1814, type: !152)
!13713 = !DILocation(line: 0, scope: !13709)
!13714 = !DILocation(line: 1822, column: 48, scope: !13715)
!13715 = distinct !DILexicalBlock(scope: !13716, file: !463, line: 1821, column: 3)
!13716 = distinct !DILexicalBlock(scope: !13709, file: !463, line: 1816, column: 7)
!13717 = !DILocation(line: 1822, column: 32, scope: !13715)
!13718 = !DILocation(line: 1822, column: 40, scope: !13715)
!13719 = !DILocation(line: 1822, column: 5, scope: !13715)
!13720 = !DILocation(line: 1822, column: 46, scope: !13715)
!13721 = !DILocation(line: 1824, column: 1, scope: !13709)
!13722 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13640, file: !13640, line: 32, type: !3082, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!13723 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13724, file: !13724, line: 215, type: !13621, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13725)
!13724 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13725 = !{!13726}
!13726 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13723, file: !13724, line: 215, type: !2047)
!13727 = !DILocation(line: 0, scope: !13723)
!13728 = !DILocation(line: 217, column: 21, scope: !13723)
!13729 = !DILocation(line: 217, column: 34, scope: !13723)
!13730 = !DILocation(line: 221, column: 21, scope: !13723)
!13731 = !DILocation(line: 221, column: 34, scope: !13723)
!13732 = !DILocation(line: 223, column: 27, scope: !13723)
!13733 = !DILocation(line: 223, column: 33, scope: !13723)
!13734 = !DILocation(line: 224, column: 27, scope: !13723)
!13735 = !DILocation(line: 224, column: 32, scope: !13723)
!13736 = !DILocation(line: 232, column: 16, scope: !13723)
!13737 = !DILocation(line: 232, column: 30, scope: !13723)
!13738 = !DILocation(line: 239, column: 24, scope: !13723)
!13739 = !DILocation(line: 240, column: 1, scope: !13723)
!13740 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1955, file: !1955, line: 399, type: !13741, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13743)
!13741 = !DISubroutineType(types: !13742)
!13742 = !{!193}
!13743 = !{!13744}
!13744 = !DILocalVariable(name: "stack_ptr", scope: !13740, file: !1955, line: 401, type: !193)
!13745 = !DILocation(line: 404, column: 2, scope: !13740)
!13746 = !DILocation(line: 416, column: 24, scope: !13740)
!13747 = !DILocation(line: 418, column: 14, scope: !13740)
!13748 = !DILocation(line: 0, scope: !13740)
!13749 = !DILocation(line: 423, column: 2, scope: !13740)
!13750 = !DILocation(line: 424, column: 2, scope: !13740)
!13751 = !DILocation(line: 426, column: 2, scope: !13740)
!13752 = !DILocation(line: 428, column: 2, scope: !13740)
!13753 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1955, file: !1955, line: 432, type: !13754, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13756)
!13754 = !DISubroutineType(types: !13755)
!13755 = !{null, !193}
!13756 = !{!13757}
!13757 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13753, file: !1955, line: 432, type: !193)
!13758 = !DILocation(line: 0, scope: !13753)
!13759 = !DILocation(line: 435, column: 2, scope: !13753)
!13760 = !DILocation(line: 445, column: 2, scope: !13753)
!13761 = distinct !DISubprogram(name: "bg_thread_main", scope: !1955, file: !1955, line: 277, type: !562, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !13762)
!13762 = !{!13763, !13764, !13765}
!13763 = !DILocalVariable(name: "unused1", arg: 1, scope: !13761, file: !1955, line: 277, type: !106)
!13764 = !DILocalVariable(name: "unused2", arg: 2, scope: !13761, file: !1955, line: 277, type: !106)
!13765 = !DILocalVariable(name: "unused3", arg: 3, scope: !13761, file: !1955, line: 277, type: !106)
!13766 = !DILocation(line: 0, scope: !13761)
!13767 = !DILocation(line: 291, column: 20, scope: !13761)
!13768 = !DILocation(line: 293, column: 2, scope: !13761)
!13769 = !DILocation(line: 297, column: 2, scope: !13761)
!13770 = !DILocation(line: 305, column: 2, scope: !13761)
!13771 = !DILocation(line: 307, column: 2, scope: !13761)
!13772 = !DILocation(line: 330, column: 8, scope: !13761)
!13773 = !DILocation(line: 333, column: 34, scope: !13761)
!13774 = !DILocation(line: 339, column: 1, scope: !13761)
!13775 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2216, file: !2216, line: 45, type: !13776, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13784)
!13776 = !DISubroutineType(types: !13777)
!13777 = !{null, !13778, !106}
!13778 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !406, line: 103, baseType: !13779)
!13779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13780, size: 32)
!13780 = !DISubroutineType(types: !13781)
!13781 = !{null, !13782, !106}
!13782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13783, size: 32)
!13783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2221)
!13784 = !{!13785, !13786}
!13785 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13775, file: !2216, line: 45, type: !13778)
!13786 = !DILocalVariable(name: "user_data", arg: 2, scope: !13775, file: !2216, line: 45, type: !106)
!13787 = !DILocation(line: 0, scope: !13775)
!13788 = !DILocation(line: 71, column: 1, scope: !13775)
!13789 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2216, file: !2216, line: 73, type: !13776, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13790)
!13790 = !{!13791, !13792}
!13791 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13789, file: !2216, line: 73, type: !13778)
!13792 = !DILocalVariable(name: "user_data", arg: 2, scope: !13789, file: !2216, line: 73, type: !106)
!13793 = !DILocation(line: 0, scope: !13789)
!13794 = !DILocation(line: 95, column: 1, scope: !13789)
!13795 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2216, file: !2216, line: 97, type: !7310, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2156)
!13796 = !DILocation(line: 1031, column: 3, scope: !13797, inlinedAt: !13800)
!13797 = distinct !DISubprogram(name: "__get_IPSR", scope: !6257, file: !6257, line: 1027, type: !6344, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13798)
!13798 = !{!13799}
!13799 = !DILocalVariable(name: "result", scope: !13797, file: !6257, line: 1029, type: !152)
!13800 = distinct !DILocation(line: 48, column: 10, scope: !13801, inlinedAt: !13802)
!13801 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7309, file: !7309, line: 46, type: !7310, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2156)
!13802 = distinct !DILocation(line: 99, column: 9, scope: !13795)
!13803 = !{i64 3525486}
!13804 = !DILocation(line: 0, scope: !13797, inlinedAt: !13800)
!13805 = !DILocation(line: 48, column: 9, scope: !13801, inlinedAt: !13802)
!13806 = !DILocation(line: 99, column: 2, scope: !13795)
!13807 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2216, file: !2216, line: 106, type: !3082, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2156)
!13808 = !DILocation(line: 108, column: 2, scope: !13807)
!13809 = !DILocation(line: 108, column: 17, scope: !13807)
!13810 = !DILocation(line: 108, column: 30, scope: !13807)
!13811 = !DILocation(line: 109, column: 1, scope: !13807)
!13812 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2216, file: !2216, line: 116, type: !3082, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2156)
!13813 = !DILocation(line: 118, column: 2, scope: !13812)
!13814 = !DILocation(line: 118, column: 17, scope: !13812)
!13815 = !DILocation(line: 118, column: 30, scope: !13812)
!13816 = !DILocation(line: 119, column: 1, scope: !13812)
!13817 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2216, file: !2216, line: 126, type: !7310, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2156)
!13818 = !DILocation(line: 128, column: 10, scope: !13817)
!13819 = !DILocation(line: 128, column: 25, scope: !13817)
!13820 = !DILocation(line: 128, column: 38, scope: !13817)
!13821 = !DILocation(line: 128, column: 53, scope: !13817)
!13822 = !DILocation(line: 128, column: 2, scope: !13817)
!13823 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2216, file: !2216, line: 187, type: !13824, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13826)
!13824 = !DISubroutineType(types: !13825)
!13825 = !{!107, !2220, !118}
!13826 = !{!13827, !13828}
!13827 = !DILocalVariable(name: "thread", arg: 1, scope: !13823, file: !2216, line: 187, type: !2220)
!13828 = !DILocalVariable(name: "value", arg: 2, scope: !13823, file: !2216, line: 187, type: !118)
!13829 = !DILocation(line: 0, scope: !13823)
!13830 = !DILocation(line: 190, column: 13, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13823, file: !2216, line: 190, column: 6)
!13832 = !DILocation(line: 190, column: 6, scope: !13823)
!13833 = !DILocation(line: 194, column: 10, scope: !13823)
!13834 = !DILocation(line: 194, column: 2, scope: !13823)
!13835 = !DILocation(line: 195, column: 2, scope: !13823)
!13836 = !DILocation(line: 195, column: 47, scope: !13823)
!13837 = !DILocation(line: 199, column: 2, scope: !13823)
!13838 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2216, file: !2216, line: 238, type: !13839, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13841)
!13839 = !DISubroutineType(types: !13840)
!13840 = !{!118, !2220}
!13841 = !{!13842}
!13842 = !DILocalVariable(name: "thread", arg: 1, scope: !13838, file: !2216, line: 238, type: !2220)
!13843 = !DILocation(line: 0, scope: !13838)
!13844 = !DILocation(line: 241, column: 23, scope: !13838)
!13845 = !DILocation(line: 241, column: 2, scope: !13838)
!13846 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2216, file: !2216, line: 248, type: !13847, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13849)
!13847 = !DISubroutineType(types: !13848)
!13848 = !{!107, !2219, !193, !185}
!13849 = !{!13850, !13851, !13852}
!13850 = !DILocalVariable(name: "thread", arg: 1, scope: !13846, file: !2216, line: 248, type: !2219)
!13851 = !DILocalVariable(name: "buf", arg: 2, scope: !13846, file: !2216, line: 248, type: !193)
!13852 = !DILocalVariable(name: "size", arg: 3, scope: !13846, file: !2216, line: 248, type: !185)
!13853 = !DILocation(line: 0, scope: !13846)
!13854 = !DILocation(line: 251, column: 15, scope: !13846)
!13855 = !DILocation(line: 251, column: 2, scope: !13846)
!13856 = !DILocation(line: 252, column: 2, scope: !13846)
!13857 = !DILocation(line: 0, scope: !2215)
!13858 = !DILocation(line: 281, column: 11, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !2215, file: !2216, line: 281, column: 6)
!13860 = !DILocation(line: 281, column: 20, scope: !13859)
!13861 = !DILocation(line: 275, column: 45, scope: !2215)
!13862 = !DILocation(line: 285, column: 10, scope: !2215)
!13863 = !DILocation(line: 0, scope: !2339)
!13864 = !DILocation(line: 293, column: 39, scope: !13865)
!13865 = distinct !DILexicalBlock(scope: !2339, file: !2216, line: 293, column: 2)
!13866 = !DILocation(line: 293, column: 2, scope: !2339)
!13867 = !DILocation(line: 273, column: 14, scope: !2215)
!13868 = !DILocation(line: 309, column: 2, scope: !2215)
!13869 = !DILocation(line: 309, column: 11, scope: !2215)
!13870 = !DILocation(line: 311, column: 2, scope: !2215)
!13871 = !DILocation(line: 293, column: 26, scope: !13865)
!13872 = !DILocation(line: 294, column: 9, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13865, file: !2216, line: 293, column: 54)
!13874 = !DILocation(line: 295, column: 21, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13873, file: !2216, line: 295, column: 7)
!13876 = !DILocation(line: 295, column: 28, scope: !13875)
!13877 = !DILocation(line: 295, column: 7, scope: !13873)
!13878 = !DILocation(line: 299, column: 25, scope: !13873)
!13879 = !DILocation(line: 299, column: 41, scope: !13873)
!13880 = !DILocation(line: 300, column: 7, scope: !13873)
!13881 = !DILocation(line: 300, column: 26, scope: !13873)
!13882 = !DILocation(line: 299, column: 10, scope: !13873)
!13883 = !DILocation(line: 299, column: 7, scope: !13873)
!13884 = !DILocation(line: 302, column: 16, scope: !13873)
!13885 = !DILocation(line: 304, column: 20, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13873, file: !2216, line: 304, column: 7)
!13887 = !DILocation(line: 304, column: 7, scope: !13873)
!13888 = !DILocation(line: 305, column: 26, scope: !13889)
!13889 = distinct !DILexicalBlock(scope: !13886, file: !2216, line: 304, column: 26)
!13890 = !DILocation(line: 305, column: 42, scope: !13889)
!13891 = !DILocation(line: 305, column: 11, scope: !13889)
!13892 = !DILocation(line: 305, column: 8, scope: !13889)
!13893 = !DILocation(line: 306, column: 3, scope: !13889)
!13894 = !DILocation(line: 293, column: 50, scope: !13865)
!13895 = !DILocation(line: 312, column: 1, scope: !2215)
!13896 = distinct !DISubprogram(name: "copy_bytes", scope: !2216, file: !2216, line: 261, type: !13897, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13899)
!13897 = !DISubroutineType(types: !13898)
!13898 = !{!185, !193, !185, !118, !185}
!13899 = !{!13900, !13901, !13902, !13903, !13904}
!13900 = !DILocalVariable(name: "dest", arg: 1, scope: !13896, file: !2216, line: 261, type: !193)
!13901 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13896, file: !2216, line: 261, type: !185)
!13902 = !DILocalVariable(name: "src", arg: 3, scope: !13896, file: !2216, line: 261, type: !118)
!13903 = !DILocalVariable(name: "src_size", arg: 4, scope: !13896, file: !2216, line: 261, type: !185)
!13904 = !DILocalVariable(name: "bytes_to_copy", scope: !13896, file: !2216, line: 263, type: !185)
!13905 = !DILocation(line: 0, scope: !13896)
!13906 = !DILocation(line: 265, column: 18, scope: !13896)
!13907 = !DILocation(line: 266, column: 2, scope: !13896)
!13908 = !DILocation(line: 268, column: 2, scope: !13896)
!13909 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2216, file: !2216, line: 383, type: !13910, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13912)
!13910 = !DISubroutineType(types: !13911)
!13911 = !{null, !2220}
!13912 = !{!13913}
!13913 = !DILocalVariable(name: "thread", arg: 1, scope: !13909, file: !2216, line: 383, type: !2220)
!13914 = !DILocation(line: 0, scope: !13909)
!13915 = !DILocation(line: 387, column: 2, scope: !13909)
!13916 = !DILocation(line: 388, column: 1, scope: !13909)
!13917 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2216, file: !2216, line: 528, type: !13918, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13925)
!13918 = !DISubroutineType(types: !13919)
!13919 = !{!193, !2220, !13920, !185, !559, !106, !106, !106, !107, !152, !118}
!13920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13921, size: 32)
!13921 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !13922)
!13922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !13923)
!13923 = !{!13924}
!13924 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13922, file: !577, line: 48, baseType: !120, size: 8)
!13925 = !{!13926, !13927, !13928, !13929, !13930, !13931, !13932, !13933, !13934, !13935, !13936}
!13926 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13917, file: !2216, line: 528, type: !2220)
!13927 = !DILocalVariable(name: "stack", arg: 2, scope: !13917, file: !2216, line: 529, type: !13920)
!13928 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13917, file: !2216, line: 529, type: !185)
!13929 = !DILocalVariable(name: "entry", arg: 4, scope: !13917, file: !2216, line: 530, type: !559)
!13930 = !DILocalVariable(name: "p1", arg: 5, scope: !13917, file: !2216, line: 531, type: !106)
!13931 = !DILocalVariable(name: "p2", arg: 6, scope: !13917, file: !2216, line: 531, type: !106)
!13932 = !DILocalVariable(name: "p3", arg: 7, scope: !13917, file: !2216, line: 531, type: !106)
!13933 = !DILocalVariable(name: "prio", arg: 8, scope: !13917, file: !2216, line: 532, type: !107)
!13934 = !DILocalVariable(name: "options", arg: 9, scope: !13917, file: !2216, line: 532, type: !152)
!13935 = !DILocalVariable(name: "name", arg: 10, scope: !13917, file: !2216, line: 532, type: !118)
!13936 = !DILocalVariable(name: "stack_ptr", scope: !13917, file: !2216, line: 534, type: !193)
!13937 = !DILocation(line: 0, scope: !13917)
!13938 = !DILocation(line: 536, column: 2, scope: !13939)
!13939 = distinct !DILexicalBlock(scope: !13940, file: !2216, line: 536, column: 2)
!13940 = distinct !DILexicalBlock(scope: !13941, file: !2216, line: 536, column: 2)
!13941 = distinct !DILexicalBlock(scope: !13917, file: !2216, line: 536, column: 2)
!13942 = !DILocation(line: 536, column: 2, scope: !13943)
!13943 = distinct !DILexicalBlock(scope: !13939, file: !2216, line: 536, column: 2)
!13944 = !DILocation(line: 550, column: 28, scope: !13917)
!13945 = !DILocation(line: 550, column: 2, scope: !13917)
!13946 = !DILocation(line: 553, column: 34, scope: !13917)
!13947 = !DILocation(line: 553, column: 2, scope: !13917)
!13948 = !DILocation(line: 554, column: 14, scope: !13917)
!13949 = !DILocation(line: 564, column: 2, scope: !13917)
!13950 = !DILocation(line: 567, column: 14, scope: !13917)
!13951 = !DILocation(line: 567, column: 24, scope: !13917)
!13952 = !DILocation(line: 594, column: 11, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13917, file: !2216, line: 594, column: 6)
!13954 = !DILocation(line: 0, scope: !13953)
!13955 = !DILocation(line: 594, column: 6, scope: !13917)
!13956 = !DILocation(line: 595, column: 3, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13953, file: !2216, line: 594, column: 20)
!13958 = !DILocation(line: 598, column: 3, scope: !13957)
!13959 = !DILocation(line: 598, column: 52, scope: !13957)
!13960 = !DILocation(line: 599, column: 2, scope: !13957)
!13961 = !DILocation(line: 600, column: 23, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13953, file: !2216, line: 599, column: 9)
!13963 = !DILocation(line: 612, column: 7, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13917, file: !2216, line: 612, column: 6)
!13965 = !DILocation(line: 612, column: 6, scope: !13917)
!13966 = !DILocation(line: 627, column: 40, scope: !13917)
!13967 = !DILocation(line: 637, column: 2, scope: !13917)
!13968 = !DILocation(line: 613, column: 15, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !13964, file: !2216, line: 612, column: 17)
!13970 = !DILocation(line: 613, column: 29, scope: !13969)
!13971 = !DILocation(line: 638, column: 1, scope: !13917)
!13972 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13620, file: !13620, line: 78, type: !13973, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13975)
!13973 = !DISubroutineType(types: !13974)
!13974 = !{!145, !106}
!13975 = !{!13976}
!13976 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13972, file: !13620, line: 78, type: !106)
!13977 = !DILocation(line: 0, scope: !13972)
!13978 = !DILocation(line: 80, column: 21, scope: !13972)
!13979 = !DILocation(line: 80, column: 2, scope: !13972)
!13980 = distinct !DISubprogram(name: "z_waitq_init", scope: !13981, file: !13981, line: 47, type: !13982, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13984)
!13981 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13982 = !DISubroutineType(types: !13983)
!13983 = !{null, !2251}
!13984 = !{!13985}
!13985 = !DILocalVariable(name: "w", arg: 1, scope: !13980, file: !13981, line: 47, type: !2251)
!13986 = !DILocation(line: 0, scope: !13980)
!13987 = !DILocation(line: 49, column: 21, scope: !13980)
!13988 = !DILocation(line: 49, column: 2, scope: !13980)
!13989 = !DILocation(line: 50, column: 1, scope: !13980)
!13990 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2216, file: !2216, line: 791, type: !13991, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13994)
!13991 = !DISubroutineType(types: !13992)
!13992 = !{null, !13993, !107, !152, !32}
!13993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!13994 = !{!13995, !13996, !13997, !13998}
!13995 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13990, file: !2216, line: 791, type: !13993)
!13996 = !DILocalVariable(name: "priority", arg: 2, scope: !13990, file: !2216, line: 791, type: !107)
!13997 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13990, file: !2216, line: 792, type: !152)
!13998 = !DILocalVariable(name: "options", arg: 4, scope: !13990, file: !2216, line: 792, type: !32)
!13999 = !DILocation(line: 0, scope: !13990)
!14000 = !DILocation(line: 795, column: 15, scope: !13990)
!14001 = !DILocation(line: 795, column: 25, scope: !13990)
!14002 = !DILocation(line: 796, column: 30, scope: !13990)
!14003 = !DILocation(line: 796, column: 15, scope: !13990)
!14004 = !DILocation(line: 796, column: 28, scope: !13990)
!14005 = !DILocation(line: 797, column: 30, scope: !13990)
!14006 = !DILocation(line: 797, column: 15, scope: !13990)
!14007 = !DILocation(line: 797, column: 28, scope: !13990)
!14008 = !DILocation(line: 799, column: 22, scope: !13990)
!14009 = !DILocation(line: 799, column: 15, scope: !13990)
!14010 = !DILocation(line: 799, column: 20, scope: !13990)
!14011 = !DILocation(line: 801, column: 15, scope: !13990)
!14012 = !DILocation(line: 801, column: 28, scope: !13990)
!14013 = !DILocation(line: 814, column: 2, scope: !13990)
!14014 = !DILocation(line: 815, column: 1, scope: !13990)
!14015 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2216, file: !2216, line: 449, type: !14016, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14018)
!14016 = !DISubroutineType(types: !14017)
!14017 = !{!193, !2220, !13920, !185}
!14018 = !{!14019, !14020, !14021, !14022, !14023, !14024, !14025, !14026}
!14019 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14015, file: !2216, line: 449, type: !2220)
!14020 = !DILocalVariable(name: "stack", arg: 2, scope: !14015, file: !2216, line: 450, type: !13920)
!14021 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14015, file: !2216, line: 450, type: !185)
!14022 = !DILocalVariable(name: "stack_obj_size", scope: !14015, file: !2216, line: 452, type: !185)
!14023 = !DILocalVariable(name: "stack_buf_size", scope: !14015, file: !2216, line: 452, type: !185)
!14024 = !DILocalVariable(name: "stack_ptr", scope: !14015, file: !2216, line: 453, type: !193)
!14025 = !DILocalVariable(name: "stack_buf_start", scope: !14015, file: !2216, line: 453, type: !193)
!14026 = !DILocalVariable(name: "delta", scope: !14015, file: !2216, line: 454, type: !185)
!14027 = !DILocation(line: 0, scope: !14015)
!14028 = !DILocation(line: 465, column: 20, scope: !14029)
!14029 = distinct !DILexicalBlock(scope: !14015, file: !2216, line: 463, column: 2)
!14030 = !DILocation(line: 466, column: 21, scope: !14029)
!14031 = !DILocation(line: 473, column: 28, scope: !14015)
!14032 = !DILocation(line: 514, column: 33, scope: !14015)
!14033 = !DILocation(line: 514, column: 25, scope: !14015)
!14034 = !DILocation(line: 514, column: 31, scope: !14015)
!14035 = !DILocation(line: 515, column: 25, scope: !14015)
!14036 = !DILocation(line: 515, column: 30, scope: !14015)
!14037 = !DILocation(line: 516, column: 25, scope: !14015)
!14038 = !DILocation(line: 516, column: 31, scope: !14015)
!14039 = !DILocation(line: 520, column: 2, scope: !14015)
!14040 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !14041, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14043)
!14041 = !DISubroutineType(types: !14042)
!14042 = !{!193, !13920}
!14043 = !{!14044}
!14044 = !DILocalVariable(name: "sym", arg: 1, scope: !14040, file: !577, line: 331, type: !13920)
!14045 = !DILocation(line: 0, scope: !14040)
!14046 = !DILocation(line: 333, column: 21, scope: !14040)
!14047 = !DILocation(line: 333, column: 2, scope: !14040)
!14048 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14049, file: !14049, line: 40, type: !14050, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14052)
!14049 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14050 = !DISubroutineType(types: !14051)
!14051 = !{null, !13993}
!14052 = !{!14053}
!14053 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14048, file: !14049, line: 40, type: !13993)
!14054 = !DILocation(line: 0, scope: !14048)
!14055 = !DILocation(line: 42, column: 31, scope: !14048)
!14056 = !DILocation(line: 42, column: 2, scope: !14048)
!14057 = !DILocation(line: 43, column: 1, scope: !14048)
!14058 = distinct !DISubprogram(name: "z_init_timeout", scope: !14049, file: !14049, line: 25, type: !2277, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14059)
!14059 = !{!14060}
!14060 = !DILocalVariable(name: "to", arg: 1, scope: !14058, file: !14049, line: 25, type: !2279)
!14061 = !DILocation(line: 0, scope: !14058)
!14062 = !DILocation(line: 27, column: 22, scope: !14058)
!14063 = !DILocation(line: 27, column: 2, scope: !14058)
!14064 = !DILocation(line: 28, column: 1, scope: !14058)
!14065 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14066, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14068)
!14066 = !DISubroutineType(types: !14067)
!14067 = !{null, !2326}
!14068 = !{!14069}
!14069 = !DILocalVariable(name: "node", arg: 1, scope: !14065, file: !319, line: 211, type: !2326)
!14070 = !DILocation(line: 0, scope: !14065)
!14071 = !DILocation(line: 213, column: 8, scope: !14065)
!14072 = !DILocation(line: 213, column: 13, scope: !14065)
!14073 = !DILocation(line: 214, column: 8, scope: !14065)
!14074 = !DILocation(line: 214, column: 13, scope: !14065)
!14075 = !DILocation(line: 215, column: 1, scope: !14065)
!14076 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !14077, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14080)
!14077 = !DISubroutineType(types: !14078)
!14078 = !{null, !14079}
!14079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 32)
!14080 = !{!14081}
!14081 = !DILocalVariable(name: "list", arg: 1, scope: !14076, file: !319, line: 197, type: !14079)
!14082 = !DILocation(line: 0, scope: !14076)
!14083 = !DILocation(line: 199, column: 8, scope: !14076)
!14084 = !DILocation(line: 199, column: 13, scope: !14076)
!14085 = !DILocation(line: 200, column: 8, scope: !14076)
!14086 = !DILocation(line: 200, column: 13, scope: !14076)
!14087 = !DILocation(line: 201, column: 1, scope: !14076)
!14088 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2216, file: !2216, line: 641, type: !14089, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14095)
!14089 = !DISubroutineType(types: !14090)
!14090 = !{!2219, !2220, !13920, !185, !559, !106, !106, !106, !107, !152, !14091}
!14091 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !14092)
!14092 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !14093)
!14093 = !{!14094}
!14094 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14092, file: !565, line: 66, baseType: !564, size: 64)
!14095 = !{!14096, !14097, !14098, !14099, !14100, !14101, !14102, !14103, !14104, !14105}
!14096 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14088, file: !2216, line: 641, type: !2220)
!14097 = !DILocalVariable(name: "stack", arg: 2, scope: !14088, file: !2216, line: 642, type: !13920)
!14098 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14088, file: !2216, line: 643, type: !185)
!14099 = !DILocalVariable(name: "entry", arg: 4, scope: !14088, file: !2216, line: 643, type: !559)
!14100 = !DILocalVariable(name: "p1", arg: 5, scope: !14088, file: !2216, line: 644, type: !106)
!14101 = !DILocalVariable(name: "p2", arg: 6, scope: !14088, file: !2216, line: 644, type: !106)
!14102 = !DILocalVariable(name: "p3", arg: 7, scope: !14088, file: !2216, line: 644, type: !106)
!14103 = !DILocalVariable(name: "prio", arg: 8, scope: !14088, file: !2216, line: 645, type: !107)
!14104 = !DILocalVariable(name: "options", arg: 9, scope: !14088, file: !2216, line: 645, type: !152)
!14105 = !DILocalVariable(name: "delay", arg: 10, scope: !14088, file: !2216, line: 645, type: !14091)
!14106 = !DILocation(line: 0, scope: !14088)
!14107 = !DILocation(line: 1031, column: 3, scope: !13797, inlinedAt: !14108)
!14108 = distinct !DILocation(line: 48, column: 10, scope: !13801, inlinedAt: !14109)
!14109 = distinct !DILocation(line: 647, column: 2, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14111, file: !2216, line: 647, column: 2)
!14111 = distinct !DILexicalBlock(scope: !14088, file: !2216, line: 647, column: 2)
!14112 = !DILocation(line: 0, scope: !13797, inlinedAt: !14108)
!14113 = !DILocation(line: 48, column: 9, scope: !13801, inlinedAt: !14109)
!14114 = !DILocation(line: 647, column: 2, scope: !14111)
!14115 = !DILocation(line: 647, column: 2, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14110, file: !2216, line: 647, column: 2)
!14117 = !DILocation(line: 649, column: 2, scope: !14088)
!14118 = !DILocation(line: 652, column: 7, scope: !14119)
!14119 = distinct !DILexicalBlock(scope: !14088, file: !2216, line: 652, column: 6)
!14120 = !DILocation(line: 652, column: 6, scope: !14088)
!14121 = !DILocation(line: 653, column: 3, scope: !14122)
!14122 = distinct !DILexicalBlock(scope: !14119, file: !2216, line: 652, column: 39)
!14123 = !DILocation(line: 654, column: 2, scope: !14122)
!14124 = !DILocation(line: 656, column: 2, scope: !14088)
!14125 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2216, file: !2216, line: 401, type: !14126, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14128)
!14126 = !DISubroutineType(types: !14127)
!14127 = !{null, !2220, !14091}
!14128 = !{!14129, !14130}
!14129 = !DILocalVariable(name: "thread", arg: 1, scope: !14125, file: !2216, line: 401, type: !2220)
!14130 = !DILocalVariable(name: "delay", arg: 2, scope: !14125, file: !2216, line: 401, type: !14091)
!14131 = !DILocation(line: 0, scope: !14125)
!14132 = !DILocation(line: 404, column: 6, scope: !14133)
!14133 = distinct !DILexicalBlock(scope: !14125, file: !2216, line: 404, column: 6)
!14134 = !DILocation(line: 404, column: 6, scope: !14125)
!14135 = !DILocation(line: 405, column: 3, scope: !14136)
!14136 = distinct !DILexicalBlock(scope: !14133, file: !2216, line: 404, column: 38)
!14137 = !DILocation(line: 406, column: 2, scope: !14136)
!14138 = !DILocation(line: 407, column: 3, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14133, file: !2216, line: 406, column: 9)
!14140 = !DILocation(line: 413, column: 1, scope: !14125)
!14141 = distinct !DISubprogram(name: "k_thread_start", scope: !4413, file: !4413, line: 205, type: !14142, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14144)
!14142 = !DISubroutineType(types: !14143)
!14143 = !{null, !2219}
!14144 = !{!14145}
!14145 = !DILocalVariable(name: "thread", arg: 1, scope: !14141, file: !4413, line: 205, type: !2219)
!14146 = !DILocation(line: 0, scope: !14141)
!14147 = !DILocation(line: 214, column: 2, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14141, file: !4413, line: 214, column: 2)
!14149 = !{i64 2154776055}
!14150 = !DILocation(line: 215, column: 2, scope: !14141)
!14151 = !DILocation(line: 216, column: 1, scope: !14141)
!14152 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14049, file: !14049, line: 47, type: !14126, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14153)
!14153 = !{!14154, !14155}
!14154 = !DILocalVariable(name: "thread", arg: 1, scope: !14152, file: !14049, line: 47, type: !2220)
!14155 = !DILocalVariable(name: "ticks", arg: 2, scope: !14152, file: !14049, line: 47, type: !14091)
!14156 = !DILocation(line: 0, scope: !14152)
!14157 = !DILocation(line: 49, column: 30, scope: !14152)
!14158 = !DILocation(line: 49, column: 2, scope: !14152)
!14159 = !DILocation(line: 50, column: 1, scope: !14152)
!14160 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2216, file: !2216, line: 748, type: !3082, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14161)
!14161 = !{!14162, !14180}
!14162 = !DILocalVariable(name: "thread_data", scope: !14163, file: !2216, line: 750, type: !14164)
!14163 = distinct !DILexicalBlock(scope: !14160, file: !2216, line: 750, column: 2)
!14164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14165, size: 32)
!14165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !406, line: 620, size: 384, elements: !14166)
!14166 = !{!14167, !14168, !14169, !14170, !14171, !14172, !14173, !14174, !14175, !14176, !14177, !14179}
!14167 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14165, file: !406, line: 621, baseType: !2220, size: 32)
!14168 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14165, file: !406, line: 622, baseType: !13920, size: 32, offset: 32)
!14169 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14165, file: !406, line: 623, baseType: !32, size: 32, offset: 64)
!14170 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14165, file: !406, line: 624, baseType: !559, size: 32, offset: 96)
!14171 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14165, file: !406, line: 625, baseType: !106, size: 32, offset: 128)
!14172 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14165, file: !406, line: 626, baseType: !106, size: 32, offset: 160)
!14173 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14165, file: !406, line: 627, baseType: !106, size: 32, offset: 192)
!14174 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14165, file: !406, line: 628, baseType: !107, size: 32, offset: 224)
!14175 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14165, file: !406, line: 629, baseType: !152, size: 32, offset: 256)
!14176 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14165, file: !406, line: 630, baseType: !895, size: 32, offset: 288)
!14177 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14165, file: !406, line: 631, baseType: !14178, size: 32, offset: 320)
!14178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 32)
!14179 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14165, file: !406, line: 632, baseType: !118, size: 32, offset: 352)
!14180 = !DILocalVariable(name: "thread_data", scope: !14181, file: !2216, line: 781, type: !14164)
!14181 = distinct !DILexicalBlock(scope: !14160, file: !2216, line: 781, column: 2)
!14182 = !DILocation(line: 0, scope: !14163)
!14183 = !DILocation(line: 750, column: 2, scope: !14184)
!14184 = distinct !DILexicalBlock(scope: !14185, file: !2216, line: 750, column: 2)
!14185 = distinct !DILexicalBlock(scope: !14186, file: !2216, line: 750, column: 2)
!14186 = distinct !DILexicalBlock(scope: !14163, file: !2216, line: 750, column: 2)
!14187 = !DILocation(line: 750, column: 2, scope: !14188)
!14188 = distinct !DILexicalBlock(scope: !14189, file: !2216, line: 750, column: 2)
!14189 = distinct !DILexicalBlock(scope: !14184, file: !2216, line: 750, column: 2)
!14190 = !DILocation(line: 750, column: 2, scope: !14185)
!14191 = !DILocation(line: 750, column: 2, scope: !14163)
!14192 = !DILocation(line: 780, column: 2, scope: !14160)
!14193 = !DILocation(line: 0, scope: !14181)
!14194 = !DILocation(line: 781, column: 2, scope: !14195)
!14195 = distinct !DILexicalBlock(scope: !14196, file: !2216, line: 781, column: 2)
!14196 = distinct !DILexicalBlock(scope: !14197, file: !2216, line: 781, column: 2)
!14197 = distinct !DILexicalBlock(scope: !14181, file: !2216, line: 781, column: 2)
!14198 = !DILocation(line: 752, column: 17, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14186, file: !2216, line: 750, column: 38)
!14200 = !DILocation(line: 753, column: 17, scope: !14199)
!14201 = !DILocation(line: 754, column: 17, scope: !14199)
!14202 = !DILocation(line: 755, column: 17, scope: !14199)
!14203 = !DILocation(line: 756, column: 17, scope: !14199)
!14204 = !DILocation(line: 757, column: 17, scope: !14199)
!14205 = !DILocation(line: 758, column: 17, scope: !14199)
!14206 = !DILocation(line: 759, column: 17, scope: !14199)
!14207 = !DILocation(line: 760, column: 17, scope: !14199)
!14208 = !DILocation(line: 761, column: 17, scope: !14199)
!14209 = !DILocation(line: 751, column: 3, scope: !14199)
!14210 = !DILocation(line: 763, column: 16, scope: !14199)
!14211 = !DILocation(line: 763, column: 29, scope: !14199)
!14212 = !DILocation(line: 763, column: 39, scope: !14199)
!14213 = !DILocation(line: 750, column: 2, scope: !14186)
!14214 = !DILocation(line: 750, column: 2, scope: !14189)
!14215 = distinct !{!14215, !14191, !14216}
!14216 = !DILocation(line: 764, column: 2, scope: !14163)
!14217 = !DILocation(line: 781, column: 2, scope: !14218)
!14218 = distinct !DILexicalBlock(scope: !14219, file: !2216, line: 781, column: 2)
!14219 = distinct !DILexicalBlock(scope: !14195, file: !2216, line: 781, column: 2)
!14220 = !DILocation(line: 781, column: 2, scope: !14196)
!14221 = !DILocation(line: 781, column: 2, scope: !14181)
!14222 = !DILocation(line: 787, column: 2, scope: !14160)
!14223 = !DILocation(line: 788, column: 1, scope: !14160)
!14224 = !DILocation(line: 782, column: 20, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !14226, file: !2216, line: 782, column: 7)
!14226 = distinct !DILexicalBlock(scope: !14197, file: !2216, line: 781, column: 38)
!14227 = !DILocation(line: 782, column: 31, scope: !14225)
!14228 = !DILocation(line: 782, column: 7, scope: !14226)
!14229 = !DILocation(line: 783, column: 37, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14225, file: !2216, line: 782, column: 51)
!14231 = !DILocation(line: 784, column: 10, scope: !14230)
!14232 = !DILocation(line: 783, column: 4, scope: !14230)
!14233 = !DILocation(line: 785, column: 3, scope: !14230)
!14234 = !DILocation(line: 781, column: 2, scope: !14197)
!14235 = !DILocation(line: 781, column: 2, scope: !14219)
!14236 = distinct !{!14236, !14221, !14237}
!14237 = !DILocation(line: 786, column: 2, scope: !14181)
!14238 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !8725, file: !8725, line: 403, type: !14239, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14241)
!14239 = !DISubroutineType(types: !14240)
!14240 = !{!566, !566}
!14241 = !{!14242}
!14242 = !DILocalVariable(name: "t", arg: 1, scope: !14238, file: !8725, line: 403, type: !566)
!14243 = !DILocation(line: 0, scope: !14238)
!14244 = !DILocalVariable(name: "t", arg: 1, scope: !14245, file: !8725, line: 102, type: !566)
!14245 = distinct !DISubprogram(name: "z_tmcvt", scope: !8725, file: !8725, line: 102, type: !8732, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14246)
!14246 = !{!14244, !14247, !14248, !14249, !14250, !14251, !14252, !14253, !14254, !14255, !14256}
!14247 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14245, file: !8725, line: 102, type: !152)
!14248 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14245, file: !8725, line: 103, type: !152)
!14249 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14245, file: !8725, line: 103, type: !145)
!14250 = !DILocalVariable(name: "result32", arg: 5, scope: !14245, file: !8725, line: 104, type: !145)
!14251 = !DILocalVariable(name: "round_up", arg: 6, scope: !14245, file: !8725, line: 104, type: !145)
!14252 = !DILocalVariable(name: "round_off", arg: 7, scope: !14245, file: !8725, line: 105, type: !145)
!14253 = !DILocalVariable(name: "mul_ratio", scope: !14245, file: !8725, line: 107, type: !145)
!14254 = !DILocalVariable(name: "div_ratio", scope: !14245, file: !8725, line: 109, type: !145)
!14255 = !DILocalVariable(name: "off", scope: !14245, file: !8725, line: 116, type: !566)
!14256 = !DILocalVariable(name: "rdivisor", scope: !14257, file: !8725, line: 119, type: !152)
!14257 = distinct !DILexicalBlock(scope: !14258, file: !8725, line: 118, column: 18)
!14258 = distinct !DILexicalBlock(scope: !14245, file: !8725, line: 118, column: 6)
!14259 = !DILocation(line: 0, scope: !14245, inlinedAt: !14260)
!14260 = distinct !DILocation(line: 406, column: 9, scope: !14238)
!14261 = !DILocation(line: 145, column: 13, scope: !14262, inlinedAt: !14260)
!14262 = distinct !DILexicalBlock(scope: !14263, file: !8725, line: 144, column: 10)
!14263 = distinct !DILexicalBlock(scope: !14264, file: !8725, line: 142, column: 7)
!14264 = distinct !DILexicalBlock(scope: !14265, file: !8725, line: 141, column: 24)
!14265 = distinct !DILexicalBlock(scope: !14266, file: !8725, line: 141, column: 13)
!14266 = distinct !DILexicalBlock(scope: !14245, file: !8725, line: 134, column: 6)
!14267 = !DILocation(line: 406, column: 2, scope: !14238)
!14268 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2216, file: !2216, line: 817, type: !4291, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14269)
!14269 = !{!14270, !14271, !14272, !14273}
!14270 = !DILocalVariable(name: "entry", arg: 1, scope: !14268, file: !2216, line: 817, type: !559)
!14271 = !DILocalVariable(name: "p1", arg: 2, scope: !14268, file: !2216, line: 818, type: !106)
!14272 = !DILocalVariable(name: "p2", arg: 3, scope: !14268, file: !2216, line: 818, type: !106)
!14273 = !DILocalVariable(name: "p3", arg: 4, scope: !14268, file: !2216, line: 818, type: !106)
!14274 = !DILocation(line: 0, scope: !14268)
!14275 = !DILocation(line: 822, column: 2, scope: !14268)
!14276 = !DILocation(line: 822, column: 17, scope: !14268)
!14277 = !DILocation(line: 822, column: 30, scope: !14268)
!14278 = !DILocation(line: 823, column: 2, scope: !14268)
!14279 = !DILocation(line: 845, column: 2, scope: !14268)
!14280 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2216, file: !2216, line: 853, type: !14281, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14284)
!14281 = !DISubroutineType(types: !14282)
!14282 = !{!145, !14283}
!14283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 32)
!14284 = !{!14285, !14286}
!14285 = !DILocalVariable(name: "l", arg: 1, scope: !14280, file: !2216, line: 853, type: !14283)
!14286 = !DILocalVariable(name: "thread_cpu", scope: !14280, file: !2216, line: 855, type: !22)
!14287 = !DILocation(line: 0, scope: !14280)
!14288 = !DILocation(line: 855, column: 28, scope: !14280)
!14289 = !DILocation(line: 857, column: 17, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14280, file: !2216, line: 857, column: 6)
!14291 = !DILocation(line: 857, column: 6, scope: !14280)
!14292 = !DILocation(line: 858, column: 19, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14294, file: !2216, line: 858, column: 7)
!14294 = distinct !DILexicalBlock(scope: !14290, file: !2216, line: 857, column: 24)
!14295 = !DILocation(line: 858, column: 42, scope: !14293)
!14296 = !DILocation(line: 858, column: 28, scope: !14293)
!14297 = !DILocation(line: 858, column: 25, scope: !14293)
!14298 = !DILocation(line: 858, column: 7, scope: !14294)
!14299 = !DILocation(line: 862, column: 2, scope: !14280)
!14300 = !DILocation(line: 863, column: 1, scope: !14280)
!14301 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2216, file: !2216, line: 865, type: !14281, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14302)
!14302 = !{!14303}
!14303 = !DILocalVariable(name: "l", arg: 1, scope: !14301, file: !2216, line: 865, type: !14283)
!14304 = !DILocation(line: 0, scope: !14301)
!14305 = !DILocation(line: 867, column: 9, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14301, file: !2216, line: 867, column: 6)
!14307 = !DILocation(line: 867, column: 38, scope: !14306)
!14308 = !DILocation(line: 867, column: 24, scope: !14306)
!14309 = !DILocation(line: 867, column: 54, scope: !14306)
!14310 = !DILocation(line: 867, column: 43, scope: !14306)
!14311 = !DILocation(line: 867, column: 41, scope: !14306)
!14312 = !DILocation(line: 867, column: 20, scope: !14306)
!14313 = !DILocation(line: 867, column: 6, scope: !14301)
!14314 = !DILocation(line: 870, column: 16, scope: !14301)
!14315 = !DILocation(line: 871, column: 2, scope: !14301)
!14316 = !DILocation(line: 872, column: 1, scope: !14301)
!14317 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2216, file: !2216, line: 874, type: !14318, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14320)
!14318 = !DISubroutineType(types: !14319)
!14319 = !{null, !14283}
!14320 = !{!14321}
!14321 = !DILocalVariable(name: "l", arg: 1, scope: !14317, file: !2216, line: 874, type: !14283)
!14322 = !DILocation(line: 0, scope: !14317)
!14323 = !DILocation(line: 876, column: 32, scope: !14317)
!14324 = !DILocation(line: 876, column: 18, scope: !14317)
!14325 = !DILocation(line: 876, column: 48, scope: !14317)
!14326 = !DILocation(line: 876, column: 37, scope: !14317)
!14327 = !DILocation(line: 876, column: 35, scope: !14317)
!14328 = !DILocation(line: 876, column: 5, scope: !14317)
!14329 = !DILocation(line: 876, column: 16, scope: !14317)
!14330 = !DILocation(line: 877, column: 1, scope: !14317)
!14331 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2216, file: !2216, line: 888, type: !14332, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14334)
!14332 = !DISubroutineType(types: !14333)
!14333 = !{!107, !2220}
!14334 = !{!14335}
!14335 = !DILocalVariable(name: "thread", arg: 1, scope: !14331, file: !2216, line: 888, type: !2220)
!14336 = !DILocation(line: 0, scope: !14331)
!14337 = !DILocation(line: 893, column: 2, scope: !14331)
!14338 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2216, file: !2216, line: 897, type: !14339, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14341)
!14339 = !DISubroutineType(types: !14340)
!14340 = !{!107, !2220, !32}
!14341 = !{!14342, !14343}
!14342 = !DILocalVariable(name: "thread", arg: 1, scope: !14338, file: !2216, line: 897, type: !2220)
!14343 = !DILocalVariable(name: "options", arg: 2, scope: !14338, file: !2216, line: 897, type: !32)
!14344 = !DILocation(line: 0, scope: !14338)
!14345 = !DILocation(line: 902, column: 2, scope: !14338)
!14346 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2216, file: !2216, line: 1072, type: !14347, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14352)
!14347 = !DISubroutineType(types: !14348)
!14348 = !{!107, !2219, !14349}
!14349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14350, size: 32)
!14350 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !309, line: 234, baseType: !14351)
!14351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !309, line: 192, elements: !2156)
!14352 = !{!14353, !14354}
!14353 = !DILocalVariable(name: "thread", arg: 1, scope: !14346, file: !2216, line: 1072, type: !2219)
!14354 = !DILocalVariable(name: "stats", arg: 2, scope: !14346, file: !2216, line: 1073, type: !14349)
!14355 = !DILocation(line: 0, scope: !14346)
!14356 = !DILocation(line: 1075, column: 14, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14346, file: !2216, line: 1075, column: 6)
!14358 = !DILocation(line: 1075, column: 23, scope: !14357)
!14359 = !DILocation(line: 1086, column: 1, scope: !14346)
!14360 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2216, file: !2216, line: 1088, type: !14361, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14363)
!14361 = !DISubroutineType(types: !14362)
!14362 = !{!107, !14349}
!14363 = !{!14364}
!14364 = !DILocalVariable(name: "stats", arg: 1, scope: !14360, file: !2216, line: 1088, type: !14349)
!14365 = !DILocation(line: 0, scope: !14360)
!14366 = !DILocation(line: 1094, column: 12, scope: !14367)
!14367 = distinct !DILexicalBlock(scope: !14360, file: !2216, line: 1094, column: 6)
!14368 = !DILocation(line: 1120, column: 1, scope: !14360)
!14369 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14370, file: !14370, line: 20, type: !3082, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !2156)
!14370 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14371 = !DILocation(line: 30, column: 2, scope: !14369)
!14372 = !DILocation(line: 31, column: 1, scope: !14369)
!14373 = distinct !DISubprogram(name: "idle", scope: !14370, file: !14370, line: 33, type: !562, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !14374)
!14374 = !{!14375, !14376, !14377}
!14375 = !DILocalVariable(name: "unused1", arg: 1, scope: !14373, file: !14370, line: 33, type: !106)
!14376 = !DILocalVariable(name: "unused2", arg: 2, scope: !14373, file: !14370, line: 33, type: !106)
!14377 = !DILocalVariable(name: "unused3", arg: 3, scope: !14373, file: !14370, line: 33, type: !106)
!14378 = !DILocation(line: 0, scope: !14373)
!14379 = !DILocation(line: 39, column: 2, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14381, file: !14370, line: 39, column: 2)
!14381 = distinct !DILexicalBlock(scope: !14373, file: !14370, line: 39, column: 2)
!14382 = !DILocation(line: 39, column: 2, scope: !14381)
!14383 = !DILocation(line: 39, column: 2, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14380, file: !14370, line: 39, column: 2)
!14385 = !DILocation(line: 55, column: 2, scope: !14386, inlinedAt: !14390)
!14386 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5938, file: !5938, line: 42, type: !5939, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !14387)
!14387 = !{!14388, !14389}
!14388 = !DILocalVariable(name: "key", scope: !14386, file: !5938, line: 44, type: !32)
!14389 = !DILocalVariable(name: "tmp", scope: !14386, file: !5938, line: 53, type: !32)
!14390 = distinct !DILocation(line: 62, column: 10, scope: !14391)
!14391 = distinct !DILexicalBlock(scope: !14373, file: !14370, line: 41, column: 15)
!14392 = !{i64 2243801}
!14393 = !DILocation(line: 0, scope: !14386, inlinedAt: !14390)
!14394 = !DILocation(line: 86, column: 3, scope: !14391)
!14395 = !DILocation(line: 41, column: 2, scope: !14373)
!14396 = distinct !{!14396, !14395, !14397}
!14397 = !DILocation(line: 105, column: 2, scope: !14373)
!14398 = distinct !DISubprogram(name: "k_cpu_idle", scope: !406, file: !406, line: 5627, type: !3082, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !2156)
!14399 = !DILocation(line: 5629, column: 2, scope: !14398)
!14400 = !DILocation(line: 5630, column: 1, scope: !14398)
!14401 = !DISubprogram(name: "arch_cpu_idle", scope: !560, file: !560, line: 167, type: !3082, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!14402 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2454, file: !2454, line: 93, type: !14403, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14405)
!14403 = !DISubroutineType(types: !14404)
!14404 = !{!895, !2346, !2346}
!14405 = !{!14406, !14407, !14408, !14409}
!14406 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14402, file: !2454, line: 93, type: !2346)
!14407 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14402, file: !2454, line: 94, type: !2346)
!14408 = !DILocalVariable(name: "b1", scope: !14402, file: !2454, line: 97, type: !895)
!14409 = !DILocalVariable(name: "b2", scope: !14402, file: !2454, line: 98, type: !895)
!14410 = !DILocation(line: 0, scope: !14402)
!14411 = !DILocation(line: 97, column: 30, scope: !14402)
!14412 = !DILocation(line: 98, column: 30, scope: !14402)
!14413 = !DILocation(line: 100, column: 9, scope: !14414)
!14414 = distinct !DILexicalBlock(scope: !14402, file: !2454, line: 100, column: 6)
!14415 = !DILocation(line: 100, column: 6, scope: !14402)
!14416 = !DILocation(line: 125, column: 1, scope: !14402)
!14417 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2454, file: !2454, line: 428, type: !14418, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14420)
!14418 = !DISubroutineType(types: !14419)
!14419 = !{null, !2346}
!14420 = !{!14421}
!14421 = !DILocalVariable(name: "curr", arg: 1, scope: !14417, file: !2454, line: 428, type: !2346)
!14422 = !DILocation(line: 0, scope: !14417)
!14423 = !DILocation(line: 434, column: 6, scope: !14424)
!14424 = distinct !DILexicalBlock(scope: !14417, file: !2454, line: 434, column: 6)
!14425 = !DILocation(line: 434, column: 23, scope: !14424)
!14426 = !DILocation(line: 434, column: 6, scope: !14417)
!14427 = !DILocation(line: 435, column: 50, scope: !14428)
!14428 = distinct !DILexicalBlock(scope: !14424, file: !2454, line: 434, column: 29)
!14429 = !DILocation(line: 435, column: 48, scope: !14428)
!14430 = !DILocation(line: 435, column: 29, scope: !14428)
!14431 = !DILocation(line: 436, column: 24, scope: !14428)
!14432 = !DILocation(line: 436, column: 3, scope: !14428)
!14433 = !DILocation(line: 437, column: 2, scope: !14428)
!14434 = !DILocation(line: 438, column: 1, scope: !14417)
!14435 = distinct !DISubprogram(name: "slice_time", scope: !2454, file: !2454, line: 407, type: !14436, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14438)
!14436 = !DISubroutineType(types: !14437)
!14437 = !{!107, !2346}
!14438 = !{!14439, !14440}
!14439 = !DILocalVariable(name: "curr", arg: 1, scope: !14435, file: !2454, line: 407, type: !2346)
!14440 = !DILocalVariable(name: "ret", scope: !14435, file: !2454, line: 409, type: !107)
!14441 = !DILocation(line: 0, scope: !14435)
!14442 = !DILocation(line: 409, column: 12, scope: !14435)
!14443 = !DILocation(line: 416, column: 2, scope: !14435)
!14444 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2454, file: !2454, line: 440, type: !14445, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14447)
!14445 = !DISubroutineType(types: !14446)
!14446 = !{null, !895, !107}
!14447 = !{!14448, !14449, !14450, !14456}
!14448 = !DILocalVariable(name: "slice", arg: 1, scope: !14444, file: !2454, line: 440, type: !895)
!14449 = !DILocalVariable(name: "prio", arg: 2, scope: !14444, file: !2454, line: 440, type: !107)
!14450 = !DILocalVariable(name: "__i", scope: !14451, file: !2454, line: 442, type: !14452)
!14451 = distinct !DILexicalBlock(scope: !14444, file: !2454, line: 442, column: 2)
!14452 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !14453)
!14453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !14454)
!14454 = !{!14455}
!14455 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14453, file: !420, line: 33, baseType: !107, size: 32)
!14456 = !DILocalVariable(name: "__key", scope: !14451, file: !2454, line: 442, type: !14452)
!14457 = !DILocation(line: 0, scope: !14444)
!14458 = !DILocation(line: 0, scope: !14451)
!14459 = !DILocalVariable(name: "l", arg: 1, scope: !14460, file: !420, line: 136, type: !14463)
!14460 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !14461, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14464)
!14461 = !DISubroutineType(types: !14462)
!14462 = !{!14452, !14463}
!14463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 32)
!14464 = !{!14459, !14465}
!14465 = !DILocalVariable(name: "k", scope: !14460, file: !420, line: 139, type: !14452)
!14466 = !DILocation(line: 0, scope: !14460, inlinedAt: !14467)
!14467 = distinct !DILocation(line: 442, column: 2, scope: !14451)
!14468 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !14473)
!14469 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5938, file: !5938, line: 42, type: !5939, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14470)
!14470 = !{!14471, !14472}
!14471 = !DILocalVariable(name: "key", scope: !14469, file: !5938, line: 44, type: !32)
!14472 = !DILocalVariable(name: "tmp", scope: !14469, file: !5938, line: 53, type: !32)
!14473 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !14467)
!14474 = !{i64 2287772}
!14475 = !DILocation(line: 0, scope: !14469, inlinedAt: !14473)
!14476 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !14467)
!14477 = distinct !DILexicalBlock(scope: !14478, file: !420, line: 148, column: 2)
!14478 = distinct !DILexicalBlock(scope: !14460, file: !420, line: 148, column: 2)
!14479 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !14467)
!14480 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !14467)
!14481 = distinct !DILexicalBlock(scope: !14477, file: !420, line: 148, column: 2)
!14482 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !14467)
!14483 = !DILocation(line: 443, column: 29, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14485, file: !2454, line: 442, column: 26)
!14485 = distinct !DILexicalBlock(scope: !14451, file: !2454, line: 442, column: 2)
!14486 = !DILocation(line: 444, column: 17, scope: !14484)
!14487 = !DILocation(line: 445, column: 51, scope: !14488)
!14488 = distinct !DILexicalBlock(scope: !14484, file: !2454, line: 445, column: 7)
!14489 = !DILocation(line: 445, column: 7, scope: !14484)
!14490 = !DILocation(line: 0, scope: !14484)
!14491 = !DILocation(line: 451, column: 18, scope: !14484)
!14492 = !DILocation(line: 452, column: 3, scope: !14484)
!14493 = !DILocalVariable(name: "key", arg: 2, scope: !14494, file: !420, line: 190, type: !14452)
!14494 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !14495, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14497)
!14495 = !DISubroutineType(types: !14496)
!14496 = !{null, !14463, !14452}
!14497 = !{!14498, !14493}
!14498 = !DILocalVariable(name: "l", arg: 1, scope: !14494, file: !420, line: 189, type: !14463)
!14499 = !DILocation(line: 0, scope: !14494, inlinedAt: !14500)
!14500 = distinct !DILocation(line: 442, column: 2, scope: !14485)
!14501 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !14500)
!14502 = distinct !DILexicalBlock(scope: !14503, file: !420, line: 194, column: 2)
!14503 = distinct !DILexicalBlock(scope: !14494, file: !420, line: 194, column: 2)
!14504 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !14500)
!14505 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !14500)
!14506 = distinct !DILexicalBlock(scope: !14502, file: !420, line: 194, column: 2)
!14507 = !DILocalVariable(name: "key", arg: 1, scope: !14508, file: !5938, line: 84, type: !32)
!14508 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5938, file: !5938, line: 84, type: !5949, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14509)
!14509 = !{!14507}
!14510 = !DILocation(line: 0, scope: !14508, inlinedAt: !14511)
!14511 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !14500)
!14512 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !14511)
!14513 = !{i64 2288589}
!14514 = !DILocation(line: 454, column: 1, scope: !14444)
!14515 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !8725, file: !8725, line: 389, type: !7544, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14516)
!14516 = !{!14517}
!14517 = !DILocalVariable(name: "t", arg: 1, scope: !14515, file: !8725, line: 389, type: !152)
!14518 = !DILocation(line: 0, scope: !14515)
!14519 = !DILocalVariable(name: "t", arg: 1, scope: !14520, file: !8725, line: 102, type: !566)
!14520 = distinct !DISubprogram(name: "z_tmcvt", scope: !8725, file: !8725, line: 102, type: !8732, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14521)
!14521 = !{!14519, !14522, !14523, !14524, !14525, !14526, !14527, !14528, !14529, !14530, !14531}
!14522 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14520, file: !8725, line: 102, type: !152)
!14523 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14520, file: !8725, line: 103, type: !152)
!14524 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14520, file: !8725, line: 103, type: !145)
!14525 = !DILocalVariable(name: "result32", arg: 5, scope: !14520, file: !8725, line: 104, type: !145)
!14526 = !DILocalVariable(name: "round_up", arg: 6, scope: !14520, file: !8725, line: 104, type: !145)
!14527 = !DILocalVariable(name: "round_off", arg: 7, scope: !14520, file: !8725, line: 105, type: !145)
!14528 = !DILocalVariable(name: "mul_ratio", scope: !14520, file: !8725, line: 107, type: !145)
!14529 = !DILocalVariable(name: "div_ratio", scope: !14520, file: !8725, line: 109, type: !145)
!14530 = !DILocalVariable(name: "off", scope: !14520, file: !8725, line: 116, type: !566)
!14531 = !DILocalVariable(name: "rdivisor", scope: !14532, file: !8725, line: 119, type: !152)
!14532 = distinct !DILexicalBlock(scope: !14533, file: !8725, line: 118, column: 18)
!14533 = distinct !DILexicalBlock(scope: !14520, file: !8725, line: 118, column: 6)
!14534 = !DILocation(line: 0, scope: !14520, inlinedAt: !14535)
!14535 = distinct !DILocation(line: 392, column: 9, scope: !14515)
!14536 = !DILocation(line: 143, column: 25, scope: !14537, inlinedAt: !14535)
!14537 = distinct !DILexicalBlock(scope: !14538, file: !8725, line: 142, column: 17)
!14538 = distinct !DILexicalBlock(scope: !14539, file: !8725, line: 142, column: 7)
!14539 = distinct !DILexicalBlock(scope: !14540, file: !8725, line: 141, column: 24)
!14540 = distinct !DILexicalBlock(scope: !14541, file: !8725, line: 141, column: 13)
!14541 = distinct !DILexicalBlock(scope: !14520, file: !8725, line: 134, column: 6)
!14542 = !DILocation(line: 392, column: 2, scope: !14515)
!14543 = distinct !DISubprogram(name: "z_time_slice", scope: !2454, file: !2454, line: 502, type: !9171, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14544)
!14544 = !{!14545, !14546}
!14545 = !DILocalVariable(name: "ticks", arg: 1, scope: !14543, file: !2454, line: 502, type: !107)
!14546 = !DILocalVariable(name: "key", scope: !14543, file: !2454, line: 511, type: !14452)
!14547 = !DILocation(line: 0, scope: !14543)
!14548 = !DILocation(line: 0, scope: !14460, inlinedAt: !14549)
!14549 = distinct !DILocation(line: 511, column: 25, scope: !14543)
!14550 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !14551)
!14551 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !14549)
!14552 = !DILocation(line: 0, scope: !14469, inlinedAt: !14551)
!14553 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !14549)
!14554 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !14549)
!14555 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !14549)
!14556 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !14549)
!14557 = !DILocation(line: 514, column: 6, scope: !14558)
!14558 = distinct !DILexicalBlock(scope: !14543, file: !2454, line: 514, column: 6)
!14559 = !DILocation(line: 514, column: 25, scope: !14558)
!14560 = !DILocation(line: 514, column: 22, scope: !14558)
!14561 = !DILocation(line: 514, column: 6, scope: !14543)
!14562 = !DILocation(line: 515, column: 3, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14558, file: !2454, line: 514, column: 35)
!14564 = !DILocation(line: 0, scope: !14494, inlinedAt: !14565)
!14565 = distinct !DILocation(line: 516, column: 3, scope: !14563)
!14566 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !14565)
!14567 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !14565)
!14568 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !14565)
!14569 = !DILocation(line: 0, scope: !14508, inlinedAt: !14570)
!14570 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !14565)
!14571 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !14570)
!14572 = !DILocation(line: 517, column: 3, scope: !14563)
!14573 = !DILocation(line: 519, column: 18, scope: !14543)
!14574 = !DILocation(line: 522, column: 6, scope: !14575)
!14575 = distinct !DILexicalBlock(scope: !14543, file: !2454, line: 522, column: 6)
!14576 = !DILocation(line: 522, column: 27, scope: !14575)
!14577 = !DILocation(line: 522, column: 30, scope: !14575)
!14578 = !DILocation(line: 522, column: 6, scope: !14543)
!14579 = !DILocation(line: 523, column: 30, scope: !14580)
!14580 = distinct !DILexicalBlock(scope: !14581, file: !2454, line: 523, column: 7)
!14581 = distinct !DILexicalBlock(scope: !14575, file: !2454, line: 522, column: 51)
!14582 = !DILocation(line: 523, column: 13, scope: !14580)
!14583 = !DILocation(line: 523, column: 7, scope: !14581)
!14584 = !DILocation(line: 530, column: 10, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14580, file: !2454, line: 523, column: 43)
!14586 = !DILocation(line: 531, column: 3, scope: !14585)
!14587 = !DILocation(line: 532, column: 30, scope: !14588)
!14588 = distinct !DILexicalBlock(scope: !14580, file: !2454, line: 531, column: 10)
!14589 = !DILocation(line: 535, column: 29, scope: !14590)
!14590 = distinct !DILexicalBlock(scope: !14575, file: !2454, line: 534, column: 9)
!14591 = !DILocation(line: 0, scope: !14494, inlinedAt: !14592)
!14592 = distinct !DILocation(line: 537, column: 2, scope: !14543)
!14593 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !14592)
!14594 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !14592)
!14595 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !14592)
!14596 = !DILocation(line: 0, scope: !14508, inlinedAt: !14597)
!14597 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !14592)
!14598 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !14597)
!14599 = !DILocation(line: 538, column: 1, scope: !14543)
!14600 = distinct !DISubprogram(name: "sliceable", scope: !2454, file: !2454, line: 468, type: !14601, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14603)
!14601 = !DISubroutineType(types: !14602)
!14602 = !{!145, !2346}
!14603 = !{!14604, !14605}
!14604 = !DILocalVariable(name: "thread", arg: 1, scope: !14600, file: !2454, line: 468, type: !2346)
!14605 = !DILocalVariable(name: "ret", scope: !14600, file: !2454, line: 470, type: !145)
!14606 = !DILocation(line: 0, scope: !14600)
!14607 = !DILocation(line: 470, column: 13, scope: !14600)
!14608 = !DILocation(line: 471, column: 3, scope: !14600)
!14609 = !DILocation(line: 471, column: 7, scope: !14600)
!14610 = !DILocation(line: 472, column: 3, scope: !14600)
!14611 = !DILocation(line: 472, column: 37, scope: !14600)
!14612 = !DILocation(line: 472, column: 24, scope: !14600)
!14613 = !DILocation(line: 472, column: 43, scope: !14600)
!14614 = !DILocation(line: 472, column: 7, scope: !14600)
!14615 = !DILocation(line: 473, column: 3, scope: !14600)
!14616 = !DILocation(line: 473, column: 7, scope: !14600)
!14617 = !DILocation(line: 473, column: 6, scope: !14600)
!14618 = !DILocation(line: 479, column: 2, scope: !14600)
!14619 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2454, file: !2454, line: 482, type: !14620, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14622)
!14620 = !DISubroutineType(types: !14621)
!14621 = !{!14452, !14452}
!14622 = !{!14623, !14624}
!14623 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14619, file: !2454, line: 482, type: !14452)
!14624 = !DILocalVariable(name: "curr", scope: !14619, file: !2454, line: 484, type: !2346)
!14625 = !DILocation(line: 0, scope: !14619)
!14626 = !DILocation(line: 484, column: 26, scope: !14619)
!14627 = !DILocation(line: 493, column: 7, scope: !14628)
!14628 = distinct !DILexicalBlock(scope: !14619, file: !2454, line: 493, column: 6)
!14629 = !DILocation(line: 493, column: 6, scope: !14619)
!14630 = !DILocation(line: 494, column: 3, scope: !14631)
!14631 = distinct !DILexicalBlock(scope: !14628, file: !2454, line: 493, column: 49)
!14632 = !DILocation(line: 495, column: 2, scope: !14631)
!14633 = !DILocation(line: 496, column: 2, scope: !14619)
!14634 = !DILocation(line: 499, column: 1, scope: !14619)
!14635 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13620, file: !13620, line: 106, type: !14601, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14636)
!14636 = !{!14637, !14638}
!14637 = !DILocalVariable(name: "thread", arg: 1, scope: !14635, file: !13620, line: 106, type: !2346)
!14638 = !DILocalVariable(name: "state", scope: !14635, file: !13620, line: 108, type: !195)
!14639 = !DILocation(line: 0, scope: !14635)
!14640 = !DILocation(line: 108, column: 31, scope: !14635)
!14641 = !DILocation(line: 110, column: 16, scope: !14635)
!14642 = !DILocation(line: 111, column: 41, scope: !14635)
!14643 = !DILocation(line: 110, column: 2, scope: !14635)
!14644 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2454, file: !2454, line: 393, type: !14418, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14645)
!14645 = !{!14646}
!14646 = !DILocalVariable(name: "thread", arg: 1, scope: !14644, file: !2454, line: 393, type: !2346)
!14647 = !DILocation(line: 0, scope: !14644)
!14648 = !DILocation(line: 395, column: 6, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14644, file: !2454, line: 395, column: 6)
!14650 = !DILocation(line: 395, column: 6, scope: !14644)
!14651 = !DILocalVariable(name: "thread", arg: 1, scope: !14652, file: !2454, line: 264, type: !2346)
!14652 = distinct !DISubprogram(name: "dequeue_thread", scope: !2454, file: !2454, line: 264, type: !14418, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14653)
!14653 = !{!14651}
!14654 = !DILocation(line: 0, scope: !14652, inlinedAt: !14655)
!14655 = distinct !DILocation(line: 396, column: 3, scope: !14656)
!14656 = distinct !DILexicalBlock(scope: !14649, file: !2454, line: 395, column: 34)
!14657 = !DILocation(line: 266, column: 15, scope: !14652, inlinedAt: !14655)
!14658 = !DILocation(line: 266, column: 28, scope: !14652, inlinedAt: !14655)
!14659 = !DILocalVariable(name: "thread", arg: 1, scope: !14660, file: !2454, line: 232, type: !2346)
!14660 = distinct !DISubprogram(name: "runq_remove", scope: !2454, file: !2454, line: 232, type: !14418, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14661)
!14661 = !{!14659}
!14662 = !DILocation(line: 0, scope: !14660, inlinedAt: !14663)
!14663 = distinct !DILocation(line: 268, column: 3, scope: !14664, inlinedAt: !14655)
!14664 = distinct !DILexicalBlock(scope: !14665, file: !2454, line: 267, column: 35)
!14665 = distinct !DILexicalBlock(scope: !14652, file: !2454, line: 267, column: 6)
!14666 = !DILocation(line: 234, column: 2, scope: !14660, inlinedAt: !14663)
!14667 = !DILocation(line: 397, column: 2, scope: !14656)
!14668 = !DILocalVariable(name: "thread", arg: 1, scope: !14669, file: !2454, line: 250, type: !2346)
!14669 = distinct !DISubprogram(name: "queue_thread", scope: !2454, file: !2454, line: 250, type: !14418, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14670)
!14670 = !{!14668}
!14671 = !DILocation(line: 0, scope: !14669, inlinedAt: !14672)
!14672 = distinct !DILocation(line: 398, column: 2, scope: !14644)
!14673 = !DILocation(line: 252, column: 15, scope: !14669, inlinedAt: !14672)
!14674 = !DILocation(line: 252, column: 28, scope: !14669, inlinedAt: !14672)
!14675 = !DILocalVariable(name: "thread", arg: 1, scope: !14676, file: !2454, line: 227, type: !2346)
!14676 = distinct !DISubprogram(name: "runq_add", scope: !2454, file: !2454, line: 227, type: !14418, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14677)
!14677 = !{!14675}
!14678 = !DILocation(line: 0, scope: !14676, inlinedAt: !14679)
!14679 = distinct !DILocation(line: 254, column: 3, scope: !14680, inlinedAt: !14672)
!14680 = distinct !DILexicalBlock(scope: !14681, file: !2454, line: 253, column: 35)
!14681 = distinct !DILexicalBlock(scope: !14669, file: !2454, line: 253, column: 6)
!14682 = !DILocalVariable(name: "pq", arg: 1, scope: !14683, file: !2454, line: 181, type: !14686)
!14683 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2454, file: !2454, line: 181, type: !14684, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14687)
!14684 = !DISubroutineType(types: !14685)
!14685 = !{null, !14686, !2346}
!14686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 32)
!14687 = !{!14682, !14688, !14689}
!14688 = !DILocalVariable(name: "thread", arg: 2, scope: !14683, file: !2454, line: 182, type: !2346)
!14689 = !DILocalVariable(name: "t", scope: !14683, file: !2454, line: 184, type: !2346)
!14690 = !DILocation(line: 0, scope: !14683, inlinedAt: !14691)
!14691 = distinct !DILocation(line: 229, column: 2, scope: !14676, inlinedAt: !14679)
!14692 = !DILocation(line: 186, column: 2, scope: !14693, inlinedAt: !14691)
!14693 = distinct !DILexicalBlock(scope: !14694, file: !2454, line: 186, column: 2)
!14694 = distinct !DILexicalBlock(scope: !14683, file: !2454, line: 186, column: 2)
!14695 = !DILocation(line: 186, column: 2, scope: !14694, inlinedAt: !14691)
!14696 = !DILocation(line: 186, column: 2, scope: !14697, inlinedAt: !14691)
!14697 = distinct !DILexicalBlock(scope: !14693, file: !2454, line: 186, column: 2)
!14698 = !DILocation(line: 188, column: 2, scope: !14699, inlinedAt: !14691)
!14699 = distinct !DILexicalBlock(scope: !14683, file: !2454, line: 188, column: 2)
!14700 = !DILocation(line: 188, column: 2, scope: !14701, inlinedAt: !14691)
!14701 = distinct !DILexicalBlock(scope: !14699, file: !2454, line: 188, column: 2)
!14702 = !DILocation(line: 0, scope: !14699, inlinedAt: !14691)
!14703 = !DILocation(line: 189, column: 7, scope: !14704, inlinedAt: !14691)
!14704 = distinct !DILexicalBlock(scope: !14705, file: !2454, line: 189, column: 7)
!14705 = distinct !DILexicalBlock(scope: !14701, file: !2454, line: 188, column: 56)
!14706 = !DILocation(line: 189, column: 35, scope: !14704, inlinedAt: !14691)
!14707 = !DILocation(line: 189, column: 7, scope: !14705, inlinedAt: !14691)
!14708 = !DILocation(line: 191, column: 21, scope: !14709, inlinedAt: !14691)
!14709 = distinct !DILexicalBlock(scope: !14704, file: !2454, line: 189, column: 40)
!14710 = !DILocation(line: 190, column: 4, scope: !14709, inlinedAt: !14691)
!14711 = !DILocation(line: 192, column: 4, scope: !14709, inlinedAt: !14691)
!14712 = distinct !{!14712, !14698, !14713}
!14713 = !DILocation(line: 194, column: 2, scope: !14699, inlinedAt: !14691)
!14714 = !DILocation(line: 196, column: 37, scope: !14683, inlinedAt: !14691)
!14715 = !DILocation(line: 196, column: 2, scope: !14683, inlinedAt: !14691)
!14716 = !DILocation(line: 197, column: 1, scope: !14683, inlinedAt: !14691)
!14717 = !DILocation(line: 399, column: 25, scope: !14644)
!14718 = !DILocation(line: 399, column: 22, scope: !14644)
!14719 = !DILocation(line: 399, column: 2, scope: !14644)
!14720 = !DILocation(line: 400, column: 1, scope: !14644)
!14721 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13620, file: !13620, line: 136, type: !14601, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14722)
!14722 = !{!14723}
!14723 = !DILocalVariable(name: "thread", arg: 1, scope: !14721, file: !13620, line: 136, type: !2346)
!14724 = !DILocation(line: 0, scope: !14721)
!14725 = !DILocation(line: 138, column: 9, scope: !14721)
!14726 = !DILocation(line: 138, column: 2, scope: !14721)
!14727 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2454, file: !2454, line: 1137, type: !14684, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14728)
!14728 = !{!14729, !14730}
!14729 = !DILocalVariable(name: "pq", arg: 1, scope: !14727, file: !2454, line: 1137, type: !14686)
!14730 = !DILocalVariable(name: "thread", arg: 2, scope: !14727, file: !2454, line: 1137, type: !2346)
!14731 = !DILocation(line: 0, scope: !14727)
!14732 = !DILocation(line: 1139, column: 2, scope: !14733)
!14733 = distinct !DILexicalBlock(scope: !14734, file: !2454, line: 1139, column: 2)
!14734 = distinct !DILexicalBlock(scope: !14727, file: !2454, line: 1139, column: 2)
!14735 = !DILocation(line: 1139, column: 2, scope: !14734)
!14736 = !DILocation(line: 1139, column: 2, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !14733, file: !2454, line: 1139, column: 2)
!14738 = !DILocation(line: 1141, column: 33, scope: !14727)
!14739 = !DILocation(line: 1141, column: 2, scope: !14727)
!14740 = !DILocation(line: 1142, column: 1, scope: !14727)
!14741 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13620, file: !13620, line: 83, type: !14601, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14742)
!14742 = !{!14743}
!14743 = !DILocalVariable(name: "thread", arg: 1, scope: !14741, file: !13620, line: 83, type: !2346)
!14744 = !DILocation(line: 0, scope: !14741)
!14745 = !DILocation(line: 89, column: 16, scope: !14741)
!14746 = !DILocation(line: 89, column: 2, scope: !14741)
!14747 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !14748, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14750)
!14748 = !DISubroutineType(types: !14749)
!14749 = !{!2450, !14686}
!14750 = !{!14751}
!14751 = !DILocalVariable(name: "list", arg: 1, scope: !14747, file: !319, line: 294, type: !14686)
!14752 = !DILocation(line: 0, scope: !14747)
!14753 = !DILocation(line: 296, column: 9, scope: !14747)
!14754 = !DILocation(line: 296, column: 49, scope: !14747)
!14755 = !DILocation(line: 296, column: 2, scope: !14747)
!14756 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !14757, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14759)
!14757 = !DISubroutineType(types: !14758)
!14758 = !{null, !2450, !2450}
!14759 = !{!14760, !14761, !14762}
!14760 = !DILocalVariable(name: "successor", arg: 1, scope: !14756, file: !319, line: 443, type: !2450)
!14761 = !DILocalVariable(name: "node", arg: 2, scope: !14756, file: !319, line: 443, type: !2450)
!14762 = !DILocalVariable(name: "prev", scope: !14756, file: !319, line: 445, type: !14763)
!14763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2450)
!14764 = !DILocation(line: 0, scope: !14756)
!14765 = !DILocation(line: 445, column: 39, scope: !14756)
!14766 = !DILocation(line: 447, column: 8, scope: !14756)
!14767 = !DILocation(line: 447, column: 13, scope: !14756)
!14768 = !DILocation(line: 448, column: 8, scope: !14756)
!14769 = !DILocation(line: 448, column: 13, scope: !14756)
!14770 = !DILocation(line: 449, column: 8, scope: !14756)
!14771 = !DILocation(line: 449, column: 13, scope: !14756)
!14772 = !DILocation(line: 450, column: 18, scope: !14756)
!14773 = !DILocation(line: 451, column: 1, scope: !14756)
!14774 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !14775, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14777)
!14775 = !DISubroutineType(types: !14776)
!14776 = !{!2450, !14686, !2450}
!14777 = !{!14778, !14779}
!14778 = !DILocalVariable(name: "list", arg: 1, scope: !14774, file: !319, line: 341, type: !14686)
!14779 = !DILocalVariable(name: "node", arg: 2, scope: !14774, file: !319, line: 342, type: !2450)
!14780 = !DILocation(line: 0, scope: !14774)
!14781 = !DILocation(line: 344, column: 15, scope: !14774)
!14782 = !DILocation(line: 344, column: 9, scope: !14774)
!14783 = !DILocation(line: 344, column: 26, scope: !14774)
!14784 = !DILocation(line: 344, column: 2, scope: !14774)
!14785 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !14786, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14788)
!14786 = !DISubroutineType(types: !14787)
!14787 = !{null, !14686, !2450}
!14788 = !{!14789, !14790, !14791}
!14789 = !DILocalVariable(name: "list", arg: 1, scope: !14785, file: !319, line: 404, type: !14686)
!14790 = !DILocalVariable(name: "node", arg: 2, scope: !14785, file: !319, line: 404, type: !2450)
!14791 = !DILocalVariable(name: "tail", scope: !14785, file: !319, line: 406, type: !14763)
!14792 = !DILocation(line: 0, scope: !14785)
!14793 = !DILocation(line: 406, column: 34, scope: !14785)
!14794 = !DILocation(line: 408, column: 8, scope: !14785)
!14795 = !DILocation(line: 408, column: 13, scope: !14785)
!14796 = !DILocation(line: 409, column: 8, scope: !14785)
!14797 = !DILocation(line: 409, column: 13, scope: !14785)
!14798 = !DILocation(line: 411, column: 8, scope: !14785)
!14799 = !DILocation(line: 411, column: 13, scope: !14785)
!14800 = !DILocation(line: 412, column: 13, scope: !14785)
!14801 = !DILocation(line: 413, column: 1, scope: !14785)
!14802 = distinct !DISubprogram(name: "update_cache", scope: !2454, file: !2454, line: 559, type: !9171, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14803)
!14803 = !{!14804, !14805}
!14804 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14802, file: !2454, line: 559, type: !107)
!14805 = !DILocalVariable(name: "thread", scope: !14802, file: !2454, line: 562, type: !2346)
!14806 = !DILocation(line: 0, scope: !14802)
!14807 = !DILocation(line: 239, column: 9, scope: !14808, inlinedAt: !14811)
!14808 = distinct !DISubprogram(name: "runq_best", scope: !2454, file: !2454, line: 237, type: !14809, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!14809 = !DISubroutineType(types: !14810)
!14810 = !{!2346}
!14811 = distinct !DILocation(line: 314, column: 28, scope: !14812, inlinedAt: !14815)
!14812 = distinct !DISubprogram(name: "next_up", scope: !2454, file: !2454, line: 312, type: !14809, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14813)
!14813 = !{!14814}
!14814 = !DILocalVariable(name: "thread", scope: !14812, file: !2454, line: 314, type: !2346)
!14815 = distinct !DILocation(line: 562, column: 28, scope: !14802)
!14816 = !DILocation(line: 0, scope: !14812, inlinedAt: !14815)
!14817 = !DILocation(line: 340, column: 17, scope: !14812, inlinedAt: !14815)
!14818 = !DILocation(line: 340, column: 9, scope: !14812, inlinedAt: !14815)
!14819 = !DILocalVariable(name: "thread", arg: 1, scope: !14820, file: !2454, line: 127, type: !2346)
!14820 = distinct !DISubprogram(name: "should_preempt", scope: !2454, file: !2454, line: 127, type: !14821, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14823)
!14821 = !DISubroutineType(types: !14822)
!14822 = !{!145, !2346, !107}
!14823 = !{!14819, !14824}
!14824 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14820, file: !2454, line: 128, type: !107)
!14825 = !DILocation(line: 0, scope: !14820, inlinedAt: !14826)
!14826 = distinct !DILocation(line: 564, column: 6, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14802, file: !2454, line: 564, column: 6)
!14828 = !DILocation(line: 133, column: 17, scope: !14829, inlinedAt: !14826)
!14829 = distinct !DILexicalBlock(scope: !14820, file: !2454, line: 133, column: 6)
!14830 = !DILocation(line: 0, scope: !14827)
!14831 = !DILocation(line: 133, column: 6, scope: !14820, inlinedAt: !14826)
!14832 = !DILocation(line: 137, column: 2, scope: !14833, inlinedAt: !14826)
!14833 = distinct !DILexicalBlock(scope: !14834, file: !2454, line: 137, column: 2)
!14834 = distinct !DILexicalBlock(scope: !14820, file: !2454, line: 137, column: 2)
!14835 = !DILocation(line: 137, column: 2, scope: !14834, inlinedAt: !14826)
!14836 = !DILocation(line: 137, column: 2, scope: !14837, inlinedAt: !14826)
!14837 = distinct !DILexicalBlock(scope: !14833, file: !2454, line: 137, column: 2)
!14838 = !DILocation(line: 140, column: 6, scope: !14839, inlinedAt: !14826)
!14839 = distinct !DILexicalBlock(scope: !14820, file: !2454, line: 140, column: 6)
!14840 = !DILocation(line: 140, column: 6, scope: !14820, inlinedAt: !14826)
!14841 = !DILocation(line: 150, column: 9, scope: !14842, inlinedAt: !14826)
!14842 = distinct !DILexicalBlock(scope: !14820, file: !2454, line: 149, column: 6)
!14843 = !DILocation(line: 149, column: 6, scope: !14820, inlinedAt: !14826)
!14844 = !DILocation(line: 157, column: 6, scope: !14845, inlinedAt: !14826)
!14845 = distinct !DILexicalBlock(scope: !14820, file: !2454, line: 157, column: 6)
!14846 = !DILocation(line: 564, column: 6, scope: !14802)
!14847 = !DILocation(line: 566, column: 14, scope: !14848)
!14848 = distinct !DILexicalBlock(scope: !14849, file: !2454, line: 566, column: 7)
!14849 = distinct !DILexicalBlock(scope: !14827, file: !2454, line: 564, column: 42)
!14850 = !DILocation(line: 566, column: 7, scope: !14849)
!14851 = !DILocation(line: 567, column: 4, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14848, file: !2454, line: 566, column: 27)
!14853 = !DILocation(line: 568, column: 3, scope: !14852)
!14854 = !DILocation(line: 585, column: 1, scope: !14802)
!14855 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2454, file: !2454, line: 1144, type: !14856, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14858)
!14856 = !DISubroutineType(types: !14857)
!14857 = !{!2346, !14686}
!14858 = !{!14859, !14860, !14861}
!14859 = !DILocalVariable(name: "pq", arg: 1, scope: !14855, file: !2454, line: 1144, type: !14686)
!14860 = !DILocalVariable(name: "thread", scope: !14855, file: !2454, line: 1146, type: !2346)
!14861 = !DILocalVariable(name: "n", scope: !14855, file: !2454, line: 1147, type: !2450)
!14862 = !DILocation(line: 0, scope: !14855)
!14863 = !DILocation(line: 1147, column: 19, scope: !14855)
!14864 = !DILocation(line: 1152, column: 2, scope: !14855)
!14865 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13620, file: !13620, line: 115, type: !14601, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14866)
!14866 = !{!14867}
!14867 = !DILocalVariable(name: "thread", arg: 1, scope: !14865, file: !13620, line: 115, type: !2346)
!14868 = !DILocation(line: 0, scope: !14865)
!14869 = !DILocation(line: 117, column: 46, scope: !14865)
!14870 = !DILocation(line: 117, column: 10, scope: !14865)
!14871 = !DILocation(line: 117, column: 9, scope: !14865)
!14872 = !DILocation(line: 117, column: 2, scope: !14865)
!14873 = distinct !DISubprogram(name: "is_preempt", scope: !2454, file: !2454, line: 62, type: !14436, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14874)
!14874 = !{!14875}
!14875 = !DILocalVariable(name: "thread", arg: 1, scope: !14873, file: !2454, line: 62, type: !2346)
!14876 = !DILocation(line: 0, scope: !14873)
!14877 = !DILocation(line: 65, column: 22, scope: !14873)
!14878 = !DILocation(line: 65, column: 30, scope: !14873)
!14879 = !DILocation(line: 65, column: 2, scope: !14873)
!14880 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14049, file: !14049, line: 35, type: !14881, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14885)
!14881 = !DISubroutineType(types: !14882)
!14882 = !{!145, !14883}
!14883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14884, size: 32)
!14884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2397)
!14885 = !{!14886}
!14886 = !DILocalVariable(name: "to", arg: 1, scope: !14880, file: !14049, line: 35, type: !14883)
!14887 = !DILocation(line: 0, scope: !14880)
!14888 = !DILocation(line: 37, column: 35, scope: !14880)
!14889 = !DILocation(line: 37, column: 10, scope: !14880)
!14890 = !DILocation(line: 37, column: 9, scope: !14880)
!14891 = !DILocation(line: 37, column: 2, scope: !14880)
!14892 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !14893, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14897)
!14893 = !DISubroutineType(types: !14894)
!14894 = !{!145, !14895}
!14895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14896, size: 32)
!14896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2356)
!14897 = !{!14898}
!14898 = !DILocalVariable(name: "node", arg: 1, scope: !14892, file: !319, line: 225, type: !14895)
!14899 = !DILocation(line: 0, scope: !14892)
!14900 = !DILocation(line: 227, column: 15, scope: !14892)
!14901 = !DILocation(line: 227, column: 20, scope: !14892)
!14902 = !DILocation(line: 227, column: 2, scope: !14892)
!14903 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !14775, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14904)
!14904 = !{!14905, !14906}
!14905 = !DILocalVariable(name: "list", arg: 1, scope: !14903, file: !319, line: 325, type: !14686)
!14906 = !DILocalVariable(name: "node", arg: 2, scope: !14903, file: !319, line: 326, type: !2450)
!14907 = !DILocation(line: 0, scope: !14903)
!14908 = !DILocation(line: 328, column: 24, scope: !14903)
!14909 = !DILocation(line: 328, column: 15, scope: !14903)
!14910 = !DILocation(line: 328, column: 9, scope: !14903)
!14911 = !DILocation(line: 328, column: 45, scope: !14903)
!14912 = !DILocation(line: 328, column: 2, scope: !14903)
!14913 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !14914, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14916)
!14914 = !DISubroutineType(types: !14915)
!14915 = !{!145, !14686}
!14916 = !{!14917}
!14917 = !DILocalVariable(name: "list", arg: 1, scope: !14913, file: !319, line: 266, type: !14686)
!14918 = !DILocation(line: 0, scope: !14913)
!14919 = !DILocation(line: 268, column: 15, scope: !14913)
!14920 = !DILocation(line: 268, column: 20, scope: !14913)
!14921 = !DILocation(line: 268, column: 2, scope: !14913)
!14922 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !14923, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14925)
!14923 = !DISubroutineType(types: !14924)
!14924 = !{null, !2450}
!14925 = !{!14926, !14927, !14928}
!14926 = !DILocalVariable(name: "node", arg: 1, scope: !14922, file: !319, line: 496, type: !2450)
!14927 = !DILocalVariable(name: "prev", scope: !14922, file: !319, line: 498, type: !14763)
!14928 = !DILocalVariable(name: "next", scope: !14922, file: !319, line: 499, type: !14763)
!14929 = !DILocation(line: 0, scope: !14922)
!14930 = !DILocation(line: 498, column: 34, scope: !14922)
!14931 = !DILocation(line: 499, column: 34, scope: !14922)
!14932 = !DILocation(line: 501, column: 8, scope: !14922)
!14933 = !DILocation(line: 501, column: 13, scope: !14922)
!14934 = !DILocation(line: 502, column: 8, scope: !14922)
!14935 = !DILocation(line: 502, column: 13, scope: !14922)
!14936 = !DILocation(line: 503, column: 2, scope: !14922)
!14937 = !DILocation(line: 504, column: 1, scope: !14922)
!14938 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14923, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14939)
!14939 = !{!14940}
!14940 = !DILocalVariable(name: "node", arg: 1, scope: !14938, file: !319, line: 211, type: !2450)
!14941 = !DILocation(line: 0, scope: !14938)
!14942 = !DILocation(line: 213, column: 8, scope: !14938)
!14943 = !DILocation(line: 213, column: 13, scope: !14938)
!14944 = !DILocation(line: 214, column: 8, scope: !14938)
!14945 = !DILocation(line: 214, column: 13, scope: !14938)
!14946 = !DILocation(line: 215, column: 1, scope: !14938)
!14947 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13620, file: !13620, line: 131, type: !14948, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14950)
!14948 = !DISubroutineType(types: !14949)
!14949 = !{!145, !2346, !152}
!14950 = !{!14951, !14952}
!14951 = !DILocalVariable(name: "thread", arg: 1, scope: !14947, file: !13620, line: 131, type: !2346)
!14952 = !DILocalVariable(name: "state", arg: 2, scope: !14947, file: !13620, line: 131, type: !152)
!14953 = !DILocation(line: 0, scope: !14947)
!14954 = !DILocation(line: 133, column: 23, scope: !14947)
!14955 = !DILocation(line: 133, column: 10, scope: !14947)
!14956 = !DILocation(line: 133, column: 36, scope: !14947)
!14957 = !DILocation(line: 133, column: 45, scope: !14947)
!14958 = !DILocation(line: 133, column: 2, scope: !14947)
!14959 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13620, file: !13620, line: 211, type: !14960, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14962)
!14960 = !DISubroutineType(types: !14961)
!14961 = !{!145, !107, !107}
!14962 = !{!14963, !14964}
!14963 = !DILocalVariable(name: "prio", arg: 1, scope: !14959, file: !13620, line: 211, type: !107)
!14964 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14959, file: !13620, line: 211, type: !107)
!14965 = !DILocation(line: 0, scope: !14959)
!14966 = !DILocation(line: 213, column: 9, scope: !14959)
!14967 = !DILocation(line: 213, column: 2, scope: !14959)
!14968 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13620, file: !13620, line: 206, type: !14960, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14969)
!14969 = !{!14970, !14971}
!14970 = !DILocalVariable(name: "prio1", arg: 1, scope: !14968, file: !13620, line: 206, type: !107)
!14971 = !DILocalVariable(name: "prio2", arg: 2, scope: !14968, file: !13620, line: 206, type: !107)
!14972 = !DILocation(line: 0, scope: !14968)
!14973 = !DILocation(line: 208, column: 15, scope: !14968)
!14974 = !DILocation(line: 208, column: 2, scope: !14968)
!14975 = distinct !DISubprogram(name: "z_ready_thread", scope: !2454, file: !2454, line: 635, type: !14418, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14976)
!14976 = !{!14977, !14978, !14980}
!14977 = !DILocalVariable(name: "thread", arg: 1, scope: !14975, file: !2454, line: 635, type: !2346)
!14978 = !DILocalVariable(name: "__i", scope: !14979, file: !2454, line: 637, type: !14452)
!14979 = distinct !DILexicalBlock(scope: !14975, file: !2454, line: 637, column: 2)
!14980 = !DILocalVariable(name: "__key", scope: !14979, file: !2454, line: 637, type: !14452)
!14981 = !DILocation(line: 0, scope: !14975)
!14982 = !DILocation(line: 0, scope: !14979)
!14983 = !DILocation(line: 0, scope: !14460, inlinedAt: !14984)
!14984 = distinct !DILocation(line: 637, column: 2, scope: !14979)
!14985 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !14986)
!14986 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !14984)
!14987 = !DILocation(line: 0, scope: !14469, inlinedAt: !14986)
!14988 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !14984)
!14989 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !14984)
!14990 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !14984)
!14991 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !14984)
!14992 = !DILocation(line: 639, column: 4, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14994, file: !2454, line: 638, column: 41)
!14994 = distinct !DILexicalBlock(scope: !14995, file: !2454, line: 638, column: 7)
!14995 = distinct !DILexicalBlock(scope: !14996, file: !2454, line: 637, column: 26)
!14996 = distinct !DILexicalBlock(scope: !14979, file: !2454, line: 637, column: 2)
!14997 = !DILocation(line: 0, scope: !14494, inlinedAt: !14998)
!14998 = distinct !DILocation(line: 637, column: 2, scope: !14996)
!14999 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !14998)
!15000 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !14998)
!15001 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !14998)
!15002 = !DILocation(line: 0, scope: !14508, inlinedAt: !15003)
!15003 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !14998)
!15004 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15003)
!15005 = !DILocation(line: 642, column: 1, scope: !14975)
!15006 = distinct !DISubprogram(name: "ready_thread", scope: !2454, file: !2454, line: 617, type: !14418, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15007)
!15007 = !{!15008}
!15008 = !DILocalVariable(name: "thread", arg: 1, scope: !15006, file: !2454, line: 617, type: !2346)
!15009 = !DILocation(line: 0, scope: !15006)
!15010 = !DILocation(line: 626, column: 7, scope: !15011)
!15011 = distinct !DILexicalBlock(scope: !15006, file: !2454, line: 626, column: 6)
!15012 = !DILocation(line: 626, column: 34, scope: !15011)
!15013 = !DILocation(line: 626, column: 37, scope: !15011)
!15014 = !DILocation(line: 626, column: 6, scope: !15006)
!15015 = !DILocation(line: 0, scope: !14669, inlinedAt: !15016)
!15016 = distinct !DILocation(line: 629, column: 3, scope: !15017)
!15017 = distinct !DILexicalBlock(scope: !15011, file: !2454, line: 626, column: 64)
!15018 = !DILocation(line: 252, column: 15, scope: !14669, inlinedAt: !15016)
!15019 = !DILocation(line: 252, column: 28, scope: !14669, inlinedAt: !15016)
!15020 = !DILocation(line: 0, scope: !14676, inlinedAt: !15021)
!15021 = distinct !DILocation(line: 254, column: 3, scope: !14680, inlinedAt: !15016)
!15022 = !DILocation(line: 0, scope: !14683, inlinedAt: !15023)
!15023 = distinct !DILocation(line: 229, column: 2, scope: !14676, inlinedAt: !15021)
!15024 = !DILocation(line: 186, column: 2, scope: !14693, inlinedAt: !15023)
!15025 = !DILocation(line: 186, column: 2, scope: !14694, inlinedAt: !15023)
!15026 = !DILocation(line: 186, column: 2, scope: !14697, inlinedAt: !15023)
!15027 = !DILocation(line: 188, column: 2, scope: !14699, inlinedAt: !15023)
!15028 = !DILocation(line: 188, column: 2, scope: !14701, inlinedAt: !15023)
!15029 = !DILocation(line: 0, scope: !14699, inlinedAt: !15023)
!15030 = !DILocation(line: 189, column: 7, scope: !14704, inlinedAt: !15023)
!15031 = !DILocation(line: 189, column: 35, scope: !14704, inlinedAt: !15023)
!15032 = !DILocation(line: 189, column: 7, scope: !14705, inlinedAt: !15023)
!15033 = !DILocation(line: 191, column: 21, scope: !14709, inlinedAt: !15023)
!15034 = !DILocation(line: 190, column: 4, scope: !14709, inlinedAt: !15023)
!15035 = !DILocation(line: 192, column: 4, scope: !14709, inlinedAt: !15023)
!15036 = distinct !{!15036, !15027, !15037}
!15037 = !DILocation(line: 194, column: 2, scope: !14699, inlinedAt: !15023)
!15038 = !DILocation(line: 196, column: 37, scope: !14683, inlinedAt: !15023)
!15039 = !DILocation(line: 196, column: 2, scope: !14683, inlinedAt: !15023)
!15040 = !DILocation(line: 197, column: 1, scope: !14683, inlinedAt: !15023)
!15041 = !DILocation(line: 630, column: 3, scope: !15017)
!15042 = !DILocation(line: 632, column: 2, scope: !15017)
!15043 = !DILocation(line: 633, column: 1, scope: !15006)
!15044 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13620, file: !13620, line: 120, type: !14601, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15045)
!15045 = !{!15046}
!15046 = !DILocalVariable(name: "thread", arg: 1, scope: !15044, file: !13620, line: 120, type: !2346)
!15047 = !DILocation(line: 0, scope: !15044)
!15048 = !DILocation(line: 122, column: 12, scope: !15044)
!15049 = !DILocation(line: 122, column: 62, scope: !15044)
!15050 = !DILocation(line: 123, column: 4, scope: !15044)
!15051 = !DILocation(line: 122, column: 2, scope: !15044)
!15052 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2454, file: !2454, line: 644, type: !14418, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15053)
!15053 = !{!15054, !15055, !15057}
!15054 = !DILocalVariable(name: "thread", arg: 1, scope: !15052, file: !2454, line: 644, type: !2346)
!15055 = !DILocalVariable(name: "__i", scope: !15056, file: !2454, line: 646, type: !14452)
!15056 = distinct !DILexicalBlock(scope: !15052, file: !2454, line: 646, column: 2)
!15057 = !DILocalVariable(name: "__key", scope: !15056, file: !2454, line: 646, type: !14452)
!15058 = !DILocation(line: 0, scope: !15052)
!15059 = !DILocation(line: 0, scope: !15056)
!15060 = !DILocation(line: 0, scope: !14460, inlinedAt: !15061)
!15061 = distinct !DILocation(line: 646, column: 2, scope: !15056)
!15062 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !15063)
!15063 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !15061)
!15064 = !DILocation(line: 0, scope: !14469, inlinedAt: !15063)
!15065 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !15061)
!15066 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15061)
!15067 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !15061)
!15068 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !15061)
!15069 = !DILocation(line: 647, column: 3, scope: !15070)
!15070 = distinct !DILexicalBlock(scope: !15071, file: !2454, line: 646, column: 26)
!15071 = distinct !DILexicalBlock(scope: !15056, file: !2454, line: 646, column: 2)
!15072 = !DILocation(line: 0, scope: !14494, inlinedAt: !15073)
!15073 = distinct !DILocation(line: 646, column: 2, scope: !15071)
!15074 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !15073)
!15075 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15073)
!15076 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !15073)
!15077 = !DILocation(line: 0, scope: !14508, inlinedAt: !15078)
!15078 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !15073)
!15079 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15078)
!15080 = !DILocation(line: 649, column: 1, scope: !15052)
!15081 = distinct !DISubprogram(name: "z_sched_start", scope: !2454, file: !2454, line: 651, type: !14418, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15082)
!15082 = !{!15083, !15084}
!15083 = !DILocalVariable(name: "thread", arg: 1, scope: !15081, file: !2454, line: 651, type: !2346)
!15084 = !DILocalVariable(name: "key", scope: !15081, file: !2454, line: 653, type: !14452)
!15085 = !DILocation(line: 0, scope: !15081)
!15086 = !DILocation(line: 0, scope: !14460, inlinedAt: !15087)
!15087 = distinct !DILocation(line: 653, column: 25, scope: !15081)
!15088 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !15089)
!15089 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !15087)
!15090 = !DILocation(line: 0, scope: !14469, inlinedAt: !15089)
!15091 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !15087)
!15092 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15087)
!15093 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !15087)
!15094 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !15087)
!15095 = !DILocation(line: 655, column: 6, scope: !15096)
!15096 = distinct !DILexicalBlock(scope: !15081, file: !2454, line: 655, column: 6)
!15097 = !DILocation(line: 655, column: 6, scope: !15081)
!15098 = !DILocation(line: 0, scope: !14494, inlinedAt: !15099)
!15099 = distinct !DILocation(line: 656, column: 3, scope: !15100)
!15100 = distinct !DILexicalBlock(scope: !15096, file: !2454, line: 655, column: 36)
!15101 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !15099)
!15102 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15099)
!15103 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !15099)
!15104 = !DILocation(line: 0, scope: !14508, inlinedAt: !15105)
!15105 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !15099)
!15106 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15105)
!15107 = !DILocation(line: 657, column: 3, scope: !15100)
!15108 = !DILocation(line: 660, column: 2, scope: !15081)
!15109 = !DILocation(line: 661, column: 2, scope: !15081)
!15110 = !DILocation(line: 662, column: 2, scope: !15081)
!15111 = !DILocation(line: 663, column: 1, scope: !15081)
!15112 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13620, file: !13620, line: 126, type: !14601, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15113)
!15113 = !{!15114}
!15114 = !DILocalVariable(name: "thread", arg: 1, scope: !15112, file: !13620, line: 126, type: !2346)
!15115 = !DILocation(line: 0, scope: !15112)
!15116 = !DILocation(line: 128, column: 23, scope: !15112)
!15117 = !DILocation(line: 128, column: 36, scope: !15112)
!15118 = !DILocation(line: 128, column: 56, scope: !15112)
!15119 = !DILocation(line: 128, column: 2, scope: !15112)
!15120 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13620, file: !13620, line: 155, type: !14418, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15121)
!15121 = !{!15122}
!15122 = !DILocalVariable(name: "thread", arg: 1, scope: !15120, file: !13620, line: 155, type: !2346)
!15123 = !DILocation(line: 0, scope: !15120)
!15124 = !DILocation(line: 157, column: 15, scope: !15120)
!15125 = !DILocation(line: 157, column: 28, scope: !15120)
!15126 = !DILocation(line: 158, column: 1, scope: !15120)
!15127 = distinct !DISubprogram(name: "z_reschedule", scope: !2454, file: !2454, line: 967, type: !14495, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15128)
!15128 = !{!15129, !15130}
!15129 = !DILocalVariable(name: "lock", arg: 1, scope: !15127, file: !2454, line: 967, type: !14463)
!15130 = !DILocalVariable(name: "key", arg: 2, scope: !15127, file: !2454, line: 967, type: !14452)
!15131 = !DILocation(line: 0, scope: !15127)
!15132 = !DILocation(line: 969, column: 6, scope: !15133)
!15133 = distinct !DILexicalBlock(scope: !15127, file: !2454, line: 969, column: 6)
!15134 = !DILocation(line: 969, column: 23, scope: !15133)
!15135 = !DILocation(line: 969, column: 26, scope: !15133)
!15136 = !DILocation(line: 969, column: 6, scope: !15127)
!15137 = !DILocalVariable(name: "key", arg: 2, scope: !15138, file: !13724, line: 193, type: !14452)
!15138 = distinct !DISubprogram(name: "z_swap", scope: !13724, file: !13724, line: 193, type: !15139, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15141)
!15139 = !DISubroutineType(types: !15140)
!15140 = !{!107, !14463, !14452}
!15141 = !{!15142, !15137}
!15142 = !DILocalVariable(name: "lock", arg: 1, scope: !15138, file: !13724, line: 193, type: !14463)
!15143 = !DILocation(line: 0, scope: !15138, inlinedAt: !15144)
!15144 = distinct !DILocation(line: 970, column: 3, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !15133, file: !2454, line: 969, column: 39)
!15146 = !DILocalVariable(name: "l", arg: 1, scope: !15147, file: !420, line: 221, type: !14463)
!15147 = distinct !DISubprogram(name: "k_spin_release", scope: !420, file: !420, line: 221, type: !15148, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15150)
!15148 = !DISubroutineType(types: !15149)
!15149 = !{null, !14463}
!15150 = !{!15146}
!15151 = !DILocation(line: 0, scope: !15147, inlinedAt: !15152)
!15152 = distinct !DILocation(line: 195, column: 2, scope: !15138, inlinedAt: !15144)
!15153 = !DILocation(line: 225, column: 2, scope: !15154, inlinedAt: !15152)
!15154 = distinct !DILexicalBlock(scope: !15155, file: !420, line: 225, column: 2)
!15155 = distinct !DILexicalBlock(scope: !15147, file: !420, line: 225, column: 2)
!15156 = !DILocation(line: 225, column: 2, scope: !15155, inlinedAt: !15152)
!15157 = !DILocation(line: 225, column: 2, scope: !15158, inlinedAt: !15152)
!15158 = distinct !DILexicalBlock(scope: !15154, file: !420, line: 225, column: 2)
!15159 = !DILocation(line: 196, column: 9, scope: !15138, inlinedAt: !15144)
!15160 = !DILocation(line: 971, column: 2, scope: !15145)
!15161 = !DILocation(line: 0, scope: !14494, inlinedAt: !15162)
!15162 = distinct !DILocation(line: 972, column: 3, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15133, file: !2454, line: 971, column: 9)
!15164 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !15162)
!15165 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15162)
!15166 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !15162)
!15167 = !DILocation(line: 0, scope: !14508, inlinedAt: !15168)
!15168 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !15162)
!15169 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15168)
!15170 = !DILocation(line: 975, column: 1, scope: !15127)
!15171 = distinct !DISubprogram(name: "resched", scope: !2454, file: !2454, line: 940, type: !15172, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15174)
!15172 = !DISubroutineType(types: !15173)
!15173 = !{!145, !152}
!15174 = !{!15175}
!15175 = !DILocalVariable(name: "key", arg: 1, scope: !15171, file: !2454, line: 940, type: !152)
!15176 = !DILocation(line: 0, scope: !15171)
!15177 = !DILocalVariable(name: "key", arg: 1, scope: !15178, file: !5938, line: 112, type: !32)
!15178 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5938, file: !5938, line: 112, type: !15179, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15181)
!15179 = !DISubroutineType(types: !15180)
!15180 = !{!145, !32}
!15181 = !{!15177}
!15182 = !DILocation(line: 0, scope: !15178, inlinedAt: !15183)
!15183 = distinct !DILocation(line: 946, column: 9, scope: !15171)
!15184 = !DILocation(line: 115, column: 13, scope: !15178, inlinedAt: !15183)
!15185 = !DILocation(line: 946, column: 32, scope: !15171)
!15186 = !DILocation(line: 1031, column: 3, scope: !15187, inlinedAt: !15190)
!15187 = distinct !DISubprogram(name: "__get_IPSR", scope: !6257, file: !6257, line: 1027, type: !6344, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15188)
!15188 = !{!15189}
!15189 = !DILocalVariable(name: "result", scope: !15187, file: !6257, line: 1029, type: !152)
!15190 = distinct !DILocation(line: 48, column: 10, scope: !15191, inlinedAt: !15192)
!15191 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7309, file: !7309, line: 46, type: !7310, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!15192 = distinct !DILocation(line: 946, column: 36, scope: !15171)
!15193 = !{i64 3542643}
!15194 = !DILocation(line: 0, scope: !15187, inlinedAt: !15190)
!15195 = !DILocation(line: 48, column: 9, scope: !15191, inlinedAt: !15192)
!15196 = !DILocation(line: 946, column: 2, scope: !15171)
!15197 = distinct !DISubprogram(name: "need_swap", scope: !2454, file: !2454, line: 953, type: !7310, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15198)
!15198 = !{!15199}
!15199 = !DILocalVariable(name: "new_thread", scope: !15197, file: !2454, line: 959, type: !2346)
!15200 = !DILocation(line: 962, column: 31, scope: !15197)
!15201 = !DILocation(line: 0, scope: !15197)
!15202 = !DILocation(line: 963, column: 23, scope: !15197)
!15203 = !DILocation(line: 963, column: 20, scope: !15197)
!15204 = !DILocation(line: 963, column: 2, scope: !15197)
!15205 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13724, file: !13724, line: 181, type: !6267, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15206)
!15206 = !{!15207, !15208}
!15207 = !DILocalVariable(name: "key", arg: 1, scope: !15205, file: !13724, line: 181, type: !32)
!15208 = !DILocalVariable(name: "ret", scope: !15205, file: !13724, line: 183, type: !107)
!15209 = !DILocation(line: 0, scope: !15205)
!15210 = !DILocation(line: 185, column: 8, scope: !15205)
!15211 = !DILocation(line: 186, column: 2, scope: !15205)
!15212 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2454, file: !2454, line: 665, type: !14418, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15213)
!15213 = !{!15214, !15215, !15217}
!15214 = !DILocalVariable(name: "thread", arg: 1, scope: !15212, file: !2454, line: 665, type: !2346)
!15215 = !DILocalVariable(name: "__i", scope: !15216, file: !2454, line: 671, type: !14452)
!15216 = distinct !DILexicalBlock(scope: !15212, file: !2454, line: 671, column: 2)
!15217 = !DILocalVariable(name: "__key", scope: !15216, file: !2454, line: 671, type: !14452)
!15218 = !DILocation(line: 0, scope: !15212)
!15219 = !DILocation(line: 669, column: 8, scope: !15212)
!15220 = !DILocation(line: 0, scope: !15216)
!15221 = !DILocation(line: 0, scope: !14460, inlinedAt: !15222)
!15222 = distinct !DILocation(line: 671, column: 2, scope: !15216)
!15223 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !15224)
!15224 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !15222)
!15225 = !DILocation(line: 0, scope: !14469, inlinedAt: !15224)
!15226 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !15222)
!15227 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15222)
!15228 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !15222)
!15229 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !15222)
!15230 = !DILocation(line: 672, column: 7, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15232, file: !2454, line: 672, column: 7)
!15232 = distinct !DILexicalBlock(scope: !15233, file: !2454, line: 671, column: 26)
!15233 = distinct !DILexicalBlock(scope: !15216, file: !2454, line: 671, column: 2)
!15234 = !DILocation(line: 672, column: 7, scope: !15232)
!15235 = !DILocation(line: 0, scope: !14652, inlinedAt: !15236)
!15236 = distinct !DILocation(line: 673, column: 4, scope: !15237)
!15237 = distinct !DILexicalBlock(scope: !15231, file: !2454, line: 672, column: 35)
!15238 = !DILocation(line: 266, column: 15, scope: !14652, inlinedAt: !15236)
!15239 = !DILocation(line: 266, column: 28, scope: !14652, inlinedAt: !15236)
!15240 = !DILocation(line: 0, scope: !14660, inlinedAt: !15241)
!15241 = distinct !DILocation(line: 268, column: 3, scope: !14664, inlinedAt: !15236)
!15242 = !DILocation(line: 234, column: 2, scope: !14660, inlinedAt: !15241)
!15243 = !DILocation(line: 674, column: 3, scope: !15237)
!15244 = !DILocation(line: 675, column: 3, scope: !15232)
!15245 = !DILocation(line: 676, column: 26, scope: !15232)
!15246 = !DILocation(line: 676, column: 23, scope: !15232)
!15247 = !DILocation(line: 676, column: 3, scope: !15232)
!15248 = !DILocation(line: 0, scope: !14494, inlinedAt: !15249)
!15249 = distinct !DILocation(line: 671, column: 2, scope: !15233)
!15250 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !15249)
!15251 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15249)
!15252 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !15249)
!15253 = !DILocation(line: 0, scope: !14508, inlinedAt: !15254)
!15254 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !15249)
!15255 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15254)
!15256 = !DILocation(line: 679, column: 16, scope: !15257)
!15257 = distinct !DILexicalBlock(scope: !15212, file: !2454, line: 679, column: 6)
!15258 = !DILocation(line: 679, column: 13, scope: !15257)
!15259 = !DILocation(line: 679, column: 6, scope: !15212)
!15260 = !DILocation(line: 680, column: 3, scope: !15261)
!15261 = distinct !DILexicalBlock(scope: !15257, file: !2454, line: 679, column: 26)
!15262 = !DILocation(line: 681, column: 2, scope: !15261)
!15263 = !DILocation(line: 684, column: 1, scope: !15212)
!15264 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14049, file: !14049, line: 52, type: !14436, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15265)
!15265 = !{!15266}
!15266 = !DILocalVariable(name: "thread", arg: 1, scope: !15264, file: !14049, line: 52, type: !2346)
!15267 = !DILocation(line: 0, scope: !15264)
!15268 = !DILocation(line: 54, column: 39, scope: !15264)
!15269 = !DILocation(line: 54, column: 9, scope: !15264)
!15270 = !DILocation(line: 54, column: 2, scope: !15264)
!15271 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13620, file: !13620, line: 141, type: !14418, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15272)
!15272 = !{!15273}
!15273 = !DILocalVariable(name: "thread", arg: 1, scope: !15271, file: !13620, line: 141, type: !2346)
!15274 = !DILocation(line: 0, scope: !15271)
!15275 = !DILocation(line: 143, column: 15, scope: !15271)
!15276 = !DILocation(line: 143, column: 28, scope: !15271)
!15277 = !DILocation(line: 146, column: 1, scope: !15271)
!15278 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13620, file: !13620, line: 73, type: !3082, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!15279 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !15280)
!15280 = distinct !DILocation(line: 75, column: 30, scope: !15278)
!15281 = !DILocation(line: 0, scope: !14469, inlinedAt: !15280)
!15282 = !DILocation(line: 75, column: 9, scope: !15278)
!15283 = !DILocation(line: 76, column: 1, scope: !15278)
!15284 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2454, file: !2454, line: 977, type: !6354, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15285)
!15285 = !{!15286}
!15286 = !DILocalVariable(name: "key", arg: 1, scope: !15284, file: !2454, line: 977, type: !152)
!15287 = !DILocation(line: 0, scope: !15284)
!15288 = !DILocation(line: 979, column: 6, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15284, file: !2454, line: 979, column: 6)
!15290 = !DILocation(line: 979, column: 6, scope: !15284)
!15291 = !DILocation(line: 980, column: 3, scope: !15292)
!15292 = distinct !DILexicalBlock(scope: !15289, file: !2454, line: 979, column: 20)
!15293 = !DILocation(line: 981, column: 2, scope: !15292)
!15294 = !DILocation(line: 0, scope: !14508, inlinedAt: !15295)
!15295 = distinct !DILocation(line: 982, column: 3, scope: !15296)
!15296 = distinct !DILexicalBlock(scope: !15289, file: !2454, line: 981, column: 9)
!15297 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15295)
!15298 = !DILocation(line: 985, column: 1, scope: !15284)
!15299 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2454, file: !2454, line: 695, type: !14418, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15300)
!15300 = !{!15301, !15302}
!15301 = !DILocalVariable(name: "thread", arg: 1, scope: !15299, file: !2454, line: 695, type: !2346)
!15302 = !DILocalVariable(name: "key", scope: !15299, file: !2454, line: 699, type: !14452)
!15303 = !DILocation(line: 0, scope: !15299)
!15304 = !DILocation(line: 0, scope: !14460, inlinedAt: !15305)
!15305 = distinct !DILocation(line: 699, column: 25, scope: !15299)
!15306 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !15307)
!15307 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !15305)
!15308 = !DILocation(line: 0, scope: !14469, inlinedAt: !15307)
!15309 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !15305)
!15310 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15305)
!15311 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !15305)
!15312 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !15305)
!15313 = !DILocation(line: 702, column: 7, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15299, file: !2454, line: 702, column: 6)
!15315 = !DILocation(line: 702, column: 6, scope: !15299)
!15316 = !DILocation(line: 0, scope: !14494, inlinedAt: !15317)
!15317 = distinct !DILocation(line: 703, column: 3, scope: !15318)
!15318 = distinct !DILexicalBlock(scope: !15314, file: !2454, line: 702, column: 38)
!15319 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !15317)
!15320 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15317)
!15321 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !15317)
!15322 = !DILocation(line: 0, scope: !14508, inlinedAt: !15323)
!15323 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !15317)
!15324 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15323)
!15325 = !DILocation(line: 704, column: 3, scope: !15318)
!15326 = !DILocation(line: 707, column: 2, scope: !15299)
!15327 = !DILocation(line: 708, column: 2, scope: !15299)
!15328 = !DILocation(line: 710, column: 2, scope: !15299)
!15329 = !DILocation(line: 713, column: 1, scope: !15299)
!15330 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13620, file: !13620, line: 96, type: !14601, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15331)
!15331 = !{!15332}
!15332 = !DILocalVariable(name: "thread", arg: 1, scope: !15330, file: !13620, line: 96, type: !2346)
!15333 = !DILocation(line: 0, scope: !15330)
!15334 = !DILocation(line: 98, column: 23, scope: !15330)
!15335 = !DILocation(line: 98, column: 36, scope: !15330)
!15336 = !DILocation(line: 98, column: 57, scope: !15330)
!15337 = !DILocation(line: 98, column: 2, scope: !15330)
!15338 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13620, file: !13620, line: 148, type: !14418, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15339)
!15339 = !{!15340}
!15340 = !DILocalVariable(name: "thread", arg: 1, scope: !15338, file: !13620, line: 148, type: !2346)
!15341 = !DILocation(line: 0, scope: !15338)
!15342 = !DILocation(line: 150, column: 15, scope: !15338)
!15343 = !DILocation(line: 150, column: 28, scope: !15338)
!15344 = !DILocation(line: 153, column: 1, scope: !15338)
!15345 = distinct !DISubprogram(name: "z_pend_thread", scope: !2454, file: !2454, line: 770, type: !15346, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15352)
!15346 = !DISubroutineType(types: !15347)
!15347 = !{null, !2346, !2377, !15348}
!15348 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !15349)
!15349 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !15350)
!15350 = !{!15351}
!15351 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15349, file: !565, line: 66, baseType: !564, size: 64)
!15352 = !{!15353, !15354, !15355, !15356, !15358}
!15353 = !DILocalVariable(name: "thread", arg: 1, scope: !15345, file: !2454, line: 770, type: !2346)
!15354 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15345, file: !2454, line: 770, type: !2377)
!15355 = !DILocalVariable(name: "timeout", arg: 3, scope: !15345, file: !2454, line: 771, type: !15348)
!15356 = !DILocalVariable(name: "__i", scope: !15357, file: !2454, line: 774, type: !14452)
!15357 = distinct !DILexicalBlock(scope: !15345, file: !2454, line: 774, column: 2)
!15358 = !DILocalVariable(name: "__key", scope: !15357, file: !2454, line: 774, type: !14452)
!15359 = !DILocation(line: 0, scope: !15345)
!15360 = !DILocation(line: 773, column: 2, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !15362, file: !2454, line: 773, column: 2)
!15362 = distinct !DILexicalBlock(scope: !15345, file: !2454, line: 773, column: 2)
!15363 = !DILocation(line: 773, column: 2, scope: !15362)
!15364 = !DILocation(line: 773, column: 2, scope: !15365)
!15365 = distinct !DILexicalBlock(scope: !15361, file: !2454, line: 773, column: 2)
!15366 = !DILocation(line: 0, scope: !15357)
!15367 = !DILocation(line: 0, scope: !14460, inlinedAt: !15368)
!15368 = distinct !DILocation(line: 774, column: 2, scope: !15357)
!15369 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !15370)
!15370 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !15368)
!15371 = !DILocation(line: 0, scope: !14469, inlinedAt: !15370)
!15372 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !15368)
!15373 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15368)
!15374 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !15368)
!15375 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !15368)
!15376 = !DILocation(line: 775, column: 3, scope: !15377)
!15377 = distinct !DILexicalBlock(scope: !15378, file: !2454, line: 774, column: 26)
!15378 = distinct !DILexicalBlock(scope: !15357, file: !2454, line: 774, column: 2)
!15379 = !DILocation(line: 0, scope: !14494, inlinedAt: !15380)
!15380 = distinct !DILocation(line: 774, column: 2, scope: !15378)
!15381 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !15380)
!15382 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15380)
!15383 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !15380)
!15384 = !DILocation(line: 0, scope: !14508, inlinedAt: !15385)
!15385 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !15380)
!15386 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15385)
!15387 = !DILocation(line: 777, column: 1, scope: !15345)
!15388 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2454, file: !2454, line: 79, type: !14601, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15389)
!15389 = !{!15390}
!15390 = !DILocalVariable(name: "thread", arg: 1, scope: !15388, file: !2454, line: 79, type: !2346)
!15391 = !DILocation(line: 0, scope: !15388)
!15392 = !DILocation(line: 81, column: 23, scope: !15388)
!15393 = !DILocation(line: 81, column: 36, scope: !15388)
!15394 = !DILocation(line: 81, column: 53, scope: !15388)
!15395 = !DILocation(line: 81, column: 2, scope: !15388)
!15396 = distinct !DISubprogram(name: "pend_locked", scope: !2454, file: !2454, line: 760, type: !15346, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15397)
!15397 = !{!15398, !15399, !15400}
!15398 = !DILocalVariable(name: "thread", arg: 1, scope: !15396, file: !2454, line: 760, type: !2346)
!15399 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15396, file: !2454, line: 760, type: !2377)
!15400 = !DILocalVariable(name: "timeout", arg: 3, scope: !15396, file: !2454, line: 761, type: !15348)
!15401 = !DILocation(line: 0, scope: !15396)
!15402 = !DILocation(line: 766, column: 2, scope: !15396)
!15403 = !DILocation(line: 767, column: 2, scope: !15396)
!15404 = !DILocation(line: 768, column: 1, scope: !15396)
!15405 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2454, file: !2454, line: 740, type: !15406, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15408)
!15406 = !DISubroutineType(types: !15407)
!15407 = !{null, !2346, !2377}
!15408 = !{!15409, !15410}
!15409 = !DILocalVariable(name: "thread", arg: 1, scope: !15405, file: !2454, line: 740, type: !2346)
!15410 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15405, file: !2454, line: 740, type: !2377)
!15411 = !DILocation(line: 0, scope: !15405)
!15412 = !DILocation(line: 742, column: 2, scope: !15405)
!15413 = !DILocation(line: 743, column: 2, scope: !15405)
!15414 = !DILocation(line: 747, column: 13, scope: !15415)
!15415 = distinct !DILexicalBlock(scope: !15405, file: !2454, line: 747, column: 6)
!15416 = !DILocation(line: 747, column: 6, scope: !15405)
!15417 = !DILocation(line: 748, column: 16, scope: !15418)
!15418 = distinct !DILexicalBlock(scope: !15415, file: !2454, line: 747, column: 22)
!15419 = !DILocation(line: 748, column: 26, scope: !15418)
!15420 = !DILocation(line: 749, column: 28, scope: !15418)
!15421 = !DILocation(line: 0, scope: !14683, inlinedAt: !15422)
!15422 = distinct !DILocation(line: 749, column: 3, scope: !15418)
!15423 = !DILocation(line: 186, column: 2, scope: !14693, inlinedAt: !15422)
!15424 = !DILocation(line: 186, column: 2, scope: !14694, inlinedAt: !15422)
!15425 = !DILocation(line: 186, column: 2, scope: !14697, inlinedAt: !15422)
!15426 = !DILocation(line: 188, column: 2, scope: !14699, inlinedAt: !15422)
!15427 = !DILocation(line: 188, column: 2, scope: !14701, inlinedAt: !15422)
!15428 = !DILocation(line: 0, scope: !14699, inlinedAt: !15422)
!15429 = !DILocation(line: 189, column: 7, scope: !14704, inlinedAt: !15422)
!15430 = !DILocation(line: 189, column: 35, scope: !14704, inlinedAt: !15422)
!15431 = !DILocation(line: 189, column: 7, scope: !14705, inlinedAt: !15422)
!15432 = !DILocation(line: 191, column: 21, scope: !14709, inlinedAt: !15422)
!15433 = !DILocation(line: 190, column: 4, scope: !14709, inlinedAt: !15422)
!15434 = !DILocation(line: 192, column: 4, scope: !14709, inlinedAt: !15422)
!15435 = distinct !{!15435, !15426, !15436}
!15436 = !DILocation(line: 194, column: 2, scope: !14699, inlinedAt: !15422)
!15437 = !DILocation(line: 196, column: 37, scope: !14683, inlinedAt: !15422)
!15438 = !DILocation(line: 196, column: 2, scope: !14683, inlinedAt: !15422)
!15439 = !DILocation(line: 197, column: 1, scope: !14683, inlinedAt: !15422)
!15440 = !DILocation(line: 751, column: 1, scope: !15405)
!15441 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2454, file: !2454, line: 753, type: !15442, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15444)
!15442 = !DISubroutineType(types: !15443)
!15443 = !{null, !2346, !15348}
!15444 = !{!15445, !15446}
!15445 = !DILocalVariable(name: "thread", arg: 1, scope: !15441, file: !2454, line: 753, type: !2346)
!15446 = !DILocalVariable(name: "timeout", arg: 2, scope: !15441, file: !2454, line: 753, type: !15348)
!15447 = !DILocation(line: 0, scope: !15441)
!15448 = !DILocation(line: 755, column: 7, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15441, file: !2454, line: 755, column: 6)
!15450 = !DILocation(line: 755, column: 6, scope: !15441)
!15451 = !DILocation(line: 756, column: 3, scope: !15452)
!15452 = distinct !DILexicalBlock(scope: !15449, file: !2454, line: 755, column: 41)
!15453 = !DILocation(line: 757, column: 2, scope: !15452)
!15454 = !DILocation(line: 758, column: 1, scope: !15441)
!15455 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14049, file: !14049, line: 47, type: !15442, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15456)
!15456 = !{!15457, !15458}
!15457 = !DILocalVariable(name: "thread", arg: 1, scope: !15455, file: !14049, line: 47, type: !2346)
!15458 = !DILocalVariable(name: "ticks", arg: 2, scope: !15455, file: !14049, line: 47, type: !15348)
!15459 = !DILocation(line: 0, scope: !15455)
!15460 = !DILocation(line: 49, column: 30, scope: !15455)
!15461 = !DILocation(line: 49, column: 2, scope: !15455)
!15462 = !DILocation(line: 50, column: 1, scope: !15455)
!15463 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2454, file: !2454, line: 795, type: !2403, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15464)
!15464 = !{!15465, !15466, !15467, !15469, !15470}
!15465 = !DILocalVariable(name: "timeout", arg: 1, scope: !15463, file: !2454, line: 795, type: !2405)
!15466 = !DILocalVariable(name: "thread", scope: !15463, file: !2454, line: 797, type: !2346)
!15467 = !DILocalVariable(name: "__i", scope: !15468, file: !2454, line: 800, type: !14452)
!15468 = distinct !DILexicalBlock(scope: !15463, file: !2454, line: 800, column: 2)
!15469 = !DILocalVariable(name: "__key", scope: !15468, file: !2454, line: 800, type: !14452)
!15470 = !DILocalVariable(name: "killed", scope: !15471, file: !2454, line: 801, type: !145)
!15471 = distinct !DILexicalBlock(scope: !15472, file: !2454, line: 800, column: 26)
!15472 = distinct !DILexicalBlock(scope: !15468, file: !2454, line: 800, column: 2)
!15473 = !DILocation(line: 0, scope: !15463)
!15474 = !DILocation(line: 797, column: 28, scope: !15463)
!15475 = !DILocation(line: 0, scope: !15468)
!15476 = !DILocation(line: 0, scope: !14460, inlinedAt: !15477)
!15477 = distinct !DILocation(line: 800, column: 2, scope: !15468)
!15478 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !15479)
!15479 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !15477)
!15480 = !DILocation(line: 0, scope: !14469, inlinedAt: !15479)
!15481 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !15477)
!15482 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15477)
!15483 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !15477)
!15484 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !15477)
!15485 = !DILocation(line: 801, column: 27, scope: !15471)
!15486 = !DILocation(line: 801, column: 32, scope: !15471)
!15487 = !DILocation(line: 801, column: 61, scope: !15471)
!15488 = !DILocation(line: 0, scope: !15471)
!15489 = !DILocation(line: 804, column: 7, scope: !15471)
!15490 = !DILocation(line: 805, column: 21, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15492, file: !2454, line: 805, column: 8)
!15492 = distinct !DILexicalBlock(scope: !15493, file: !2454, line: 804, column: 16)
!15493 = distinct !DILexicalBlock(scope: !15471, file: !2454, line: 804, column: 7)
!15494 = !DILocation(line: 805, column: 31, scope: !15491)
!15495 = !DILocation(line: 805, column: 8, scope: !15492)
!15496 = !DILocation(line: 806, column: 5, scope: !15497)
!15497 = distinct !DILexicalBlock(scope: !15491, file: !2454, line: 805, column: 40)
!15498 = !DILocation(line: 807, column: 4, scope: !15497)
!15499 = !DILocation(line: 808, column: 4, scope: !15492)
!15500 = !DILocation(line: 809, column: 4, scope: !15492)
!15501 = !DILocation(line: 810, column: 4, scope: !15492)
!15502 = !DILocation(line: 811, column: 3, scope: !15492)
!15503 = !DILocation(line: 0, scope: !14494, inlinedAt: !15504)
!15504 = distinct !DILocation(line: 800, column: 2, scope: !15472)
!15505 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !15504)
!15506 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15504)
!15507 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !15504)
!15508 = !DILocation(line: 0, scope: !14508, inlinedAt: !15509)
!15509 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !15504)
!15510 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15509)
!15511 = !DILocation(line: 813, column: 1, scope: !15463)
!15512 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2454, file: !2454, line: 779, type: !14418, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15513)
!15513 = !{!15514}
!15514 = !DILocalVariable(name: "thread", arg: 1, scope: !15512, file: !2454, line: 779, type: !2346)
!15515 = !DILocation(line: 0, scope: !15512)
!15516 = !DILocation(line: 781, column: 21, scope: !15512)
!15517 = !DILocation(line: 781, column: 2, scope: !15512)
!15518 = !DILocation(line: 782, column: 2, scope: !15512)
!15519 = !DILocation(line: 783, column: 15, scope: !15512)
!15520 = !DILocation(line: 783, column: 25, scope: !15512)
!15521 = !DILocation(line: 784, column: 1, scope: !15512)
!15522 = distinct !DISubprogram(name: "pended_on_thread", scope: !2454, file: !2454, line: 724, type: !15523, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15525)
!15523 = !DISubroutineType(types: !15524)
!15524 = !{!2377, !2346}
!15525 = !{!15526}
!15526 = !DILocalVariable(name: "thread", arg: 1, scope: !15522, file: !2454, line: 724, type: !2346)
!15527 = !DILocation(line: 0, scope: !15522)
!15528 = !DILocation(line: 726, column: 2, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15530, file: !2454, line: 726, column: 2)
!15530 = distinct !DILexicalBlock(scope: !15522, file: !2454, line: 726, column: 2)
!15531 = !DILocation(line: 726, column: 2, scope: !15530)
!15532 = !DILocation(line: 726, column: 2, scope: !15533)
!15533 = distinct !DILexicalBlock(scope: !15529, file: !2454, line: 726, column: 2)
!15534 = !DILocation(line: 728, column: 2, scope: !15522)
!15535 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13620, file: !13620, line: 165, type: !14418, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15536)
!15536 = !{!15537}
!15537 = !DILocalVariable(name: "thread", arg: 1, scope: !15535, file: !13620, line: 165, type: !2346)
!15538 = !DILocation(line: 0, scope: !15535)
!15539 = !DILocation(line: 167, column: 15, scope: !15535)
!15540 = !DILocation(line: 167, column: 28, scope: !15535)
!15541 = !DILocation(line: 168, column: 1, scope: !15535)
!15542 = distinct !DISubprogram(name: "unready_thread", scope: !2454, file: !2454, line: 731, type: !14418, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15543)
!15543 = !{!15544}
!15544 = !DILocalVariable(name: "thread", arg: 1, scope: !15542, file: !2454, line: 731, type: !2346)
!15545 = !DILocation(line: 0, scope: !15542)
!15546 = !DILocation(line: 733, column: 6, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15542, file: !2454, line: 733, column: 6)
!15548 = !DILocation(line: 733, column: 6, scope: !15542)
!15549 = !DILocation(line: 0, scope: !14652, inlinedAt: !15550)
!15550 = distinct !DILocation(line: 734, column: 3, scope: !15551)
!15551 = distinct !DILexicalBlock(scope: !15547, file: !2454, line: 733, column: 34)
!15552 = !DILocation(line: 266, column: 15, scope: !14652, inlinedAt: !15550)
!15553 = !DILocation(line: 266, column: 28, scope: !14652, inlinedAt: !15550)
!15554 = !DILocation(line: 0, scope: !14660, inlinedAt: !15555)
!15555 = distinct !DILocation(line: 268, column: 3, scope: !14664, inlinedAt: !15550)
!15556 = !DILocation(line: 234, column: 2, scope: !14660, inlinedAt: !15555)
!15557 = !DILocation(line: 735, column: 2, scope: !15551)
!15558 = !DILocation(line: 736, column: 25, scope: !15542)
!15559 = !DILocation(line: 736, column: 22, scope: !15542)
!15560 = !DILocation(line: 736, column: 2, scope: !15542)
!15561 = !DILocation(line: 737, column: 1, scope: !15542)
!15562 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13620, file: !13620, line: 160, type: !14418, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15563)
!15563 = !{!15564}
!15564 = !DILocalVariable(name: "thread", arg: 1, scope: !15562, file: !13620, line: 160, type: !2346)
!15565 = !DILocation(line: 0, scope: !15562)
!15566 = !DILocation(line: 162, column: 15, scope: !15562)
!15567 = !DILocation(line: 162, column: 28, scope: !15562)
!15568 = !DILocation(line: 163, column: 1, scope: !15562)
!15569 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2454, file: !2454, line: 786, type: !14418, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15570)
!15570 = !{!15571, !15572, !15574}
!15571 = !DILocalVariable(name: "thread", arg: 1, scope: !15569, file: !2454, line: 786, type: !2346)
!15572 = !DILocalVariable(name: "__i", scope: !15573, file: !2454, line: 788, type: !14452)
!15573 = distinct !DILexicalBlock(scope: !15569, file: !2454, line: 788, column: 2)
!15574 = !DILocalVariable(name: "__key", scope: !15573, file: !2454, line: 788, type: !14452)
!15575 = !DILocation(line: 0, scope: !15569)
!15576 = !DILocation(line: 0, scope: !15573)
!15577 = !DILocation(line: 0, scope: !14460, inlinedAt: !15578)
!15578 = distinct !DILocation(line: 788, column: 2, scope: !15573)
!15579 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !15580)
!15580 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !15578)
!15581 = !DILocation(line: 0, scope: !14469, inlinedAt: !15580)
!15582 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !15578)
!15583 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15578)
!15584 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !15578)
!15585 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !15578)
!15586 = !DILocation(line: 789, column: 3, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !15588, file: !2454, line: 788, column: 26)
!15588 = distinct !DILexicalBlock(scope: !15573, file: !2454, line: 788, column: 2)
!15589 = !DILocation(line: 0, scope: !14494, inlinedAt: !15590)
!15590 = distinct !DILocation(line: 788, column: 2, scope: !15588)
!15591 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !15590)
!15592 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15590)
!15593 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !15590)
!15594 = !DILocation(line: 0, scope: !14508, inlinedAt: !15595)
!15595 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !15590)
!15596 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15595)
!15597 = !DILocation(line: 791, column: 1, scope: !15569)
!15598 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2454, file: !2454, line: 816, type: !15599, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15601)
!15599 = !DISubroutineType(types: !15600)
!15600 = !{!107, !152, !2377, !15348}
!15601 = !{!15602, !15603, !15604, !15605, !15606, !15608}
!15602 = !DILocalVariable(name: "key", arg: 1, scope: !15598, file: !2454, line: 816, type: !152)
!15603 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15598, file: !2454, line: 816, type: !2377)
!15604 = !DILocalVariable(name: "timeout", arg: 3, scope: !15598, file: !2454, line: 816, type: !15348)
!15605 = !DILocalVariable(name: "ret", scope: !15598, file: !2454, line: 828, type: !107)
!15606 = !DILocalVariable(name: "__i", scope: !15607, file: !2454, line: 829, type: !14452)
!15607 = distinct !DILexicalBlock(scope: !15598, file: !2454, line: 829, column: 2)
!15608 = !DILocalVariable(name: "__key", scope: !15607, file: !2454, line: 829, type: !14452)
!15609 = !DILocation(line: 0, scope: !15598)
!15610 = !DILocation(line: 823, column: 14, scope: !15598)
!15611 = !DILocation(line: 823, column: 2, scope: !15598)
!15612 = !DILocation(line: 826, column: 20, scope: !15598)
!15613 = !DILocation(line: 826, column: 18, scope: !15598)
!15614 = !DILocation(line: 828, column: 12, scope: !15598)
!15615 = !DILocation(line: 0, scope: !15607)
!15616 = !DILocation(line: 0, scope: !14460, inlinedAt: !15617)
!15617 = distinct !DILocation(line: 829, column: 2, scope: !15607)
!15618 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !15619)
!15619 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !15617)
!15620 = !DILocation(line: 0, scope: !14469, inlinedAt: !15619)
!15621 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !15617)
!15622 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15617)
!15623 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !15617)
!15624 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !15617)
!15625 = !DILocation(line: 830, column: 7, scope: !15626)
!15626 = distinct !DILexicalBlock(scope: !15627, file: !2454, line: 830, column: 7)
!15627 = distinct !DILexicalBlock(scope: !15628, file: !2454, line: 829, column: 26)
!15628 = distinct !DILexicalBlock(scope: !15607, file: !2454, line: 829, column: 2)
!15629 = !DILocation(line: 830, column: 26, scope: !15626)
!15630 = !DILocation(line: 830, column: 23, scope: !15626)
!15631 = !DILocation(line: 830, column: 7, scope: !15627)
!15632 = !DILocation(line: 831, column: 20, scope: !15633)
!15633 = distinct !DILexicalBlock(scope: !15626, file: !2454, line: 830, column: 36)
!15634 = !DILocation(line: 832, column: 3, scope: !15633)
!15635 = !DILocation(line: 0, scope: !14494, inlinedAt: !15636)
!15636 = distinct !DILocation(line: 829, column: 2, scope: !15628)
!15637 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !15636)
!15638 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15636)
!15639 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !15636)
!15640 = !DILocation(line: 0, scope: !14508, inlinedAt: !15641)
!15641 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !15636)
!15642 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15641)
!15643 = !DILocation(line: 834, column: 2, scope: !15598)
!15644 = distinct !DISubprogram(name: "z_pend_curr", scope: !2454, file: !2454, line: 840, type: !15645, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15647)
!15645 = !DISubroutineType(types: !15646)
!15646 = !{!107, !14463, !14452, !2377, !15348}
!15647 = !{!15648, !15649, !15650, !15651}
!15648 = !DILocalVariable(name: "lock", arg: 1, scope: !15644, file: !2454, line: 840, type: !14463)
!15649 = !DILocalVariable(name: "key", arg: 2, scope: !15644, file: !2454, line: 840, type: !14452)
!15650 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15644, file: !2454, line: 841, type: !2377)
!15651 = !DILocalVariable(name: "timeout", arg: 4, scope: !15644, file: !2454, line: 841, type: !15348)
!15652 = !DILocation(line: 0, scope: !15644)
!15653 = !DILocation(line: 844, column: 20, scope: !15644)
!15654 = !DILocation(line: 844, column: 18, scope: !15644)
!15655 = !DILocation(line: 846, column: 2, scope: !15656)
!15656 = distinct !DILexicalBlock(scope: !15657, file: !2454, line: 846, column: 2)
!15657 = distinct !DILexicalBlock(scope: !15644, file: !2454, line: 846, column: 2)
!15658 = !DILocation(line: 846, column: 2, scope: !15657)
!15659 = !DILocation(line: 846, column: 2, scope: !15660)
!15660 = distinct !DILexicalBlock(scope: !15656, file: !2454, line: 846, column: 2)
!15661 = !DILocation(line: 0, scope: !14460, inlinedAt: !15662)
!15662 = distinct !DILocation(line: 856, column: 9, scope: !15644)
!15663 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !15664)
!15664 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !15662)
!15665 = !DILocation(line: 0, scope: !14469, inlinedAt: !15664)
!15666 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !15662)
!15667 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15662)
!15668 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !15662)
!15669 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !15662)
!15670 = !DILocation(line: 857, column: 14, scope: !15644)
!15671 = !DILocation(line: 857, column: 2, scope: !15644)
!15672 = !DILocation(line: 0, scope: !15147, inlinedAt: !15673)
!15673 = distinct !DILocation(line: 858, column: 2, scope: !15644)
!15674 = !DILocation(line: 225, column: 2, scope: !15154, inlinedAt: !15673)
!15675 = !DILocation(line: 225, column: 2, scope: !15155, inlinedAt: !15673)
!15676 = !DILocation(line: 225, column: 2, scope: !15158, inlinedAt: !15673)
!15677 = !DILocation(line: 0, scope: !15138, inlinedAt: !15678)
!15678 = distinct !DILocation(line: 859, column: 9, scope: !15644)
!15679 = !DILocation(line: 0, scope: !15147, inlinedAt: !15680)
!15680 = distinct !DILocation(line: 195, column: 2, scope: !15138, inlinedAt: !15678)
!15681 = !DILocation(line: 225, column: 2, scope: !15154, inlinedAt: !15680)
!15682 = !DILocation(line: 225, column: 2, scope: !15155, inlinedAt: !15680)
!15683 = !DILocation(line: 225, column: 2, scope: !15158, inlinedAt: !15680)
!15684 = !DILocation(line: 196, column: 9, scope: !15138, inlinedAt: !15678)
!15685 = !DILocation(line: 859, column: 2, scope: !15644)
!15686 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2454, file: !2454, line: 862, type: !15687, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15689)
!15687 = !DISubroutineType(types: !15688)
!15688 = !{!2346, !2377}
!15689 = !{!15690, !15691, !15692, !15694}
!15690 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15686, file: !2454, line: 862, type: !2377)
!15691 = !DILocalVariable(name: "thread", scope: !15686, file: !2454, line: 864, type: !2346)
!15692 = !DILocalVariable(name: "__i", scope: !15693, file: !2454, line: 866, type: !14452)
!15693 = distinct !DILexicalBlock(scope: !15686, file: !2454, line: 866, column: 2)
!15694 = !DILocalVariable(name: "__key", scope: !15693, file: !2454, line: 866, type: !14452)
!15695 = !DILocation(line: 0, scope: !15686)
!15696 = !DILocation(line: 0, scope: !15693)
!15697 = !DILocation(line: 0, scope: !14460, inlinedAt: !15698)
!15698 = distinct !DILocation(line: 866, column: 2, scope: !15693)
!15699 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !15700)
!15700 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !15698)
!15701 = !DILocation(line: 0, scope: !14469, inlinedAt: !15700)
!15702 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !15698)
!15703 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15698)
!15704 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !15698)
!15705 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !15698)
!15706 = !DILocation(line: 867, column: 12, scope: !15707)
!15707 = distinct !DILexicalBlock(scope: !15708, file: !2454, line: 866, column: 26)
!15708 = distinct !DILexicalBlock(scope: !15693, file: !2454, line: 866, column: 2)
!15709 = !DILocation(line: 869, column: 14, scope: !15710)
!15710 = distinct !DILexicalBlock(scope: !15707, file: !2454, line: 869, column: 7)
!15711 = !DILocation(line: 869, column: 7, scope: !15707)
!15712 = !DILocation(line: 870, column: 4, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15710, file: !2454, line: 869, column: 23)
!15714 = !DILocation(line: 871, column: 3, scope: !15713)
!15715 = !DILocation(line: 0, scope: !14494, inlinedAt: !15716)
!15716 = distinct !DILocation(line: 866, column: 2, scope: !15708)
!15717 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !15716)
!15718 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15716)
!15719 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !15716)
!15720 = !DILocation(line: 0, scope: !14508, inlinedAt: !15721)
!15721 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !15716)
!15722 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15721)
!15723 = !DILocation(line: 874, column: 2, scope: !15686)
!15724 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2454, file: !2454, line: 877, type: !15687, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15725)
!15725 = !{!15726, !15727, !15728, !15730}
!15726 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15724, file: !2454, line: 877, type: !2377)
!15727 = !DILocalVariable(name: "thread", scope: !15724, file: !2454, line: 879, type: !2346)
!15728 = !DILocalVariable(name: "__i", scope: !15729, file: !2454, line: 881, type: !14452)
!15729 = distinct !DILexicalBlock(scope: !15724, file: !2454, line: 881, column: 2)
!15730 = !DILocalVariable(name: "__key", scope: !15729, file: !2454, line: 881, type: !14452)
!15731 = !DILocation(line: 0, scope: !15724)
!15732 = !DILocation(line: 0, scope: !15729)
!15733 = !DILocation(line: 0, scope: !14460, inlinedAt: !15734)
!15734 = distinct !DILocation(line: 881, column: 2, scope: !15729)
!15735 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !15736)
!15736 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !15734)
!15737 = !DILocation(line: 0, scope: !14469, inlinedAt: !15736)
!15738 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !15734)
!15739 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15734)
!15740 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !15734)
!15741 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !15734)
!15742 = !DILocation(line: 882, column: 12, scope: !15743)
!15743 = distinct !DILexicalBlock(scope: !15744, file: !2454, line: 881, column: 26)
!15744 = distinct !DILexicalBlock(scope: !15729, file: !2454, line: 881, column: 2)
!15745 = !DILocation(line: 884, column: 14, scope: !15746)
!15746 = distinct !DILexicalBlock(scope: !15743, file: !2454, line: 884, column: 7)
!15747 = !DILocation(line: 884, column: 7, scope: !15743)
!15748 = !DILocation(line: 885, column: 4, scope: !15749)
!15749 = distinct !DILexicalBlock(scope: !15746, file: !2454, line: 884, column: 23)
!15750 = !DILocation(line: 886, column: 10, scope: !15749)
!15751 = !DILocation(line: 887, column: 3, scope: !15749)
!15752 = !DILocation(line: 0, scope: !14494, inlinedAt: !15753)
!15753 = distinct !DILocation(line: 881, column: 2, scope: !15744)
!15754 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !15753)
!15755 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15753)
!15756 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !15753)
!15757 = !DILocation(line: 0, scope: !14508, inlinedAt: !15758)
!15758 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !15753)
!15759 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15758)
!15760 = !DILocation(line: 890, column: 2, scope: !15724)
!15761 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2454, file: !2454, line: 893, type: !14418, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15762)
!15762 = !{!15763}
!15763 = !DILocalVariable(name: "thread", arg: 1, scope: !15761, file: !2454, line: 893, type: !2346)
!15764 = !DILocation(line: 0, scope: !15761)
!15765 = !DILocation(line: 0, scope: !15569, inlinedAt: !15766)
!15766 = distinct !DILocation(line: 895, column: 2, scope: !15761)
!15767 = !DILocation(line: 0, scope: !15573, inlinedAt: !15766)
!15768 = !DILocation(line: 0, scope: !14460, inlinedAt: !15769)
!15769 = distinct !DILocation(line: 788, column: 2, scope: !15573, inlinedAt: !15766)
!15770 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !15771)
!15771 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !15769)
!15772 = !DILocation(line: 0, scope: !14469, inlinedAt: !15771)
!15773 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !15769)
!15774 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15769)
!15775 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !15769)
!15776 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !15769)
!15777 = !DILocation(line: 789, column: 3, scope: !15587, inlinedAt: !15766)
!15778 = !DILocation(line: 0, scope: !14494, inlinedAt: !15779)
!15779 = distinct !DILocation(line: 788, column: 2, scope: !15588, inlinedAt: !15766)
!15780 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !15779)
!15781 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15779)
!15782 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !15779)
!15783 = !DILocation(line: 0, scope: !14508, inlinedAt: !15784)
!15784 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !15779)
!15785 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15784)
!15786 = !DILocation(line: 896, column: 8, scope: !15761)
!15787 = !DILocation(line: 897, column: 1, scope: !15761)
!15788 = distinct !DISubprogram(name: "z_set_prio", scope: !2454, file: !2454, line: 902, type: !14821, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15789)
!15789 = !{!15790, !15791, !15792, !15793, !15795}
!15790 = !DILocalVariable(name: "thread", arg: 1, scope: !15788, file: !2454, line: 902, type: !2346)
!15791 = !DILocalVariable(name: "prio", arg: 2, scope: !15788, file: !2454, line: 902, type: !107)
!15792 = !DILocalVariable(name: "need_sched", scope: !15788, file: !2454, line: 904, type: !145)
!15793 = !DILocalVariable(name: "__i", scope: !15794, file: !2454, line: 906, type: !14452)
!15794 = distinct !DILexicalBlock(scope: !15788, file: !2454, line: 906, column: 2)
!15795 = !DILocalVariable(name: "__key", scope: !15794, file: !2454, line: 906, type: !14452)
!15796 = !DILocation(line: 0, scope: !15788)
!15797 = !DILocation(line: 0, scope: !15794)
!15798 = !DILocation(line: 0, scope: !14460, inlinedAt: !15799)
!15799 = distinct !DILocation(line: 906, column: 2, scope: !15794)
!15800 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !15801)
!15801 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !15799)
!15802 = !DILocation(line: 0, scope: !14469, inlinedAt: !15801)
!15803 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !15799)
!15804 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15799)
!15805 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !15799)
!15806 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !15799)
!15807 = !DILocation(line: 907, column: 16, scope: !15808)
!15808 = distinct !DILexicalBlock(scope: !15809, file: !2454, line: 906, column: 26)
!15809 = distinct !DILexicalBlock(scope: !15794, file: !2454, line: 906, column: 2)
!15810 = !DILocation(line: 909, column: 7, scope: !15808)
!15811 = !DILocation(line: 0, scope: !14652, inlinedAt: !15812)
!15812 = distinct !DILocation(line: 912, column: 5, scope: !15813)
!15813 = distinct !DILexicalBlock(scope: !15814, file: !2454, line: 911, column: 63)
!15814 = distinct !DILexicalBlock(scope: !15815, file: !2454, line: 911, column: 8)
!15815 = distinct !DILexicalBlock(scope: !15816, file: !2454, line: 909, column: 19)
!15816 = distinct !DILexicalBlock(scope: !15808, file: !2454, line: 909, column: 7)
!15817 = !DILocation(line: 266, column: 28, scope: !14652, inlinedAt: !15812)
!15818 = !DILocation(line: 0, scope: !14660, inlinedAt: !15819)
!15819 = distinct !DILocation(line: 268, column: 3, scope: !14664, inlinedAt: !15812)
!15820 = !DILocation(line: 234, column: 2, scope: !14660, inlinedAt: !15819)
!15821 = !DILocation(line: 913, column: 23, scope: !15813)
!15822 = !DILocation(line: 0, scope: !14669, inlinedAt: !15823)
!15823 = distinct !DILocation(line: 914, column: 5, scope: !15813)
!15824 = !DILocation(line: 252, column: 28, scope: !14669, inlinedAt: !15823)
!15825 = !DILocation(line: 0, scope: !14676, inlinedAt: !15826)
!15826 = distinct !DILocation(line: 254, column: 3, scope: !14680, inlinedAt: !15823)
!15827 = !DILocation(line: 0, scope: !14683, inlinedAt: !15828)
!15828 = distinct !DILocation(line: 229, column: 2, scope: !14676, inlinedAt: !15826)
!15829 = !DILocation(line: 186, column: 2, scope: !14693, inlinedAt: !15828)
!15830 = !DILocation(line: 186, column: 2, scope: !14694, inlinedAt: !15828)
!15831 = !DILocation(line: 186, column: 2, scope: !14697, inlinedAt: !15828)
!15832 = !DILocation(line: 188, column: 2, scope: !14699, inlinedAt: !15828)
!15833 = !DILocation(line: 188, column: 2, scope: !14701, inlinedAt: !15828)
!15834 = !DILocation(line: 0, scope: !14699, inlinedAt: !15828)
!15835 = !DILocation(line: 189, column: 7, scope: !14704, inlinedAt: !15828)
!15836 = !DILocation(line: 189, column: 35, scope: !14704, inlinedAt: !15828)
!15837 = !DILocation(line: 189, column: 7, scope: !14705, inlinedAt: !15828)
!15838 = !DILocation(line: 190, column: 4, scope: !14709, inlinedAt: !15828)
!15839 = !DILocation(line: 192, column: 4, scope: !14709, inlinedAt: !15828)
!15840 = distinct !{!15840, !15832, !15841}
!15841 = !DILocation(line: 194, column: 2, scope: !14699, inlinedAt: !15828)
!15842 = !DILocation(line: 196, column: 2, scope: !14683, inlinedAt: !15828)
!15843 = !DILocation(line: 197, column: 1, scope: !14683, inlinedAt: !15828)
!15844 = !DILocation(line: 918, column: 4, scope: !15815)
!15845 = !DILocation(line: 919, column: 3, scope: !15815)
!15846 = !DILocation(line: 920, column: 22, scope: !15847)
!15847 = distinct !DILexicalBlock(scope: !15816, file: !2454, line: 919, column: 10)
!15848 = !DILocation(line: 0, scope: !14494, inlinedAt: !15849)
!15849 = distinct !DILocation(line: 906, column: 2, scope: !15809)
!15850 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !15849)
!15851 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15849)
!15852 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !15849)
!15853 = !DILocation(line: 0, scope: !14508, inlinedAt: !15854)
!15854 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !15849)
!15855 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15854)
!15856 = !DILocation(line: 926, column: 2, scope: !15788)
!15857 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2454, file: !2454, line: 929, type: !15858, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15860)
!15858 = !DISubroutineType(types: !15859)
!15859 = !{null, !2346, !107}
!15860 = !{!15861, !15862, !15863}
!15861 = !DILocalVariable(name: "thread", arg: 1, scope: !15857, file: !2454, line: 929, type: !2346)
!15862 = !DILocalVariable(name: "prio", arg: 2, scope: !15857, file: !2454, line: 929, type: !107)
!15863 = !DILocalVariable(name: "need_sched", scope: !15857, file: !2454, line: 931, type: !145)
!15864 = !DILocation(line: 0, scope: !15857)
!15865 = !DILocation(line: 931, column: 20, scope: !15857)
!15866 = !DILocation(line: 935, column: 17, scope: !15867)
!15867 = distinct !DILexicalBlock(scope: !15857, file: !2454, line: 935, column: 6)
!15868 = !DILocation(line: 935, column: 20, scope: !15867)
!15869 = !DILocation(line: 935, column: 35, scope: !15867)
!15870 = !DILocation(line: 935, column: 48, scope: !15867)
!15871 = !DILocation(line: 935, column: 6, scope: !15857)
!15872 = !DILocation(line: 936, column: 3, scope: !15873)
!15873 = distinct !DILexicalBlock(scope: !15867, file: !2454, line: 935, column: 55)
!15874 = !DILocation(line: 937, column: 2, scope: !15873)
!15875 = !DILocation(line: 938, column: 1, scope: !15857)
!15876 = distinct !DISubprogram(name: "k_sched_lock", scope: !2454, file: !2454, line: 987, type: !3082, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15877)
!15877 = !{!15878, !15880}
!15878 = !DILocalVariable(name: "__i", scope: !15879, file: !2454, line: 989, type: !14452)
!15879 = distinct !DILexicalBlock(scope: !15876, file: !2454, line: 989, column: 2)
!15880 = !DILocalVariable(name: "__key", scope: !15879, file: !2454, line: 989, type: !14452)
!15881 = !DILocation(line: 0, scope: !15879)
!15882 = !DILocation(line: 0, scope: !14460, inlinedAt: !15883)
!15883 = distinct !DILocation(line: 989, column: 2, scope: !15879)
!15884 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !15885)
!15885 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !15883)
!15886 = !DILocation(line: 0, scope: !14469, inlinedAt: !15885)
!15887 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !15883)
!15888 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15883)
!15889 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !15883)
!15890 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !15883)
!15891 = !DILocation(line: 992, column: 3, scope: !15892)
!15892 = distinct !DILexicalBlock(scope: !15893, file: !2454, line: 989, column: 26)
!15893 = distinct !DILexicalBlock(scope: !15879, file: !2454, line: 989, column: 2)
!15894 = !DILocation(line: 0, scope: !14494, inlinedAt: !15895)
!15895 = distinct !DILocation(line: 989, column: 2, scope: !15893)
!15896 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !15895)
!15897 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15895)
!15898 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !15895)
!15899 = !DILocation(line: 0, scope: !14508, inlinedAt: !15900)
!15900 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !15895)
!15901 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15900)
!15902 = !DILocation(line: 994, column: 1, scope: !15876)
!15903 = distinct !DISubprogram(name: "z_sched_lock", scope: !13620, file: !13620, line: 251, type: !3082, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!15904 = !DILocation(line: 1031, column: 3, scope: !15187, inlinedAt: !15905)
!15905 = distinct !DILocation(line: 48, column: 10, scope: !15191, inlinedAt: !15906)
!15906 = distinct !DILocation(line: 253, column: 2, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !15908, file: !13620, line: 253, column: 2)
!15908 = distinct !DILexicalBlock(scope: !15903, file: !13620, line: 253, column: 2)
!15909 = !DILocation(line: 0, scope: !15187, inlinedAt: !15905)
!15910 = !DILocation(line: 48, column: 9, scope: !15191, inlinedAt: !15906)
!15911 = !DILocation(line: 253, column: 2, scope: !15908)
!15912 = !DILocation(line: 253, column: 2, scope: !15913)
!15913 = distinct !DILexicalBlock(scope: !15907, file: !13620, line: 253, column: 2)
!15914 = !DILocation(line: 254, column: 2, scope: !15915)
!15915 = distinct !DILexicalBlock(scope: !15916, file: !13620, line: 254, column: 2)
!15916 = distinct !DILexicalBlock(scope: !15903, file: !13620, line: 254, column: 2)
!15917 = !DILocation(line: 254, column: 2, scope: !15916)
!15918 = !DILocation(line: 254, column: 2, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15915, file: !13620, line: 254, column: 2)
!15920 = !DILocation(line: 256, column: 2, scope: !15903)
!15921 = !DILocation(line: 258, column: 2, scope: !15922)
!15922 = distinct !DILexicalBlock(scope: !15903, file: !13620, line: 258, column: 2)
!15923 = !{i64 2154877462}
!15924 = !DILocation(line: 259, column: 1, scope: !15903)
!15925 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2454, file: !2454, line: 996, type: !3082, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15926)
!15926 = !{!15927, !15929}
!15927 = !DILocalVariable(name: "__i", scope: !15928, file: !2454, line: 998, type: !14452)
!15928 = distinct !DILexicalBlock(scope: !15925, file: !2454, line: 998, column: 2)
!15929 = !DILocalVariable(name: "__key", scope: !15928, file: !2454, line: 998, type: !14452)
!15930 = !DILocation(line: 0, scope: !15928)
!15931 = !DILocation(line: 0, scope: !14460, inlinedAt: !15932)
!15932 = distinct !DILocation(line: 998, column: 2, scope: !15928)
!15933 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !15934)
!15934 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !15932)
!15935 = !DILocation(line: 0, scope: !14469, inlinedAt: !15934)
!15936 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !15932)
!15937 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !15932)
!15938 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !15932)
!15939 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !15932)
!15940 = !DILocation(line: 999, column: 3, scope: !15941)
!15941 = distinct !DILexicalBlock(scope: !15942, file: !2454, line: 999, column: 3)
!15942 = distinct !DILexicalBlock(scope: !15943, file: !2454, line: 999, column: 3)
!15943 = distinct !DILexicalBlock(scope: !15944, file: !2454, line: 998, column: 26)
!15944 = distinct !DILexicalBlock(scope: !15928, file: !2454, line: 998, column: 2)
!15945 = !DILocation(line: 999, column: 3, scope: !15942)
!15946 = !DILocation(line: 999, column: 3, scope: !15947)
!15947 = distinct !DILexicalBlock(scope: !15941, file: !2454, line: 999, column: 3)
!15948 = !DILocation(line: 1031, column: 3, scope: !15187, inlinedAt: !15949)
!15949 = distinct !DILocation(line: 48, column: 10, scope: !15191, inlinedAt: !15950)
!15950 = distinct !DILocation(line: 1000, column: 3, scope: !15951)
!15951 = distinct !DILexicalBlock(scope: !15952, file: !2454, line: 1000, column: 3)
!15952 = distinct !DILexicalBlock(scope: !15943, file: !2454, line: 1000, column: 3)
!15953 = !DILocation(line: 0, scope: !15187, inlinedAt: !15949)
!15954 = !DILocation(line: 48, column: 9, scope: !15191, inlinedAt: !15950)
!15955 = !DILocation(line: 1000, column: 3, scope: !15952)
!15956 = !DILocation(line: 1000, column: 3, scope: !15957)
!15957 = distinct !DILexicalBlock(scope: !15951, file: !2454, line: 1000, column: 3)
!15958 = !DILocation(line: 1002, column: 5, scope: !15943)
!15959 = !DILocation(line: 1002, column: 20, scope: !15943)
!15960 = !DILocation(line: 1002, column: 3, scope: !15943)
!15961 = !DILocation(line: 1003, column: 3, scope: !15943)
!15962 = !DILocation(line: 0, scope: !14494, inlinedAt: !15963)
!15963 = distinct !DILocation(line: 998, column: 2, scope: !15944)
!15964 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !15963)
!15965 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !15963)
!15966 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !15963)
!15967 = !DILocation(line: 0, scope: !14508, inlinedAt: !15968)
!15968 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !15963)
!15969 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !15968)
!15970 = !DILocation(line: 1011, column: 2, scope: !15925)
!15971 = !DILocation(line: 1012, column: 1, scope: !15925)
!15972 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2454, file: !2454, line: 1014, type: !14809, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!15973 = !DILocation(line: 1028, column: 25, scope: !15972)
!15974 = !DILocation(line: 1028, column: 2, scope: !15972)
!15975 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2454, file: !2454, line: 1155, type: !15976, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15978)
!15976 = !DISubroutineType(types: !15977)
!15977 = !{!145, !2375, !2375}
!15978 = !{!15979, !15980, !15981, !15982, !15983}
!15979 = !DILocalVariable(name: "a", arg: 1, scope: !15975, file: !2454, line: 1155, type: !2375)
!15980 = !DILocalVariable(name: "b", arg: 2, scope: !15975, file: !2454, line: 1155, type: !2375)
!15981 = !DILocalVariable(name: "thread_a", scope: !15975, file: !2454, line: 1157, type: !2346)
!15982 = !DILocalVariable(name: "thread_b", scope: !15975, file: !2454, line: 1157, type: !2346)
!15983 = !DILocalVariable(name: "cmp", scope: !15975, file: !2454, line: 1158, type: !895)
!15984 = !DILocation(line: 0, scope: !15975)
!15985 = !DILocation(line: 1160, column: 13, scope: !15975)
!15986 = !DILocation(line: 1161, column: 13, scope: !15975)
!15987 = !DILocation(line: 1163, column: 8, scope: !15975)
!15988 = !DILocation(line: 1165, column: 10, scope: !15989)
!15989 = distinct !DILexicalBlock(scope: !15975, file: !2454, line: 1165, column: 6)
!15990 = !DILocation(line: 1165, column: 6, scope: !15975)
!15991 = !DILocation(line: 1167, column: 17, scope: !15992)
!15992 = distinct !DILexicalBlock(scope: !15989, file: !2454, line: 1167, column: 13)
!15993 = !DILocation(line: 1167, column: 13, scope: !15989)
!15994 = !DILocation(line: 1170, column: 25, scope: !15995)
!15995 = distinct !DILexicalBlock(scope: !15992, file: !2454, line: 1169, column: 9)
!15996 = !DILocation(line: 1170, column: 52, scope: !15995)
!15997 = !DILocation(line: 1170, column: 35, scope: !15995)
!15998 = !DILocation(line: 1170, column: 3, scope: !15995)
!15999 = !DILocation(line: 0, scope: !15989)
!16000 = !DILocation(line: 1173, column: 1, scope: !15975)
!16001 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2454, file: !2454, line: 1175, type: !16002, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16017)
!16002 = !DISubroutineType(types: !16003)
!16003 = !{null, !16004, !2346}
!16004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16005, size: 32)
!16005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16006, line: 37, size: 128, elements: !16007)
!16006 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16007 = !{!16008, !16016}
!16008 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16005, file: !16006, line: 38, baseType: !16009, size: 96)
!16009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !335, line: 83, size: 96, elements: !16010)
!16010 = !{!16011, !16012, !16015}
!16011 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16009, file: !335, line: 84, baseType: !2375, size: 32)
!16012 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16009, file: !335, line: 85, baseType: !16013, size: 32, offset: 32)
!16013 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !335, line: 81, baseType: !16014)
!16014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15976, size: 32)
!16015 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16009, file: !335, line: 86, baseType: !107, size: 32, offset: 64)
!16016 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16005, file: !16006, line: 39, baseType: !107, size: 32, offset: 96)
!16017 = !{!16018, !16019, !16020, !16021, !16030}
!16018 = !DILocalVariable(name: "pq", arg: 1, scope: !16001, file: !2454, line: 1175, type: !16004)
!16019 = !DILocalVariable(name: "thread", arg: 2, scope: !16001, file: !2454, line: 1175, type: !2346)
!16020 = !DILocalVariable(name: "t", scope: !16001, file: !2454, line: 1177, type: !2346)
!16021 = !DILocalVariable(name: "__f", scope: !16022, file: !2454, line: 1190, type: !16025)
!16022 = distinct !DILexicalBlock(scope: !16023, file: !2454, line: 1190, column: 3)
!16023 = distinct !DILexicalBlock(scope: !16024, file: !2454, line: 1189, column: 27)
!16024 = distinct !DILexicalBlock(scope: !16001, file: !2454, line: 1189, column: 6)
!16025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !335, line: 155, size: 96, elements: !16026)
!16026 = !{!16027, !16028, !16029}
!16027 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16025, file: !335, line: 156, baseType: !2449, size: 32)
!16028 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16025, file: !335, line: 157, baseType: !194, size: 32, offset: 32)
!16029 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16025, file: !335, line: 158, baseType: !895, size: 32, offset: 64)
!16030 = !DILocalVariable(name: "n", scope: !16031, file: !2454, line: 1190, type: !2375)
!16031 = distinct !DILexicalBlock(scope: !16032, file: !2454, line: 1190, column: 3)
!16032 = distinct !DILexicalBlock(scope: !16022, file: !2454, line: 1190, column: 3)
!16033 = !DILocation(line: 0, scope: !16001)
!16034 = !DILocation(line: 1179, column: 2, scope: !16035)
!16035 = distinct !DILexicalBlock(scope: !16036, file: !2454, line: 1179, column: 2)
!16036 = distinct !DILexicalBlock(scope: !16001, file: !2454, line: 1179, column: 2)
!16037 = !DILocation(line: 1179, column: 2, scope: !16036)
!16038 = !DILocation(line: 1179, column: 2, scope: !16039)
!16039 = distinct !DILexicalBlock(scope: !16035, file: !2454, line: 1179, column: 2)
!16040 = !DILocation(line: 1181, column: 31, scope: !16001)
!16041 = !DILocation(line: 1181, column: 45, scope: !16001)
!16042 = !DILocation(line: 1181, column: 15, scope: !16001)
!16043 = !DILocation(line: 1181, column: 25, scope: !16001)
!16044 = !DILocation(line: 1189, column: 11, scope: !16024)
!16045 = !DILocation(line: 1189, column: 7, scope: !16024)
!16046 = !DILocation(line: 1189, column: 6, scope: !16001)
!16047 = !DILocation(line: 1190, column: 3, scope: !16022)
!16048 = !DILocation(line: 1190, column: 3, scope: !16031)
!16049 = !DILocation(line: 0, scope: !16031)
!16050 = !DILocation(line: 1190, column: 3, scope: !16032)
!16051 = !DILocation(line: 1193, column: 2, scope: !16023)
!16052 = !DILocation(line: 1191, column: 42, scope: !16053)
!16053 = distinct !DILexicalBlock(scope: !16032, file: !2454, line: 1190, column: 54)
!16054 = !DILocation(line: 1191, column: 12, scope: !16053)
!16055 = !DILocation(line: 1191, column: 22, scope: !16053)
!16056 = distinct !{!16056, !16047, !16057}
!16057 = !DILocation(line: 1192, column: 3, scope: !16022)
!16058 = !DILocation(line: 1195, column: 17, scope: !16001)
!16059 = !DILocation(line: 1195, column: 37, scope: !16001)
!16060 = !DILocation(line: 1195, column: 2, scope: !16001)
!16061 = !DILocation(line: 1196, column: 1, scope: !16001)
!16062 = !DISubprogram(name: "z_rb_foreach_next", scope: !335, file: !335, line: 176, type: !16063, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!16063 = !DISubroutineType(types: !16064)
!16064 = !{!2375, !16065, !16066}
!16065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16009, size: 32)
!16066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16025, size: 32)
!16067 = !DISubprogram(name: "rb_insert", scope: !335, file: !335, line: 105, type: !16068, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!16068 = !DISubroutineType(types: !16069)
!16069 = !{null, !16065, !2375}
!16070 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2454, file: !2454, line: 1198, type: !16002, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16071)
!16071 = !{!16072, !16073}
!16072 = !DILocalVariable(name: "pq", arg: 1, scope: !16070, file: !2454, line: 1198, type: !16004)
!16073 = !DILocalVariable(name: "thread", arg: 2, scope: !16070, file: !2454, line: 1198, type: !2346)
!16074 = !DILocation(line: 0, scope: !16070)
!16075 = !DILocation(line: 1200, column: 2, scope: !16076)
!16076 = distinct !DILexicalBlock(scope: !16077, file: !2454, line: 1200, column: 2)
!16077 = distinct !DILexicalBlock(scope: !16070, file: !2454, line: 1200, column: 2)
!16078 = !DILocation(line: 1200, column: 2, scope: !16077)
!16079 = !DILocation(line: 1200, column: 2, scope: !16080)
!16080 = distinct !DILexicalBlock(scope: !16076, file: !2454, line: 1200, column: 2)
!16081 = !DILocation(line: 1202, column: 17, scope: !16070)
!16082 = !DILocation(line: 1202, column: 37, scope: !16070)
!16083 = !DILocation(line: 1202, column: 2, scope: !16070)
!16084 = !DILocation(line: 1204, column: 16, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !16070, file: !2454, line: 1204, column: 6)
!16086 = !DILocation(line: 1204, column: 7, scope: !16085)
!16087 = !DILocation(line: 1204, column: 6, scope: !16070)
!16088 = !DILocation(line: 1205, column: 7, scope: !16089)
!16089 = distinct !DILexicalBlock(scope: !16085, file: !2454, line: 1204, column: 22)
!16090 = !DILocation(line: 1205, column: 22, scope: !16089)
!16091 = !DILocation(line: 1206, column: 2, scope: !16089)
!16092 = !DILocation(line: 1207, column: 1, scope: !16070)
!16093 = !DISubprogram(name: "rb_remove", scope: !335, file: !335, line: 110, type: !16068, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!16094 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2454, file: !2454, line: 1209, type: !16095, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16097)
!16095 = !DISubroutineType(types: !16096)
!16096 = !{!2346, !16004}
!16097 = !{!16098, !16099, !16100}
!16098 = !DILocalVariable(name: "pq", arg: 1, scope: !16094, file: !2454, line: 1209, type: !16004)
!16099 = !DILocalVariable(name: "thread", scope: !16094, file: !2454, line: 1211, type: !2346)
!16100 = !DILocalVariable(name: "n", scope: !16094, file: !2454, line: 1212, type: !2375)
!16101 = !DILocation(line: 0, scope: !16094)
!16102 = !DILocation(line: 1212, column: 37, scope: !16094)
!16103 = !DILocation(line: 1212, column: 21, scope: !16094)
!16104 = !DILocation(line: 1217, column: 2, scope: !16094)
!16105 = distinct !DISubprogram(name: "rb_get_min", scope: !335, file: !335, line: 115, type: !16106, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16108)
!16106 = !DISubroutineType(types: !16107)
!16107 = !{!2375, !16065}
!16108 = !{!16109}
!16109 = !DILocalVariable(name: "tree", arg: 1, scope: !16105, file: !335, line: 115, type: !16065)
!16110 = !DILocation(line: 0, scope: !16105)
!16111 = !DILocation(line: 117, column: 9, scope: !16105)
!16112 = !DILocation(line: 117, column: 2, scope: !16105)
!16113 = !DISubprogram(name: "z_rb_get_minmax", scope: !335, file: !335, line: 100, type: !16114, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2156)
!16114 = !DISubroutineType(types: !16115)
!16115 = !{!2375, !16065, !195}
!16116 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2454, file: !2454, line: 1246, type: !16117, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16125)
!16117 = !DISubroutineType(types: !16118)
!16118 = !{!2346, !16119}
!16119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16120, size: 32)
!16120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16006, line: 53, size: 2080, elements: !16121)
!16121 = !{!16122, !16124}
!16122 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16120, file: !16006, line: 54, baseType: !16123, size: 2048)
!16123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2382, size: 2048, elements: !394)
!16124 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16120, file: !16006, line: 55, baseType: !32, size: 32, offset: 2048)
!16125 = !{!16126, !16127, !16128, !16129}
!16126 = !DILocalVariable(name: "pq", arg: 1, scope: !16116, file: !2454, line: 1246, type: !16119)
!16127 = !DILocalVariable(name: "thread", scope: !16116, file: !2454, line: 1252, type: !2346)
!16128 = !DILocalVariable(name: "l", scope: !16116, file: !2454, line: 1253, type: !14686)
!16129 = !DILocalVariable(name: "n", scope: !16116, file: !2454, line: 1254, type: !2450)
!16130 = !DILocation(line: 0, scope: !16116)
!16131 = !DILocation(line: 1248, column: 11, scope: !16132)
!16132 = distinct !DILexicalBlock(scope: !16116, file: !2454, line: 1248, column: 6)
!16133 = !DILocation(line: 1248, column: 7, scope: !16132)
!16134 = !DILocation(line: 1248, column: 6, scope: !16116)
!16135 = !DILocation(line: 1253, column: 31, scope: !16116)
!16136 = !DILocation(line: 1253, column: 20, scope: !16116)
!16137 = !DILocation(line: 1254, column: 19, scope: !16116)
!16138 = !DILocation(line: 1260, column: 1, scope: !16116)
!16139 = distinct !DISubprogram(name: "z_unpend_all", scope: !2454, file: !2454, line: 1262, type: !16140, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16142)
!16140 = !DISubroutineType(types: !16141)
!16141 = !{!107, !2377}
!16142 = !{!16143, !16144, !16145}
!16143 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16139, file: !2454, line: 1262, type: !2377)
!16144 = !DILocalVariable(name: "need_sched", scope: !16139, file: !2454, line: 1264, type: !107)
!16145 = !DILocalVariable(name: "thread", scope: !16139, file: !2454, line: 1265, type: !2346)
!16146 = !DILocation(line: 0, scope: !16139)
!16147 = !DILocation(line: 1267, column: 19, scope: !16139)
!16148 = !DILocation(line: 1267, column: 41, scope: !16139)
!16149 = !DILocation(line: 1267, column: 2, scope: !16139)
!16150 = !DILocation(line: 1268, column: 3, scope: !16151)
!16151 = distinct !DILexicalBlock(scope: !16139, file: !2454, line: 1267, column: 50)
!16152 = !DILocation(line: 1269, column: 3, scope: !16151)
!16153 = distinct !{!16153, !16149, !16154}
!16154 = !DILocation(line: 1271, column: 2, scope: !16139)
!16155 = !DILocation(line: 1273, column: 2, scope: !16139)
!16156 = distinct !DISubprogram(name: "z_waitq_head", scope: !13981, file: !13981, line: 52, type: !15687, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16157)
!16157 = !{!16158}
!16158 = !DILocalVariable(name: "w", arg: 1, scope: !16156, file: !13981, line: 52, type: !2377)
!16159 = !DILocation(line: 0, scope: !16156)
!16160 = !DILocation(line: 54, column: 52, scope: !16156)
!16161 = !DILocation(line: 54, column: 28, scope: !16156)
!16162 = !DILocation(line: 54, column: 9, scope: !16156)
!16163 = !DILocation(line: 54, column: 2, scope: !16156)
!16164 = distinct !DISubprogram(name: "init_ready_q", scope: !2454, file: !2454, line: 1276, type: !16165, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16172)
!16165 = !DISubroutineType(types: !16166)
!16166 = !{null, !16167}
!16167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16168, size: 32)
!16168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !16169)
!16169 = !{!16170, !16171}
!16170 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16168, file: !345, line: 86, baseType: !2346, size: 32)
!16171 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16168, file: !345, line: 90, baseType: !2382, size: 64, offset: 32)
!16172 = !{!16173}
!16173 = !DILocalVariable(name: "rq", arg: 1, scope: !16164, file: !2454, line: 1276, type: !16167)
!16174 = !DILocation(line: 0, scope: !16164)
!16175 = !DILocation(line: 1289, column: 22, scope: !16164)
!16176 = !DILocation(line: 1289, column: 2, scope: !16164)
!16177 = !DILocation(line: 1291, column: 1, scope: !16164)
!16178 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !16179, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16181)
!16179 = !DISubroutineType(types: !16180)
!16180 = !{null, !14686}
!16181 = !{!16182}
!16182 = !DILocalVariable(name: "list", arg: 1, scope: !16178, file: !319, line: 197, type: !14686)
!16183 = !DILocation(line: 0, scope: !16178)
!16184 = !DILocation(line: 199, column: 8, scope: !16178)
!16185 = !DILocation(line: 199, column: 13, scope: !16178)
!16186 = !DILocation(line: 200, column: 8, scope: !16178)
!16187 = !DILocation(line: 200, column: 13, scope: !16178)
!16188 = !DILocation(line: 201, column: 1, scope: !16178)
!16189 = distinct !DISubprogram(name: "z_sched_init", scope: !2454, file: !2454, line: 1293, type: !3082, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!16190 = !DILocation(line: 1302, column: 2, scope: !16189)
!16191 = !DILocation(line: 1306, column: 2, scope: !16189)
!16192 = !DILocation(line: 1309, column: 1, scope: !16189)
!16193 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2454, file: !2454, line: 1311, type: !16194, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16197)
!16194 = !DISubroutineType(types: !16195)
!16195 = !{!107, !16196}
!16196 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2346)
!16197 = !{!16198}
!16198 = !DILocalVariable(name: "thread", arg: 1, scope: !16193, file: !2454, line: 1311, type: !16196)
!16199 = !DILocation(line: 0, scope: !16193)
!16200 = !DILocation(line: 1313, column: 22, scope: !16193)
!16201 = !DILocation(line: 1313, column: 9, scope: !16193)
!16202 = !DILocation(line: 1313, column: 2, scope: !16193)
!16203 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2454, file: !2454, line: 1325, type: !16204, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16206)
!16204 = !DISubroutineType(types: !16205)
!16205 = !{null, !16196, !107}
!16206 = !{!16207, !16208, !16209}
!16207 = !DILocalVariable(name: "thread", arg: 1, scope: !16203, file: !2454, line: 1325, type: !16196)
!16208 = !DILocalVariable(name: "prio", arg: 2, scope: !16203, file: !2454, line: 1325, type: !107)
!16209 = !DILocalVariable(name: "th", scope: !16203, file: !2454, line: 1334, type: !2346)
!16210 = !DILocation(line: 0, scope: !16203)
!16211 = !DILocation(line: 1331, column: 2, scope: !16212)
!16212 = distinct !DILexicalBlock(scope: !16213, file: !2454, line: 1331, column: 2)
!16213 = distinct !DILexicalBlock(scope: !16214, file: !2454, line: 1331, column: 2)
!16214 = distinct !DILexicalBlock(scope: !16203, file: !2454, line: 1331, column: 2)
!16215 = !DILocation(line: 1331, column: 2, scope: !16216)
!16216 = distinct !DILexicalBlock(scope: !16212, file: !2454, line: 1331, column: 2)
!16217 = !DILocation(line: 1031, column: 3, scope: !15187, inlinedAt: !16218)
!16218 = distinct !DILocation(line: 48, column: 10, scope: !15191, inlinedAt: !16219)
!16219 = distinct !DILocation(line: 1332, column: 2, scope: !16220)
!16220 = distinct !DILexicalBlock(scope: !16221, file: !2454, line: 1332, column: 2)
!16221 = distinct !DILexicalBlock(scope: !16203, file: !2454, line: 1332, column: 2)
!16222 = !DILocation(line: 0, scope: !15187, inlinedAt: !16218)
!16223 = !DILocation(line: 48, column: 9, scope: !15191, inlinedAt: !16219)
!16224 = !DILocation(line: 1332, column: 2, scope: !16221)
!16225 = !DILocation(line: 1332, column: 2, scope: !16226)
!16226 = distinct !DILexicalBlock(scope: !16220, file: !2454, line: 1332, column: 2)
!16227 = !DILocation(line: 1336, column: 2, scope: !16203)
!16228 = !DILocation(line: 1337, column: 1, scope: !16203)
!16229 = distinct !DISubprogram(name: "k_can_yield", scope: !2454, file: !2454, line: 1384, type: !7310, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!16230 = !DILocation(line: 1386, column: 11, scope: !16229)
!16231 = !DILocation(line: 1386, column: 29, scope: !16229)
!16232 = !DILocation(line: 1386, column: 32, scope: !16229)
!16233 = !DILocation(line: 1386, column: 46, scope: !16229)
!16234 = !DILocation(line: 1387, column: 28, scope: !16229)
!16235 = !DILocation(line: 1387, column: 4, scope: !16229)
!16236 = !DILocation(line: 1386, column: 2, scope: !16229)
!16237 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !406, file: !406, line: 989, type: !7310, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!16238 = !DILocation(line: 993, column: 10, scope: !16237)
!16239 = !DILocation(line: 993, column: 2, scope: !16237)
!16240 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2454, file: !2454, line: 1390, type: !3082, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16241)
!16241 = !{!16242}
!16242 = !DILocalVariable(name: "key", scope: !16240, file: !2454, line: 1396, type: !14452)
!16243 = !DILocation(line: 1031, column: 3, scope: !15187, inlinedAt: !16244)
!16244 = distinct !DILocation(line: 48, column: 10, scope: !15191, inlinedAt: !16245)
!16245 = distinct !DILocation(line: 1392, column: 2, scope: !16246)
!16246 = distinct !DILexicalBlock(scope: !16247, file: !2454, line: 1392, column: 2)
!16247 = distinct !DILexicalBlock(scope: !16240, file: !2454, line: 1392, column: 2)
!16248 = !DILocation(line: 0, scope: !15187, inlinedAt: !16244)
!16249 = !DILocation(line: 48, column: 9, scope: !15191, inlinedAt: !16245)
!16250 = !DILocation(line: 1392, column: 2, scope: !16247)
!16251 = !DILocation(line: 1392, column: 2, scope: !16252)
!16252 = distinct !DILexicalBlock(scope: !16246, file: !2454, line: 1392, column: 2)
!16253 = !DILocation(line: 0, scope: !14460, inlinedAt: !16254)
!16254 = distinct !DILocation(line: 1396, column: 25, scope: !16240)
!16255 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !16256)
!16256 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !16254)
!16257 = !DILocation(line: 0, scope: !14469, inlinedAt: !16256)
!16258 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !16254)
!16259 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !16254)
!16260 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !16254)
!16261 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !16254)
!16262 = !DILocation(line: 0, scope: !16240)
!16263 = !DILocation(line: 1400, column: 18, scope: !16264)
!16264 = distinct !DILexicalBlock(scope: !16265, file: !2454, line: 1399, column: 36)
!16265 = distinct !DILexicalBlock(scope: !16240, file: !2454, line: 1398, column: 6)
!16266 = !DILocation(line: 0, scope: !14652, inlinedAt: !16267)
!16267 = distinct !DILocation(line: 1400, column: 3, scope: !16264)
!16268 = !DILocation(line: 266, column: 15, scope: !14652, inlinedAt: !16267)
!16269 = !DILocation(line: 266, column: 28, scope: !14652, inlinedAt: !16267)
!16270 = !DILocation(line: 0, scope: !14660, inlinedAt: !16271)
!16271 = distinct !DILocation(line: 268, column: 3, scope: !14664, inlinedAt: !16267)
!16272 = !DILocation(line: 234, column: 2, scope: !14660, inlinedAt: !16271)
!16273 = !DILocation(line: 1402, column: 15, scope: !16240)
!16274 = !DILocation(line: 0, scope: !14669, inlinedAt: !16275)
!16275 = distinct !DILocation(line: 1402, column: 2, scope: !16240)
!16276 = !DILocation(line: 252, column: 15, scope: !14669, inlinedAt: !16275)
!16277 = !DILocation(line: 252, column: 28, scope: !14669, inlinedAt: !16275)
!16278 = !DILocation(line: 0, scope: !14676, inlinedAt: !16279)
!16279 = distinct !DILocation(line: 254, column: 3, scope: !14680, inlinedAt: !16275)
!16280 = !DILocation(line: 0, scope: !14683, inlinedAt: !16281)
!16281 = distinct !DILocation(line: 229, column: 2, scope: !14676, inlinedAt: !16279)
!16282 = !DILocation(line: 186, column: 2, scope: !14693, inlinedAt: !16281)
!16283 = !DILocation(line: 186, column: 2, scope: !14694, inlinedAt: !16281)
!16284 = !DILocation(line: 186, column: 2, scope: !14697, inlinedAt: !16281)
!16285 = !DILocation(line: 188, column: 2, scope: !14699, inlinedAt: !16281)
!16286 = !DILocation(line: 188, column: 2, scope: !14701, inlinedAt: !16281)
!16287 = !DILocation(line: 0, scope: !14699, inlinedAt: !16281)
!16288 = !DILocation(line: 189, column: 7, scope: !14704, inlinedAt: !16281)
!16289 = !DILocation(line: 189, column: 35, scope: !14704, inlinedAt: !16281)
!16290 = !DILocation(line: 189, column: 7, scope: !14705, inlinedAt: !16281)
!16291 = !DILocation(line: 191, column: 21, scope: !14709, inlinedAt: !16281)
!16292 = !DILocation(line: 190, column: 4, scope: !14709, inlinedAt: !16281)
!16293 = !DILocation(line: 192, column: 4, scope: !14709, inlinedAt: !16281)
!16294 = distinct !{!16294, !16285, !16295}
!16295 = !DILocation(line: 194, column: 2, scope: !14699, inlinedAt: !16281)
!16296 = !DILocation(line: 196, column: 37, scope: !14683, inlinedAt: !16281)
!16297 = !DILocation(line: 196, column: 2, scope: !14683, inlinedAt: !16281)
!16298 = !DILocation(line: 197, column: 1, scope: !14683, inlinedAt: !16281)
!16299 = !DILocation(line: 1403, column: 2, scope: !16240)
!16300 = !DILocation(line: 0, scope: !15138, inlinedAt: !16301)
!16301 = distinct !DILocation(line: 1404, column: 2, scope: !16240)
!16302 = !DILocation(line: 0, scope: !15147, inlinedAt: !16303)
!16303 = distinct !DILocation(line: 195, column: 2, scope: !15138, inlinedAt: !16301)
!16304 = !DILocation(line: 225, column: 2, scope: !15154, inlinedAt: !16303)
!16305 = !DILocation(line: 225, column: 2, scope: !15155, inlinedAt: !16303)
!16306 = !DILocation(line: 225, column: 2, scope: !15158, inlinedAt: !16303)
!16307 = !DILocation(line: 196, column: 9, scope: !15138, inlinedAt: !16301)
!16308 = !DILocation(line: 1405, column: 1, scope: !16240)
!16309 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2454, file: !2454, line: 1459, type: !16310, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16312)
!16310 = !DISubroutineType(types: !16311)
!16311 = !{!895, !15348}
!16312 = !{!16313, !16314, !16315}
!16313 = !DILocalVariable(name: "timeout", arg: 1, scope: !16309, file: !2454, line: 1459, type: !15348)
!16314 = !DILocalVariable(name: "ticks", scope: !16309, file: !2454, line: 1461, type: !564)
!16315 = !DILocalVariable(name: "ret", scope: !16309, file: !2454, line: 1480, type: !895)
!16316 = !DILocation(line: 0, scope: !16309)
!16317 = !DILocation(line: 1031, column: 3, scope: !15187, inlinedAt: !16318)
!16318 = distinct !DILocation(line: 48, column: 10, scope: !15191, inlinedAt: !16319)
!16319 = distinct !DILocation(line: 1463, column: 2, scope: !16320)
!16320 = distinct !DILexicalBlock(scope: !16321, file: !2454, line: 1463, column: 2)
!16321 = distinct !DILexicalBlock(scope: !16309, file: !2454, line: 1463, column: 2)
!16322 = !DILocation(line: 0, scope: !15187, inlinedAt: !16318)
!16323 = !DILocation(line: 48, column: 9, scope: !15191, inlinedAt: !16319)
!16324 = !DILocation(line: 1463, column: 2, scope: !16321)
!16325 = !DILocation(line: 1463, column: 2, scope: !16326)
!16326 = distinct !DILexicalBlock(scope: !16320, file: !2454, line: 1463, column: 2)
!16327 = !DILocation(line: 1468, column: 6, scope: !16328)
!16328 = distinct !DILexicalBlock(scope: !16309, file: !2454, line: 1468, column: 6)
!16329 = !DILocation(line: 1468, column: 6, scope: !16309)
!16330 = !DILocation(line: 1469, column: 20, scope: !16331)
!16331 = distinct !DILexicalBlock(scope: !16328, file: !2454, line: 1468, column: 40)
!16332 = !DILocation(line: 1469, column: 3, scope: !16331)
!16333 = !DILocation(line: 1473, column: 3, scope: !16331)
!16334 = !DILocation(line: 1478, column: 10, scope: !16309)
!16335 = !DILocation(line: 1480, column: 16, scope: !16309)
!16336 = !DILocation(line: 1485, column: 1, scope: !16309)
!16337 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4413, file: !4413, line: 310, type: !16338, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16340)
!16338 = !DISubroutineType(types: !16339)
!16339 = !{null, !16196}
!16340 = !{!16341}
!16341 = !DILocalVariable(name: "thread", arg: 1, scope: !16337, file: !4413, line: 310, type: !16196)
!16342 = !DILocation(line: 0, scope: !16337)
!16343 = !DILocation(line: 319, column: 2, scope: !16344)
!16344 = distinct !DILexicalBlock(scope: !16337, file: !4413, line: 319, column: 2)
!16345 = !{i64 2154793620}
!16346 = !DILocation(line: 320, column: 2, scope: !16337)
!16347 = !DILocation(line: 321, column: 1, scope: !16337)
!16348 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2454, file: !2454, line: 1415, type: !16349, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16351)
!16349 = !DISubroutineType(types: !16350)
!16350 = !{!895, !564}
!16351 = !{!16352, !16353, !16354, !16355}
!16352 = !DILocalVariable(name: "ticks", arg: 1, scope: !16348, file: !2454, line: 1415, type: !564)
!16353 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16348, file: !2454, line: 1418, type: !152)
!16354 = !DILocalVariable(name: "timeout", scope: !16348, file: !2454, line: 1430, type: !15348)
!16355 = !DILocalVariable(name: "key", scope: !16348, file: !2454, line: 1437, type: !14452)
!16356 = !DILocation(line: 0, scope: !16348)
!16357 = !DILocation(line: 1031, column: 3, scope: !15187, inlinedAt: !16358)
!16358 = distinct !DILocation(line: 48, column: 10, scope: !15191, inlinedAt: !16359)
!16359 = distinct !DILocation(line: 1420, column: 2, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16361, file: !2454, line: 1420, column: 2)
!16361 = distinct !DILexicalBlock(scope: !16348, file: !2454, line: 1420, column: 2)
!16362 = !DILocation(line: 0, scope: !15187, inlinedAt: !16358)
!16363 = !DILocation(line: 48, column: 9, scope: !15191, inlinedAt: !16359)
!16364 = !DILocation(line: 1420, column: 2, scope: !16361)
!16365 = !DILocation(line: 1420, column: 2, scope: !16366)
!16366 = distinct !DILexicalBlock(scope: !16360, file: !2454, line: 1420, column: 2)
!16367 = !DILocation(line: 1425, column: 12, scope: !16368)
!16368 = distinct !DILexicalBlock(scope: !16348, file: !2454, line: 1425, column: 6)
!16369 = !DILocation(line: 1425, column: 6, scope: !16348)
!16370 = !DILocation(line: 1426, column: 3, scope: !16371)
!16371 = distinct !DILexicalBlock(scope: !16368, file: !2454, line: 1425, column: 18)
!16372 = !DILocation(line: 1427, column: 3, scope: !16371)
!16373 = !DILocation(line: 1431, column: 24, scope: !16374)
!16374 = distinct !DILexicalBlock(scope: !16348, file: !2454, line: 1431, column: 6)
!16375 = !DILocation(line: 1431, column: 6, scope: !16348)
!16376 = !DILocation(line: 1432, column: 35, scope: !16377)
!16377 = distinct !DILexicalBlock(scope: !16374, file: !2454, line: 1431, column: 30)
!16378 = !DILocation(line: 1432, column: 27, scope: !16377)
!16379 = !DILocation(line: 1433, column: 2, scope: !16377)
!16380 = !DILocation(line: 1434, column: 27, scope: !16381)
!16381 = distinct !DILexicalBlock(scope: !16374, file: !2454, line: 1433, column: 9)
!16382 = !DILocation(line: 0, scope: !16374)
!16383 = !DILocation(line: 0, scope: !14460, inlinedAt: !16384)
!16384 = distinct !DILocation(line: 1437, column: 25, scope: !16348)
!16385 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !16386)
!16386 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !16384)
!16387 = !DILocation(line: 0, scope: !14469, inlinedAt: !16386)
!16388 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !16384)
!16389 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !16384)
!16390 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !16384)
!16391 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !16384)
!16392 = !DILocation(line: 1440, column: 20, scope: !16348)
!16393 = !DILocation(line: 1440, column: 18, scope: !16348)
!16394 = !DILocation(line: 1442, column: 2, scope: !16348)
!16395 = !DILocation(line: 1443, column: 23, scope: !16348)
!16396 = !DILocation(line: 1443, column: 2, scope: !16348)
!16397 = !DILocation(line: 1444, column: 29, scope: !16348)
!16398 = !DILocation(line: 1444, column: 2, scope: !16348)
!16399 = !DILocation(line: 0, scope: !15138, inlinedAt: !16400)
!16400 = distinct !DILocation(line: 1446, column: 8, scope: !16348)
!16401 = !DILocation(line: 0, scope: !15147, inlinedAt: !16402)
!16402 = distinct !DILocation(line: 195, column: 2, scope: !15138, inlinedAt: !16400)
!16403 = !DILocation(line: 225, column: 2, scope: !15154, inlinedAt: !16402)
!16404 = !DILocation(line: 225, column: 2, scope: !15155, inlinedAt: !16402)
!16405 = !DILocation(line: 225, column: 2, scope: !15158, inlinedAt: !16402)
!16406 = !DILocation(line: 196, column: 9, scope: !15138, inlinedAt: !16400)
!16407 = !DILocation(line: 1448, column: 2, scope: !16408)
!16408 = distinct !DILexicalBlock(scope: !16409, file: !2454, line: 1448, column: 2)
!16409 = distinct !DILexicalBlock(scope: !16348, file: !2454, line: 1448, column: 2)
!16410 = !DILocation(line: 1448, column: 2, scope: !16409)
!16411 = !DILocation(line: 1448, column: 2, scope: !16412)
!16412 = distinct !DILexicalBlock(scope: !16408, file: !2454, line: 1448, column: 2)
!16413 = !DILocation(line: 1450, column: 10, scope: !16348)
!16414 = !DILocation(line: 1450, column: 45, scope: !16348)
!16415 = !DILocation(line: 1450, column: 43, scope: !16348)
!16416 = !DILocation(line: 1451, column: 6, scope: !16348)
!16417 = !DILocation(line: 1457, column: 1, scope: !16348)
!16418 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !8725, file: !8725, line: 1103, type: !14239, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16419)
!16419 = !{!16420}
!16420 = !DILocalVariable(name: "t", arg: 1, scope: !16418, file: !8725, line: 1103, type: !566)
!16421 = !DILocation(line: 0, scope: !16418)
!16422 = !DILocation(line: 0, scope: !14520, inlinedAt: !16423)
!16423 = distinct !DILocation(line: 1106, column: 9, scope: !16418)
!16424 = !DILocation(line: 139, column: 13, scope: !16425, inlinedAt: !16423)
!16425 = distinct !DILexicalBlock(scope: !16426, file: !8725, line: 138, column: 10)
!16426 = distinct !DILexicalBlock(scope: !16427, file: !8725, line: 136, column: 7)
!16427 = distinct !DILexicalBlock(scope: !14541, file: !8725, line: 134, column: 17)
!16428 = !DILocation(line: 1106, column: 2, scope: !16418)
!16429 = distinct !DISubprogram(name: "k_yield", scope: !4413, file: !4413, line: 140, type: !3082, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!16430 = !DILocation(line: 148, column: 2, scope: !16431)
!16431 = distinct !DILexicalBlock(scope: !16429, file: !4413, line: 148, column: 2)
!16432 = !{i64 2154792940}
!16433 = !DILocation(line: 149, column: 2, scope: !16429)
!16434 = !DILocation(line: 150, column: 1, scope: !16429)
!16435 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2454, file: !2454, line: 1495, type: !16436, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16438)
!16436 = !DISubroutineType(types: !16437)
!16437 = !{!895, !107}
!16438 = !{!16439, !16440}
!16439 = !DILocalVariable(name: "us", arg: 1, scope: !16435, file: !2454, line: 1495, type: !107)
!16440 = !DILocalVariable(name: "ticks", scope: !16435, file: !2454, line: 1497, type: !895)
!16441 = !DILocation(line: 0, scope: !16435)
!16442 = !DILocation(line: 1501, column: 31, scope: !16435)
!16443 = !DILocation(line: 1501, column: 10, scope: !16435)
!16444 = !DILocation(line: 1502, column: 23, scope: !16435)
!16445 = !DILocation(line: 1502, column: 10, scope: !16435)
!16446 = !DILocation(line: 1506, column: 31, scope: !16435)
!16447 = !DILocation(line: 1506, column: 9, scope: !16435)
!16448 = !DILocation(line: 1506, column: 2, scope: !16435)
!16449 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !8725, file: !8725, line: 571, type: !14239, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16450)
!16450 = !{!16451}
!16451 = !DILocalVariable(name: "t", arg: 1, scope: !16449, file: !8725, line: 571, type: !566)
!16452 = !DILocation(line: 0, scope: !16449)
!16453 = !DILocation(line: 0, scope: !14520, inlinedAt: !16454)
!16454 = distinct !DILocation(line: 574, column: 9, scope: !16449)
!16455 = !DILocation(line: 135, column: 5, scope: !16427, inlinedAt: !16454)
!16456 = !DILocation(line: 139, column: 13, scope: !16425, inlinedAt: !16454)
!16457 = !DILocation(line: 574, column: 2, scope: !16449)
!16458 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !8725, file: !8725, line: 1187, type: !14239, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16459)
!16459 = !{!16460}
!16460 = !DILocalVariable(name: "t", arg: 1, scope: !16458, file: !8725, line: 1187, type: !566)
!16461 = !DILocation(line: 0, scope: !16458)
!16462 = !DILocation(line: 0, scope: !14520, inlinedAt: !16463)
!16463 = distinct !DILocation(line: 1190, column: 9, scope: !16458)
!16464 = !DILocation(line: 145, column: 13, scope: !16465, inlinedAt: !16463)
!16465 = distinct !DILexicalBlock(scope: !14538, file: !8725, line: 144, column: 10)
!16466 = !DILocation(line: 1190, column: 2, scope: !16458)
!16467 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2454, file: !2454, line: 1517, type: !16338, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16468)
!16468 = !{!16469}
!16469 = !DILocalVariable(name: "thread", arg: 1, scope: !16467, file: !2454, line: 1517, type: !16196)
!16470 = !DILocation(line: 0, scope: !16467)
!16471 = !DILocation(line: 1521, column: 6, scope: !16472)
!16472 = distinct !DILexicalBlock(scope: !16467, file: !2454, line: 1521, column: 6)
!16473 = !DILocation(line: 1521, column: 6, scope: !16467)
!16474 = !DILocation(line: 1525, column: 6, scope: !16475)
!16475 = distinct !DILexicalBlock(scope: !16467, file: !2454, line: 1525, column: 6)
!16476 = !DILocation(line: 1525, column: 37, scope: !16475)
!16477 = !DILocation(line: 1525, column: 6, scope: !16467)
!16478 = !DILocation(line: 1527, column: 20, scope: !16479)
!16479 = distinct !DILexicalBlock(scope: !16480, file: !2454, line: 1527, column: 7)
!16480 = distinct !DILexicalBlock(scope: !16475, file: !2454, line: 1525, column: 42)
!16481 = !DILocation(line: 1527, column: 33, scope: !16479)
!16482 = !DILocation(line: 1527, column: 7, scope: !16480)
!16483 = !DILocation(line: 1532, column: 2, scope: !16467)
!16484 = !DILocation(line: 1533, column: 2, scope: !16467)
!16485 = !DILocation(line: 1031, column: 3, scope: !15187, inlinedAt: !16486)
!16486 = distinct !DILocation(line: 48, column: 10, scope: !15191, inlinedAt: !16487)
!16487 = distinct !DILocation(line: 1537, column: 7, scope: !16488)
!16488 = distinct !DILexicalBlock(scope: !16467, file: !2454, line: 1537, column: 6)
!16489 = !DILocation(line: 0, scope: !15187, inlinedAt: !16486)
!16490 = !DILocation(line: 48, column: 9, scope: !15191, inlinedAt: !16487)
!16491 = !DILocation(line: 1537, column: 6, scope: !16467)
!16492 = !DILocation(line: 1538, column: 3, scope: !16493)
!16493 = distinct !DILexicalBlock(scope: !16488, file: !2454, line: 1537, column: 25)
!16494 = !DILocation(line: 1539, column: 2, scope: !16493)
!16495 = !DILocation(line: 1540, column: 1, scope: !16467)
!16496 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13620, file: !13620, line: 101, type: !14601, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16497)
!16497 = !{!16498}
!16498 = !DILocalVariable(name: "thread", arg: 1, scope: !16496, file: !13620, line: 101, type: !2346)
!16499 = !DILocation(line: 0, scope: !16496)
!16500 = !DILocation(line: 103, column: 23, scope: !16496)
!16501 = !DILocation(line: 103, column: 36, scope: !16496)
!16502 = !DILocation(line: 103, column: 55, scope: !16496)
!16503 = !DILocation(line: 103, column: 2, scope: !16496)
!16504 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2454, file: !2454, line: 1567, type: !16505, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16507)
!16505 = !DISubroutineType(types: !16506)
!16506 = !{!16196}
!16507 = !{!16508}
!16508 = !DILocalVariable(name: "ret", scope: !16504, file: !2454, line: 1577, type: !16196)
!16509 = !DILocation(line: 1577, column: 30, scope: !16504)
!16510 = !DILocation(line: 0, scope: !16504)
!16511 = !DILocation(line: 1582, column: 2, scope: !16504)
!16512 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2454, file: !2454, line: 1593, type: !7613, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !2156)
!16513 = !DILocation(line: 1031, column: 3, scope: !15187, inlinedAt: !16514)
!16514 = distinct !DILocation(line: 48, column: 10, scope: !15191, inlinedAt: !16515)
!16515 = distinct !DILocation(line: 1595, column: 10, scope: !16512)
!16516 = !DILocation(line: 0, scope: !15187, inlinedAt: !16514)
!16517 = !DILocation(line: 48, column: 9, scope: !15191, inlinedAt: !16515)
!16518 = !DILocation(line: 1595, column: 27, scope: !16512)
!16519 = !DILocation(line: 1595, column: 41, scope: !16512)
!16520 = !DILocation(line: 1595, column: 30, scope: !16512)
!16521 = !DILocation(line: 1595, column: 2, scope: !16512)
!16522 = distinct !DISubprogram(name: "z_thread_abort", scope: !2454, file: !2454, line: 1725, type: !14418, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16523)
!16523 = !{!16524, !16525}
!16524 = !DILocalVariable(name: "thread", arg: 1, scope: !16522, file: !2454, line: 1725, type: !2346)
!16525 = !DILocalVariable(name: "key", scope: !16522, file: !2454, line: 1727, type: !14452)
!16526 = !DILocation(line: 0, scope: !16522)
!16527 = !DILocation(line: 0, scope: !14460, inlinedAt: !16528)
!16528 = distinct !DILocation(line: 1727, column: 25, scope: !16522)
!16529 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !16530)
!16530 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !16528)
!16531 = !DILocation(line: 0, scope: !14469, inlinedAt: !16530)
!16532 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !16528)
!16533 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !16528)
!16534 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !16528)
!16535 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !16528)
!16536 = !DILocation(line: 1729, column: 20, scope: !16537)
!16537 = distinct !DILexicalBlock(scope: !16522, file: !2454, line: 1729, column: 6)
!16538 = !DILocation(line: 1729, column: 33, scope: !16537)
!16539 = !DILocation(line: 1729, column: 48, scope: !16537)
!16540 = !DILocation(line: 1729, column: 6, scope: !16522)
!16541 = !DILocation(line: 0, scope: !14494, inlinedAt: !16542)
!16542 = distinct !DILocation(line: 1730, column: 3, scope: !16543)
!16543 = distinct !DILexicalBlock(scope: !16537, file: !2454, line: 1729, column: 54)
!16544 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !16542)
!16545 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !16542)
!16546 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !16542)
!16547 = !DILocation(line: 0, scope: !14508, inlinedAt: !16548)
!16548 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !16542)
!16549 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !16548)
!16550 = !DILocation(line: 1731, column: 3, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16552, file: !2454, line: 1731, column: 3)
!16552 = distinct !DILexicalBlock(scope: !16553, file: !2454, line: 1731, column: 3)
!16553 = distinct !DILexicalBlock(scope: !16543, file: !2454, line: 1731, column: 3)
!16554 = !DILocation(line: 1736, column: 20, scope: !16555)
!16555 = distinct !DILexicalBlock(scope: !16522, file: !2454, line: 1736, column: 6)
!16556 = !DILocation(line: 1736, column: 33, scope: !16555)
!16557 = !DILocation(line: 1736, column: 49, scope: !16555)
!16558 = !DILocation(line: 1736, column: 6, scope: !16522)
!16559 = !DILocation(line: 0, scope: !14494, inlinedAt: !16560)
!16560 = distinct !DILocation(line: 1737, column: 3, scope: !16561)
!16561 = distinct !DILexicalBlock(scope: !16555, file: !2454, line: 1736, column: 56)
!16562 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !16560)
!16563 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !16560)
!16564 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !16560)
!16565 = !DILocation(line: 0, scope: !14508, inlinedAt: !16566)
!16566 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !16560)
!16567 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !16566)
!16568 = !DILocation(line: 1738, column: 3, scope: !16561)
!16569 = !DILocation(line: 1775, column: 2, scope: !16522)
!16570 = !DILocation(line: 1776, column: 16, scope: !16571)
!16571 = distinct !DILexicalBlock(scope: !16522, file: !2454, line: 1776, column: 6)
!16572 = !DILocation(line: 1776, column: 13, scope: !16571)
!16573 = !DILocation(line: 1776, column: 25, scope: !16571)
!16574 = !DILocation(line: 1031, column: 3, scope: !15187, inlinedAt: !16575)
!16575 = distinct !DILocation(line: 48, column: 10, scope: !15191, inlinedAt: !16576)
!16576 = distinct !DILocation(line: 1776, column: 29, scope: !16571)
!16577 = !DILocation(line: 0, scope: !15187, inlinedAt: !16575)
!16578 = !DILocation(line: 48, column: 9, scope: !15191, inlinedAt: !16576)
!16579 = !DILocation(line: 1776, column: 6, scope: !16522)
!16580 = !DILocation(line: 0, scope: !15138, inlinedAt: !16581)
!16581 = distinct !DILocation(line: 1777, column: 3, scope: !16582)
!16582 = distinct !DILexicalBlock(scope: !16571, file: !2454, line: 1776, column: 47)
!16583 = !DILocation(line: 0, scope: !15147, inlinedAt: !16584)
!16584 = distinct !DILocation(line: 195, column: 2, scope: !15138, inlinedAt: !16581)
!16585 = !DILocation(line: 225, column: 2, scope: !15154, inlinedAt: !16584)
!16586 = !DILocation(line: 225, column: 2, scope: !15155, inlinedAt: !16584)
!16587 = !DILocation(line: 225, column: 2, scope: !15158, inlinedAt: !16584)
!16588 = !DILocation(line: 196, column: 9, scope: !15138, inlinedAt: !16581)
!16589 = !DILocation(line: 1778, column: 3, scope: !16590)
!16590 = distinct !DILexicalBlock(scope: !16591, file: !2454, line: 1778, column: 3)
!16591 = distinct !DILexicalBlock(scope: !16592, file: !2454, line: 1778, column: 3)
!16592 = distinct !DILexicalBlock(scope: !16582, file: !2454, line: 1778, column: 3)
!16593 = !DILocation(line: 0, scope: !14494, inlinedAt: !16594)
!16594 = distinct !DILocation(line: 1780, column: 2, scope: !16522)
!16595 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !16594)
!16596 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !16594)
!16597 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !16594)
!16598 = !DILocation(line: 0, scope: !14508, inlinedAt: !16599)
!16599 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !16594)
!16600 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !16599)
!16601 = !DILocation(line: 1781, column: 1, scope: !16522)
!16602 = distinct !DISubprogram(name: "end_thread", scope: !2454, file: !2454, line: 1690, type: !14418, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16603)
!16603 = !{!16604}
!16604 = !DILocalVariable(name: "thread", arg: 1, scope: !16602, file: !2454, line: 1690, type: !2346)
!16605 = !DILocation(line: 0, scope: !16602)
!16606 = !DILocation(line: 1695, column: 20, scope: !16607)
!16607 = distinct !DILexicalBlock(scope: !16602, file: !2454, line: 1695, column: 6)
!16608 = !DILocation(line: 1695, column: 33, scope: !16607)
!16609 = !DILocation(line: 1695, column: 49, scope: !16607)
!16610 = !DILocation(line: 1695, column: 6, scope: !16602)
!16611 = !DILocation(line: 1697, column: 29, scope: !16612)
!16612 = distinct !DILexicalBlock(scope: !16607, file: !2454, line: 1695, column: 56)
!16613 = !DILocation(line: 1698, column: 7, scope: !16614)
!16614 = distinct !DILexicalBlock(scope: !16612, file: !2454, line: 1698, column: 7)
!16615 = !DILocation(line: 1698, column: 7, scope: !16612)
!16616 = !DILocation(line: 0, scope: !14652, inlinedAt: !16617)
!16617 = distinct !DILocation(line: 1699, column: 4, scope: !16618)
!16618 = distinct !DILexicalBlock(scope: !16614, file: !2454, line: 1698, column: 35)
!16619 = !DILocation(line: 266, column: 28, scope: !14652, inlinedAt: !16617)
!16620 = !DILocation(line: 0, scope: !14660, inlinedAt: !16621)
!16621 = distinct !DILocation(line: 268, column: 3, scope: !14664, inlinedAt: !16617)
!16622 = !DILocation(line: 234, column: 2, scope: !14660, inlinedAt: !16621)
!16623 = !DILocation(line: 1700, column: 3, scope: !16618)
!16624 = !DILocation(line: 1701, column: 20, scope: !16625)
!16625 = distinct !DILexicalBlock(scope: !16612, file: !2454, line: 1701, column: 7)
!16626 = !DILocation(line: 1701, column: 30, scope: !16625)
!16627 = !DILocation(line: 1701, column: 7, scope: !16612)
!16628 = !DILocation(line: 1702, column: 4, scope: !16629)
!16629 = distinct !DILexicalBlock(scope: !16625, file: !2454, line: 1701, column: 39)
!16630 = !DILocation(line: 1703, column: 3, scope: !16629)
!16631 = !DILocation(line: 1704, column: 9, scope: !16612)
!16632 = !DILocation(line: 1705, column: 23, scope: !16612)
!16633 = !DILocation(line: 1705, column: 3, scope: !16612)
!16634 = !DILocation(line: 1706, column: 3, scope: !16612)
!16635 = !DILocation(line: 1722, column: 2, scope: !16612)
!16636 = !DILocation(line: 1723, column: 1, scope: !16602)
!16637 = distinct !DISubprogram(name: "unpend_all", scope: !2454, file: !2454, line: 1674, type: !16638, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16640)
!16638 = !DISubroutineType(types: !16639)
!16639 = !{null, !2377}
!16640 = !{!16641, !16642}
!16641 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16637, file: !2454, line: 1674, type: !2377)
!16642 = !DILocalVariable(name: "thread", scope: !16637, file: !2454, line: 1676, type: !2346)
!16643 = !DILocation(line: 0, scope: !16637)
!16644 = !DILocation(line: 1678, column: 19, scope: !16637)
!16645 = !DILocation(line: 1678, column: 41, scope: !16637)
!16646 = !DILocation(line: 1678, column: 2, scope: !16637)
!16647 = !DILocation(line: 1679, column: 3, scope: !16648)
!16648 = distinct !DILexicalBlock(scope: !16637, file: !2454, line: 1678, column: 50)
!16649 = !DILocation(line: 1680, column: 9, scope: !16648)
!16650 = !DILocalVariable(name: "thread", arg: 1, scope: !16651, file: !13640, line: 65, type: !2346)
!16651 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13640, file: !13640, line: 65, type: !16652, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16654)
!16652 = !DISubroutineType(types: !16653)
!16653 = !{null, !2346, !32}
!16654 = !{!16650, !16655}
!16655 = !DILocalVariable(name: "value", arg: 2, scope: !16651, file: !13640, line: 65, type: !32)
!16656 = !DILocation(line: 0, scope: !16651, inlinedAt: !16657)
!16657 = distinct !DILocation(line: 1681, column: 3, scope: !16648)
!16658 = !DILocation(line: 67, column: 15, scope: !16651, inlinedAt: !16657)
!16659 = !DILocation(line: 67, column: 33, scope: !16651, inlinedAt: !16657)
!16660 = !DILocation(line: 1682, column: 3, scope: !16648)
!16661 = distinct !{!16661, !16646, !16662}
!16662 = !DILocation(line: 1683, column: 2, scope: !16637)
!16663 = !DILocation(line: 1684, column: 1, scope: !16637)
!16664 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2454, file: !2454, line: 1794, type: !16665, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16667)
!16665 = !DISubroutineType(types: !16666)
!16666 = !{!107, !2346, !15348}
!16667 = !{!16668, !16669, !16670, !16671}
!16668 = !DILocalVariable(name: "thread", arg: 1, scope: !16664, file: !2454, line: 1794, type: !2346)
!16669 = !DILocalVariable(name: "timeout", arg: 2, scope: !16664, file: !2454, line: 1794, type: !15348)
!16670 = !DILocalVariable(name: "key", scope: !16664, file: !2454, line: 1796, type: !14452)
!16671 = !DILocalVariable(name: "ret", scope: !16664, file: !2454, line: 1797, type: !107)
!16672 = !DILocation(line: 0, scope: !16664)
!16673 = !DILocation(line: 0, scope: !14460, inlinedAt: !16674)
!16674 = distinct !DILocation(line: 1796, column: 25, scope: !16664)
!16675 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !16676)
!16676 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !16674)
!16677 = !DILocation(line: 0, scope: !14469, inlinedAt: !16676)
!16678 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !16674)
!16679 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !16674)
!16680 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !16674)
!16681 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !16674)
!16682 = !DILocation(line: 1801, column: 20, scope: !16683)
!16683 = distinct !DILexicalBlock(scope: !16664, file: !2454, line: 1801, column: 6)
!16684 = !DILocation(line: 1801, column: 33, scope: !16683)
!16685 = !DILocation(line: 1801, column: 49, scope: !16683)
!16686 = !DILocation(line: 1801, column: 6, scope: !16664)
!16687 = !DILocation(line: 1803, column: 13, scope: !16688)
!16688 = distinct !DILexicalBlock(scope: !16683, file: !2454, line: 1803, column: 13)
!16689 = !DILocation(line: 1803, column: 13, scope: !16683)
!16690 = !DILocation(line: 1805, column: 24, scope: !16691)
!16691 = distinct !DILexicalBlock(scope: !16688, file: !2454, line: 1805, column: 13)
!16692 = !DILocation(line: 1805, column: 21, scope: !16691)
!16693 = !DILocation(line: 1805, column: 34, scope: !16691)
!16694 = !DILocation(line: 1806, column: 20, scope: !16691)
!16695 = !DILocation(line: 1806, column: 44, scope: !16691)
!16696 = !DILocation(line: 1806, column: 30, scope: !16691)
!16697 = !DILocation(line: 1805, column: 13, scope: !16688)
!16698 = !DILocation(line: 1031, column: 3, scope: !15187, inlinedAt: !16699)
!16699 = distinct !DILocation(line: 48, column: 10, scope: !15191, inlinedAt: !16700)
!16700 = distinct !DILocation(line: 1809, column: 3, scope: !16701)
!16701 = distinct !DILexicalBlock(scope: !16702, file: !2454, line: 1809, column: 3)
!16702 = distinct !DILexicalBlock(scope: !16703, file: !2454, line: 1809, column: 3)
!16703 = distinct !DILexicalBlock(scope: !16691, file: !2454, line: 1808, column: 9)
!16704 = !DILocation(line: 0, scope: !15187, inlinedAt: !16699)
!16705 = !DILocation(line: 48, column: 9, scope: !15191, inlinedAt: !16700)
!16706 = !DILocation(line: 1809, column: 3, scope: !16702)
!16707 = !DILocation(line: 1809, column: 3, scope: !16708)
!16708 = distinct !DILexicalBlock(scope: !16701, file: !2454, line: 1809, column: 3)
!16709 = !DILocation(line: 1810, column: 23, scope: !16703)
!16710 = !DILocation(line: 1810, column: 42, scope: !16703)
!16711 = !DILocation(line: 1810, column: 3, scope: !16703)
!16712 = !DILocation(line: 1811, column: 22, scope: !16703)
!16713 = !DILocation(line: 1811, column: 3, scope: !16703)
!16714 = !DILocation(line: 0, scope: !15138, inlinedAt: !16715)
!16715 = distinct !DILocation(line: 1814, column: 9, scope: !16703)
!16716 = !DILocation(line: 0, scope: !15147, inlinedAt: !16717)
!16717 = distinct !DILocation(line: 195, column: 2, scope: !15138, inlinedAt: !16715)
!16718 = !DILocation(line: 225, column: 2, scope: !15154, inlinedAt: !16717)
!16719 = !DILocation(line: 225, column: 2, scope: !15155, inlinedAt: !16717)
!16720 = !DILocation(line: 225, column: 2, scope: !15158, inlinedAt: !16717)
!16721 = !DILocation(line: 196, column: 9, scope: !15138, inlinedAt: !16715)
!16722 = !DILocation(line: 1817, column: 3, scope: !16703)
!16723 = !DILocation(line: 0, scope: !16683)
!16724 = !DILocation(line: 0, scope: !14494, inlinedAt: !16725)
!16725 = distinct !DILocation(line: 1822, column: 2, scope: !16664)
!16726 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !16725)
!16727 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !16725)
!16728 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !16725)
!16729 = !DILocation(line: 0, scope: !14508, inlinedAt: !16730)
!16730 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !16725)
!16731 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !16730)
!16732 = !DILocation(line: 1823, column: 2, scope: !16664)
!16733 = !DILocation(line: 1824, column: 1, scope: !16664)
!16734 = distinct !DISubprogram(name: "z_sched_wake", scope: !2454, file: !2454, line: 1882, type: !16735, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16737)
!16735 = !DISubroutineType(types: !16736)
!16736 = !{!145, !2377, !107, !106}
!16737 = !{!16738, !16739, !16740, !16741, !16742, !16743, !16745}
!16738 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16734, file: !2454, line: 1882, type: !2377)
!16739 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16734, file: !2454, line: 1882, type: !107)
!16740 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16734, file: !2454, line: 1882, type: !106)
!16741 = !DILocalVariable(name: "thread", scope: !16734, file: !2454, line: 1884, type: !2346)
!16742 = !DILocalVariable(name: "ret", scope: !16734, file: !2454, line: 1885, type: !145)
!16743 = !DILocalVariable(name: "__i", scope: !16744, file: !2454, line: 1887, type: !14452)
!16744 = distinct !DILexicalBlock(scope: !16734, file: !2454, line: 1887, column: 2)
!16745 = !DILocalVariable(name: "__key", scope: !16744, file: !2454, line: 1887, type: !14452)
!16746 = !DILocation(line: 0, scope: !16734)
!16747 = !DILocation(line: 0, scope: !16744)
!16748 = !DILocation(line: 0, scope: !14460, inlinedAt: !16749)
!16749 = distinct !DILocation(line: 1887, column: 2, scope: !16744)
!16750 = !DILocation(line: 55, column: 2, scope: !14469, inlinedAt: !16751)
!16751 = distinct !DILocation(line: 145, column: 10, scope: !14460, inlinedAt: !16749)
!16752 = !DILocation(line: 0, scope: !14469, inlinedAt: !16751)
!16753 = !DILocation(line: 148, column: 2, scope: !14477, inlinedAt: !16749)
!16754 = !DILocation(line: 148, column: 2, scope: !14478, inlinedAt: !16749)
!16755 = !DILocation(line: 148, column: 2, scope: !14481, inlinedAt: !16749)
!16756 = !DILocation(line: 160, column: 2, scope: !14460, inlinedAt: !16749)
!16757 = !DILocation(line: 1888, column: 12, scope: !16758)
!16758 = distinct !DILexicalBlock(scope: !16759, file: !2454, line: 1887, column: 26)
!16759 = distinct !DILexicalBlock(scope: !16744, file: !2454, line: 1887, column: 2)
!16760 = !DILocation(line: 1890, column: 14, scope: !16761)
!16761 = distinct !DILexicalBlock(scope: !16758, file: !2454, line: 1890, column: 7)
!16762 = !DILocation(line: 1890, column: 7, scope: !16758)
!16763 = !DILocalVariable(name: "thread", arg: 1, scope: !16764, file: !16765, line: 134, type: !2346)
!16764 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16765, file: !16765, line: 134, type: !16766, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16768)
!16765 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16766 = !DISubroutineType(types: !16767)
!16767 = !{null, !2346, !32, !106}
!16768 = !{!16763, !16769, !16770}
!16769 = !DILocalVariable(name: "value", arg: 2, scope: !16764, file: !16765, line: 135, type: !32)
!16770 = !DILocalVariable(name: "data", arg: 3, scope: !16764, file: !16765, line: 136, type: !106)
!16771 = !DILocation(line: 0, scope: !16764, inlinedAt: !16772)
!16772 = distinct !DILocation(line: 1891, column: 4, scope: !16773)
!16773 = distinct !DILexicalBlock(scope: !16761, file: !2454, line: 1890, column: 23)
!16774 = !DILocation(line: 0, scope: !16651, inlinedAt: !16775)
!16775 = distinct !DILocation(line: 138, column: 2, scope: !16764, inlinedAt: !16772)
!16776 = !DILocation(line: 67, column: 15, scope: !16651, inlinedAt: !16775)
!16777 = !DILocation(line: 67, column: 33, scope: !16651, inlinedAt: !16775)
!16778 = !DILocation(line: 139, column: 15, scope: !16764, inlinedAt: !16772)
!16779 = !DILocation(line: 139, column: 25, scope: !16764, inlinedAt: !16772)
!16780 = !DILocation(line: 1894, column: 4, scope: !16773)
!16781 = !DILocation(line: 1895, column: 10, scope: !16773)
!16782 = !DILocation(line: 1896, column: 4, scope: !16773)
!16783 = !DILocation(line: 1898, column: 3, scope: !16773)
!16784 = !DILocation(line: 0, scope: !14494, inlinedAt: !16785)
!16785 = distinct !DILocation(line: 1887, column: 2, scope: !16759)
!16786 = !DILocation(line: 194, column: 2, scope: !14502, inlinedAt: !16785)
!16787 = !DILocation(line: 194, column: 2, scope: !14503, inlinedAt: !16785)
!16788 = !DILocation(line: 194, column: 2, scope: !14506, inlinedAt: !16785)
!16789 = !DILocation(line: 0, scope: !14508, inlinedAt: !16790)
!16790 = distinct !DILocation(line: 215, column: 2, scope: !14494, inlinedAt: !16785)
!16791 = !DILocation(line: 95, column: 2, scope: !14508, inlinedAt: !16790)
!16792 = !DILocation(line: 1901, column: 2, scope: !16734)
!16793 = distinct !DISubprogram(name: "z_sched_wait", scope: !2454, file: !2454, line: 1904, type: !16794, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16797)
!16794 = !DISubroutineType(types: !16795)
!16795 = !{!107, !14463, !14452, !2377, !15348, !16796}
!16796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!16797 = !{!16798, !16799, !16800, !16801, !16802, !16803}
!16798 = !DILocalVariable(name: "lock", arg: 1, scope: !16793, file: !2454, line: 1904, type: !14463)
!16799 = !DILocalVariable(name: "key", arg: 2, scope: !16793, file: !2454, line: 1904, type: !14452)
!16800 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16793, file: !2454, line: 1905, type: !2377)
!16801 = !DILocalVariable(name: "timeout", arg: 4, scope: !16793, file: !2454, line: 1905, type: !15348)
!16802 = !DILocalVariable(name: "data", arg: 5, scope: !16793, file: !2454, line: 1905, type: !16796)
!16803 = !DILocalVariable(name: "ret", scope: !16793, file: !2454, line: 1907, type: !107)
!16804 = !DILocation(line: 0, scope: !16793)
!16805 = !DILocation(line: 1907, column: 12, scope: !16793)
!16806 = !DILocation(line: 1909, column: 11, scope: !16807)
!16807 = distinct !DILexicalBlock(scope: !16793, file: !2454, line: 1909, column: 6)
!16808 = !DILocation(line: 1909, column: 6, scope: !16793)
!16809 = !DILocation(line: 1910, column: 11, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !16807, file: !2454, line: 1909, column: 20)
!16811 = !DILocation(line: 1910, column: 26, scope: !16810)
!16812 = !DILocation(line: 1910, column: 9, scope: !16810)
!16813 = !DILocation(line: 1911, column: 2, scope: !16810)
!16814 = !DILocation(line: 1912, column: 2, scope: !16793)
!16815 = distinct !DISubprogram(name: "z_data_copy", scope: !16816, file: !16816, line: 22, type: !3082, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !2156)
!16816 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16817 = !DILocation(line: 24, column: 2, scope: !16815)
!16818 = !DILocation(line: 27, column: 2, scope: !16815)
!16819 = !DILocation(line: 71, column: 1, scope: !16815)
!16820 = distinct !DISubprogram(name: "z_add_timeout", scope: !2491, file: !2491, line: 88, type: !16821, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !16827)
!16821 = !DISubroutineType(types: !16822)
!16822 = !{null, !2464, !2483, !16823}
!16823 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !16824)
!16824 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !16825)
!16825 = !{!16826}
!16826 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16824, file: !565, line: 66, baseType: !564, size: 64)
!16827 = !{!16828, !16829, !16830, !16831, !16837, !16838, !16841, !16844}
!16828 = !DILocalVariable(name: "to", arg: 1, scope: !16820, file: !2491, line: 88, type: !2464)
!16829 = !DILocalVariable(name: "fn", arg: 2, scope: !16820, file: !2491, line: 88, type: !2483)
!16830 = !DILocalVariable(name: "timeout", arg: 3, scope: !16820, file: !2491, line: 89, type: !16823)
!16831 = !DILocalVariable(name: "__i", scope: !16832, file: !2491, line: 102, type: !16833)
!16832 = distinct !DILexicalBlock(scope: !16820, file: !2491, line: 102, column: 2)
!16833 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !16834)
!16834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !16835)
!16835 = !{!16836}
!16836 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16834, file: !420, line: 33, baseType: !107, size: 32)
!16837 = !DILocalVariable(name: "__key", scope: !16832, file: !2491, line: 102, type: !16833)
!16838 = !DILocalVariable(name: "t", scope: !16839, file: !2491, line: 103, type: !2464)
!16839 = distinct !DILexicalBlock(scope: !16840, file: !2491, line: 102, column: 24)
!16840 = distinct !DILexicalBlock(scope: !16832, file: !2491, line: 102, column: 2)
!16841 = !DILocalVariable(name: "ticks", scope: !16842, file: !2491, line: 107, type: !564)
!16842 = distinct !DILexicalBlock(scope: !16843, file: !2491, line: 106, column: 39)
!16843 = distinct !DILexicalBlock(scope: !16839, file: !2491, line: 105, column: 7)
!16844 = !DILocalVariable(name: "next_time", scope: !16845, file: !2491, line: 137, type: !895)
!16845 = distinct !DILexicalBlock(scope: !16846, file: !2491, line: 127, column: 22)
!16846 = distinct !DILexicalBlock(scope: !16839, file: !2491, line: 127, column: 7)
!16847 = !DILocation(line: 0, scope: !16820)
!16848 = !DILocation(line: 91, column: 6, scope: !16849)
!16849 = distinct !DILexicalBlock(scope: !16820, file: !2491, line: 91, column: 6)
!16850 = !DILocation(line: 91, column: 6, scope: !16820)
!16851 = !DILocation(line: 99, column: 2, scope: !16852)
!16852 = distinct !DILexicalBlock(scope: !16853, file: !2491, line: 99, column: 2)
!16853 = distinct !DILexicalBlock(scope: !16820, file: !2491, line: 99, column: 2)
!16854 = !DILocation(line: 99, column: 2, scope: !16853)
!16855 = !DILocation(line: 99, column: 2, scope: !16856)
!16856 = distinct !DILexicalBlock(scope: !16852, file: !2491, line: 99, column: 2)
!16857 = !DILocation(line: 100, column: 6, scope: !16820)
!16858 = !DILocation(line: 100, column: 9, scope: !16820)
!16859 = !DILocation(line: 0, scope: !16832)
!16860 = !DILocalVariable(name: "l", arg: 1, scope: !16861, file: !420, line: 136, type: !16864)
!16861 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !16862, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !16865)
!16862 = !DISubroutineType(types: !16863)
!16863 = !{!16833, !16864}
!16864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 32)
!16865 = !{!16860, !16866}
!16866 = !DILocalVariable(name: "k", scope: !16861, file: !420, line: 139, type: !16833)
!16867 = !DILocation(line: 0, scope: !16861, inlinedAt: !16868)
!16868 = distinct !DILocation(line: 102, column: 2, scope: !16832)
!16869 = !DILocation(line: 55, column: 2, scope: !16870, inlinedAt: !16874)
!16870 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5938, file: !5938, line: 42, type: !5939, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !16871)
!16871 = !{!16872, !16873}
!16872 = !DILocalVariable(name: "key", scope: !16870, file: !5938, line: 44, type: !32)
!16873 = !DILocalVariable(name: "tmp", scope: !16870, file: !5938, line: 53, type: !32)
!16874 = distinct !DILocation(line: 145, column: 10, scope: !16861, inlinedAt: !16868)
!16875 = !{i64 2249314}
!16876 = !DILocation(line: 0, scope: !16870, inlinedAt: !16874)
!16877 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !16868)
!16878 = distinct !DILexicalBlock(scope: !16879, file: !420, line: 148, column: 2)
!16879 = distinct !DILexicalBlock(scope: !16861, file: !420, line: 148, column: 2)
!16880 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !16868)
!16881 = !DILocation(line: 148, column: 2, scope: !16882, inlinedAt: !16868)
!16882 = distinct !DILexicalBlock(scope: !16878, file: !420, line: 148, column: 2)
!16883 = !DILocation(line: 160, column: 2, scope: !16861, inlinedAt: !16868)
!16884 = !DILocation(line: 106, column: 33, scope: !16843)
!16885 = !DILocation(line: 105, column: 7, scope: !16839)
!16886 = !DILocation(line: 107, column: 50, scope: !16842)
!16887 = !DILocation(line: 107, column: 48, scope: !16842)
!16888 = !DILocation(line: 0, scope: !16842)
!16889 = !DILocation(line: 109, column: 17, scope: !16842)
!16890 = !DILocation(line: 110, column: 3, scope: !16842)
!16891 = !DILocation(line: 111, column: 31, scope: !16892)
!16892 = distinct !DILexicalBlock(scope: !16843, file: !2491, line: 110, column: 10)
!16893 = !DILocation(line: 111, column: 37, scope: !16892)
!16894 = !DILocation(line: 111, column: 35, scope: !16892)
!16895 = !DILocation(line: 0, scope: !16843)
!16896 = !DILocation(line: 109, column: 8, scope: !16842)
!16897 = !DILocation(line: 109, column: 15, scope: !16842)
!16898 = !DILocation(line: 114, column: 12, scope: !16899)
!16899 = distinct !DILexicalBlock(scope: !16839, file: !2491, line: 114, column: 3)
!16900 = !DILocation(line: 0, scope: !16839)
!16901 = !DILocation(line: 114, column: 3, scope: !16899)
!16902 = !DILocation(line: 115, column: 24, scope: !16903)
!16903 = distinct !DILexicalBlock(scope: !16904, file: !2491, line: 115, column: 8)
!16904 = distinct !DILexicalBlock(scope: !16905, file: !2491, line: 114, column: 45)
!16905 = distinct !DILexicalBlock(scope: !16899, file: !2491, line: 114, column: 3)
!16906 = !DILocation(line: 115, column: 11, scope: !16903)
!16907 = !DILocation(line: 115, column: 18, scope: !16903)
!16908 = !DILocation(line: 115, column: 8, scope: !16904)
!16909 = !DILocation(line: 116, column: 15, scope: !16910)
!16910 = distinct !DILexicalBlock(scope: !16903, file: !2491, line: 115, column: 32)
!16911 = !DILocation(line: 117, column: 26, scope: !16910)
!16912 = !DILocation(line: 117, column: 5, scope: !16910)
!16913 = !DILocation(line: 123, column: 7, scope: !16839)
!16914 = !DILocation(line: 120, column: 15, scope: !16904)
!16915 = !DILocation(line: 114, column: 36, scope: !16905)
!16916 = distinct !{!16916, !16901, !16917}
!16917 = !DILocation(line: 121, column: 3, scope: !16899)
!16918 = !DILocation(line: 124, column: 4, scope: !16919)
!16919 = distinct !DILexicalBlock(scope: !16920, file: !2491, line: 123, column: 18)
!16920 = distinct !DILexicalBlock(scope: !16839, file: !2491, line: 123, column: 7)
!16921 = !DILocation(line: 125, column: 3, scope: !16919)
!16922 = !DILocation(line: 127, column: 13, scope: !16846)
!16923 = !DILocation(line: 127, column: 10, scope: !16846)
!16924 = !DILocation(line: 127, column: 7, scope: !16839)
!16925 = !DILocation(line: 137, column: 24, scope: !16845)
!16926 = !DILocation(line: 0, scope: !16845)
!16927 = !DILocation(line: 139, column: 18, scope: !16928)
!16928 = distinct !DILexicalBlock(scope: !16845, file: !2491, line: 139, column: 8)
!16929 = !DILocation(line: 139, column: 23, scope: !16928)
!16930 = !DILocation(line: 141, column: 5, scope: !16931)
!16931 = distinct !DILexicalBlock(scope: !16928, file: !2491, line: 140, column: 48)
!16932 = !DILocation(line: 142, column: 4, scope: !16931)
!16933 = !DILocalVariable(name: "key", arg: 2, scope: !16934, file: !420, line: 190, type: !16833)
!16934 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !16935, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !16937)
!16935 = !DISubroutineType(types: !16936)
!16936 = !{null, !16864, !16833}
!16937 = !{!16938, !16933}
!16938 = !DILocalVariable(name: "l", arg: 1, scope: !16934, file: !420, line: 189, type: !16864)
!16939 = !DILocation(line: 0, scope: !16934, inlinedAt: !16940)
!16940 = distinct !DILocation(line: 102, column: 2, scope: !16840)
!16941 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !16940)
!16942 = distinct !DILexicalBlock(scope: !16943, file: !420, line: 194, column: 2)
!16943 = distinct !DILexicalBlock(scope: !16934, file: !420, line: 194, column: 2)
!16944 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !16940)
!16945 = !DILocation(line: 194, column: 2, scope: !16946, inlinedAt: !16940)
!16946 = distinct !DILexicalBlock(scope: !16942, file: !420, line: 194, column: 2)
!16947 = !DILocalVariable(name: "key", arg: 1, scope: !16948, file: !5938, line: 84, type: !32)
!16948 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5938, file: !5938, line: 84, type: !5949, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !16949)
!16949 = !{!16947}
!16950 = !DILocation(line: 0, scope: !16948, inlinedAt: !16951)
!16951 = distinct !DILocation(line: 215, column: 2, scope: !16934, inlinedAt: !16940)
!16952 = !DILocation(line: 95, column: 2, scope: !16948, inlinedAt: !16951)
!16953 = !{i64 2250131}
!16954 = !DILocation(line: 148, column: 1, scope: !16820)
!16955 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !16956, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !16960)
!16956 = !DISubroutineType(types: !16957)
!16957 = !{!145, !16958}
!16958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16959, size: 32)
!16959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2468)
!16960 = !{!16961}
!16961 = !DILocalVariable(name: "node", arg: 1, scope: !16955, file: !319, line: 225, type: !16958)
!16962 = !DILocation(line: 0, scope: !16955)
!16963 = !DILocation(line: 227, column: 15, scope: !16955)
!16964 = !DILocation(line: 227, column: 20, scope: !16955)
!16965 = !DILocation(line: 227, column: 2, scope: !16955)
!16966 = distinct !DISubprogram(name: "elapsed", scope: !2491, file: !2491, line: 62, type: !16967, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !2156)
!16967 = !DISubroutineType(types: !16968)
!16968 = !{!895}
!16969 = !DILocation(line: 64, column: 9, scope: !16966)
!16970 = !DILocation(line: 64, column: 28, scope: !16966)
!16971 = !DILocation(line: 64, column: 35, scope: !16966)
!16972 = !DILocation(line: 64, column: 2, scope: !16966)
!16973 = distinct !DISubprogram(name: "first", scope: !2491, file: !2491, line: 39, type: !16974, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !16976)
!16974 = !DISubroutineType(types: !16975)
!16975 = !{!2464}
!16976 = !{!16977}
!16977 = !DILocalVariable(name: "t", scope: !16973, file: !2491, line: 41, type: !16978)
!16978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 32)
!16979 = !DILocation(line: 41, column: 19, scope: !16973)
!16980 = !DILocation(line: 0, scope: !16973)
!16981 = !DILocation(line: 43, column: 9, scope: !16973)
!16982 = !DILocation(line: 43, column: 2, scope: !16973)
!16983 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !16984, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !16986)
!16984 = !DISubroutineType(types: !16985)
!16985 = !{null, !16978, !16978}
!16986 = !{!16987, !16988, !16989}
!16987 = !DILocalVariable(name: "successor", arg: 1, scope: !16983, file: !319, line: 443, type: !16978)
!16988 = !DILocalVariable(name: "node", arg: 2, scope: !16983, file: !319, line: 443, type: !16978)
!16989 = !DILocalVariable(name: "prev", scope: !16983, file: !319, line: 445, type: !16990)
!16990 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16978)
!16991 = !DILocation(line: 0, scope: !16983)
!16992 = !DILocation(line: 445, column: 39, scope: !16983)
!16993 = !DILocation(line: 447, column: 8, scope: !16983)
!16994 = !DILocation(line: 447, column: 13, scope: !16983)
!16995 = !DILocation(line: 448, column: 8, scope: !16983)
!16996 = !DILocation(line: 448, column: 13, scope: !16983)
!16997 = !DILocation(line: 449, column: 8, scope: !16983)
!16998 = !DILocation(line: 449, column: 13, scope: !16983)
!16999 = !DILocation(line: 450, column: 18, scope: !16983)
!17000 = !DILocation(line: 451, column: 1, scope: !16983)
!17001 = distinct !DISubprogram(name: "next", scope: !2491, file: !2491, line: 46, type: !17002, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17004)
!17002 = !DISubroutineType(types: !17003)
!17003 = !{!2464, !2464}
!17004 = !{!17005, !17006}
!17005 = !DILocalVariable(name: "t", arg: 1, scope: !17001, file: !2491, line: 46, type: !2464)
!17006 = !DILocalVariable(name: "n", scope: !17001, file: !2491, line: 48, type: !16978)
!17007 = !DILocation(line: 0, scope: !17001)
!17008 = !DILocation(line: 48, column: 58, scope: !17001)
!17009 = !DILocation(line: 48, column: 19, scope: !17001)
!17010 = !DILocation(line: 50, column: 9, scope: !17001)
!17011 = !DILocation(line: 50, column: 2, scope: !17001)
!17012 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !17013, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17016)
!17013 = !DISubroutineType(types: !17014)
!17014 = !{null, !17015, !16978}
!17015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 32)
!17016 = !{!17017, !17018, !17019}
!17017 = !DILocalVariable(name: "list", arg: 1, scope: !17012, file: !319, line: 404, type: !17015)
!17018 = !DILocalVariable(name: "node", arg: 2, scope: !17012, file: !319, line: 404, type: !16978)
!17019 = !DILocalVariable(name: "tail", scope: !17012, file: !319, line: 406, type: !16990)
!17020 = !DILocation(line: 0, scope: !17012)
!17021 = !DILocation(line: 406, column: 34, scope: !17012)
!17022 = !DILocation(line: 408, column: 8, scope: !17012)
!17023 = !DILocation(line: 408, column: 13, scope: !17012)
!17024 = !DILocation(line: 409, column: 8, scope: !17012)
!17025 = !DILocation(line: 409, column: 13, scope: !17012)
!17026 = !DILocation(line: 411, column: 8, scope: !17012)
!17027 = !DILocation(line: 411, column: 13, scope: !17012)
!17028 = !DILocation(line: 412, column: 13, scope: !17012)
!17029 = !DILocation(line: 413, column: 1, scope: !17012)
!17030 = distinct !DISubprogram(name: "next_timeout", scope: !2491, file: !2491, line: 67, type: !16967, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17031)
!17031 = !{!17032, !17033, !17034}
!17032 = !DILocalVariable(name: "to", scope: !17030, file: !2491, line: 69, type: !2464)
!17033 = !DILocalVariable(name: "ticks_elapsed", scope: !17030, file: !2491, line: 70, type: !895)
!17034 = !DILocalVariable(name: "ret", scope: !17030, file: !2491, line: 71, type: !895)
!17035 = !DILocation(line: 69, column: 24, scope: !17030)
!17036 = !DILocation(line: 0, scope: !17030)
!17037 = !DILocation(line: 70, column: 26, scope: !17030)
!17038 = !DILocation(line: 73, column: 10, scope: !17039)
!17039 = distinct !DILexicalBlock(scope: !17030, file: !2491, line: 73, column: 6)
!17040 = !DILocation(line: 73, column: 19, scope: !17039)
!17041 = !DILocation(line: 74, column: 21, scope: !17039)
!17042 = !DILocation(line: 74, column: 30, scope: !17039)
!17043 = !DILocation(line: 74, column: 28, scope: !17039)
!17044 = !DILocation(line: 74, column: 45, scope: !17039)
!17045 = !DILocation(line: 73, column: 6, scope: !17030)
!17046 = !DILocation(line: 77, column: 9, scope: !17047)
!17047 = distinct !DILexicalBlock(scope: !17039, file: !2491, line: 76, column: 9)
!17048 = !DILocation(line: 0, scope: !17039)
!17049 = !DILocation(line: 81, column: 20, scope: !17050)
!17050 = distinct !DILexicalBlock(scope: !17030, file: !2491, line: 81, column: 6)
!17051 = !DILocation(line: 81, column: 6, scope: !17050)
!17052 = !DILocation(line: 81, column: 32, scope: !17050)
!17053 = !DILocation(line: 85, column: 2, scope: !17030)
!17054 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !17055, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17057)
!17055 = !DISubroutineType(types: !17056)
!17056 = !{!16978, !17015, !16978}
!17057 = !{!17058, !17059}
!17058 = !DILocalVariable(name: "list", arg: 1, scope: !17054, file: !319, line: 341, type: !17015)
!17059 = !DILocalVariable(name: "node", arg: 2, scope: !17054, file: !319, line: 342, type: !16978)
!17060 = !DILocation(line: 0, scope: !17054)
!17061 = !DILocation(line: 344, column: 15, scope: !17054)
!17062 = !DILocation(line: 344, column: 9, scope: !17054)
!17063 = !DILocation(line: 344, column: 26, scope: !17054)
!17064 = !DILocation(line: 344, column: 2, scope: !17054)
!17065 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !17055, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17066)
!17066 = !{!17067, !17068}
!17067 = !DILocalVariable(name: "list", arg: 1, scope: !17065, file: !319, line: 325, type: !17015)
!17068 = !DILocalVariable(name: "node", arg: 2, scope: !17065, file: !319, line: 326, type: !16978)
!17069 = !DILocation(line: 0, scope: !17065)
!17070 = !DILocation(line: 328, column: 24, scope: !17065)
!17071 = !DILocation(line: 328, column: 15, scope: !17065)
!17072 = !DILocation(line: 328, column: 9, scope: !17065)
!17073 = !DILocation(line: 328, column: 45, scope: !17065)
!17074 = !DILocation(line: 328, column: 2, scope: !17065)
!17075 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !17076, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17078)
!17076 = !DISubroutineType(types: !17077)
!17077 = !{!16978, !17015}
!17078 = !{!17079}
!17079 = !DILocalVariable(name: "list", arg: 1, scope: !17075, file: !319, line: 294, type: !17015)
!17080 = !DILocation(line: 0, scope: !17075)
!17081 = !DILocation(line: 296, column: 9, scope: !17075)
!17082 = !DILocation(line: 296, column: 2, scope: !17075)
!17083 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !17084, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17086)
!17084 = !DISubroutineType(types: !17085)
!17085 = !{!145, !17015}
!17086 = !{!17087}
!17087 = !DILocalVariable(name: "list", arg: 1, scope: !17083, file: !319, line: 266, type: !17015)
!17088 = !DILocation(line: 0, scope: !17083)
!17089 = !DILocation(line: 268, column: 15, scope: !17083)
!17090 = !DILocation(line: 268, column: 20, scope: !17083)
!17091 = !DILocation(line: 268, column: 2, scope: !17083)
!17092 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2491, file: !2491, line: 150, type: !17093, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17095)
!17093 = !DISubroutineType(types: !17094)
!17094 = !{!107, !2464}
!17095 = !{!17096, !17097, !17098, !17100}
!17096 = !DILocalVariable(name: "to", arg: 1, scope: !17092, file: !2491, line: 150, type: !2464)
!17097 = !DILocalVariable(name: "ret", scope: !17092, file: !2491, line: 152, type: !107)
!17098 = !DILocalVariable(name: "__i", scope: !17099, file: !2491, line: 154, type: !16833)
!17099 = distinct !DILexicalBlock(scope: !17092, file: !2491, line: 154, column: 2)
!17100 = !DILocalVariable(name: "__key", scope: !17099, file: !2491, line: 154, type: !16833)
!17101 = !DILocation(line: 0, scope: !17092)
!17102 = !DILocation(line: 0, scope: !17099)
!17103 = !DILocation(line: 0, scope: !16861, inlinedAt: !17104)
!17104 = distinct !DILocation(line: 154, column: 2, scope: !17099)
!17105 = !DILocation(line: 55, column: 2, scope: !16870, inlinedAt: !17106)
!17106 = distinct !DILocation(line: 145, column: 10, scope: !16861, inlinedAt: !17104)
!17107 = !DILocation(line: 0, scope: !16870, inlinedAt: !17106)
!17108 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !17104)
!17109 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17104)
!17110 = !DILocation(line: 148, column: 2, scope: !16882, inlinedAt: !17104)
!17111 = !DILocation(line: 160, column: 2, scope: !16861, inlinedAt: !17104)
!17112 = !DILocation(line: 155, column: 7, scope: !17113)
!17113 = distinct !DILexicalBlock(scope: !17114, file: !2491, line: 155, column: 7)
!17114 = distinct !DILexicalBlock(scope: !17115, file: !2491, line: 154, column: 24)
!17115 = distinct !DILexicalBlock(scope: !17099, file: !2491, line: 154, column: 2)
!17116 = !DILocation(line: 155, column: 7, scope: !17114)
!17117 = !DILocation(line: 156, column: 4, scope: !17118)
!17118 = distinct !DILexicalBlock(scope: !17113, file: !2491, line: 155, column: 39)
!17119 = !DILocation(line: 158, column: 3, scope: !17118)
!17120 = !DILocation(line: 0, scope: !16934, inlinedAt: !17121)
!17121 = distinct !DILocation(line: 154, column: 2, scope: !17115)
!17122 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !17121)
!17123 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17121)
!17124 = !DILocation(line: 194, column: 2, scope: !16946, inlinedAt: !17121)
!17125 = !DILocation(line: 0, scope: !16948, inlinedAt: !17126)
!17126 = distinct !DILocation(line: 215, column: 2, scope: !16934, inlinedAt: !17121)
!17127 = !DILocation(line: 95, column: 2, scope: !16948, inlinedAt: !17126)
!17128 = !DILocation(line: 161, column: 2, scope: !17092)
!17129 = distinct !DISubprogram(name: "remove_timeout", scope: !2491, file: !2491, line: 53, type: !2485, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17130)
!17130 = !{!17131}
!17131 = !DILocalVariable(name: "t", arg: 1, scope: !17129, file: !2491, line: 53, type: !2464)
!17132 = !DILocation(line: 0, scope: !17129)
!17133 = !DILocation(line: 55, column: 6, scope: !17134)
!17134 = distinct !DILexicalBlock(scope: !17129, file: !2491, line: 55, column: 6)
!17135 = !DILocation(line: 55, column: 14, scope: !17134)
!17136 = !DILocation(line: 55, column: 6, scope: !17129)
!17137 = !DILocation(line: 56, column: 25, scope: !17138)
!17138 = distinct !DILexicalBlock(scope: !17134, file: !2491, line: 55, column: 23)
!17139 = !DILocation(line: 56, column: 12, scope: !17138)
!17140 = !DILocation(line: 56, column: 19, scope: !17138)
!17141 = !DILocation(line: 57, column: 2, scope: !17138)
!17142 = !DILocation(line: 59, column: 23, scope: !17129)
!17143 = !DILocation(line: 59, column: 2, scope: !17129)
!17144 = !DILocation(line: 60, column: 1, scope: !17129)
!17145 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !17146, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17148)
!17146 = !DISubroutineType(types: !17147)
!17147 = !{null, !16978}
!17148 = !{!17149, !17150, !17151}
!17149 = !DILocalVariable(name: "node", arg: 1, scope: !17145, file: !319, line: 496, type: !16978)
!17150 = !DILocalVariable(name: "prev", scope: !17145, file: !319, line: 498, type: !16990)
!17151 = !DILocalVariable(name: "next", scope: !17145, file: !319, line: 499, type: !16990)
!17152 = !DILocation(line: 0, scope: !17145)
!17153 = !DILocation(line: 498, column: 34, scope: !17145)
!17154 = !DILocation(line: 499, column: 34, scope: !17145)
!17155 = !DILocation(line: 501, column: 8, scope: !17145)
!17156 = !DILocation(line: 501, column: 13, scope: !17145)
!17157 = !DILocation(line: 502, column: 8, scope: !17145)
!17158 = !DILocation(line: 502, column: 13, scope: !17145)
!17159 = !DILocation(line: 503, column: 2, scope: !17145)
!17160 = !DILocation(line: 504, column: 1, scope: !17145)
!17161 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !17146, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17162)
!17162 = !{!17163}
!17163 = !DILocalVariable(name: "node", arg: 1, scope: !17161, file: !319, line: 211, type: !16978)
!17164 = !DILocation(line: 0, scope: !17161)
!17165 = !DILocation(line: 213, column: 8, scope: !17161)
!17166 = !DILocation(line: 213, column: 13, scope: !17161)
!17167 = !DILocation(line: 214, column: 8, scope: !17161)
!17168 = !DILocation(line: 214, column: 13, scope: !17161)
!17169 = !DILocation(line: 215, column: 1, scope: !17161)
!17170 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2491, file: !2491, line: 183, type: !17171, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17175)
!17171 = !DISubroutineType(types: !17172)
!17172 = !{!564, !17173}
!17173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17174, size: 32)
!17174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2465)
!17175 = !{!17176, !17177, !17178, !17180}
!17176 = !DILocalVariable(name: "timeout", arg: 1, scope: !17170, file: !2491, line: 183, type: !17173)
!17177 = !DILocalVariable(name: "ticks", scope: !17170, file: !2491, line: 185, type: !564)
!17178 = !DILocalVariable(name: "__i", scope: !17179, file: !2491, line: 187, type: !16833)
!17179 = distinct !DILexicalBlock(scope: !17170, file: !2491, line: 187, column: 2)
!17180 = !DILocalVariable(name: "__key", scope: !17179, file: !2491, line: 187, type: !16833)
!17181 = !DILocation(line: 0, scope: !17170)
!17182 = !DILocation(line: 0, scope: !17179)
!17183 = !DILocation(line: 0, scope: !16861, inlinedAt: !17184)
!17184 = distinct !DILocation(line: 187, column: 2, scope: !17179)
!17185 = !DILocation(line: 55, column: 2, scope: !16870, inlinedAt: !17186)
!17186 = distinct !DILocation(line: 145, column: 10, scope: !16861, inlinedAt: !17184)
!17187 = !DILocation(line: 0, scope: !16870, inlinedAt: !17186)
!17188 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !17184)
!17189 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17184)
!17190 = !DILocation(line: 148, column: 2, scope: !16882, inlinedAt: !17184)
!17191 = !DILocation(line: 160, column: 2, scope: !16861, inlinedAt: !17184)
!17192 = !DILocation(line: 188, column: 11, scope: !17193)
!17193 = distinct !DILexicalBlock(scope: !17194, file: !2491, line: 187, column: 24)
!17194 = distinct !DILexicalBlock(scope: !17179, file: !2491, line: 187, column: 2)
!17195 = !DILocation(line: 0, scope: !16934, inlinedAt: !17196)
!17196 = distinct !DILocation(line: 187, column: 2, scope: !17194)
!17197 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !17196)
!17198 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17196)
!17199 = !DILocation(line: 194, column: 2, scope: !16946, inlinedAt: !17196)
!17200 = !DILocation(line: 0, scope: !16948, inlinedAt: !17201)
!17201 = distinct !DILocation(line: 215, column: 2, scope: !16934, inlinedAt: !17196)
!17202 = !DILocation(line: 95, column: 2, scope: !16948, inlinedAt: !17201)
!17203 = !DILocation(line: 191, column: 2, scope: !17170)
!17204 = distinct !DISubprogram(name: "timeout_rem", scope: !2491, file: !2491, line: 165, type: !17171, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17205)
!17205 = !{!17206, !17207, !17208}
!17206 = !DILocalVariable(name: "timeout", arg: 1, scope: !17204, file: !2491, line: 165, type: !17173)
!17207 = !DILocalVariable(name: "ticks", scope: !17204, file: !2491, line: 167, type: !564)
!17208 = !DILocalVariable(name: "t", scope: !17209, file: !2491, line: 173, type: !2464)
!17209 = distinct !DILexicalBlock(scope: !17204, file: !2491, line: 173, column: 2)
!17210 = !DILocation(line: 0, scope: !17204)
!17211 = !DILocation(line: 169, column: 6, scope: !17212)
!17212 = distinct !DILexicalBlock(scope: !17204, file: !2491, line: 169, column: 6)
!17213 = !DILocation(line: 169, column: 6, scope: !17204)
!17214 = !DILocation(line: 173, column: 28, scope: !17209)
!17215 = !DILocation(line: 0, scope: !17209)
!17216 = !DILocation(line: 173, column: 39, scope: !17217)
!17217 = distinct !DILexicalBlock(scope: !17209, file: !2491, line: 173, column: 2)
!17218 = !DILocation(line: 173, column: 2, scope: !17209)
!17219 = !DILocation(line: 174, column: 15, scope: !17220)
!17220 = distinct !DILexicalBlock(scope: !17217, file: !2491, line: 173, column: 61)
!17221 = !DILocation(line: 174, column: 9, scope: !17220)
!17222 = !DILocation(line: 175, column: 15, scope: !17223)
!17223 = distinct !DILexicalBlock(scope: !17220, file: !2491, line: 175, column: 7)
!17224 = !DILocation(line: 175, column: 7, scope: !17220)
!17225 = !DILocation(line: 173, column: 52, scope: !17217)
!17226 = distinct !{!17226, !17218, !17227}
!17227 = !DILocation(line: 178, column: 2, scope: !17209)
!17228 = !DILocation(line: 180, column: 17, scope: !17204)
!17229 = !DILocation(line: 180, column: 15, scope: !17204)
!17230 = !DILocation(line: 180, column: 2, scope: !17204)
!17231 = !DILocation(line: 181, column: 1, scope: !17204)
!17232 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14049, file: !14049, line: 35, type: !17233, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17235)
!17233 = !DISubroutineType(types: !17234)
!17234 = !{!145, !17173}
!17235 = !{!17236}
!17236 = !DILocalVariable(name: "to", arg: 1, scope: !17232, file: !14049, line: 35, type: !17173)
!17237 = !DILocation(line: 0, scope: !17232)
!17238 = !DILocation(line: 37, column: 35, scope: !17232)
!17239 = !DILocation(line: 37, column: 10, scope: !17232)
!17240 = !DILocation(line: 37, column: 9, scope: !17232)
!17241 = !DILocation(line: 37, column: 2, scope: !17232)
!17242 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2491, file: !2491, line: 194, type: !17171, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17243)
!17243 = !{!17244, !17245, !17246, !17248}
!17244 = !DILocalVariable(name: "timeout", arg: 1, scope: !17242, file: !2491, line: 194, type: !17173)
!17245 = !DILocalVariable(name: "ticks", scope: !17242, file: !2491, line: 196, type: !564)
!17246 = !DILocalVariable(name: "__i", scope: !17247, file: !2491, line: 198, type: !16833)
!17247 = distinct !DILexicalBlock(scope: !17242, file: !2491, line: 198, column: 2)
!17248 = !DILocalVariable(name: "__key", scope: !17247, file: !2491, line: 198, type: !16833)
!17249 = !DILocation(line: 0, scope: !17242)
!17250 = !DILocation(line: 0, scope: !17247)
!17251 = !DILocation(line: 0, scope: !16861, inlinedAt: !17252)
!17252 = distinct !DILocation(line: 198, column: 2, scope: !17247)
!17253 = !DILocation(line: 55, column: 2, scope: !16870, inlinedAt: !17254)
!17254 = distinct !DILocation(line: 145, column: 10, scope: !16861, inlinedAt: !17252)
!17255 = !DILocation(line: 0, scope: !16870, inlinedAt: !17254)
!17256 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !17252)
!17257 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17252)
!17258 = !DILocation(line: 148, column: 2, scope: !16882, inlinedAt: !17252)
!17259 = !DILocation(line: 160, column: 2, scope: !16861, inlinedAt: !17252)
!17260 = !DILocation(line: 199, column: 11, scope: !17261)
!17261 = distinct !DILexicalBlock(scope: !17262, file: !2491, line: 198, column: 24)
!17262 = distinct !DILexicalBlock(scope: !17247, file: !2491, line: 198, column: 2)
!17263 = !DILocation(line: 199, column: 23, scope: !17261)
!17264 = !DILocation(line: 0, scope: !16934, inlinedAt: !17265)
!17265 = distinct !DILocation(line: 198, column: 2, scope: !17262)
!17266 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !17265)
!17267 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17265)
!17268 = !DILocation(line: 194, column: 2, scope: !16946, inlinedAt: !17265)
!17269 = !DILocation(line: 0, scope: !16948, inlinedAt: !17270)
!17270 = distinct !DILocation(line: 215, column: 2, scope: !16934, inlinedAt: !17265)
!17271 = !DILocation(line: 95, column: 2, scope: !16948, inlinedAt: !17270)
!17272 = !DILocation(line: 199, column: 21, scope: !17261)
!17273 = !DILocation(line: 202, column: 2, scope: !17242)
!17274 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2491, file: !2491, line: 205, type: !16967, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17275)
!17275 = !{!17276, !17277, !17279}
!17276 = !DILocalVariable(name: "ret", scope: !17274, file: !2491, line: 207, type: !895)
!17277 = !DILocalVariable(name: "__i", scope: !17278, file: !2491, line: 209, type: !16833)
!17278 = distinct !DILexicalBlock(scope: !17274, file: !2491, line: 209, column: 2)
!17279 = !DILocalVariable(name: "__key", scope: !17278, file: !2491, line: 209, type: !16833)
!17280 = !DILocation(line: 0, scope: !17274)
!17281 = !DILocation(line: 0, scope: !17278)
!17282 = !DILocation(line: 0, scope: !16861, inlinedAt: !17283)
!17283 = distinct !DILocation(line: 209, column: 2, scope: !17278)
!17284 = !DILocation(line: 55, column: 2, scope: !16870, inlinedAt: !17285)
!17285 = distinct !DILocation(line: 145, column: 10, scope: !16861, inlinedAt: !17283)
!17286 = !DILocation(line: 0, scope: !16870, inlinedAt: !17285)
!17287 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !17283)
!17288 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17283)
!17289 = !DILocation(line: 148, column: 2, scope: !16882, inlinedAt: !17283)
!17290 = !DILocation(line: 160, column: 2, scope: !16861, inlinedAt: !17283)
!17291 = !DILocation(line: 210, column: 9, scope: !17292)
!17292 = distinct !DILexicalBlock(scope: !17293, file: !2491, line: 209, column: 24)
!17293 = distinct !DILexicalBlock(scope: !17278, file: !2491, line: 209, column: 2)
!17294 = !DILocation(line: 0, scope: !16934, inlinedAt: !17295)
!17295 = distinct !DILocation(line: 209, column: 2, scope: !17293)
!17296 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !17295)
!17297 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17295)
!17298 = !DILocation(line: 194, column: 2, scope: !16946, inlinedAt: !17295)
!17299 = !DILocation(line: 0, scope: !16948, inlinedAt: !17300)
!17300 = distinct !DILocation(line: 215, column: 2, scope: !16934, inlinedAt: !17295)
!17301 = !DILocation(line: 95, column: 2, scope: !16948, inlinedAt: !17300)
!17302 = !DILocation(line: 212, column: 2, scope: !17274)
!17303 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2491, file: !2491, line: 215, type: !11544, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17304)
!17304 = !{!17305, !17306, !17307, !17309, !17310, !17313, !17314}
!17305 = !DILocalVariable(name: "ticks", arg: 1, scope: !17303, file: !2491, line: 215, type: !895)
!17306 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17303, file: !2491, line: 215, type: !145)
!17307 = !DILocalVariable(name: "__i", scope: !17308, file: !2491, line: 217, type: !16833)
!17308 = distinct !DILexicalBlock(scope: !17303, file: !2491, line: 217, column: 2)
!17309 = !DILocalVariable(name: "__key", scope: !17308, file: !2491, line: 217, type: !16833)
!17310 = !DILocalVariable(name: "next_to", scope: !17311, file: !2491, line: 218, type: !107)
!17311 = distinct !DILexicalBlock(scope: !17312, file: !2491, line: 217, column: 24)
!17312 = distinct !DILexicalBlock(scope: !17308, file: !2491, line: 217, column: 2)
!17313 = !DILocalVariable(name: "sooner", scope: !17311, file: !2491, line: 219, type: !145)
!17314 = !DILocalVariable(name: "imminent", scope: !17311, file: !2491, line: 221, type: !145)
!17315 = !DILocation(line: 0, scope: !17303)
!17316 = !DILocation(line: 0, scope: !17308)
!17317 = !DILocation(line: 0, scope: !16861, inlinedAt: !17318)
!17318 = distinct !DILocation(line: 217, column: 2, scope: !17308)
!17319 = !DILocation(line: 55, column: 2, scope: !16870, inlinedAt: !17320)
!17320 = distinct !DILocation(line: 145, column: 10, scope: !16861, inlinedAt: !17318)
!17321 = !DILocation(line: 0, scope: !16870, inlinedAt: !17320)
!17322 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !17318)
!17323 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17318)
!17324 = !DILocation(line: 148, column: 2, scope: !16882, inlinedAt: !17318)
!17325 = !DILocation(line: 160, column: 2, scope: !16861, inlinedAt: !17318)
!17326 = !DILocation(line: 218, column: 17, scope: !17311)
!17327 = !DILocation(line: 0, scope: !17311)
!17328 = !DILocation(line: 221, column: 27, scope: !17311)
!17329 = !DILocation(line: 233, column: 17, scope: !17330)
!17330 = distinct !DILexicalBlock(scope: !17311, file: !2491, line: 233, column: 7)
!17331 = !DILocation(line: 234, column: 26, scope: !17332)
!17332 = distinct !DILexicalBlock(scope: !17330, file: !2491, line: 233, column: 56)
!17333 = !DILocation(line: 234, column: 4, scope: !17332)
!17334 = !DILocation(line: 235, column: 3, scope: !17332)
!17335 = !DILocation(line: 0, scope: !16934, inlinedAt: !17336)
!17336 = distinct !DILocation(line: 217, column: 2, scope: !17312)
!17337 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !17336)
!17338 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17336)
!17339 = !DILocation(line: 194, column: 2, scope: !16946, inlinedAt: !17336)
!17340 = !DILocation(line: 0, scope: !16948, inlinedAt: !17341)
!17341 = distinct !DILocation(line: 215, column: 2, scope: !16934, inlinedAt: !17336)
!17342 = !DILocation(line: 95, column: 2, scope: !16948, inlinedAt: !17341)
!17343 = !DILocation(line: 237, column: 1, scope: !17303)
!17344 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2491, file: !2491, line: 239, type: !17345, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17347)
!17345 = !DISubroutineType(types: !17346)
!17346 = !{null, !895}
!17347 = !{!17348, !17349, !17350, !17352}
!17348 = !DILocalVariable(name: "ticks", arg: 1, scope: !17344, file: !2491, line: 239, type: !895)
!17349 = !DILocalVariable(name: "key", scope: !17344, file: !2491, line: 245, type: !16833)
!17350 = !DILocalVariable(name: "t", scope: !17351, file: !2491, line: 262, type: !2464)
!17351 = distinct !DILexicalBlock(scope: !17344, file: !2491, line: 261, column: 67)
!17352 = !DILocalVariable(name: "dt", scope: !17351, file: !2491, line: 263, type: !107)
!17353 = !DILocation(line: 0, scope: !17344)
!17354 = !DILocation(line: 242, column: 2, scope: !17344)
!17355 = !DILocation(line: 0, scope: !16861, inlinedAt: !17356)
!17356 = distinct !DILocation(line: 245, column: 25, scope: !17344)
!17357 = !DILocation(line: 55, column: 2, scope: !16870, inlinedAt: !17358)
!17358 = distinct !DILocation(line: 145, column: 10, scope: !16861, inlinedAt: !17356)
!17359 = !DILocation(line: 0, scope: !16870, inlinedAt: !17358)
!17360 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !17356)
!17361 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17356)
!17362 = !DILocation(line: 148, column: 2, scope: !16882, inlinedAt: !17356)
!17363 = !DILocation(line: 160, column: 2, scope: !16861, inlinedAt: !17356)
!17364 = !DILocation(line: 261, column: 9, scope: !17344)
!17365 = !DILocation(line: 261, column: 17, scope: !17344)
!17366 = !DILocation(line: 261, column: 25, scope: !17344)
!17367 = !DILocation(line: 261, column: 37, scope: !17344)
!17368 = !DILocation(line: 261, column: 47, scope: !17344)
!17369 = !DILocation(line: 261, column: 44, scope: !17344)
!17370 = !DILocation(line: 261, column: 2, scope: !17344)
!17371 = !DILocation(line: 0, scope: !17351)
!17372 = !DILocation(line: 263, column: 12, scope: !17351)
!17373 = !DILocation(line: 265, column: 16, scope: !17351)
!17374 = !DILocation(line: 265, column: 13, scope: !17351)
!17375 = !DILocation(line: 266, column: 13, scope: !17351)
!17376 = !DILocation(line: 267, column: 3, scope: !17351)
!17377 = !DILocation(line: 0, scope: !16934, inlinedAt: !17378)
!17378 = distinct !DILocation(line: 269, column: 3, scope: !17351)
!17379 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !17378)
!17380 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17378)
!17381 = !DILocation(line: 194, column: 2, scope: !16946, inlinedAt: !17378)
!17382 = !DILocation(line: 0, scope: !16948, inlinedAt: !17383)
!17383 = distinct !DILocation(line: 215, column: 2, scope: !16934, inlinedAt: !17378)
!17384 = !DILocation(line: 95, column: 2, scope: !16948, inlinedAt: !17383)
!17385 = !DILocation(line: 270, column: 6, scope: !17351)
!17386 = !DILocation(line: 270, column: 3, scope: !17351)
!17387 = !DILocation(line: 0, scope: !16861, inlinedAt: !17388)
!17388 = distinct !DILocation(line: 271, column: 9, scope: !17351)
!17389 = !DILocation(line: 55, column: 2, scope: !16870, inlinedAt: !17390)
!17390 = distinct !DILocation(line: 145, column: 10, scope: !16861, inlinedAt: !17388)
!17391 = !DILocation(line: 0, scope: !16870, inlinedAt: !17390)
!17392 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !17388)
!17393 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17388)
!17394 = !DILocation(line: 148, column: 2, scope: !16882, inlinedAt: !17388)
!17395 = !DILocation(line: 160, column: 2, scope: !16861, inlinedAt: !17388)
!17396 = !DILocation(line: 272, column: 22, scope: !17351)
!17397 = distinct !{!17397, !17370, !17398}
!17398 = !DILocation(line: 273, column: 2, scope: !17344)
!17399 = !DILocation(line: 276, column: 19, scope: !17400)
!17400 = distinct !DILexicalBlock(scope: !17401, file: !2491, line: 275, column: 23)
!17401 = distinct !DILexicalBlock(scope: !17344, file: !2491, line: 275, column: 6)
!17402 = !DILocation(line: 277, column: 2, scope: !17400)
!17403 = !DILocation(line: 279, column: 15, scope: !17344)
!17404 = !DILocation(line: 279, column: 12, scope: !17344)
!17405 = !DILocation(line: 280, column: 21, scope: !17344)
!17406 = !DILocation(line: 282, column: 24, scope: !17344)
!17407 = !DILocation(line: 282, column: 2, scope: !17344)
!17408 = !DILocation(line: 0, scope: !16934, inlinedAt: !17409)
!17409 = distinct !DILocation(line: 284, column: 2, scope: !17344)
!17410 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !17409)
!17411 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17409)
!17412 = !DILocation(line: 194, column: 2, scope: !16946, inlinedAt: !17409)
!17413 = !DILocation(line: 0, scope: !16948, inlinedAt: !17414)
!17414 = distinct !DILocation(line: 215, column: 2, scope: !16934, inlinedAt: !17409)
!17415 = !DILocation(line: 95, column: 2, scope: !16948, inlinedAt: !17414)
!17416 = !DILocation(line: 285, column: 1, scope: !17344)
!17417 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2491, file: !2491, line: 287, type: !17418, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17420)
!17418 = !DISubroutineType(types: !17419)
!17419 = !{!376}
!17420 = !{!17421, !17422, !17424}
!17421 = !DILocalVariable(name: "t", scope: !17417, file: !2491, line: 289, type: !566)
!17422 = !DILocalVariable(name: "__i", scope: !17423, file: !2491, line: 291, type: !16833)
!17423 = distinct !DILexicalBlock(scope: !17417, file: !2491, line: 291, column: 2)
!17424 = !DILocalVariable(name: "__key", scope: !17423, file: !2491, line: 291, type: !16833)
!17425 = !DILocation(line: 0, scope: !17417)
!17426 = !DILocation(line: 0, scope: !17423)
!17427 = !DILocation(line: 0, scope: !16861, inlinedAt: !17428)
!17428 = distinct !DILocation(line: 291, column: 2, scope: !17423)
!17429 = !DILocation(line: 55, column: 2, scope: !16870, inlinedAt: !17430)
!17430 = distinct !DILocation(line: 145, column: 10, scope: !16861, inlinedAt: !17428)
!17431 = !DILocation(line: 0, scope: !16870, inlinedAt: !17430)
!17432 = !DILocation(line: 148, column: 2, scope: !16878, inlinedAt: !17428)
!17433 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17428)
!17434 = !DILocation(line: 148, column: 2, scope: !16882, inlinedAt: !17428)
!17435 = !DILocation(line: 160, column: 2, scope: !16861, inlinedAt: !17428)
!17436 = !DILocation(line: 292, column: 7, scope: !17437)
!17437 = distinct !DILexicalBlock(scope: !17438, file: !2491, line: 291, column: 24)
!17438 = distinct !DILexicalBlock(scope: !17423, file: !2491, line: 291, column: 2)
!17439 = !DILocation(line: 292, column: 19, scope: !17437)
!17440 = !DILocation(line: 0, scope: !16934, inlinedAt: !17441)
!17441 = distinct !DILocation(line: 291, column: 2, scope: !17438)
!17442 = !DILocation(line: 194, column: 2, scope: !16942, inlinedAt: !17441)
!17443 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17441)
!17444 = !DILocation(line: 194, column: 2, scope: !16946, inlinedAt: !17441)
!17445 = !DILocation(line: 0, scope: !16948, inlinedAt: !17446)
!17446 = distinct !DILocation(line: 215, column: 2, scope: !16934, inlinedAt: !17441)
!17447 = !DILocation(line: 95, column: 2, scope: !16948, inlinedAt: !17446)
!17448 = !DILocation(line: 292, column: 17, scope: !17437)
!17449 = !DILocation(line: 294, column: 2, scope: !17417)
!17450 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2491, file: !2491, line: 297, type: !6344, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !2156)
!17451 = !DILocation(line: 300, column: 19, scope: !17450)
!17452 = !DILocation(line: 300, column: 9, scope: !17450)
!17453 = !DILocation(line: 300, column: 2, scope: !17450)
!17454 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2491, file: !2491, line: 306, type: !17418, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !2156)
!17455 = !DILocation(line: 308, column: 9, scope: !17454)
!17456 = !DILocation(line: 308, column: 2, scope: !17454)
!17457 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2491, file: !2491, line: 319, type: !6354, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17458)
!17458 = !{!17459, !17460, !17461, !17462}
!17459 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17457, file: !2491, line: 319, type: !152)
!17460 = !DILocalVariable(name: "start_cycles", scope: !17457, file: !2491, line: 328, type: !152)
!17461 = !DILocalVariable(name: "cycles_to_wait", scope: !17457, file: !2491, line: 331, type: !152)
!17462 = !DILocalVariable(name: "current_cycles", scope: !17463, file: !2491, line: 338, type: !152)
!17463 = distinct !DILexicalBlock(scope: !17464, file: !2491, line: 337, column: 11)
!17464 = distinct !DILexicalBlock(scope: !17465, file: !2491, line: 337, column: 2)
!17465 = distinct !DILexicalBlock(scope: !17457, file: !2491, line: 337, column: 2)
!17466 = !DILocation(line: 0, scope: !17457)
!17467 = !DILocation(line: 322, column: 19, scope: !17468)
!17468 = distinct !DILexicalBlock(scope: !17457, file: !2491, line: 322, column: 6)
!17469 = !DILocation(line: 322, column: 6, scope: !17457)
!17470 = !DILocation(line: 328, column: 26, scope: !17457)
!17471 = !DILocation(line: 333, column: 43, scope: !17457)
!17472 = !DILocation(line: 337, column: 2, scope: !17457)
!17473 = !DILocation(line: 338, column: 29, scope: !17463)
!17474 = !DILocation(line: 0, scope: !17463)
!17475 = !DILocation(line: 341, column: 23, scope: !17476)
!17476 = distinct !DILexicalBlock(scope: !17463, file: !2491, line: 341, column: 7)
!17477 = !DILocation(line: 341, column: 39, scope: !17476)
!17478 = !DILocation(line: 349, column: 1, scope: !17457)
!17479 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6344, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !2156)
!17480 = !DILocation(line: 1677, column: 9, scope: !17479)
!17481 = !DILocation(line: 1677, column: 2, scope: !17479)
!17482 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8757, file: !8757, line: 24, type: !6344, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !2156)
!17483 = !DILocation(line: 26, column: 9, scope: !17482)
!17484 = !DILocation(line: 26, column: 2, scope: !17482)
!17485 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2491, file: !2491, line: 364, type: !17486, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !17488)
!17486 = !DISubroutineType(types: !17487)
!17487 = !{!566, !16823}
!17488 = !{!17489, !17490}
!17489 = !DILocalVariable(name: "timeout", arg: 1, scope: !17485, file: !2491, line: 364, type: !16823)
!17490 = !DILocalVariable(name: "dt", scope: !17485, file: !2491, line: 366, type: !564)
!17491 = !DILocation(line: 0, scope: !17485)
!17492 = !DILocation(line: 368, column: 6, scope: !17485)
!17493 = !DILocation(line: 371, column: 10, scope: !17494)
!17494 = distinct !DILexicalBlock(scope: !17495, file: !2491, line: 370, column: 47)
!17495 = distinct !DILexicalBlock(scope: !17496, file: !2491, line: 370, column: 13)
!17496 = distinct !DILexicalBlock(scope: !17485, file: !2491, line: 368, column: 6)
!17497 = !DILocation(line: 371, column: 3, scope: !17494)
!17498 = !DILocation(line: 376, column: 58, scope: !17499)
!17499 = distinct !DILexicalBlock(scope: !17500, file: !2491, line: 376, column: 7)
!17500 = distinct !DILexicalBlock(scope: !17495, file: !2491, line: 372, column: 9)
!17501 = !DILocation(line: 376, column: 7, scope: !17500)
!17502 = !DILocation(line: 376, column: 43, scope: !17499)
!17503 = !DILocation(line: 377, column: 4, scope: !17504)
!17504 = distinct !DILexicalBlock(scope: !17499, file: !2491, line: 376, column: 64)
!17505 = !DILocation(line: 379, column: 10, scope: !17500)
!17506 = !DILocation(line: 379, column: 33, scope: !17500)
!17507 = !DILocation(line: 379, column: 31, scope: !17500)
!17508 = !DILocation(line: 379, column: 3, scope: !17500)
!17509 = !DILocation(line: 0, scope: !17496)
!17510 = !DILocation(line: 381, column: 1, scope: !17485)
!17511 = distinct !DISubprogram(name: "boot_banner", scope: !17512, file: !17512, line: 26, type: !3082, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3068, retainedNodes: !2156)
!17512 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17513 = !DILocation(line: 34, column: 2, scope: !17511)
!17514 = !DILocation(line: 36, column: 1, scope: !17511)
