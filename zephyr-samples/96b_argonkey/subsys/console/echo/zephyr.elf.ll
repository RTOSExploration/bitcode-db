; ModuleID = 'build/96b_argonkey/subsys/console/echo/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.tty_serial = type { %struct.device*, %struct.k_sem, i8*, i32, i16, i16, i32, %struct.k_sem, i8*, i32, i16, i16, i32 }
%struct.k_sem = type { %union.anon, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.z_heap_bucket = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.k_spinlock = type {}
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232704 to i8*), void (i8*)* inttoptr (i32 134230287 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232704 to i8*), void (i8*)* inttoptr (i32 134230267 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232704 to i8*), void (i8*)* inttoptr (i32 134230257 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232704 to i8*), void (i8*)* inttoptr (i32 134230357 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232704 to i8*), void (i8*)* inttoptr (i32 134230347 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232704 to i8*), void (i8*)* inttoptr (i32 134230337 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232704 to i8*), void (i8*)* inttoptr (i32 134230327 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232704 to i8*), void (i8*)* inttoptr (i32 134230317 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232704 to i8*), void (i8*)* inttoptr (i32 134230307 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232920 to i8*), void (i8*)* inttoptr (i32 134231637 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232704 to i8*), void (i8*)* inttoptr (i32 134230297 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232704 to i8*), void (i8*)* inttoptr (i32 134230277 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [62 x i8] c"You should see another line with instructions below. If not,\0A\00", align 1
@.str.1 = private unnamed_addr constant [65 x i8] c"the (interrupt-driven) console device doesn't work as expected:\0A\00", align 1
@prompt = internal constant [50 x i8] c"Start typing characters to see them echoed back\0D\0A\00", align 1, !dbg !25
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !111
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [39 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !120
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !175
@console_serial = internal global %struct.tty_serial zeroinitializer, align 4, !dbg !204
@console_txbuf = internal global [512 x i8] zeroinitializer, align 1, !dbg !301
@console_rxbuf = internal global [64 x i8] zeroinitializer, align 1, !dbg !295
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !351
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !359
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !500
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !536
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i32 0, i32 0), %struct.z_heap_bucket { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.37, i32 0, i32 0), %struct.z_heap_bucket { i32 285933602 } }], align 4, !dbg !546
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !551
@.str.36 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.37 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !571
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !763
@.str.38 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !725
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !708
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.38, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !681
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !697
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !727
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !740
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !742
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !744
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !746
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !748
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !750
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !752
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !754
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !756
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !758
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !768
@.str.40 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !795
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !890
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !879
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@debug_hook_in = internal unnamed_addr global i32 (i8)* null, align 4, !dbg !931
@debug_hook_out = internal unnamed_addr global i32 (i8)* @debug_hook_out_nop, align 4, !dbg !1082
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1032
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1074
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1076
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1025
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1092
@esc_state = internal global i32 0, align 4, !dbg !1117
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1125
@end = internal unnamed_addr global i8 0, align 1, !dbg !1127
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1121
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1123
@.str.63 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.62 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !788
@.str.67 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1133
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1414
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1384
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1370
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1312
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !786
@.str.1.68 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1416
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1388
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1386
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1326
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !784
@.str.2.69 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1429
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1392
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1390
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1335
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !782
@.str.3.70 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1431
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1396
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1394
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1344
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !780
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1433
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1400
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1398
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1350
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !778
@.str.5.71 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1435
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1404
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1402
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1356
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !776
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1437
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1408
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1406
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1362
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !774
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1439
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1412
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1410
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1368
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !790
@.str.77 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1441
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1677
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1627
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1679
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.77, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1618
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1620
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1629
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1637
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1660
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1663
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*) }, section ".intList", align 4, !dbg !1666
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !863
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1705
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1814
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1816
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1812
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1783
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1818
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1310
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.68, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1324
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.69, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1333
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.70, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1342
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1348
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.71, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1354
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1360
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1366
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1908
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1949
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1952
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1958
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1964
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2173
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2182
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2189
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2194
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.129 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.135, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.136, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.137, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.138, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.132, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.139, i32 0, i32 0)], align 4, !dbg !2220
@.str.133 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.134 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.135 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.136 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.137 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.138 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.132 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.139 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2332
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2345
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2368
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2476
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2479
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2481
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2187
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2184
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2483
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2519
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2051
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2517
@.str.209 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2522
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3247 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !3251, !srcloc !3252
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !3253, !srcloc !3254
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !3255, !srcloc !3256
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3259, !srcloc !3260
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !3261, !srcloc !3262
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !3263, !srcloc !3264
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !3265, !srcloc !3266
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !3267, !srcloc !3268
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !3269, !srcloc !3270
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !3271, !srcloc !3272
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !3273, !srcloc !3274
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !3275, !srcloc !3276
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !3277, !srcloc !3278
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !3279, !srcloc !3280
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !3281, !srcloc !3282
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !3283, !srcloc !3284
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !3285, !srcloc !3286
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3287, !srcloc !3288
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !3289, !srcloc !3290
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !3291, !srcloc !3292
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3293, !srcloc !3294
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !3295, !srcloc !3296
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3297, !srcloc !3298
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !3299, !srcloc !3300
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !3301, !srcloc !3302
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !3303, !srcloc !3304
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !3305, !srcloc !3308
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !3309, !srcloc !3310
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3311, !srcloc !3312
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3313, !srcloc !3314
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3315, !srcloc !3316
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3317, !srcloc !3318
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !3319, !srcloc !3320
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !3321, !srcloc !3322
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !3323, !srcloc !3324
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !3325, !srcloc !3326
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3327, !srcloc !3328
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3329, !srcloc !3330
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3331, !srcloc !3332
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3333, !srcloc !3334
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3335, !srcloc !3336
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3337, !srcloc !3338
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !3339, !srcloc !3340
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !3341, !srcloc !3342
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !3343, !srcloc !3344
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !3345, !srcloc !3346
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !3347, !srcloc !3348
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !3349, !srcloc !3350
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3351, !srcloc !3352
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !3353, !srcloc !3354
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3355, !srcloc !3356
  ret void, !dbg !3357
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3360 {
  %1 = tail call i32 @console_init() #25, !dbg !3364
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i32 0, i32 0)) #25, !dbg !3365
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3366
  %2 = tail call i32 @console_write(i8* noundef null, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @prompt, i32 0, i32 0), i32 noundef 49) #25, !dbg !3367
  br label %3, !dbg !3368

3:                                                ; preds = %11, %0
  %4 = tail call i32 @console_getchar() #25, !dbg !3369
  %5 = trunc i32 %4 to i8, !dbg !3369
  call void @llvm.dbg.value(metadata i8 %5, metadata !3362, metadata !DIExpression()), !dbg !3370
  %6 = tail call i32 @console_putchar(i8 noundef zeroext %5) #25, !dbg !3371
  %7 = and i32 %4, 255, !dbg !3372
  %8 = icmp eq i32 %7, 13, !dbg !3374
  br i1 %8, label %9, label %11, !dbg !3375

9:                                                ; preds = %3
  %10 = tail call i32 @console_putchar(i8 noundef zeroext 10) #25, !dbg !3376
  br label %11, !dbg !3378

11:                                               ; preds = %9, %3
  br label %3, !dbg !3369, !llvm.loop !3379
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3383, metadata !DIExpression()), !dbg !3384
  ret i32 0, !dbg !3385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3386 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3390, metadata !DIExpression()), !dbg !3391
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3392
  ret void, !dbg !3393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3394 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3397
  ret i8* %1, !dbg !3398
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3399 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3411, metadata !DIExpression()), !dbg !3420
  call void @llvm.dbg.value(metadata i8* %0, metadata !3410, metadata !DIExpression()), !dbg !3420
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3421
  ret void, !dbg !3423
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3428, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i8* %1, metadata !3429, metadata !DIExpression()), !dbg !3430
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3431
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3431
  ret i32 %4, !dbg !3432
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3433 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3445, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3442, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %1, metadata !3443, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %2, metadata !3444, metadata !DIExpression()), !dbg !3446
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3447
  ret void, !dbg !3448
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3449 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3453, metadata !DIExpression()), !dbg !3456
  call void @llvm.dbg.value(metadata i32 %1, metadata !3454, metadata !DIExpression()), !dbg !3456
  call void @llvm.dbg.value(metadata i32 0, metadata !3455, metadata !DIExpression()), !dbg !3456
  %3 = icmp eq i32 %1, 0, !dbg !3457
  br i1 %3, label %13, label %4, !dbg !3460

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3455, metadata !DIExpression()), !dbg !3456
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3461
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3463
  %8 = load i8, i8* %7, align 1, !dbg !3463
  %9 = zext i8 %8 to i32, !dbg !3463
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3461
  %11 = add nuw i32 %5, 1, !dbg !3464
  call void @llvm.dbg.value(metadata i32 %11, metadata !3455, metadata !DIExpression()), !dbg !3456
  %12 = icmp eq i32 %11, %1, !dbg !3457
  br i1 %12, label %13, label %4, !dbg !3460, !llvm.loop !3465

13:                                               ; preds = %4, %2
  ret void, !dbg !3467
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3468 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3472, metadata !DIExpression()), !dbg !3474
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3475
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3475
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3473, metadata !DIExpression()), !dbg !3476
  call void @llvm.va_start(i8* nonnull %3), !dbg !3477
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3478
  %5 = load i32, i32* %4, align 4, !dbg !3478
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3478
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3478
  call void @llvm.va_end(i8* nonnull %3), !dbg !3479
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3480
  ret void, !dbg !3480
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3481 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3485, metadata !DIExpression()), !dbg !3490
  call void @llvm.dbg.value(metadata i32 %1, metadata !3486, metadata !DIExpression()), !dbg !3490
  call void @llvm.dbg.value(metadata i8* %2, metadata !3487, metadata !DIExpression()), !dbg !3490
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3491
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3491
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3488, metadata !DIExpression()), !dbg !3492
  call void @llvm.va_start(i8* nonnull %5), !dbg !3493
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3494
  %7 = load i32, i32* %6, align 4, !dbg !3494
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3494
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3494
  call void @llvm.dbg.value(metadata i32 %9, metadata !3489, metadata !DIExpression()), !dbg !3490
  call void @llvm.va_end(i8* nonnull %5), !dbg !3495
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3496
  ret i32 %9, !dbg !3497
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3498 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3505, metadata !DIExpression()), !dbg !3512
  call void @llvm.dbg.value(metadata i8* %0, metadata !3502, metadata !DIExpression()), !dbg !3512
  call void @llvm.dbg.value(metadata i32 %1, metadata !3503, metadata !DIExpression()), !dbg !3512
  call void @llvm.dbg.value(metadata i8* %2, metadata !3504, metadata !DIExpression()), !dbg !3512
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3513
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3513
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3506, metadata !DIExpression()), !dbg !3514
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3515
  store i8* %0, i8** %7, align 4, !dbg !3515
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3515
  store i32 %1, i32* %8, align 4, !dbg !3515
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3515
  store i32 0, i32* %9, align 4, !dbg !3515
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3516
  %10 = load i32, i32* %9, align 4, !dbg !3517
  %11 = load i32, i32* %8, align 4, !dbg !3519
  %12 = icmp slt i32 %10, %11, !dbg !3520
  br i1 %12, label %13, label %15, !dbg !3521

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3522
  store i8 0, i8* %14, align 1, !dbg !3524
  br label %15, !dbg !3525

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3526
  ret i32 %10, !dbg !3527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3528 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3533, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3534, metadata !DIExpression()), !dbg !3535
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3536
  %4 = load i8*, i8** %3, align 4, !dbg !3536
  %5 = icmp eq i8* %4, null, !dbg !3538
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3539
  br i1 %5, label %12, label %8, !dbg !3540

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3541
  %10 = load i32, i32* %9, align 4, !dbg !3541
  %11 = icmp slt i32 %7, %10, !dbg !3542
  br i1 %11, label %15, label %12, !dbg !3543

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3544
  %14 = add nsw i32 %7, 1, !dbg !3546
  store i32 %14, i32* %13, align 4, !dbg !3546
  br label %25, !dbg !3547

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3548
  %17 = icmp eq i32 %7, %16, !dbg !3550
  br i1 %17, label %18, label %21, !dbg !3551

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3552
  store i32 %19, i32* %6, align 4, !dbg !3552
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3554
  store i8 0, i8* %20, align 1, !dbg !3555
  br label %25, !dbg !3556

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3557
  %23 = add nsw i32 %7, 1, !dbg !3559
  store i32 %23, i32* %6, align 4, !dbg !3559
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3560
  store i8 %22, i8* %24, align 1, !dbg !3561
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3562
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3563 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3573, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i8* %1, metadata !3574, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i8* %2, metadata !3575, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i8* %3, metadata !3576, metadata !DIExpression()), !dbg !3577
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3578
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3579
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3580
  unreachable, !dbg !3581
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3582 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3686
  ret %struct.k_thread* %1, !dbg !3687
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3688 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3693, metadata !DIExpression()), !dbg !3694
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3695, !srcloc !3697
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3698
  ret void, !dbg !3699
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3700 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3701, !srcloc !3703
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3704
  ret %struct.k_thread* %1, !dbg !3705
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3706 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3717, metadata !DIExpression()), !dbg !3721
  call void @llvm.dbg.value(metadata i8* %1, metadata !3718, metadata !DIExpression()), !dbg !3721
  %3 = icmp eq i8* %1, null, !dbg !3722
  br i1 %3, label %8, label %4, !dbg !3724

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3725
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3725
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3719, metadata !DIExpression()), !dbg !3721
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3726, !range !3727
  call void @llvm.dbg.value(metadata i32 %7, metadata !3720, metadata !DIExpression()), !dbg !3721
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3728
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3729
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3731 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3735, metadata !DIExpression()), !dbg !3739
  call void @llvm.dbg.value(metadata i8* %1, metadata !3736, metadata !DIExpression()), !dbg !3739
  call void @llvm.dbg.value(metadata i8* %1, metadata !3737, metadata !DIExpression()), !dbg !3739
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3740
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3738, metadata !DIExpression()), !dbg !3739
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3741
  %5 = ptrtoint i8* %4 to i32, !dbg !3742
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3742
  %7 = sub i32 %5, %6, !dbg !3742
  %8 = lshr i32 %7, 3, !dbg !3743
  ret i32 %8, !dbg !3744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3745 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3749, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i32 %1, metadata !3750, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i1 %2, metadata !3751, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3754
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3755
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3752, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3753, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3754
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3756
  %6 = bitcast i8* %5 to i16*, !dbg !3756
  %7 = load i16, i16* %6, align 2, !dbg !3756
  %8 = and i16 %7, -2, !dbg !3760
  %9 = zext i1 %2 to i16, !dbg !3760
  %10 = or i16 %8, %9, !dbg !3760
  store i16 %10, i16* %6, align 2, !dbg !3756
  ret void, !dbg !3761
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3762 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3766, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata i32 %1, metadata !3767, metadata !DIExpression()), !dbg !3768
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3769
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3771
  br i1 %4, label %7, label %5, !dbg !3772

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3773
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3775
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3776
  br label %7, !dbg !3777

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3778, !range !3780
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3781
  br i1 %9, label %13, label %10, !dbg !3782

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3783
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3785, !range !3780
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3786
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3787
  call void @llvm.dbg.value(metadata i32 %12, metadata !3767, metadata !DIExpression()), !dbg !3768
  br label %13, !dbg !3788

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3767, metadata !DIExpression()), !dbg !3768
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3789
  ret void, !dbg !3790
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3791 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3795, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.value(metadata i32 %1, metadata !3796, metadata !DIExpression()), !dbg !3797
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3798
  %4 = add i32 %3, %1, !dbg !3799
  ret i32 %4, !dbg !3800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3801 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3805, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.value(metadata i32 %1, metadata !3806, metadata !DIExpression()), !dbg !3807
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3808
  %4 = and i32 %3, 1, !dbg !3809
  %5 = icmp ne i32 %4, 0, !dbg !3808
  ret i1 %5, !dbg !3810
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3811 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3813, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i32 %1, metadata !3814, metadata !DIExpression()), !dbg !3818
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3819, !range !3820
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3821
  call void @llvm.dbg.value(metadata i32 %4, metadata !3815, metadata !DIExpression()), !dbg !3822
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3823
  ret void, !dbg !3824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3825 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3829, metadata !DIExpression()), !dbg !3834
  call void @llvm.dbg.value(metadata i32 %1, metadata !3830, metadata !DIExpression()), !dbg !3834
  call void @llvm.dbg.value(metadata i32 %2, metadata !3831, metadata !DIExpression()), !dbg !3834
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3835
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3836
  %6 = add i32 %5, %4, !dbg !3837
  call void @llvm.dbg.value(metadata i32 %6, metadata !3832, metadata !DIExpression()), !dbg !3834
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3838
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3839
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3840
  ret void, !dbg !3841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3842 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3844, metadata !DIExpression()), !dbg !3846
  call void @llvm.dbg.value(metadata i32 %1, metadata !3845, metadata !DIExpression()), !dbg !3846
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3847
  %4 = sub i32 %1, %3, !dbg !3848
  ret i32 %4, !dbg !3849
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3850 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3852, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %1, metadata !3853, metadata !DIExpression()), !dbg !3857
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3858, !range !3820
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3859
  call void @llvm.dbg.value(metadata i32 %4, metadata !3854, metadata !DIExpression()), !dbg !3860
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3861
  ret void, !dbg !3862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3863 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3867, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.value(metadata i32 %1, metadata !3868, metadata !DIExpression()), !dbg !3869
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3870
  %4 = lshr i32 %3, 1, !dbg !3871
  ret i32 %4, !dbg !3872
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3873 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3877, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata i32 %1, metadata !3878, metadata !DIExpression()), !dbg !3880
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3881
  %4 = add i32 %1, 1, !dbg !3882
  %5 = sub i32 %4, %3, !dbg !3883
  call void @llvm.dbg.value(metadata i32 %5, metadata !3879, metadata !DIExpression()), !dbg !3880
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3884, !range !3885
  %7 = sub nsw i32 31, %6, !dbg !3886
  ret i32 %7, !dbg !3887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3888 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3892, metadata !DIExpression()), !dbg !3901
  call void @llvm.dbg.value(metadata i32 %1, metadata !3893, metadata !DIExpression()), !dbg !3901
  call void @llvm.dbg.value(metadata i32 %2, metadata !3894, metadata !DIExpression()), !dbg !3901
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3895, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3901
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3902
  %5 = load i32, i32* %4, align 4, !dbg !3902
  %6 = icmp eq i32 %5, 0, !dbg !3903
  br i1 %6, label %7, label %12, !dbg !3904

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3905
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3907
  %10 = load i32, i32* %9, align 4, !dbg !3908
  %11 = or i32 %10, %8, !dbg !3908
  store i32 %11, i32* %9, align 4, !dbg !3908
  store i32 %1, i32* %4, align 4, !dbg !3909
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3910
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3911
  br label %14, !dbg !3912

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3897, metadata !DIExpression()), !dbg !3913
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3914, !range !3915
  call void @llvm.dbg.value(metadata i32 %13, metadata !3900, metadata !DIExpression()), !dbg !3913
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3916
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3917
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3918
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3919
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3921 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3923, metadata !DIExpression()), !dbg !3926
  call void @llvm.dbg.value(metadata i32 %1, metadata !3924, metadata !DIExpression()), !dbg !3926
  call void @llvm.dbg.value(metadata i32 %2, metadata !3925, metadata !DIExpression()), !dbg !3926
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3927
  ret void, !dbg !3928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3929 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3931, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata i32 %1, metadata !3932, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata i32 %2, metadata !3933, metadata !DIExpression()), !dbg !3934
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3935
  ret void, !dbg !3936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3937 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3939, metadata !DIExpression()), !dbg !3941
  call void @llvm.dbg.value(metadata i32 %1, metadata !3940, metadata !DIExpression()), !dbg !3941
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !3942
  ret i32 %3, !dbg !3943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3944 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3948, metadata !DIExpression()), !dbg !3953
  call void @llvm.dbg.value(metadata i32 %1, metadata !3949, metadata !DIExpression()), !dbg !3953
  call void @llvm.dbg.value(metadata i32 %2, metadata !3950, metadata !DIExpression()), !dbg !3953
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3954
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3951, metadata !DIExpression()), !dbg !3953
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3952, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3953
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3952, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3953
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3955
  call void @llvm.dbg.value(metadata i8* %5, metadata !3952, metadata !DIExpression()), !dbg !3953
  %6 = bitcast i8* %5 to i16*, !dbg !3956
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3959
  %8 = load i16, i16* %7, align 2, !dbg !3959
  %9 = zext i16 %8 to i32, !dbg !3959
  ret i32 %9, !dbg !3960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3961 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3965, metadata !DIExpression()), !dbg !3966
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3967
  ret %struct.chunk_unit_t* %2, !dbg !3968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3969 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3973, metadata !DIExpression()), !dbg !3979
  call void @llvm.dbg.value(metadata i32 %1, metadata !3974, metadata !DIExpression()), !dbg !3979
  call void @llvm.dbg.value(metadata i32 %2, metadata !3975, metadata !DIExpression()), !dbg !3979
  call void @llvm.dbg.value(metadata i32 %3, metadata !3976, metadata !DIExpression()), !dbg !3979
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3980
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3977, metadata !DIExpression()), !dbg !3979
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3978, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3979
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3981
  call void @llvm.dbg.value(metadata i8* %6, metadata !3978, metadata !DIExpression()), !dbg !3979
  %7 = trunc i32 %3 to i16, !dbg !3982
  %8 = bitcast i8* %6 to i16*, !dbg !3985
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3986
  store i16 %7, i16* %9, align 2, !dbg !3987
  ret void, !dbg !3988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3989 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3993, metadata !DIExpression()), !dbg !3994
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !3995
  ret i32 %2, !dbg !3996
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3997 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4001, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i32 %1, metadata !4002, metadata !DIExpression()), !dbg !4003
  %3 = add i32 %1, 4, !dbg !4004
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !4005
  ret i32 %4, !dbg !4006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !4007 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4011, metadata !DIExpression()), !dbg !4012
  %2 = add i32 %0, 7, !dbg !4013
  %3 = lshr i32 %2, 3, !dbg !4014
  ret i32 %3, !dbg !4015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4016 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4020, metadata !DIExpression()), !dbg !4023
  call void @llvm.dbg.value(metadata i32 %1, metadata !4021, metadata !DIExpression()), !dbg !4023
  call void @llvm.dbg.value(metadata i32 %2, metadata !4022, metadata !DIExpression()), !dbg !4023
  %4 = shl i32 %2, 1, !dbg !4024
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4025
  ret void, !dbg !4026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4027 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4029, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i32 %1, metadata !4030, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i32 %2, metadata !4031, metadata !DIExpression()), !dbg !4032
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4033
  ret void, !dbg !4034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4035 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4037, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata i32 %1, metadata !4038, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata i32 %2, metadata !4039, metadata !DIExpression()), !dbg !4045
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4046
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4040, metadata !DIExpression()), !dbg !4045
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4047
  %6 = icmp eq i32 %5, %1, !dbg !4048
  br i1 %6, label %7, label %14, !dbg !4049

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4050
  %9 = xor i32 %8, -1, !dbg !4052
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4053
  %11 = load i32, i32* %10, align 4, !dbg !4054
  %12 = and i32 %11, %9, !dbg !4054
  store i32 %12, i32* %10, align 4, !dbg !4054
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4055
  store i32 0, i32* %13, align 4, !dbg !4056
  br label %17, !dbg !4057

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4058
  call void @llvm.dbg.value(metadata i32 %15, metadata !4041, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %5, metadata !4044, metadata !DIExpression()), !dbg !4059
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4060
  store i32 %5, i32* %16, align 4, !dbg !4061
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4062
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4063
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4065 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4067, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.value(metadata i32 %1, metadata !4068, metadata !DIExpression()), !dbg !4069
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4070
  ret i32 %3, !dbg !4071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4072 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4076, metadata !DIExpression()), !dbg !4083
  call void @llvm.dbg.value(metadata i8* %1, metadata !4077, metadata !DIExpression()), !dbg !4083
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4084
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4084
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4078, metadata !DIExpression()), !dbg !4083
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4085
  call void @llvm.dbg.value(metadata i32 %5, metadata !4079, metadata !DIExpression()), !dbg !4083
  %6 = ptrtoint i8* %1 to i32, !dbg !4086
  call void @llvm.dbg.value(metadata i32 %6, metadata !4080, metadata !DIExpression()), !dbg !4083
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4087
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4087
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4088
  call void @llvm.dbg.value(metadata i32 %9, metadata !4081, metadata !DIExpression()), !dbg !4083
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4089
  %11 = shl i32 %10, 3, !dbg !4090
  call void @llvm.dbg.value(metadata i32 %11, metadata !4082, metadata !DIExpression()), !dbg !4083
  %12 = sub i32 %9, %6, !dbg !4091
  %13 = add i32 %12, %11, !dbg !4092
  ret i32 %13, !dbg !4093
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4094 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4098, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i32 %1, metadata !4099, metadata !DIExpression()), !dbg !4104
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4105
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4105
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4100, metadata !DIExpression()), !dbg !4104
  %5 = icmp eq i32 %1, 0, !dbg !4106
  br i1 %5, label %19, label %6, !dbg !4108

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4109
  br i1 %7, label %19, label %8, !dbg !4110

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4111, !range !3727
  call void @llvm.dbg.value(metadata i32 %9, metadata !4102, metadata !DIExpression()), !dbg !4104
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4112
  call void @llvm.dbg.value(metadata i32 %10, metadata !4103, metadata !DIExpression()), !dbg !4104
  %11 = icmp eq i32 %10, 0, !dbg !4113
  br i1 %11, label %19, label %12, !dbg !4115

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4116
  %14 = icmp ugt i32 %13, %9, !dbg !4118
  br i1 %14, label %15, label %17, !dbg !4119

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4120
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4122
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4123
  br label %17, !dbg !4124

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4125
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4126
  call void @llvm.dbg.value(metadata i8* %18, metadata !4101, metadata !DIExpression()), !dbg !4104
  br label %19, !dbg !4127

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4104
  ret i8* %20, !dbg !4128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4129 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4133, metadata !DIExpression()), !dbg !4135
  call void @llvm.dbg.value(metadata i32 %1, metadata !4134, metadata !DIExpression()), !dbg !4135
  %3 = lshr i32 %1, 3, !dbg !4136
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4137
  %5 = load i32, i32* %4, align 4, !dbg !4137
  %6 = icmp uge i32 %3, %5, !dbg !4138
  ret i1 %6, !dbg !4139
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4140 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4144, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.value(metadata i32 %1, metadata !4145, metadata !DIExpression()), !dbg !4159
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4160
  call void @llvm.dbg.value(metadata i32 %3, metadata !4146, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4147, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4159
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4161
  %5 = load i32, i32* %4, align 4, !dbg !4161
  %6 = icmp eq i32 %5, 0, !dbg !4162
  br i1 %6, label %19, label %7, !dbg !4163

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4164
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4165
  call void @llvm.dbg.value(metadata i32 %9, metadata !4151, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata i32 %8, metadata !4152, metadata !DIExpression()), !dbg !4166
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4167
  %11 = icmp ult i32 %10, %1, !dbg !4169
  br i1 %11, label %13, label %12, !dbg !4170

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4171
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4173
  store i32 %14, i32* %4, align 4, !dbg !4174
  %15 = add nsw i32 %9, -1, !dbg !4175
  call void @llvm.dbg.value(metadata i32 %15, metadata !4151, metadata !DIExpression()), !dbg !4165
  %16 = icmp eq i32 %15, 0, !dbg !4175
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4176
  br i1 %18, label %19, label %7, !dbg !4176, !llvm.loop !4177

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4180
  %21 = load i32, i32* %20, align 4, !dbg !4180
  %22 = add nsw i32 %3, 1, !dbg !4181
  %23 = shl nsw i32 -1, %22, !dbg !4181
  %24 = and i32 %21, %23, !dbg !4182
  call void @llvm.dbg.value(metadata i32 %24, metadata !4154, metadata !DIExpression()), !dbg !4159
  %25 = icmp eq i32 %24, 0, !dbg !4183
  br i1 %25, label %30, label %26, !dbg !4184

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4185, !range !3885
  call void @llvm.dbg.value(metadata i32 %27, metadata !4155, metadata !DIExpression()), !dbg !4186
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4187
  %29 = load i32, i32* %28, align 4, !dbg !4187
  call void @llvm.dbg.value(metadata i32 %29, metadata !4158, metadata !DIExpression()), !dbg !4186
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4188
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4159
  ret i32 %31, !dbg !4189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4190 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4192, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %1, metadata !4193, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.value(metadata i32 %2, metadata !4194, metadata !DIExpression()), !dbg !4198
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4199
  call void @llvm.dbg.value(metadata i32 %4, metadata !4195, metadata !DIExpression()), !dbg !4198
  %5 = sub i32 %2, %1, !dbg !4200
  call void @llvm.dbg.value(metadata i32 %5, metadata !4196, metadata !DIExpression()), !dbg !4198
  %6 = sub i32 %4, %5, !dbg !4201
  call void @llvm.dbg.value(metadata i32 %6, metadata !4197, metadata !DIExpression()), !dbg !4198
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4202
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4203
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4204
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4205
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4206
  ret void, !dbg !4207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4208 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4212, metadata !DIExpression()), !dbg !4216
  call void @llvm.dbg.value(metadata i32 %1, metadata !4213, metadata !DIExpression()), !dbg !4216
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4217
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4214, metadata !DIExpression()), !dbg !4216
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4218
  call void @llvm.dbg.value(metadata i8* %4, metadata !4215, metadata !DIExpression()), !dbg !4216
  ret i8* %4, !dbg !4219
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4220 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4224, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %1, metadata !4225, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %2, metadata !4226, metadata !DIExpression()), !dbg !4236
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4237
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4237
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4227, metadata !DIExpression()), !dbg !4236
  %6 = sub i32 0, %1, !dbg !4238
  %7 = and i32 %6, %1, !dbg !4239
  call void @llvm.dbg.value(metadata i32 %7, metadata !4229, metadata !DIExpression()), !dbg !4236
  %8 = icmp eq i32 %7, %1, !dbg !4240
  br i1 %8, label %13, label %9, !dbg !4242

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4243
  call void @llvm.dbg.value(metadata i32 %10, metadata !4225, metadata !DIExpression()), !dbg !4236
  %11 = icmp ult i32 %7, 4, !dbg !4245
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4245
  br label %17, !dbg !4245

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4246
  br i1 %14, label %15, label %17, !dbg !4249

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4250
  br label %57, !dbg !4252

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4236
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4253
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4225, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %19, metadata !4228, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %18, metadata !4229, metadata !DIExpression()), !dbg !4236
  %21 = icmp eq i32 %2, 0, !dbg !4254
  br i1 %21, label %57, label %22, !dbg !4256

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4257
  br i1 %23, label %57, label %24, !dbg !4258

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4259
  %26 = add i32 %25, %20, !dbg !4260
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4261, !range !3727
  call void @llvm.dbg.value(metadata i32 %27, metadata !4230, metadata !DIExpression()), !dbg !4236
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4262
  call void @llvm.dbg.value(metadata i32 %28, metadata !4231, metadata !DIExpression()), !dbg !4236
  %29 = icmp eq i32 %28, 0, !dbg !4263
  br i1 %29, label %57, label %30, !dbg !4265

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4266
  call void @llvm.dbg.value(metadata i8* %31, metadata !4232, metadata !DIExpression()), !dbg !4236
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4267
  %33 = ptrtoint i8* %32 to i32, !dbg !4267
  %34 = add i32 %20, -1, !dbg !4267
  %35 = add i32 %34, %33, !dbg !4267
  %36 = sub i32 0, %20, !dbg !4267
  %37 = and i32 %35, %36, !dbg !4267
  %38 = inttoptr i32 %37 to i8*, !dbg !4268
  %39 = sub i32 0, %18, !dbg !4269
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4269
  call void @llvm.dbg.value(metadata i8* %40, metadata !4232, metadata !DIExpression()), !dbg !4236
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4270
  %42 = ptrtoint i8* %41 to i32, !dbg !4270
  %43 = add i32 %42, 7, !dbg !4270
  %44 = and i32 %43, -8, !dbg !4270
  call void @llvm.dbg.value(metadata i32 %44, metadata !4233, metadata !DIExpression()), !dbg !4236
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4271
  call void @llvm.dbg.value(metadata i32 %45, metadata !4234, metadata !DIExpression()), !dbg !4236
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4272
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4273
  %48 = sub i32 %44, %47, !dbg !4273
  %49 = ashr exact i32 %48, 3, !dbg !4273
  call void @llvm.dbg.value(metadata i32 %49, metadata !4235, metadata !DIExpression()), !dbg !4236
  %50 = icmp ugt i32 %45, %28, !dbg !4274
  br i1 %50, label %51, label %52, !dbg !4276

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4277
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4279
  br label %52, !dbg !4280

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4281
  %54 = icmp ugt i32 %53, %49, !dbg !4283
  br i1 %54, label %55, label %56, !dbg !4284

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4285
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4287
  br label %56, !dbg !4288

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4289
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4236
  ret i8* %58, !dbg !4290
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4291 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4295, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata i8* %1, metadata !4296, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata i32 %2, metadata !4297, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata i32 %3, metadata !4298, metadata !DIExpression()), !dbg !4314
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4315
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4315
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4299, metadata !DIExpression()), !dbg !4314
  %7 = icmp eq i8* %1, null, !dbg !4316
  br i1 %7, label %8, label %10, !dbg !4318

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4319
  br label %59, !dbg !4321

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4322
  br i1 %11, label %12, label %13, !dbg !4324

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4325
  br label %59, !dbg !4327

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4328
  br i1 %14, label %59, label %15, !dbg !4330

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4331, !range !3727
  call void @llvm.dbg.value(metadata i32 %16, metadata !4300, metadata !DIExpression()), !dbg !4314
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4332
  call void @llvm.dbg.value(metadata i32 %17, metadata !4301, metadata !DIExpression()), !dbg !4314
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4333
  %19 = ptrtoint i8* %1 to i32, !dbg !4334
  %20 = ptrtoint i8* %18 to i32, !dbg !4334
  %21 = sub i32 %19, %20, !dbg !4334
  call void @llvm.dbg.value(metadata i32 %21, metadata !4302, metadata !DIExpression()), !dbg !4314
  %22 = add i32 %21, %3, !dbg !4335
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4336
  call void @llvm.dbg.value(metadata i32 %23, metadata !4303, metadata !DIExpression()), !dbg !4314
  %24 = icmp eq i32 %2, 0, !dbg !4337
  br i1 %24, label %29, label %25, !dbg !4338

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4339
  %27 = and i32 %26, %19, !dbg !4340
  %28 = icmp eq i32 %27, 0, !dbg !4340
  br i1 %28, label %29, label %49, !dbg !4341

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4342
  %31 = icmp eq i32 %23, %30, !dbg !4343
  br i1 %31, label %59, label %32, !dbg !4344

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4345
  br i1 %33, label %34, label %36, !dbg !4346

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4347
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !4349
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4350
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !4351
  br label %59, !dbg !4352

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4353
  br i1 %37, label %49, label %38, !dbg !4354

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4355
  %40 = add i32 %39, %30, !dbg !4356
  %41 = icmp ult i32 %40, %23, !dbg !4357
  br i1 %41, label %49, label %42, !dbg !4358

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4359
  call void @llvm.dbg.value(metadata i32 %43, metadata !4304, metadata !DIExpression()), !dbg !4360
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4361
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4362
  %45 = icmp ult i32 %43, %44, !dbg !4364
  br i1 %45, label %46, label %48, !dbg !4365

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4366
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !4368
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !4369
  br label %48, !dbg !4370

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4371
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4372
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4373
  call void @llvm.dbg.value(metadata i8* %50, metadata !4310, metadata !DIExpression()), !dbg !4314
  %51 = icmp eq i8* %50, null, !dbg !4374
  br i1 %51, label %59, label %52, !dbg !4375

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4376, !range !3820
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4377
  %55 = sub i32 %54, %21, !dbg !4378
  call void @llvm.dbg.value(metadata i32 %55, metadata !4311, metadata !DIExpression()), !dbg !4379
  %56 = icmp ult i32 %55, %3, !dbg !4380
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4380
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #25, !dbg !4381
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4382
  br label %59, !dbg !4383

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4314
  ret i8* %60, !dbg !4384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4385 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4389, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i32 %1, metadata !4390, metadata !DIExpression()), !dbg !4391
  %3 = shl i32 %1, 3, !dbg !4392
  %4 = add i32 %3, -4, !dbg !4393
  ret i32 %4, !dbg !4394
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4395 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4399, metadata !DIExpression()), !dbg !4410
  call void @llvm.dbg.value(metadata i8* %1, metadata !4400, metadata !DIExpression()), !dbg !4410
  call void @llvm.dbg.value(metadata i32 %2, metadata !4401, metadata !DIExpression()), !dbg !4410
  %4 = add i32 %2, -4, !dbg !4411
  call void @llvm.dbg.value(metadata i32 %4, metadata !4401, metadata !DIExpression()), !dbg !4410
  %5 = ptrtoint i8* %1 to i32, !dbg !4412
  %6 = add i32 %5, 7, !dbg !4412
  %7 = and i32 %6, -8, !dbg !4412
  call void @llvm.dbg.value(metadata i32 %7, metadata !4402, metadata !DIExpression()), !dbg !4410
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4413
  %9 = ptrtoint i8* %8 to i32, !dbg !4413
  %10 = and i32 %9, -8, !dbg !4413
  call void @llvm.dbg.value(metadata i32 %10, metadata !4403, metadata !DIExpression()), !dbg !4410
  %11 = sub i32 %10, %7, !dbg !4414
  %12 = lshr exact i32 %11, 3, !dbg !4415
  call void @llvm.dbg.value(metadata i32 %12, metadata !4404, metadata !DIExpression()), !dbg !4410
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4416
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4405, metadata !DIExpression()), !dbg !4410
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4417
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4418
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4419
  store i32 %12, i32* %15, align 8, !dbg !4420
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4421
  store i32 0, i32* %16, align 4, !dbg !4422
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4423
  call void @llvm.dbg.value(metadata i32 %17, metadata !4406, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4410
  %18 = shl i32 %17, 2, !dbg !4424
  %19 = add i32 %18, 20, !dbg !4425
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !4426
  call void @llvm.dbg.value(metadata i32 %20, metadata !4407, metadata !DIExpression()), !dbg !4410
  call void @llvm.dbg.value(metadata i32 0, metadata !4408, metadata !DIExpression()), !dbg !4427
  %21 = icmp slt i32 %17, 0, !dbg !4428
  br i1 %21, label %22, label %24, !dbg !4430

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !4431
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4432
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4433
  %23 = sub i32 %12, %20, !dbg !4434
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !4435
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !4436
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4437
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !4438
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4439
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !4440
  ret void, !dbg !4441

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4408, metadata !DIExpression()), !dbg !4427
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4442
  store i32 0, i32* %26, align 4, !dbg !4444
  %27 = add nuw i32 %25, 1, !dbg !4445
  call void @llvm.dbg.value(metadata i32 %27, metadata !4408, metadata !DIExpression()), !dbg !4427
  %28 = icmp eq i32 %25, %17, !dbg !4428
  br i1 %28, label %22, label %24, !dbg !4430, !llvm.loop !4446
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4448 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4461, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4458, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i8* %1, metadata !4459, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i8* %2, metadata !4460, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i32 %4, metadata !4462, metadata !DIExpression()), !dbg !4589
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4590
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4590
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4463, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i32 0, metadata !4467, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i1 undef, metadata !4469, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4589
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4592

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4592

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4593
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4461, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i8* %30, metadata !4460, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i32 %29, metadata !4467, metadata !DIExpression()), !dbg !4589
  %31 = load i8, i8* %30, align 1, !dbg !4594
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4592

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4594
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4595
  call void @llvm.dbg.value(metadata i8* %34, metadata !4460, metadata !DIExpression()), !dbg !4589
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4595
  call void @llvm.dbg.value(metadata i32 %35, metadata !4471, metadata !DIExpression()), !dbg !4596
  %36 = icmp slt i32 %35, 0, !dbg !4597
  %37 = add i32 %29, 1, !dbg !4595
  call void @llvm.dbg.value(metadata i32 undef, metadata !4467, metadata !DIExpression()), !dbg !4589
  br i1 %36, label %365, label %28, !llvm.loop !4599

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4601
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4476, metadata !DIExpression()), !dbg !4602
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4602
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4521, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4524, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.value(metadata i8* %30, metadata !4527, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.value(metadata i32 -1, metadata !4528, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.value(metadata i32 -1, metadata !4529, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.value(metadata i8* null, metadata !4530, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.value(metadata i8* %14, metadata !4531, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.value(metadata i8 0, metadata !4532, metadata !DIExpression()), !dbg !4603
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4604
  call void @llvm.dbg.value(metadata i8* %39, metadata !4460, metadata !DIExpression()), !dbg !4589
  %40 = load i24, i24* %15, align 8, !dbg !4605
  %41 = and i24 %40, 256, !dbg !4605
  %42 = icmp eq i24 %41, 0, !dbg !4605
  br i1 %42, label %51, label %43, !dbg !4607

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4608
  call void @llvm.dbg.value(metadata i8* %44, metadata !4461, metadata !DIExpression()), !dbg !4589
  %45 = bitcast i8* %27 to i32*, !dbg !4608
  %46 = load i32, i32* %45, align 4, !dbg !4608
  call void @llvm.dbg.value(metadata i32 %46, metadata !4528, metadata !DIExpression()), !dbg !4603
  %47 = icmp slt i32 %46, 0, !dbg !4610
  br i1 %47, label %48, label %56, !dbg !4612

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4613
  store i24 %49, i24* %15, align 8, !dbg !4613
  %50 = sub nsw i32 0, %46, !dbg !4615
  call void @llvm.dbg.value(metadata i32 %50, metadata !4528, metadata !DIExpression()), !dbg !4603
  br label %56, !dbg !4616

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4617
  %53 = icmp eq i24 %52, 0, !dbg !4617
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4619
  br label %56, !dbg !4619

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4620
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4603
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4461, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i32 %58, metadata !4528, metadata !DIExpression()), !dbg !4603
  %60 = and i24 %57, 1024, !dbg !4620
  %61 = icmp eq i24 %60, 0, !dbg !4620
  br i1 %61, label %69, label %62, !dbg !4621

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4622
  call void @llvm.dbg.value(metadata i8* %63, metadata !4461, metadata !DIExpression()), !dbg !4589
  %64 = bitcast i8* %59 to i32*, !dbg !4622
  %65 = load i32, i32* %64, align 4, !dbg !4622
  call void @llvm.dbg.value(metadata i32 %65, metadata !4533, metadata !DIExpression()), !dbg !4623
  %66 = icmp slt i32 %65, 0, !dbg !4624
  br i1 %66, label %67, label %74, !dbg !4626

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4627
  store i24 %68, i24* %15, align 8, !dbg !4627
  br label %74, !dbg !4629

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4630
  %71 = icmp eq i24 %70, 0, !dbg !4630
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4632
  br label %74, !dbg !4632

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4633
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4603
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4603
  call void @llvm.dbg.value(metadata i8* %77, metadata !4461, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i32 %76, metadata !4529, metadata !DIExpression()), !dbg !4603
  store i32 0, i32* %16, align 4, !dbg !4634
  store i32 0, i32* %17, align 8, !dbg !4635
  %78 = lshr i24 %75, 16, !dbg !4633
  call void @llvm.dbg.value(metadata i24 %78, metadata !4536, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4603
  %79 = lshr i24 %75, 11, !dbg !4636
  %80 = and i24 %79, 15, !dbg !4636
  %81 = zext i24 %80 to i32, !dbg !4636
  call void @llvm.dbg.value(metadata i32 %81, metadata !4537, metadata !DIExpression()), !dbg !4603
  %82 = trunc i24 %78 to i3, !dbg !4637
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4637

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4638

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4641
  call void @llvm.dbg.value(metadata i8* %85, metadata !4461, metadata !DIExpression()), !dbg !4589
  %86 = bitcast i8* %77 to i32*, !dbg !4641
  %87 = load i32, i32* %86, align 4, !dbg !4641
  %88 = sext i32 %87 to i64, !dbg !4641
  store i64 %88, i64* %20, align 8, !dbg !4643
  br label %115, !dbg !4644

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4645
  call void @llvm.dbg.value(metadata i8* %90, metadata !4461, metadata !DIExpression()), !dbg !4589
  %91 = bitcast i8* %77 to i32*, !dbg !4645
  %92 = load i32, i32* %91, align 4, !dbg !4645
  %93 = sext i32 %92 to i64, !dbg !4645
  store i64 %93, i64* %20, align 8, !dbg !4648
  br label %115, !dbg !4649

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4650
  %96 = add i32 %95, 7, !dbg !4650
  %97 = and i32 %96, -8, !dbg !4650
  %98 = inttoptr i32 %97 to i8*, !dbg !4650
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4650
  call void @llvm.dbg.value(metadata i8* %99, metadata !4461, metadata !DIExpression()), !dbg !4589
  %100 = inttoptr i32 %97 to i64*, !dbg !4650
  %101 = load i64, i64* %100, align 8, !dbg !4650
  store i64 %101, i64* %20, align 8, !dbg !4651
  br label %115, !dbg !4652

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4653
  %104 = add i32 %103, 7, !dbg !4653
  %105 = and i32 %104, -8, !dbg !4653
  %106 = inttoptr i32 %105 to i8*, !dbg !4653
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4653
  call void @llvm.dbg.value(metadata i8* %107, metadata !4461, metadata !DIExpression()), !dbg !4589
  %108 = inttoptr i32 %105 to i64*, !dbg !4653
  %109 = load i64, i64* %108, align 8, !dbg !4653
  store i64 %109, i64* %20, align 8, !dbg !4654
  br label %115, !dbg !4655

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4656
  call void @llvm.dbg.value(metadata i8* %111, metadata !4461, metadata !DIExpression()), !dbg !4589
  %112 = bitcast i8* %77 to i32*, !dbg !4656
  %113 = load i32, i32* %112, align 4, !dbg !4656
  %114 = sext i32 %113 to i64, !dbg !4657
  store i64 %114, i64* %20, align 8, !dbg !4658
  br label %115, !dbg !4659

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4660
  call void @llvm.dbg.value(metadata i8* %117, metadata !4461, metadata !DIExpression()), !dbg !4589
  %118 = trunc i24 %79 to i4, !dbg !4661
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4661

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4662
  %121 = ashr exact i64 %120, 56, !dbg !4662
  store i64 %121, i64* %20, align 8, !dbg !4665
  br label %177, !dbg !4666

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4667
  %124 = ashr exact i64 %123, 48, !dbg !4667
  store i64 %124, i64* %20, align 8, !dbg !4670
  br label %177, !dbg !4671

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4672

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4675
  call void @llvm.dbg.value(metadata i8* %127, metadata !4461, metadata !DIExpression()), !dbg !4589
  %128 = bitcast i8* %77 to i32*, !dbg !4675
  %129 = load i32, i32* %128, align 4, !dbg !4675
  %130 = zext i32 %129 to i64, !dbg !4675
  store i64 %130, i64* %20, align 8, !dbg !4677
  br label %157, !dbg !4678

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4679
  call void @llvm.dbg.value(metadata i8* %132, metadata !4461, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i8* %132, metadata !4461, metadata !DIExpression()), !dbg !4589
  %133 = bitcast i8* %77 to i32*, !dbg !4679
  %134 = load i32, i32* %133, align 4, !dbg !4679
  %135 = zext i32 %134 to i64, !dbg !4679
  store i64 %135, i64* %20, align 8, !dbg !4679
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4681
  %138 = add i32 %137, 7, !dbg !4681
  %139 = and i32 %138, -8, !dbg !4681
  %140 = inttoptr i32 %139 to i8*, !dbg !4681
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4681
  call void @llvm.dbg.value(metadata i8* %141, metadata !4461, metadata !DIExpression()), !dbg !4589
  %142 = inttoptr i32 %139 to i64*, !dbg !4681
  %143 = load i64, i64* %142, align 8, !dbg !4681
  store i64 %143, i64* %20, align 8, !dbg !4682
  br label %157, !dbg !4683

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4684
  %146 = add i32 %145, 7, !dbg !4684
  %147 = and i32 %146, -8, !dbg !4684
  %148 = inttoptr i32 %147 to i8*, !dbg !4684
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4684
  call void @llvm.dbg.value(metadata i8* %149, metadata !4461, metadata !DIExpression()), !dbg !4589
  %150 = inttoptr i32 %147 to i64*, !dbg !4684
  %151 = load i64, i64* %150, align 8, !dbg !4684
  store i64 %151, i64* %20, align 8, !dbg !4685
  br label %157, !dbg !4686

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4687
  call void @llvm.dbg.value(metadata i8* %153, metadata !4461, metadata !DIExpression()), !dbg !4589
  %154 = bitcast i8* %77 to i32*, !dbg !4687
  %155 = load i32, i32* %154, align 4, !dbg !4687
  %156 = zext i32 %155 to i64, !dbg !4688
  store i64 %156, i64* %20, align 8, !dbg !4689
  br label %157, !dbg !4690

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4691
  call void @llvm.dbg.value(metadata i8* %159, metadata !4461, metadata !DIExpression()), !dbg !4589
  %160 = trunc i24 %79 to i4, !dbg !4692
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4692

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4693
  store i64 %162, i64* %20, align 8, !dbg !4696
  br label %177, !dbg !4697

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4698
  store i64 %164, i64* %20, align 8, !dbg !4701
  br label %177, !dbg !4702

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4703
  %167 = add i32 %166, 7, !dbg !4703
  %168 = and i32 %167, -8, !dbg !4703
  %169 = inttoptr i32 %168 to i8*, !dbg !4703
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4703
  call void @llvm.dbg.value(metadata i8* %170, metadata !4461, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i8* %170, metadata !4461, metadata !DIExpression()), !dbg !4589
  %171 = inttoptr i32 %168 to double*, !dbg !4703
  %172 = load double, double* %171, align 8, !dbg !4703
  store double %172, double* %19, align 8, !dbg !4703
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4707
  call void @llvm.dbg.value(metadata i8* %174, metadata !4461, metadata !DIExpression()), !dbg !4589
  %175 = bitcast i8* %77 to i8**, !dbg !4707
  %176 = load i8*, i8** %175, align 4, !dbg !4707
  store i8* %176, i8** %18, align 8, !dbg !4710
  br label %177, !dbg !4711

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4603
  call void @llvm.dbg.value(metadata i8* %178, metadata !4461, metadata !DIExpression()), !dbg !4589
  %179 = and i24 %75, 3, !dbg !4712
  %180 = icmp eq i24 %179, 0, !dbg !4712
  br i1 %180, label %185, label %181, !dbg !4712

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !4713
  call void @llvm.dbg.value(metadata i32 %182, metadata !4538, metadata !DIExpression()), !dbg !4714
  %183 = icmp slt i32 %182, 0, !dbg !4715
  %184 = add i32 %182, %29, !dbg !4713
  call void @llvm.dbg.value(metadata i32 undef, metadata !4467, metadata !DIExpression()), !dbg !4589
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4717
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4718

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4719
  call void @llvm.dbg.value(metadata i32 %188, metadata !4542, metadata !DIExpression()), !dbg !4720
  %189 = icmp slt i32 %188, 0, !dbg !4721
  %190 = add i32 %29, 1, !dbg !4719
  call void @llvm.dbg.value(metadata i32 undef, metadata !4467, metadata !DIExpression()), !dbg !4589
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4723
  call void @llvm.dbg.value(metadata i8* %192, metadata !4530, metadata !DIExpression()), !dbg !4603
  %193 = icmp sgt i32 %76, -1, !dbg !4724
  br i1 %193, label %194, label %196, !dbg !4726

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4727
  call void @llvm.dbg.value(metadata i32 %195, metadata !4545, metadata !DIExpression()), !dbg !4729
  br label %241, !dbg !4730

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4731
  call void @llvm.dbg.value(metadata i32 %197, metadata !4545, metadata !DIExpression()), !dbg !4729
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4530, metadata !DIExpression()), !dbg !4603
  %199 = load i64, i64* %20, align 8, !dbg !4733
  %200 = trunc i64 %199 to i8, !dbg !4734
  store i8 %200, i8* %10, align 1, !dbg !4735
  call void @llvm.dbg.value(metadata i8* %23, metadata !4531, metadata !DIExpression()), !dbg !4603
  br label %245, !dbg !4736

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4737
  %203 = icmp eq i24 %202, 0, !dbg !4737
  %204 = trunc i24 %75 to i8, !dbg !4739
  %205 = shl i8 %204, 1, !dbg !4739
  %206 = and i8 %205, 32, !dbg !4739
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4739
  call void @llvm.dbg.value(metadata i8 %207, metadata !4532, metadata !DIExpression()), !dbg !4603
  %208 = load i64, i64* %20, align 8, !dbg !4740
  call void @llvm.dbg.value(metadata i64 %208, metadata !4468, metadata !DIExpression()), !dbg !4589
  %209 = icmp slt i64 %208, 0, !dbg !4741
  br i1 %209, label %210, label %212, !dbg !4743

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4532, metadata !DIExpression()), !dbg !4603
  %211 = sub nsw i64 0, %208, !dbg !4744
  store i64 %211, i64* %20, align 8, !dbg !4746
  br label %212, !dbg !4747

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4603
  call void @llvm.dbg.value(metadata i8 %213, metadata !4532, metadata !DIExpression()), !dbg !4603
  %214 = load i64, i64* %20, align 8, !dbg !4748
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4749
  call void @llvm.dbg.value(metadata i8* %215, metadata !4530, metadata !DIExpression()), !dbg !4603
  br label %216, !dbg !4750

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4751
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4752
  call void @llvm.dbg.value(metadata i8* %218, metadata !4530, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.value(metadata i8 %217, metadata !4532, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.label(metadata !4588), !dbg !4753
  %219 = icmp sgt i32 %76, -1, !dbg !4754
  br i1 %219, label %222, label %220, !dbg !4755

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4756
  br label %245, !dbg !4755

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4758
  %224 = sub i32 %22, %223, !dbg !4758
  call void @llvm.dbg.value(metadata i32 %224, metadata !4547, metadata !DIExpression()), !dbg !4759
  %225 = load i24, i24* %15, align 8, !dbg !4760
  %226 = and i24 %225, -65, !dbg !4760
  store i24 %226, i24* %15, align 8, !dbg !4760
  %227 = icmp ugt i32 %76, %224, !dbg !4761
  br i1 %227, label %228, label %245, !dbg !4763

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4764
  store i32 %229, i32* %16, align 4, !dbg !4766
  br label %245, !dbg !4767

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4768
  %232 = icmp eq i8* %231, null, !dbg !4770
  br i1 %232, label %245, label %233, !dbg !4771

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4772
  %235 = zext i32 %234 to i64, !dbg !4772
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4774
  call void @llvm.dbg.value(metadata i8* %236, metadata !4530, metadata !DIExpression()), !dbg !4603
  %237 = load i24, i24* %15, align 8, !dbg !4775
  %238 = or i24 %237, 1048576, !dbg !4775
  store i24 %238, i24* %15, align 8, !dbg !4775
  store i8 120, i8* %21, align 1, !dbg !4776
  br label %216, !dbg !4777

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4778
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !4781
  br label %363, !dbg !4782

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4783
  call void @llvm.dbg.value(metadata i32 %242, metadata !4545, metadata !DIExpression()), !dbg !4729
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4784
  call void @llvm.dbg.value(metadata i32 -1, metadata !4529, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.value(metadata i32 %29, metadata !4467, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i8* %192, metadata !4530, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.value(metadata i8* %243, metadata !4531, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.value(metadata i8 0, metadata !4532, metadata !DIExpression()), !dbg !4603
  %244 = icmp eq i8* %192, null, !dbg !4785
  br i1 %244, label %363, label %245, !dbg !4787, !llvm.loop !4599

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4756
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4603
  call void @llvm.dbg.value(metadata i32 0, metadata !4551, metadata !DIExpression()), !dbg !4603
  %250 = zext i8 %249 to i32, !dbg !4788
  %251 = icmp eq i8 %249, 0, !dbg !4790
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4603
  call void @llvm.dbg.value(metadata i32 undef, metadata !4550, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4603
  call void @llvm.dbg.value(metadata i32 undef, metadata !4550, metadata !DIExpression()), !dbg !4603
  %252 = icmp sgt i32 %58, 0, !dbg !4791
  br i1 %252, label %253, label %302, !dbg !4792

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4756
  %255 = icmp eq i24 %254, 0, !dbg !4756
  %256 = ptrtoint i8* %248 to i32, !dbg !4793
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4603
  %257 = ptrtoint i8* %247 to i32, !dbg !4793
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4603
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4603
  %258 = xor i1 %251, true, !dbg !4794
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4603
  %259 = sext i1 %258 to i32, !dbg !4794
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4603
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4603
  %260 = lshr i24 %246, 19, !dbg !4795
  %261 = and i24 %260, 1, !dbg !4795
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4795
  %263 = zext i24 %262 to i32, !dbg !4795
  %264 = add i32 %257, %259, !dbg !4795
  %265 = add i32 %256, %263, !dbg !4795
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4603
  %266 = and i24 %246, 4194304, !dbg !4796
  %267 = icmp eq i24 %266, 0, !dbg !4796
  %268 = load i32, i32* %16, align 4, !dbg !4798
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4603
  call void @llvm.dbg.value(metadata i32 undef, metadata !4550, metadata !DIExpression()), !dbg !4603
  %269 = load i32, i32* %17, align 8, !dbg !4799
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4799
  call void @llvm.dbg.value(metadata i32 undef, metadata !4550, metadata !DIExpression()), !dbg !4603
  %271 = add i32 %264, %58, !dbg !4799
  %272 = add i32 %265, %268, !dbg !4799
  %273 = add i32 %272, %270, !dbg !4800
  %274 = sub i32 %271, %273, !dbg !4800
  call void @llvm.dbg.value(metadata i32 %274, metadata !4528, metadata !DIExpression()), !dbg !4603
  %275 = and i24 %246, 4, !dbg !4801
  %276 = icmp eq i24 %275, 0, !dbg !4801
  br i1 %276, label %277, label %302, !dbg !4802

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4552, metadata !DIExpression()), !dbg !4803
  %278 = and i24 %246, 64, !dbg !4804
  %279 = icmp eq i24 %278, 0, !dbg !4804
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4805
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4805
  %282 = select i1 %279, i32 32, i32 48, !dbg !4805
  br i1 %280, label %287, label %283, !dbg !4805

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4806
  call void @llvm.dbg.value(metadata i32 %284, metadata !4557, metadata !DIExpression()), !dbg !4807
  %285 = icmp slt i32 %284, 0, !dbg !4808
  %286 = add i32 %29, 1, !dbg !4806
  call void @llvm.dbg.value(metadata i32 undef, metadata !4467, metadata !DIExpression()), !dbg !4589
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4603
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4593
  call void @llvm.dbg.value(metadata i32 %290, metadata !4467, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i8 undef, metadata !4552, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.value(metadata i8 %288, metadata !4532, metadata !DIExpression()), !dbg !4603
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4810
  %292 = add i32 %291, -1, !dbg !4810
  br label %293, !dbg !4810

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4811
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4593
  call void @llvm.dbg.value(metadata i32 %295, metadata !4467, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i32 %294, metadata !4528, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.value(metadata i32 %294, metadata !4528, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4603
  %296 = icmp sgt i32 %294, 0, !dbg !4812
  br i1 %296, label %297, label %302, !dbg !4810

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4813
  call void @llvm.dbg.value(metadata i32 %298, metadata !4528, metadata !DIExpression()), !dbg !4603
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4814
  call void @llvm.dbg.value(metadata i32 %299, metadata !4563, metadata !DIExpression()), !dbg !4815
  %300 = icmp slt i32 %299, 0, !dbg !4816
  %301 = add i32 %295, 1, !dbg !4814
  call void @llvm.dbg.value(metadata i32 undef, metadata !4467, metadata !DIExpression()), !dbg !4589
  br i1 %300, label %361, label %293, !llvm.loop !4818

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4603
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4603
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4593
  call void @llvm.dbg.value(metadata i32 %305, metadata !4467, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i32 %304, metadata !4528, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.value(metadata i8 %303, metadata !4532, metadata !DIExpression()), !dbg !4603
  %306 = icmp eq i8 %303, 0, !dbg !4820
  br i1 %306, label %312, label %307, !dbg !4821

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4822
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4823
  call void @llvm.dbg.value(metadata i32 %309, metadata !4566, metadata !DIExpression()), !dbg !4824
  %310 = icmp slt i32 %309, 0, !dbg !4825
  %311 = add i32 %305, 1, !dbg !4823
  call void @llvm.dbg.value(metadata i32 undef, metadata !4467, metadata !DIExpression()), !dbg !4589
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4593
  call void @llvm.dbg.value(metadata i32 %313, metadata !4467, metadata !DIExpression()), !dbg !4589
  %314 = lshr i24 %246, 20, !dbg !4827
  %315 = lshr i24 %246, 19, !dbg !4828
  %316 = or i24 %314, %315, !dbg !4829
  %317 = and i24 %316, 1, !dbg !4829
  %318 = icmp eq i24 %317, 0, !dbg !4829
  br i1 %318, label %323, label %319, !dbg !4830

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4831
  call void @llvm.dbg.value(metadata i32 %320, metadata !4570, metadata !DIExpression()), !dbg !4832
  %321 = icmp slt i32 %320, 0, !dbg !4833
  %322 = add i32 %313, 1, !dbg !4831
  call void @llvm.dbg.value(metadata i32 undef, metadata !4467, metadata !DIExpression()), !dbg !4589
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4593
  call void @llvm.dbg.value(metadata i32 %324, metadata !4467, metadata !DIExpression()), !dbg !4589
  %325 = and i24 %246, 1048576, !dbg !4835
  %326 = icmp eq i24 %325, 0, !dbg !4835
  br i1 %326, label %333, label %327, !dbg !4836

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4837
  %329 = zext i8 %328 to i32, !dbg !4837
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4837
  call void @llvm.dbg.value(metadata i32 %330, metadata !4576, metadata !DIExpression()), !dbg !4838
  %331 = icmp slt i32 %330, 0, !dbg !4839
  %332 = add i32 %324, 1, !dbg !4837
  call void @llvm.dbg.value(metadata i32 undef, metadata !4467, metadata !DIExpression()), !dbg !4589
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4593
  call void @llvm.dbg.value(metadata i32 %334, metadata !4467, metadata !DIExpression()), !dbg !4589
  %335 = load i32, i32* %16, align 4, !dbg !4841
  call void @llvm.dbg.value(metadata i32 %335, metadata !4551, metadata !DIExpression()), !dbg !4603
  br label %336, !dbg !4842

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4843
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4593
  call void @llvm.dbg.value(metadata i32 %338, metadata !4467, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i32 %337, metadata !4551, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4603
  %339 = icmp sgt i32 %337, 0, !dbg !4844
  br i1 %339, label %340, label %345, !dbg !4842

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4845
  call void @llvm.dbg.value(metadata i32 %341, metadata !4551, metadata !DIExpression()), !dbg !4603
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4846
  call void @llvm.dbg.value(metadata i32 %342, metadata !4580, metadata !DIExpression()), !dbg !4847
  %343 = icmp slt i32 %342, 0, !dbg !4848
  %344 = add i32 %338, 1, !dbg !4846
  call void @llvm.dbg.value(metadata i32 undef, metadata !4467, metadata !DIExpression()), !dbg !4589
  br i1 %343, label %361, label %336, !llvm.loop !4850

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !4852
  call void @llvm.dbg.value(metadata i32 %346, metadata !4583, metadata !DIExpression()), !dbg !4853
  %347 = icmp slt i32 %346, 0, !dbg !4854
  call void @llvm.dbg.value(metadata i32 undef, metadata !4467, metadata !DIExpression()), !dbg !4589
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4852
  call void @llvm.dbg.value(metadata i32 %349, metadata !4467, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i32 %304, metadata !4528, metadata !DIExpression()), !dbg !4603
  %350 = icmp sgt i32 %304, 0, !dbg !4856
  br i1 %350, label %351, label %363, !dbg !4857

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4857
  %353 = add i32 %352, %338, !dbg !4857
  br label %354, !dbg !4857

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4467, metadata !DIExpression()), !dbg !4589
  call void @llvm.dbg.value(metadata i32 %355, metadata !4528, metadata !DIExpression()), !dbg !4603
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4858
  call void @llvm.dbg.value(metadata i32 %356, metadata !4585, metadata !DIExpression()), !dbg !4859
  %357 = icmp slt i32 %356, 0, !dbg !4860
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4862
  call void @llvm.dbg.value(metadata i32 undef, metadata !4467, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4589
  call void @llvm.dbg.value(metadata i32 %359, metadata !4528, metadata !DIExpression()), !dbg !4603
  %360 = icmp sgt i32 %355, 1, !dbg !4856
  br i1 %360, label %354, label %363, !dbg !4857, !llvm.loop !4863

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4467, metadata !DIExpression()), !dbg !4589
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4600
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4593
  call void @llvm.dbg.value(metadata i32 %364, metadata !4467, metadata !DIExpression()), !dbg !4589
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4600
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4589
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4865
  ret i32 %366, !dbg !4865
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4866 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4870, metadata !DIExpression()), !dbg !4872
  call void @llvm.dbg.value(metadata i8* %1, metadata !4871, metadata !DIExpression()), !dbg !4872
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4873
  store i24 0, i24* %3, align 4, !dbg !4873
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4873
  store i8 0, i8* %4, align 1, !dbg !4873
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4873
  store i32 0, i32* %5, align 4, !dbg !4873
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4873
  store i32 0, i32* %6, align 4, !dbg !4873
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4874
  call void @llvm.dbg.value(metadata i8* %7, metadata !4871, metadata !DIExpression()), !dbg !4872
  %8 = load i8, i8* %7, align 1, !dbg !4875
  %9 = icmp eq i8 %8, 37, !dbg !4877
  br i1 %9, label %10, label %12, !dbg !4878

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4879
  call void @llvm.dbg.value(metadata i8* %11, metadata !4871, metadata !DIExpression()), !dbg !4872
  store i8 37, i8* %4, align 1, !dbg !4881
  br label %18, !dbg !4882

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !4883
  call void @llvm.dbg.value(metadata i8* %13, metadata !4871, metadata !DIExpression()), !dbg !4872
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !4884
  call void @llvm.dbg.value(metadata i8* %14, metadata !4871, metadata !DIExpression()), !dbg !4872
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !4885
  call void @llvm.dbg.value(metadata i8* %15, metadata !4871, metadata !DIExpression()), !dbg !4872
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !4886
  call void @llvm.dbg.value(metadata i8* %16, metadata !4871, metadata !DIExpression()), !dbg !4872
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !4887
  call void @llvm.dbg.value(metadata i8* %17, metadata !4871, metadata !DIExpression()), !dbg !4872
  br label %18, !dbg !4888

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4872
  ret i8* %19, !dbg !4889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4890 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4894, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.value(metadata i8* %1, metadata !4895, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.value(metadata i8* %2, metadata !4896, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.value(metadata i8* %3, metadata !4897, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.value(metadata i32 0, metadata !4898, metadata !DIExpression()), !dbg !4901
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4902

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4903
  call void @llvm.dbg.value(metadata i32 %9, metadata !4898, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.value(metadata i8* %8, metadata !4896, metadata !DIExpression()), !dbg !4901
  %10 = icmp ult i8* %8, %3, !dbg !4904
  br i1 %10, label %11, label %13, !dbg !4905

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4906
  br label %17, !dbg !4905

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4907

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4908
  %16 = icmp eq i8 %15, 0, !dbg !4907
  br i1 %16, label %24, label %17, !dbg !4902

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4906
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4909
  call void @llvm.dbg.value(metadata i8* %19, metadata !4896, metadata !DIExpression()), !dbg !4901
  %20 = zext i8 %18 to i32, !dbg !4910
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4911
  call void @llvm.dbg.value(metadata i32 %21, metadata !4899, metadata !DIExpression()), !dbg !4912
  %22 = icmp slt i32 %21, 0, !dbg !4913
  %23 = add i32 %9, 1, !dbg !4915
  call void @llvm.dbg.value(metadata i32 undef, metadata !4898, metadata !DIExpression()), !dbg !4901
  br i1 %22, label %24, label %7, !llvm.loop !4916

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4901
  ret i32 %25, !dbg !4918
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4919 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4923, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4924, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.value(metadata i8* %2, metadata !4925, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.value(metadata i8* %3, metadata !4926, metadata !DIExpression()), !dbg !4933
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4934
  %6 = load i8, i8* %5, align 1, !dbg !4934
  %7 = zext i8 %6 to i32, !dbg !4935
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !4936
  %9 = icmp eq i32 %8, 0, !dbg !4936
  call void @llvm.dbg.value(metadata i1 %9, metadata !4927, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4933
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !4937
  call void @llvm.dbg.value(metadata i32 %10, metadata !4928, metadata !DIExpression()), !dbg !4933
  %11 = ptrtoint i8* %3 to i32, !dbg !4938
  %12 = ptrtoint i8* %2 to i32, !dbg !4938
  %13 = sub i32 %11, %12, !dbg !4938
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4939
  call void @llvm.dbg.value(metadata i8* %14, metadata !4930, metadata !DIExpression()), !dbg !4933
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4940

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4933
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4923, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.value(metadata i8* %18, metadata !4930, metadata !DIExpression()), !dbg !4933
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4941
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4942
  call void @llvm.dbg.value(metadata i32 %25, metadata !4931, metadata !DIExpression()), !dbg !4943
  %26 = icmp ult i32 %25, 10, !dbg !4944
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4945
  %28 = add i32 %27, %25, !dbg !4943
  %29 = trunc i32 %28 to i8, !dbg !4945
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4946
  call void @llvm.dbg.value(metadata i8* %30, metadata !4930, metadata !DIExpression()), !dbg !4933
  store i8 %29, i8* %30, align 1, !dbg !4947
  call void @llvm.dbg.value(metadata i64 %22, metadata !4923, metadata !DIExpression()), !dbg !4933
  %31 = icmp uge i64 %19, %15, !dbg !4948
  %32 = icmp ugt i8* %30, %2, !dbg !4949
  %33 = and i1 %31, %32, !dbg !4949
  br i1 %33, label %17, label %34, !dbg !4950, !llvm.loop !4951

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4953
  %36 = load i24, i24* %35, align 4, !dbg !4953
  %37 = and i24 %36, 32, !dbg !4953
  %38 = icmp eq i24 %37, 0, !dbg !4953
  br i1 %38, label %44, label %39, !dbg !4955

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4956

40:                                               ; preds = %39
  br label %41, !dbg !4958

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4962
  store i24 %43, i24* %35, align 4, !dbg !4962
  br label %44, !dbg !4963

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4963
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4964 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4970, metadata !DIExpression()), !dbg !4973
  call void @llvm.dbg.value(metadata i8* %1, metadata !4971, metadata !DIExpression()), !dbg !4973
  call void @llvm.dbg.value(metadata i32 %2, metadata !4972, metadata !DIExpression()), !dbg !4973
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4974
  %5 = load i24, i24* %4, align 4, !dbg !4974
  %6 = lshr i24 %5, 11, !dbg !4974
  %7 = and i24 %6, 15, !dbg !4974
  %8 = zext i24 %7 to i32, !dbg !4974
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4975

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4976
  store i32 %2, i32* %10, align 4, !dbg !4978
  br label %28, !dbg !4979

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4980
  store i8 %12, i8* %1, align 1, !dbg !4981
  br label %28, !dbg !4982

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4983
  %15 = bitcast i8* %1 to i16*, !dbg !4984
  store i16 %14, i16* %15, align 2, !dbg !4985
  br label %28, !dbg !4986

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4987
  store i32 %2, i32* %17, align 4, !dbg !4988
  br label %28, !dbg !4989

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4990
  %20 = bitcast i8* %1 to i64*, !dbg !4991
  store i64 %19, i64* %20, align 8, !dbg !4992
  br label %28, !dbg !4993

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4994
  %23 = bitcast i8* %1 to i64*, !dbg !4995
  store i64 %22, i64* %23, align 8, !dbg !4996
  br label %28, !dbg !4997

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4998
  store i32 %2, i32* %25, align 4, !dbg !4999
  br label %28, !dbg !5000

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5001
  store i32 %2, i32* %27, align 4, !dbg !5002
  br label %28, !dbg !5003

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5004
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5008, metadata !DIExpression()), !dbg !5009
  %2 = add i32 %0, -65, !dbg !5010
  %3 = icmp ult i32 %2, 26, !dbg !5011
  %4 = zext i1 %3 to i32, !dbg !5011
  ret i32 %4, !dbg !5012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5013 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5017, metadata !DIExpression()), !dbg !5018
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5019

2:                                                ; preds = %1
  br label %4, !dbg !5020

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5022

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5023
  ret i32 %5, !dbg !5024
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5025 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5027, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i8* %1, metadata !5028, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i8 1, metadata !5029, metadata !DIExpression()), !dbg !5030
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5031

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5029, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i8* %5, metadata !5028, metadata !DIExpression()), !dbg !5030
  %6 = load i8, i8* %5, align 1, !dbg !5032
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5034

7:                                                ; preds = %4
  br label %11, !dbg !5035

8:                                                ; preds = %4
  br label %11, !dbg !5037

9:                                                ; preds = %4
  br label %11, !dbg !5038

10:                                               ; preds = %4
  br label %11, !dbg !5039

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5040
  %14 = or i24 %13, %12, !dbg !5040
  store i24 %14, i24* %3, align 4, !dbg !5040
  call void @llvm.dbg.value(metadata i8 poison, metadata !5029, metadata !DIExpression()), !dbg !5030
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5028, metadata !DIExpression()), !dbg !5030
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5029, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i8* %15, metadata !5028, metadata !DIExpression()), !dbg !5030
  %17 = load i24, i24* %3, align 4, !dbg !5041
  %18 = and i24 %17, 68, !dbg !5043
  %19 = icmp eq i24 %18, 68, !dbg !5043
  br i1 %19, label %20, label %22, !dbg !5043

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5044
  store i24 %21, i24* %3, align 4, !dbg !5044
  br label %22, !dbg !5046

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5047
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5048 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5050, metadata !DIExpression()), !dbg !5054
  call void @llvm.dbg.value(metadata i8* %1, metadata !5051, metadata !DIExpression()), !dbg !5054
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5055
  %5 = load i24, i24* %4, align 4, !dbg !5056
  %6 = or i24 %5, 128, !dbg !5056
  store i24 %6, i24* %4, align 4, !dbg !5056
  call void @llvm.dbg.value(metadata i8* %1, metadata !5051, metadata !DIExpression()), !dbg !5054
  %7 = load i8, i8* %1, align 1, !dbg !5057
  %8 = icmp eq i8 %7, 42, !dbg !5059
  br i1 %8, label %9, label %12, !dbg !5060

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5061
  store i24 %10, i24* %4, align 4, !dbg !5061
  call void @llvm.dbg.value(metadata i8* %1, metadata !5051, metadata !DIExpression()), !dbg !5054
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5063
  call void @llvm.dbg.value(metadata i8* %11, metadata !5051, metadata !DIExpression()), !dbg !5054
  store i8* %11, i8** %3, align 4, !dbg !5063
  br label %29, !dbg !5064

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5052, metadata !DIExpression()), !dbg !5054
  call void @llvm.dbg.value(metadata i8** %3, metadata !5051, metadata !DIExpression(DW_OP_deref)), !dbg !5054
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5065
  call void @llvm.dbg.value(metadata i32 %13, metadata !5053, metadata !DIExpression()), !dbg !5054
  %14 = load i8*, i8** %3, align 4, !dbg !5066
  call void @llvm.dbg.value(metadata i8* %14, metadata !5051, metadata !DIExpression()), !dbg !5054
  %15 = icmp eq i8* %14, %1, !dbg !5068
  br i1 %15, label %29, label %16, !dbg !5069

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5070
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5072
  store i32 %13, i32* %18, align 4, !dbg !5073
  %19 = lshr i32 %13, 31, !dbg !5074
  %20 = lshr i24 %17, 1, !dbg !5075
  %21 = and i24 %20, 1, !dbg !5075
  %22 = zext i24 %21 to i32, !dbg !5075
  %23 = or i32 %19, %22, !dbg !5075
  %24 = trunc i32 %23 to i24, !dbg !5075
  %25 = shl nuw nsw i24 %24, 1, !dbg !5075
  %26 = and i24 %17, -131, !dbg !5075
  %27 = or i24 %26, 128, !dbg !5075
  %28 = or i24 %25, %27, !dbg !5075
  store i24 %28, i24* %4, align 4, !dbg !5075
  br label %29, !dbg !5076

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5054
  ret i8* %30, !dbg !5077
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5078 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5080, metadata !DIExpression()), !dbg !5083
  call void @llvm.dbg.value(metadata i8* %1, metadata !5081, metadata !DIExpression()), !dbg !5083
  %4 = load i8, i8* %1, align 1, !dbg !5084
  %5 = icmp eq i8 %4, 46, !dbg !5085
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5086
  %7 = load i24, i24* %6, align 4, !dbg !5087
  %8 = select i1 %5, i24 512, i24 0, !dbg !5087
  %9 = and i24 %7, -513, !dbg !5087
  %10 = or i24 %9, %8, !dbg !5087
  store i24 %10, i24* %6, align 4, !dbg !5087
  br i1 %5, label %11, label %32, !dbg !5088

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5081, metadata !DIExpression()), !dbg !5083
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5089
  call void @llvm.dbg.value(metadata i8* %12, metadata !5081, metadata !DIExpression()), !dbg !5083
  store i8* %12, i8** %3, align 4, !dbg !5089
  %13 = load i8, i8* %12, align 1, !dbg !5090
  %14 = icmp eq i8 %13, 42, !dbg !5092
  br i1 %14, label %15, label %18, !dbg !5093

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5094
  store i24 %16, i24* %6, align 4, !dbg !5094
  call void @llvm.dbg.value(metadata i8* %12, metadata !5081, metadata !DIExpression()), !dbg !5083
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5096
  call void @llvm.dbg.value(metadata i8* %17, metadata !5081, metadata !DIExpression()), !dbg !5083
  store i8* %17, i8** %3, align 4, !dbg !5096
  br label %32, !dbg !5097

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5081, metadata !DIExpression(DW_OP_deref)), !dbg !5083
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5098
  call void @llvm.dbg.value(metadata i32 %19, metadata !5082, metadata !DIExpression()), !dbg !5083
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5099
  store i32 %19, i32* %20, align 4, !dbg !5100
  %21 = lshr i32 %19, 31, !dbg !5101
  %22 = load i24, i24* %6, align 4, !dbg !5102
  %23 = lshr i24 %22, 1, !dbg !5102
  %24 = and i24 %23, 1, !dbg !5102
  %25 = zext i24 %24 to i32, !dbg !5102
  %26 = or i32 %21, %25, !dbg !5102
  %27 = trunc i32 %26 to i24, !dbg !5102
  %28 = shl nuw nsw i24 %27, 1, !dbg !5102
  %29 = and i24 %22, -3, !dbg !5102
  %30 = or i24 %28, %29, !dbg !5102
  store i24 %30, i24* %6, align 4, !dbg !5102
  %31 = load i8*, i8** %3, align 4, !dbg !5103
  call void @llvm.dbg.value(metadata i8* %31, metadata !5081, metadata !DIExpression()), !dbg !5083
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5083
  ret i8* %33, !dbg !5104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5105 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5107, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.value(metadata i8* %1, metadata !5108, metadata !DIExpression()), !dbg !5109
  %3 = load i8, i8* %1, align 1, !dbg !5110
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5111

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5112
  call void @llvm.dbg.value(metadata i8* %5, metadata !5108, metadata !DIExpression()), !dbg !5109
  %6 = load i8, i8* %5, align 1, !dbg !5115
  %7 = icmp eq i8 %6, 104, !dbg !5116
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5117
  %9 = load i24, i24* %8, align 4, !dbg !5117
  %10 = and i24 %9, -30721, !dbg !5117
  br i1 %7, label %11, label %14, !dbg !5118

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5119
  store i24 %12, i24* %8, align 4, !dbg !5119
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5121
  call void @llvm.dbg.value(metadata i8* %13, metadata !5108, metadata !DIExpression()), !dbg !5109
  br label %56, !dbg !5122

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5123
  store i24 %15, i24* %8, align 4, !dbg !5123
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5125
  call void @llvm.dbg.value(metadata i8* %17, metadata !5108, metadata !DIExpression()), !dbg !5109
  %18 = load i8, i8* %17, align 1, !dbg !5127
  %19 = icmp eq i8 %18, 108, !dbg !5128
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5129
  %21 = load i24, i24* %20, align 4, !dbg !5129
  %22 = and i24 %21, -30721, !dbg !5129
  br i1 %19, label %23, label %26, !dbg !5130

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5131
  store i24 %24, i24* %20, align 4, !dbg !5131
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5133
  call void @llvm.dbg.value(metadata i8* %25, metadata !5108, metadata !DIExpression()), !dbg !5109
  br label %56, !dbg !5134

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5135
  store i24 %27, i24* %20, align 4, !dbg !5135
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5137
  %30 = load i24, i24* %29, align 4, !dbg !5138
  %31 = and i24 %30, -30721, !dbg !5138
  %32 = or i24 %31, 10240, !dbg !5138
  store i24 %32, i24* %29, align 4, !dbg !5138
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5139
  call void @llvm.dbg.value(metadata i8* %33, metadata !5108, metadata !DIExpression()), !dbg !5109
  br label %56, !dbg !5140

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5141
  %36 = load i24, i24* %35, align 4, !dbg !5142
  %37 = and i24 %36, -30721, !dbg !5142
  %38 = or i24 %37, 12288, !dbg !5142
  store i24 %38, i24* %35, align 4, !dbg !5142
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5143
  call void @llvm.dbg.value(metadata i8* %39, metadata !5108, metadata !DIExpression()), !dbg !5109
  br label %56, !dbg !5144

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5145
  %42 = load i24, i24* %41, align 4, !dbg !5146
  %43 = and i24 %42, -30721, !dbg !5146
  %44 = or i24 %43, 14336, !dbg !5146
  store i24 %44, i24* %41, align 4, !dbg !5146
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5147
  call void @llvm.dbg.value(metadata i8* %45, metadata !5108, metadata !DIExpression()), !dbg !5109
  br label %56, !dbg !5148

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5149
  %48 = load i24, i24* %47, align 4, !dbg !5150
  %49 = and i24 %48, -30723, !dbg !5150
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5151
  call void @llvm.dbg.value(metadata i8* %50, metadata !5108, metadata !DIExpression()), !dbg !5109
  %51 = or i24 %49, 16386, !dbg !5152
  store i24 %51, i24* %47, align 4, !dbg !5152
  br label %56, !dbg !5153

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5154
  %54 = load i24, i24* %53, align 4, !dbg !5155
  %55 = and i24 %54, -30721, !dbg !5155
  store i24 %55, i24* %53, align 4, !dbg !5155
  br label %56, !dbg !5156

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5108, metadata !DIExpression()), !dbg !5109
  ret i8* %57, !dbg !5157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5158 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5160, metadata !DIExpression()), !dbg !5165
  call void @llvm.dbg.value(metadata i8* %1, metadata !5161, metadata !DIExpression()), !dbg !5165
  call void @llvm.dbg.value(metadata i8 0, metadata !5162, metadata !DIExpression()), !dbg !5165
  call void @llvm.dbg.value(metadata i8* %1, metadata !5161, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5165
  %3 = load i8, i8* %1, align 1, !dbg !5166
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5167
  store i8 %3, i8* %4, align 1, !dbg !5168
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5169

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5170

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5171
  %9 = load i24, i24* %8, align 4, !dbg !5171
  %10 = and i24 %9, -458753, !dbg !5171
  %11 = or i24 %10, %7, !dbg !5171
  call void @llvm.dbg.label(metadata !5163), !dbg !5172
  %12 = and i24 %9, 30720, !dbg !5173
  %13 = icmp eq i24 %12, 16384, !dbg !5173
  %14 = zext i1 %13 to i24, !dbg !5175
  %15 = or i24 %11, %14, !dbg !5175
  %16 = icmp eq i8 %3, 99, !dbg !5176
  br i1 %16, label %17, label %43, !dbg !5178

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5179
  %19 = icmp ne i24 %18, 0, !dbg !5179
  call void @llvm.dbg.value(metadata i1 %19, metadata !5162, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5165
  br label %43, !dbg !5181

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5182
  %22 = load i24, i24* %21, align 4, !dbg !5183
  %23 = and i24 %22, -458753, !dbg !5183
  %24 = or i24 %23, 262144, !dbg !5183
  call void @llvm.dbg.value(metadata i8 1, metadata !5162, metadata !DIExpression()), !dbg !5165
  br label %43, !dbg !5184

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5187
  %27 = load i24, i24* %26, align 4, !dbg !5188
  %28 = and i24 %27, -458753, !dbg !5188
  %29 = or i24 %28, 196608, !dbg !5188
  %30 = and i24 %27, 30720, !dbg !5189
  %31 = icmp eq i24 %30, 16384, !dbg !5189
  br label %43, !dbg !5191

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5192
  %34 = load i24, i24* %33, align 4, !dbg !5193
  %35 = and i24 %34, -458753, !dbg !5193
  %36 = or i24 %35, 196608, !dbg !5193
  %37 = and i24 %34, 30720, !dbg !5194
  %38 = icmp ne i24 %37, 0, !dbg !5194
  br label %43, !dbg !5196

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5197
  %41 = load i24, i24* %40, align 4, !dbg !5198
  %42 = or i24 %41, 1, !dbg !5198
  br label %43, !dbg !5199

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5200
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5201
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5202
  call void @llvm.dbg.value(metadata i8* %48, metadata !5161, metadata !DIExpression()), !dbg !5165
  call void @llvm.dbg.value(metadata i8 poison, metadata !5162, metadata !DIExpression()), !dbg !5165
  %49 = lshr i24 %44, 1, !dbg !5200
  %50 = and i24 %49, 1, !dbg !5200
  %51 = zext i24 %50 to i32, !dbg !5200
  %52 = or i32 %51, %47, !dbg !5200
  %53 = trunc i32 %52 to i24, !dbg !5200
  %54 = shl nuw nsw i24 %53, 1, !dbg !5200
  %55 = and i24 %44, -3, !dbg !5200
  %56 = or i24 %54, %55, !dbg !5200
  store i24 %56, i24* %46, align 4, !dbg !5200
  ret i8* %48, !dbg !5203
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5204 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5209, metadata !DIExpression()), !dbg !5212
  %2 = load i8*, i8** %0, align 4, !dbg !5213
  call void @llvm.dbg.value(metadata i8* %2, metadata !5210, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i32 0, metadata !5211, metadata !DIExpression()), !dbg !5212
  %3 = load i8, i8* %2, align 1, !dbg !5214
  %4 = zext i8 %3 to i32, !dbg !5215
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5216
  %6 = icmp eq i32 %5, 0, !dbg !5217
  br i1 %6, label %19, label %7, !dbg !5217

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5211, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i8* %10, metadata !5210, metadata !DIExpression()), !dbg !5212
  %11 = mul i32 %9, 10, !dbg !5218
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5220
  call void @llvm.dbg.value(metadata i8* %12, metadata !5210, metadata !DIExpression()), !dbg !5212
  %13 = add i32 %11, -48, !dbg !5221
  %14 = add i32 %13, %8, !dbg !5222
  call void @llvm.dbg.value(metadata i32 %14, metadata !5211, metadata !DIExpression()), !dbg !5212
  %15 = load i8, i8* %12, align 1, !dbg !5214
  %16 = zext i8 %15 to i32, !dbg !5215
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5216
  %18 = icmp eq i32 %17, 0, !dbg !5217
  br i1 %18, label %19, label %7, !dbg !5217, !llvm.loop !5223

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5212
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5212
  store i8* %20, i8** %0, align 4, !dbg !5225
  ret i32 %21, !dbg !5226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5227 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5229, metadata !DIExpression()), !dbg !5230
  %2 = add i32 %0, -48, !dbg !5231
  %3 = icmp ult i32 %2, 10, !dbg !5232
  %4 = zext i1 %3 to i32, !dbg !5232
  ret i32 %4, !dbg !5233
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5234 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5236, !srcloc !5237
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5238, !srcloc !5239
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #24, !dbg !5240, !srcloc !5241
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5242, !srcloc !5243
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #24, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #24, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #24, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #24, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #24, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #24, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #24, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #24, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #24, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #24, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #24, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #24, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #24, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #24, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #24, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #24, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #24, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #24, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #24, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #24, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #24, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS\0A\09.equ\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,1\0A\09.type\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,%object", ""() #24, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #24, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #24, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #24, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #24, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR\0A\09.equ\09CONFIG_CONSOLE_GETCHAR,1\0A\09.type\09CONFIG_CONSOLE_GETCHAR,%object", ""() #24, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,64\0A\09.type\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,%object", ""() #24, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,512\0A\09.type\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,%object", ""() #24, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !5812, !srcloc !5813
  ret void, !dbg !5814
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5815 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5817, metadata !DIExpression()), !dbg !5819
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !5820
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !5821
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5822, !srcloc !5831
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5822
  call void @llvm.dbg.value(metadata i32 %3, metadata !5828, metadata !DIExpression()) #24, !dbg !5832
  call void @llvm.dbg.value(metadata i32 undef, metadata !5829, metadata !DIExpression()) #24, !dbg !5832
  call void @llvm.dbg.value(metadata i32 %3, metadata !5818, metadata !DIExpression()), !dbg !5819
  call void @llvm.dbg.value(metadata i32 %3, metadata !5833, metadata !DIExpression()) #24, !dbg !5838
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !5840, !srcloc !5841
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5842
  ret i32 0, !dbg !5843
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5844 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5846
  %2 = or i32 %1, 512, !dbg !5846
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5846
  ret void, !dbg !5847
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5848 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5849
  %2 = or i32 %1, 1024, !dbg !5849
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5849
  ret void, !dbg !5850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5851 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5853, metadata !DIExpression()), !dbg !5854
  ret i32 0, !dbg !5855
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_write(%struct.tty_serial* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5856 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5902, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata i8* %1, metadata !5903, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata i32 %2, metadata !5904, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata i8* %1, metadata !5905, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata i32 0, metadata !5906, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata i32 0, metadata !5907, metadata !DIExpression()), !dbg !5908
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5909
  %5 = load i32, i32* %4, align 4, !dbg !5909
  %6 = icmp eq i32 %5, 0, !dbg !5911
  %7 = icmp eq i32 %2, 0, !dbg !5908
  br i1 %6, label %9, label %8, !dbg !5912

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !5906, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata i8* %1, metadata !5905, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata i32 %2, metadata !5904, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata i32 %2, metadata !5904, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5908
  br i1 %7, label %37, label %20, !dbg !5913

9:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !5905, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata i32 %2, metadata !5904, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata i32 %2, metadata !5904, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5908
  br i1 %7, label %37, label %10, !dbg !5914

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %12, !dbg !5914

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %1, %10 ], [ %17, %12 ]
  %14 = phi i32 [ %2, %10 ], [ %15, %12 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !5905, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata i32 %14, metadata !5904, metadata !DIExpression()), !dbg !5908
  %15 = add i32 %14, -1, !dbg !5916
  call void @llvm.dbg.value(metadata i32 %15, metadata !5904, metadata !DIExpression()), !dbg !5908
  %16 = load %struct.device*, %struct.device** %11, align 4, !dbg !5917
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !5919
  call void @llvm.dbg.value(metadata i8* %17, metadata !5905, metadata !DIExpression()), !dbg !5908
  %18 = load i8, i8* %13, align 1, !dbg !5920
  tail call fastcc void @uart_poll_out(%struct.device* noundef %16, i8 noundef zeroext %18) #26, !dbg !5921
  call void @llvm.dbg.value(metadata i32 %15, metadata !5904, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5908
  %19 = icmp eq i32 %15, 0, !dbg !5914
  br i1 %19, label %37, label %12, !dbg !5914, !llvm.loop !5922

20:                                               ; preds = %8, %33
  %21 = phi i32 [ %24, %33 ], [ %2, %8 ]
  %22 = phi i32 [ %35, %33 ], [ 0, %8 ]
  %23 = phi i8* [ %34, %33 ], [ %1, %8 ]
  %24 = add i32 %21, -1, !dbg !5924
  call void @llvm.dbg.value(metadata i32 %22, metadata !5906, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata i8* %23, metadata !5905, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata i8* %23, metadata !5905, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5908
  %25 = load i8, i8* %23, align 1, !dbg !5925
  %26 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %25) #26, !dbg !5927
  call void @llvm.dbg.value(metadata i32 %26, metadata !5907, metadata !DIExpression()), !dbg !5908
  %27 = icmp slt i32 %26, 0, !dbg !5928
  br i1 %27, label %28, label %33, !dbg !5930

28:                                               ; preds = %20
  %29 = icmp eq i32 %22, 0, !dbg !5931
  br i1 %29, label %30, label %37, !dbg !5934

30:                                               ; preds = %28
  %31 = sub nsw i32 0, %26, !dbg !5935
  %32 = tail call fastcc i32* @z_errno() #26, !dbg !5937
  store i32 %31, i32* %32, align 4, !dbg !5938
  br label %37, !dbg !5939

33:                                               ; preds = %20
  %34 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !5940
  call void @llvm.dbg.value(metadata i8* %34, metadata !5905, metadata !DIExpression()), !dbg !5908
  %35 = add nuw i32 %22, 1, !dbg !5941
  call void @llvm.dbg.value(metadata i32 %35, metadata !5906, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata i32 %24, metadata !5904, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata i32 %24, metadata !5904, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5908
  %36 = icmp eq i32 %24, 0, !dbg !5913
  br i1 %36, label %37, label %20, !dbg !5913, !llvm.loop !5942

37:                                               ; preds = %33, %12, %8, %9, %28, %30
  %38 = phi i32 [ %26, %30 ], [ %22, %28 ], [ 0, %9 ], [ 0, %8 ], [ %2, %12 ], [ %2, %33 ], !dbg !5908
  ret i32 %38, !dbg !5944
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5945 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5948, metadata !DIExpression()), !dbg !5950
  call void @llvm.dbg.value(metadata i8 %1, metadata !5949, metadata !DIExpression()), !dbg !5950
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5951, !srcloc !5953
  tail call fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) #26, !dbg !5954
  ret void, !dbg !5955
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5956 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5960, metadata !DIExpression()), !dbg !5965
  call void @llvm.dbg.value(metadata i8 %1, metadata !5961, metadata !DIExpression()), !dbg !5965
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !5966
  %4 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !5967
  br i1 %4, label %14, label %5, !dbg !5967

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !5968
  %7 = load i32, i32* %6, align 4, !dbg !5968
  %8 = icmp eq i32 %7, -1, !dbg !5968
  br i1 %8, label %14, label %9, !dbg !5968

9:                                                ; preds = %5
  %10 = icmp sgt i32 %7, 0, !dbg !5968
  %11 = select i1 %10, i32 %7, i32 0, !dbg !5968
  %12 = zext i32 %11 to i64, !dbg !5968
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %12) #26, !dbg !5968
  br label %14, !dbg !5968

14:                                               ; preds = %5, %2, %9
  %15 = phi i64 [ %13, %9 ], [ 0, %2 ], [ -1, %5 ], !dbg !5965
  %16 = insertvalue [1 x i64] poison, i64 %15, 0, !dbg !5969
  %17 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %3, [1 x i64] %16) #26, !dbg !5969
  call void @llvm.dbg.value(metadata i32 %17, metadata !5964, metadata !DIExpression()), !dbg !5965
  %18 = icmp slt i32 %17, 0, !dbg !5970
  br i1 %18, label %42, label %19, !dbg !5972

19:                                               ; preds = %14
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5973, !srcloc !5979
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !5973
  call void @llvm.dbg.value(metadata i32 %21, metadata !5976, metadata !DIExpression()) #24, !dbg !5980
  call void @llvm.dbg.value(metadata i32 undef, metadata !5977, metadata !DIExpression()) #24, !dbg !5980
  call void @llvm.dbg.value(metadata i32 %21, metadata !5962, metadata !DIExpression()), !dbg !5965
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !5981
  %23 = load i16, i16* %22, align 2, !dbg !5981
  %24 = zext i16 %23 to i32, !dbg !5982
  %25 = add nuw nsw i32 %24, 1, !dbg !5983
  call void @llvm.dbg.value(metadata i32 %25, metadata !5963, metadata !DIExpression()), !dbg !5965
  %26 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5984
  %27 = load i32, i32* %26, align 4, !dbg !5984
  %28 = icmp ult i32 %25, %27, !dbg !5986
  %29 = select i1 %28, i32 %25, i32 0, !dbg !5987
  call void @llvm.dbg.value(metadata i32 %29, metadata !5963, metadata !DIExpression()), !dbg !5965
  %30 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !5988
  %31 = load i16, i16* %30, align 4, !dbg !5988
  %32 = zext i16 %31 to i32, !dbg !5990
  %33 = icmp eq i32 %29, %32, !dbg !5991
  br i1 %33, label %34, label %35, !dbg !5992

34:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 %21, metadata !5993, metadata !DIExpression()) #24, !dbg !5996
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !5999, !srcloc !6000
  br label %42, !dbg !6001

35:                                               ; preds = %19
  %36 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6002
  %37 = load i8*, i8** %36, align 4, !dbg !6002
  %38 = getelementptr inbounds i8, i8* %37, i32 %24, !dbg !6003
  store i8 %1, i8* %38, align 1, !dbg !6004
  %39 = trunc i32 %29 to i16, !dbg !6005
  store i16 %39, i16* %22, align 2, !dbg !6006
  call void @llvm.dbg.value(metadata i32 %21, metadata !5993, metadata !DIExpression()) #24, !dbg !6007
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !6009, !srcloc !6000
  %40 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6010
  %41 = load %struct.device*, %struct.device** %40, align 4, !dbg !6010
  tail call fastcc void @uart_irq_tx_enable(%struct.device* noundef %41) #26, !dbg !6011
  br label %42, !dbg !6012

42:                                               ; preds = %14, %35, %34
  %43 = phi i32 [ -28, %34 ], [ 0, %35 ], [ %17, %14 ], !dbg !5965
  ret i32 %43, !dbg !6013
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32* @z_errno() unnamed_addr #1 !dbg !6014 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6018, !srcloc !6020
  %1 = tail call i32* @z_impl_z_errno() #25, !dbg !6021
  ret i32* %1, !dbg !6022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !6023 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6028, metadata !DIExpression()), !dbg !6029
  call void @llvm.dbg.value(metadata i64 %0, metadata !6030, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata i32 1000, metadata !6035, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata i32 10000, metadata !6036, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata i8 1, metadata !6037, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata i8 0, metadata !6038, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata i8 1, metadata !6039, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata i8 0, metadata !6040, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata i8 1, metadata !6041, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata i8 0, metadata !6042, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata i64 0, metadata !6043, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata i64 0, metadata !6043, metadata !DIExpression()), !dbg !6047
  %2 = mul i64 %0, 10, !dbg !6049
  ret i64 %2, !dbg !6055
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !6056 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6066, metadata !DIExpression()), !dbg !6067
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6065, metadata !DIExpression()), !dbg !6067
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6068, !srcloc !6070
  %3 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) #25, !dbg !6071
  ret i32 %3, !dbg !6072
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6073 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6075, metadata !DIExpression()), !dbg !6076
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6077, !srcloc !6079
  tail call fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) #26, !dbg !6080
  ret void, !dbg !6081
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6082 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6084, metadata !DIExpression()), !dbg !6086
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6087
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6087
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6087
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6085, metadata !DIExpression()), !dbg !6086
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 7, !dbg !6088
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6088
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6090
  br i1 %7, label %9, label %8, !dbg !6091

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6092
  br label %9, !dbg !6094

9:                                                ; preds = %8, %1
  ret void, !dbg !6095
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6096 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6098, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i8 %1, metadata !6099, metadata !DIExpression()), !dbg !6101
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6102
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6102
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6102
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6100, metadata !DIExpression()), !dbg !6101
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 1, !dbg !6103
  %7 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %6, align 4, !dbg !6103
  tail call void %7(%struct.device* noundef %0, i8 noundef zeroext %1) #25, !dbg !6104
  ret void, !dbg !6105
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_read(%struct.tty_serial* noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6106 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6110, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.value(metadata i8* %1, metadata !6111, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.value(metadata i32 %2, metadata !6112, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.value(metadata i8* %1, metadata !6113, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.value(metadata i32 0, metadata !6114, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.value(metadata i32 0, metadata !6115, metadata !DIExpression()), !dbg !6116
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6117
  %5 = load i32, i32* %4, align 4, !dbg !6117
  %6 = icmp eq i32 %5, 0, !dbg !6119
  br i1 %6, label %9, label %7, !dbg !6120

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !6114, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.value(metadata i8* %1, metadata !6113, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.value(metadata i32 %2, metadata !6112, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.value(metadata i32 %2, metadata !6112, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6116
  %8 = icmp eq i32 %2, 0, !dbg !6121
  br i1 %8, label %28, label %11, !dbg !6121

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @tty_read_unbuf(%struct.tty_serial* noundef nonnull %0, i8* noundef %1, i32 noundef %2) #26, !dbg !6122
  br label %28, !dbg !6124

11:                                               ; preds = %7, %23
  %12 = phi i32 [ %15, %23 ], [ %2, %7 ]
  %13 = phi i32 [ %26, %23 ], [ 0, %7 ]
  %14 = phi i8* [ %25, %23 ], [ %1, %7 ]
  %15 = add i32 %12, -1, !dbg !6125
  call void @llvm.dbg.value(metadata i32 %13, metadata !6114, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.value(metadata i8* %14, metadata !6113, metadata !DIExpression()), !dbg !6116
  %16 = tail call fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) #26, !dbg !6126
  call void @llvm.dbg.value(metadata i32 %16, metadata !6115, metadata !DIExpression()), !dbg !6116
  %17 = icmp slt i32 %16, 0, !dbg !6128
  br i1 %17, label %18, label %23, !dbg !6130

18:                                               ; preds = %11
  %19 = icmp eq i32 %13, 0, !dbg !6131
  br i1 %19, label %20, label %28, !dbg !6134

20:                                               ; preds = %18
  %21 = sub nsw i32 0, %16, !dbg !6135
  %22 = tail call fastcc i32* @z_errno() #26, !dbg !6137
  store i32 %21, i32* %22, align 4, !dbg !6138
  br label %28, !dbg !6139

23:                                               ; preds = %11
  %24 = trunc i32 %16 to i8, !dbg !6140
  %25 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6141
  call void @llvm.dbg.value(metadata i8* %25, metadata !6113, metadata !DIExpression()), !dbg !6116
  store i8 %24, i8* %14, align 1, !dbg !6142
  %26 = add nuw i32 %13, 1, !dbg !6143
  call void @llvm.dbg.value(metadata i32 %26, metadata !6114, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.value(metadata i32 %15, metadata !6112, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.value(metadata i32 %15, metadata !6112, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6116
  %27 = icmp eq i32 %15, 0, !dbg !6121
  br i1 %27, label %28, label %11, !dbg !6121, !llvm.loop !6144

28:                                               ; preds = %23, %7, %18, %20, %9
  %29 = phi i32 [ %10, %9 ], [ %16, %20 ], [ %13, %18 ], [ 0, %7 ], [ %2, %23 ], !dbg !6116
  ret i32 %29, !dbg !6146
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_read_unbuf(%struct.tty_serial* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #1 !dbg !6147 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6149, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8* %1, metadata !6150, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 %2, metadata !6151, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8* %1, metadata !6152, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 0, metadata !6153, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 0, metadata !6154, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 undef, metadata !6155, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 0, metadata !6153, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8* %1, metadata !6152, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 %2, metadata !6151, metadata !DIExpression()), !dbg !6158
  %5 = icmp eq i32 %2, 0, !dbg !6159
  br i1 %5, label %48, label %6, !dbg !6159

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6160
  %8 = load i32, i32* %7, align 4, !dbg !6160
  call void @llvm.dbg.value(metadata i32 %8, metadata !6155, metadata !DIExpression()), !dbg !6158
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %10, !dbg !6159

10:                                               ; preds = %6, %46
  %11 = phi i32 [ %8, %6 ], [ %39, %46 ]
  %12 = phi i32 [ 0, %6 ], [ %31, %46 ]
  %13 = phi i8* [ %1, %6 ], [ %32, %46 ]
  %14 = phi i32 [ %2, %6 ], [ %33, %46 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6155, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 %12, metadata !6153, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8* %13, metadata !6152, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 %14, metadata !6151, metadata !DIExpression()), !dbg !6158
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6161
  %15 = load %struct.device*, %struct.device** %9, align 4, !dbg !6162
  call void @llvm.dbg.value(metadata i8* %4, metadata !6156, metadata !DIExpression(DW_OP_deref)), !dbg !6163
  %16 = call fastcc i32 @uart_poll_in(%struct.device* noundef %15, i8* noundef nonnull %4) #26, !dbg !6164
  call void @llvm.dbg.value(metadata i32 %16, metadata !6154, metadata !DIExpression()), !dbg !6158
  %17 = icmp slt i32 %16, -1, !dbg !6165
  br i1 %17, label %18, label %22, !dbg !6167

18:                                               ; preds = %10
  %19 = icmp eq i32 %12, 0, !dbg !6168
  br i1 %19, label %20, label %44, !dbg !6171

20:                                               ; preds = %18
  %21 = call fastcc i32* @z_errno() #26, !dbg !6172
  store i32 %16, i32* %21, align 4, !dbg !6174
  call void @llvm.dbg.value(metadata i32 %39, metadata !6155, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 undef, metadata !6153, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8* %32, metadata !6152, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 %33, metadata !6151, metadata !DIExpression()), !dbg !6158
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6175
  br label %48

22:                                               ; preds = %10
  %23 = icmp eq i32 %16, 0, !dbg !6176
  br i1 %23, label %24, label %30, !dbg !6178

24:                                               ; preds = %22
  %25 = load i8, i8* %4, align 1, !dbg !6179
  call void @llvm.dbg.value(metadata i8 %25, metadata !6156, metadata !DIExpression()), !dbg !6163
  %26 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6181
  call void @llvm.dbg.value(metadata i8* %26, metadata !6152, metadata !DIExpression()), !dbg !6158
  store i8 %25, i8* %13, align 1, !dbg !6182
  %27 = add i32 %12, 1, !dbg !6183
  call void @llvm.dbg.value(metadata i32 %27, metadata !6153, metadata !DIExpression()), !dbg !6158
  %28 = add i32 %14, -1, !dbg !6184
  call void @llvm.dbg.value(metadata i32 %28, metadata !6151, metadata !DIExpression()), !dbg !6158
  %29 = icmp eq i32 %28, 0, !dbg !6185
  br i1 %29, label %44, label %30, !dbg !6187

30:                                               ; preds = %22, %24
  %31 = phi i32 [ %27, %24 ], [ %12, %22 ]
  %32 = phi i8* [ %26, %24 ], [ %13, %22 ]
  %33 = phi i32 [ %28, %24 ], [ %14, %22 ]
  %34 = icmp eq i32 %11, -1, !dbg !6188
  br i1 %34, label %38, label %35, !dbg !6189

35:                                               ; preds = %30
  %36 = add i32 %11, -1, !dbg !6190
  call void @llvm.dbg.value(metadata i32 %36, metadata !6155, metadata !DIExpression()), !dbg !6158
  %37 = icmp eq i32 %11, 0, !dbg !6191
  br i1 %37, label %44, label %38, !dbg !6192

38:                                               ; preds = %35, %30
  %39 = phi i32 [ %36, %35 ], [ -1, %30 ], !dbg !6158
  call void @llvm.dbg.value(metadata i32 %39, metadata !6155, metadata !DIExpression()), !dbg !6158
  %40 = icmp eq i32 %16, -1, !dbg !6193
  br i1 %40, label %41, label %46, !dbg !6195

41:                                               ; preds = %38
  %42 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1) #26, !dbg !6196
  %43 = insertvalue [1 x i64] poison, i64 %42, 0, !dbg !6198
  call fastcc void @k_sleep([1 x i64] %43) #26, !dbg !6198
  br label %46, !dbg !6199

44:                                               ; preds = %35, %24, %18
  %45 = phi i32 [ %12, %18 ], [ %31, %35 ], [ %27, %24 ]
  call void @llvm.dbg.value(metadata i32 %39, metadata !6155, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 undef, metadata !6153, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8* %32, metadata !6152, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 %33, metadata !6151, metadata !DIExpression()), !dbg !6158
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6175
  br label %48

46:                                               ; preds = %38, %41
  call void @llvm.dbg.value(metadata i32 %39, metadata !6155, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 %31, metadata !6153, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8* %32, metadata !6152, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 %33, metadata !6151, metadata !DIExpression()), !dbg !6158
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6175
  %47 = icmp eq i32 %33, 0, !dbg !6159
  br i1 %47, label %48, label %10, !dbg !6159

48:                                               ; preds = %46, %3, %44, %20
  %49 = phi i32 [ -1, %20 ], [ %45, %44 ], [ 0, %3 ], [ %31, %46 ], !dbg !6158
  ret i32 %49, !dbg !6200
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) unnamed_addr #1 !dbg !6201 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6205, metadata !DIExpression()), !dbg !6209
  %2 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6210
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6211
  %4 = load i32, i32* %3, align 4, !dbg !6211
  %5 = icmp eq i32 %4, -1, !dbg !6211
  br i1 %5, label %11, label %6, !dbg !6211

6:                                                ; preds = %1
  %7 = icmp sgt i32 %4, 0, !dbg !6211
  %8 = select i1 %7, i32 %4, i32 0, !dbg !6211
  %9 = zext i32 %8 to i64, !dbg !6211
  %10 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %9) #26, !dbg !6211
  br label %11, !dbg !6211

11:                                               ; preds = %1, %6
  %12 = phi i64 [ %10, %6 ], [ -1, %1 ], !dbg !6211
  %13 = insertvalue [1 x i64] poison, i64 %12, 0, !dbg !6212
  %14 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %2, [1 x i64] %13) #26, !dbg !6212
  call void @llvm.dbg.value(metadata i32 %14, metadata !6208, metadata !DIExpression()), !dbg !6209
  %15 = icmp slt i32 %14, 0, !dbg !6213
  br i1 %15, label %33, label %16, !dbg !6215

16:                                               ; preds = %11
  %17 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6216, !srcloc !5979
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !6216
  call void @llvm.dbg.value(metadata i32 %18, metadata !5976, metadata !DIExpression()) #24, !dbg !6218
  call void @llvm.dbg.value(metadata i32 undef, metadata !5977, metadata !DIExpression()) #24, !dbg !6218
  call void @llvm.dbg.value(metadata i32 %18, metadata !6206, metadata !DIExpression()), !dbg !6209
  %19 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6219
  %20 = load i8*, i8** %19, align 4, !dbg !6219
  %21 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6220
  %22 = load i16, i16* %21, align 4, !dbg !6221
  %23 = add i16 %22, 1, !dbg !6221
  store i16 %23, i16* %21, align 4, !dbg !6221
  %24 = zext i16 %22 to i32, !dbg !6222
  %25 = getelementptr inbounds i8, i8* %20, i32 %24, !dbg !6222
  %26 = load i8, i8* %25, align 1, !dbg !6222
  call void @llvm.dbg.value(metadata i8 %26, metadata !6207, metadata !DIExpression()), !dbg !6209
  %27 = zext i16 %23 to i32, !dbg !6223
  %28 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6225
  %29 = load i32, i32* %28, align 4, !dbg !6225
  %30 = icmp ugt i32 %29, %27, !dbg !6226
  %31 = select i1 %30, i16 %23, i16 0, !dbg !6227
  store i16 %31, i16* %21, align 4, !dbg !6209
  call void @llvm.dbg.value(metadata i32 %18, metadata !5993, metadata !DIExpression()) #24, !dbg !6228
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !6230, !srcloc !6000
  %32 = zext i8 %26 to i32, !dbg !6231
  br label %33, !dbg !6232

33:                                               ; preds = %11, %16
  %34 = phi i32 [ %32, %16 ], [ %14, %11 ], !dbg !6209
  ret i32 %34, !dbg !6233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6234 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6236, metadata !DIExpression()), !dbg !6238
  call void @llvm.dbg.value(metadata i8* %1, metadata !6237, metadata !DIExpression()), !dbg !6238
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6239, !srcloc !6241
  %3 = tail call fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !6242
  ret i32 %3, !dbg !6243
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !6244 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6248, metadata !DIExpression()), !dbg !6249
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6250, !srcloc !6252
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !6253
  ret void, !dbg !6254
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6255 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6257, metadata !DIExpression()), !dbg !6260
  call void @llvm.dbg.value(metadata i8* %1, metadata !6258, metadata !DIExpression()), !dbg !6260
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6261
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6261
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6261
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6259, metadata !DIExpression()), !dbg !6260
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 0, !dbg !6262
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !6262
  %8 = icmp eq i32 (%struct.device*, i8*)* %7, null, !dbg !6264
  br i1 %8, label %11, label %9, !dbg !6265

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1) #25, !dbg !6266
  br label %11, !dbg !6267

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6260
  ret i32 %12, !dbg !6268
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_init(%struct.tty_serial* noundef %0, %struct.device* noundef %1) local_unnamed_addr #1 !dbg !6269 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6273, metadata !DIExpression()), !dbg !6275
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !6274, metadata !DIExpression()), !dbg !6275
  %3 = icmp eq %struct.device* %1, null, !dbg !6276
  br i1 %3, label %17, label %4, !dbg !6278

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6279
  store %struct.device* %1, %struct.device** %5, align 4, !dbg !6280
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6281
  store i8* null, i8** %6, align 4, !dbg !6282
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6283
  store i32 0, i32* %7, align 4, !dbg !6284
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6285
  store i8* null, i8** %8, align 4, !dbg !6286
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6287
  store i32 0, i32* %9, align 4, !dbg !6288
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !6289
  store i16 0, i16* %10, align 2, !dbg !6290
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !6291
  store i16 0, i16* %11, align 4, !dbg !6292
  %12 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6293
  store i16 0, i16* %12, align 2, !dbg !6294
  %13 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6295
  store i16 0, i16* %13, align 4, !dbg !6296
  %14 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6297
  store i32 -1, i32* %14, align 4, !dbg !6298
  %15 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !6299
  store i32 -1, i32* %15, align 4, !dbg !6300
  %16 = bitcast %struct.tty_serial* %0 to i8*, !dbg !6301
  tail call fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef nonnull %1, i8* noundef %16) #26, !dbg !6302
  br label %17, !dbg !6303

17:                                               ; preds = %2, %4
  %18 = phi i32 [ 0, %4 ], [ -19, %2 ], !dbg !6275
  ret i32 %18, !dbg !6304
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6305 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6307, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @tty_uart_isr, metadata !6308, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i8* %1, metadata !6309, metadata !DIExpression()), !dbg !6311
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6312
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6312
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6312
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6310, metadata !DIExpression()), !dbg !6311
  %6 = icmp eq %struct.uart_driver_api* %5, null, !dbg !6313
  br i1 %6, label %12, label %7, !dbg !6315

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 18, !dbg !6316
  %9 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %8, align 4, !dbg !6316
  %10 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %9, null, !dbg !6317
  br i1 %10, label %12, label %11, !dbg !6318

11:                                               ; preds = %7
  tail call void %9(%struct.device* noundef nonnull %0, void (%struct.device*, i8*)* noundef nonnull @tty_uart_isr, i8* noundef %1) #25, !dbg !6319
  br label %12, !dbg !6321

12:                                               ; preds = %11, %7, %2
  ret void, !dbg !6322
}

; Function Attrs: noinline nounwind optsize
define internal void @tty_uart_isr(%struct.device* noundef %0, i8* noundef %1) #1 !dbg !6323 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6325, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.value(metadata i8* %1, metadata !6326, metadata !DIExpression()), !dbg !6331
  %4 = bitcast i8* %1 to %struct.tty_serial*, !dbg !6332
  call void @llvm.dbg.value(metadata %struct.tty_serial* %4, metadata !6327, metadata !DIExpression()), !dbg !6331
  tail call fastcc void @uart_irq_update(%struct.device* noundef %0) #26, !dbg !6333
  %5 = tail call fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) #26, !dbg !6334
  %6 = icmp eq i32 %5, 0, !dbg !6334
  br i1 %6, label %15, label %7, !dbg !6335

7:                                                ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6336
  call void @llvm.dbg.value(metadata i8* %3, metadata !6328, metadata !DIExpression(DW_OP_deref)), !dbg !6337
  %8 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6338
  %9 = icmp eq i32 %8, 0, !dbg !6341
  br i1 %9, label %14, label %10, !dbg !6342

10:                                               ; preds = %7, %10
  %11 = load i8, i8* %3, align 1, !dbg !6343
  call void @llvm.dbg.value(metadata i8 %11, metadata !6328, metadata !DIExpression()), !dbg !6337
  call fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %4, i8 noundef zeroext %11) #26, !dbg !6344
  call void @llvm.dbg.value(metadata i8* %3, metadata !6328, metadata !DIExpression(DW_OP_deref)), !dbg !6337
  %12 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6338
  %13 = icmp eq i32 %12, 0, !dbg !6341
  br i1 %13, label %14, label %10, !dbg !6342, !llvm.loop !6345

14:                                               ; preds = %10, %7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6348
  br label %15, !dbg !6349

15:                                               ; preds = %14, %2
  %16 = call fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) #26, !dbg !6350
  %17 = icmp eq i32 %16, 0, !dbg !6350
  br i1 %17, label %44, label %18, !dbg !6352

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %1, i32 60, !dbg !6353
  %20 = bitcast i8* %19 to i16*, !dbg !6353
  %21 = load i16, i16* %20, align 4, !dbg !6353
  %22 = getelementptr inbounds i8, i8* %1, i32 62, !dbg !6356
  %23 = bitcast i8* %22 to i16*, !dbg !6356
  %24 = load i16, i16* %23, align 2, !dbg !6356
  %25 = icmp eq i16 %21, %24, !dbg !6357
  br i1 %25, label %26, label %27, !dbg !6358

26:                                               ; preds = %18
  call fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6359
  br label %44, !dbg !6361

27:                                               ; preds = %18
  %28 = zext i16 %21 to i32, !dbg !6362
  %29 = getelementptr inbounds i8, i8* %1, i32 52, !dbg !6363
  %30 = bitcast i8* %29 to i8**, !dbg !6363
  %31 = load i8*, i8** %30, align 4, !dbg !6363
  %32 = add i16 %21, 1, !dbg !6365
  store i16 %32, i16* %20, align 4, !dbg !6365
  %33 = getelementptr inbounds i8, i8* %31, i32 %28, !dbg !6366
  call fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %33) #26, !dbg !6367
  %34 = load i16, i16* %20, align 4, !dbg !6368
  %35 = zext i16 %34 to i32, !dbg !6370
  %36 = getelementptr inbounds i8, i8* %1, i32 56, !dbg !6371
  %37 = bitcast i8* %36 to i32*, !dbg !6371
  %38 = load i32, i32* %37, align 4, !dbg !6371
  %39 = icmp ugt i32 %38, %35, !dbg !6372
  br i1 %39, label %41, label %40, !dbg !6373

40:                                               ; preds = %27
  store i16 0, i16* %20, align 4, !dbg !6374
  br label %41, !dbg !6376

41:                                               ; preds = %40, %27
  %42 = getelementptr inbounds i8, i8* %1, i32 36, !dbg !6377
  %43 = bitcast i8* %42 to %struct.k_sem*, !dbg !6377
  call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %43) #26, !dbg !6378
  br label %44

44:                                               ; preds = %26, %41, %15
  ret void, !dbg !6379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6380 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6382, metadata !DIExpression()), !dbg !6383
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6384, !srcloc !6386
  tail call fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) #26, !dbg !6387
  ret void, !dbg !6388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6389 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6391, metadata !DIExpression()), !dbg !6393
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6394
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6394
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6394
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6392, metadata !DIExpression()), !dbg !6393
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 13, !dbg !6395
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6395
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6397
  br i1 %7, label %10, label %8, !dbg !6398

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6399
  br label %10, !dbg !6400

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6393
  ret i32 %11, !dbg !6401
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6402 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6404, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i8* %1, metadata !6405, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i32 1, metadata !6406, metadata !DIExpression()), !dbg !6408
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6409
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6409
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6409
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6407, metadata !DIExpression()), !dbg !6408
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 6, !dbg !6410
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6410
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6412
  br i1 %8, label %11, label %9, !dbg !6413

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6414
  br label %11, !dbg !6415

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6408
  ret i32 %12, !dbg !6416
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6417 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6419, metadata !DIExpression()), !dbg !6422
  call void @llvm.dbg.value(metadata i8 %1, metadata !6420, metadata !DIExpression()), !dbg !6422
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6423
  %4 = load i16, i16* %3, align 2, !dbg !6423
  %5 = zext i16 %4 to i32, !dbg !6424
  %6 = add nuw nsw i32 %5, 1, !dbg !6425
  call void @llvm.dbg.value(metadata i32 %6, metadata !6421, metadata !DIExpression()), !dbg !6422
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6426
  %8 = load i32, i32* %7, align 4, !dbg !6426
  %9 = icmp ult i32 %6, %8, !dbg !6428
  %10 = select i1 %9, i32 %6, i32 0, !dbg !6429
  call void @llvm.dbg.value(metadata i32 %10, metadata !6421, metadata !DIExpression()), !dbg !6422
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6430
  %12 = load i16, i16* %11, align 4, !dbg !6430
  %13 = zext i16 %12 to i32, !dbg !6432
  %14 = icmp eq i32 %10, %13, !dbg !6433
  br i1 %14, label %15, label %17, !dbg !6434

15:                                               ; preds = %2
  %16 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef nonnull %0, i8 noundef zeroext 126) #26, !dbg !6435
  br label %23, !dbg !6437

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6438
  %19 = load i8*, i8** %18, align 4, !dbg !6438
  %20 = getelementptr inbounds i8, i8* %19, i32 %5, !dbg !6439
  store i8 %1, i8* %20, align 1, !dbg !6440
  %21 = trunc i32 %10 to i16, !dbg !6441
  store i16 %21, i16* %3, align 2, !dbg !6442
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6443
  tail call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %22) #26, !dbg !6444
  br label %23, !dbg !6445

23:                                               ; preds = %17, %15
  ret void, !dbg !6446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6447 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6449, metadata !DIExpression()), !dbg !6451
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6452
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6452
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6452
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6450, metadata !DIExpression()), !dbg !6451
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 9, !dbg !6453
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6453
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6455
  br i1 %7, label %10, label %8, !dbg !6456

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6457
  br label %10, !dbg !6458

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6451
  ret i32 %11, !dbg !6459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6460 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6462, metadata !DIExpression()), !dbg !6463
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6464, !srcloc !6466
  tail call fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6467
  ret void, !dbg !6468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6469 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6471, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.value(metadata i8* %1, metadata !6472, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.value(metadata i32 1, metadata !6473, metadata !DIExpression()), !dbg !6475
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6476
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6476
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6476
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6474, metadata !DIExpression()), !dbg !6475
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 5, !dbg !6477
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6477
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6479
  br i1 %8, label %11, label %9, !dbg !6480

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6481
  br label %11, !dbg !6482

11:                                               ; preds = %2, %9
  ret void, !dbg !6483
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_give(%struct.k_sem* noundef %0) unnamed_addr #1 !dbg !6484 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6488, metadata !DIExpression()), !dbg !6489
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6490, !srcloc !6492
  tail call void @z_impl_k_sem_give(%struct.k_sem* noundef %0) #25, !dbg !6493
  ret void, !dbg !6494
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6495 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6497, metadata !DIExpression()), !dbg !6499
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6500
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6500
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6500
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6498, metadata !DIExpression()), !dbg !6499
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 8, !dbg !6501
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6501
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6503
  br i1 %7, label %9, label %8, !dbg !6504

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6505
  br label %9, !dbg !6507

9:                                                ; preds = %8, %1
  ret void, !dbg !6508
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6509 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6511, metadata !DIExpression()), !dbg !6513
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6514
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6514
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6514
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6512, metadata !DIExpression()), !dbg !6513
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 17, !dbg !6515
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6515
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6517
  br i1 %7, label %10, label %8, !dbg !6518

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6519
  br label %10, !dbg !6520

10:                                               ; preds = %1, %8
  ret void, !dbg !6521
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_rx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6522 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6526, metadata !DIExpression()), !dbg !6529
  call void @llvm.dbg.value(metadata i8* %1, metadata !6527, metadata !DIExpression()), !dbg !6529
  call void @llvm.dbg.value(metadata i32 %2, metadata !6528, metadata !DIExpression()), !dbg !6529
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6530
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6530
  tail call fastcc void @uart_irq_rx_disable(%struct.device* noundef %5) #26, !dbg !6531
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6532
  store i8* %1, i8** %6, align 4, !dbg !6533
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6534
  store i32 %2, i32* %7, align 4, !dbg !6535
  %8 = icmp eq i32 %2, 0, !dbg !6536
  br i1 %8, label %12, label %9, !dbg !6538

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6539
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %10, i32 noundef 0) #26, !dbg !6541
  %11 = load %struct.device*, %struct.device** %4, align 4, !dbg !6542
  tail call fastcc void @uart_irq_rx_enable(%struct.device* noundef %11) #26, !dbg !6543
  br label %12, !dbg !6544

12:                                               ; preds = %9, %3
  ret i32 0, !dbg !6545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6546 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6548, metadata !DIExpression()), !dbg !6549
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6550, !srcloc !6552
  tail call fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) #26, !dbg !6553
  ret void, !dbg !6554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !6555 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6559, metadata !DIExpression()), !dbg !6562
  call void @llvm.dbg.value(metadata i32 %1, metadata !6560, metadata !DIExpression()), !dbg !6562
  call void @llvm.dbg.value(metadata i32 -1, metadata !6561, metadata !DIExpression()), !dbg !6562
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6563, !srcloc !6565
  %3 = tail call i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef -1) #25, !dbg !6566
  ret void, !dbg !6567
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6568 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6570, metadata !DIExpression()), !dbg !6571
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6572, !srcloc !6574
  tail call fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) #26, !dbg !6575
  ret void, !dbg !6576
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6577 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6579, metadata !DIExpression()), !dbg !6581
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6582
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6582
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6582
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6580, metadata !DIExpression()), !dbg !6581
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 10, !dbg !6583
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6583
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6585
  br i1 %7, label %9, label %8, !dbg !6586

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6587
  br label %9, !dbg !6589

9:                                                ; preds = %8, %1
  ret void, !dbg !6590
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6591 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6593, metadata !DIExpression()), !dbg !6595
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6596
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6596
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6596
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6594, metadata !DIExpression()), !dbg !6595
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 11, !dbg !6597
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6597
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6599
  br i1 %7, label %9, label %8, !dbg !6600

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6601
  br label %9, !dbg !6603

9:                                                ; preds = %8, %1
  ret void, !dbg !6604
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_tx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6605 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6607, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata i8* %1, metadata !6608, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata i32 %2, metadata !6609, metadata !DIExpression()), !dbg !6610
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6611
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6611
  tail call fastcc void @uart_irq_tx_disable(%struct.device* noundef %5) #26, !dbg !6612
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6613
  store i8* %1, i8** %6, align 4, !dbg !6614
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6615
  store i32 %2, i32* %7, align 4, !dbg !6616
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !6617
  %9 = add i32 %2, -1, !dbg !6618
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %8, i32 noundef %9) #26, !dbg !6619
  ret i32 0, !dbg !6620
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_write(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6621 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6625, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.value(metadata i8* %1, metadata !6626, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.value(metadata i32 %2, metadata !6627, metadata !DIExpression()), !dbg !6628
  %4 = tail call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6629
  ret i32 %4, !dbg !6630
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_read(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6631 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6635, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.value(metadata i8* %1, metadata !6636, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.value(metadata i32 %2, metadata !6637, metadata !DIExpression()), !dbg !6638
  %4 = tail call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6639
  ret i32 %4, !dbg !6640
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_putchar(i8 noundef zeroext %0) local_unnamed_addr #1 !dbg !6641 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8 %0, metadata !6643, metadata !DIExpression()), !dbg !6644
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.value(metadata i8* %2, metadata !6643, metadata !DIExpression(DW_OP_deref)), !dbg !6644
  %3 = call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %2, i32 noundef 1) #25, !dbg !6645
  ret i32 %3, !dbg !6646
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_getchar() local_unnamed_addr #1 !dbg !6647 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6653
  call void @llvm.dbg.value(metadata i8* %1, metadata !6651, metadata !DIExpression(DW_OP_deref)), !dbg !6654
  %2 = call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %1, i32 noundef 1) #25, !dbg !6655
  call void @llvm.dbg.value(metadata i32 %2, metadata !6652, metadata !DIExpression()), !dbg !6654
  %3 = icmp slt i32 %2, 0, !dbg !6656
  %4 = load i8, i8* %1, align 1, !dbg !6658
  %5 = zext i8 %4 to i32, !dbg !6658
  %6 = select i1 %3, i32 %2, i32 %5, !dbg !6658
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6659
  ret i32 %6, !dbg !6659
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_init() local_unnamed_addr #1 !dbg !6660 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !6662, metadata !DIExpression()), !dbg !6667
  %1 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !6668
  br i1 %1, label %2, label %13, !dbg !6670

2:                                                ; preds = %0
  %3 = tail call i32 @tty_init(%struct.tty_serial* noundef nonnull @console_serial, %struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !6671
  call void @llvm.dbg.value(metadata i32 %3, metadata !6663, metadata !DIExpression()), !dbg !6667
  %4 = icmp eq i32 %3, 0, !dbg !6672
  br i1 %4, label %5, label %13, !dbg !6674

5:                                                ; preds = %2
  %6 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !6675
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %6, metadata !6664, metadata !DIExpression()), !dbg !6676
  %7 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %6, i32 0, i32 18, !dbg !6677
  %8 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %7, align 4, !dbg !6677
  %9 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %8, null, !dbg !6679
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = tail call i32 @tty_set_tx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([512 x i8], [512 x i8]* @console_txbuf, i32 0, i32 0), i32 noundef 512) #25, !dbg !6680
  %12 = tail call i32 @tty_set_rx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @console_rxbuf, i32 0, i32 0), i32 noundef 64) #25, !dbg !6681
  br label %13, !dbg !6682

13:                                               ; preds = %2, %0, %5, %10
  %14 = phi i32 [ 0, %10 ], [ -134, %5 ], [ -19, %0 ], [ %3, %2 ]
  ret i32 %14, !dbg !6683
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !6684 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !6689, metadata !DIExpression()), !dbg !6690
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6691, !srcloc !6693
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !6694
  ret i1 %1, !dbg !6695
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !6696 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !6698, metadata !DIExpression()), !dbg !6699
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !6700
  ret i1 %1, !dbg !6701
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6751, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6752, metadata !DIExpression()), !dbg !6753
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6754
  ret void, !dbg !6755
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6756 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6773, metadata !DIExpression()), !dbg !6776
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6774, metadata !DIExpression()), !dbg !6776
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6777
  %4 = load i32, i32* %3, align 4, !dbg !6777
  call void @llvm.dbg.value(metadata i32 %4, metadata !6775, metadata !DIExpression()), !dbg !6776
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6778
  ret void, !dbg !6779
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6780 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6784, metadata !DIExpression()), !dbg !6787
  call void @llvm.dbg.value(metadata i8* %0, metadata !6785, metadata !DIExpression()), !dbg !6787
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6788
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6788
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6786, metadata !DIExpression()), !dbg !6789
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6789
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6790
  %5 = bitcast i8* %4 to i32*, !dbg !6790
  %6 = load i32, i32* %5, align 4, !dbg !6790
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6791
  store i32 %6, i32* %7, align 4, !dbg !6792
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6793
  unreachable, !dbg !6794
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6795 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6798, metadata !DIExpression()), !dbg !6799
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6800
  ret void, !dbg !6801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6806, metadata !DIExpression()), !dbg !6807
  %2 = icmp sgt i32 %0, -1, !dbg !6808
  br i1 %2, label %3, label %8, !dbg !6810

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6811, !srcloc !6813
  %4 = and i32 %0, 31, !dbg !6814
  %5 = shl nuw i32 1, %4, !dbg !6815
  %6 = lshr i32 %0, 5, !dbg !6816
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6817
  store volatile i32 %5, i32* %7, align 4, !dbg !6818
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6819, !srcloc !6820
  br label %8, !dbg !6821

8:                                                ; preds = %3, %1
  ret void, !dbg !6822
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6825, metadata !DIExpression()), !dbg !6826
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6827
  ret void, !dbg !6828
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6829 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6831, metadata !DIExpression()), !dbg !6832
  %2 = icmp sgt i32 %0, -1, !dbg !6833
  br i1 %2, label %3, label %8, !dbg !6835

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6836
  %5 = shl nuw i32 1, %4, !dbg !6838
  %6 = lshr i32 %0, 5, !dbg !6839
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6840
  store volatile i32 %5, i32* %7, align 4, !dbg !6841
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6842, !srcloc !6846
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6847, !srcloc !6850
  br label %8, !dbg !6851

8:                                                ; preds = %3, %1
  ret void, !dbg !6852
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6853 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6857, metadata !DIExpression()), !dbg !6858
  %2 = lshr i32 %0, 5, !dbg !6859
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6860
  %4 = load volatile i32, i32* %3, align 4, !dbg !6860
  %5 = and i32 %0, 31, !dbg !6861
  %6 = shl nuw i32 1, %5, !dbg !6861
  %7 = and i32 %4, %6, !dbg !6862
  ret i32 %7, !dbg !6863
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6868, metadata !DIExpression()), !dbg !6871
  call void @llvm.dbg.value(metadata i32 %1, metadata !6869, metadata !DIExpression()), !dbg !6871
  call void @llvm.dbg.value(metadata i32 %2, metadata !6870, metadata !DIExpression()), !dbg !6871
  %4 = add i32 %1, 1, !dbg !6872
  call void @llvm.dbg.value(metadata i32 %4, metadata !6869, metadata !DIExpression()), !dbg !6871
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6875
  ret void, !dbg !6876
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6881, metadata !DIExpression()), !dbg !6883
  call void @llvm.dbg.value(metadata i32 %1, metadata !6882, metadata !DIExpression()), !dbg !6883
  %3 = trunc i32 %1 to i8, !dbg !6884
  %4 = shl i8 %3, 4, !dbg !6884
  %5 = and i32 %0, 15, !dbg !6886
  %6 = add nsw i32 %5, -4, !dbg !6886
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6886
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6886
  %9 = icmp slt i32 %0, 0, !dbg !6886
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6886
  store volatile i8 %4, i8* %10, align 1, !dbg !6884
  ret void, !dbg !6887
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6888 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6890, metadata !DIExpression()), !dbg !6891
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6892
  ret void, !dbg !6893
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6894 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6896
  tail call void @z_arm_int_exit() #25, !dbg !6897
  ret void, !dbg !6898
}

; Function Attrs: optsize
declare !dbg !6899 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6900 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6902 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6904
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6905
  tail call void @z_bss_zero() #25, !dbg !6906
  tail call void @z_data_copy() #25, !dbg !6907
  tail call void @z_arm_interrupt_init() #25, !dbg !6908
  tail call void @z_cstart() #28, !dbg !6909
  unreachable, !dbg !6909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6910 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6911
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6912, !srcloc !6915
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6916, !srcloc !6919
  ret void, !dbg !6920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6921 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6922
  %2 = and i32 %1, -15728641, !dbg !6922
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6922
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #24, !dbg !6923, !srcloc !6930
  call void @llvm.dbg.value(metadata i32 %3, metadata !6928, metadata !DIExpression()) #24, !dbg !6931
  %4 = and i32 %3, -5, !dbg !6932
  call void @llvm.dbg.value(metadata i32 %4, metadata !6933, metadata !DIExpression()) #24, !dbg !6938
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #24, !dbg !6940, !srcloc !6941
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6942, !srcloc !6919
  ret void, !dbg !6944
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6948, metadata !DIExpression()), !dbg !6949
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6950
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6951
  store i32 %0, i32* %3, align 4, !dbg !6952
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6953
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6954
  store i32 %4, i32* %5, align 4, !dbg !6955
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6956
  %7 = or i32 %6, 268435456, !dbg !6956
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6956
  call void @llvm.dbg.value(metadata i32 0, metadata !6957, metadata !DIExpression()) #24, !dbg !6960
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6962, !srcloc !6963
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6964
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6965
  %10 = load i32, i32* %9, align 4, !dbg !6965
  ret i32 %10, !dbg !6966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6967 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7077, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7078, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.value(metadata i8* %2, metadata !7079, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7080, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.value(metadata i8* %4, metadata !7081, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.value(metadata i8* %5, metadata !7082, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.value(metadata i8* %6, metadata !7083, metadata !DIExpression()), !dbg !7085
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7086
  call void @llvm.dbg.value(metadata i8* %8, metadata !7084, metadata !DIExpression()), !dbg !7085
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7087
  %10 = bitcast i8* %9 to i32*, !dbg !7087
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7088
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7089
  %12 = bitcast i8* %8 to i32*, !dbg !7090
  store i32 %11, i32* %12, align 4, !dbg !7091
  %13 = ptrtoint i8* %4 to i32, !dbg !7092
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7093
  %15 = bitcast i8* %14 to i32*, !dbg !7093
  store i32 %13, i32* %15, align 4, !dbg !7094
  %16 = ptrtoint i8* %5 to i32, !dbg !7095
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7096
  %18 = bitcast i8* %17 to i32*, !dbg !7096
  store i32 %16, i32* %18, align 4, !dbg !7097
  %19 = ptrtoint i8* %6 to i32, !dbg !7098
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7099
  %21 = bitcast i8* %20 to i32*, !dbg !7099
  store i32 %19, i32* %21, align 4, !dbg !7100
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7101
  %23 = bitcast i8* %22 to i32*, !dbg !7101
  store i32 16777216, i32* %23, align 4, !dbg !7102
  %24 = ptrtoint i8* %8 to i32, !dbg !7103
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7104
  store i32 %24, i32* %25, align 8, !dbg !7105
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7106
  store i32 0, i32* %26, align 4, !dbg !7107
  ret void, !dbg !7108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !7109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7114, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i32 %1, metadata !7115, metadata !DIExpression()), !dbg !7120
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7121
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7116, metadata !DIExpression()), !dbg !7120
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7122
  br i1 %4, label %19, label %5, !dbg !7124

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7119, metadata !DIExpression()), !dbg !7120
  %6 = icmp eq i32 %0, -22, !dbg !7125
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7125
  %8 = load i32, i32* %7, align 4, !dbg !7125
  br i1 %6, label %16, label %9, !dbg !7127

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7125
  %11 = icmp ule i32 %10, %0, !dbg !7125
  %12 = icmp ugt i32 %8, %0, !dbg !7125
  %13 = and i1 %12, %11, !dbg !7125
  %14 = icmp ugt i32 %8, %1, !dbg !7125
  %15 = and i1 %14, %13, !dbg !7125
  br i1 %15, label %18, label %19, !dbg !7125

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7125
  br i1 %17, label %18, label %19, !dbg !7127

18:                                               ; preds = %9, %16
  br label %19, !dbg !7128

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7120
  ret i32 %20, !dbg !7130
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7131 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7135, metadata !DIExpression()), !dbg !7138
  call void @llvm.dbg.value(metadata i8* %1, metadata !7136, metadata !DIExpression()), !dbg !7138
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7137, metadata !DIExpression()), !dbg !7138
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7139
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7140
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !7141, !srcloc !7142
  unreachable, !dbg !7143
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7144 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7162, metadata !DIExpression()), !dbg !7172
  call void @llvm.dbg.value(metadata i32 %1, metadata !7163, metadata !DIExpression()), !dbg !7172
  call void @llvm.dbg.value(metadata i32 %2, metadata !7164, metadata !DIExpression()), !dbg !7172
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7165, metadata !DIExpression()), !dbg !7172
  call void @llvm.dbg.value(metadata i32 0, metadata !7166, metadata !DIExpression()), !dbg !7172
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7173
  %9 = and i32 %8, 511, !dbg !7174
  call void @llvm.dbg.value(metadata i32 %9, metadata !7167, metadata !DIExpression()), !dbg !7172
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7175
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7175
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7176
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7176
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7171, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i32 0, metadata !7178, metadata !DIExpression()) #24, !dbg !7181
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !7183, !srcloc !7184
  call void @llvm.dbg.value(metadata i8* %6, metadata !7169, metadata !DIExpression(DW_OP_deref)), !dbg !7172
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7185
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7170, metadata !DIExpression()), !dbg !7172
  call void @llvm.dbg.value(metadata i8* %5, metadata !7168, metadata !DIExpression(DW_OP_deref)), !dbg !7172
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !7186
  call void @llvm.dbg.value(metadata i32 %12, metadata !7166, metadata !DIExpression()), !dbg !7172
  %13 = load i8, i8* %5, align 1, !dbg !7187, !range !7189
  call void @llvm.dbg.value(metadata i8 %13, metadata !7168, metadata !DIExpression()), !dbg !7172
  %14 = icmp eq i8 %13, 0, !dbg !7187
  br i1 %14, label %15, label %32, !dbg !7190

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7191
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7192
  %18 = load i8, i8* %6, align 1, !dbg !7193, !range !7189
  call void @llvm.dbg.value(metadata i8 %18, metadata !7169, metadata !DIExpression()), !dbg !7172
  %19 = icmp eq i8 %18, 0, !dbg !7193
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7195
  %21 = load i32, i32* %20, align 4, !dbg !7195
  br i1 %19, label %27, label %22, !dbg !7196

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7197
  %24 = icmp eq i32 %23, 0, !dbg !7200
  br i1 %24, label %25, label %31, !dbg !7201

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7202
  br label %29, !dbg !7204

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7205
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7195
  br label %31, !dbg !7207

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7207
  br label %32, !dbg !7208

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7208
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7208
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7208
  ret void, !dbg !7208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !7209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7214, metadata !DIExpression()), !dbg !7220
  call void @llvm.dbg.value(metadata i32 %1, metadata !7215, metadata !DIExpression()), !dbg !7220
  call void @llvm.dbg.value(metadata i32 %2, metadata !7216, metadata !DIExpression()), !dbg !7220
  call void @llvm.dbg.value(metadata i8* %3, metadata !7217, metadata !DIExpression()), !dbg !7220
  call void @llvm.dbg.value(metadata i8 0, metadata !7218, metadata !DIExpression()), !dbg !7220
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7219, metadata !DIExpression()), !dbg !7220
  store i8 0, i8* %3, align 1, !dbg !7221
  %5 = icmp ult i32 %2, -16777216, !dbg !7222
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !7224
  br i1 %8, label %16, label %9, !dbg !7224

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !7225
  %11 = icmp eq i32 %10, 0, !dbg !7225
  br i1 %11, label %12, label %13, !dbg !7227

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !7219, metadata !DIExpression()), !dbg !7220
  store i8 1, i8* %3, align 1, !dbg !7230
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !7220
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !7219, metadata !DIExpression()), !dbg !7220
  br label %16, !dbg !7233

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !7220
  ret %struct.__esf* %17, !dbg !7234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7235 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7239, metadata !DIExpression()), !dbg !7243
  call void @llvm.dbg.value(metadata i32 %1, metadata !7240, metadata !DIExpression()), !dbg !7243
  call void @llvm.dbg.value(metadata i8* %2, metadata !7241, metadata !DIExpression()), !dbg !7243
  call void @llvm.dbg.value(metadata i32 0, metadata !7242, metadata !DIExpression()), !dbg !7243
  store i8 0, i8* %2, align 1, !dbg !7244
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7245

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7246
  call void @llvm.dbg.value(metadata i32 %5, metadata !7242, metadata !DIExpression()), !dbg !7243
  br label %11, !dbg !7248

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7249
  call void @llvm.dbg.value(metadata i32 %7, metadata !7242, metadata !DIExpression()), !dbg !7243
  br label %11, !dbg !7250

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7251
  call void @llvm.dbg.value(metadata i32 0, metadata !7242, metadata !DIExpression()), !dbg !7243
  br label %11, !dbg !7252

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7253
  call void @llvm.dbg.value(metadata i32 0, metadata !7242, metadata !DIExpression()), !dbg !7243
  br label %11, !dbg !7254

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7255
  br label %11, !dbg !7256

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !7257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7258 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7262, metadata !DIExpression()), !dbg !7265
  call void @llvm.dbg.value(metadata i8* %1, metadata !7263, metadata !DIExpression()), !dbg !7265
  call void @llvm.dbg.value(metadata i32 0, metadata !7264, metadata !DIExpression()), !dbg !7265
  store i8 0, i8* %1, align 1, !dbg !7266
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7267
  %4 = and i32 %3, 2, !dbg !7269
  %5 = icmp eq i32 %4, 0, !dbg !7270
  br i1 %5, label %6, label %33, !dbg !7271

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7272
  %8 = icmp sgt i32 %7, -1, !dbg !7274
  br i1 %8, label %9, label %33, !dbg !7275

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7276
  %11 = and i32 %10, 1073741824, !dbg !7278
  %12 = icmp eq i32 %11, 0, !dbg !7279
  br i1 %12, label %33, label %13, !dbg !7280

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7281
  br i1 %14, label %15, label %18, !dbg !7284

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7285
  %17 = load i32, i32* %16, align 4, !dbg !7285
  call void @llvm.dbg.value(metadata i32 %17, metadata !7264, metadata !DIExpression()), !dbg !7265
  br label %33, !dbg !7287

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7288
  %20 = and i32 %19, 255, !dbg !7290
  %21 = icmp eq i32 %20, 0, !dbg !7291
  br i1 %21, label %24, label %22, !dbg !7292

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7293
  call void @llvm.dbg.value(metadata i32 %23, metadata !7264, metadata !DIExpression()), !dbg !7265
  br label %33, !dbg !7295

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7296
  %26 = and i32 %25, 65280, !dbg !7298
  %27 = icmp eq i32 %26, 0, !dbg !7299
  br i1 %27, label %29, label %28, !dbg !7300

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7301
  call void @llvm.dbg.value(metadata i32 0, metadata !7264, metadata !DIExpression()), !dbg !7265
  br label %33, !dbg !7303

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7304
  %31 = icmp ult i32 %30, 65536, !dbg !7306
  br i1 %31, label %33, label %32, !dbg !7307

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !7308
  call void @llvm.dbg.value(metadata i32 0, metadata !7264, metadata !DIExpression()), !dbg !7265
  br label %33, !dbg !7310

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !7265
  call void @llvm.dbg.value(metadata i32 %34, metadata !7264, metadata !DIExpression()), !dbg !7265
  ret i32 %34, !dbg !7311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7312 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7314, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i32 %1, metadata !7315, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i8* %2, metadata !7316, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i32 0, metadata !7317, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i32 -22, metadata !7318, metadata !DIExpression()), !dbg !7327
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7328
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7330
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7332
  %7 = and i32 %6, 2, !dbg !7333
  %8 = icmp eq i32 %7, 0, !dbg !7334
  br i1 %8, label %19, label %9, !dbg !7335

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7336
  call void @llvm.dbg.value(metadata i32 %10, metadata !7319, metadata !DIExpression()), !dbg !7337
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7338
  %12 = and i32 %11, 128, !dbg !7340
  %13 = icmp eq i32 %12, 0, !dbg !7341
  br i1 %13, label %19, label %14, !dbg !7342

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !7318, metadata !DIExpression()), !dbg !7327
  %15 = icmp eq i32 %1, 0, !dbg !7343
  br i1 %15, label %19, label %16, !dbg !7346

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7347
  %18 = and i32 %17, -129, !dbg !7347
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7347
  br label %19, !dbg !7349

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !7327
  call void @llvm.dbg.value(metadata i32 %20, metadata !7318, metadata !DIExpression()), !dbg !7327
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7350
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7352
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7354
  %24 = and i32 %23, 16, !dbg !7355
  %25 = icmp eq i32 %24, 0, !dbg !7355
  br i1 %25, label %26, label %30, !dbg !7356

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7357
  %28 = and i32 %27, 2, !dbg !7358
  %29 = icmp eq i32 %28, 0, !dbg !7358
  br i1 %29, label %39, label %30, !dbg !7359

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7360
  %32 = and i32 %31, 2048, !dbg !7361
  %33 = icmp eq i32 %32, 0, !dbg !7361
  br i1 %33, label %39, label %34, !dbg !7362

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !7363
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !7364
  call void @llvm.dbg.value(metadata i32 %36, metadata !7322, metadata !DIExpression()), !dbg !7365
  %37 = icmp eq i32 %36, 0, !dbg !7366
  br i1 %37, label %39, label %38, !dbg !7368

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !7369, metadata !DIExpression()) #24, !dbg !7372
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #24, !dbg !7375, !srcloc !7376
  call void @llvm.dbg.value(metadata i32 2, metadata !7317, metadata !DIExpression()), !dbg !7327
  br label %39, !dbg !7377

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !7327
  call void @llvm.dbg.value(metadata i32 %40, metadata !7317, metadata !DIExpression()), !dbg !7327
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7378
  %42 = and i32 %41, 32, !dbg !7380
  %43 = icmp eq i32 %42, 0, !dbg !7381
  br i1 %43, label %47, label %44, !dbg !7382

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7383
  %46 = and i32 %45, -8193, !dbg !7383
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7383
  br label %47, !dbg !7385

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7386
  %49 = or i32 %48, 255, !dbg !7386
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7386
  store i8 0, i8* %2, align 1, !dbg !7387
  ret i32 %40, !dbg !7388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !7389 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7393, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32 %0, metadata !7394, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i8* %1, metadata !7395, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32 0, metadata !7396, metadata !DIExpression()), !dbg !7400
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7401
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7403
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7405
  %6 = and i32 %5, 512, !dbg !7406
  %7 = icmp eq i32 %6, 0, !dbg !7406
  br i1 %7, label %18, label %8, !dbg !7407

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7408
  call void @llvm.dbg.value(metadata i32 %9, metadata !7397, metadata !DIExpression()), !dbg !7409
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7410
  %11 = and i32 %10, 32768, !dbg !7412
  %12 = icmp ne i32 %11, 0, !dbg !7413
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !7414
  br i1 %14, label %15, label %18, !dbg !7414

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7415
  %17 = and i32 %16, -32769, !dbg !7415
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7415
  br label %18, !dbg !7419

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7420
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7422
  %21 = and i32 %20, 256, !dbg !7424
  %22 = icmp eq i32 %21, 0, !dbg !7425
  br i1 %22, label %23, label %25, !dbg !7426

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7427
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7429
  %27 = or i32 %26, 65280, !dbg !7429
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7429
  store i8 0, i8* %1, align 1, !dbg !7430
  ret void, !dbg !7431
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !7432 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7438, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i32 0, metadata !7439, metadata !DIExpression()), !dbg !7440
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7441
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7443
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7445
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7447
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7449
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7451
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7453
  %8 = or i32 %7, -65536, !dbg !7453
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7453
  ret void, !dbg !7454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !7455 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7459, metadata !DIExpression()), !dbg !7461
  call void @llvm.dbg.value(metadata i8* %0, metadata !7460, metadata !DIExpression()), !dbg !7461
  store i8 0, i8* %0, align 1, !dbg !7462
  ret void, !dbg !7463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7464 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7468, metadata !DIExpression()), !dbg !7471
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7472
  %3 = load i32, i32* %2, align 4, !dbg !7472
  %4 = inttoptr i32 %3 to i16*, !dbg !7473
  call void @llvm.dbg.value(metadata i16* %4, metadata !7469, metadata !DIExpression()), !dbg !7471
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7474
  %6 = or i32 %5, 256, !dbg !7474
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7474
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7475, !srcloc !7478
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7479, !srcloc !7482
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7483
  %8 = load i16, i16* %7, align 2, !dbg !7484
  call void @llvm.dbg.value(metadata i16 %8, metadata !7470, metadata !DIExpression()), !dbg !7471
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7485
  %10 = and i32 %9, -257, !dbg !7485
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7485
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7486, !srcloc !7478
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7488, !srcloc !7482
  %11 = icmp eq i16 %8, -8446, !dbg !7490
  ret i1 %11, !dbg !7492
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7493 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7494
  %2 = or i32 %1, 16, !dbg !7494
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7494
  ret void, !dbg !7495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7496 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7499, metadata !DIExpression()), !dbg !7500
  br label %1, !dbg !7501

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7499, metadata !DIExpression()), !dbg !7500
  tail call fastcc void @__NVIC_SetPriority.19(i32 noundef %2) #26, !dbg !7503
  %3 = add nuw nsw i32 %2, 1, !dbg !7506
  call void @llvm.dbg.value(metadata i32 %3, metadata !7499, metadata !DIExpression()), !dbg !7500
  %4 = icmp eq i32 %3, 97, !dbg !7507
  br i1 %4, label %5, label %1, !dbg !7501, !llvm.loop !7508

5:                                                ; preds = %1
  ret void, !dbg !7510
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.19(i32 noundef %0) unnamed_addr #15 !dbg !7511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7513, metadata !DIExpression()), !dbg !7515
  call void @llvm.dbg.value(metadata i32 1, metadata !7514, metadata !DIExpression()), !dbg !7515
  %2 = and i32 %0, 15, !dbg !7516
  %3 = add nsw i32 %2, -4, !dbg !7516
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7516
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7516
  %6 = icmp slt i32 %0, 0, !dbg !7516
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7516
  store volatile i8 16, i8* %7, align 1, !dbg !7517
  ret void, !dbg !7519
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7520 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7626, metadata !DIExpression()), !dbg !7627
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7628
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7630
  br i1 %3, label %4, label %12, !dbg !7631

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7632, !srcloc !7644
  call void @llvm.dbg.value(metadata i32 %5, metadata !7635, metadata !DIExpression()) #24, !dbg !7645
  %6 = icmp eq i32 %5, 0, !dbg !7646
  br i1 %6, label %12, label %7, !dbg !7647

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7648
  %9 = or i32 %8, 268435456, !dbg !7648
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7648
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7650
  %11 = and i32 %10, -32769, !dbg !7650
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7650
  br label %12, !dbg !7651

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7652
  ret void, !dbg !7653
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7654 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7655
  ret void, !dbg !7656
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !361 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !480, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i8 0, metadata !481, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i32 64, metadata !483, metadata !DIExpression()), !dbg !7657
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7658
  %3 = load i32, i32* %2, align 4, !dbg !7658
  %4 = add i32 %3, -64, !dbg !7660
  call void @llvm.dbg.value(metadata i32 %4, metadata !482, metadata !DIExpression()), !dbg !7657
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7661
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7662
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7663
  call void @llvm.dbg.value(metadata i8 1, metadata !481, metadata !DIExpression()), !dbg !7657
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7664
  ret void, !dbg !7665
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7666 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7667
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7668, !srcloc !7671
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7672, !srcloc !7675
  ret void, !dbg !7676
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7677 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7678, !srcloc !7681
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7682
  ret void, !dbg !7683
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !7684 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7699, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i8 %1, metadata !7700, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i32 %2, metadata !7701, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i32 %3, metadata !7702, metadata !DIExpression()), !dbg !7703
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7704
  ret void, !dbg !7706
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7707 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7712, metadata !DIExpression()), !dbg !7717
  call void @llvm.dbg.value(metadata i8 %1, metadata !7713, metadata !DIExpression()), !dbg !7717
  call void @llvm.dbg.value(metadata i32 undef, metadata !7714, metadata !DIExpression()), !dbg !7717
  call void @llvm.dbg.value(metadata i32 undef, metadata !7715, metadata !DIExpression()), !dbg !7717
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7718
  call void @llvm.dbg.value(metadata i8 %3, metadata !7716, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7717
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7719
  call void @llvm.dbg.value(metadata i32 %4, metadata !7716, metadata !DIExpression()), !dbg !7717
  %5 = trunc i32 %4 to i8, !dbg !7720
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7721
  ret void, !dbg !7722
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7723 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7727, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i8 %1, metadata !7728, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i8 %2, metadata !7729, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i1 %3, metadata !7730, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7733
  %5 = zext i8 %2 to i32, !dbg !7734
  call void @llvm.dbg.value(metadata i32 %5, metadata !7732, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i32 0, metadata !7731, metadata !DIExpression()), !dbg !7733
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7732, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i32 0, metadata !7731, metadata !DIExpression()), !dbg !7733
  %7 = icmp eq i8 %1, 0, !dbg !7735
  br i1 %7, label %29, label %8, !dbg !7738

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7732, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i32 %10, metadata !7731, metadata !DIExpression()), !dbg !7733
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7739
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7742
  %13 = load i32, i32* %12, align 4, !dbg !7742
  %14 = icmp eq i32 %13, 0, !dbg !7743
  br i1 %14, label %25, label %15, !dbg !7744

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7745

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7747
  %18 = icmp eq i32 %17, 0, !dbg !7747
  br i1 %18, label %29, label %19, !dbg !7748

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7749
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7750
  call void @llvm.dbg.value(metadata i32 %21, metadata !7732, metadata !DIExpression()), !dbg !7733
  %22 = icmp eq i32 %21, -22, !dbg !7751
  br i1 %22, label %29, label %23, !dbg !7753

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7754
  call void @llvm.dbg.value(metadata i32 %24, metadata !7732, metadata !DIExpression()), !dbg !7733
  br label %25, !dbg !7755

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7733
  call void @llvm.dbg.value(metadata i32 %26, metadata !7732, metadata !DIExpression()), !dbg !7733
  %27 = add nuw nsw i32 %10, 1, !dbg !7756
  call void @llvm.dbg.value(metadata i32 %27, metadata !7731, metadata !DIExpression()), !dbg !7733
  %28 = icmp eq i32 %27, %6, !dbg !7735
  br i1 %28, label %29, label %8, !dbg !7738, !llvm.loop !7757

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7733
  ret i32 %30, !dbg !7759
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7760 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7764, metadata !DIExpression()), !dbg !7766
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7767
  %3 = load i32, i32* %2, align 4, !dbg !7767
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7768, !range !3885
  %5 = icmp ult i32 %4, 2, !dbg !7768
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7769
  br i1 %7, label %8, label %15, !dbg !7769

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7770
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7771
  %11 = load i32, i32* %10, align 4, !dbg !7771
  %12 = and i32 %11, %9, !dbg !7772
  %13 = icmp eq i32 %12, 0, !dbg !7773
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7765, metadata !DIExpression()), !dbg !7766
  ret i32 %16, !dbg !7774
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7775 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7779, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7780, metadata !DIExpression()), !dbg !7782
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7783
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7783
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7781, metadata !DIExpression()), !dbg !7784
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7785
  %6 = load i32, i32* %5, align 4, !dbg !7785
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7786
  store i32 %6, i32* %7, align 4, !dbg !7787
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7788
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7789
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7790
  %11 = load i32, i32* %10, align 4, !dbg !7790
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7791
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7792
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7793
  ret i32 %12, !dbg !7794
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7795 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7802, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7803, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.value(metadata i32 undef, metadata !7804, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.value(metadata i32 %2, metadata !7805, metadata !DIExpression()), !dbg !7806
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7807
  %5 = load i32, i32* %4, align 4, !dbg !7807
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7808
  %7 = or i32 %6, %5, !dbg !7809
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7810
  store i32 %7, i32* %8, align 4, !dbg !7811
  ret void, !dbg !7812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7813 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7817, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7818, metadata !DIExpression()), !dbg !7819
  %3 = zext i8 %0 to i32, !dbg !7820
  %4 = icmp ugt i8 %0, 7, !dbg !7822
  br i1 %4, label %6, label %5, !dbg !7823

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7824
  br label %6, !dbg !7825

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7819
  ret i32 %7, !dbg !7826
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7827 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7831, metadata !DIExpression()), !dbg !7833
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7832, metadata !DIExpression()), !dbg !7833
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7834
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7835
  %4 = load i32, i32* %3, align 4, !dbg !7835
  %5 = and i32 %4, -32, !dbg !7836
  %6 = or i32 %5, %0, !dbg !7837
  %7 = or i32 %6, 16, !dbg !7837
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7838
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7839
  %9 = load i32, i32* %8, align 4, !dbg !7839
  %10 = or i32 %9, 1, !dbg !7840
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7841
  ret void, !dbg !7842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7843 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7846, metadata !DIExpression()), !dbg !7847
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7848
  ret void, !dbg !7849
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7854, metadata !DIExpression()), !dbg !7855
  %2 = icmp ult i32 %0, 33, !dbg !7856
  br i1 %2, label %11, label %3, !dbg !7858

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7859
  br i1 %4, label %11, label %5, !dbg !7861

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7862
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7863, !range !3885
  %8 = mul nsw i32 %7, -2, !dbg !7864
  %9 = add nsw i32 %8, 62, !dbg !7864
  %10 = and i32 %9, 62, !dbg !7865
  br label %11, !dbg !7866

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7855
  ret i32 %12, !dbg !7867
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7868 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7872, metadata !DIExpression()), !dbg !7874
  call void @llvm.dbg.value(metadata i8 %1, metadata !7873, metadata !DIExpression()), !dbg !7874
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7875
  ret void, !dbg !7877
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7878 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7882, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.value(metadata i8 %1, metadata !7883, metadata !DIExpression()), !dbg !7889
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7890
  call void @llvm.dbg.value(metadata i8 %3, metadata !7884, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7889
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7891
  call void @llvm.dbg.value(metadata i32 %4, metadata !7884, metadata !DIExpression()), !dbg !7889
  %5 = icmp ne i32 %4, -22, !dbg !7892
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7893
  call void @llvm.dbg.value(metadata i32 %4, metadata !7885, metadata !DIExpression()), !dbg !7894
  br i1 %7, label %8, label %12, !dbg !7893

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7885, metadata !DIExpression()), !dbg !7894
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7895
  %10 = add i32 %9, 1, !dbg !7898
  call void @llvm.dbg.value(metadata i32 %10, metadata !7885, metadata !DIExpression()), !dbg !7894
  %11 = icmp eq i32 %10, 8, !dbg !7899
  br i1 %11, label %12, label %8, !dbg !7900, !llvm.loop !7901

12:                                               ; preds = %8, %2
  ret void, !dbg !7903
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7907, metadata !DIExpression()), !dbg !7908
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7909
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7910
  ret void, !dbg !7911
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7912 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7915
  %2 = icmp ugt i32 %1, 8, !dbg !7917
  br i1 %2, label %14, label %3, !dbg !7918

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7919
  call void @llvm.dbg.value(metadata i32 0, metadata !7914, metadata !DIExpression()), !dbg !7920
  %4 = icmp eq i32 %1, 0, !dbg !7921
  br i1 %4, label %12, label %5, !dbg !7924

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7924

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7914, metadata !DIExpression()), !dbg !7920
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7925
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7927
  %10 = add nuw i32 %8, 1, !dbg !7928
  call void @llvm.dbg.value(metadata i32 %10, metadata !7914, metadata !DIExpression()), !dbg !7920
  %11 = icmp eq i32 %10, %1, !dbg !7921
  br i1 %11, label %12, label %7, !dbg !7924, !llvm.loop !7929

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7931
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7932
  tail call void @arm_core_mpu_enable() #26, !dbg !7933
  br label %14, !dbg !7934

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7920
  ret i32 %15, !dbg !7935
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7936 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7943, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i8* %1, metadata !7944, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i8* %0, metadata !7945, metadata !DIExpression()), !dbg !7946
  %3 = load i8, i8* %1, align 1, !dbg !7947
  %4 = icmp eq i8 %3, 0, !dbg !7948
  br i1 %4, label %13, label %5, !dbg !7949

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7943, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i8* %8, metadata !7944, metadata !DIExpression()), !dbg !7946
  store i8 %6, i8* %7, align 1, !dbg !7950
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7952
  call void @llvm.dbg.value(metadata i8* %9, metadata !7943, metadata !DIExpression()), !dbg !7946
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7953
  call void @llvm.dbg.value(metadata i8* %10, metadata !7944, metadata !DIExpression()), !dbg !7946
  %11 = load i8, i8* %10, align 1, !dbg !7947
  %12 = icmp eq i8 %11, 0, !dbg !7948
  br i1 %12, label %13, label %5, !dbg !7949, !llvm.loop !7954

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7956
  ret i8* %0, !dbg !7957
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7958 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7962, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.value(metadata i8* %1, metadata !7963, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.value(metadata i32 %2, metadata !7964, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.value(metadata i8* %0, metadata !7965, metadata !DIExpression()), !dbg !7966
  %4 = icmp eq i32 %2, 0, !dbg !7967
  br i1 %4, label %22, label %5, !dbg !7968

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7962, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.value(metadata i32 %7, metadata !7964, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.value(metadata i8* %8, metadata !7963, metadata !DIExpression()), !dbg !7966
  %9 = load i8, i8* %8, align 1, !dbg !7969
  %10 = icmp eq i8 %9, 0, !dbg !7970
  br i1 %10, label %16, label %11, !dbg !7971

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7972
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7974
  call void @llvm.dbg.value(metadata i8* %12, metadata !7963, metadata !DIExpression()), !dbg !7966
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7975
  call void @llvm.dbg.value(metadata i8* %13, metadata !7962, metadata !DIExpression()), !dbg !7966
  %14 = add i32 %7, -1, !dbg !7976
  call void @llvm.dbg.value(metadata i32 %14, metadata !7964, metadata !DIExpression()), !dbg !7966
  %15 = icmp eq i32 %14, 0, !dbg !7967
  br i1 %15, label %22, label %5, !dbg !7968, !llvm.loop !7977

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7962, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.value(metadata i32 %18, metadata !7964, metadata !DIExpression()), !dbg !7966
  store i8 0, i8* %17, align 1, !dbg !7979
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7981
  call void @llvm.dbg.value(metadata i8* %19, metadata !7962, metadata !DIExpression()), !dbg !7966
  %20 = add i32 %18, -1, !dbg !7982
  call void @llvm.dbg.value(metadata i32 %20, metadata !7964, metadata !DIExpression()), !dbg !7966
  %21 = icmp eq i32 %20, 0, !dbg !7983
  br i1 %21, label %22, label %16, !dbg !7984, !llvm.loop !7985

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7987
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7988 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7992, metadata !DIExpression()), !dbg !7995
  call void @llvm.dbg.value(metadata i32 %1, metadata !7993, metadata !DIExpression()), !dbg !7995
  call void @llvm.dbg.value(metadata i32 %1, metadata !7994, metadata !DIExpression()), !dbg !7995
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7996

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7992, metadata !DIExpression()), !dbg !7995
  %6 = load i8, i8* %5, align 1, !dbg !7997
  %7 = icmp eq i8 %6, %3, !dbg !7998
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7999
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8000
  call void @llvm.dbg.value(metadata i8* %10, metadata !7992, metadata !DIExpression()), !dbg !7995
  br i1 %9, label %11, label %4, !dbg !7999, !llvm.loop !8002

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8004
  ret i8* %12, !dbg !8005
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !8006 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8008, metadata !DIExpression()), !dbg !8011
  call void @llvm.dbg.value(metadata i32 %1, metadata !8009, metadata !DIExpression()), !dbg !8011
  call void @llvm.dbg.value(metadata i8* null, metadata !8010, metadata !DIExpression()), !dbg !8011
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8012

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8011
  call void @llvm.dbg.value(metadata i8* %6, metadata !8010, metadata !DIExpression()), !dbg !8011
  call void @llvm.dbg.value(metadata i8* %5, metadata !8008, metadata !DIExpression()), !dbg !8011
  %7 = load i8, i8* %5, align 1, !dbg !8013
  %8 = icmp eq i8 %7, %3, !dbg !8016
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8017
  call void @llvm.dbg.value(metadata i8* %9, metadata !8010, metadata !DIExpression()), !dbg !8011
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8018
  call void @llvm.dbg.value(metadata i8* %10, metadata !8008, metadata !DIExpression()), !dbg !8011
  %11 = icmp eq i8 %7, 0, !dbg !8019
  br i1 %11, label %12, label %4, !dbg !8019, !llvm.loop !8020

12:                                               ; preds = %4
  ret i8* %9, !dbg !8022
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !8023 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8027, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i32 0, metadata !8028, metadata !DIExpression()), !dbg !8029
  %2 = load i8, i8* %0, align 1, !dbg !8030
  %3 = icmp eq i8 %2, 0, !dbg !8031
  br i1 %3, label %11, label %4, !dbg !8032

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8028, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i8* %6, metadata !8027, metadata !DIExpression()), !dbg !8029
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8033
  call void @llvm.dbg.value(metadata i8* %7, metadata !8027, metadata !DIExpression()), !dbg !8029
  %8 = add i32 %5, 1, !dbg !8035
  call void @llvm.dbg.value(metadata i32 %8, metadata !8028, metadata !DIExpression()), !dbg !8029
  %9 = load i8, i8* %7, align 1, !dbg !8030
  %10 = icmp eq i8 %9, 0, !dbg !8031
  br i1 %10, label %11, label %4, !dbg !8032, !llvm.loop !8036

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8029
  ret i32 %12, !dbg !8038
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !8039 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8043, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i32 %1, metadata !8044, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i32 0, metadata !8045, metadata !DIExpression()), !dbg !8046
  %3 = load i8, i8* %0, align 1, !dbg !8047
  %4 = icmp ne i8 %3, 0, !dbg !8048
  %5 = icmp ne i32 %1, 0, !dbg !8049
  %6 = and i1 %4, %5, !dbg !8049
  br i1 %6, label %7, label %16, !dbg !8050

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8045, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i8* %9, metadata !8043, metadata !DIExpression()), !dbg !8046
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8051
  call void @llvm.dbg.value(metadata i8* %10, metadata !8043, metadata !DIExpression()), !dbg !8046
  %11 = add nuw i32 %8, 1, !dbg !8053
  call void @llvm.dbg.value(metadata i32 %11, metadata !8045, metadata !DIExpression()), !dbg !8046
  %12 = load i8, i8* %10, align 1, !dbg !8047
  %13 = icmp ne i8 %12, 0, !dbg !8048
  %14 = icmp ult i32 %11, %1, !dbg !8049
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8049
  br i1 %15, label %7, label %16, !dbg !8050, !llvm.loop !8054

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8046
  ret i32 %17, !dbg !8056
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !8057 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8061, metadata !DIExpression()), !dbg !8063
  call void @llvm.dbg.value(metadata i8* %1, metadata !8062, metadata !DIExpression()), !dbg !8063
  %3 = load i8, i8* %0, align 1, !dbg !8064
  %4 = load i8, i8* %1, align 1, !dbg !8065
  %5 = icmp ne i8 %3, %4, !dbg !8066
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8067
  br i1 %7, label %18, label %8, !dbg !8067

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8062, metadata !DIExpression()), !dbg !8063
  call void @llvm.dbg.value(metadata i8* %10, metadata !8061, metadata !DIExpression()), !dbg !8063
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8068
  call void @llvm.dbg.value(metadata i8* %11, metadata !8061, metadata !DIExpression()), !dbg !8063
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8070
  call void @llvm.dbg.value(metadata i8* %12, metadata !8062, metadata !DIExpression()), !dbg !8063
  %13 = load i8, i8* %11, align 1, !dbg !8064
  %14 = load i8, i8* %12, align 1, !dbg !8065
  %15 = icmp ne i8 %13, %14, !dbg !8066
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8067
  br i1 %17, label %18, label %8, !dbg !8067, !llvm.loop !8071

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8064
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8065
  %21 = zext i8 %19 to i32, !dbg !8074
  %22 = zext i8 %20 to i32, !dbg !8075
  %23 = sub nsw i32 %21, %22, !dbg !8076
  ret i32 %23, !dbg !8077
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8078 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8082, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i8* %1, metadata !8083, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i32 %2, metadata !8084, metadata !DIExpression()), !dbg !8085
  %4 = icmp eq i32 %2, 0, !dbg !8086
  br i1 %4, label %23, label %5, !dbg !8086

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8084, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i8* %7, metadata !8083, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i8* %8, metadata !8082, metadata !DIExpression()), !dbg !8085
  %9 = load i8, i8* %8, align 1, !dbg !8087
  %10 = load i8, i8* %7, align 1, !dbg !8088
  %11 = icmp ne i8 %9, %10, !dbg !8089
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8090
  br i1 %13, label %19, label %14, !dbg !8090

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8091
  call void @llvm.dbg.value(metadata i8* %15, metadata !8082, metadata !DIExpression()), !dbg !8085
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8093
  call void @llvm.dbg.value(metadata i8* %16, metadata !8083, metadata !DIExpression()), !dbg !8085
  %17 = add i32 %6, -1, !dbg !8094
  call void @llvm.dbg.value(metadata i32 %17, metadata !8084, metadata !DIExpression()), !dbg !8085
  %18 = icmp eq i32 %17, 0, !dbg !8086
  br i1 %18, label %23, label %5, !dbg !8086, !llvm.loop !8095

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8098
  %21 = zext i8 %10 to i32, !dbg !8099
  %22 = sub nsw i32 %20, %21, !dbg !8100
  br label %23, !dbg !8101

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8101
  ret i32 %24, !dbg !8102
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8103 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8108, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i8* %1, metadata !8109, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i8** %2, metadata !8110, metadata !DIExpression()), !dbg !8113
  %4 = icmp eq i8* %0, null, !dbg !8114
  br i1 %4, label %5, label %7, !dbg !8114

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8115
  br label %7, !dbg !8114

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8114
  call void @llvm.dbg.value(metadata i8* %8, metadata !8111, metadata !DIExpression()), !dbg !8113
  %9 = load i8, i8* %8, align 1, !dbg !8116
  %10 = icmp eq i8 %9, 0, !dbg !8116
  br i1 %10, label %33, label %11, !dbg !8117

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8111, metadata !DIExpression()), !dbg !8113
  %14 = zext i8 %12 to i32, !dbg !8116
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8118
  %16 = icmp eq i8* %15, null, !dbg !8117
  br i1 %16, label %21, label %17, !dbg !8119

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8120
  call void @llvm.dbg.value(metadata i8* %18, metadata !8111, metadata !DIExpression()), !dbg !8113
  %19 = load i8, i8* %18, align 1, !dbg !8116
  %20 = icmp eq i8 %19, 0, !dbg !8116
  br i1 %20, label %33, label %11, !dbg !8117, !llvm.loop !8122

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8112, metadata !DIExpression()), !dbg !8113
  %24 = zext i8 %22 to i32, !dbg !8124
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8125
  %26 = icmp eq i8* %25, null, !dbg !8126
  br i1 %26, label %27, label %31, !dbg !8127

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8128
  call void @llvm.dbg.value(metadata i8* %28, metadata !8112, metadata !DIExpression()), !dbg !8113
  %29 = load i8, i8* %28, align 1, !dbg !8124
  %30 = icmp eq i8 %29, 0, !dbg !8124
  br i1 %30, label %33, label %21, !dbg !8130, !llvm.loop !8131

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8133
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8136
  br label %33, !dbg !8137

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8113
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8113
  store i8* %34, i8** %2, align 4, !dbg !8113
  ret i8* %35, !dbg !8138
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8139 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8141, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.value(metadata i8* %1, metadata !8142, metadata !DIExpression()), !dbg !8143
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8144
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8145
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8146
  ret i8* %0, !dbg !8147
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8148 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8150, metadata !DIExpression()), !dbg !8155
  call void @llvm.dbg.value(metadata i8* %1, metadata !8151, metadata !DIExpression()), !dbg !8155
  call void @llvm.dbg.value(metadata i32 %2, metadata !8152, metadata !DIExpression()), !dbg !8155
  call void @llvm.dbg.value(metadata i8* %0, metadata !8153, metadata !DIExpression()), !dbg !8155
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8156
  call void @llvm.dbg.value(metadata i32 %4, metadata !8154, metadata !DIExpression()), !dbg !8155
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8157
  call void @llvm.dbg.value(metadata i8* %5, metadata !8150, metadata !DIExpression()), !dbg !8155
  call void @llvm.dbg.value(metadata i8* %1, metadata !8151, metadata !DIExpression()), !dbg !8155
  call void @llvm.dbg.value(metadata i32 %2, metadata !8152, metadata !DIExpression()), !dbg !8155
  call void @llvm.dbg.value(metadata i32 %2, metadata !8152, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8155
  %6 = icmp eq i32 %2, 0, !dbg !8158
  br i1 %6, label %18, label %7, !dbg !8159

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8160
  call void @llvm.dbg.value(metadata i8* %9, metadata !8150, metadata !DIExpression()), !dbg !8155
  call void @llvm.dbg.value(metadata i8* %10, metadata !8151, metadata !DIExpression()), !dbg !8155
  %12 = load i8, i8* %10, align 1, !dbg !8161
  %13 = icmp eq i8 %12, 0, !dbg !8162
  br i1 %13, label %18, label %14, !dbg !8163

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8164
  call void @llvm.dbg.value(metadata i8* %15, metadata !8151, metadata !DIExpression()), !dbg !8155
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8166
  call void @llvm.dbg.value(metadata i8* %16, metadata !8150, metadata !DIExpression()), !dbg !8155
  store i8 %12, i8* %9, align 1, !dbg !8167
  call void @llvm.dbg.value(metadata i32 %11, metadata !8152, metadata !DIExpression()), !dbg !8155
  call void @llvm.dbg.value(metadata i32 %11, metadata !8152, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8155
  %17 = icmp eq i32 %11, 0, !dbg !8158
  br i1 %17, label %18, label %7, !dbg !8159, !llvm.loop !8168

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8155
  store i8 0, i8* %19, align 1, !dbg !8170
  ret i8* %0, !dbg !8171
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8172 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8176, metadata !DIExpression()), !dbg !8181
  call void @llvm.dbg.value(metadata i8* %1, metadata !8177, metadata !DIExpression()), !dbg !8181
  call void @llvm.dbg.value(metadata i32 %2, metadata !8178, metadata !DIExpression()), !dbg !8181
  call void @llvm.dbg.value(metadata i8* %0, metadata !8179, metadata !DIExpression()), !dbg !8181
  call void @llvm.dbg.value(metadata i8* %1, metadata !8180, metadata !DIExpression()), !dbg !8181
  %4 = icmp eq i32 %2, 0, !dbg !8182
  br i1 %4, label %31, label %5, !dbg !8184

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8180, metadata !DIExpression()), !dbg !8181
  call void @llvm.dbg.value(metadata i8* %0, metadata !8179, metadata !DIExpression()), !dbg !8181
  call void @llvm.dbg.value(metadata i32 %2, metadata !8178, metadata !DIExpression()), !dbg !8181
  %6 = add i32 %2, -1, !dbg !8185
  call void @llvm.dbg.value(metadata i32 %6, metadata !8178, metadata !DIExpression()), !dbg !8181
  %7 = icmp eq i32 %6, 0, !dbg !8186
  br i1 %7, label %23, label %8, !dbg !8187

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8188
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8188
  br label %11, !dbg !8188

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8180, metadata !DIExpression()), !dbg !8181
  call void @llvm.dbg.value(metadata i8* %14, metadata !8179, metadata !DIExpression()), !dbg !8181
  %15 = load i8, i8* %14, align 1, !dbg !8189
  %16 = load i8, i8* %13, align 1, !dbg !8190
  %17 = icmp eq i8 %15, %16, !dbg !8191
  br i1 %17, label %18, label %23, !dbg !8188

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8192
  call void @llvm.dbg.value(metadata i8* %19, metadata !8179, metadata !DIExpression()), !dbg !8181
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8194
  call void @llvm.dbg.value(metadata i8* %20, metadata !8180, metadata !DIExpression()), !dbg !8181
  call void @llvm.dbg.value(metadata i32 %12, metadata !8178, metadata !DIExpression()), !dbg !8181
  %21 = add i32 %12, -1, !dbg !8185
  call void @llvm.dbg.value(metadata i32 %21, metadata !8178, metadata !DIExpression()), !dbg !8181
  %22 = icmp eq i32 %21, 0, !dbg !8186
  br i1 %22, label %23, label %11, !dbg !8187, !llvm.loop !8195

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8181
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8181
  %26 = load i8, i8* %24, align 1, !dbg !8197
  %27 = zext i8 %26 to i32, !dbg !8197
  %28 = load i8, i8* %25, align 1, !dbg !8198
  %29 = zext i8 %28 to i32, !dbg !8198
  %30 = sub nsw i32 %27, %29, !dbg !8199
  br label %31, !dbg !8200

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8181
  ret i32 %32, !dbg !8201
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8202 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8206, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i8* %1, metadata !8207, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i32 %2, metadata !8208, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i8* %0, metadata !8209, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i8* %1, metadata !8210, metadata !DIExpression()), !dbg !8211
  %4 = ptrtoint i8* %0 to i32, !dbg !8212
  %5 = ptrtoint i8* %1 to i32, !dbg !8212
  %6 = sub i32 %4, %5, !dbg !8212
  %7 = icmp ult i32 %6, %2, !dbg !8214
  br i1 %7, label %10, label %8, !dbg !8215

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8210, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i8* %0, metadata !8209, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i32 %2, metadata !8208, metadata !DIExpression()), !dbg !8211
  %9 = icmp eq i32 %2, 0, !dbg !8216
  br i1 %9, label %26, label %17, !dbg !8218

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8208, metadata !DIExpression()), !dbg !8211
  %12 = add i32 %11, -1, !dbg !8219
  call void @llvm.dbg.value(metadata i32 %12, metadata !8208, metadata !DIExpression()), !dbg !8211
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8222
  %14 = load i8, i8* %13, align 1, !dbg !8222
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8223
  store i8 %14, i8* %15, align 1, !dbg !8224
  %16 = icmp eq i32 %12, 0, !dbg !8225
  br i1 %16, label %26, label %10, !dbg !8226, !llvm.loop !8227

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8210, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i8* %19, metadata !8209, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i32 %20, metadata !8208, metadata !DIExpression()), !dbg !8211
  %21 = load i8, i8* %18, align 1, !dbg !8229
  store i8 %21, i8* %19, align 1, !dbg !8231
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8232
  call void @llvm.dbg.value(metadata i8* %22, metadata !8209, metadata !DIExpression()), !dbg !8211
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8233
  call void @llvm.dbg.value(metadata i8* %23, metadata !8210, metadata !DIExpression()), !dbg !8211
  %24 = add i32 %20, -1, !dbg !8234
  call void @llvm.dbg.value(metadata i32 %24, metadata !8208, metadata !DIExpression()), !dbg !8211
  %25 = icmp eq i32 %24, 0, !dbg !8216
  br i1 %25, label %26, label %17, !dbg !8218, !llvm.loop !8235

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8237
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8238 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8244, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.value(metadata i8* %1, metadata !8245, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.value(metadata i32 %2, metadata !8246, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.value(metadata i8* %0, metadata !8247, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.value(metadata i8* %1, metadata !8248, metadata !DIExpression()), !dbg !8249
  %4 = icmp eq i32 %2, 0, !dbg !8250
  br i1 %4, label %14, label %5, !dbg !8251

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8248, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.value(metadata i8* %7, metadata !8247, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.value(metadata i32 %8, metadata !8246, metadata !DIExpression()), !dbg !8249
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8252
  call void @llvm.dbg.value(metadata i8* %9, metadata !8248, metadata !DIExpression()), !dbg !8249
  %10 = load i8, i8* %6, align 1, !dbg !8254
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8255
  call void @llvm.dbg.value(metadata i8* %11, metadata !8247, metadata !DIExpression()), !dbg !8249
  store i8 %10, i8* %7, align 1, !dbg !8256
  %12 = add i32 %8, -1, !dbg !8257
  call void @llvm.dbg.value(metadata i32 %12, metadata !8246, metadata !DIExpression()), !dbg !8249
  %13 = icmp eq i32 %12, 0, !dbg !8250
  br i1 %13, label %14, label %5, !dbg !8251, !llvm.loop !8258

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8260
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !8261 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8265, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.value(metadata i32 %1, metadata !8266, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.value(metadata i32 %2, metadata !8267, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.value(metadata i8* %0, metadata !8268, metadata !DIExpression()), !dbg !8270
  %4 = trunc i32 %1 to i8, !dbg !8271
  call void @llvm.dbg.value(metadata i8 %4, metadata !8269, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.value(metadata i32 %2, metadata !8267, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.value(metadata i8* %0, metadata !8268, metadata !DIExpression()), !dbg !8270
  %5 = icmp eq i32 %2, 0, !dbg !8272
  br i1 %5, label %12, label %6, !dbg !8273

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8267, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.value(metadata i8* %8, metadata !8268, metadata !DIExpression()), !dbg !8270
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8274
  call void @llvm.dbg.value(metadata i8* %9, metadata !8268, metadata !DIExpression()), !dbg !8270
  store i8 %4, i8* %8, align 1, !dbg !8276
  %10 = add i32 %7, -1, !dbg !8277
  call void @llvm.dbg.value(metadata i32 %10, metadata !8267, metadata !DIExpression()), !dbg !8270
  %11 = icmp eq i32 %10, 0, !dbg !8272
  br i1 %11, label %12, label %6, !dbg !8273, !llvm.loop !8278

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8280
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8281 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8285, metadata !DIExpression()), !dbg !8291
  call void @llvm.dbg.value(metadata i32 %1, metadata !8286, metadata !DIExpression()), !dbg !8291
  call void @llvm.dbg.value(metadata i32 %2, metadata !8287, metadata !DIExpression()), !dbg !8291
  %4 = icmp eq i32 %2, 0, !dbg !8292
  br i1 %4, label %17, label %5, !dbg !8293

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8294

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8295
  call void @llvm.dbg.value(metadata i8* %9, metadata !8288, metadata !DIExpression()), !dbg !8295
  call void @llvm.dbg.value(metadata i32 %8, metadata !8287, metadata !DIExpression()), !dbg !8291
  call void @llvm.dbg.value(metadata i8* %9, metadata !8288, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8295
  %10 = load i8, i8* %9, align 1, !dbg !8296
  %11 = icmp eq i8 %10, %6, !dbg !8299
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8300
  call void @llvm.dbg.value(metadata i8* %12, metadata !8288, metadata !DIExpression()), !dbg !8295
  call void @llvm.dbg.value(metadata i32 %13, metadata !8287, metadata !DIExpression()), !dbg !8291
  br i1 %15, label %16, label %7, !dbg !8300, !llvm.loop !8301

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8303

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8291
  ret i8* %19, !dbg !8304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !8305 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8307, metadata !DIExpression()), !dbg !8308
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8309
  ret void, !dbg !8310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !8311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8313, metadata !DIExpression()), !dbg !8314
  ret i32 -1, !dbg !8315
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8320, metadata !DIExpression()), !dbg !8322
  call void @llvm.dbg.value(metadata i32* %1, metadata !8321, metadata !DIExpression()), !dbg !8322
  %3 = ptrtoint i32* %1 to i32, !dbg !8323
  %4 = and i32 %3, -2, !dbg !8323
  %5 = icmp eq i32 %4, 2, !dbg !8323
  br i1 %5, label %6, label %9, !dbg !8323

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8324
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8324
  br label %9, !dbg !8325

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8325
  ret i32 %10, !dbg !8326
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8327 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8329, metadata !DIExpression()), !dbg !8331
  call void @llvm.dbg.value(metadata i32* %1, metadata !8330, metadata !DIExpression()), !dbg !8331
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8332
  ret i32 %3, !dbg !8333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8337, metadata !DIExpression()), !dbg !8339
  call void @llvm.dbg.value(metadata i32* %1, metadata !8338, metadata !DIExpression()), !dbg !8339
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8340, !srcloc !8342
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8343
  ret i32 %3, !dbg !8344
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8345 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8350, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i32* %1, metadata !8351, metadata !DIExpression()), !dbg !8354
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8355
  call void @llvm.dbg.value(metadata i32 %3, metadata !8352, metadata !DIExpression()), !dbg !8354
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !8356
  call void @llvm.dbg.value(metadata i32 %4, metadata !8353, metadata !DIExpression()), !dbg !8354
  %5 = icmp ne i32 %3, %4, !dbg !8357
  %6 = sext i1 %5 to i32, !dbg !8358
  ret i32 %6, !dbg !8359
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8360 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8364, metadata !DIExpression()), !dbg !8368
  call void @llvm.dbg.value(metadata i32 %1, metadata !8365, metadata !DIExpression()), !dbg !8368
  call void @llvm.dbg.value(metadata i32 %2, metadata !8366, metadata !DIExpression()), !dbg !8368
  call void @llvm.dbg.value(metadata i32* %3, metadata !8367, metadata !DIExpression()), !dbg !8368
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8369
  ret i32 %5, !dbg !8370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8371 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8373, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.value(metadata i32 %1, metadata !8374, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.value(metadata i32 %2, metadata !8375, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.value(metadata i32* %3, metadata !8376, metadata !DIExpression()), !dbg !8377
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8378, !srcloc !8380
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8381
  ret i32 %5, !dbg !8382
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8383 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8385, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.value(metadata i32 %1, metadata !8386, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.value(metadata i32 %2, metadata !8387, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.value(metadata i32* %3, metadata !8388, metadata !DIExpression()), !dbg !8393
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8394
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8396
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8396
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8396
  br i1 %11, label %33, label %12, !dbg !8396

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8393
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8393
  call void @llvm.dbg.value(metadata i8* %14, metadata !8391, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.value(metadata i32 %13, metadata !8389, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.value(metadata i32 %1, metadata !8390, metadata !DIExpression()), !dbg !8393
  br label %15, !dbg !8397

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8399
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8393
  call void @llvm.dbg.value(metadata i8* %17, metadata !8391, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.value(metadata i32 %16, metadata !8390, metadata !DIExpression()), !dbg !8393
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8400
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8403
  call void @llvm.dbg.value(metadata i8* %19, metadata !8391, metadata !DIExpression()), !dbg !8393
  %20 = load i8, i8* %17, align 1, !dbg !8404
  %21 = zext i8 %20 to i32, !dbg !8405
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8400
  %23 = icmp eq i32 %22, -1, !dbg !8406
  br i1 %23, label %30, label %24, !dbg !8407

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8408
  call void @llvm.dbg.value(metadata i32 %25, metadata !8390, metadata !DIExpression()), !dbg !8393
  %26 = icmp eq i32 %25, 0, !dbg !8409
  br i1 %26, label %27, label %15, !dbg !8410, !llvm.loop !8411

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8413
  call void @llvm.dbg.value(metadata i32 %28, metadata !8389, metadata !DIExpression()), !dbg !8393
  %29 = icmp eq i32 %28, 0, !dbg !8414
  br i1 %29, label %30, label %12, !dbg !8415, !llvm.loop !8416

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8393
  call void @llvm.dbg.value(metadata i32 %31, metadata !8389, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.label(metadata !8392), !dbg !8419
  %32 = sub i32 %2, %31, !dbg !8420
  br label %33, !dbg !8421

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8393
  ret i32 %34, !dbg !8422
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8423 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8427, metadata !DIExpression()), !dbg !8428
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8429
  %3 = icmp eq i32 %2, -1, !dbg !8431
  br i1 %3, label %8, label %4, !dbg !8432

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8433
  %6 = icmp eq i32 %5, -1, !dbg !8434
  %7 = sext i1 %6 to i32, !dbg !8433
  br label %8, !dbg !8435

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8428
  ret i32 %9, !dbg !8436
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8437 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8439, metadata !DIExpression()), !dbg !8440
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !8441
  ret void, !dbg !8442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8443 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8447, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.value(metadata i32 %1, metadata !8448, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8449, metadata !DIExpression()), !dbg !8453
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8454
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8454
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8454
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8450, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.value(metadata i32 %0, metadata !8452, metadata !DIExpression()), !dbg !8453
  %7 = icmp slt i32 %0, %1, !dbg !8455
  br i1 %7, label %8, label %22, !dbg !8458

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8452, metadata !DIExpression()), !dbg !8453
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !8459
  %11 = icmp eq i32 %10, 0, !dbg !8459
  br i1 %11, label %19, label %12, !dbg !8462

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !8463
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8465
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8465
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8467
  br i1 %15, label %19, label %16, !dbg !8468

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8469
  %18 = load i8*, i8** %17, align 4, !dbg !8469
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8470
  br label %19, !dbg !8471

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8472
  call void @llvm.dbg.value(metadata i32 %20, metadata !8452, metadata !DIExpression()), !dbg !8453
  %21 = icmp eq i32 %20, %1, !dbg !8455
  br i1 %21, label %22, label %8, !dbg !8458, !llvm.loop !8473

22:                                               ; preds = %19, %3
  ret void, !dbg !8475
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !8476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8478, metadata !DIExpression()), !dbg !8479
  %2 = shl nuw i32 1, %0, !dbg !8480
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !8483
  ret i32 %3, !dbg !8484
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8489, metadata !DIExpression()), !dbg !8490
  %2 = shl nuw i32 1, %0, !dbg !8491
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !8494
  ret void, !dbg !8495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8499, metadata !DIExpression()), !dbg !8500
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8501
  ret void, !dbg !8502
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8505, metadata !DIExpression()), !dbg !8506
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8507
  %3 = and i32 %2, %0, !dbg !8507
  %4 = icmp eq i32 %3, %0, !dbg !8508
  %5 = zext i1 %4 to i32, !dbg !8508
  ret i32 %5, !dbg !8509
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8510 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8512, metadata !DIExpression()), !dbg !8513
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8514
  ret void, !dbg !8515
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8516 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8518, metadata !DIExpression()), !dbg !8519
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8520
  ret void, !dbg !8521
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8522 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8524, metadata !DIExpression()), !dbg !8525
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8526
  ret void, !dbg !8527
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8528 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8530, metadata !DIExpression()), !dbg !8531
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !8532
  ret void, !dbg !8533
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8534 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8536, metadata !DIExpression()), !dbg !8537
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !8538
  ret void, !dbg !8539
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8540 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8542, metadata !DIExpression()), !dbg !8543
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8544
  ret void, !dbg !8545
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8546 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8548, metadata !DIExpression()), !dbg !8549
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8550
  ret void, !dbg !8551
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8552 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8554, metadata !DIExpression()), !dbg !8555
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8556
  ret void, !dbg !8557
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8558 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8560, metadata !DIExpression()), !dbg !8561
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8562
  ret void, !dbg !8563
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8564 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8566, metadata !DIExpression()), !dbg !8567
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8568
  ret void, !dbg !8569
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8570 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8572, metadata !DIExpression()), !dbg !8573
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8574
  ret i32 0, !dbg !8575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !729 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !733, metadata !DIExpression()), !dbg !8576
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8577
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8579
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8581
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8583
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8585
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8587
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8589
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8591
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8593
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8595
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8597
  ret void, !dbg !8599
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8600 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8602, metadata !DIExpression()), !dbg !8604
  call void @llvm.dbg.value(metadata i32 0, metadata !8603, metadata !DIExpression()), !dbg !8604
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8605
  %3 = load i32, i32* %2, align 4, !dbg !8605
  call void @llvm.dbg.value(metadata i32 %3, metadata !8603, metadata !DIExpression()), !dbg !8604
  %4 = shl nuw i32 1, %0, !dbg !8606
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8607
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8608
  ret void, !dbg !8609
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8612, metadata !DIExpression()), !dbg !8613
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8614
  %3 = or i32 %2, %0, !dbg !8614
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8614
  ret void, !dbg !8615
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8616 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8618, metadata !DIExpression()), !dbg !8619
  %2 = icmp slt i32 %0, 32, !dbg !8620
  br i1 %2, label %3, label %5, !dbg !8622

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8623
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8625
  br label %5, !dbg !8626

5:                                                ; preds = %1, %3
  ret void, !dbg !8627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8628 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8630, metadata !DIExpression()), !dbg !8631
  %2 = xor i32 %0, -1, !dbg !8632
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8632
  %4 = and i32 %3, %2, !dbg !8632
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8632
  ret void, !dbg !8633
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8638, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i32 %1, metadata !8639, metadata !DIExpression()), !dbg !8640
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8641

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8642
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8644
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8645
  br label %11, !dbg !8646

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8647
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8648
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8649
  br label %11, !dbg !8650

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8651
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8652
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8653
  br label %11, !dbg !8654

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8655
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8656
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8657
  br label %11, !dbg !8658

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8659
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8660 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8662, metadata !DIExpression()), !dbg !8663
  %2 = xor i32 %0, -1, !dbg !8664
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8664
  %4 = and i32 %3, %2, !dbg !8664
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8664
  ret void, !dbg !8665
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8668, metadata !DIExpression()), !dbg !8669
  %2 = xor i32 %0, -1, !dbg !8670
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8670
  %4 = and i32 %3, %2, !dbg !8670
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8670
  ret void, !dbg !8671
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8672 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8674, metadata !DIExpression()), !dbg !8675
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8676
  %3 = or i32 %2, %0, !dbg !8676
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8676
  ret void, !dbg !8677
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8680, metadata !DIExpression()), !dbg !8681
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8682
  %3 = or i32 %2, %0, !dbg !8682
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8682
  ret void, !dbg !8683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !8684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8688, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8689, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.value(metadata i8* %2, metadata !8690, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !8691, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8693, metadata !DIExpression()), !dbg !8694
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8695
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8695
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8697
  br i1 %6, label %7, label %9, !dbg !8698

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8699
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8700
  store i8* %2, i8** %8, align 4, !dbg !8701
  br label %9, !dbg !8702

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8694
  ret i32 %10, !dbg !8703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8704 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8706, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !8707, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8708, metadata !DIExpression()), !dbg !8709
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8710
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8711
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8712
  store i8* null, i8** %3, align 4, !dbg !8713
  ret void, !dbg !8714
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8715 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8717, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata i8* %1, metadata !8718, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata i8* %1, metadata !8719, metadata !DIExpression()), !dbg !8722
  %3 = bitcast i8* %1 to i32*, !dbg !8723
  %4 = load i32, i32* %3, align 4, !dbg !8723
  %5 = add i32 %4, -169, !dbg !8723
  %6 = icmp ult i32 %5, -121, !dbg !8723
  br i1 %6, label %15, label %7, !dbg !8725

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8726
  %9 = inttoptr i32 %8 to i32*, !dbg !8727
  call void @llvm.dbg.value(metadata i32* %9, metadata !8720, metadata !DIExpression()), !dbg !8722
  %10 = load volatile i32, i32* %9, align 4, !dbg !8728
  call void @llvm.dbg.value(metadata i32 %10, metadata !8721, metadata !DIExpression()), !dbg !8722
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8729
  %12 = bitcast i8* %11 to i32*, !dbg !8729
  %13 = load i32, i32* %12, align 4, !dbg !8729
  %14 = or i32 %13, %10, !dbg !8730
  call void @llvm.dbg.value(metadata i32 %14, metadata !8721, metadata !DIExpression()), !dbg !8722
  store volatile i32 %14, i32* %9, align 4, !dbg !8731
  br label %15, !dbg !8732

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8722
  ret i32 %16, !dbg !8733
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8734 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8736, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata i8* %1, metadata !8737, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata i8* %1, metadata !8738, metadata !DIExpression()), !dbg !8741
  %3 = bitcast i8* %1 to i32*, !dbg !8742
  %4 = load i32, i32* %3, align 4, !dbg !8742
  %5 = add i32 %4, -169, !dbg !8742
  %6 = icmp ult i32 %5, -121, !dbg !8742
  br i1 %6, label %16, label %7, !dbg !8744

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8745
  %9 = inttoptr i32 %8 to i32*, !dbg !8746
  call void @llvm.dbg.value(metadata i32* %9, metadata !8739, metadata !DIExpression()), !dbg !8741
  %10 = load volatile i32, i32* %9, align 4, !dbg !8747
  call void @llvm.dbg.value(metadata i32 %10, metadata !8740, metadata !DIExpression()), !dbg !8741
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8748
  %12 = bitcast i8* %11 to i32*, !dbg !8748
  %13 = load i32, i32* %12, align 4, !dbg !8748
  %14 = xor i32 %13, -1, !dbg !8749
  %15 = and i32 %10, %14, !dbg !8750
  call void @llvm.dbg.value(metadata i32 %15, metadata !8740, metadata !DIExpression()), !dbg !8741
  store volatile i32 %15, i32* %9, align 4, !dbg !8751
  br label %16, !dbg !8752

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8741
  ret i32 %17, !dbg !8753
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8754 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8756, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i8* %1, metadata !8757, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i32* %2, metadata !8758, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i8* %1, metadata !8759, metadata !DIExpression()), !dbg !8764
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8765
  call void @llvm.dbg.value(metadata i32 %4, metadata !8760, metadata !DIExpression()), !dbg !8764
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #26, !dbg !8766
  call void @llvm.dbg.value(metadata i32 %5, metadata !8761, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i32 %5, metadata !8762, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i32 %4, metadata !8763, metadata !DIExpression()), !dbg !8764
  %6 = bitcast i8* %1 to i32*, !dbg !8767
  %7 = load i32, i32* %6, align 4, !dbg !8767
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !8768

8:                                                ; preds = %3
  br label %18, !dbg !8769

9:                                                ; preds = %3
  br label %18, !dbg !8771

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8772
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #26, !dbg !8773
  br label %18, !dbg !8774

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8775
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #26, !dbg !8776
  br label %18, !dbg !8777

16:                                               ; preds = %3
  br label %18, !dbg !8778

17:                                               ; preds = %3
  br label %18, !dbg !8779

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !8780
  br label %20, !dbg !8781

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !8764
  ret i32 %21, !dbg !8781
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8782 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8784, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i8* %1, metadata !8785, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i8* %2, metadata !8786, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i8* %1, metadata !8787, metadata !DIExpression()), !dbg !8792
  %4 = bitcast i8* %1 to i32*, !dbg !8793
  %5 = load i32, i32* %4, align 4, !dbg !8793
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8794
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()), !dbg !8792
  %7 = icmp slt i32 %6, 0, !dbg !8795
  br i1 %7, label %22, label %8, !dbg !8797

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8787, metadata !DIExpression()), !dbg !8792
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8798
  %10 = bitcast i8* %9 to i32*, !dbg !8798
  %11 = load i32, i32* %10, align 4, !dbg !8798
  %12 = lshr i32 %11, 16, !dbg !8798
  %13 = and i32 %12, 7, !dbg !8798
  %14 = lshr i32 %11, 8, !dbg !8799
  %15 = and i32 %14, 31, !dbg !8799
  %16 = shl i32 %13, %15, !dbg !8800
  call void @llvm.dbg.value(metadata i32 %16, metadata !8790, metadata !DIExpression()), !dbg !8792
  %17 = and i32 %11, 255, !dbg !8801
  %18 = or i32 %17, 1073887232, !dbg !8802
  %19 = inttoptr i32 %18 to i32*, !dbg !8803
  call void @llvm.dbg.value(metadata i32* %19, metadata !8788, metadata !DIExpression()), !dbg !8792
  %20 = load volatile i32, i32* %19, align 4, !dbg !8804
  call void @llvm.dbg.value(metadata i32 %20, metadata !8789, metadata !DIExpression()), !dbg !8792
  %21 = or i32 %16, %20, !dbg !8805
  call void @llvm.dbg.value(metadata i32 %21, metadata !8789, metadata !DIExpression()), !dbg !8792
  store volatile i32 %21, i32* %19, align 4, !dbg !8806
  br label %22, !dbg !8807

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8792
  ret i32 %23, !dbg !8808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8813, metadata !DIExpression()), !dbg !8815
  call void @llvm.dbg.value(metadata i32 0, metadata !8814, metadata !DIExpression()), !dbg !8815
  %2 = add i32 %0, -1, !dbg !8816
  %3 = icmp ult i32 %2, 6, !dbg !8816
  br i1 %3, label %4, label %7, !dbg !8816

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8816
  %6 = load i32, i32* %5, align 4, !dbg !8816
  call void @llvm.dbg.value(metadata i32 %6, metadata !8814, metadata !DIExpression()), !dbg !8815
  br label %7, !dbg !8817

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8815
  ret i32 %8, !dbg !8818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #11 !dbg !8819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8823, metadata !DIExpression()), !dbg !8825
  call void @llvm.dbg.value(metadata i32 2, metadata !8824, metadata !DIExpression()), !dbg !8825
  %2 = lshr i32 %0, 1, !dbg !8826
  ret i32 %2, !dbg !8827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8832, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32 8, metadata !8833, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32 84, metadata !8834, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32 %1, metadata !8835, metadata !DIExpression()), !dbg !8836
  %3 = mul i32 %0, 84, !dbg !8837
  %4 = shl nsw i32 %1, 3, !dbg !8838
  %5 = udiv i32 %3, %4, !dbg !8839
  ret i32 %5, !dbg !8840
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8841 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8843, metadata !DIExpression()), !dbg !8846
  tail call void @config_enable_default_clocks() #25, !dbg !8847
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8848
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8848
  %4 = lshr i32 %3, 4, !dbg !8848
  %5 = and i32 %4, 15, !dbg !8848
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8848
  %7 = load i8, i8* %6, align 1, !dbg !8848
  %8 = zext i8 %7 to i32, !dbg !8848
  %9 = lshr i32 %2, %8, !dbg !8848
  call void @llvm.dbg.value(metadata i32 %9, metadata !8844, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8845, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8846
  %10 = icmp ult i32 %9, 84000000, !dbg !8849
  br i1 %10, label %11, label %13, !dbg !8851

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8852
  br label %13, !dbg !8854

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8855
  tail call fastcc void @set_up_plls() #26, !dbg !8856
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8857
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8860
  br label %14, !dbg !8861

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8862
  %16 = icmp eq i32 %15, 8, !dbg !8863
  br i1 %16, label %17, label %14, !dbg !8861, !llvm.loop !8864

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8866
  br i1 %18, label %19, label %21, !dbg !8868

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8869
  br label %21, !dbg !8871

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8872
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8873
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8874
  ret i32 0, !dbg !8875
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8876 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8878
  %2 = and i32 %1, 240, !dbg !8878
  ret i32 %2, !dbg !8879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8880 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8881
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8886
  br label %1, !dbg !8887

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8888
  %3 = icmp eq i32 %2, 1, !dbg !8889
  br i1 %3, label %4, label %1, !dbg !8887, !llvm.loop !8890

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8892
  br label %5, !dbg !8895

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8896
  %7 = icmp eq i32 %6, 1, !dbg !8897
  br i1 %7, label %8, label %5, !dbg !8895, !llvm.loop !8898

8:                                                ; preds = %5
  ret void, !dbg !8900
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8901 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8902
  %2 = icmp eq i32 %1, 8, !dbg !8904
  br i1 %2, label %3, label %4, !dbg !8905

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8906
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8908
  br label %4, !dbg !8909

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8910
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8911
  %6 = and i32 %5, -196609, !dbg !8911
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8911
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8912
  %8 = and i32 %7, -251658241, !dbg !8912
  %9 = or i32 %8, 134217728, !dbg !8912
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8912
  tail call void @config_pll_sysclock() #25, !dbg !8913
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8914
  br label %10, !dbg !8915

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8916
  %12 = icmp eq i32 %11, 1, !dbg !8917
  br i1 %12, label %13, label %10, !dbg !8915, !llvm.loop !8918

13:                                               ; preds = %10
  ret void, !dbg !8920
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8921 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8923, metadata !DIExpression()), !dbg !8924
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8925
  %2 = and i32 %1, -241, !dbg !8925
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8925
  ret void, !dbg !8926
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8929, metadata !DIExpression()), !dbg !8930
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8931
  %3 = and i32 %2, -4, !dbg !8931
  %4 = or i32 %3, %0, !dbg !8931
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8931
  ret void, !dbg !8932
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8933 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8934
  %2 = and i32 %1, 12, !dbg !8934
  ret i32 %2, !dbg !8935
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8936 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8938, metadata !DIExpression()), !dbg !8939
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8940
  %2 = and i32 %1, -7169, !dbg !8940
  %3 = or i32 %2, 4096, !dbg !8940
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8940
  ret void, !dbg !8941
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8942 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8944, metadata !DIExpression()), !dbg !8945
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8946
  %2 = and i32 %1, -57345, !dbg !8946
  %3 = or i32 %2, 32768, !dbg !8946
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8946
  ret void, !dbg !8947
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8948 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8949
  %2 = icmp eq i32 %1, 1, !dbg !8951
  br i1 %2, label %7, label %3, !dbg !8952

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8953
  br label %4, !dbg !8955

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8956
  %6 = icmp eq i32 %5, 1, !dbg !8957
  br i1 %6, label %7, label %4, !dbg !8955, !llvm.loop !8958

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8960
  br label %8, !dbg !8961

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8962
  %10 = icmp eq i32 %9, 0, !dbg !8963
  br i1 %10, label %11, label %8, !dbg !8961, !llvm.loop !8964

11:                                               ; preds = %8
  ret void, !dbg !8966
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8967 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8968
  %2 = and i32 %1, -16777217, !dbg !8968
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8968
  ret void, !dbg !8969
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8970 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8971
  %2 = or i32 %1, 16777216, !dbg !8971
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8971
  ret void, !dbg !8972
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8973 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8974
  %2 = lshr i32 %1, 25, !dbg !8975
  %3 = and i32 %2, 1, !dbg !8975
  ret i32 %3, !dbg !8976
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8977 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8978
  %2 = lshr i32 %1, 1, !dbg !8979
  %3 = and i32 %2, 1, !dbg !8979
  ret i32 %3, !dbg !8980
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8981 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8982
  %2 = or i32 %1, 1, !dbg !8982
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8982
  ret void, !dbg !8983
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8984 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8985
  %2 = and i32 %1, -262145, !dbg !8985
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8985
  ret void, !dbg !8986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8987 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8988
  %2 = or i32 %1, 65536, !dbg !8988
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8988
  ret void, !dbg !8989
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8990 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8991
  %2 = lshr i32 %1, 17, !dbg !8992
  %3 = and i32 %2, 1, !dbg !8992
  ret i32 %3, !dbg !8993
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8994 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8995
  %2 = or i32 %1, 1, !dbg !8995
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8995
  ret void, !dbg !8996
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8997 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8998
  %2 = lshr i32 %1, 1, !dbg !8999
  %3 = and i32 %2, 1, !dbg !8999
  ret i32 %3, !dbg !9000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !9001 {
  ret i32 16000000, !dbg !9003
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !9007 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !9008
  ret void, !dbg !9009
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !9010 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9014, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i32 8, metadata !9015, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i32 84, metadata !9016, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i32 0, metadata !9017, metadata !DIExpression()), !dbg !9018
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9019
  %2 = and i32 %1, -4227072, !dbg !9019
  %3 = or i32 %2, 4199688, !dbg !9019
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9019
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9020
  %5 = and i32 %4, -196609, !dbg !9020
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9020
  ret void, !dbg !9021
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !9022 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !9023
  ret void, !dbg !9024
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !9025 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9028, metadata !DIExpression()), !dbg !9030
  %2 = bitcast i32* %1 to i8*, !dbg !9031
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9031
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9029, metadata !DIExpression()), !dbg !9032
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9033
  %4 = or i32 %3, 268435456, !dbg !9033
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9033
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9034
  %6 = and i32 %5, 268435456, !dbg !9034
  store volatile i32 %6, i32* %1, align 4, !dbg !9035
  %7 = load volatile i32, i32* %1, align 4, !dbg !9036
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9037
  ret void, !dbg !9037
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9038 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9040, metadata !DIExpression()), !dbg !9041
  %2 = tail call fastcc zeroext i1 @device_is_ready.49() #26, !dbg !9042
  br i1 %2, label %3, label %4, !dbg !9044

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !9045
  br label %4, !dbg !9046

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9041
  ret i32 %5, !dbg !9047
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.49() unnamed_addr #1 !dbg !9048 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9052, metadata !DIExpression()), !dbg !9053
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9054, !srcloc !9056
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.52() #26, !dbg !9057
  ret i1 %1, !dbg !9058
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9059 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9060
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9061
  ret void, !dbg !9062
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9065, metadata !DIExpression()), !dbg !9067
  %2 = load i32 (i8)*, i32 (i8)** @debug_hook_out, align 4, !dbg !9068
  %3 = trunc i32 %0 to i8, !dbg !9068
  %4 = tail call i32 %2(i8 noundef zeroext %3) #25, !dbg !9068
  %5 = icmp eq i32 %4, 1, !dbg !9068
  call void @llvm.dbg.value(metadata i1 %5, metadata !9066, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9067
  br i1 %5, label %10, label %6, !dbg !9069

6:                                                ; preds = %1
  %7 = icmp eq i32 %0, 10, !dbg !9070
  br i1 %7, label %8, label %9, !dbg !9072

8:                                                ; preds = %6
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 13) #26, !dbg !9073
  br label %9, !dbg !9075

9:                                                ; preds = %8, %6
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext %3) #26, !dbg !9076
  br label %10, !dbg !9077

10:                                               ; preds = %1, %9
  ret i32 %0, !dbg !9078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.50(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9079 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9081, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.value(metadata i8 %0, metadata !9082, metadata !DIExpression()), !dbg !9083
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9084, !srcloc !9086
  tail call fastcc void @z_impl_uart_poll_out.51(i8 noundef zeroext %0) #26, !dbg !9087
  ret void, !dbg !9088
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.51(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9089 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9091, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.value(metadata i8 %0, metadata !9092, metadata !DIExpression()), !dbg !9094
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9095
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9093, metadata !DIExpression()), !dbg !9094
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9096
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9096
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #25, !dbg !9097
  ret void, !dbg !9098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @debug_hook_out_nop(i8 noundef zeroext %0) #11 !dbg !9099 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9101, metadata !DIExpression()), !dbg !9102
  ret i32 0, !dbg !9103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.52() unnamed_addr #1 !dbg !9104 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9106, metadata !DIExpression()), !dbg !9107
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !9108
  ret i1 %1, !dbg !9109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_in_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9110 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9114, metadata !DIExpression()), !dbg !9115
  store i32 (i8)* %0, i32 (i8)** @debug_hook_in, align 4, !dbg !9116
  ret void, !dbg !9117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_out_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9118 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9122, metadata !DIExpression()), !dbg !9123
  store i32 (i8)* %0, i32 (i8)** @debug_hook_out, align 4, !dbg !9124
  ret void, !dbg !9125
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !9126 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9130, metadata !DIExpression()), !dbg !9133
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9131, metadata !DIExpression()), !dbg !9133
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9132, metadata !DIExpression()), !dbg !9133
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !9134
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !9135
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9136
  tail call fastcc void @console_input_init() #26, !dbg !9137
  ret void, !dbg !9138
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !9139 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9142
  tail call fastcc void @uart_irq_rx_disable.53() #26, !dbg !9143
  tail call fastcc void @uart_irq_tx_disable.54() #26, !dbg !9144
  tail call fastcc void @uart_irq_callback_set() #26, !dbg !9145
  %2 = call fastcc i32 @uart_irq_rx_ready.55() #26, !dbg !9146
  %3 = icmp eq i32 %2, 0, !dbg !9147
  br i1 %3, label %8, label %4, !dbg !9147

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !9141, metadata !DIExpression(DW_OP_deref)), !dbg !9148
  %5 = call fastcc i32 @uart_fifo_read.56(i8* noundef nonnull %1) #26, !dbg !9149
  %6 = call fastcc i32 @uart_irq_rx_ready.55() #26, !dbg !9146
  %7 = icmp eq i32 %6, 0, !dbg !9147
  br i1 %7, label %8, label %4, !dbg !9147, !llvm.loop !9151

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable.57() #26, !dbg !9153
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9154
  ret void, !dbg !9154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable.53() unnamed_addr #1 !dbg !9155 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9157, metadata !DIExpression()), !dbg !9158
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9159, !srcloc !9161
  tail call fastcc void @z_impl_uart_irq_rx_disable.66() #26, !dbg !9162
  ret void, !dbg !9163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable.54() unnamed_addr #1 !dbg !9164 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9166, metadata !DIExpression()), !dbg !9167
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9168, !srcloc !9170
  tail call fastcc void @z_impl_uart_irq_tx_disable.65() #26, !dbg !9171
  ret void, !dbg !9172
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !9173 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9177, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9178, metadata !DIExpression()), !dbg !9179
  tail call fastcc void @uart_irq_callback_user_data_set.59() #26, !dbg !9180
  ret void, !dbg !9181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready.55() unnamed_addr #1 !dbg !9182 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9184, metadata !DIExpression()), !dbg !9186
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9187
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9185, metadata !DIExpression()), !dbg !9186
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !9188
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9188
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9190
  br i1 %4, label %7, label %5, !dbg !9191

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !9192
  br label %7, !dbg !9193

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9186
  ret i32 %8, !dbg !9194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read.56(i8* noundef %0) unnamed_addr #1 !dbg !9195 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9197, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i8* %0, metadata !9198, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i32 1, metadata !9199, metadata !DIExpression()), !dbg !9201
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9202
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9200, metadata !DIExpression()), !dbg !9201
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !9203
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !9203
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !9205
  br i1 %5, label %8, label %6, !dbg !9206

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8* noundef %0, i32 noundef 1) #25, !dbg !9207
  br label %8, !dbg !9208

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !9201
  ret i32 %9, !dbg !9209
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable.57() unnamed_addr #1 !dbg !9210 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9212, metadata !DIExpression()), !dbg !9213
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9214, !srcloc !9216
  tail call fastcc void @z_impl_uart_irq_rx_enable.58() #26, !dbg !9217
  ret void, !dbg !9218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable.58() unnamed_addr #1 !dbg !9219 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9221, metadata !DIExpression()), !dbg !9223
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9224
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9222, metadata !DIExpression()), !dbg !9223
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !9225
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9225
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9227
  br i1 %4, label %6, label %5, !dbg !9228

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !9229
  br label %6, !dbg !9231

6:                                                ; preds = %5, %0
  ret void, !dbg !9232
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1094 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1096, metadata !DIExpression()), !dbg !9233
  call void @llvm.dbg.value(metadata i8* %1, metadata !1097, metadata !DIExpression()), !dbg !9233
  %4 = call fastcc i32 @uart_irq_update.60() #26, !dbg !9234
  %5 = icmp eq i32 %4, 0, !dbg !9234
  br i1 %5, label %96, label %6, !dbg !9235

6:                                                ; preds = %2, %93
  %7 = call fastcc i32 @uart_irq_is_pending() #26, !dbg !9236
  %8 = icmp eq i32 %7, 0, !dbg !9235
  br i1 %8, label %96, label %9, !dbg !9237

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9238
  %10 = call fastcc i32 @uart_irq_rx_ready.55() #26, !dbg !9239
  %11 = icmp eq i32 %10, 0, !dbg !9239
  br i1 %11, label %93, label %12, !dbg !9241, !llvm.loop !9242

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1098, metadata !DIExpression(DW_OP_deref)), !dbg !9244
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #26, !dbg !9245
  call void @llvm.dbg.value(metadata i32 %13, metadata !1100, metadata !DIExpression()), !dbg !9244
  %14 = icmp slt i32 %13, 0, !dbg !9246
  br i1 %14, label %92, label %15, !dbg !9248

15:                                               ; preds = %12
  %16 = load i32 (i8)*, i32 (i8)** @debug_hook_in, align 4, !dbg !9249
  %17 = icmp eq i32 (i8)* %16, null, !dbg !9251
  br i1 %17, label %22, label %18, !dbg !9252

18:                                               ; preds = %15
  %19 = load i8, i8* %3, align 1, !dbg !9253
  call void @llvm.dbg.value(metadata i8 %19, metadata !1098, metadata !DIExpression()), !dbg !9244
  %20 = call i32 %16(i8 noundef zeroext %19) #25, !dbg !9254
  %21 = icmp eq i32 %20, 0, !dbg !9255
  br i1 %21, label %22, label %92, !dbg !9256

22:                                               ; preds = %18, %15
  %23 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9257
  %24 = icmp eq %struct.console_input* %23, null, !dbg !9257
  br i1 %24, label %25, label %30, !dbg !9258

25:                                               ; preds = %22
  %26 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !9259
  %27 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %26, i32 0, i32 0, !dbg !9259
  %28 = call fastcc i8* @k_queue_get(%struct.k_queue* noundef %27) #26, !dbg !9259
  call void @llvm.dbg.value(metadata i8* %28, metadata !1101, metadata !DIExpression()), !dbg !9260
  store i8* %28, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9261
  %29 = icmp eq i8* %28, null, !dbg !9262
  br i1 %29, label %92, label %30, !dbg !9264

30:                                               ; preds = %25, %22
  %31 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #26, !dbg !9265
  br i1 %31, label %32, label %36, !dbg !9267

32:                                               ; preds = %30
  %33 = load i8, i8* %3, align 1, !dbg !9268
  call void @llvm.dbg.value(metadata i8 %33, metadata !1098, metadata !DIExpression()), !dbg !9244
  %34 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9270
  %35 = getelementptr inbounds %struct.console_input, %struct.console_input* %34, i32 0, i32 2, i32 0, !dbg !9270
  call fastcc void @handle_ansi(i8 noundef zeroext %33, i8* noundef nonnull %35) #26, !dbg !9271
  br label %93, !dbg !9272, !llvm.loop !9242

36:                                               ; preds = %30
  %37 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #26, !dbg !9273
  %38 = load i8, i8* %3, align 1, !dbg !9244
  call void @llvm.dbg.value(metadata i8 %38, metadata !1098, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata i8 %38, metadata !1098, metadata !DIExpression()), !dbg !9244
  br i1 %37, label %39, label %42, !dbg !9275

39:                                               ; preds = %36
  %40 = icmp eq i8 %38, 91, !dbg !9276
  br i1 %40, label %41, label %93, !dbg !9279, !llvm.loop !9242

41:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 1) #26, !dbg !9280
  call fastcc void @atomic_set_bit(i32 noundef 2) #26, !dbg !9282
  br label %93, !dbg !9283, !llvm.loop !9242

42:                                               ; preds = %36
  %43 = zext i8 %38 to i32, !dbg !9284
  %44 = call fastcc i32 @isprint(i32 noundef %43) #26, !dbg !9286
  %45 = icmp eq i32 %44, 0, !dbg !9286
  br i1 %45, label %46, label %81, !dbg !9287

46:                                               ; preds = %42
  call void @llvm.dbg.value(metadata i8 undef, metadata !1098, metadata !DIExpression()), !dbg !9244
  switch i8 %38, label %93 [
    i8 8, label %47
    i8 127, label %47
    i8 27, label %56
    i8 13, label %57
    i8 9, label %68
  ], !dbg !9288, !llvm.loop !9242

47:                                               ; preds = %46, %46
  %48 = load i8, i8* @cur, align 1, !dbg !9290
  %49 = icmp eq i8 %48, 0, !dbg !9293
  br i1 %49, label %93, label %50, !dbg !9294, !llvm.loop !9242

50:                                               ; preds = %47
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9295
  %52 = add i8 %48, -1, !dbg !9297
  store i8 %52, i8* @cur, align 1, !dbg !9297
  %53 = zext i8 %52 to i32, !dbg !9295
  %54 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %53, !dbg !9295
  %55 = load i8, i8* @end, align 1, !dbg !9298
  call fastcc void @del_char(i8* noundef nonnull %54, i8 noundef zeroext %55) #26, !dbg !9299
  br label %93, !dbg !9300, !llvm.loop !9242

56:                                               ; preds = %46
  call fastcc void @atomic_set_bit(i32 noundef 0) #26, !dbg !9301
  br label %93, !dbg !9302, !llvm.loop !9242

57:                                               ; preds = %46
  %58 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9303
  %59 = load i8, i8* @cur, align 1, !dbg !9304
  %60 = zext i8 %59 to i32, !dbg !9304
  %61 = load i8, i8* @end, align 1, !dbg !9305
  %62 = zext i8 %61 to i32, !dbg !9305
  %63 = add nuw nsw i32 %62, %60, !dbg !9306
  %64 = getelementptr inbounds %struct.console_input, %struct.console_input* %58, i32 0, i32 2, i32 %63, !dbg !9303
  store i8 0, i8* %64, align 1, !dbg !9307
  call fastcc void @uart_poll_out.50(i8 noundef zeroext 13) #26, !dbg !9308
  call fastcc void @uart_poll_out.50(i8 noundef zeroext 10) #26, !dbg !9309
  store i8 0, i8* @cur, align 1, !dbg !9310
  store i8 0, i8* @end, align 1, !dbg !9311
  %65 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !9312
  %66 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %65, i32 0, i32 0, !dbg !9312
  %67 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9312
  call void @k_queue_append(%struct.k_queue* noundef %66, i8* noundef %67) #25, !dbg !9312
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9314
  br label %93, !dbg !9315, !llvm.loop !9242

68:                                               ; preds = %46
  %69 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9316
  %70 = icmp eq i8 (i8*, i8)* %69, null, !dbg !9316
  %71 = load i8, i8* @end, align 1
  %72 = icmp ne i8 %71, 0
  %73 = select i1 %70, i1 true, i1 %72, !dbg !9318
  br i1 %73, label %93, label %74, !dbg !9318, !llvm.loop !9242

74:                                               ; preds = %68
  %75 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9319
  %76 = getelementptr inbounds %struct.console_input, %struct.console_input* %75, i32 0, i32 2, i32 0, !dbg !9319
  %77 = load i8, i8* @cur, align 1, !dbg !9321
  %78 = call zeroext i8 %69(i8* noundef nonnull %76, i8 noundef zeroext %77) #25, !dbg !9322
  %79 = load i8, i8* @cur, align 1, !dbg !9323
  %80 = add i8 %79, %78, !dbg !9323
  store i8 %80, i8* @cur, align 1, !dbg !9323
  br label %93, !dbg !9324, !llvm.loop !9242

81:                                               ; preds = %42
  %82 = load i8, i8* @cur, align 1, !dbg !9325
  %83 = zext i8 %82 to i32, !dbg !9325
  %84 = load i8, i8* @end, align 1, !dbg !9327
  %85 = zext i8 %84 to i32, !dbg !9327
  %86 = add nuw nsw i32 %85, %83, !dbg !9328
  %87 = icmp ult i32 %86, 127, !dbg !9329
  br i1 %87, label %88, label %93, !dbg !9330

88:                                               ; preds = %81
  %89 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9331
  %90 = add i8 %82, 1, !dbg !9333
  store i8 %90, i8* @cur, align 1, !dbg !9333
  %91 = getelementptr inbounds %struct.console_input, %struct.console_input* %89, i32 0, i32 2, i32 %83, !dbg !9331
  call void @llvm.dbg.value(metadata i8 %38, metadata !1098, metadata !DIExpression()), !dbg !9244
  call fastcc void @insert_char(i8* noundef nonnull %91, i8 noundef zeroext %38, i8 noundef zeroext %84) #26, !dbg !9334
  br label %93, !dbg !9335

92:                                               ; preds = %12, %18, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9243
  br label %96

93:                                               ; preds = %81, %88, %56, %57, %50, %47, %74, %68, %46, %39, %41, %9, %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9243
  %94 = call fastcc i32 @uart_irq_update.60() #26, !dbg !9234
  %95 = icmp eq i32 %94, 0, !dbg !9234
  br i1 %95, label %96, label %6, !dbg !9235

96:                                               ; preds = %6, %93, %2, %92
  ret void, !dbg !9336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set.59() unnamed_addr #1 !dbg !9337 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9339, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9340, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata i8* null, metadata !9341, metadata !DIExpression()), !dbg !9343
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9344
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9342, metadata !DIExpression()), !dbg !9343
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !9345
  br i1 %2, label %8, label %3, !dbg !9347

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !9348
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !9348
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !9349
  br i1 %6, label %8, label %7, !dbg !9350

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_44, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #25, !dbg !9351
  br label %8, !dbg !9353

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !9354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update.60() unnamed_addr #1 !dbg !9355 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9357, metadata !DIExpression()), !dbg !9358
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9359, !srcloc !9361
  %1 = tail call fastcc i32 @z_impl_uart_irq_update.64() #26, !dbg !9362
  ret i32 %1, !dbg !9363
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !9364 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9366, metadata !DIExpression()), !dbg !9367
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9368, !srcloc !9370
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #26, !dbg !9371
  ret i32 %1, !dbg !9372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !9373 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9377, metadata !DIExpression()), !dbg !9381
  call void @llvm.dbg.value(metadata i8* %0, metadata !9378, metadata !DIExpression()), !dbg !9381
  call void @llvm.dbg.value(metadata i32 1, metadata !9379, metadata !DIExpression()), !dbg !9381
  %2 = tail call fastcc i32 @uart_fifo_read.56(i8* noundef %0) #26, !dbg !9382
  call void @llvm.dbg.value(metadata i32 %2, metadata !9380, metadata !DIExpression()), !dbg !9381
  %3 = icmp slt i32 %2, 0, !dbg !9383
  br i1 %3, label %4, label %5, !dbg !9385

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable.53() #26, !dbg !9386
  br label %5, !dbg !9388

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !9381
  ret i32 %6, !dbg !9389
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !9390 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9400, metadata !DIExpression()), !dbg !9401
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !9399, metadata !DIExpression()), !dbg !9401
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9402, !srcloc !9404
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #25, !dbg !9405
  ret i8* %2, !dbg !9406
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !9407 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9413, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.value(metadata i32 %0, metadata !9414, metadata !DIExpression()), !dbg !9417
  %2 = tail call fastcc i32 @atomic_get() #26, !dbg !9418
  call void @llvm.dbg.value(metadata i32 %2, metadata !9415, metadata !DIExpression()), !dbg !9417
  %3 = and i32 %0, 31, !dbg !9419
  %4 = shl nuw i32 1, %3, !dbg !9420
  %5 = and i32 %2, %4, !dbg !9420
  %6 = icmp ne i32 %5, 0, !dbg !9420
  ret i1 %6, !dbg !9421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !9422 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9426, metadata !DIExpression()), !dbg !9429
  call void @llvm.dbg.value(metadata i8* %1, metadata !9427, metadata !DIExpression()), !dbg !9429
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #26, !dbg !9430
  br i1 %3, label %4, label %11, !dbg !9432

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !9433
  %6 = tail call fastcc i32 @isdigit.61(i32 noundef %5) #26, !dbg !9436
  %7 = icmp eq i32 %6, 0, !dbg !9436
  br i1 %7, label %8, label %9, !dbg !9437

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !9438
  br label %34, !dbg !9440

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #26, !dbg !9441
  %10 = add nsw i32 %5, -48, !dbg !9442
  store i32 %10, i32* @ansi_val, align 4, !dbg !9443
  store i32 0, i32* @ansi_val_2, align 4, !dbg !9444
  br label %81, !dbg !9445

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #26, !dbg !9446
  br i1 %12, label %13, label %34, !dbg !9448

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !9449
  %15 = tail call fastcc i32 @isdigit.61(i32 noundef %14) #26, !dbg !9452
  %16 = icmp eq i32 %15, 0, !dbg !9452
  br i1 %16, label %29, label %17, !dbg !9453

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #26, !dbg !9454
  br i1 %18, label %19, label %24, !dbg !9457

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !9458
  %21 = mul i32 %20, 10, !dbg !9458
  %22 = add nsw i32 %14, -48, !dbg !9460
  %23 = add i32 %22, %21, !dbg !9461
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !9461
  br label %81, !dbg !9462

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !9463
  %26 = mul i32 %25, 10, !dbg !9463
  %27 = add nsw i32 %14, -48, !dbg !9465
  %28 = add i32 %27, %26, !dbg !9466
  store i32 %28, i32* @ansi_val, align 4, !dbg !9466
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !9467
  br i1 %30, label %31, label %33, !dbg !9469

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #26, !dbg !9470
  br i1 %32, label %33, label %81, !dbg !9471

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #26, !dbg !9472
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #26, !dbg !9473
  br label %34, !dbg !9474

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !9428), !dbg !9475
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !9476

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !9477
  %37 = load i8, i8* @cur, align 1, !dbg !9480
  %38 = zext i8 %37 to i32, !dbg !9480
  %39 = icmp ugt i32 %36, %38, !dbg !9481
  br i1 %39, label %80, label %40, !dbg !9482

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !9483
  %42 = trunc i32 %36 to i8, !dbg !9483
  %43 = add i8 %41, %42, !dbg !9483
  store i8 %43, i8* @end, align 1, !dbg !9483
  %44 = sub i8 %37, %42, !dbg !9484
  store i8 %44, i8* @cur, align 1, !dbg !9484
  tail call fastcc void @cursor_backward(i32 noundef %36) #26, !dbg !9485
  br label %80, !dbg !9486

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !9487
  %47 = load i8, i8* @end, align 1, !dbg !9489
  %48 = zext i8 %47 to i32, !dbg !9489
  %49 = icmp ugt i32 %46, %48, !dbg !9490
  br i1 %49, label %80, label %50, !dbg !9491

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !9492
  %52 = sub i8 %47, %51, !dbg !9492
  store i8 %52, i8* @end, align 1, !dbg !9492
  %53 = load i8, i8* @cur, align 1, !dbg !9493
  %54 = add i8 %53, %51, !dbg !9493
  store i8 %54, i8* @cur, align 1, !dbg !9493
  tail call fastcc void @cursor_forward(i32 noundef %46) #26, !dbg !9494
  br label %80, !dbg !9495

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !9496
  %57 = icmp eq i8 %56, 0, !dbg !9496
  br i1 %57, label %80, label %58, !dbg !9498

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !9499
  tail call fastcc void @cursor_backward(i32 noundef %59) #26, !dbg !9500
  %60 = load i8, i8* @cur, align 1, !dbg !9501
  %61 = load i8, i8* @end, align 1, !dbg !9502
  %62 = add i8 %61, %60, !dbg !9502
  store i8 %62, i8* @end, align 1, !dbg !9502
  store i8 0, i8* @cur, align 1, !dbg !9503
  br label %80, !dbg !9504

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !9505
  %65 = icmp eq i8 %64, 0, !dbg !9505
  br i1 %65, label %80, label %66, !dbg !9507

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !9508
  tail call fastcc void @cursor_forward(i32 noundef %67) #26, !dbg !9509
  %68 = load i8, i8* @end, align 1, !dbg !9510
  %69 = load i8, i8* @cur, align 1, !dbg !9511
  %70 = add i8 %69, %68, !dbg !9511
  store i8 %70, i8* @cur, align 1, !dbg !9511
  store i8 0, i8* @end, align 1, !dbg !9512
  br label %80, !dbg !9513

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !9514
  %73 = icmp eq i8 %72, 0, !dbg !9514
  br i1 %73, label %80, label %74, !dbg !9516

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #26, !dbg !9517
  %75 = load i8, i8* @cur, align 1, !dbg !9518
  %76 = zext i8 %75 to i32, !dbg !9519
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !9519
  %78 = load i8, i8* @end, align 1, !dbg !9520
  %79 = add i8 %78, -1, !dbg !9520
  store i8 %79, i8* @end, align 1, !dbg !9520
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #26, !dbg !9521
  br label %80, !dbg !9522

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #26, !dbg !9523
  br label %81, !dbg !9524

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !9524
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !9525 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9530, metadata !DIExpression()), !dbg !9534
  call void @llvm.dbg.value(metadata i32 %0, metadata !9531, metadata !DIExpression()), !dbg !9534
  %2 = and i32 %0, 31, !dbg !9535
  %3 = shl nuw i32 1, %2, !dbg !9535
  call void @llvm.dbg.value(metadata i32 %3, metadata !9532, metadata !DIExpression()), !dbg !9534
  %4 = xor i32 %3, -1, !dbg !9536
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9537
  call void @llvm.dbg.value(metadata i32 %5, metadata !9533, metadata !DIExpression()), !dbg !9534
  %6 = and i32 %5, %3, !dbg !9538
  %7 = icmp ne i32 %6, 0, !dbg !9539
  ret i1 %7, !dbg !9540
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !9541 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9545, metadata !DIExpression()), !dbg !9548
  call void @llvm.dbg.value(metadata i32 %0, metadata !9546, metadata !DIExpression()), !dbg !9548
  %2 = and i32 %0, 31, !dbg !9549
  %3 = shl nuw i32 1, %2, !dbg !9549
  call void @llvm.dbg.value(metadata i32 %3, metadata !9547, metadata !DIExpression()), !dbg !9548
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #26, !dbg !9550
  ret void, !dbg !9551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !9552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9554, metadata !DIExpression()), !dbg !9555
  %2 = add i32 %0, -32, !dbg !9556
  %3 = icmp ult i32 %2, 95, !dbg !9556
  %4 = zext i1 %3 to i32, !dbg !9556
  ret i32 %4, !dbg !9557
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9558 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9562, metadata !DIExpression()), !dbg !9564
  call void @llvm.dbg.value(metadata i8 %1, metadata !9563, metadata !DIExpression()), !dbg !9564
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 8) #26, !dbg !9565
  %3 = icmp eq i8 %1, 0, !dbg !9566
  br i1 %3, label %4, label %5, !dbg !9568

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 32) #26, !dbg !9569
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 8) #26, !dbg !9571
  br label %14, !dbg !9572

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #26, !dbg !9573
  call void @llvm.dbg.value(metadata i8 %1, metadata !9563, metadata !DIExpression()), !dbg !9564
  call void @llvm.dbg.value(metadata i8* %0, metadata !9562, metadata !DIExpression()), !dbg !9564
  call void @llvm.dbg.value(metadata i8 %1, metadata !9563, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9564
  br label %6, !dbg !9574

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !9563, metadata !DIExpression()), !dbg !9564
  call void @llvm.dbg.value(metadata i8* %8, metadata !9562, metadata !DIExpression()), !dbg !9564
  %9 = add i8 %7, -1, !dbg !9575
  call void @llvm.dbg.value(metadata i8 %9, metadata !9563, metadata !DIExpression()), !dbg !9564
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9576
  %11 = load i8, i8* %10, align 1, !dbg !9578
  store i8 %11, i8* %8, align 1, !dbg !9579
  call void @llvm.dbg.value(metadata i8* %10, metadata !9562, metadata !DIExpression()), !dbg !9564
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext %11) #26, !dbg !9580
  call void @llvm.dbg.value(metadata i8 %9, metadata !9563, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9564
  %12 = icmp eq i8 %9, 0, !dbg !9581
  br i1 %12, label %13, label %6, !dbg !9574, !llvm.loop !9582

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 32) #26, !dbg !9584
  tail call fastcc void @cursor_restore() #26, !dbg !9585
  br label %14, !dbg !9586

14:                                               ; preds = %13, %4
  ret void, !dbg !9586
}

; Function Attrs: optsize
declare !dbg !9587 dso_local void @k_queue_append(%struct.k_queue* noundef, i8* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !9590 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9594, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8 %1, metadata !9595, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8 %2, metadata !9596, metadata !DIExpression()), !dbg !9598
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext %1) #26, !dbg !9599
  %4 = icmp eq i8 %2, 0, !dbg !9600
  br i1 %4, label %5, label %6, !dbg !9602

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !9603
  br label %17, !dbg !9605

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !9606
  call void @llvm.dbg.value(metadata i8 %7, metadata !9597, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8* %0, metadata !9594, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9598
  store i8 %1, i8* %0, align 1, !dbg !9607
  tail call fastcc void @cursor_save() #26, !dbg !9608
  call void @llvm.dbg.value(metadata i8 %7, metadata !9597, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8 %2, metadata !9596, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8* %0, metadata !9594, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9598
  call void @llvm.dbg.value(metadata i8 %2, metadata !9596, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9598
  br label %8, !dbg !9609

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9598
  call void @llvm.dbg.value(metadata i8 %10, metadata !9597, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8 %11, metadata !9596, metadata !DIExpression()), !dbg !9598
  %13 = add i8 %11, -1, !dbg !9610
  call void @llvm.dbg.value(metadata i8 %13, metadata !9596, metadata !DIExpression()), !dbg !9598
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext %10) #26, !dbg !9611
  %14 = load i8, i8* %12, align 1, !dbg !9613
  call void @llvm.dbg.value(metadata i8 %14, metadata !9595, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8* %12, metadata !9594, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9598
  store i8 %10, i8* %12, align 1, !dbg !9614
  call void @llvm.dbg.value(metadata i8 %14, metadata !9597, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8* %12, metadata !9594, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9598
  call void @llvm.dbg.value(metadata i8 %13, metadata !9596, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9598
  %15 = icmp eq i8 %13, 0, !dbg !9615
  br i1 %15, label %16, label %8, !dbg !9609, !llvm.loop !9616

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #26, !dbg !9618
  br label %17, !dbg !9619

17:                                               ; preds = %16, %5
  ret void, !dbg !9619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !9620 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0)) #25, !dbg !9621
  ret void, !dbg !9622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !9623 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !9624
  ret void, !dbg !9625
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !9626 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9631, metadata !DIExpression()), !dbg !9633
  call void @llvm.dbg.value(metadata i32 %0, metadata !9632, metadata !DIExpression()), !dbg !9633
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9634
  ret i32 %2, !dbg !9635
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !9636 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9638, metadata !DIExpression()), !dbg !9640
  call void @llvm.dbg.value(metadata i32 %0, metadata !9639, metadata !DIExpression()), !dbg !9640
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9641
  ret i32 %2, !dbg !9642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.61(i32 noundef %0) unnamed_addr #11 !dbg !9643 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9645, metadata !DIExpression()), !dbg !9646
  %2 = add i32 %0, -48, !dbg !9647
  %3 = icmp ult i32 %2, 10, !dbg !9648
  %4 = zext i1 %3 to i32, !dbg !9648
  ret i32 %4, !dbg !9649
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !9650 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9652, metadata !DIExpression()), !dbg !9656
  call void @llvm.dbg.value(metadata i32 4, metadata !9653, metadata !DIExpression()), !dbg !9656
  call void @llvm.dbg.value(metadata i32 16, metadata !9654, metadata !DIExpression()), !dbg !9656
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #26, !dbg !9657
  call void @llvm.dbg.value(metadata i32 %1, metadata !9655, metadata !DIExpression()), !dbg !9656
  %2 = and i32 %1, 16, !dbg !9658
  %3 = icmp ne i32 %2, 0, !dbg !9659
  ret i1 %3, !dbg !9660
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !9661 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9663, metadata !DIExpression()), !dbg !9666
  call void @llvm.dbg.value(metadata i32 %0, metadata !9664, metadata !DIExpression()), !dbg !9666
  %2 = and i32 %0, 31, !dbg !9667
  %3 = shl nuw i32 1, %2, !dbg !9667
  call void @llvm.dbg.value(metadata i32 %3, metadata !9665, metadata !DIExpression()), !dbg !9666
  %4 = xor i32 %3, -1, !dbg !9668
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9669
  ret void, !dbg !9670
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !9671 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9673, metadata !DIExpression()), !dbg !9674
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i32 noundef %0) #25, !dbg !9675
  ret void, !dbg !9676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !9677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9679, metadata !DIExpression()), !dbg !9680
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.62, i32 0, i32 0), i32 noundef %0) #25, !dbg !9681
  ret void, !dbg !9682
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !9683 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9687, metadata !DIExpression()), !dbg !9688
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !9689
  ret i32 %1, !dbg !9690
}

; Function Attrs: optsize
declare !dbg !9691 dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef, [1 x i64]) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !9692 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9694, metadata !DIExpression()), !dbg !9696
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9697
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9695, metadata !DIExpression()), !dbg !9696
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !9698
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9698
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9700
  br i1 %4, label %7, label %5, !dbg !9701

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !9702
  br label %7, !dbg !9703

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9696
  ret i32 %8, !dbg !9704
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update.64() unnamed_addr #1 !dbg !9705 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9707, metadata !DIExpression()), !dbg !9709
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9710
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9708, metadata !DIExpression()), !dbg !9709
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !9711
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9711
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9713
  br i1 %4, label %7, label %5, !dbg !9714

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !9715
  br label %7, !dbg !9716

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9709
  ret i32 %8, !dbg !9717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable.65() unnamed_addr #1 !dbg !9718 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9720, metadata !DIExpression()), !dbg !9722
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9723
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9721, metadata !DIExpression()), !dbg !9722
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !9724
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9724
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9726
  br i1 %4, label %6, label %5, !dbg !9727

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !9728
  br label %6, !dbg !9730

6:                                                ; preds = %5, %0
  ret void, !dbg !9731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable.66() unnamed_addr #1 !dbg !9732 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9734, metadata !DIExpression()), !dbg !9736
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9737
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9735, metadata !DIExpression()), !dbg !9736
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !9738
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9738
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9740
  br i1 %4, label %6, label %5, !dbg !9741

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !9742
  br label %6, !dbg !9744

6:                                                ; preds = %5, %0
  ret void, !dbg !9745
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9746 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9748, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.value(metadata i8 %1, metadata !9749, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.value(metadata i32 %2, metadata !9750, metadata !DIExpression()), !dbg !9753
  %5 = bitcast i32* %4 to i8*, !dbg !9754
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9754
  call void @llvm.dbg.value(metadata i32* %4, metadata !9752, metadata !DIExpression(DW_OP_deref)), !dbg !9753
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !9755
  call void @llvm.dbg.value(metadata i32 %6, metadata !9751, metadata !DIExpression()), !dbg !9753
  %7 = icmp eq i32 %6, 0, !dbg !9756
  br i1 %7, label %8, label %31, !dbg !9758

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9751, metadata !DIExpression()), !dbg !9753
  %9 = and i32 %2, 131072, !dbg !9759
  %10 = icmp eq i32 %9, 0, !dbg !9761
  br i1 %10, label %28, label %11, !dbg !9762

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9763
  %13 = icmp eq i32 %12, 0, !dbg !9766
  br i1 %13, label %18, label %14, !dbg !9767

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9768
  %16 = shl nuw i32 1, %15, !dbg !9768
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !9770
  br label %25, !dbg !9771

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9772
  %20 = icmp eq i32 %19, 0, !dbg !9774
  %21 = zext i8 %1 to i32, !dbg !9753
  br i1 %20, label %25, label %22, !dbg !9775

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9776
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !9778
  br label %25, !dbg !9779

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9780
  %27 = load i32, i32* %4, align 4, !dbg !9781
  call void @llvm.dbg.value(metadata i32 %30, metadata !9752, metadata !DIExpression()), !dbg !9753
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !9782
  br label %31, !dbg !9783

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9780
  %30 = load i32, i32* %4, align 4, !dbg !9781
  call void @llvm.dbg.value(metadata i32 %30, metadata !9752, metadata !DIExpression()), !dbg !9753
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !9782
  call void @llvm.dbg.value(metadata i32 0, metadata !9751, metadata !DIExpression()), !dbg !9753
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9784
  ret i32 %6, !dbg !9784
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !9785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9789, metadata !DIExpression()), !dbg !9794
  call void @llvm.dbg.value(metadata i32* %1, metadata !9790, metadata !DIExpression()), !dbg !9794
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9795
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9795
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9795
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9791, metadata !DIExpression()), !dbg !9794
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9796
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9796
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9796
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9793, metadata !DIExpression()), !dbg !9794
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !9797
  store i32 %9, i32* %1, align 4, !dbg !9798
  ret i32 0, !dbg !9799
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9800 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9802, metadata !DIExpression()), !dbg !9808
  call void @llvm.dbg.value(metadata i32 %1, metadata !9803, metadata !DIExpression()), !dbg !9808
  call void @llvm.dbg.value(metadata i32 %2, metadata !9804, metadata !DIExpression()), !dbg !9808
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9809
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9809
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9809
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9805, metadata !DIExpression()), !dbg !9808
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9810
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9810
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9810
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9806, metadata !DIExpression()), !dbg !9808
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !9811
  call void @llvm.dbg.value(metadata i32 %10, metadata !9807, metadata !DIExpression()), !dbg !9808
  %11 = xor i32 %1, -1, !dbg !9812
  %12 = and i32 %10, %11, !dbg !9813
  %13 = and i32 %2, %1, !dbg !9814
  %14 = or i32 %12, %13, !dbg !9815
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !9816
  ret i32 0, !dbg !9817
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9818 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9820, metadata !DIExpression()), !dbg !9824
  call void @llvm.dbg.value(metadata i32 %1, metadata !9821, metadata !DIExpression()), !dbg !9824
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9825
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9825
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9825
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9822, metadata !DIExpression()), !dbg !9824
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9826
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9826
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9826
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9823, metadata !DIExpression()), !dbg !9824
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9827
  store volatile i32 %1, i32* %9, align 4, !dbg !9827
  ret i32 0, !dbg !9828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9829 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9831, metadata !DIExpression()), !dbg !9835
  call void @llvm.dbg.value(metadata i32 %1, metadata !9832, metadata !DIExpression()), !dbg !9835
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9836
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9836
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9836
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9833, metadata !DIExpression()), !dbg !9835
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9837
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9837
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9837
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9834, metadata !DIExpression()), !dbg !9835
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !9838
  ret i32 0, !dbg !9839
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9840 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9842, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata i32 %1, metadata !9843, metadata !DIExpression()), !dbg !9846
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9847
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9847
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9847
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9844, metadata !DIExpression()), !dbg !9846
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9848
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9848
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9848
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9845, metadata !DIExpression()), !dbg !9846
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9849
  %10 = load volatile i32, i32* %9, align 4, !dbg !9849
  %11 = xor i32 %10, %1, !dbg !9849
  store volatile i32 %11, i32* %9, align 4, !dbg !9849
  ret i32 0, !dbg !9850
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9851 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9853, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i8 %1, metadata !9854, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i32 %2, metadata !9855, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i32 %3, metadata !9856, metadata !DIExpression()), !dbg !9863
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9864
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9864
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9864
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9857, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i8* undef, metadata !9858, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i32 0, metadata !9860, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i32 0, metadata !9861, metadata !DIExpression()), !dbg !9863
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9865

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9866
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !9870
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9871
  %12 = load i32, i32* %11, align 4, !dbg !9871
  %13 = icmp eq i32 %10, %12, !dbg !9872
  br i1 %13, label %14, label %29, !dbg !9873

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9874
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9876
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9877
  br label %29, !dbg !9878

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9879
  %17 = load i8*, i8** %16, align 4, !dbg !9879
  call void @llvm.dbg.value(metadata i8* %17, metadata !9858, metadata !DIExpression()), !dbg !9863
  %18 = zext i8 %1 to i32, !dbg !9880
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9882
  %20 = icmp eq i32 %19, 0, !dbg !9883
  br i1 %20, label %21, label %29, !dbg !9884

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9885
  %23 = load i32, i32* %22, align 4, !dbg !9885
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !9886
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9887

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9860, metadata !DIExpression()), !dbg !9863
  br label %27, !dbg !9888

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9860, metadata !DIExpression()), !dbg !9863
  br label %27, !dbg !9890

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9860, metadata !DIExpression()), !dbg !9863
  br label %27, !dbg !9891

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9863
  call void @llvm.dbg.value(metadata i32 %28, metadata !9860, metadata !DIExpression()), !dbg !9863
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9892
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9893
  br label %29, !dbg !9893

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9863
  call void @llvm.dbg.value(metadata i32 %30, metadata !9861, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.label(metadata !9862), !dbg !9894
  ret i32 %30, !dbg !9895
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !9896 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9898, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9899, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.value(metadata i1 %2, metadata !9900, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9902
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9903
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9903
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9903
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9901, metadata !DIExpression()), !dbg !9902
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9904
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !9905
  ret i32 %8, !dbg !9906
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !9907 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9913, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9914, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata i1 %2, metadata !9915, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9916
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !9917
  br i1 %4, label %10, label %5, !dbg !9919

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9920
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !9923
  %8 = or i1 %7, %2, !dbg !9924
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9924
  br i1 %2, label %11, label %13, !dbg !9924

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9925

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9926
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !9929
  br label %13, !dbg !9930

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !9916
  ret i32 %14, !dbg !9931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9932 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9936, metadata !DIExpression()), !dbg !9937
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9938
  %3 = icmp eq %struct._snode* %2, null, !dbg !9938
  ret i1 %3, !dbg !9938
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9939 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9943, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9944, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9945, metadata !DIExpression()), !dbg !9947
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9948
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9946, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9945, metadata !DIExpression()), !dbg !9947
  %4 = icmp eq %struct._snode* %3, null, !dbg !9950
  br i1 %4, label %15, label %5, !dbg !9948

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9946, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9945, metadata !DIExpression()), !dbg !9947
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9952
  br i1 %6, label %9, label %11, !dbg !9955

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9946, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9945, metadata !DIExpression()), !dbg !9947
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9952
  br i1 %8, label %9, label %11, !dbg !9955, !llvm.loop !9956

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !9957
  br label %15, !dbg !9957

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9946, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9945, metadata !DIExpression()), !dbg !9947
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !9950
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9946, metadata !DIExpression()), !dbg !9947
  %14 = icmp eq %struct._snode* %13, null, !dbg !9950
  br i1 %14, label %15, label %7, !dbg !9948, !llvm.loop !9956

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9960 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9964, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9965, metadata !DIExpression()), !dbg !9966
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9967
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !9967
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !9967
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9968
  %5 = icmp eq %struct._snode* %4, null, !dbg !9968
  br i1 %5, label %6, label %8, !dbg !9967

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9970
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !9970
  br label %8, !dbg !9970

8:                                                ; preds = %6, %2
  ret void, !dbg !9967
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9972 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9976, metadata !DIExpression()), !dbg !9977
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9978
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9978
  ret %struct._snode* %3, !dbg !9979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9980 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9984, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9985, metadata !DIExpression()), !dbg !9986
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9987
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9988
  ret void, !dbg !9989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9990 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9992, metadata !DIExpression()), !dbg !9994
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9993, metadata !DIExpression()), !dbg !9994
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9995
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9996
  ret void, !dbg !9997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9998 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10000, metadata !DIExpression()), !dbg !10001
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10002
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10002
  ret %struct._snode* %3, !dbg !10003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !10004 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10006, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10007, metadata !DIExpression()), !dbg !10008
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10009
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10010
  ret void, !dbg !10011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !10012 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10016, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10017, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10018, metadata !DIExpression()), !dbg !10019
  %4 = icmp eq %struct._snode* %1, null, !dbg !10020
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !10022
  br i1 %4, label %6, label %11, !dbg !10023

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !10024
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10026
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10026
  br i1 %8, label %9, label %15, !dbg !10024

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10028
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !10028
  br label %15, !dbg !10028

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !10030
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10032
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10032
  br i1 %13, label %14, label %15, !dbg !10030

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !10034
  br label %15, !dbg !10034

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !10023
  ret void, !dbg !10023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !10036 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10040, metadata !DIExpression()), !dbg !10041
  %2 = icmp eq %struct._snode* %0, null, !dbg !10042
  br i1 %2, label %5, label %3, !dbg !10042

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !10042
  br label %5, !dbg !10042

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10042
  ret %struct._snode* %6, !dbg !10042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10043 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10045, metadata !DIExpression()), !dbg !10046
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !10047
  ret %struct._snode* %2, !dbg !10047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10048 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10050, metadata !DIExpression()), !dbg !10051
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10052
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10052
  ret %struct._snode* %3, !dbg !10053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10056, metadata !DIExpression()), !dbg !10059
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !10060, !range !10061
  call void @llvm.dbg.value(metadata i32 %2, metadata !10057, metadata !DIExpression()), !dbg !10059
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !10062
  call void @llvm.dbg.value(metadata i32 %3, metadata !10058, metadata !DIExpression()), !dbg !10059
  ret i32 %3, !dbg !10063
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10066, metadata !DIExpression()), !dbg !10069
  call void @llvm.dbg.value(metadata i8* %1, metadata !10067, metadata !DIExpression()), !dbg !10069
  call void @llvm.dbg.value(metadata i8* %1, metadata !10068, metadata !DIExpression()), !dbg !10069
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10070
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10070
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10071
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10071
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10071
  %8 = shl nuw i32 1, %0, !dbg !10072
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !10073
  ret void, !dbg !10074
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10075 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10079, metadata !DIExpression()), !dbg !10085
  call void @llvm.dbg.value(metadata i32 %1, metadata !10080, metadata !DIExpression()), !dbg !10085
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10081, metadata !DIExpression()), !dbg !10085
  %4 = bitcast i64* %3 to i8*, !dbg !10086
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10086
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10083, metadata !DIExpression()), !dbg !10085
  store i64 70368744177732, i64* %3, align 8, !dbg !10087
  call void @llvm.dbg.value(metadata i64* %3, metadata !10083, metadata !DIExpression(DW_OP_deref)), !dbg !10085
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !10088
  call void @llvm.dbg.value(metadata i32 %5, metadata !10084, metadata !DIExpression()), !dbg !10085
  %6 = icmp eq i32 %5, 0, !dbg !10089
  br i1 %6, label %7, label %8, !dbg !10091

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !10092
  br label %8, !dbg !10093

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10094
  ret void, !dbg !10094
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10095 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10097, metadata !DIExpression()), !dbg !10100
  call void @llvm.dbg.value(metadata i8* %0, metadata !10098, metadata !DIExpression()), !dbg !10100
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10101
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10099, metadata !DIExpression()), !dbg !10100
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10102
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10102
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10103
  ret i32 %5, !dbg !10104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10107, metadata !DIExpression()), !dbg !10110
  call void @llvm.dbg.value(metadata i32 %1, metadata !10108, metadata !DIExpression()), !dbg !10110
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !10111
  call void @llvm.dbg.value(metadata i32 %3, metadata !10109, metadata !DIExpression()), !dbg !10110
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !10112
  ret void, !dbg !10113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !10114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10118, metadata !DIExpression()), !dbg !10119
  %2 = sdiv i32 %0, 4, !dbg !10120
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10121
  %6 = add nsw i32 %5, 16, !dbg !10122
  %7 = shl i32 15, %6, !dbg !10123
  %8 = or i32 %7, %2, !dbg !10124
  ret i32 %8, !dbg !10125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10130, metadata !DIExpression()), !dbg !10132
  call void @llvm.dbg.value(metadata i32 %1, metadata !10131, metadata !DIExpression()), !dbg !10132
  %3 = and i32 %1, 255, !dbg !10133
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10133
  %5 = load volatile i32, i32* %4, align 4, !dbg !10133
  %6 = lshr i32 %1, 16, !dbg !10133
  %7 = xor i32 %6, -1, !dbg !10133
  %8 = and i32 %5, %7, !dbg !10133
  call void @llvm.dbg.value(metadata i32 %6, metadata !10134, metadata !DIExpression()) #24, !dbg !10138
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10140, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 %9, metadata !10137, metadata !DIExpression()) #24, !dbg !10138
  call void @llvm.dbg.value(metadata i32 %9, metadata !10142, metadata !DIExpression()) #24, !dbg !10147
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !10149, !range !3885
  %11 = shl i32 %0, %10, !dbg !10133
  %12 = or i32 %11, %8, !dbg !10133
  store volatile i32 %12, i32* %4, align 4, !dbg !10133
  ret void, !dbg !10150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10151 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10155, metadata !DIExpression()), !dbg !10160
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10156, metadata !DIExpression()), !dbg !10160
  call void @llvm.dbg.value(metadata i32 %2, metadata !10157, metadata !DIExpression()), !dbg !10160
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10161
  %5 = icmp eq %struct._snode* %4, null, !dbg !10161
  br i1 %5, label %21, label %6, !dbg !10161

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !10163
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10159, metadata !DIExpression()), !dbg !10160
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10158, metadata !DIExpression()), !dbg !10160
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10164
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10164
  %11 = load i32, i32* %10, align 4, !dbg !10164
  %12 = and i32 %11, %2, !dbg !10168
  %13 = icmp eq i32 %12, 0, !dbg !10168
  br i1 %13, label %19, label %14, !dbg !10169

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10158, metadata !DIExpression()), !dbg !10160
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10170
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10170
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10170
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10172
  br label %19, !dbg !10173

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10158, metadata !DIExpression()), !dbg !10160
  %20 = icmp eq %struct._snode* %8, null, !dbg !10174
  br i1 %20, label %21, label %6, !dbg !10174

21:                                               ; preds = %19, %3
  ret void, !dbg !10175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10178, metadata !DIExpression()), !dbg !10179
  %2 = and i32 %0, 255, !dbg !10180
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10180
  %4 = load volatile i32, i32* %3, align 4, !dbg !10180
  %5 = lshr i32 %0, 16, !dbg !10180
  %6 = and i32 %4, %5, !dbg !10180
  call void @llvm.dbg.value(metadata i32 %5, metadata !10134, metadata !DIExpression()) #24, !dbg !10181
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !10183, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 %7, metadata !10137, metadata !DIExpression()) #24, !dbg !10181
  call void @llvm.dbg.value(metadata i32 %7, metadata !10142, metadata !DIExpression()) #24, !dbg !10184
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10186, !range !3885
  %9 = lshr i32 %6, %8, !dbg !10187
  ret i32 %9, !dbg !10188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10189 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10194, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.value(metadata i32 %1, metadata !10195, metadata !DIExpression()), !dbg !10196
  %3 = shl i32 %1, 16, !dbg !10197
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10197
  store volatile i32 %3, i32* %4, align 4, !dbg !10197
  ret void, !dbg !10198
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10199 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10203, metadata !DIExpression()), !dbg !10204
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10205
  %3 = load volatile i32, i32* %2, align 4, !dbg !10205
  ret i32 %3, !dbg !10206
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10207 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10209, metadata !DIExpression()), !dbg !10211
  call void @llvm.dbg.value(metadata i32 %1, metadata !10210, metadata !DIExpression()), !dbg !10211
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10212
  store volatile i32 %1, i32* %3, align 4, !dbg !10212
  ret void, !dbg !10213
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10214 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10216, metadata !DIExpression()), !dbg !10217
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10218
  %3 = load volatile i32, i32* %2, align 4, !dbg !10218
  ret i32 %3, !dbg !10219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !10220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10224, metadata !DIExpression()), !dbg !10226
  call void @llvm.dbg.value(metadata i32* %1, metadata !10225, metadata !DIExpression()), !dbg !10226
  %3 = and i32 %0, 131072, !dbg !10227
  %4 = icmp eq i32 %3, 0, !dbg !10229
  br i1 %4, label %22, label %5, !dbg !10230

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10231
  %6 = and i32 %0, 2, !dbg !10233
  %7 = icmp eq i32 %6, 0, !dbg !10235
  br i1 %7, label %11, label %8, !dbg !10236

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10237
  %10 = icmp eq i32 %9, 0, !dbg !10237
  br i1 %10, label %33, label %11, !dbg !10240

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10241
  store i32 %12, i32* %1, align 4, !dbg !10241
  %13 = and i32 %0, 16, !dbg !10242
  %14 = icmp eq i32 %13, 0, !dbg !10244
  br i1 %14, label %17, label %15, !dbg !10245

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10246
  br label %31, !dbg !10248

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10249
  %19 = icmp eq i32 %18, 0, !dbg !10251
  br i1 %19, label %33, label %20, !dbg !10252

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10253
  br label %31, !dbg !10255

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10256
  %24 = icmp eq i32 %23, 0, !dbg !10258
  br i1 %24, label %31, label %25, !dbg !10259

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10260
  %27 = icmp eq i32 %26, 0, !dbg !10263
  br i1 %27, label %28, label %31, !dbg !10264

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10265
  br label %33, !dbg !10266

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10226
  ret i32 %34, !dbg !10266
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10267 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10271, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %1, metadata !10272, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %2, metadata !10273, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %3, metadata !10274, metadata !DIExpression()), !dbg !10282
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10283
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10283
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10283
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10275, metadata !DIExpression()), !dbg !10282
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10284
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10284
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10284
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10276, metadata !DIExpression()), !dbg !10282
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !10285
  call void @llvm.dbg.value(metadata i32 %11, metadata !10277, metadata !DIExpression()), !dbg !10282
  %12 = and i32 %2, 48, !dbg !10286
  call void @llvm.dbg.value(metadata i32 %12, metadata !10278, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %2, metadata !10279, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %2, metadata !10280, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %2, metadata !10281, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10282
  %13 = lshr i32 %2, 6, !dbg !10287
  %14 = and i32 %13, 1, !dbg !10287
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !10288
  %15 = lshr i32 %2, 7, !dbg !10289
  %16 = and i32 %15, 3, !dbg !10289
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !10290
  %17 = lshr i32 %2, 9, !dbg !10291
  %18 = and i32 %17, 3, !dbg !10291
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !10292
  %19 = icmp eq i32 %12, 32, !dbg !10293
  br i1 %19, label %20, label %24, !dbg !10295

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10296
  br i1 %21, label %22, label %23, !dbg !10299

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10300
  br label %24, !dbg !10302

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10303
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10305
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !10306
  ret void, !dbg !10307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !10308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10310, metadata !DIExpression()), !dbg !10312
  %2 = shl nuw i32 1, %0, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %2, metadata !10311, metadata !DIExpression()), !dbg !10312
  ret i32 %2, !dbg !10314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10315 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10319, metadata !DIExpression()), !dbg !10322
  call void @llvm.dbg.value(metadata i32 %1, metadata !10320, metadata !DIExpression()), !dbg !10322
  call void @llvm.dbg.value(metadata i32 %2, metadata !10321, metadata !DIExpression()), !dbg !10322
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10323
  %5 = load volatile i32, i32* %4, align 4, !dbg !10323
  %6 = xor i32 %1, -1, !dbg !10323
  %7 = and i32 %5, %6, !dbg !10323
  %8 = mul i32 %2, %1, !dbg !10323
  %9 = or i32 %7, %8, !dbg !10323
  store volatile i32 %9, i32* %4, align 4, !dbg !10323
  ret void, !dbg !10324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10325 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10327, metadata !DIExpression()), !dbg !10330
  call void @llvm.dbg.value(metadata i32 %1, metadata !10328, metadata !DIExpression()), !dbg !10330
  call void @llvm.dbg.value(metadata i32 %2, metadata !10329, metadata !DIExpression()), !dbg !10330
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10331
  %5 = load volatile i32, i32* %4, align 4, !dbg !10331
  call void @llvm.dbg.value(metadata i32 %1, metadata !10134, metadata !DIExpression()) #24, !dbg !10332
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10334, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 %6, metadata !10137, metadata !DIExpression()) #24, !dbg !10332
  call void @llvm.dbg.value(metadata i32 %6, metadata !10142, metadata !DIExpression()) #24, !dbg !10335
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10337, !range !3885
  %8 = shl nuw nsw i32 %7, 1, !dbg !10331
  %9 = shl i32 3, %8, !dbg !10331
  %10 = xor i32 %9, -1, !dbg !10331
  %11 = and i32 %5, %10, !dbg !10331
  call void @llvm.dbg.value(metadata i32 %1, metadata !10134, metadata !DIExpression()) #24, !dbg !10338
  call void @llvm.dbg.value(metadata i32 %6, metadata !10137, metadata !DIExpression()) #24, !dbg !10338
  call void @llvm.dbg.value(metadata i32 %6, metadata !10142, metadata !DIExpression()) #24, !dbg !10340
  %12 = shl i32 %2, %8, !dbg !10331
  %13 = or i32 %11, %12, !dbg !10331
  store volatile i32 %13, i32* %4, align 4, !dbg !10331
  ret void, !dbg !10342
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10343 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10345, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.value(metadata i32 %1, metadata !10346, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.value(metadata i32 %2, metadata !10347, metadata !DIExpression()), !dbg !10348
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10349
  %5 = load volatile i32, i32* %4, align 4, !dbg !10349
  call void @llvm.dbg.value(metadata i32 %1, metadata !10134, metadata !DIExpression()) #24, !dbg !10350
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10352, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 %6, metadata !10137, metadata !DIExpression()) #24, !dbg !10350
  call void @llvm.dbg.value(metadata i32 %6, metadata !10142, metadata !DIExpression()) #24, !dbg !10353
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10355, !range !3885
  %8 = shl nuw nsw i32 %7, 1, !dbg !10349
  %9 = shl i32 3, %8, !dbg !10349
  %10 = xor i32 %9, -1, !dbg !10349
  %11 = and i32 %5, %10, !dbg !10349
  call void @llvm.dbg.value(metadata i32 %1, metadata !10134, metadata !DIExpression()) #24, !dbg !10356
  call void @llvm.dbg.value(metadata i32 %6, metadata !10137, metadata !DIExpression()) #24, !dbg !10356
  call void @llvm.dbg.value(metadata i32 %6, metadata !10142, metadata !DIExpression()) #24, !dbg !10358
  %12 = shl i32 %2, %8, !dbg !10349
  %13 = or i32 %11, %12, !dbg !10349
  store volatile i32 %13, i32* %4, align 4, !dbg !10349
  ret void, !dbg !10360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10361 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10363, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.value(metadata i32 %1, metadata !10364, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.value(metadata i32 %2, metadata !10365, metadata !DIExpression()), !dbg !10366
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10367
  %5 = load volatile i32, i32* %4, align 4, !dbg !10367
  call void @llvm.dbg.value(metadata i32 %1, metadata !10134, metadata !DIExpression()) #24, !dbg !10368
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10370, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 %6, metadata !10137, metadata !DIExpression()) #24, !dbg !10368
  call void @llvm.dbg.value(metadata i32 %6, metadata !10142, metadata !DIExpression()) #24, !dbg !10371
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10373, !range !3885
  %8 = shl nuw nsw i32 %7, 2, !dbg !10367
  %9 = shl i32 15, %8, !dbg !10367
  %10 = xor i32 %9, -1, !dbg !10367
  %11 = and i32 %5, %10, !dbg !10367
  call void @llvm.dbg.value(metadata i32 %1, metadata !10134, metadata !DIExpression()) #24, !dbg !10374
  call void @llvm.dbg.value(metadata i32 %6, metadata !10137, metadata !DIExpression()) #24, !dbg !10374
  call void @llvm.dbg.value(metadata i32 %6, metadata !10142, metadata !DIExpression()) #24, !dbg !10376
  %12 = shl i32 %2, %8, !dbg !10367
  %13 = or i32 %11, %12, !dbg !10367
  store volatile i32 %13, i32* %4, align 4, !dbg !10367
  ret void, !dbg !10378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10379 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10381, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.value(metadata i32 %1, metadata !10382, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.value(metadata i32 %2, metadata !10383, metadata !DIExpression()), !dbg !10384
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10385
  %5 = load volatile i32, i32* %4, align 4, !dbg !10385
  %6 = lshr i32 %1, 8, !dbg !10385
  call void @llvm.dbg.value(metadata i32 %6, metadata !10134, metadata !DIExpression()) #24, !dbg !10386
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10388, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 %7, metadata !10137, metadata !DIExpression()) #24, !dbg !10386
  call void @llvm.dbg.value(metadata i32 %7, metadata !10142, metadata !DIExpression()) #24, !dbg !10389
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10391, !range !3885
  %9 = shl nuw nsw i32 %8, 2, !dbg !10385
  %10 = shl i32 15, %9, !dbg !10385
  %11 = xor i32 %10, -1, !dbg !10385
  %12 = and i32 %5, %11, !dbg !10385
  call void @llvm.dbg.value(metadata i32 %6, metadata !10134, metadata !DIExpression()) #24, !dbg !10392
  call void @llvm.dbg.value(metadata i32 %7, metadata !10137, metadata !DIExpression()) #24, !dbg !10392
  call void @llvm.dbg.value(metadata i32 %7, metadata !10142, metadata !DIExpression()) #24, !dbg !10394
  %13 = shl i32 %2, %9, !dbg !10385
  %14 = or i32 %12, %13, !dbg !10385
  store volatile i32 %14, i32* %4, align 4, !dbg !10385
  ret void, !dbg !10396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10397 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10399, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 %1, metadata !10400, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 %2, metadata !10401, metadata !DIExpression()), !dbg !10402
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10403
  %5 = load volatile i32, i32* %4, align 4, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %1, metadata !10134, metadata !DIExpression()) #24, !dbg !10404
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10406, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 %6, metadata !10137, metadata !DIExpression()) #24, !dbg !10404
  call void @llvm.dbg.value(metadata i32 %6, metadata !10142, metadata !DIExpression()) #24, !dbg !10407
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10409, !range !3885
  %8 = shl nuw nsw i32 %7, 1, !dbg !10403
  %9 = shl i32 3, %8, !dbg !10403
  %10 = xor i32 %9, -1, !dbg !10403
  %11 = and i32 %5, %10, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %1, metadata !10134, metadata !DIExpression()) #24, !dbg !10410
  call void @llvm.dbg.value(metadata i32 %6, metadata !10137, metadata !DIExpression()) #24, !dbg !10410
  call void @llvm.dbg.value(metadata i32 %6, metadata !10142, metadata !DIExpression()) #24, !dbg !10412
  %12 = shl i32 %2, %8, !dbg !10403
  %13 = or i32 %11, %12, !dbg !10403
  store volatile i32 %13, i32* %4, align 4, !dbg !10403
  ret void, !dbg !10414
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10415 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10417, metadata !DIExpression()), !dbg !10420
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10421
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10421
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10421
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10418, metadata !DIExpression()), !dbg !10420
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10422
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10423
  %6 = tail call fastcc zeroext i1 @device_is_ready.73() #26, !dbg !10424
  br i1 %6, label %7, label %11, !dbg !10426

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %8, metadata !10419, metadata !DIExpression()), !dbg !10420
  %9 = icmp slt i32 %8, 0, !dbg !10428
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10430
  br label %11, !dbg !10430

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10420
  ret i32 %12, !dbg !10431
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.73() unnamed_addr #1 !dbg !10432 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10436, metadata !DIExpression()), !dbg !10437
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10438, !srcloc !10440
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.74() #26, !dbg !10441
  ret i1 %1, !dbg !10442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10443 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10447, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i8 1, metadata !10448, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10449, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i32 0, metadata !10450, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10451, metadata !DIExpression()), !dbg !10452
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10453
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10453
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10453
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10449, metadata !DIExpression()), !dbg !10452
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10454
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10457
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !10458
  call void @llvm.dbg.value(metadata i32 %7, metadata !10450, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i32 %7, metadata !10450, metadata !DIExpression()), !dbg !10452
  ret i32 %7, !dbg !10459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.74() unnamed_addr #1 !dbg !10460 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10462, metadata !DIExpression()), !dbg !10463
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !10464
  ret i1 %1, !dbg !10465
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10466 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10470, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.value(metadata i32 %1, metadata !10471, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.value(metadata i32 %2, metadata !10472, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.value(metadata i32 %3, metadata !10473, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.value(metadata i32 0, metadata !10474, metadata !DIExpression()), !dbg !10478
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !10479
  %5 = icmp eq i32 %3, 17, !dbg !10480
  br i1 %5, label %6, label %14, !dbg !10481

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10482
  call void @llvm.dbg.value(metadata i32 %7, metadata !10475, metadata !DIExpression()), !dbg !10483
  %8 = icmp eq i32 %7, 0, !dbg !10484
  %9 = shl nuw i32 1, %1, !dbg !10486
  br i1 %8, label %12, label %10, !dbg !10487

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10488
  br label %14, !dbg !10490

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10491
  br label %14, !dbg !10494

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10495
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !10496 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10498, metadata !DIExpression()), !dbg !10502
  call void @llvm.dbg.value(metadata i8* %1, metadata !10499, metadata !DIExpression()), !dbg !10502
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10503
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10503
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10503
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10500, metadata !DIExpression()), !dbg !10502
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10504
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10504
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !10506
  %9 = icmp eq i32 %8, 0, !dbg !10506
  br i1 %9, label %12, label %10, !dbg !10507

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10508
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !10510
  br label %12, !dbg !10511

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10512
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10514
  %15 = icmp eq i32 %14, 0, !dbg !10514
  br i1 %15, label %19, label %16, !dbg !10515

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10516
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !10517
  store i8 %18, i8* %1, align 1, !dbg !10518
  br label %19, !dbg !10519

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10502
  ret i32 %20, !dbg !10520
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10521 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10523, metadata !DIExpression()), !dbg !10527
  call void @llvm.dbg.value(metadata i8 %1, metadata !10524, metadata !DIExpression()), !dbg !10527
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10528
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10528
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10528
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10525, metadata !DIExpression()), !dbg !10527
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10529

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10530
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10533
  %10 = icmp eq i32 %9, 0, !dbg !10533
  br i1 %10, label %18, label %11, !dbg !10534

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10535, !srcloc !10542
  call void @llvm.dbg.value(metadata i32 undef, metadata !10538, metadata !DIExpression()) #24, !dbg !10543
  call void @llvm.dbg.value(metadata i32 undef, metadata !10539, metadata !DIExpression()) #24, !dbg !10543
  call void @llvm.dbg.value(metadata i32 undef, metadata !10526, metadata !DIExpression()), !dbg !10527
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10544
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10546
  %15 = icmp eq i32 %14, 0, !dbg !10546
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10535
  br i1 %15, label %17, label %19, !dbg !10547

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10538, metadata !DIExpression()) #24, !dbg !10543
  call void @llvm.dbg.value(metadata i32 %16, metadata !10526, metadata !DIExpression()), !dbg !10527
  call void @llvm.dbg.value(metadata i32 undef, metadata !10548, metadata !DIExpression()) #24, !dbg !10551
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !10553, !srcloc !10554
  br label %18, !dbg !10555

18:                                               ; preds = %17, %7
  br label %7, !dbg !10530, !llvm.loop !10556

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10535
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10558
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !10559
  call void @llvm.dbg.value(metadata i32 %20, metadata !10548, metadata !DIExpression()) #24, !dbg !10560
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !10562, !srcloc !10554
  ret void, !dbg !10563
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !10564 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10566, metadata !DIExpression()), !dbg !10569
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10570
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10570
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10570
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10567, metadata !DIExpression()), !dbg !10569
  call void @llvm.dbg.value(metadata i32 0, metadata !10568, metadata !DIExpression()), !dbg !10569
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10571
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10571
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10573
  %8 = icmp ne i32 %7, 0, !dbg !10573
  %9 = zext i1 %8 to i32, !dbg !10574
  call void @llvm.dbg.value(metadata i32 %9, metadata !10568, metadata !DIExpression()), !dbg !10569
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10575
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10577
  %12 = icmp eq i32 %11, 0, !dbg !10577
  %13 = or i32 %9, 2, !dbg !10578
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10578
  call void @llvm.dbg.value(metadata i32 %14, metadata !10568, metadata !DIExpression()), !dbg !10569
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10579
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !10581
  %17 = icmp eq i32 %16, 0, !dbg !10581
  %18 = or i32 %14, 4, !dbg !10582
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10582
  call void @llvm.dbg.value(metadata i32 %19, metadata !10568, metadata !DIExpression()), !dbg !10569
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10583
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !10585
  %22 = icmp eq i32 %21, 0, !dbg !10585
  %23 = or i32 %19, 8, !dbg !10586
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10586
  call void @llvm.dbg.value(metadata i32 %24, metadata !10568, metadata !DIExpression()), !dbg !10569
  %25 = and i32 %24, 8, !dbg !10587
  %26 = icmp eq i32 %25, 0, !dbg !10587
  br i1 %26, label %29, label %27, !dbg !10589

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10590
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !10592
  br label %29, !dbg !10593

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10594
  %31 = icmp eq i32 %30, 0, !dbg !10594
  br i1 %31, label %34, label %32, !dbg !10596

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10597
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !10599
  br label %34, !dbg !10600

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10601
  %36 = icmp eq i32 %35, 0, !dbg !10601
  br i1 %36, label %39, label %37, !dbg !10603

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10604
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !10606
  br label %39, !dbg !10607

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10608
  %41 = icmp eq i32 %40, 0, !dbg !10608
  br i1 %41, label %44, label %42, !dbg !10610

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10611
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !10613
  br label %44, !dbg !10614

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10615
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !10616
  ret i32 %24, !dbg !10617
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10618 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10620, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10621, metadata !DIExpression()), !dbg !10629
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10630
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10630
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10630
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10622, metadata !DIExpression()), !dbg !10629
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10631
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10631
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10631
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10623, metadata !DIExpression()), !dbg !10629
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10632
  %10 = load i8, i8* %9, align 4, !dbg !10632
  %11 = zext i8 %10 to i32, !dbg !10633
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !10634
  call void @llvm.dbg.value(metadata i32 %12, metadata !10625, metadata !DIExpression()), !dbg !10629
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10635
  %14 = load i8, i8* %13, align 1, !dbg !10635
  %15 = zext i8 %14 to i32, !dbg !10636
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !10637
  call void @llvm.dbg.value(metadata i32 %16, metadata !10626, metadata !DIExpression()), !dbg !10629
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10638
  %18 = load i8, i8* %17, align 2, !dbg !10638
  %19 = zext i8 %18 to i32, !dbg !10639
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !10640
  call void @llvm.dbg.value(metadata i32 %20, metadata !10627, metadata !DIExpression()), !dbg !10629
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10641
  %22 = load i8, i8* %21, align 1, !dbg !10641
  %23 = zext i8 %22 to i32, !dbg !10642
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !10643
  call void @llvm.dbg.value(metadata i32 %24, metadata !10628, metadata !DIExpression()), !dbg !10629
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10644

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10646
  br i1 %26, label %69, label %27, !dbg !10648

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10649

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10650
  br i1 %29, label %65, label %30, !dbg !10650

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10652
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10629
  br i1 %31, label %38, label %34, !dbg !10654

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10655
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !10655

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10658
  br i1 %37, label %38, label %69, !dbg !10659

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10660
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !10661
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !10662
  %41 = icmp eq i32 %12, %40, !dbg !10664
  br i1 %41, label %43, label %42, !dbg !10665

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !10666
  br label %43, !dbg !10668

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !10669
  %45 = icmp eq i32 %16, %44, !dbg !10671
  br i1 %45, label %47, label %46, !dbg !10672

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !10673
  br label %47, !dbg !10675

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !10676
  %49 = icmp eq i32 %20, %48, !dbg !10678
  br i1 %49, label %51, label %50, !dbg !10679

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !10680
  br label %51, !dbg !10682

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !10683
  %53 = icmp eq i32 %24, %52, !dbg !10685
  br i1 %53, label %55, label %54, !dbg !10686

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !10687
  br label %55, !dbg !10689

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10690
  %57 = load i32, i32* %56, align 4, !dbg !10690
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10692
  %59 = load i32, i32* %58, align 4, !dbg !10692
  %60 = icmp eq i32 %57, %59, !dbg !10693
  br i1 %60, label %63, label %61, !dbg !10694

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !10695
  %62 = load i32, i32* %56, align 4, !dbg !10697
  store i32 %62, i32* %58, align 4, !dbg !10698
  br label %63, !dbg !10699

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10700
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !10701
  br label %69, !dbg !10702

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10650
  %67 = and i8 %66, 1, !dbg !10650
  %68 = icmp eq i8 %67, 0, !dbg !10650
  br i1 %68, label %30, label %69, !dbg !10650

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10629
  ret i32 %70, !dbg !10703
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !10704 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10706, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10707, metadata !DIExpression()), !dbg !10709
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10710
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10710
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10710
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10708, metadata !DIExpression()), !dbg !10709
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10711
  %7 = load i32, i32* %6, align 4, !dbg !10711
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10712
  store i32 %7, i32* %8, align 4, !dbg !10713
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10714, !range !10715
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !10716
  %11 = trunc i32 %10 to i8, !dbg !10716
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10717
  store i8 %11, i8* %12, align 4, !dbg !10718
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !10719, !range !10720
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !10721
  %15 = trunc i32 %14 to i8, !dbg !10721
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10722
  store i8 %15, i8* %16, align 1, !dbg !10723
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !10724
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10725, !range !10715
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !10726
  %20 = trunc i32 %19 to i8, !dbg !10726
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10727
  store i8 %20, i8* %21, align 2, !dbg !10728
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !10729, !range !10730
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !10731
  %24 = trunc i32 %23 to i8, !dbg !10731
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10732
  store i8 %24, i8* %25, align 1, !dbg !10733
  ret i32 0, !dbg !10734
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !10735 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10737, metadata !DIExpression()), !dbg !10743
  call void @llvm.dbg.value(metadata i8* %1, metadata !10738, metadata !DIExpression()), !dbg !10743
  call void @llvm.dbg.value(metadata i32 %2, metadata !10739, metadata !DIExpression()), !dbg !10743
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10744
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10744
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10744
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10740, metadata !DIExpression()), !dbg !10743
  call void @llvm.dbg.value(metadata i8 0, metadata !10741, metadata !DIExpression()), !dbg !10743
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10745
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10745
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10747
  %10 = icmp eq i32 %9, 0, !dbg !10747
  br i1 %10, label %30, label %11, !dbg !10748

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10749, !srcloc !10542
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !10749
  call void @llvm.dbg.value(metadata i32 %13, metadata !10538, metadata !DIExpression()) #24, !dbg !10751
  call void @llvm.dbg.value(metadata i32 undef, metadata !10539, metadata !DIExpression()) #24, !dbg !10751
  call void @llvm.dbg.value(metadata i32 %13, metadata !10742, metadata !DIExpression()), !dbg !10743
  call void @llvm.dbg.value(metadata i8 0, metadata !10741, metadata !DIExpression()), !dbg !10743
  %14 = icmp sgt i32 %2, 0, !dbg !10752
  br i1 %14, label %15, label %28, !dbg !10753

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !10741, metadata !DIExpression()), !dbg !10743
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10754
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #26, !dbg !10755
  %20 = icmp eq i32 %19, 0, !dbg !10753
  br i1 %20, label %28, label %21, !dbg !10756

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10757
  %23 = add i8 %17, 1, !dbg !10759
  call void @llvm.dbg.value(metadata i8 %23, metadata !10741, metadata !DIExpression()), !dbg !10743
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !10760
  %25 = load i8, i8* %24, align 1, !dbg !10760
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #26, !dbg !10761
  %26 = zext i8 %23 to i32, !dbg !10762
  %27 = icmp slt i32 %26, %2, !dbg !10752
  br i1 %27, label %15, label %28, !dbg !10753, !llvm.loop !10763

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !10762
  call void @llvm.dbg.value(metadata i32 %13, metadata !10548, metadata !DIExpression()) #24, !dbg !10765
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !10767, !srcloc !10554
  br label %30, !dbg !10768

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !10743
  ret i32 %31, !dbg !10769
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !10770 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10772, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.value(metadata i8* %1, metadata !10773, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.value(metadata i32 %2, metadata !10774, metadata !DIExpression()), !dbg !10777
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10778
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10778
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10778
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10775, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.value(metadata i8 0, metadata !10776, metadata !DIExpression()), !dbg !10777
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10779
  call void @llvm.dbg.value(metadata i8 0, metadata !10776, metadata !DIExpression()), !dbg !10777
  %8 = icmp sgt i32 %2, 0, !dbg !10780
  br i1 %8, label %9, label %28, !dbg !10781

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !10776, metadata !DIExpression()), !dbg !10777
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10779
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10782
  %14 = icmp eq i32 %13, 0, !dbg !10781
  br i1 %14, label %28, label %15, !dbg !10783

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10784
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #26, !dbg !10786
  %18 = add i8 %11, 1, !dbg !10787
  call void @llvm.dbg.value(metadata i8 %18, metadata !10776, metadata !DIExpression()), !dbg !10777
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !10788
  store i8 %17, i8* %19, align 1, !dbg !10789
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10790
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #26, !dbg !10792
  %22 = icmp eq i32 %21, 0, !dbg !10792
  br i1 %22, label %25, label %23, !dbg !10793

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10794
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #26, !dbg !10796
  br label %25, !dbg !10797

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !10776, metadata !DIExpression()), !dbg !10777
  %26 = zext i8 %18 to i32, !dbg !10798
  %27 = icmp slt i32 %26, %2, !dbg !10780
  br i1 %27, label %9, label %28, !dbg !10781, !llvm.loop !10799

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !10798
  ret i32 %29, !dbg !10801
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10802 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10804, metadata !DIExpression()), !dbg !10806
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10807
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10807
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10807
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10805, metadata !DIExpression()), !dbg !10806
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10808
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10808
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10809
  ret void, !dbg !10810
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10811 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10813, metadata !DIExpression()), !dbg !10815
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10816
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10816
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10816
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10814, metadata !DIExpression()), !dbg !10815
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10817
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10817
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10818
  ret void, !dbg !10819
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10820 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10822, metadata !DIExpression()), !dbg !10824
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10825
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10825
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10825
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10823, metadata !DIExpression()), !dbg !10824
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10826
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10826
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10827
  %8 = icmp eq i32 %7, 0, !dbg !10827
  br i1 %8, label %14, label %9, !dbg !10828

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10829
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #26, !dbg !10830
  %12 = icmp ne i32 %11, 0, !dbg !10828
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !10831
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10834, metadata !DIExpression()), !dbg !10836
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10837
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10837
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10837
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10835, metadata !DIExpression()), !dbg !10836
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10838
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10838
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10839
  ret void, !dbg !10840
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10841 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10843, metadata !DIExpression()), !dbg !10845
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10846
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10846
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10846
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10844, metadata !DIExpression()), !dbg !10845
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10847
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10847
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10848
  ret void, !dbg !10849
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !10850 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10852, metadata !DIExpression()), !dbg !10854
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10855
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10855
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10855
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10853, metadata !DIExpression()), !dbg !10854
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10856
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10856
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10857
  ret i32 %7, !dbg !10858
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10859 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10861, metadata !DIExpression()), !dbg !10863
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10864
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10864
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10864
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10862, metadata !DIExpression()), !dbg !10863
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10865
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10865
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10866
  ret i32 %7, !dbg !10867
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10868 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10870, metadata !DIExpression()), !dbg !10872
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10873
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10873
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10873
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10871, metadata !DIExpression()), !dbg !10872
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10874
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10874
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10875
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10876
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10876
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073812480, label %9
  ], !dbg !10876

9:                                                ; preds = %1, %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10878
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10880
  br label %11, !dbg !10881

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10880
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10882
  ret void, !dbg !10883
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10884 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10886, metadata !DIExpression()), !dbg !10888
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10889
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10889
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10889
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10887, metadata !DIExpression()), !dbg !10888
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10890
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10890
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10891
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10892
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10892
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073812480, label %9
  ], !dbg !10892

9:                                                ; preds = %1, %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10894
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10896
  br label %11, !dbg !10897

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10896
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10898
  ret void, !dbg !10899
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !10900 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10902, metadata !DIExpression()), !dbg !10904
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10905
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10905
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10905
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10903, metadata !DIExpression()), !dbg !10904
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10906
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10906
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10907
  %8 = icmp eq i32 %7, 0, !dbg !10907
  br i1 %8, label %13, label %9, !dbg !10908

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10909
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10910
  %12 = icmp eq i32 %11, 0, !dbg !10910
  br i1 %12, label %13, label %22, !dbg !10911

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10912
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #26, !dbg !10913
  %16 = icmp eq i32 %15, 0, !dbg !10913
  br i1 %16, label %22, label %17, !dbg !10914

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10915
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #26, !dbg !10916
  %20 = icmp ne i32 %19, 0, !dbg !10914
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !10917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !10918 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10920, metadata !DIExpression()), !dbg !10921
  ret i32 1, !dbg !10922
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !10923 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10925, metadata !DIExpression()), !dbg !10929
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10926, metadata !DIExpression()), !dbg !10929
  call void @llvm.dbg.value(metadata i8* %2, metadata !10927, metadata !DIExpression()), !dbg !10929
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10930
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !10930
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !10930
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !10928, metadata !DIExpression()), !dbg !10929
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !10931
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10932
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !10933
  store i8* %2, i8** %8, align 4, !dbg !10934
  ret void, !dbg !10935
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10936 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10941, metadata !DIExpression()), !dbg !10942
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10943
  %3 = load volatile i32, i32* %2, align 4, !dbg !10943
  %4 = lshr i32 %3, 5, !dbg !10944
  %5 = and i32 %4, 1, !dbg !10944
  ret i32 %5, !dbg !10945
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10946 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10948, metadata !DIExpression()), !dbg !10949
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10950
  %3 = load volatile i32, i32* %2, align 4, !dbg !10950
  %4 = lshr i32 %3, 5, !dbg !10951
  %5 = and i32 %4, 1, !dbg !10951
  ret i32 %5, !dbg !10952
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10953 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10955, metadata !DIExpression()), !dbg !10956
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10957
  %3 = load volatile i32, i32* %2, align 4, !dbg !10957
  %4 = lshr i32 %3, 6, !dbg !10958
  %5 = and i32 %4, 1, !dbg !10958
  ret i32 %5, !dbg !10959
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10960 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10962, metadata !DIExpression()), !dbg !10963
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10964
  %3 = load volatile i32, i32* %2, align 4, !dbg !10964
  %4 = lshr i32 %3, 6, !dbg !10965
  %5 = and i32 %4, 1, !dbg !10965
  ret i32 %5, !dbg !10966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10967 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10971, metadata !DIExpression()), !dbg !10974
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10975

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !10982
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10985, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !10982
  %5 = and i32 %4, -2, !dbg !10987
  call void @llvm.dbg.value(metadata i32 %5, metadata !10972, metadata !DIExpression()), !dbg !10988
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !10996
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !10996
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10998, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !10996
  %7 = icmp eq i32 %6, 0, !dbg !10975
  br i1 %7, label %8, label %3, !dbg !10987, !llvm.loop !11000

8:                                                ; preds = %3
  ret void, !dbg !11001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11002 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11004, metadata !DIExpression()), !dbg !11005
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11006
  %3 = load volatile i32, i32* %2, align 4, !dbg !11006
  %4 = and i32 %3, -65, !dbg !11006
  store volatile i32 %4, i32* %2, align 4, !dbg !11006
  ret void, !dbg !11007
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11008 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11010, metadata !DIExpression()), !dbg !11013
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11014

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !11015
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11018, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !11015
  %5 = and i32 %4, -257, !dbg !11019
  call void @llvm.dbg.value(metadata i32 %5, metadata !11011, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !11021
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !11021
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11023, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !11021
  %7 = icmp eq i32 %6, 0, !dbg !11014
  br i1 %7, label %8, label %3, !dbg !11019, !llvm.loop !11024

8:                                                ; preds = %3
  ret void, !dbg !11025
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11026 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11028, metadata !DIExpression()), !dbg !11031
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !11032

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !11033
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11036, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !11033
  %5 = or i32 %4, 1, !dbg !11037
  call void @llvm.dbg.value(metadata i32 %5, metadata !11029, metadata !DIExpression()), !dbg !11038
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !11039
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !11039
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11041, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !11039
  %7 = icmp eq i32 %6, 0, !dbg !11032
  br i1 %7, label %8, label %3, !dbg !11037, !llvm.loop !11042

8:                                                ; preds = %3
  ret void, !dbg !11043
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11044 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11046, metadata !DIExpression()), !dbg !11047
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11048
  %3 = load volatile i32, i32* %2, align 4, !dbg !11048
  %4 = or i32 %3, 64, !dbg !11048
  store volatile i32 %4, i32* %2, align 4, !dbg !11048
  ret void, !dbg !11049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11050 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11052, metadata !DIExpression()), !dbg !11055
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11056

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !11057
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11060, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !11057
  %5 = or i32 %4, 256, !dbg !11061
  call void @llvm.dbg.value(metadata i32 %5, metadata !11053, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !11063
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !11063
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11065, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !11063
  %7 = icmp eq i32 %6, 0, !dbg !11056
  br i1 %7, label %8, label %3, !dbg !11061, !llvm.loop !11066

8:                                                ; preds = %3
  ret void, !dbg !11067
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11068 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11070, metadata !DIExpression()), !dbg !11073
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11074

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !11075
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11078, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !11075
  %5 = and i32 %4, -33, !dbg !11079
  call void @llvm.dbg.value(metadata i32 %5, metadata !11071, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !11081
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !11081
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11083, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !11081
  %7 = icmp eq i32 %6, 0, !dbg !11074
  br i1 %7, label %8, label %3, !dbg !11079, !llvm.loop !11084

8:                                                ; preds = %3
  ret void, !dbg !11085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11086 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11088, metadata !DIExpression()), !dbg !11091
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11092

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !11093
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11096, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !11093
  %5 = or i32 %4, 32, !dbg !11097
  call void @llvm.dbg.value(metadata i32 %5, metadata !11089, metadata !DIExpression()), !dbg !11098
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !11099
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !11099
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11101, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !11099
  %7 = icmp eq i32 %6, 0, !dbg !11092
  br i1 %7, label %8, label %3, !dbg !11097, !llvm.loop !11102

8:                                                ; preds = %3
  ret void, !dbg !11103
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11104 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11106, metadata !DIExpression()), !dbg !11107
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11108
  %3 = load volatile i32, i32* %2, align 4, !dbg !11108
  %4 = lshr i32 %3, 7, !dbg !11109
  %5 = and i32 %4, 1, !dbg !11109
  ret i32 %5, !dbg !11110
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11111 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11113, metadata !DIExpression()), !dbg !11116
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11117

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !11118
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11121, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !11118
  %5 = and i32 %4, -65, !dbg !11122
  call void @llvm.dbg.value(metadata i32 %5, metadata !11114, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !11124
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !11124
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11126, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !11124
  %7 = icmp eq i32 %6, 0, !dbg !11117
  br i1 %7, label %8, label %3, !dbg !11122, !llvm.loop !11127

8:                                                ; preds = %3
  ret void, !dbg !11128
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11129 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11131, metadata !DIExpression()), !dbg !11134
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11135

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !11136
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11139, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !11136
  %5 = or i32 %4, 64, !dbg !11140
  call void @llvm.dbg.value(metadata i32 %5, metadata !11132, metadata !DIExpression()), !dbg !11141
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !11142
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !11142
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11144, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !11142
  %7 = icmp eq i32 %6, 0, !dbg !11135
  br i1 %7, label %8, label %3, !dbg !11140, !llvm.loop !11145

8:                                                ; preds = %3
  ret void, !dbg !11146
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11147 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11151, metadata !DIExpression()), !dbg !11152
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11153
  %3 = load volatile i32, i32* %2, align 4, !dbg !11153
  %4 = trunc i32 %3 to i8, !dbg !11154
  ret i8 %4, !dbg !11155
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11156 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11158, metadata !DIExpression()), !dbg !11159
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11160
  %3 = load volatile i32, i32* %2, align 4, !dbg !11160
  %4 = lshr i32 %3, 3, !dbg !11161
  %5 = and i32 %4, 1, !dbg !11161
  ret i32 %5, !dbg !11162
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11163 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11165, metadata !DIExpression()), !dbg !11167
  %3 = bitcast i32* %2 to i8*, !dbg !11168
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11168
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11166, metadata !DIExpression()), !dbg !11169
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11170
  %5 = load volatile i32, i32* %4, align 4, !dbg !11170
  store volatile i32 %5, i32* %2, align 4, !dbg !11171
  %6 = load volatile i32, i32* %2, align 4, !dbg !11172
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11173
  %8 = load volatile i32, i32* %7, align 4, !dbg !11173
  store volatile i32 %8, i32* %2, align 4, !dbg !11174
  %9 = load volatile i32, i32* %2, align 4, !dbg !11175
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11176
  ret void, !dbg !11176
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !11177 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11181, metadata !DIExpression()), !dbg !11183
  call void @llvm.dbg.value(metadata i8 %1, metadata !11182, metadata !DIExpression()), !dbg !11183
  %3 = zext i8 %1 to i32, !dbg !11184
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11185
  store volatile i32 %3, i32* %4, align 4, !dbg !11186
  ret void, !dbg !11187
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11188 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11192, metadata !DIExpression()), !dbg !11194
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11195
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11195
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11195
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11193, metadata !DIExpression()), !dbg !11194
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11196
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11196
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !11197
  ret i32 %7, !dbg !11198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !11199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11203, metadata !DIExpression()), !dbg !11204
  %2 = icmp eq i32 %0, 1024, !dbg !11205
  %3 = select i1 %2, i32 2, i32 0, !dbg !11205
  %4 = icmp eq i32 %0, 1536, !dbg !11205
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11205
  ret i32 %5, !dbg !11206
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11207 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11209, metadata !DIExpression()), !dbg !11211
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11212
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11212
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11212
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11210, metadata !DIExpression()), !dbg !11211
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11213
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11213
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !11214
  ret i32 %7, !dbg !11215
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !11216 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11220, metadata !DIExpression()), !dbg !11221
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11222
  %3 = icmp ult i32 %2, 4, !dbg !11222
  br i1 %3, label %4, label %7, !dbg !11222

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11222
  %6 = load i32, i32* %5, align 4, !dbg !11222
  br label %7, !dbg !11222

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11223
  ret i32 %8, !dbg !11225
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11226 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11228, metadata !DIExpression()), !dbg !11230
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11231
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11231
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11231
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11229, metadata !DIExpression()), !dbg !11230
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11232
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11232
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !11233
  ret i32 %7, !dbg !11234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11235 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11239, metadata !DIExpression()), !dbg !11241
  call void @llvm.dbg.value(metadata i32 %1, metadata !11240, metadata !DIExpression()), !dbg !11241
  %3 = icmp eq i32 %0, 4096, !dbg !11242
  %4 = icmp eq i32 %1, 0, !dbg !11242
  %5 = select i1 %4, i32 4, i32 3, !dbg !11242
  %6 = select i1 %4, i32 3, i32 2, !dbg !11242
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11242
  ret i32 %7, !dbg !11243
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11244 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11246, metadata !DIExpression()), !dbg !11248
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11249
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11249
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11249
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11247, metadata !DIExpression()), !dbg !11248
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11250
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11250
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !11251
  ret i32 %7, !dbg !11252
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11257, metadata !DIExpression()), !dbg !11258
  %2 = icmp eq i32 %0, 768, !dbg !11259
  %3 = zext i1 %2 to i32, !dbg !11258
  ret i32 %3, !dbg !11261
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11262 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11264, metadata !DIExpression()), !dbg !11265
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11266
  %3 = load volatile i32, i32* %2, align 4, !dbg !11266
  %4 = and i32 %3, 768, !dbg !11266
  ret i32 %4, !dbg !11267
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11268 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11270, metadata !DIExpression()), !dbg !11271
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11272
  %3 = load volatile i32, i32* %2, align 4, !dbg !11272
  %4 = and i32 %3, 4096, !dbg !11272
  ret i32 %4, !dbg !11273
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11274 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11276, metadata !DIExpression()), !dbg !11277
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11278
  %3 = load volatile i32, i32* %2, align 4, !dbg !11278
  %4 = and i32 %3, 12288, !dbg !11278
  ret i32 %4, !dbg !11279
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11280 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11282, metadata !DIExpression()), !dbg !11283
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11284
  %3 = load volatile i32, i32* %2, align 4, !dbg !11284
  %4 = and i32 %3, 1536, !dbg !11284
  ret i32 %4, !dbg !11285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !11286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11290, metadata !DIExpression()), !dbg !11291
  %2 = icmp eq i32 %0, 2, !dbg !11292
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11292
  %4 = icmp eq i32 %0, 1, !dbg !11292
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11292
  ret i32 %5, !dbg !11293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11298, metadata !DIExpression()), !dbg !11299
  %2 = icmp ult i32 %0, 3, !dbg !11300
  br i1 %2, label %3, label %6, !dbg !11300

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11300
  %5 = load i32, i32* %4, align 4, !dbg !11300
  br label %6, !dbg !11300

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11301
  ret i32 %7, !dbg !11303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11308, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.value(metadata i32 %1, metadata !11309, metadata !DIExpression()), !dbg !11310
  %3 = icmp eq i32 %0, 4, !dbg !11311
  %4 = icmp eq i32 %1, 0, !dbg !11311
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11311
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11311
  ret i32 %6, !dbg !11312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11317, metadata !DIExpression()), !dbg !11318
  %2 = icmp eq i32 %0, 1, !dbg !11319
  %3 = select i1 %2, i32 768, i32 0, !dbg !11318
  ret i32 %3, !dbg !11321
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11322 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11324, metadata !DIExpression()), !dbg !11325
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11326
  %3 = load volatile i32, i32* %2, align 4, !dbg !11326
  %4 = and i32 %3, -8193, !dbg !11326
  store volatile i32 %4, i32* %2, align 4, !dbg !11326
  ret void, !dbg !11327
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11328 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11332, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i32 %1, metadata !11333, metadata !DIExpression()), !dbg !11335
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11336
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11336
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11336
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11334, metadata !DIExpression()), !dbg !11335
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11337
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11337
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11338
  ret void, !dbg !11339
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11340 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11342, metadata !DIExpression()), !dbg !11345
  call void @llvm.dbg.value(metadata i32 %1, metadata !11343, metadata !DIExpression()), !dbg !11345
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11346
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11346
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11346
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11344, metadata !DIExpression()), !dbg !11345
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11347
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11347
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11348
  ret void, !dbg !11349
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11350 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11352, metadata !DIExpression()), !dbg !11355
  call void @llvm.dbg.value(metadata i32 %1, metadata !11353, metadata !DIExpression()), !dbg !11355
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11356
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11356
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11356
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11354, metadata !DIExpression()), !dbg !11355
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11357
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11357
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11358
  ret void, !dbg !11359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11360 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11362, metadata !DIExpression()), !dbg !11365
  call void @llvm.dbg.value(metadata i32 %1, metadata !11363, metadata !DIExpression()), !dbg !11365
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11366
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11366
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11366
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11364, metadata !DIExpression()), !dbg !11365
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11367
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11367
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11368
  ret void, !dbg !11369
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11370 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11372, metadata !DIExpression()), !dbg !11377
  call void @llvm.dbg.value(metadata i32 %1, metadata !11373, metadata !DIExpression()), !dbg !11377
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11378
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11378
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11378
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11374, metadata !DIExpression()), !dbg !11377
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11379
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11379
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11379
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11375, metadata !DIExpression()), !dbg !11377
  %10 = bitcast i32* %3 to i8*, !dbg !11380
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11380
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11381
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11381
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11385
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11385
  %15 = load i8*, i8** %14, align 4, !dbg !11385
  call void @llvm.dbg.value(metadata i32* %3, metadata !11376, metadata !DIExpression(DW_OP_deref)), !dbg !11377
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !11386
  %17 = icmp slt i32 %16, 0, !dbg !11387
  br i1 %17, label %23, label %18, !dbg !11388

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11389
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11389
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !11390
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11391
  %22 = load i32, i32* %3, align 4, !dbg !11392
  call void @llvm.dbg.value(metadata i32 %22, metadata !11376, metadata !DIExpression()), !dbg !11377
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !11393
  br label %23, !dbg !11394

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11394
  ret void, !dbg !11394
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11395 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11397, metadata !DIExpression()), !dbg !11398
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11399
  %3 = load volatile i32, i32* %2, align 4, !dbg !11399
  %4 = or i32 %3, 8192, !dbg !11399
  store volatile i32 %4, i32* %2, align 4, !dbg !11399
  ret void, !dbg !11400
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11401 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11403, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i8* %1, metadata !11404, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i32* %2, metadata !11405, metadata !DIExpression()), !dbg !11407
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11408
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11408
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11408
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11406, metadata !DIExpression()), !dbg !11407
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11409
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11409
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11411
  br i1 %9, label %12, label %10, !dbg !11412

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11413
  br label %12, !dbg !11414

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11407
  ret i32 %13, !dbg !11415
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11416 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11420, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.value(metadata i32 0, metadata !11421, metadata !DIExpression()), !dbg !11422
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11423
  %3 = load volatile i32, i32* %2, align 4, !dbg !11423
  %4 = and i32 %3, -32769, !dbg !11423
  store volatile i32 %4, i32* %2, align 4, !dbg !11423
  ret void, !dbg !11424
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11425 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11429, metadata !DIExpression()), !dbg !11433
  call void @llvm.dbg.value(metadata i32 %1, metadata !11430, metadata !DIExpression()), !dbg !11433
  call void @llvm.dbg.value(metadata i32 0, metadata !11431, metadata !DIExpression()), !dbg !11433
  call void @llvm.dbg.value(metadata i32 %2, metadata !11432, metadata !DIExpression()), !dbg !11433
  %4 = zext i32 %1 to i64, !dbg !11434
  %5 = mul nuw nsw i64 %4, 25, !dbg !11434
  %6 = zext i32 %2 to i64, !dbg !11434
  %7 = shl nuw nsw i64 %6, 2, !dbg !11434
  %8 = udiv i64 %5, %7, !dbg !11434
  %9 = trunc i64 %8 to i32, !dbg !11434
  %10 = udiv i32 %9, 100, !dbg !11434
  %11 = shl nuw nsw i32 %10, 4, !dbg !11434
  %12 = mul i32 %10, -100, !dbg !11434
  %13 = add i32 %12, %9, !dbg !11434
  %14 = shl i32 %13, 4, !dbg !11434
  %15 = add i32 %14, 50, !dbg !11434
  %16 = udiv i32 %15, 100, !dbg !11434
  %17 = and i32 %16, 240, !dbg !11434
  %18 = add nuw nsw i32 %17, %11, !dbg !11434
  %19 = and i32 %16, 15, !dbg !11434
  %20 = and i32 %18, 65520, !dbg !11437
  %21 = or i32 %20, %19, !dbg !11437
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11438
  store volatile i32 %21, i32* %22, align 4, !dbg !11439
  ret void, !dbg !11440
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11441 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11443, metadata !DIExpression()), !dbg !11445
  call void @llvm.dbg.value(metadata i32 %1, metadata !11444, metadata !DIExpression()), !dbg !11445
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11446
  %4 = load volatile i32, i32* %3, align 4, !dbg !11446
  %5 = and i32 %4, -769, !dbg !11446
  %6 = or i32 %5, %1, !dbg !11446
  store volatile i32 %6, i32* %3, align 4, !dbg !11446
  ret void, !dbg !11447
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11448 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11450, metadata !DIExpression()), !dbg !11452
  call void @llvm.dbg.value(metadata i32 %1, metadata !11451, metadata !DIExpression()), !dbg !11452
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11453
  %4 = load volatile i32, i32* %3, align 4, !dbg !11453
  %5 = and i32 %4, -4097, !dbg !11453
  %6 = or i32 %5, %1, !dbg !11453
  store volatile i32 %6, i32* %3, align 4, !dbg !11453
  ret void, !dbg !11454
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11455 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11457, metadata !DIExpression()), !dbg !11459
  call void @llvm.dbg.value(metadata i32 %1, metadata !11458, metadata !DIExpression()), !dbg !11459
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11460
  %4 = load volatile i32, i32* %3, align 4, !dbg !11460
  %5 = and i32 %4, -12289, !dbg !11460
  %6 = or i32 %5, %1, !dbg !11460
  store volatile i32 %6, i32* %3, align 4, !dbg !11460
  ret void, !dbg !11461
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11462 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11464, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.value(metadata i32 %1, metadata !11465, metadata !DIExpression()), !dbg !11466
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11467
  %4 = load volatile i32, i32* %3, align 4, !dbg !11467
  %5 = and i32 %4, -1537, !dbg !11467
  %6 = or i32 %5, %1, !dbg !11467
  store volatile i32 %6, i32* %3, align 4, !dbg !11467
  ret void, !dbg !11468
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11469 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11471, metadata !DIExpression()), !dbg !11472
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11473
  %3 = load volatile i32, i32* %2, align 4, !dbg !11473
  %4 = and i32 %3, 1, !dbg !11473
  ret i32 %4, !dbg !11474
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11475 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11477, metadata !DIExpression()), !dbg !11478
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11479
  %3 = load volatile i32, i32* %2, align 4, !dbg !11479
  %4 = lshr i32 %3, 1, !dbg !11480
  %5 = and i32 %4, 1, !dbg !11480
  ret i32 %5, !dbg !11481
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11482 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11484, metadata !DIExpression()), !dbg !11485
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11486
  %3 = load volatile i32, i32* %2, align 4, !dbg !11486
  %4 = lshr i32 %3, 8, !dbg !11487
  %5 = and i32 %4, 1, !dbg !11487
  ret i32 %5, !dbg !11488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11489 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11491, metadata !DIExpression()), !dbg !11492
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11493
  store volatile i32 -257, i32* %2, align 4, !dbg !11493
  ret void, !dbg !11494
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11495 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11497, metadata !DIExpression()), !dbg !11499
  %3 = bitcast i32* %2 to i8*, !dbg !11500
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11500
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11498, metadata !DIExpression()), !dbg !11501
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11502
  %5 = load volatile i32, i32* %4, align 4, !dbg !11502
  store volatile i32 %5, i32* %2, align 4, !dbg !11503
  %6 = load volatile i32, i32* %2, align 4, !dbg !11504
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11505
  %8 = load volatile i32, i32* %7, align 4, !dbg !11505
  store volatile i32 %8, i32* %2, align 4, !dbg !11506
  %9 = load volatile i32, i32* %2, align 4, !dbg !11507
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11508
  ret void, !dbg !11508
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11509 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11511, metadata !DIExpression()), !dbg !11513
  %3 = bitcast i32* %2 to i8*, !dbg !11514
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11514
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11512, metadata !DIExpression()), !dbg !11515
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11516
  %5 = load volatile i32, i32* %4, align 4, !dbg !11516
  store volatile i32 %5, i32* %2, align 4, !dbg !11517
  %6 = load volatile i32, i32* %2, align 4, !dbg !11518
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11519
  %8 = load volatile i32, i32* %7, align 4, !dbg !11519
  store volatile i32 %8, i32* %2, align 4, !dbg !11520
  %9 = load volatile i32, i32* %2, align 4, !dbg !11521
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11522
  ret void, !dbg !11522
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11523 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11525, metadata !DIExpression()), !dbg !11527
  %3 = bitcast i32* %2 to i8*, !dbg !11528
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11528
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11526, metadata !DIExpression()), !dbg !11529
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11530
  %5 = load volatile i32, i32* %4, align 4, !dbg !11530
  store volatile i32 %5, i32* %2, align 4, !dbg !11531
  %6 = load volatile i32, i32* %2, align 4, !dbg !11532
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11533
  %8 = load volatile i32, i32* %7, align 4, !dbg !11533
  store volatile i32 %8, i32* %2, align 4, !dbg !11534
  %9 = load volatile i32, i32* %2, align 4, !dbg !11535
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11536
  ret void, !dbg !11536
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1668 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1670, metadata !DIExpression()), !dbg !11537
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #25, !dbg !11538
  tail call void @arch_irq_enable(i32 noundef 37) #25, !dbg !11540
  ret void, !dbg !11540
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !11541 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11543, metadata !DIExpression()), !dbg !11545
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11546
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11546
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11546
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11544, metadata !DIExpression()), !dbg !11545
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !11547
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !11547
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !11549
  br i1 %7, label %11, label %8, !dbg !11550

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !11551
  %10 = load i8*, i8** %9, align 4, !dbg !11551
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #25, !dbg !11553
  br label %11, !dbg !11554

11:                                               ; preds = %8, %1
  ret void, !dbg !11555
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !11556 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11558, metadata !DIExpression()), !dbg !11564
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11565
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11565
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11565
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11559, metadata !DIExpression()), !dbg !11564
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11566
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11566
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11566
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11560, metadata !DIExpression()), !dbg !11564
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !11567
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11568
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11568
  %10 = tail call fastcc zeroext i1 @device_is_ready.79(%struct.device* noundef %9) #26, !dbg !11570
  br i1 %10, label %11, label %51, !dbg !11571

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !11572
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11573
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11573
  %15 = load i8*, i8** %14, align 4, !dbg !11573
  %16 = tail call fastcc i32 @clock_control_on.80(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !11574
  call void @llvm.dbg.value(metadata i32 %16, metadata !11563, metadata !DIExpression()), !dbg !11564
  %17 = icmp eq i32 %16, 0, !dbg !11575
  br i1 %17, label %18, label %51, !dbg !11577

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11578
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !11578
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !11579
  call void @llvm.dbg.value(metadata i32 %21, metadata !11563, metadata !DIExpression()), !dbg !11564
  %22 = icmp slt i32 %21, 0, !dbg !11580
  br i1 %22, label %51, label %23, !dbg !11582

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11583
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11583
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !11584
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11585
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !11586
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11587
  %28 = load i32, i32* %27, align 4, !dbg !11587
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !11589

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !11561, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.value(metadata i32 4096, metadata !11562, metadata !DIExpression()), !dbg !11564
  br label %31, !dbg !11590

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !11561, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.value(metadata i32 0, metadata !11562, metadata !DIExpression()), !dbg !11564
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !11593
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !11593
  call void @llvm.dbg.value(metadata i32 %33, metadata !11562, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.value(metadata i32 %32, metadata !11561, metadata !DIExpression()), !dbg !11564
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11594
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !11595
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11596
  %36 = load i8, i8* %35, align 4, !dbg !11596, !range !7189
  %37 = icmp eq i8 %36, 0, !dbg !11596
  br i1 %37, label %39, label %38, !dbg !11598

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !11599
  br label %39, !dbg !11601

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11602
  %41 = load i32, i32* %40, align 4, !dbg !11602
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !11603
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11604
  %43 = load i8, i8* %42, align 4, !dbg !11604, !range !7189
  %44 = icmp eq i8 %43, 0, !dbg !11604
  br i1 %44, label %47, label %45, !dbg !11606

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11607
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !11609
  br label %47, !dbg !11610

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11611
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !11612
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !11613
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !11613
  tail call void %50(%struct.device* noundef nonnull %0) #25, !dbg !11614
  br label %51, !dbg !11615

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !11564
  ret i32 %52, !dbg !11616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11617 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11619, metadata !DIExpression()), !dbg !11623
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11624
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11624
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11624
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11620, metadata !DIExpression()), !dbg !11623
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11621, metadata !DIExpression()), !dbg !11623
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11625
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11626
  ret void, !dbg !11627
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.79(%struct.device* noundef %0) unnamed_addr #1 !dbg !11628 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11632, metadata !DIExpression()), !dbg !11633
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11634, !srcloc !11636
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.81(%struct.device* noundef %0) #26, !dbg !11637
  ret i1 %2, !dbg !11638
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.80(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11639 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11641, metadata !DIExpression()), !dbg !11644
  call void @llvm.dbg.value(metadata i8* %1, metadata !11642, metadata !DIExpression()), !dbg !11644
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11645
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11645
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11645
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11643, metadata !DIExpression()), !dbg !11644
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11646
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11646
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11647
  ret i32 %8, !dbg !11648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11649 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11653, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.value(metadata i8 0, metadata !11654, metadata !DIExpression()), !dbg !11657
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11658
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11658
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11656, metadata !DIExpression(DW_OP_deref)), !dbg !11657
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11659
  call void @llvm.dbg.value(metadata i32 %4, metadata !11655, metadata !DIExpression()), !dbg !11657
  %5 = icmp slt i32 %4, 0, !dbg !11660
  br i1 %5, label %9, label %6, !dbg !11662

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11663
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11656, metadata !DIExpression()), !dbg !11657
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !11664
  br label %9, !dbg !11665

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11657
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11666
  ret i32 %10, !dbg !11666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11667 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11669, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 12, metadata !11670, metadata !DIExpression()), !dbg !11673
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11674

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !11675
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11678, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !11675
  %5 = or i32 %4, 12, !dbg !11679
  call void @llvm.dbg.value(metadata i32 %5, metadata !11671, metadata !DIExpression()), !dbg !11680
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !11681
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !11681
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11683, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !11681
  %7 = icmp eq i32 %6, 0, !dbg !11674
  br i1 %7, label %8, label %3, !dbg !11679, !llvm.loop !11684

8:                                                ; preds = %3
  ret void, !dbg !11685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11686 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11688, metadata !DIExpression()), !dbg !11692
  call void @llvm.dbg.value(metadata i32 %1, metadata !11689, metadata !DIExpression()), !dbg !11692
  call void @llvm.dbg.value(metadata i32 %2, metadata !11690, metadata !DIExpression()), !dbg !11692
  call void @llvm.dbg.value(metadata i32 0, metadata !11691, metadata !DIExpression()), !dbg !11692
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11693
  %5 = load volatile i32, i32* %4, align 4, !dbg !11693
  %6 = and i32 %5, -5633, !dbg !11693
  %7 = or i32 %2, %1, !dbg !11693
  %8 = or i32 %7, %6, !dbg !11693
  store volatile i32 %8, i32* %4, align 4, !dbg !11693
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11694
  %10 = load volatile i32, i32* %9, align 4, !dbg !11694
  %11 = and i32 %10, -12289, !dbg !11694
  store volatile i32 %11, i32* %9, align 4, !dbg !11694
  ret void, !dbg !11695
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11696 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11698, metadata !DIExpression()), !dbg !11699
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11700
  %3 = load volatile i32, i32* %2, align 4, !dbg !11700
  %4 = or i32 %3, 8, !dbg !11700
  store volatile i32 %4, i32* %2, align 4, !dbg !11700
  ret void, !dbg !11701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11702 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11706, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11707, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.value(metadata i32 0, metadata !11708, metadata !DIExpression()), !dbg !11709
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11710
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11710
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11711
  %5 = load i8, i8* %4, align 4, !dbg !11711
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11712
  ret i32 %6, !dbg !11713
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.81(%struct.device* noundef %0) unnamed_addr #1 !dbg !11714 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11716, metadata !DIExpression()), !dbg !11717
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11718
  ret i1 %2, !dbg !11719
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !11720 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11722, metadata !DIExpression()), !dbg !11723
  tail call fastcc void @__NVIC_SetPriority.83() #26, !dbg !11724
  store i32 8399, i32* @last_load, align 4, !dbg !11725
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11726
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11727
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11728
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11729
  %3 = or i32 %2, 7, !dbg !11729
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11729
  ret i32 0, !dbg !11730
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.83() unnamed_addr #15 !dbg !11731 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11733, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i32 1, metadata !11734, metadata !DIExpression()), !dbg !11735
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11736
  ret void, !dbg !11739
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11740 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11742, metadata !DIExpression()), !dbg !11744
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !11745
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11746
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11747
  %5 = add i32 %4, %3, !dbg !11747
  store i32 %5, i32* @cycle_count, align 4, !dbg !11747
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11748
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11749
  %7 = sub i32 %5, %6, !dbg !11752
  %8 = udiv i32 %7, 8400, !dbg !11753
  call void @llvm.dbg.value(metadata i32 %8, metadata !11743, metadata !DIExpression()), !dbg !11744
  %9 = mul nuw i32 %8, 8400, !dbg !11754
  %10 = add i32 %9, %6, !dbg !11755
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11755
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11756
  tail call void @z_arm_int_exit() #25, !dbg !11757
  ret void, !dbg !11758
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !11759 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11764
  call void @llvm.dbg.value(metadata i32 %1, metadata !11761, metadata !DIExpression()), !dbg !11765
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11766
  call void @llvm.dbg.value(metadata i32 %2, metadata !11762, metadata !DIExpression()), !dbg !11765
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11767
  call void @llvm.dbg.value(metadata i32 %3, metadata !11763, metadata !DIExpression()), !dbg !11765
  %4 = and i32 %2, 65536, !dbg !11768
  %5 = icmp ne i32 %4, 0, !dbg !11768
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11770
  %8 = load i32, i32* @last_load, align 4, !dbg !11765
  br i1 %7, label %9, label %13, !dbg !11770

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11771
  %11 = add i32 %10, %8, !dbg !11771
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11771
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11773
  br label %13, !dbg !11774

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11775
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11776
  %16 = add i32 %14, %15, !dbg !11777
  ret i32 %16, !dbg !11778
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11783, metadata !DIExpression()), !dbg !11796
  call void @llvm.dbg.value(metadata i1 %1, metadata !11784, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11796
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11797
  br i1 %4, label %5, label %8, !dbg !11797

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11799
  %7 = and i32 %6, -2, !dbg !11799
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11799
  store i32 -16777216, i32* @last_load, align 4, !dbg !11801
  br label %54, !dbg !11802

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11803
  call void @llvm.dbg.value(metadata i32 %9, metadata !11788, metadata !DIExpression()), !dbg !11796
  br i1 %3, label %18, label %10, !dbg !11804

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11804
  call void @llvm.dbg.value(metadata i32 undef, metadata !11783, metadata !DIExpression()), !dbg !11796
  %12 = icmp slt i32 %11, 1, !dbg !11805
  br i1 %12, label %18, label %13, !dbg !11805

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11805
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11805
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11805
  %17 = add nuw nsw i32 %16, 8399, !dbg !11805
  br label %18, !dbg !11805

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11783, metadata !DIExpression()), !dbg !11796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11806, metadata !DIExpression()) #24, !dbg !11813
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11815, !srcloc !11821
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11815
  call void @llvm.dbg.value(metadata i32 %21, metadata !11818, metadata !DIExpression()) #24, !dbg !11822
  call void @llvm.dbg.value(metadata i32 undef, metadata !11819, metadata !DIExpression()) #24, !dbg !11822
  call void @llvm.dbg.value(metadata i32 %21, metadata !11812, metadata !DIExpression()) #24, !dbg !11813
  call void @llvm.dbg.value(metadata i32 %21, metadata !11789, metadata !DIExpression()), !dbg !11796
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !11823
  call void @llvm.dbg.value(metadata i32 %22, metadata !11794, metadata !DIExpression()), !dbg !11796
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11824
  call void @llvm.dbg.value(metadata i32 %23, metadata !11786, metadata !DIExpression()), !dbg !11796
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11825
  %25 = add i32 %24, %22, !dbg !11825
  store i32 %25, i32* @cycle_count, align 4, !dbg !11825
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11826
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11827
  %27 = sub i32 %25, %26, !dbg !11828
  call void @llvm.dbg.value(metadata i32 %27, metadata !11795, metadata !DIExpression()), !dbg !11796
  %28 = icmp slt i32 %27, 0, !dbg !11829
  br i1 %28, label %38, label %29, !dbg !11831

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11785, metadata !DIExpression()), !dbg !11796
  call void @llvm.dbg.value(metadata i32 undef, metadata !11785, metadata !DIExpression()), !dbg !11796
  %30 = add nuw i32 %19, %27, !dbg !11832
  %31 = urem i32 %30, 8400, !dbg !11834
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11785, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11796
  %32 = sub nuw nsw i32 %19, %31, !dbg !11835
  call void @llvm.dbg.value(metadata i32 %32, metadata !11785, metadata !DIExpression()), !dbg !11796
  %33 = icmp ugt i32 %32, 1024, !dbg !11836
  br i1 %33, label %34, label %36, !dbg !11836

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11785, metadata !DIExpression()), !dbg !11796
  %35 = icmp ugt i32 %32, 16766400, !dbg !11837
  br i1 %35, label %38, label %36, !dbg !11839

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11840
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11841
  call void @llvm.dbg.value(metadata i32 %40, metadata !11787, metadata !DIExpression()), !dbg !11796
  %41 = add nsw i32 %39, -1, !dbg !11842
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11843
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11844
  %42 = icmp ult i32 %23, %40, !dbg !11845
  br i1 %42, label %43, label %48, !dbg !11847

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11848
  %45 = add i32 %23, %9, !dbg !11850
  %46 = sub i32 %45, %40, !dbg !11851
  %47 = add i32 %46, %44, !dbg !11848
  br label %52, !dbg !11852

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11853
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11855
  %51 = add i32 %49, %50, !dbg !11855
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11856
  store i32 %53, i32* @cycle_count, align 4, !dbg !11856
  call void @llvm.dbg.value(metadata i32 %21, metadata !11857, metadata !DIExpression()) #24, !dbg !11863
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11862, metadata !DIExpression()) #24, !dbg !11863
  call void @llvm.dbg.value(metadata i32 %21, metadata !11865, metadata !DIExpression()) #24, !dbg !11868
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !11870, !srcloc !11871
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !11872
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11873 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11806, metadata !DIExpression()) #24, !dbg !11877
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11879, !srcloc !11821
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11879
  call void @llvm.dbg.value(metadata i32 %2, metadata !11818, metadata !DIExpression()) #24, !dbg !11881
  call void @llvm.dbg.value(metadata i32 undef, metadata !11819, metadata !DIExpression()) #24, !dbg !11881
  call void @llvm.dbg.value(metadata i32 %2, metadata !11812, metadata !DIExpression()) #24, !dbg !11877
  call void @llvm.dbg.value(metadata i32 %2, metadata !11875, metadata !DIExpression()), !dbg !11882
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11883
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11884
  %5 = add i32 %4, %3, !dbg !11885
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11886
  %7 = sub i32 %5, %6, !dbg !11887
  call void @llvm.dbg.value(metadata i32 %7, metadata !11876, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata i32 %2, metadata !11857, metadata !DIExpression()) #24, !dbg !11888
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11862, metadata !DIExpression()) #24, !dbg !11888
  call void @llvm.dbg.value(metadata i32 %2, metadata !11865, metadata !DIExpression()) #24, !dbg !11890
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11892, !srcloc !11871
  %8 = udiv i32 %7, 8400, !dbg !11893
  ret i32 %8, !dbg !11894
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11895 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11806, metadata !DIExpression()) #24, !dbg !11899
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11901, !srcloc !11821
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11901
  call void @llvm.dbg.value(metadata i32 %2, metadata !11818, metadata !DIExpression()) #24, !dbg !11903
  call void @llvm.dbg.value(metadata i32 undef, metadata !11819, metadata !DIExpression()) #24, !dbg !11903
  call void @llvm.dbg.value(metadata i32 %2, metadata !11812, metadata !DIExpression()) #24, !dbg !11899
  call void @llvm.dbg.value(metadata i32 %2, metadata !11897, metadata !DIExpression()), !dbg !11904
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11905
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11906
  %5 = add i32 %4, %3, !dbg !11907
  call void @llvm.dbg.value(metadata i32 %5, metadata !11898, metadata !DIExpression()), !dbg !11904
  call void @llvm.dbg.value(metadata i32 %2, metadata !11857, metadata !DIExpression()) #24, !dbg !11908
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11862, metadata !DIExpression()) #24, !dbg !11908
  call void @llvm.dbg.value(metadata i32 %2, metadata !11865, metadata !DIExpression()) #24, !dbg !11910
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11912, !srcloc !11871
  ret i32 %5, !dbg !11913
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !11914 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11915
  %2 = icmp eq i32 %1, -16777216, !dbg !11917
  br i1 %2, label %3, label %6, !dbg !11918

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11919
  %5 = or i32 %4, 1, !dbg !11919
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11919
  br label %6, !dbg !11921

6:                                                ; preds = %3, %0
  ret void, !dbg !11922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11923 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11924
  %2 = and i32 %1, -2, !dbg !11924
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11924
  ret void, !dbg !11925
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !11926 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11952, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.value(metadata i8 %1, metadata !11953, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11954, metadata !DIExpression()), !dbg !11955
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11956
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11956
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11955
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11957
  %8 = load i8, i8* %6, align 4, !dbg !11958
  %9 = zext i8 %8 to i32, !dbg !11959
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11959
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11960
  br i1 %11, label %18, label %24, !dbg !11961

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11955
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11957
  %14 = load i8, i8* %6, align 4, !dbg !11958
  %15 = zext i8 %14 to i32, !dbg !11959
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11959
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11960
  br i1 %17, label %18, label %24, !dbg !11961, !llvm.loop !11962

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11964
  %21 = load i8, i8* %20, align 1, !dbg !11964
  %22 = icmp eq i8 %21, %1, !dbg !11967
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11968
  br i1 %22, label %24, label %12, !dbg !11969

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11955
  ret i32 %25, !dbg !11970
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11971 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11982, metadata !DIExpression()), !dbg !11998
  call void @llvm.dbg.value(metadata i8 %1, metadata !11983, metadata !DIExpression()), !dbg !11998
  call void @llvm.dbg.value(metadata i32 %2, metadata !11984, metadata !DIExpression()), !dbg !11998
  call void @llvm.dbg.value(metadata i32 0, metadata !11987, metadata !DIExpression()), !dbg !11998
  call void @llvm.dbg.value(metadata i32 0, metadata !11988, metadata !DIExpression()), !dbg !11998
  call void @llvm.dbg.value(metadata i8 0, metadata !11989, metadata !DIExpression()), !dbg !11999
  %4 = icmp eq i8 %1, 0, !dbg !12000
  br i1 %4, label %35, label %5, !dbg !12001

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12000
  br label %9, !dbg !12001

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11989, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata i32 %29, metadata !11987, metadata !DIExpression()), !dbg !11998
  %8 = icmp eq i32 %34, %6, !dbg !12000
  br i1 %8, label %35, label %9, !dbg !12001, !llvm.loop !12002

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11989, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata i32 %11, metadata !11987, metadata !DIExpression()), !dbg !11998
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12004
  %13 = load i32, i32* %12, align 4, !dbg !12004
  call void @llvm.dbg.value(metadata i32 %13, metadata !11986, metadata !DIExpression()), !dbg !11998
  %14 = and i32 %13, 31, !dbg !12005
  %15 = icmp ult i32 %14, 16, !dbg !12006
  br i1 %15, label %16, label %20, !dbg !12007

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12008
  %18 = load i32, i32* %17, align 4, !dbg !12008
  %19 = or i32 %18, 32, !dbg !12010
  call void @llvm.dbg.value(metadata i32 %19, metadata !11987, metadata !DIExpression()), !dbg !11998
  br label %28, !dbg !12011

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12012

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12013
  %23 = load i32, i32* %22, align 4, !dbg !12013
  call void @llvm.dbg.value(metadata i32 %23, metadata !11991, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12014
  %24 = lshr i32 %23, 7, !dbg !12015
  %25 = and i32 %24, 16, !dbg !12015
  %26 = or i32 %25, %23, !dbg !12015
  call void @llvm.dbg.value(metadata i32 %26, metadata !11987, metadata !DIExpression()), !dbg !11998
  br label %28, !dbg !12016

27:                                               ; preds = %20
  br label %28, !dbg !12017

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !11998
  call void @llvm.dbg.value(metadata i32 %29, metadata !11987, metadata !DIExpression()), !dbg !11998
  %30 = lshr i32 %13, 5, !dbg !12017
  %31 = and i32 %30, 255, !dbg !12017
  call void @llvm.dbg.value(metadata i32 %31, metadata !11985, metadata !DIExpression()), !dbg !11998
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !12018
  call void @llvm.dbg.value(metadata i32 %32, metadata !11988, metadata !DIExpression()), !dbg !11998
  %33 = icmp slt i32 %32, 0, !dbg !12019
  %34 = add nuw nsw i32 %10, 1, !dbg !12021
  call void @llvm.dbg.value(metadata i32 %34, metadata !11989, metadata !DIExpression()), !dbg !11999
  br i1 %33, label %35, label %7, !dbg !12022

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12023
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12028, metadata !DIExpression()), !dbg !12032
  call void @llvm.dbg.value(metadata i32 %1, metadata !12029, metadata !DIExpression()), !dbg !12032
  call void @llvm.dbg.value(metadata i32 %2, metadata !12030, metadata !DIExpression()), !dbg !12032
  %4 = icmp ugt i32 %0, 175, !dbg !12033
  br i1 %4, label %16, label %5, !dbg !12035

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12036
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12037
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12037
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12031, metadata !DIExpression()), !dbg !12032
  %9 = add nsw i32 %6, -8, !dbg !12038
  %10 = icmp ult i32 %9, 3, !dbg !12038
  br i1 %10, label %16, label %11, !dbg !12040

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.88(%struct.device* noundef %8) #26, !dbg !12041
  br i1 %12, label %13, label %16, !dbg !12042

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12043
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !12044
  br label %16, !dbg !12045

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12032
  ret i32 %17, !dbg !12046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.88(%struct.device* noundef %0) unnamed_addr #1 !dbg !12047 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12051, metadata !DIExpression()), !dbg !12052
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12053, !srcloc !12055
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.89(%struct.device* noundef %0) #26, !dbg !12056
  ret i1 %2, !dbg !12057
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.89(%struct.device* noundef %0) unnamed_addr #1 !dbg !12058 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12060, metadata !DIExpression()), !dbg !12061
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !12062
  ret i1 %2, !dbg !12063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !12064 {
  ret void, !dbg !12065
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !12066 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12068, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 0, metadata !12069, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 2, metadata !12070, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 0, metadata !12071, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 2, metadata !12072, metadata !DIExpression()), !dbg !12073
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12074
  %2 = and i32 %1, 12, !dbg !12075
  call void @llvm.dbg.value(metadata i32 %2, metadata !12068, metadata !DIExpression()), !dbg !12073
  %3 = icmp eq i32 %2, 8, !dbg !12076
  br i1 %3, label %4, label %18, !dbg !12076

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12077
  call void @llvm.dbg.value(metadata i32 %5, metadata !12071, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12073
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12079
  %7 = and i32 %6, 63, !dbg !12080
  call void @llvm.dbg.value(metadata i32 %7, metadata !12072, metadata !DIExpression()), !dbg !12073
  %8 = udiv i32 16000000, %7, !dbg !12081
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12081
  %10 = lshr i32 %9, 6, !dbg !12081
  %11 = and i32 %10, 511, !dbg !12081
  %12 = mul i32 %11, %8, !dbg !12081
  call void @llvm.dbg.value(metadata i32 %12, metadata !12069, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 %12, metadata !12069, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 %12, metadata !12069, metadata !DIExpression()), !dbg !12073
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12083
  %14 = lshr i32 %13, 15, !dbg !12084
  %15 = and i32 %14, 6, !dbg !12084
  %16 = add nuw nsw i32 %15, 2, !dbg !12084
  call void @llvm.dbg.value(metadata i32 %16, metadata !12070, metadata !DIExpression()), !dbg !12073
  %17 = udiv i32 %12, %16, !dbg !12085
  br label %18, !dbg !12086

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !12087
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12088
  %21 = lshr i32 %20, 4, !dbg !12089
  %22 = and i32 %21, 15, !dbg !12089
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !12090
  %24 = load i8, i8* %23, align 1, !dbg !12090
  %25 = zext i8 %24 to i32, !dbg !12090
  call void @llvm.dbg.value(metadata i32 %25, metadata !12068, metadata !DIExpression()), !dbg !12073
  %26 = lshr i32 %19, %25, !dbg !12091
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !12091
  ret void, !dbg !12092
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12093 {
  ret i32 0, !dbg !12098
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12099 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12126, metadata !DIExpression()), !dbg !12137
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12138
  br i1 %3, label %317, label %4, !dbg !12140

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12141
  %6 = load i32, i32* %5, align 4, !dbg !12141
  %7 = and i32 %6, 1, !dbg !12143
  %8 = icmp eq i32 %7, 0, !dbg !12144
  br i1 %8, label %66, label %9, !dbg !12145

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12146
  %11 = and i32 %10, 12, !dbg !12146
  %12 = icmp eq i32 %11, 4, !dbg !12149
  br i1 %12, label %21, label %13, !dbg !12150

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12151
  %15 = and i32 %14, 12, !dbg !12151
  %16 = icmp eq i32 %15, 8, !dbg !12152
  br i1 %16, label %17, label %29, !dbg !12153

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12154
  %19 = and i32 %18, 4194304, !dbg !12155
  %20 = icmp eq i32 %19, 0, !dbg !12156
  br i1 %20, label %29, label %21, !dbg !12157

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12158
  %23 = and i32 %22, 131072, !dbg !12158
  %24 = icmp eq i32 %23, 0, !dbg !12158
  br i1 %24, label %66, label %25, !dbg !12161

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12162
  %27 = load i32, i32* %26, align 4, !dbg !12162
  %28 = icmp eq i32 %27, 0, !dbg !12163
  br i1 %28, label %317, label %66, !dbg !12164

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12165
  %31 = load i32, i32* %30, align 4, !dbg !12165
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12169

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12170
  %34 = or i32 %33, 65536, !dbg !12170
  br label %45, !dbg !12170

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12172
  %37 = or i32 %36, 262144, !dbg !12172
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12172
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12172
  %39 = or i32 %38, 65536, !dbg !12172
  br label %45, !dbg !12172

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12175
  %42 = and i32 %41, -65537, !dbg !12175
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12175
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12175
  %44 = and i32 %43, -262145, !dbg !12175
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12177
  %47 = load i32, i32* %30, align 4, !dbg !12178
  %48 = icmp eq i32 %47, 0, !dbg !12180
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !12181
  call void @llvm.dbg.value(metadata i32 %49, metadata !12127, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.value(metadata i32 %49, metadata !12127, metadata !DIExpression()), !dbg !12137
  br i1 %48, label %58, label %50, !dbg !12182

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12183
  %52 = and i32 %51, 131072, !dbg !12185
  %53 = icmp eq i32 %52, 0, !dbg !12185
  br i1 %53, label %54, label %66, !dbg !12186

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !12187
  %56 = sub i32 %55, %49, !dbg !12190
  %57 = icmp ugt i32 %56, 100, !dbg !12191
  br i1 %57, label %317, label %50, !dbg !12192, !llvm.loop !12193

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12195
  %60 = and i32 %59, 131072, !dbg !12195
  %61 = icmp eq i32 %60, 0, !dbg !12195
  br i1 %61, label %66, label %62, !dbg !12197

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12198
  %64 = sub i32 %63, %49, !dbg !12201
  %65 = icmp ugt i32 %64, 100, !dbg !12202
  br i1 %65, label %317, label %58, !dbg !12203, !llvm.loop !12204

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12206
  %68 = and i32 %67, 2, !dbg !12208
  %69 = icmp eq i32 %68, 0, !dbg !12209
  br i1 %69, label %121, label %70, !dbg !12210

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12211
  %72 = and i32 %71, 12, !dbg !12211
  %73 = icmp eq i32 %72, 0, !dbg !12214
  br i1 %73, label %82, label %74, !dbg !12215

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12216
  %76 = and i32 %75, 12, !dbg !12216
  %77 = icmp eq i32 %76, 8, !dbg !12217
  br i1 %77, label %78, label %90, !dbg !12218

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12219
  %80 = and i32 %79, 4194304, !dbg !12220
  %81 = icmp eq i32 %80, 0, !dbg !12221
  br i1 %81, label %82, label %90, !dbg !12222

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12223
  %84 = and i32 %83, 2, !dbg !12223
  %85 = icmp eq i32 %84, 0, !dbg !12223
  br i1 %85, label %114, label %86, !dbg !12226

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12227
  %88 = load i32, i32* %87, align 4, !dbg !12227
  %89 = icmp eq i32 %88, 1, !dbg !12228
  br i1 %89, label %114, label %317, !dbg !12229

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12230
  %92 = load i32, i32* %91, align 4, !dbg !12230
  %93 = icmp eq i32 %92, 0, !dbg !12233
  br i1 %93, label %104, label %94, !dbg !12234

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12235
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12237
  call void @llvm.dbg.value(metadata i32 %95, metadata !12127, metadata !DIExpression()), !dbg !12137
  br label %96, !dbg !12238

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12239
  %98 = and i32 %97, 2, !dbg !12240
  %99 = icmp eq i32 %98, 0, !dbg !12240
  br i1 %99, label %100, label %114, !dbg !12238

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12241
  %102 = sub i32 %101, %95, !dbg !12244
  %103 = icmp ugt i32 %102, 2, !dbg !12245
  br i1 %103, label %317, label %96, !dbg !12246, !llvm.loop !12247

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12249
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12251
  call void @llvm.dbg.value(metadata i32 %105, metadata !12127, metadata !DIExpression()), !dbg !12137
  br label %106, !dbg !12252

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12253
  %108 = and i32 %107, 2, !dbg !12253
  %109 = icmp eq i32 %108, 0, !dbg !12253
  br i1 %109, label %121, label %110, !dbg !12252

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12254
  %112 = sub i32 %111, %105, !dbg !12257
  %113 = icmp ugt i32 %112, 2, !dbg !12258
  br i1 %113, label %317, label %106, !dbg !12259, !llvm.loop !12260

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12262
  %116 = and i32 %115, -249, !dbg !12262
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12262
  %118 = load i32, i32* %117, align 4, !dbg !12262
  %119 = shl i32 %118, 3, !dbg !12262
  %120 = or i32 %119, %116, !dbg !12262
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12262
  br label %121, !dbg !12263

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12263
  %123 = and i32 %122, 8, !dbg !12265
  %124 = icmp eq i32 %123, 0, !dbg !12266
  br i1 %124, label %149, label %125, !dbg !12267

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12268
  %127 = load i32, i32* %126, align 4, !dbg !12268
  %128 = icmp eq i32 %127, 0, !dbg !12271
  br i1 %128, label %139, label %129, !dbg !12272

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12273
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12275
  call void @llvm.dbg.value(metadata i32 %130, metadata !12127, metadata !DIExpression()), !dbg !12137
  br label %131, !dbg !12276

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12277
  %133 = and i32 %132, 2, !dbg !12278
  %134 = icmp eq i32 %133, 0, !dbg !12278
  br i1 %134, label %135, label %149, !dbg !12276

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12279
  %137 = sub i32 %136, %130, !dbg !12282
  %138 = icmp ugt i32 %137, 2, !dbg !12283
  br i1 %138, label %317, label %131, !dbg !12284, !llvm.loop !12285

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12287
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12289
  call void @llvm.dbg.value(metadata i32 %140, metadata !12127, metadata !DIExpression()), !dbg !12137
  br label %141, !dbg !12290

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12291
  %143 = and i32 %142, 2, !dbg !12291
  %144 = icmp eq i32 %143, 0, !dbg !12291
  br i1 %144, label %149, label %145, !dbg !12290

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12292
  %147 = sub i32 %146, %140, !dbg !12295
  %148 = icmp ugt i32 %147, 2, !dbg !12296
  br i1 %148, label %317, label %141, !dbg !12297, !llvm.loop !12298

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12300
  %151 = and i32 %150, 4, !dbg !12301
  %152 = icmp eq i32 %151, 0, !dbg !12302
  br i1 %152, label %221, label %153, !dbg !12303

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12129, metadata !DIExpression()), !dbg !12304
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12305
  %155 = and i32 %154, 268435456, !dbg !12305
  %156 = icmp eq i32 %155, 0, !dbg !12305
  br i1 %156, label %157, label %164, !dbg !12306

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12307
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12307
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12133, metadata !DIExpression()), !dbg !12307
  store volatile i32 0, i32* %2, align 4, !dbg !12307
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12307
  %160 = or i32 %159, 268435456, !dbg !12307
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12307
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12307
  %162 = and i32 %161, 268435456, !dbg !12307
  store volatile i32 %162, i32* %2, align 4, !dbg !12307
  %163 = load volatile i32, i32* %2, align 4, !dbg !12307
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12308
  call void @llvm.dbg.value(metadata i32 1, metadata !12129, metadata !DIExpression()), !dbg !12304
  br label %164, !dbg !12309

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12129, metadata !DIExpression()), !dbg !12304
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12310
  %166 = and i32 %165, 256, !dbg !12310
  %167 = icmp eq i32 %166, 0, !dbg !12310
  br i1 %167, label %168, label %180, !dbg !12312

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12313
  %170 = or i32 %169, 256, !dbg !12313
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12313
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12315
  call void @llvm.dbg.value(metadata i32 %171, metadata !12127, metadata !DIExpression()), !dbg !12137
  br label %172, !dbg !12316

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12317
  %174 = and i32 %173, 256, !dbg !12317
  %175 = icmp eq i32 %174, 0, !dbg !12317
  br i1 %175, label %176, label %180, !dbg !12316

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12318
  %178 = sub i32 %177, %171, !dbg !12321
  %179 = icmp ugt i32 %178, 2, !dbg !12322
  br i1 %179, label %317, label %172, !dbg !12323, !llvm.loop !12324

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12326
  %182 = load i32, i32* %181, align 4, !dbg !12326
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12329

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12330
  %185 = or i32 %184, 1, !dbg !12330
  br label %196, !dbg !12330

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12332
  %188 = or i32 %187, 4, !dbg !12332
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12332
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12332
  %190 = or i32 %189, 1, !dbg !12332
  br label %196, !dbg !12332

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12335
  %193 = and i32 %192, -2, !dbg !12335
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12335
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12335
  %195 = and i32 %194, -5, !dbg !12335
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12337
  %198 = load i32, i32* %181, align 4, !dbg !12338
  %199 = icmp eq i32 %198, 0, !dbg !12340
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12341
  call void @llvm.dbg.value(metadata i32 %200, metadata !12127, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.value(metadata i32 %200, metadata !12127, metadata !DIExpression()), !dbg !12137
  br i1 %199, label %209, label %201, !dbg !12342

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12343
  %203 = and i32 %202, 2, !dbg !12345
  %204 = icmp eq i32 %203, 0, !dbg !12345
  br i1 %204, label %205, label %217, !dbg !12346

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12347
  %207 = sub i32 %206, %200, !dbg !12350
  %208 = icmp ugt i32 %207, 5000, !dbg !12351
  br i1 %208, label %317, label %201, !dbg !12352, !llvm.loop !12353

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12355
  %211 = and i32 %210, 2, !dbg !12355
  %212 = icmp eq i32 %211, 0, !dbg !12355
  br i1 %212, label %217, label %213, !dbg !12357

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12358
  %215 = sub i32 %214, %200, !dbg !12361
  %216 = icmp ugt i32 %215, 5000, !dbg !12362
  br i1 %216, label %317, label %209, !dbg !12363, !llvm.loop !12364

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12366

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12367
  %220 = and i32 %219, -268435457, !dbg !12367
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12367
  br label %221, !dbg !12370

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12371
  %223 = load i32, i32* %222, align 4, !dbg !12371
  %224 = icmp eq i32 %223, 0, !dbg !12373
  br i1 %224, label %316, label %225, !dbg !12374

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12375
  %227 = and i32 %226, 12, !dbg !12375
  %228 = icmp eq i32 %227, 8, !dbg !12378
  br i1 %228, label %277, label %229, !dbg !12379

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12380
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12383
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12383
  call void @llvm.dbg.value(metadata i32 %231, metadata !12127, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.value(metadata i32 %231, metadata !12127, metadata !DIExpression()), !dbg !12137
  br i1 %230, label %232, label %269, !dbg !12384

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12385
  %234 = and i32 %233, 33554432, !dbg !12385
  %235 = icmp eq i32 %234, 0, !dbg !12385
  br i1 %235, label %240, label %236, !dbg !12387

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12388
  %238 = sub i32 %237, %231, !dbg !12391
  %239 = icmp ugt i32 %238, 2, !dbg !12392
  br i1 %239, label %317, label %232, !dbg !12393, !llvm.loop !12394

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12396
  %242 = load i32, i32* %241, align 4, !dbg !12396
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12396
  %244 = load i32, i32* %243, align 4, !dbg !12396
  %245 = or i32 %244, %242, !dbg !12396
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12396
  %247 = load i32, i32* %246, align 4, !dbg !12396
  %248 = shl i32 %247, 6, !dbg !12396
  %249 = or i32 %245, %248, !dbg !12396
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12396
  %251 = load i32, i32* %250, align 4, !dbg !12396
  %252 = shl i32 %251, 15, !dbg !12396
  %253 = add i32 %252, -65536, !dbg !12396
  %254 = and i32 %253, -65536, !dbg !12396
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12396
  %256 = load i32, i32* %255, align 4, !dbg !12396
  %257 = shl i32 %256, 24, !dbg !12396
  %258 = or i32 %249, %257, !dbg !12396
  %259 = or i32 %258, %254, !dbg !12396
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12396
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12397
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12398
  call void @llvm.dbg.value(metadata i32 %260, metadata !12127, metadata !DIExpression()), !dbg !12137
  br label %261, !dbg !12399

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12400
  %263 = and i32 %262, 33554432, !dbg !12401
  %264 = icmp eq i32 %263, 0, !dbg !12401
  br i1 %264, label %265, label %316, !dbg !12399

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12402
  %267 = sub i32 %266, %260, !dbg !12405
  %268 = icmp ugt i32 %267, 2, !dbg !12406
  br i1 %268, label %317, label %261, !dbg !12407, !llvm.loop !12408

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12410
  %271 = and i32 %270, 33554432, !dbg !12410
  %272 = icmp eq i32 %271, 0, !dbg !12410
  br i1 %272, label %316, label %273, !dbg !12412

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12413
  %275 = sub i32 %274, %231, !dbg !12416
  %276 = icmp ugt i32 %275, 2, !dbg !12417
  br i1 %276, label %317, label %269, !dbg !12418, !llvm.loop !12419

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12421
  br i1 %278, label %317, label %279, !dbg !12424

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12425
  call void @llvm.dbg.value(metadata i32 %280, metadata !12128, metadata !DIExpression()), !dbg !12137
  %281 = and i32 %280, 4194304, !dbg !12427
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12429
  %283 = load i32, i32* %282, align 4, !dbg !12429
  %284 = icmp eq i32 %281, %283, !dbg !12430
  br i1 %284, label %285, label %317, !dbg !12431

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12432
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12433
  %288 = load i32, i32* %287, align 4, !dbg !12433
  %289 = icmp eq i32 %286, %288, !dbg !12434
  br i1 %289, label %290, label %317, !dbg !12435

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12436
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12437
  %293 = load i32, i32* %292, align 4, !dbg !12437
  %294 = shl i32 %293, 6, !dbg !12438
  %295 = icmp eq i32 %291, %294, !dbg !12439
  br i1 %295, label %296, label %317, !dbg !12440

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12441
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12442
  %299 = load i32, i32* %298, align 4, !dbg !12442
  %300 = shl i32 %299, 15, !dbg !12443
  %301 = add i32 %300, -65536, !dbg !12443
  %302 = and i32 %301, -65536, !dbg !12443
  %303 = icmp eq i32 %297, %302, !dbg !12444
  br i1 %303, label %304, label %317, !dbg !12445

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12446
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12447
  %307 = load i32, i32* %306, align 4, !dbg !12447
  %308 = shl i32 %307, 24, !dbg !12448
  %309 = icmp eq i32 %305, %308, !dbg !12449
  br i1 %309, label %310, label %317, !dbg !12450

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !12451
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12452
  %313 = load i32, i32* %312, align 4, !dbg !12452
  %314 = shl i32 %313, 28, !dbg !12453
  %315 = icmp eq i32 %311, %314, !dbg !12454
  br i1 %315, label %316, label %317, !dbg !12455

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !12456

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12137
  ret i32 %318, !dbg !12457
}

; Function Attrs: optsize
declare !dbg !12458 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12460 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12473, metadata !DIExpression()), !dbg !12476
  call void @llvm.dbg.value(metadata i32 %1, metadata !12474, metadata !DIExpression()), !dbg !12476
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !12477
  br i1 %3, label %115, label %4, !dbg !12479

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12480
  %6 = and i32 %5, 7, !dbg !12480
  %7 = icmp ult i32 %6, %1, !dbg !12482
  br i1 %7, label %8, label %13, !dbg !12483

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12484
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12484
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12486
  %11 = and i32 %10, 7, !dbg !12486
  %12 = icmp eq i32 %11, %1, !dbg !12488
  br i1 %12, label %13, label %115, !dbg !12489

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12490
  %15 = load i32, i32* %14, align 4, !dbg !12490
  %16 = and i32 %15, 2, !dbg !12492
  %17 = icmp eq i32 %16, 0, !dbg !12493
  br i1 %17, label %39, label %18, !dbg !12494

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12495
  %20 = icmp eq i32 %19, 0, !dbg !12498
  br i1 %20, label %25, label %21, !dbg !12499

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12500
  %23 = or i32 %22, 7168, !dbg !12500
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12500
  %24 = load i32, i32* %14, align 4, !dbg !12502
  br label %25, !dbg !12504

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12502
  %27 = and i32 %26, 8, !dbg !12505
  %28 = icmp eq i32 %27, 0, !dbg !12506
  br i1 %28, label %32, label %29, !dbg !12507

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12508
  %31 = or i32 %30, 57344, !dbg !12508
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12508
  br label %32, !dbg !12510

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12511
  %34 = and i32 %33, -241, !dbg !12511
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12511
  %36 = load i32, i32* %35, align 4, !dbg !12511
  %37 = or i32 %34, %36, !dbg !12511
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12511
  %38 = load i32, i32* %14, align 4, !dbg !12512
  br label %39, !dbg !12514

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12512
  %41 = and i32 %40, 1, !dbg !12515
  %42 = icmp eq i32 %41, 0, !dbg !12516
  br i1 %42, label %73, label %43, !dbg !12517

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12518
  %45 = load i32, i32* %44, align 4, !dbg !12518
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12521

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12522
  %48 = and i32 %47, 131072, !dbg !12525
  %49 = icmp eq i32 %48, 0, !dbg !12525
  br i1 %49, label %115, label %58, !dbg !12526

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12527
  %52 = and i32 %51, 33554432, !dbg !12531
  %53 = icmp eq i32 %52, 0, !dbg !12531
  br i1 %53, label %115, label %58, !dbg !12532

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12533
  %56 = and i32 %55, 2, !dbg !12536
  %57 = icmp eq i32 %56, 0, !dbg !12536
  br i1 %57, label %115, label %58, !dbg !12537

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12538
  %60 = and i32 %59, -4, !dbg !12538
  %61 = or i32 %60, %45, !dbg !12538
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12538
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12539
  call void @llvm.dbg.value(metadata i32 %62, metadata !12475, metadata !DIExpression()), !dbg !12476
  br label %63, !dbg !12540

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12541
  %65 = and i32 %64, 12, !dbg !12541
  %66 = load i32, i32* %44, align 4, !dbg !12542
  %67 = shl i32 %66, 2, !dbg !12543
  %68 = icmp eq i32 %65, %67, !dbg !12544
  br i1 %68, label %73, label %69, !dbg !12540

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12545
  %71 = sub i32 %70, %62, !dbg !12548
  %72 = icmp ugt i32 %71, 5000, !dbg !12549
  br i1 %72, label %115, label %63, !dbg !12550, !llvm.loop !12551

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12553
  %75 = and i32 %74, 7, !dbg !12553
  %76 = icmp ugt i32 %75, %1, !dbg !12555
  br i1 %76, label %77, label %82, !dbg !12556

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12557
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12557
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12559
  %80 = and i32 %79, 7, !dbg !12559
  %81 = icmp eq i32 %80, %1, !dbg !12561
  br i1 %81, label %82, label %115, !dbg !12562

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12563
  %84 = and i32 %83, 4, !dbg !12565
  %85 = icmp eq i32 %84, 0, !dbg !12566
  br i1 %85, label %93, label %86, !dbg !12567

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12568
  %88 = and i32 %87, -7169, !dbg !12568
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12568
  %90 = load i32, i32* %89, align 4, !dbg !12568
  %91 = or i32 %88, %90, !dbg !12568
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12568
  %92 = load i32, i32* %14, align 4, !dbg !12570
  br label %93, !dbg !12572

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12570
  %95 = and i32 %94, 8, !dbg !12573
  %96 = icmp eq i32 %95, 0, !dbg !12574
  br i1 %96, label %104, label %97, !dbg !12575

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12576
  %99 = and i32 %98, -57345, !dbg !12576
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12576
  %101 = load i32, i32* %100, align 4, !dbg !12576
  %102 = shl i32 %101, 3, !dbg !12576
  %103 = or i32 %102, %99, !dbg !12576
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12576
  br label %104, !dbg !12578

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !12579
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12580
  %107 = lshr i32 %106, 4, !dbg !12581
  %108 = and i32 %107, 15, !dbg !12581
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12582
  %110 = load i8, i8* %109, align 1, !dbg !12582
  %111 = zext i8 %110 to i32, !dbg !12582
  %112 = lshr i32 %105, %111, !dbg !12583
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12584
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12585
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12586
  br label %115, !dbg !12587

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12476
  ret i32 %116, !dbg !12588
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12589 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12591, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.value(metadata i32 0, metadata !12592, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.value(metadata i32 0, metadata !12593, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.value(metadata i32 0, metadata !12594, metadata !DIExpression()), !dbg !12595
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12596
  %2 = and i32 %1, 12, !dbg !12597
  %3 = icmp eq i32 %2, 8, !dbg !12598
  br i1 %3, label %4, label %21, !dbg !12598

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12599
  %6 = and i32 %5, 63, !dbg !12602
  call void @llvm.dbg.value(metadata i32 %6, metadata !12591, metadata !DIExpression()), !dbg !12595
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12603
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12605
  %9 = lshr i32 %8, 6, !dbg !12605
  %10 = and i32 %9, 511, !dbg !12605
  %11 = zext i32 %10 to i64, !dbg !12605
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !12605
  %13 = zext i32 %6 to i64, !dbg !12605
  %14 = udiv i64 %12, %13, !dbg !12605
  %15 = trunc i64 %14 to i32, !dbg !12605
  call void @llvm.dbg.value(metadata i32 %15, metadata !12592, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.value(metadata i32 %15, metadata !12592, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.value(metadata i32 %15, metadata !12592, metadata !DIExpression()), !dbg !12595
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12606
  %17 = lshr i32 %16, 15, !dbg !12607
  %18 = and i32 %17, 6, !dbg !12607
  %19 = add nuw nsw i32 %18, 2, !dbg !12607
  call void @llvm.dbg.value(metadata i32 %19, metadata !12593, metadata !DIExpression()), !dbg !12595
  %20 = udiv i32 %15, %19, !dbg !12608
  call void @llvm.dbg.value(metadata i32 %20, metadata !12594, metadata !DIExpression()), !dbg !12595
  br label %21, !dbg !12609

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !12610
  call void @llvm.dbg.value(metadata i32 %22, metadata !12594, metadata !DIExpression()), !dbg !12595
  ret i32 %22, !dbg !12611
}

; Function Attrs: optsize
declare !dbg !12612 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12615 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12619, metadata !DIExpression()), !dbg !12636
  call void @llvm.dbg.value(metadata i32 %1, metadata !12620, metadata !DIExpression()), !dbg !12636
  call void @llvm.dbg.value(metadata i32 %2, metadata !12621, metadata !DIExpression()), !dbg !12636
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !12637
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #24, !dbg !12637
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !12622, metadata !DIExpression()), !dbg !12638
  %7 = icmp eq i32 %0, 0, !dbg !12639
  br i1 %7, label %8, label %24, !dbg !12640

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !12641
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !12641
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12632, metadata !DIExpression()), !dbg !12641
  store volatile i32 0, i32* %5, align 4, !dbg !12641
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12641
  %11 = or i32 %10, 1, !dbg !12641
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12641
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12641
  %13 = and i32 %12, 1, !dbg !12641
  store volatile i32 %13, i32* %5, align 4, !dbg !12641
  %14 = load volatile i32, i32* %5, align 4, !dbg !12641
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !12642
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12643
  store i32 256, i32* %15, align 4, !dbg !12644
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12645
  store i32 2, i32* %16, align 4, !dbg !12646
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12647
  store i32 3, i32* %17, align 4, !dbg !12648
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12649
  store i32 0, i32* %18, align 4, !dbg !12650
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12651
  store i32 0, i32* %19, align 4, !dbg !12652
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !12653
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12654
  %21 = and i32 %20, -123731969, !dbg !12654
  %22 = or i32 %2, %1, !dbg !12654
  %23 = or i32 %22, %21, !dbg !12654
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12654
  br label %24, !dbg !12655

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #24, !dbg !12656
  ret void, !dbg !12656
}

; Function Attrs: optsize
declare !dbg !12657 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !12661 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12662
  ret void, !dbg !12663
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !12664 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12665
  ret void, !dbg !12666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !12667 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12668
  ret i32 %1, !dbg !12669
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !12670 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12671
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12672
  %3 = lshr i32 %2, 10, !dbg !12673
  %4 = and i32 %3, 7, !dbg !12673
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12674
  %6 = load i8, i8* %5, align 1, !dbg !12674
  %7 = zext i8 %6 to i32, !dbg !12674
  %8 = lshr i32 %1, %7, !dbg !12675
  ret i32 %8, !dbg !12676
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !12677 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12678
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12679
  %3 = lshr i32 %2, 13, !dbg !12680
  %4 = and i32 %3, 7, !dbg !12680
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12681
  %6 = load i8, i8* %5, align 1, !dbg !12681
  %7 = zext i8 %6 to i32, !dbg !12681
  %8 = lshr i32 %1, %7, !dbg !12682
  ret i32 %8, !dbg !12683
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12684 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12688, metadata !DIExpression()), !dbg !12689
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12690
  store i32 15, i32* %2, align 4, !dbg !12691
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12692
  %4 = and i32 %3, 262144, !dbg !12694
  %5 = icmp eq i32 %4, 0, !dbg !12695
  br i1 %5, label %8, label %6, !dbg !12696

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12697
  store i32 327680, i32* %7, align 4, !dbg !12699
  br label %15, !dbg !12700

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12701
  %10 = and i32 %9, 65536, !dbg !12703
  %11 = icmp eq i32 %10, 0, !dbg !12704
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12705
  br i1 %11, label %14, label %13, !dbg !12706

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12707
  br label %15, !dbg !12709

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12710
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12712
  %17 = and i32 %16, 1, !dbg !12714
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12715
  store i32 %17, i32* %18, align 4, !dbg !12717
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12718
  %20 = lshr i32 %19, 3, !dbg !12719
  %21 = and i32 %20, 31, !dbg !12719
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12720
  store i32 %21, i32* %22, align 4, !dbg !12721
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12722
  %24 = and i32 %23, 4, !dbg !12724
  %25 = icmp eq i32 %24, 0, !dbg !12725
  br i1 %25, label %28, label %26, !dbg !12726

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12727
  store i32 5, i32* %27, align 4, !dbg !12729
  br label %35, !dbg !12730

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12731
  %30 = and i32 %29, 1, !dbg !12733
  %31 = icmp eq i32 %30, 0, !dbg !12734
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12735
  br i1 %31, label %34, label %33, !dbg !12736

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12737
  br label %35, !dbg !12739

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12740
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12742
  %37 = and i32 %36, 1, !dbg !12744
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12745
  store i32 %37, i32* %38, align 4, !dbg !12747
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12748
  %40 = and i32 %39, 16777216, !dbg !12750
  %41 = icmp eq i32 %40, 0, !dbg !12751
  %42 = select i1 %41, i32 1, i32 2, !dbg !12752
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12753
  store i32 %42, i32* %43, align 4, !dbg !12755
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12756
  %45 = and i32 %44, 4194304, !dbg !12757
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12758
  store i32 %45, i32* %46, align 4, !dbg !12759
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12760
  %48 = and i32 %47, 63, !dbg !12761
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12762
  store i32 %48, i32* %49, align 4, !dbg !12763
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12764
  %51 = lshr i32 %50, 6, !dbg !12765
  %52 = and i32 %51, 511, !dbg !12765
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12766
  store i32 %52, i32* %53, align 4, !dbg !12767
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12768
  %55 = shl i32 %54, 1, !dbg !12769
  %56 = and i32 %55, 393216, !dbg !12769
  %57 = add nuw nsw i32 %56, 131072, !dbg !12769
  %58 = lshr exact i32 %57, 16, !dbg !12770
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12771
  store i32 %58, i32* %59, align 4, !dbg !12772
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12773
  %61 = lshr i32 %60, 24, !dbg !12774
  %62 = and i32 %61, 15, !dbg !12774
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12775
  store i32 %62, i32* %63, align 4, !dbg !12776
  ret void, !dbg !12777
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !12778 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12782, metadata !DIExpression()), !dbg !12784
  call void @llvm.dbg.value(metadata i32* %1, metadata !12783, metadata !DIExpression()), !dbg !12784
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12785
  store i32 15, i32* %3, align 4, !dbg !12786
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12787
  %5 = and i32 %4, 3, !dbg !12788
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12789
  store i32 %5, i32* %6, align 4, !dbg !12790
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12791
  %8 = and i32 %7, 240, !dbg !12792
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12793
  store i32 %8, i32* %9, align 4, !dbg !12794
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12795
  %11 = and i32 %10, 7168, !dbg !12796
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12797
  store i32 %11, i32* %12, align 4, !dbg !12798
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12799
  %14 = lshr i32 %13, 3, !dbg !12800
  %15 = and i32 %14, 7168, !dbg !12800
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12801
  store i32 %15, i32* %16, align 4, !dbg !12802
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12803
  %18 = and i32 %17, 7, !dbg !12804
  store i32 %18, i32* %1, align 4, !dbg !12805
  ret void, !dbg !12806
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12807 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12808
  %2 = and i32 %1, 128, !dbg !12808
  %3 = icmp eq i32 %2, 0, !dbg !12808
  br i1 %3, label %5, label %4, !dbg !12810

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !12811
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12813
  br label %5, !dbg !12814

5:                                                ; preds = %4, %0
  ret void, !dbg !12815
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12816 {
  ret void, !dbg !12817
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !12818 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12821, metadata !DIExpression()), !dbg !12822
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !12823
  ret void, !dbg !12824
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !12825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12828, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata i32 1000, metadata !12829, metadata !DIExpression()), !dbg !12830
  %2 = udiv i32 %0, 1000, !dbg !12831
  %3 = add nsw i32 %2, -1, !dbg !12832
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12833
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12834
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12835
  ret void, !dbg !12836
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !12837 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12839, metadata !DIExpression()), !dbg !12841
  %3 = bitcast i32* %2 to i8*, !dbg !12842
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12842
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12840, metadata !DIExpression()), !dbg !12843
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12844
  store volatile i32 %4, i32* %2, align 4, !dbg !12843
  %5 = load volatile i32, i32* %2, align 4, !dbg !12845
  %6 = icmp eq i32 %0, -1, !dbg !12846
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12841
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12841
  call void @llvm.dbg.value(metadata i32 %8, metadata !12839, metadata !DIExpression()), !dbg !12841
  br label %9, !dbg !12848

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12839, metadata !DIExpression()), !dbg !12841
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12849
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12841
  %12 = shl i32 %11, 15, !dbg !12841
  %13 = ashr i32 %12, 31, !dbg !12841
  %14 = add i32 %13, %10, !dbg !12841
  call void @llvm.dbg.value(metadata i32 %14, metadata !12839, metadata !DIExpression()), !dbg !12841
  %15 = icmp eq i32 %14, 0, !dbg !12848
  br i1 %15, label %16, label %9, !dbg !12848

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12852
  ret void, !dbg !12852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !12853 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12855, metadata !DIExpression()), !dbg !12856
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12857
  ret void, !dbg !12858
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !12859 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12864, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata i32 0, metadata !12867, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata i32 0, metadata !12868, metadata !DIExpression()), !dbg !12869
  %2 = icmp eq i32 %0, 0, !dbg !12870
  br i1 %2, label %50, label %3, !dbg !12872

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12873
  %5 = icmp eq i32 %4, 49152, !dbg !12876
  br i1 %5, label %6, label %15, !dbg !12877

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12867, metadata !DIExpression()), !dbg !12869
  %7 = add i32 %0, -64000001, !dbg !12878
  %8 = icmp ult i32 %7, 26000000, !dbg !12878
  br i1 %8, label %15, label %9, !dbg !12878

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !12881
  %11 = select i1 %10, i32 0, i32 3, !dbg !12883
  call void @llvm.dbg.value(metadata i32 %11, metadata !12867, metadata !DIExpression()), !dbg !12869
  %12 = add i32 %0, -30000001, !dbg !12884
  %13 = icmp ult i32 %12, 60000000, !dbg !12884
  %14 = select i1 %13, i32 1, i32 %11, !dbg !12884
  call void @llvm.dbg.value(metadata i32 %14, metadata !12867, metadata !DIExpression()), !dbg !12869
  br label %15, !dbg !12884

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !12869
  call void @llvm.dbg.value(metadata i32 %16, metadata !12867, metadata !DIExpression()), !dbg !12869
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12887
  %18 = icmp eq i32 %17, 32768, !dbg !12889
  br i1 %18, label %19, label %27, !dbg !12890

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !12891
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !12894
  br i1 %22, label %27, label %23, !dbg !12894

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !12895
  %25 = and i1 %24, %21, !dbg !12898
  %26 = select i1 %25, i32 1, i32 %16, !dbg !12898
  call void @llvm.dbg.value(metadata i32 %26, metadata !12867, metadata !DIExpression()), !dbg !12869
  br label %27, !dbg !12898

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !12899
  call void @llvm.dbg.value(metadata i32 %28, metadata !12867, metadata !DIExpression()), !dbg !12869
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12900
  %30 = icmp eq i32 %29, 16384, !dbg !12902
  br i1 %30, label %31, label %39, !dbg !12903

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !12904
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !12907
  br i1 %34, label %39, label %35, !dbg !12907

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !12908
  %37 = select i1 %36, i1 %33, i1 false, !dbg !12911
  %38 = select i1 %37, i32 1, i32 %28, !dbg !12911
  call void @llvm.dbg.value(metadata i32 %38, metadata !12867, metadata !DIExpression()), !dbg !12869
  br label %39, !dbg !12911

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !12899
  call void @llvm.dbg.value(metadata i32 %40, metadata !12867, metadata !DIExpression()), !dbg !12869
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #26, !dbg !12912
  call void @llvm.dbg.value(metadata i32 2, metadata !12865, metadata !DIExpression()), !dbg !12869
  br label %41, !dbg !12913

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !12899
  call void @llvm.dbg.value(metadata i32 %42, metadata !12865, metadata !DIExpression()), !dbg !12869
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !12914
  call void @llvm.dbg.value(metadata i32 %43, metadata !12866, metadata !DIExpression()), !dbg !12869
  %44 = add nsw i32 %42, -1, !dbg !12916
  call void @llvm.dbg.value(metadata i32 %44, metadata !12865, metadata !DIExpression()), !dbg !12869
  %45 = icmp ne i32 %43, %40, !dbg !12917
  %46 = icmp ne i32 %44, 0, !dbg !12918
  %47 = select i1 %45, i1 %46, i1 false, !dbg !12918
  br i1 %47, label %41, label %48, !dbg !12919, !llvm.loop !12920

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !12922
  call void @llvm.dbg.value(metadata i32 %51, metadata !12868, metadata !DIExpression()), !dbg !12869
  ret i32 %51, !dbg !12923
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12924 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12926
  %2 = and i32 %1, 49152, !dbg !12926
  ret i32 %2, !dbg !12927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12928 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12930, metadata !DIExpression()), !dbg !12931
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12932
  %3 = and i32 %2, -8, !dbg !12932
  %4 = or i32 %3, %0, !dbg !12932
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12932
  ret void, !dbg !12933
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12934 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12935
  %2 = and i32 %1, 7, !dbg !12935
  ret i32 %2, !dbg !12936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12937 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12955, metadata !DIExpression()), !dbg !12959
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12956, metadata !DIExpression()), !dbg !12959
  call void @llvm.dbg.value(metadata i32 0, metadata !12957, metadata !DIExpression()), !dbg !12959
  call void @llvm.dbg.value(metadata i32 0, metadata !12958, metadata !DIExpression()), !dbg !12959
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !12960
  %4 = icmp eq i32 %3, 0, !dbg !12962
  br i1 %4, label %5, label %21, !dbg !12963

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !12964
  call void @llvm.dbg.value(metadata i32 %6, metadata !12958, metadata !DIExpression()), !dbg !12959
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.98() #26, !dbg !12966
  %8 = icmp eq i32 %7, 1, !dbg !12968
  br i1 %8, label %13, label %9, !dbg !12969

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.99() #26, !dbg !12970
  br label %10, !dbg !12972

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.98() #26, !dbg !12973
  %12 = icmp eq i32 %11, 1, !dbg !12974
  br i1 %12, label %13, label %10, !dbg !12972, !llvm.loop !12975

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12977
  %15 = load i32, i32* %14, align 4, !dbg !12977
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12978
  %17 = load i32, i32* %16, align 4, !dbg !12978
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12979
  %19 = load i32, i32* %18, align 4, !dbg !12979
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.100(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !12980
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !12981
  call void @llvm.dbg.value(metadata i32 %20, metadata !12957, metadata !DIExpression()), !dbg !12959
  br label %21, !dbg !12982

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12983
  call void @llvm.dbg.value(metadata i32 %22, metadata !12957, metadata !DIExpression()), !dbg !12959
  ret i32 %22, !dbg !12984
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12985 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12989, metadata !DIExpression()), !dbg !12990
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.102() #26, !dbg !12991
  %2 = icmp ne i32 %1, 0, !dbg !12993
  call void @llvm.dbg.value(metadata i1 %2, metadata !12989, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12990
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !12994
  %4 = icmp ne i32 %3, 0, !dbg !12996
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12997
  %6 = zext i1 %5 to i32, !dbg !12997
  call void @llvm.dbg.value(metadata i32 %6, metadata !12989, metadata !DIExpression()), !dbg !12990
  ret i32 %6, !dbg !12998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !12999 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13003, metadata !DIExpression()), !dbg !13006
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13004, metadata !DIExpression()), !dbg !13006
  call void @llvm.dbg.value(metadata i32 0, metadata !13005, metadata !DIExpression()), !dbg !13006
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13007
  %4 = load i32, i32* %3, align 4, !dbg !13007
  %5 = and i32 %4, 63, !dbg !13008
  %6 = udiv i32 %0, %5, !dbg !13009
  call void @llvm.dbg.value(metadata i32 %6, metadata !13005, metadata !DIExpression()), !dbg !13006
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13010
  %8 = load i32, i32* %7, align 4, !dbg !13010
  %9 = and i32 %8, 511, !dbg !13011
  %10 = mul i32 %9, %6, !dbg !13012
  call void @llvm.dbg.value(metadata i32 %10, metadata !13005, metadata !DIExpression()), !dbg !13006
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13013
  %12 = load i32, i32* %11, align 4, !dbg !13013
  %13 = lshr i32 %12, 15, !dbg !13014
  %14 = and i32 %13, 131070, !dbg !13014
  %15 = add nuw nsw i32 %14, 2, !dbg !13014
  %16 = udiv i32 %10, %15, !dbg !13015
  call void @llvm.dbg.value(metadata i32 %16, metadata !13005, metadata !DIExpression()), !dbg !13006
  ret i32 %16, !dbg !13016
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.98() unnamed_addr #16 !dbg !13017 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13018
  %2 = lshr i32 %1, 1, !dbg !13019
  %3 = and i32 %2, 1, !dbg !13019
  ret i32 %3, !dbg !13020
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.99() unnamed_addr #15 !dbg !13021 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13022
  %2 = or i32 %1, 1, !dbg !13022
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13022
  ret void, !dbg !13023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.100(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !13024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13026, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i32 %1, metadata !13027, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i32 %2, metadata !13028, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i32 %3, metadata !13029, metadata !DIExpression()), !dbg !13030
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13031
  %6 = and i32 %5, -4227072, !dbg !13031
  %7 = or i32 %1, %0, !dbg !13031
  %8 = shl i32 %2, 6, !dbg !13031
  %9 = or i32 %7, %8, !dbg !13031
  %10 = or i32 %9, %6, !dbg !13031
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13031
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13032
  %12 = and i32 %11, -196609, !dbg !13032
  %13 = or i32 %12, %3, !dbg !13032
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13032
  ret void, !dbg !13033
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !13034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13038, metadata !DIExpression()), !dbg !13042
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13039, metadata !DIExpression()), !dbg !13042
  call void @llvm.dbg.value(metadata i32 0, metadata !13040, metadata !DIExpression()), !dbg !13042
  call void @llvm.dbg.value(metadata i32 0, metadata !13041, metadata !DIExpression()), !dbg !13042
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13043
  %4 = load i32, i32* %3, align 4, !dbg !13043
  %5 = lshr i32 %4, 4, !dbg !13043
  %6 = and i32 %5, 15, !dbg !13043
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13043
  %8 = load i8, i8* %7, align 1, !dbg !13043
  %9 = zext i8 %8 to i32, !dbg !13043
  %10 = lshr i32 %0, %9, !dbg !13043
  call void @llvm.dbg.value(metadata i32 %10, metadata !13041, metadata !DIExpression()), !dbg !13042
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13044
  %12 = icmp ult i32 %11, %10, !dbg !13046
  br i1 %12, label %13, label %16, !dbg !13047

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13048
  call void @llvm.dbg.value(metadata i32 %14, metadata !13040, metadata !DIExpression()), !dbg !13042
  %15 = icmp eq i32 %14, 0, !dbg !13050
  br i1 %15, label %16, label %30, !dbg !13052

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.101() #26, !dbg !13053
  br label %17, !dbg !13055

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.102() #26, !dbg !13056
  %19 = icmp eq i32 %18, 1, !dbg !13057
  br i1 %19, label %20, label %17, !dbg !13055, !llvm.loop !13058

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13060
  tail call fastcc void @LL_RCC_SetAHBPrescaler.103(i32 noundef %21) #26, !dbg !13061
  tail call fastcc void @LL_RCC_SetSysClkSource.104() #26, !dbg !13062
  br label %22, !dbg !13063

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.105() #26, !dbg !13064
  %24 = icmp eq i32 %23, 8, !dbg !13065
  br i1 %24, label %25, label %22, !dbg !13063, !llvm.loop !13066

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13068
  %27 = load i32, i32* %26, align 4, !dbg !13068
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.106(i32 noundef %27) #26, !dbg !13069
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13070
  %29 = load i32, i32* %28, align 4, !dbg !13070
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.107(i32 noundef %29) #26, !dbg !13071
  br label %30, !dbg !13072

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13073
  %33 = icmp ugt i32 %32, %10, !dbg !13075
  br i1 %33, label %34, label %36, !dbg !13076

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13077
  call void @llvm.dbg.value(metadata i32 %35, metadata !13040, metadata !DIExpression()), !dbg !13042
  br label %36, !dbg !13079

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13042
  call void @llvm.dbg.value(metadata i32 %37, metadata !13040, metadata !DIExpression()), !dbg !13042
  %38 = icmp eq i32 %37, 0, !dbg !13080
  br i1 %38, label %39, label %40, !dbg !13082

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !13083
  br label %40, !dbg !13085

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.101() unnamed_addr #15 !dbg !13087 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13088
  %2 = or i32 %1, 16777216, !dbg !13088
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13088
  ret void, !dbg !13089
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.102() unnamed_addr #16 !dbg !13090 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13091
  %2 = lshr i32 %1, 25, !dbg !13092
  %3 = and i32 %2, 1, !dbg !13092
  ret i32 %3, !dbg !13093
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.103(i32 noundef %0) unnamed_addr #15 !dbg !13094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13096, metadata !DIExpression()), !dbg !13097
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13098
  %3 = and i32 %2, -241, !dbg !13098
  %4 = or i32 %3, %0, !dbg !13098
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13098
  ret void, !dbg !13099
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.104() unnamed_addr #15 !dbg !13100 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13102, metadata !DIExpression()), !dbg !13103
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13104
  %2 = and i32 %1, -4, !dbg !13104
  %3 = or i32 %2, 2, !dbg !13104
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13104
  ret void, !dbg !13105
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.105() unnamed_addr #16 !dbg !13106 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13107
  %2 = and i32 %1, 12, !dbg !13107
  ret i32 %2, !dbg !13108
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.106(i32 noundef %0) unnamed_addr #15 !dbg !13109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13111, metadata !DIExpression()), !dbg !13112
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13113
  %3 = and i32 %2, -7169, !dbg !13113
  %4 = or i32 %3, %0, !dbg !13113
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13113
  ret void, !dbg !13114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.107(i32 noundef %0) unnamed_addr #15 !dbg !13115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13117, metadata !DIExpression()), !dbg !13118
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13119
  %3 = and i32 %2, -57345, !dbg !13119
  %4 = or i32 %3, %0, !dbg !13119
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13119
  ret void, !dbg !13120
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !13121 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13122
  %2 = lshr i32 %1, 27, !dbg !13123
  %3 = and i32 %2, 1, !dbg !13123
  ret i32 %3, !dbg !13124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !13125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13129, metadata !DIExpression()), !dbg !13135
  call void @llvm.dbg.value(metadata i32 %1, metadata !13130, metadata !DIExpression()), !dbg !13135
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13131, metadata !DIExpression()), !dbg !13135
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13132, metadata !DIExpression()), !dbg !13135
  call void @llvm.dbg.value(metadata i32 0, metadata !13133, metadata !DIExpression()), !dbg !13135
  call void @llvm.dbg.value(metadata i32 0, metadata !13134, metadata !DIExpression()), !dbg !13135
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13136
  %6 = icmp eq i32 %5, 0, !dbg !13138
  br i1 %6, label %7, label %27, !dbg !13139

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !13140
  call void @llvm.dbg.value(metadata i32 %8, metadata !13134, metadata !DIExpression()), !dbg !13135
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.108() #26, !dbg !13142
  %10 = icmp eq i32 %9, 1, !dbg !13144
  br i1 %10, label %19, label %11, !dbg !13145

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13146
  br i1 %12, label %13, label %14, !dbg !13149

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !13150
  br label %15, !dbg !13152

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.109() #26, !dbg !13153
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.110() #26, !dbg !13155
  br label %16, !dbg !13156

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.108() #26, !dbg !13157
  %18 = icmp eq i32 %17, 1, !dbg !13158
  br i1 %18, label %19, label %16, !dbg !13156, !llvm.loop !13159

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13161
  %21 = load i32, i32* %20, align 4, !dbg !13161
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13162
  %23 = load i32, i32* %22, align 4, !dbg !13162
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13163
  %25 = load i32, i32* %24, align 4, !dbg !13163
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.100(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !13164
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !13165
  call void @llvm.dbg.value(metadata i32 %26, metadata !13133, metadata !DIExpression()), !dbg !13135
  br label %27, !dbg !13166

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13167
  call void @llvm.dbg.value(metadata i32 %28, metadata !13133, metadata !DIExpression()), !dbg !13135
  ret i32 %28, !dbg !13168
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.108() unnamed_addr #16 !dbg !13169 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13170
  %2 = lshr i32 %1, 17, !dbg !13171
  %3 = and i32 %2, 1, !dbg !13171
  ret i32 %3, !dbg !13172
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !13173 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13174
  %2 = or i32 %1, 262144, !dbg !13174
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13174
  ret void, !dbg !13175
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.109() unnamed_addr #15 !dbg !13176 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13177
  %2 = and i32 %1, -262145, !dbg !13177
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13177
  ret void, !dbg !13178
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.110() unnamed_addr #15 !dbg !13179 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13180
  %2 = or i32 %1, 65536, !dbg !13180
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13180
  ret void, !dbg !13181
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !13182 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13185, metadata !DIExpression()), !dbg !13201
  call void @llvm.dbg.value(metadata i32 undef, metadata !13185, metadata !DIExpression()), !dbg !13201
  call void @llvm.dbg.value(metadata i32 undef, metadata !13185, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13201
  ret void, !dbg !13202
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13203 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13207, metadata !DIExpression()), !dbg !13209
  %2 = icmp eq i8* %0, null, !dbg !13210
  br i1 %2, label %29, label %3, !dbg !13212

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13213
  %5 = icmp eq i8 %4, 0, !dbg !13214
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13215
  br i1 %6, label %29, label %8, !dbg !13215

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13208, metadata !DIExpression()), !dbg !13209
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13216

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13208, metadata !DIExpression()), !dbg !13209
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !13218
  br i1 %10, label %11, label %15, !dbg !13223

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13224
  %13 = load i8*, i8** %12, align 4, !dbg !13224
  %14 = icmp eq i8* %13, %0, !dbg !13225
  br i1 %14, label %29, label %15, !dbg !13226

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13227
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13208, metadata !DIExpression()), !dbg !13209
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13228
  br i1 %17, label %7, label %8, !dbg !13229, !llvm.loop !13230

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13208, metadata !DIExpression()), !dbg !13209
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !13232
  br i1 %20, label %21, label %26, !dbg !13236

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13237
  %23 = load i8*, i8** %22, align 4, !dbg !13237
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13238
  %25 = icmp eq i32 %24, 0, !dbg !13239
  br i1 %25, label %29, label %26, !dbg !13240

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13241
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13208, metadata !DIExpression()), !dbg !13209
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13242
  br i1 %28, label %29, label %18, !dbg !13216, !llvm.loop !13243

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13209
  ret %struct.device* %30, !dbg !13245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !13246 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13250, metadata !DIExpression()), !dbg !13251
  %2 = icmp eq %struct.device* %0, null, !dbg !13252
  br i1 %2, label %14, label %3, !dbg !13254

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13255
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13255
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13256
  %7 = load i8, i8* %6, align 1, !dbg !13256
  %8 = and i8 %7, 1, !dbg !13256
  %9 = icmp eq i8 %8, 0, !dbg !13256
  br i1 %9, label %14, label %10, !dbg !13257

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13258
  %12 = load i8, i8* %11, align 1, !dbg !13258
  %13 = icmp eq i8 %12, 0, !dbg !13259
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13251
  ret i1 %15, !dbg !13260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !13261 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13266, metadata !DIExpression()), !dbg !13267
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13268
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13269
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13270 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13278, metadata !DIExpression()), !dbg !13283
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13279, metadata !DIExpression()), !dbg !13283
  call void @llvm.dbg.value(metadata i8* %2, metadata !13280, metadata !DIExpression()), !dbg !13283
  %5 = bitcast i32* %4 to i8*, !dbg !13284
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13284
  call void @llvm.dbg.value(metadata i32 0, metadata !13281, metadata !DIExpression()), !dbg !13283
  store i32 0, i32* %4, align 4, !dbg !13285
  call void @llvm.dbg.value(metadata i32* %4, metadata !13281, metadata !DIExpression(DW_OP_deref)), !dbg !13283
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13286
  call void @llvm.dbg.value(metadata i16* %6, metadata !13282, metadata !DIExpression()), !dbg !13283
  %7 = load i32, i32* %4, align 4, !dbg !13287
  call void @llvm.dbg.value(metadata i32 %7, metadata !13281, metadata !DIExpression()), !dbg !13283
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13288
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13289
  ret i32 %8, !dbg !13290
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13291 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13295, metadata !DIExpression()), !dbg !13301
  call void @llvm.dbg.value(metadata i32* %1, metadata !13296, metadata !DIExpression()), !dbg !13301
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13302
  %4 = load i16*, i16** %3, align 4, !dbg !13302
  call void @llvm.dbg.value(metadata i16* %4, metadata !13297, metadata !DIExpression()), !dbg !13301
  %5 = icmp eq i16* %4, null, !dbg !13303
  br i1 %5, label %14, label %6, !dbg !13304

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13305
  call void @llvm.dbg.value(metadata i32 %7, metadata !13298, metadata !DIExpression()), !dbg !13305
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13306
  %9 = load i16, i16* %8, align 2, !dbg !13306
  %10 = add i16 %9, -32767, !dbg !13307
  %11 = icmp ult i16 %10, 2, !dbg !13307
  %12 = add i32 %7, 1, !dbg !13308
  call void @llvm.dbg.value(metadata i32 %12, metadata !13298, metadata !DIExpression()), !dbg !13305
  br i1 %11, label %13, label %6, !dbg !13307, !llvm.loop !13310

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13313
  br label %14, !dbg !13314

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13315
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13316 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13320, metadata !DIExpression()), !dbg !13331
  call void @llvm.dbg.value(metadata i32 %1, metadata !13321, metadata !DIExpression()), !dbg !13331
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13322, metadata !DIExpression()), !dbg !13331
  call void @llvm.dbg.value(metadata i8* %3, metadata !13323, metadata !DIExpression()), !dbg !13331
  call void @llvm.dbg.value(metadata i32 0, metadata !13324, metadata !DIExpression()), !dbg !13332
  %5 = icmp eq i32 %1, 0, !dbg !13333
  br i1 %5, label %16, label %8, !dbg !13334

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13324, metadata !DIExpression()), !dbg !13332
  %7 = icmp eq i32 %15, %1, !dbg !13333
  br i1 %7, label %16, label %8, !dbg !13334, !llvm.loop !13335

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13324, metadata !DIExpression()), !dbg !13332
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13337
  %11 = load i16, i16* %10, align 2, !dbg !13337
  call void @llvm.dbg.value(metadata i16 %11, metadata !13326, metadata !DIExpression()), !dbg !13338
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !13339
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13329, metadata !DIExpression()), !dbg !13338
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13340
  call void @llvm.dbg.value(metadata i32 %13, metadata !13330, metadata !DIExpression()), !dbg !13338
  %14 = icmp slt i32 %13, 0, !dbg !13341
  %15 = add nuw i32 %9, 1, !dbg !13343
  call void @llvm.dbg.value(metadata i32 %15, metadata !13324, metadata !DIExpression()), !dbg !13332
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !13345 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13349, metadata !DIExpression()), !dbg !13352
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13350, metadata !DIExpression()), !dbg !13352
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13351, metadata !DIExpression()), !dbg !13352
  %2 = sext i16 %0 to i32, !dbg !13353
  %3 = icmp slt i16 %0, 1, !dbg !13355
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13356
  %6 = add nsw i32 %2, -1, !dbg !13356
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13356
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13356
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13350, metadata !DIExpression()), !dbg !13352
  ret %struct.device* %8, !dbg !13357
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13358 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13360, metadata !DIExpression()), !dbg !13365
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13361, metadata !DIExpression()), !dbg !13365
  call void @llvm.dbg.value(metadata i8* %2, metadata !13362, metadata !DIExpression()), !dbg !13365
  %5 = bitcast i32* %4 to i8*, !dbg !13366
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13366
  call void @llvm.dbg.value(metadata i32 0, metadata !13363, metadata !DIExpression()), !dbg !13365
  store i32 0, i32* %4, align 4, !dbg !13367
  call void @llvm.dbg.value(metadata i32* %4, metadata !13363, metadata !DIExpression(DW_OP_deref)), !dbg !13365
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13368
  call void @llvm.dbg.value(metadata i16* %6, metadata !13364, metadata !DIExpression()), !dbg !13365
  %7 = load i32, i32* %4, align 4, !dbg !13369
  call void @llvm.dbg.value(metadata i32 %7, metadata !13363, metadata !DIExpression()), !dbg !13365
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13370
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13371
  ret i32 %8, !dbg !13372
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13373 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13375, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i32* %1, metadata !13376, metadata !DIExpression()), !dbg !13380
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13381
  %4 = load i16*, i16** %3, align 4, !dbg !13381
  call void @llvm.dbg.value(metadata i16* %4, metadata !13377, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i32 0, metadata !13378, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i32 0, metadata !13379, metadata !DIExpression()), !dbg !13380
  %5 = icmp eq i16* %4, null, !dbg !13382
  br i1 %5, label %22, label %6, !dbg !13384

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13378, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i16* %8, metadata !13377, metadata !DIExpression()), !dbg !13380
  %9 = load i16, i16* %8, align 2, !dbg !13385
  %10 = icmp eq i16 %9, -32768, !dbg !13389
  call void @llvm.dbg.value(metadata i32 undef, metadata !13378, metadata !DIExpression()), !dbg !13380
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13390
  call void @llvm.dbg.value(metadata i16* %11, metadata !13377, metadata !DIExpression()), !dbg !13380
  %12 = zext i1 %10 to i32, !dbg !13391
  %13 = add i32 %7, %12, !dbg !13391
  call void @llvm.dbg.value(metadata i32 %13, metadata !13378, metadata !DIExpression()), !dbg !13380
  %14 = icmp eq i32 %13, 2, !dbg !13392
  br i1 %14, label %15, label %6, !dbg !13393

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13380
  call void @llvm.dbg.value(metadata i32 %16, metadata !13379, metadata !DIExpression()), !dbg !13380
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13394
  %18 = load i16, i16* %17, align 2, !dbg !13394
  %19 = icmp eq i16 %18, 32767, !dbg !13395
  %20 = add i32 %16, 1, !dbg !13396
  call void @llvm.dbg.value(metadata i32 %20, metadata !13379, metadata !DIExpression()), !dbg !13380
  br i1 %19, label %21, label %15, !dbg !13398, !llvm.loop !13399

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13401
  br label %22, !dbg !13402

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13403
  call void @llvm.dbg.value(metadata i16* %23, metadata !13377, metadata !DIExpression()), !dbg !13380
  ret i16* %23, !dbg !13404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !13405 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13406
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13407
  ret i32* %2, !dbg !13408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !13409 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13557, metadata !DIExpression()), !dbg !13560
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13558, metadata !DIExpression()), !dbg !13560
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13559, metadata !DIExpression()), !dbg !13560
  ret void, !dbg !13561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13566, metadata !DIExpression()), !dbg !13568
  call void @llvm.dbg.value(metadata i32 %1, metadata !13567, metadata !DIExpression()), !dbg !13568
  ret void, !dbg !13569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13570 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13574, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata i32 %1, metadata !13575, metadata !DIExpression()), !dbg !13576
  ret void, !dbg !13577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13582, metadata !DIExpression()), !dbg !13584
  call void @llvm.dbg.value(metadata i8* %1, metadata !13583, metadata !DIExpression()), !dbg !13584
  ret i32 -134, !dbg !13585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13590, metadata !DIExpression()), !dbg !13592
  call void @llvm.dbg.value(metadata i8* %1, metadata !13591, metadata !DIExpression()), !dbg !13592
  ret i32 -134, !dbg !13593
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13594 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13597, metadata !DIExpression()), !dbg !13598
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13599, !srcloc !13605
  call void @llvm.dbg.value(metadata i32 undef, metadata !13602, metadata !DIExpression()) #24, !dbg !13606
  call void @llvm.dbg.value(metadata i32 undef, metadata !13603, metadata !DIExpression()) #24, !dbg !13606
  br label %3, !dbg !13607

3:                                                ; preds = %3, %1
  br label %3, !dbg !13608, !llvm.loop !13611
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13618, metadata !DIExpression()), !dbg !13620
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13619, metadata !DIExpression()), !dbg !13620
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13621
  unreachable, !dbg !13621
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13624, metadata !DIExpression()), !dbg !13625
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13626
  unreachable, !dbg !13626
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13627 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13629, metadata !DIExpression()), !dbg !13633
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13630, metadata !DIExpression()), !dbg !13633
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13634, !srcloc !13605
  call void @llvm.dbg.value(metadata i32 undef, metadata !13602, metadata !DIExpression()) #24, !dbg !13636
  call void @llvm.dbg.value(metadata i32 undef, metadata !13603, metadata !DIExpression()) #24, !dbg !13636
  call void @llvm.dbg.value(metadata i32 undef, metadata !13631, metadata !DIExpression()), !dbg !13633
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13632, metadata !DIExpression()), !dbg !13633
  %4 = icmp eq %struct.__esf* %1, null, !dbg !13637
  br i1 %4, label %6, label %5, !dbg !13639

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !13640
  br label %7, !dbg !13641

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !13640
  br label %7, !dbg !13644

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !13634
  call void @llvm.dbg.value(metadata i32 %8, metadata !13602, metadata !DIExpression()) #24, !dbg !13636
  call void @llvm.dbg.value(metadata i32 %8, metadata !13631, metadata !DIExpression()), !dbg !13633
  %9 = tail call fastcc %struct.k_thread* @k_current_get.119() #27, !dbg !13646
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13632, metadata !DIExpression()), !dbg !13633
  call void @llvm.dbg.value(metadata i32 undef, metadata !13647, metadata !DIExpression()) #24, !dbg !13650
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !13652, !srcloc !13653
  tail call fastcc void @k_thread_abort.120(%struct.k_thread* noundef %9) #26, !dbg !13654
  ret void, !dbg !13657
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.119() unnamed_addr #9 !dbg !13658 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.121() #27, !dbg !13662
  ret %struct.k_thread* %1, !dbg !13663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.120(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13664 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13668, metadata !DIExpression()), !dbg !13669
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13670, !srcloc !13672
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13673
  ret void, !dbg !13674
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.121() unnamed_addr #9 !dbg !13675 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13676, !srcloc !13678
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13679
  ret %struct.k_thread* %1, !dbg !13680
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13681 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13685, metadata !DIExpression()), !dbg !13688
  call void @llvm.dbg.value(metadata i32 %1, metadata !13686, metadata !DIExpression()), !dbg !13688
  call void @llvm.dbg.value(metadata i32 %2, metadata !13687, metadata !DIExpression()), !dbg !13688
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13689
  ret void, !dbg !13690
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13691 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13695, metadata !DIExpression()), !dbg !13698
  call void @llvm.dbg.value(metadata i8* %1, metadata !13696, metadata !DIExpression()), !dbg !13698
  call void @llvm.dbg.value(metadata i32 %2, metadata !13697, metadata !DIExpression()), !dbg !13698
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13699
  ret void, !dbg !13700
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13701 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !13702
  ret void, !dbg !13703
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13704 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13706, metadata !DIExpression()), !dbg !13707
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !13708
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13709
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13710
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13711
  %4 = trunc i32 %0 to i8, !dbg !13712
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13713
  store i8 %4, i8* %5, align 4, !dbg !13714
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13715
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !13716
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13717
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13718
  store i8* %8, i8** %9, align 4, !dbg !13719
  ret void, !dbg !13720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13723, metadata !DIExpression()), !dbg !13729
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13730
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13724, metadata !DIExpression()), !dbg !13729
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13731
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13725, metadata !DIExpression()), !dbg !13729
  call void @llvm.dbg.value(metadata i8* null, metadata !13728, metadata !DIExpression()), !dbg !13729
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13732
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13733
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !13734
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !13735
  ret void, !dbg !13736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13737 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13741, metadata !DIExpression()), !dbg !13742
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13743
  ret i8* %2, !dbg !13744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13745 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13750, metadata !DIExpression()), !dbg !13751
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13752
  %3 = load i8, i8* %2, align 1, !dbg !13753
  %4 = and i8 %3, -5, !dbg !13753
  store i8 %4, i8* %2, align 1, !dbg !13753
  ret void, !dbg !13754
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !13755 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !13758
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13759
  %3 = ptrtoint i8* %2 to i32, !dbg !13768
  %4 = add i32 %3, 2048, !dbg !13769
  call void @llvm.dbg.value(metadata i32 %4, metadata !13763, metadata !DIExpression()) #24, !dbg !13770
  call void @llvm.dbg.value(metadata i32 %4, metadata !13771, metadata !DIExpression()) #24, !dbg !13774
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !13776, !srcloc !13777
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13778
  %6 = or i32 %5, 512, !dbg !13778
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13778
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -2, i32 noundef 255) #25, !dbg !13779
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -5, i32 noundef 0) #25, !dbg !13782
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -12, i32 noundef 0) #25, !dbg !13783
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -11, i32 noundef 0) #25, !dbg !13784
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -10, i32 noundef 0) #25, !dbg !13785
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -4, i32 noundef 0) #25, !dbg !13786
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13787
  %8 = or i32 %7, 458752, !dbg !13787
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13787
  tail call void @z_arm_fault_init() #25, !dbg !13788
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13789
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13790
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13793
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13794
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13795
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13796
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !13796
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13757, metadata !DIExpression()), !dbg !13797
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !13798
  call void @z_device_state_init() #25, !dbg !13799
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !13800
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !13801
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !13802
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !13803
  unreachable, !dbg !13803
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2200, metadata !DIExpression()), !dbg !13804
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13805
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13805
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2201, metadata !DIExpression()), !dbg !13804
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2201, metadata !DIExpression()), !dbg !13804
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13806
  br i1 %7, label %8, label %35, !dbg !13807

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2201, metadata !DIExpression()), !dbg !13804
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13808
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13808
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2211, metadata !DIExpression()), !dbg !13809
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13810
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13810
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13811
  call void @llvm.dbg.value(metadata i32 %14, metadata !2215, metadata !DIExpression()), !dbg !13809
  %15 = icmp eq %struct.device* %11, null, !dbg !13812
  br i1 %15, label %32, label %16, !dbg !13814

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13815
  br i1 %17, label %26, label %18, !dbg !13818

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13819
  call void @llvm.dbg.value(metadata i32 %19, metadata !2215, metadata !DIExpression()), !dbg !13809
  %20 = icmp ult i32 %19, 255, !dbg !13821
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13821
  call void @llvm.dbg.value(metadata i32 %21, metadata !2215, metadata !DIExpression()), !dbg !13809
  %22 = trunc i32 %21 to i8, !dbg !13822
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13823
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13823
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13824
  store i8 %22, i8* %25, align 1, !dbg !13825
  br label %26, !dbg !13826

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13827
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13827
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13828
  %30 = load i8, i8* %29, align 1, !dbg !13829
  %31 = or i8 %30, 1, !dbg !13829
  store i8 %31, i8* %29, align 1, !dbg !13829
  br label %32, !dbg !13830

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13831
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2201, metadata !DIExpression()), !dbg !13804
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13806
  br i1 %34, label %8, label %35, !dbg !13807, !llvm.loop !13832

35:                                               ; preds = %32, %1
  ret void, !dbg !13834
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.128(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13837, metadata !DIExpression()), !dbg !13839
  call void @llvm.dbg.value(metadata i32 %1, metadata !13838, metadata !DIExpression()), !dbg !13839
  %3 = trunc i32 %1 to i8, !dbg !13840
  %4 = shl i8 %3, 4, !dbg !13840
  %5 = and i32 %0, 15, !dbg !13843
  %6 = add nsw i32 %5, -4, !dbg !13844
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13845
  store volatile i8 %4, i8* %7, align 1, !dbg !13846
  ret void, !dbg !13847
}

; Function Attrs: optsize
declare !dbg !13848 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !13849 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13852, metadata !DIExpression()), !dbg !13853
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13854
  store i8 1, i8* %2, align 1, !dbg !13855
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13856
  store i8 1, i8* %3, align 4, !dbg !13857
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13858
  store i32 0, i32* %4, align 4, !dbg !13859
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13860
  store i32 0, i32* %5, align 4, !dbg !13861
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13862
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13863
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13864
  ret void, !dbg !13865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13866 {
  tail call void @z_sched_init() #25, !dbg !13871
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13872
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0)) #25, !dbg !13873
  call void @llvm.dbg.value(metadata i8* %1, metadata !13870, metadata !DIExpression()), !dbg !13874
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !13875
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13876
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !13877
  ret i8* %1, !dbg !13878
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !13879 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13883, metadata !DIExpression()), !dbg !13884
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13885
  unreachable, !dbg !13886
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13887 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13889, metadata !DIExpression()), !dbg !13892
  call void @llvm.dbg.value(metadata i8* %1, metadata !13890, metadata !DIExpression()), !dbg !13892
  call void @llvm.dbg.value(metadata i8* %2, metadata !13891, metadata !DIExpression()), !dbg !13892
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13893
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !13894
  tail call void @boot_banner() #25, !dbg !13895
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !13896
  tail call void @z_init_static_threads() #25, !dbg !13897
  tail call void @main() #25, !dbg !13898
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13899
  %5 = and i8 %4, -2, !dbg !13899
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13899
  ret void, !dbg !13900
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13901 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13911, metadata !DIExpression()), !dbg !13913
  call void @llvm.dbg.value(metadata i8* %1, metadata !13912, metadata !DIExpression()), !dbg !13913
  ret void, !dbg !13914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13915 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13917, metadata !DIExpression()), !dbg !13919
  call void @llvm.dbg.value(metadata i8* %1, metadata !13918, metadata !DIExpression()), !dbg !13919
  ret void, !dbg !13920
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13921 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13922, !srcloc !13929
  call void @llvm.dbg.value(metadata i32 %1, metadata !13925, metadata !DIExpression()) #24, !dbg !13930
  %2 = icmp ne i32 %1, 0, !dbg !13931
  ret i1 %2, !dbg !13932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !13933 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13934
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13935
  %3 = load i8, i8* %2, align 4, !dbg !13936
  %4 = or i8 %3, 1, !dbg !13936
  store i8 %4, i8* %2, align 4, !dbg !13936
  ret void, !dbg !13937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !13938 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13939
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13940
  %3 = load i8, i8* %2, align 4, !dbg !13941
  %4 = and i8 %3, -2, !dbg !13941
  store i8 %4, i8* %2, align 4, !dbg !13941
  ret void, !dbg !13942
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13943 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13944
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13945
  %3 = load i8, i8* %2, align 4, !dbg !13945
  %4 = and i8 %3, 1, !dbg !13946
  %5 = icmp ne i8 %4, 0, !dbg !13947
  ret i1 %5, !dbg !13948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13949 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13953, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i8* %1, metadata !13954, metadata !DIExpression()), !dbg !13955
  ret i32 -88, !dbg !13956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13957 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13961, metadata !DIExpression()), !dbg !13962
  ret i8* null, !dbg !13963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !13964 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13968, metadata !DIExpression()), !dbg !13971
  call void @llvm.dbg.value(metadata i8* %1, metadata !13969, metadata !DIExpression()), !dbg !13971
  call void @llvm.dbg.value(metadata i32 %2, metadata !13970, metadata !DIExpression()), !dbg !13971
  ret i32 -88, !dbg !13972
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2222 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2336, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i8* %1, metadata !2337, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i32 %2, metadata !2338, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i32 0, metadata !2339, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i8 undef, metadata !2341, metadata !DIExpression()), !dbg !13973
  %4 = icmp eq i8* %1, null, !dbg !13974
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13976
  br i1 %6, label %46, label %7, !dbg !13976

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13977
  %9 = load i8, i8* %8, align 1, !dbg !13977
  call void @llvm.dbg.value(metadata i8 %9, metadata !2341, metadata !DIExpression()), !dbg !13973
  %10 = add i32 %2, -1, !dbg !13978
  call void @llvm.dbg.value(metadata i32 %10, metadata !2338, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i8 0, metadata !2342, metadata !DIExpression()), !dbg !13979
  call void @llvm.dbg.value(metadata i8 %9, metadata !2341, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i32 0, metadata !2339, metadata !DIExpression()), !dbg !13973
  %11 = icmp eq i8 %9, 0, !dbg !13980
  br i1 %11, label %12, label %15, !dbg !13982

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13983
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13984
  store i8 0, i8* %14, align 1, !dbg !13985
  br label %46, !dbg !13986

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2342, metadata !DIExpression()), !dbg !13979
  call void @llvm.dbg.value(metadata i8 %17, metadata !2341, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i32 %18, metadata !2339, metadata !DIExpression()), !dbg !13973
  %19 = zext i8 %17 to i32, !dbg !13987
  %20 = zext i8 %16 to i32, !dbg !13988
  %21 = shl nuw i32 1, %20, !dbg !13988
  call void @llvm.dbg.value(metadata i32 %21, metadata !2340, metadata !DIExpression()), !dbg !13973
  %22 = and i32 %21, %19, !dbg !13990
  %23 = icmp eq i32 %22, 0, !dbg !13992
  br i1 %23, label %42, label %24, !dbg !13993

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13994
  %26 = sub i32 %10, %18, !dbg !13995
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13996
  %28 = load i8*, i8** %27, align 4, !dbg !13996
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13997
  %30 = load i32, i32* %29, align 4, !dbg !13997
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !13998
  %32 = add i32 %31, %18, !dbg !13999
  call void @llvm.dbg.value(metadata i32 %32, metadata !2339, metadata !DIExpression()), !dbg !13973
  %33 = trunc i32 %21 to i8, !dbg !14000
  %34 = xor i8 %33, -1, !dbg !14000
  %35 = and i8 %17, %34, !dbg !14000
  call void @llvm.dbg.value(metadata i8 %35, metadata !2341, metadata !DIExpression()), !dbg !13973
  %36 = icmp eq i8 %35, 0, !dbg !14001
  br i1 %36, label %12, label %37, !dbg !14003

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14004
  %39 = sub i32 %10, %32, !dbg !14006
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !14007
  %41 = add i32 %40, %32, !dbg !14008
  call void @llvm.dbg.value(metadata i32 %41, metadata !2339, metadata !DIExpression()), !dbg !13973
  br label %42, !dbg !14009

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13973
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13973
  call void @llvm.dbg.value(metadata i8 %44, metadata !2341, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i32 %43, metadata !2339, metadata !DIExpression()), !dbg !13973
  %45 = add i8 %16, 1, !dbg !14010
  call void @llvm.dbg.value(metadata i8 %45, metadata !2342, metadata !DIExpression()), !dbg !13979
  br label %15, !dbg !13982

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.132, i32 0, i32 0), %3 ], !dbg !13973
  ret i8* %47, !dbg !14011
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14012 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14016, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i32 %1, metadata !14017, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i8* %2, metadata !14018, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i32 %3, metadata !14019, metadata !DIExpression()), !dbg !14021
  %5 = icmp ult i32 %1, %3, !dbg !14022
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14022
  call void @llvm.dbg.value(metadata i32 %6, metadata !14020, metadata !DIExpression()), !dbg !14021
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14023
  ret i32 %6, !dbg !14024
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14025 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14029, metadata !DIExpression()), !dbg !14030
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14031
  ret void, !dbg !14032
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14033 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14042, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14043, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata i32 %2, metadata !14044, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14045, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata i8* %4, metadata !14046, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata i8* %5, metadata !14047, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata i8* %6, metadata !14048, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata i32 %7, metadata !14049, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata i32 %8, metadata !14050, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata i8* undef, metadata !14051, metadata !DIExpression()), !dbg !14053
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14054
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !14055
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14056
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !14057
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !14058
  call void @llvm.dbg.value(metadata i8* %13, metadata !14052, metadata !DIExpression()), !dbg !14053
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14059
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14060
  store i8* null, i8** %14, align 4, !dbg !14061
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14062
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14062
  br i1 %16, label %20, label %17, !dbg !14064

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14065
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14065
  br label %20, !dbg !14066

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14053
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14067
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14069
  ret i8* %13, !dbg !14070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !14071 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14076, metadata !DIExpression()), !dbg !14077
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14078
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !14079
  ret void, !dbg !14080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !14081 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14086, metadata !DIExpression()), !dbg !14090
  call void @llvm.dbg.value(metadata i32 %1, metadata !14087, metadata !DIExpression()), !dbg !14090
  call void @llvm.dbg.value(metadata i32 %2, metadata !14088, metadata !DIExpression()), !dbg !14090
  call void @llvm.dbg.value(metadata i32 %3, metadata !14089, metadata !DIExpression()), !dbg !14090
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14091
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14092
  %6 = trunc i32 %3 to i8, !dbg !14093
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14094
  store i8 %6, i8* %7, align 4, !dbg !14095
  %8 = trunc i32 %2 to i8, !dbg !14096
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14097
  store i8 %8, i8* %9, align 1, !dbg !14098
  %10 = trunc i32 %1 to i8, !dbg !14099
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14100
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14100
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14100
  store i8 %10, i8* %13, align 2, !dbg !14101
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14102
  store i8 0, i8* %14, align 1, !dbg !14103
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !14104
  ret void, !dbg !14105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !14106 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14110, metadata !DIExpression()), !dbg !14118
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14111, metadata !DIExpression()), !dbg !14118
  call void @llvm.dbg.value(metadata i32 %2, metadata !14112, metadata !DIExpression()), !dbg !14118
  call void @llvm.dbg.value(metadata i32 0, metadata !14117, metadata !DIExpression()), !dbg !14118
  %4 = add i32 %2, 7, !dbg !14119
  %5 = and i32 %4, -8, !dbg !14119
  %6 = add i32 %5, 64, !dbg !14119
  call void @llvm.dbg.value(metadata i32 %6, metadata !14113, metadata !DIExpression()), !dbg !14118
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.142(%struct.z_thread_stack_element* noundef %1) #26, !dbg !14121
  call void @llvm.dbg.value(metadata i8* %7, metadata !14116, metadata !DIExpression()), !dbg !14118
  call void @llvm.dbg.value(metadata i32 %5, metadata !14114, metadata !DIExpression()), !dbg !14118
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14122
  call void @llvm.dbg.value(metadata i8* %8, metadata !14115, metadata !DIExpression()), !dbg !14118
  call void @llvm.dbg.value(metadata i32 0, metadata !14117, metadata !DIExpression()), !dbg !14118
  %9 = ptrtoint i8* %7 to i32, !dbg !14123
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14124
  store i32 %9, i32* %10, align 4, !dbg !14125
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14126
  store i32 %5, i32* %11, align 4, !dbg !14127
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14128
  store i32 0, i32* %12, align 4, !dbg !14129
  call void @llvm.dbg.value(metadata i8* %8, metadata !14115, metadata !DIExpression()), !dbg !14118
  ret i8* %8, !dbg !14130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.142(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !14131 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14135, metadata !DIExpression()), !dbg !14136
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14137
  ret i8* %2, !dbg !14138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14139 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14144, metadata !DIExpression()), !dbg !14145
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14146
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14147
  ret void, !dbg !14148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14149 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14151, metadata !DIExpression()), !dbg !14152
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14153
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !14154
  ret void, !dbg !14155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14156 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14160, metadata !DIExpression()), !dbg !14161
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14162
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14163
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14164
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14165
  ret void, !dbg !14166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14167 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14172, metadata !DIExpression()), !dbg !14173
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14174
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14175
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14176
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14177
  ret void, !dbg !14178
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14179 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14196, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14187, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14188, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata i32 %2, metadata !14189, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14190, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata i8* %4, metadata !14191, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata i8* %5, metadata !14192, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata i8* %6, metadata !14193, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata i32 %7, metadata !14194, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata i32 %8, metadata !14195, metadata !DIExpression()), !dbg !14197
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !14198
  %13 = icmp eq i64 %11, -1, !dbg !14199
  br i1 %13, label %15, label %14, !dbg !14201

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !14202
  br label %15, !dbg !14204

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14206 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14211, metadata !DIExpression()), !dbg !14212
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()), !dbg !14212
  %4 = icmp eq i64 %3, 0, !dbg !14213
  br i1 %4, label %5, label %6, !dbg !14215

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14216
  br label %7, !dbg !14218

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14219
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14221
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14222 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14226, metadata !DIExpression()), !dbg !14227
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14228, !srcloc !14230
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14231
  ret void, !dbg !14232
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14233 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14236, metadata !DIExpression()), !dbg !14237
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14235, metadata !DIExpression()), !dbg !14237
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14238
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14239
  ret void, !dbg !14240
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14241 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14243, metadata !DIExpression()), !dbg !14263
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14264

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14265
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14261, metadata !DIExpression()), !dbg !14266
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14267

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14243, metadata !DIExpression()), !dbg !14263
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14268
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14268
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14271
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14271
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14272
  %9 = load i32, i32* %8, align 4, !dbg !14272
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14273
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14273
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14274
  %13 = load i8*, i8** %12, align 4, !dbg !14274
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14275
  %15 = load i8*, i8** %14, align 4, !dbg !14275
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14276
  %17 = load i8*, i8** %16, align 4, !dbg !14276
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14277
  %19 = load i32, i32* %18, align 4, !dbg !14277
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14278
  %21 = load i32, i32* %20, align 4, !dbg !14278
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !14279
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14280
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14281
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14282
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14282
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14283
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14243, metadata !DIExpression()), !dbg !14263
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14284
  br i1 %27, label %2, label %1, !dbg !14264, !llvm.loop !14286

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !14265
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14261, metadata !DIExpression()), !dbg !14266
  br label %29, !dbg !14267

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !14288
  ret void, !dbg !14289

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14261, metadata !DIExpression()), !dbg !14266
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14290
  %33 = load i32, i32* %32, align 4, !dbg !14290
  %34 = icmp eq i32 %33, -1, !dbg !14294
  br i1 %34, label %43, label %35, !dbg !14295

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14296
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14296
  %38 = icmp sgt i32 %33, 0, !dbg !14298
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14298
  %40 = zext i32 %39 to i64, !dbg !14298
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.145(i64 noundef %40) #26, !dbg !14298
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14299
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !14299
  br label %43, !dbg !14300

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14301
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14261, metadata !DIExpression()), !dbg !14266
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14302
  br i1 %45, label %30, label %29, !dbg !14267, !llvm.loop !14304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.145(i64 noundef %0) unnamed_addr #11 !dbg !14306 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14308, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.value(metadata i64 %0, metadata !14310, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata i32 1000, metadata !14313, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata i32 10000, metadata !14314, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata i8 1, metadata !14315, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata i8 0, metadata !14316, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata i8 1, metadata !14317, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata i8 0, metadata !14318, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata i8 1, metadata !14319, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata i8 0, metadata !14320, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata i64 0, metadata !14321, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata i64 0, metadata !14321, metadata !DIExpression()), !dbg !14325
  %2 = mul i64 %0, 10, !dbg !14327
  ret i64 %2, !dbg !14333
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14334 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14336, metadata !DIExpression()), !dbg !14340
  call void @llvm.dbg.value(metadata i8* %1, metadata !14337, metadata !DIExpression()), !dbg !14340
  call void @llvm.dbg.value(metadata i8* %2, metadata !14338, metadata !DIExpression()), !dbg !14340
  call void @llvm.dbg.value(metadata i8* %3, metadata !14339, metadata !DIExpression()), !dbg !14340
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14341
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14342
  %7 = load i8, i8* %6, align 4, !dbg !14343
  %8 = or i8 %7, 4, !dbg !14343
  store i8 %8, i8* %6, align 4, !dbg !14343
  tail call void @z_thread_essential_clear() #26, !dbg !14344
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !14345
  unreachable, !dbg !14345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !14346 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14350, metadata !DIExpression()), !dbg !14351
  ret i32 -134, !dbg !14352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !14353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14357, metadata !DIExpression()), !dbg !14359
  call void @llvm.dbg.value(metadata i32 %1, metadata !14358, metadata !DIExpression()), !dbg !14359
  ret i32 -134, !dbg !14360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !14361 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14368, metadata !DIExpression()), !dbg !14370
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14369, metadata !DIExpression()), !dbg !14370
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14371
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14373
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14370
  ret i32 %6, !dbg !14374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !14375 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14379, metadata !DIExpression()), !dbg !14380
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14381
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14380
  ret i32 %3, !dbg !14383
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14384 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14386
  ret void, !dbg !14387
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14388 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14390, metadata !DIExpression()), !dbg !14393
  call void @llvm.dbg.value(metadata i8* %1, metadata !14391, metadata !DIExpression()), !dbg !14393
  call void @llvm.dbg.value(metadata i8* %2, metadata !14392, metadata !DIExpression()), !dbg !14393
  br label %4, !dbg !14394

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14395, !srcloc !14402
  call void @llvm.dbg.value(metadata i32 undef, metadata !14398, metadata !DIExpression()) #24, !dbg !14403
  call void @llvm.dbg.value(metadata i32 undef, metadata !14399, metadata !DIExpression()) #24, !dbg !14403
  tail call fastcc void @k_cpu_idle() #26, !dbg !14404
  br label %4, !dbg !14394, !llvm.loop !14405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14407 {
  tail call void @arch_cpu_idle() #25, !dbg !14408
  ret void, !dbg !14409
}

; Function Attrs: optsize
declare !dbg !14410 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 !dbg !14411 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14426, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata i32 %1, metadata !14427, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata i32 %2, metadata !14428, metadata !DIExpression()), !dbg !14429
  %4 = icmp eq i32 %2, 0, !dbg !14430
  %5 = icmp ugt i32 %1, %2, !dbg !14430
  %6 = or i1 %4, %5, !dbg !14430
  br i1 %6, label %11, label %7, !dbg !14430

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14432
  store i32 %1, i32* %8, align 4, !dbg !14433
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14434
  store i32 %2, i32* %9, align 4, !dbg !14435
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14436
  tail call fastcc void @z_waitq_init.150(%union.anon* noundef %10) #26, !dbg !14437
  br label %11, !dbg !14438

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !14429
  ret i32 %12, !dbg !14439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.150(%union.anon* noundef %0) unnamed_addr #4 !dbg !14440 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14445, metadata !DIExpression()), !dbg !14446
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14447
  tail call fastcc void @sys_dlist_init.151(%struct._dnode* noundef %2) #26, !dbg !14448
  ret void, !dbg !14449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.151(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14450 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14455, metadata !DIExpression()), !dbg !14456
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14457
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14458
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14459
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14460
  ret void, !dbg !14461
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14462 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14466, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14553, metadata !DIExpression()) #24, !dbg !14560
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14562, !srcloc !14568
  call void @llvm.dbg.value(metadata i32 undef, metadata !14565, metadata !DIExpression()) #24, !dbg !14569
  call void @llvm.dbg.value(metadata i32 undef, metadata !14566, metadata !DIExpression()) #24, !dbg !14569
  call void @llvm.dbg.value(metadata i32 undef, metadata !14559, metadata !DIExpression()) #24, !dbg !14560
  call void @llvm.dbg.value(metadata i32 undef, metadata !14467, metadata !DIExpression()), !dbg !14552
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14570
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14571
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14472, metadata !DIExpression()), !dbg !14552
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14572
  br i1 %5, label %8, label %6, !dbg !14574

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14575, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i32 0, metadata !14580, metadata !DIExpression()), !dbg !14581
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 7, i32 1, !dbg !14584
  store i32 0, i32* %7, align 4, !dbg !14585
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %4) #25, !dbg !14586
  br label %16, !dbg !14587

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14588
  %10 = load i32, i32* %9, align 4, !dbg !14588
  %11 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14590
  %12 = load i32, i32* %11, align 4, !dbg !14590
  %13 = icmp ne i32 %10, %12, !dbg !14591
  %14 = zext i1 %13 to i32, !dbg !14592
  %15 = add i32 %10, %14, !dbg !14593
  store i32 %15, i32* %9, align 4, !dbg !14593
  br label %16

16:                                               ; preds = %8, %6
  %17 = extractvalue { i32, i32 } %2, 0, !dbg !14562
  call void @llvm.dbg.value(metadata i32 %17, metadata !14565, metadata !DIExpression()) #24, !dbg !14569
  call void @llvm.dbg.value(metadata i32 %17, metadata !14559, metadata !DIExpression()) #24, !dbg !14560
  call void @llvm.dbg.value(metadata i32 %17, metadata !14467, metadata !DIExpression()), !dbg !14552
  %18 = insertvalue [1 x i32] poison, i32 %17, 0, !dbg !14594
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %18) #25, !dbg !14594
  ret void, !dbg !14595
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14596 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14605, metadata !DIExpression()), !dbg !14609
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14604, metadata !DIExpression()), !dbg !14609
  call void @llvm.dbg.value(metadata i32 0, metadata !14606, metadata !DIExpression()), !dbg !14609
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14553, metadata !DIExpression()) #24, !dbg !14610
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14612, !srcloc !14568
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14612
  call void @llvm.dbg.value(metadata i32 %4, metadata !14565, metadata !DIExpression()) #24, !dbg !14614
  call void @llvm.dbg.value(metadata i32 undef, metadata !14566, metadata !DIExpression()) #24, !dbg !14614
  call void @llvm.dbg.value(metadata i32 %4, metadata !14559, metadata !DIExpression()) #24, !dbg !14610
  call void @llvm.dbg.value(metadata i32 %4, metadata !14607, metadata !DIExpression()), !dbg !14609
  %5 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14615
  %6 = load i32, i32* %5, align 4, !dbg !14615
  %7 = icmp eq i32 %6, 0, !dbg !14615
  br i1 %7, label %10, label %8, !dbg !14617, !prof !14618

8:                                                ; preds = %2
  %9 = add i32 %6, -1, !dbg !14619
  store i32 %9, i32* %5, align 4, !dbg !14619
  call void @llvm.dbg.value(metadata i32 %4, metadata !14621, metadata !DIExpression()) #24, !dbg !14627
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14626, metadata !DIExpression()) #24, !dbg !14627
  call void @llvm.dbg.value(metadata i32 %4, metadata !14629, metadata !DIExpression()) #24, !dbg !14632
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14634, !srcloc !14635
  call void @llvm.dbg.value(metadata i32 0, metadata !14606, metadata !DIExpression()), !dbg !14609
  br label %18, !dbg !14636

10:                                               ; preds = %2
  %11 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14605, metadata !DIExpression()), !dbg !14609
  %12 = icmp eq i64 %11, 0, !dbg !14637
  br i1 %12, label %13, label %14, !dbg !14639

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %4, metadata !14621, metadata !DIExpression()) #24, !dbg !14640
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14626, metadata !DIExpression()) #24, !dbg !14640
  call void @llvm.dbg.value(metadata i32 %4, metadata !14629, metadata !DIExpression()) #24, !dbg !14643
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14645, !srcloc !14635
  call void @llvm.dbg.value(metadata i32 -16, metadata !14606, metadata !DIExpression()), !dbg !14609
  br label %18, !dbg !14646

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14647
  %16 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !14648
  %17 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %16, %union.anon* noundef %15, [1 x i64] %1) #25, !dbg !14648
  call void @llvm.dbg.value(metadata i32 %17, metadata !14606, metadata !DIExpression()), !dbg !14609
  br label %18, !dbg !14649

18:                                               ; preds = %8, %13, %14
  %19 = phi i32 [ 0, %8 ], [ -16, %13 ], [ %17, %14 ], !dbg !14609
  call void @llvm.dbg.value(metadata i32 %19, metadata !14606, metadata !DIExpression()), !dbg !14609
  call void @llvm.dbg.label(metadata !14608), !dbg !14650
  ret i32 %19, !dbg !14651
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14652 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14654, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14553, metadata !DIExpression()) #24, !dbg !14658
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14660, !srcloc !14568
  call void @llvm.dbg.value(metadata i32 undef, metadata !14565, metadata !DIExpression()) #24, !dbg !14662
  call void @llvm.dbg.value(metadata i32 undef, metadata !14566, metadata !DIExpression()) #24, !dbg !14662
  call void @llvm.dbg.value(metadata i32 undef, metadata !14559, metadata !DIExpression()) #24, !dbg !14658
  call void @llvm.dbg.value(metadata i32 undef, metadata !14656, metadata !DIExpression()), !dbg !14657
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14663
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14655, metadata !DIExpression()), !dbg !14657
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14665
  br i1 %5, label %11, label %6, !dbg !14667

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14575, metadata !DIExpression()), !dbg !14668
  call void @llvm.dbg.value(metadata i32 -11, metadata !14580, metadata !DIExpression()), !dbg !14668
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !14670
  store i32 -11, i32* %8, align 4, !dbg !14671
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #25, !dbg !14672
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14663
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14655, metadata !DIExpression()), !dbg !14657
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !14665
  br i1 %10, label %11, label %6, !dbg !14667, !llvm.loop !14673

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !14660
  call void @llvm.dbg.value(metadata i32 %12, metadata !14565, metadata !DIExpression()) #24, !dbg !14662
  call void @llvm.dbg.value(metadata i32 %12, metadata !14559, metadata !DIExpression()) #24, !dbg !14658
  call void @llvm.dbg.value(metadata i32 %12, metadata !14656, metadata !DIExpression()), !dbg !14657
  %13 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14676
  store i32 0, i32* %13, align 4, !dbg !14677
  %14 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !14678
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %14) #25, !dbg !14678
  ret void, !dbg !14679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14680 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14684, metadata !DIExpression()), !dbg !14688
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14685, metadata !DIExpression()), !dbg !14688
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14689
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14689
  %5 = load i8, i8* %4, align 2, !dbg !14689
  call void @llvm.dbg.value(metadata i8 %5, metadata !14686, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14688
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14690
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14690
  %8 = load i8, i8* %7, align 2, !dbg !14690
  call void @llvm.dbg.value(metadata i8 %8, metadata !14687, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14688
  %9 = icmp eq i8 %8, %5, !dbg !14691
  %10 = sext i8 %5 to i32, !dbg !14693
  %11 = sext i8 %8 to i32, !dbg !14693
  %12 = sub nsw i32 %11, %10, !dbg !14693
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14693
  ret i32 %13, !dbg !14694
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14695 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14699, metadata !DIExpression()), !dbg !14700
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !14701
  %3 = icmp eq i32 %2, 0, !dbg !14703
  br i1 %3, label %8, label %4, !dbg !14704

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14705
  %6 = add i32 %5, %2, !dbg !14707
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14708
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !14709
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14710
  br label %8, !dbg !14711

8:                                                ; preds = %4, %1
  ret void, !dbg !14712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !14713 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14717, metadata !DIExpression()), !dbg !14719
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14720
  call void @llvm.dbg.value(metadata i32 %1, metadata !14718, metadata !DIExpression()), !dbg !14719
  ret i32 %1, !dbg !14721
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14726, metadata !DIExpression()), !dbg !14735
  call void @llvm.dbg.value(metadata i32 %1, metadata !14727, metadata !DIExpression()), !dbg !14735
  call void @llvm.dbg.value(metadata i32 0, metadata !14728, metadata !DIExpression()), !dbg !14736
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !14744
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14746, !srcloc !14752
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14746
  call void @llvm.dbg.value(metadata i32 %4, metadata !14749, metadata !DIExpression()) #24, !dbg !14753
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !14753
  call void @llvm.dbg.value(metadata i32 %4, metadata !14743, metadata !DIExpression()) #24, !dbg !14744
  call void @llvm.dbg.value(metadata i32 %4, metadata !14734, metadata !DIExpression()), !dbg !14736
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()), !dbg !14736
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14754
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !14757
  %6 = icmp sgt i32 %0, 0, !dbg !14758
  %7 = icmp sgt i32 %5, 2, !dbg !14760
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14760
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14760
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14761
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14762
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14763
  call void @llvm.dbg.value(metadata i32 %4, metadata !14764, metadata !DIExpression()) #24, !dbg !14770
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !14770
  call void @llvm.dbg.value(metadata i32 %4, metadata !14772, metadata !DIExpression()) #24, !dbg !14775
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14777, !srcloc !14778
  call void @llvm.dbg.value(metadata i32 1, metadata !14728, metadata !DIExpression()), !dbg !14736
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()), !dbg !14736
  ret void, !dbg !14779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !14780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14782, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.value(metadata i32 %0, metadata !14784, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14799
  call void @llvm.dbg.value(metadata i32 1000, metadata !14787, metadata !DIExpression()), !dbg !14799
  call void @llvm.dbg.value(metadata i32 10000, metadata !14788, metadata !DIExpression()), !dbg !14799
  call void @llvm.dbg.value(metadata i8 1, metadata !14789, metadata !DIExpression()), !dbg !14799
  call void @llvm.dbg.value(metadata i1 true, metadata !14790, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14799
  call void @llvm.dbg.value(metadata i1 true, metadata !14791, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14799
  call void @llvm.dbg.value(metadata i8 0, metadata !14792, metadata !DIExpression()), !dbg !14799
  call void @llvm.dbg.value(metadata i1 true, metadata !14793, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14799
  call void @llvm.dbg.value(metadata i1 false, metadata !14794, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14799
  call void @llvm.dbg.value(metadata i64 0, metadata !14795, metadata !DIExpression()), !dbg !14799
  call void @llvm.dbg.value(metadata i64 0, metadata !14795, metadata !DIExpression()), !dbg !14799
  %2 = mul i32 %0, 10, !dbg !14801
  ret i32 %2, !dbg !14807
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14810, metadata !DIExpression()), !dbg !14812
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !14813
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14815, !srcloc !14752
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14815
  call void @llvm.dbg.value(metadata i32 %3, metadata !14749, metadata !DIExpression()) #24, !dbg !14817
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !14817
  call void @llvm.dbg.value(metadata i32 %3, metadata !14743, metadata !DIExpression()) #24, !dbg !14813
  call void @llvm.dbg.value(metadata i32 %3, metadata !14811, metadata !DIExpression()), !dbg !14812
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14818
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14820
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14821
  br i1 %6, label %7, label %8, !dbg !14822

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14823
  call void @llvm.dbg.value(metadata i32 %3, metadata !14764, metadata !DIExpression()) #24, !dbg !14825
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !14825
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !14827
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14829, !srcloc !14778
  br label %24, !dbg !14830

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14831
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !14832
  %10 = icmp eq i32 %9, 0, !dbg !14832
  br i1 %10, label %21, label %11, !dbg !14834

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !14835
  br i1 %12, label %13, label %21, !dbg !14836

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14837
  %15 = icmp sgt i32 %14, %0, !dbg !14840
  br i1 %15, label %19, label %16, !dbg !14841

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14842
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !14842
  call void @llvm.dbg.value(metadata i32 %18, metadata !14811, metadata !DIExpression()), !dbg !14812
  br label %22, !dbg !14844

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14845
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14845
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14847
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14812
  call void @llvm.dbg.value(metadata i32 %23, metadata !14811, metadata !DIExpression()), !dbg !14812
  call void @llvm.dbg.value(metadata i32 %23, metadata !14764, metadata !DIExpression()) #24, !dbg !14849
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !14849
  call void @llvm.dbg.value(metadata i32 %23, metadata !14772, metadata !DIExpression()) #24, !dbg !14851
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !14853, !srcloc !14778
  br label %24, !dbg !14854

24:                                               ; preds = %22, %7
  ret void, !dbg !14854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !14855 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14859, metadata !DIExpression()), !dbg !14861
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !14862
  %3 = icmp eq i32 %2, 0, !dbg !14862
  br i1 %3, label %16, label %4, !dbg !14863

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14864
  br i1 %5, label %16, label %6, !dbg !14865

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14866
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14866
  %9 = load i8, i8* %8, align 2, !dbg !14866
  %10 = sext i8 %9 to i32, !dbg !14867
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14868
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !14869
  br i1 %12, label %16, label %13, !dbg !14870

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !14871
  %15 = xor i1 %14, true, !dbg !14872
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14861
  call void @llvm.dbg.value(metadata i1 %17, metadata !14860, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14861
  ret i1 %17, !dbg !14873
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14874 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14878, metadata !DIExpression()), !dbg !14880
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14881
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14879, metadata !DIExpression()), !dbg !14880
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !14882
  br i1 %3, label %5, label %4, !dbg !14884

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !14885
  br label %5, !dbg !14887

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14878, metadata !DIExpression()), !dbg !14880
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14888
  ret i32 %6, !dbg !14889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14890 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14892, metadata !DIExpression()), !dbg !14894
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14895
  %3 = load i8, i8* %2, align 1, !dbg !14895
  call void @llvm.dbg.value(metadata i8 %3, metadata !14893, metadata !DIExpression()), !dbg !14894
  %4 = and i8 %3, 31, !dbg !14896
  %5 = icmp ne i8 %4, 0, !dbg !14897
  ret i1 %5, !dbg !14898
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14899 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14901, metadata !DIExpression()), !dbg !14902
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14903
  br i1 %2, label %3, label %7, !dbg !14905

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14906, metadata !DIExpression()) #24, !dbg !14909
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14912
  %5 = load i8, i8* %4, align 1, !dbg !14913
  %6 = and i8 %5, 127, !dbg !14913
  store i8 %6, i8* %4, align 1, !dbg !14913
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14914, metadata !DIExpression()) #24, !dbg !14917
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14921
  br label %7, !dbg !14922

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14923, metadata !DIExpression()) #24, !dbg !14926
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14928
  %9 = load i8, i8* %8, align 1, !dbg !14929
  %10 = or i8 %9, -128, !dbg !14929
  store i8 %10, i8* %8, align 1, !dbg !14929
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14930, metadata !DIExpression()) #24, !dbg !14933
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14937, metadata !DIExpression()) #24, !dbg !14945
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14943, metadata !DIExpression()) #24, !dbg !14945
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14947
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14944, metadata !DIExpression()) #24, !dbg !14945
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14949
  br i1 %12, label %23, label %13, !dbg !14947

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14944, metadata !DIExpression()) #24, !dbg !14945
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14951
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14944, metadata !DIExpression()) #24, !dbg !14945
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !14952
  %17 = icmp sgt i32 %16, 0, !dbg !14955
  br i1 %17, label %18, label %20, !dbg !14956

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14957
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !14959
  br label %25, !dbg !14960

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !14949
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14944, metadata !DIExpression()) #24, !dbg !14945
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14949
  br i1 %22, label %23, label %13, !dbg !14947, !llvm.loop !14961

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14963
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !14964
  br label %25, !dbg !14965

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14966
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14967
  %28 = zext i1 %27 to i32, !dbg !14967
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !14968
  ret void, !dbg !14969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14970 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14972, metadata !DIExpression()), !dbg !14973
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !14974
  ret i1 %2, !dbg !14975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !14976 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14978, metadata !DIExpression()), !dbg !14980
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14979, metadata !DIExpression()), !dbg !14980
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14981
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !14982
  ret void, !dbg !14983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !14984 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14988, metadata !DIExpression()), !dbg !14989
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !14990
  br i1 %2, label %6, label %3, !dbg !14990

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14991
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14991
  br label %6, !dbg !14990

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14990
  ret %struct._dnode* %7, !dbg !14992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14993 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14997, metadata !DIExpression()), !dbg !15001
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14998, metadata !DIExpression()), !dbg !15001
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15002
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15002
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14999, metadata !DIExpression()), !dbg !15001
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15003
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15004
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15005
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15006
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15007
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15008
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15009
  ret void, !dbg !15010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15011 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15015, metadata !DIExpression()), !dbg !15017
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15016, metadata !DIExpression()), !dbg !15017
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15018
  br i1 %3, label %6, label %4, !dbg !15019

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !15020
  br label %6, !dbg !15019

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15019
  ret %struct._dnode* %7, !dbg !15021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !15022 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15026, metadata !DIExpression()), !dbg !15029
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15027, metadata !DIExpression()), !dbg !15029
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15030
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15030
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15028, metadata !DIExpression()), !dbg !15029
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15031
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15032
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15033
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15034
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15035
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15036
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15037
  ret void, !dbg !15038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15041, metadata !DIExpression()), !dbg !15043
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15044
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15051, metadata !DIExpression()) #24, !dbg !15053
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15054
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15055
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15055
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15042, metadata !DIExpression()), !dbg !15043
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15056, metadata !DIExpression()) #24, !dbg !15062
  call void @llvm.dbg.value(metadata i32 %0, metadata !15061, metadata !DIExpression()) #24, !dbg !15062
  %6 = icmp eq i32 %0, 0, !dbg !15065
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15067
  br i1 %6, label %8, label %15, !dbg !15068

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15069
  br i1 %9, label %15, label %10, !dbg !15071

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15072
  br i1 %11, label %15, label %12, !dbg !15074

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15075
  %14 = icmp eq i32 %13, 0, !dbg !15075
  br i1 %14, label %18, label %15, !dbg !15077

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15078
  br i1 %16, label %18, label %17, !dbg !15081

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15082
  br label %18, !dbg !15084

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15067
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15067
  ret void, !dbg !15085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !15086 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15090, metadata !DIExpression()), !dbg !15093
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15091, metadata !DIExpression()), !dbg !15093
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !15094
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15092, metadata !DIExpression()), !dbg !15093
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15091, metadata !DIExpression()), !dbg !15093
  ret %struct.k_thread* %3, !dbg !15095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15096 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15098, metadata !DIExpression()), !dbg !15099
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15100
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15101
  %4 = xor i1 %3, true, !dbg !15102
  ret i1 %4, !dbg !15103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15104 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15106, metadata !DIExpression()), !dbg !15107
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15108
  %3 = load i16, i16* %2, align 2, !dbg !15108
  %4 = icmp ult i16 %3, 128, !dbg !15109
  %5 = zext i1 %4 to i32, !dbg !15109
  ret i32 %5, !dbg !15110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15111 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15117, metadata !DIExpression()), !dbg !15118
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15119
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !15120
  %4 = xor i1 %3, true, !dbg !15121
  ret i1 %4, !dbg !15122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15123 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15129, metadata !DIExpression()), !dbg !15130
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15131
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15131
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15132
  ret i1 %4, !dbg !15133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15134 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15136, metadata !DIExpression()), !dbg !15138
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15137, metadata !DIExpression()), !dbg !15138
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15139
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15139
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15140
  br i1 %5, label %9, label %6, !dbg !15141

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15142
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15142
  br label %9, !dbg !15141

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15141
  ret %struct._dnode* %10, !dbg !15143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15144 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15148, metadata !DIExpression()), !dbg !15149
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15150
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15150
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15151
  ret i1 %4, !dbg !15152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !15153 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15157, metadata !DIExpression()), !dbg !15160
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15161
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15161
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15158, metadata !DIExpression()), !dbg !15160
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15162
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15162
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15159, metadata !DIExpression()), !dbg !15160
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15163
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15164
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15165
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15166
  tail call fastcc void @sys_dnode_init.156(%struct._dnode* noundef %0) #26, !dbg !15167
  ret void, !dbg !15168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.156(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15169 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15171, metadata !DIExpression()), !dbg !15172
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15173
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15174
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15175
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15176
  ret void, !dbg !15177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15178 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15182, metadata !DIExpression()), !dbg !15184
  call void @llvm.dbg.value(metadata i32 128, metadata !15183, metadata !DIExpression()), !dbg !15184
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15185
  %3 = load i8, i8* %2, align 1, !dbg !15185
  %4 = icmp slt i8 %3, 0, !dbg !15186
  ret i1 %4, !dbg !15187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15192, metadata !DIExpression()), !dbg !15194
  call void @llvm.dbg.value(metadata i32 %1, metadata !15193, metadata !DIExpression()), !dbg !15194
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15195
  ret i1 %3, !dbg !15196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !15197 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15199, metadata !DIExpression()), !dbg !15200
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15201
  ret i1 %2, !dbg !15202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15205, metadata !DIExpression()), !dbg !15207
  call void @llvm.dbg.value(metadata i32 %1, metadata !15206, metadata !DIExpression()), !dbg !15207
  %3 = icmp slt i32 %0, %1, !dbg !15208
  ret i1 %3, !dbg !15209
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15210 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15212, metadata !DIExpression()), !dbg !15216
  call void @llvm.dbg.value(metadata i32 0, metadata !15213, metadata !DIExpression()), !dbg !15217
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !15218
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15220, !srcloc !14752
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15220
  call void @llvm.dbg.value(metadata i32 %3, metadata !14749, metadata !DIExpression()) #24, !dbg !15222
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15222
  call void @llvm.dbg.value(metadata i32 %3, metadata !14743, metadata !DIExpression()) #24, !dbg !15218
  call void @llvm.dbg.value(metadata i32 %3, metadata !15215, metadata !DIExpression()), !dbg !15217
  call void @llvm.dbg.value(metadata i32 undef, metadata !15213, metadata !DIExpression()), !dbg !15217
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15223
  call void @llvm.dbg.value(metadata i32 %3, metadata !14764, metadata !DIExpression()) #24, !dbg !15228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !15228
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !15230
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15232, !srcloc !14778
  call void @llvm.dbg.value(metadata i32 1, metadata !15213, metadata !DIExpression()), !dbg !15217
  call void @llvm.dbg.value(metadata i32 undef, metadata !15213, metadata !DIExpression()), !dbg !15217
  ret void, !dbg !15233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15234 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15236, metadata !DIExpression()), !dbg !15237
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15238
  br i1 %2, label %24, label %3, !dbg !15240

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15241
  br i1 %4, label %5, label %24, !dbg !15242

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14923, metadata !DIExpression()) #24, !dbg !15243
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15246
  %7 = load i8, i8* %6, align 1, !dbg !15247
  %8 = or i8 %7, -128, !dbg !15247
  store i8 %8, i8* %6, align 1, !dbg !15247
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14930, metadata !DIExpression()) #24, !dbg !15248
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14937, metadata !DIExpression()) #24, !dbg !15250
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14943, metadata !DIExpression()) #24, !dbg !15250
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15252
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14944, metadata !DIExpression()) #24, !dbg !15250
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15253
  br i1 %10, label %21, label %11, !dbg !15252

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14944, metadata !DIExpression()) #24, !dbg !15250
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15254
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14944, metadata !DIExpression()) #24, !dbg !15250
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15255
  %15 = icmp sgt i32 %14, 0, !dbg !15256
  br i1 %15, label %16, label %18, !dbg !15257

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15258
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15259
  br label %23, !dbg !15260

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15253
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14944, metadata !DIExpression()) #24, !dbg !15250
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15253
  br i1 %20, label %21, label %11, !dbg !15252, !llvm.loop !15261

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15263
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15264
  br label %23, !dbg !15265

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15266
  br label %24, !dbg !15267

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15269 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15271, metadata !DIExpression()), !dbg !15272
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15273
  br i1 %2, label %6, label %3, !dbg !15274

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !15275
  %5 = xor i1 %4, true, !dbg !15274
  br label %6, !dbg !15274

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15277 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15279, metadata !DIExpression()), !dbg !15283
  call void @llvm.dbg.value(metadata i32 0, metadata !15280, metadata !DIExpression()), !dbg !15284
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !15285
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15287, !srcloc !14752
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15287
  call void @llvm.dbg.value(metadata i32 %3, metadata !14749, metadata !DIExpression()) #24, !dbg !15289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15289
  call void @llvm.dbg.value(metadata i32 %3, metadata !14743, metadata !DIExpression()) #24, !dbg !15285
  call void @llvm.dbg.value(metadata i32 %3, metadata !15282, metadata !DIExpression()), !dbg !15284
  call void @llvm.dbg.value(metadata i32 undef, metadata !15280, metadata !DIExpression()), !dbg !15284
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !15290
  call void @llvm.dbg.value(metadata i32 %3, metadata !14764, metadata !DIExpression()) #24, !dbg !15293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !15293
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !15295
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15297, !srcloc !14778
  call void @llvm.dbg.value(metadata i32 1, metadata !15280, metadata !DIExpression()), !dbg !15284
  call void @llvm.dbg.value(metadata i32 undef, metadata !15280, metadata !DIExpression()), !dbg !15284
  ret void, !dbg !15298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15299 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15301, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !15304
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15306, !srcloc !14752
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15306
  call void @llvm.dbg.value(metadata i32 %3, metadata !14749, metadata !DIExpression()) #24, !dbg !15308
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15308
  call void @llvm.dbg.value(metadata i32 %3, metadata !14743, metadata !DIExpression()) #24, !dbg !15304
  call void @llvm.dbg.value(metadata i32 %3, metadata !15302, metadata !DIExpression()), !dbg !15303
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !15309
  br i1 %4, label %5, label %6, !dbg !15311

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14764, metadata !DIExpression()) #24, !dbg !15312
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !15312
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !15315
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15317, !srcloc !14778
  br label %8, !dbg !15318

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.161(%struct.k_thread* noundef %0) #26, !dbg !15319
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15320
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15321
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15321
  br label %8, !dbg !15322

8:                                                ; preds = %6, %5
  ret void, !dbg !15322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15323 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15325, metadata !DIExpression()), !dbg !15326
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15327
  %3 = load i8, i8* %2, align 1, !dbg !15327
  %4 = and i8 %3, 4, !dbg !15328
  %5 = icmp eq i8 %4, 0, !dbg !15329
  ret i1 %5, !dbg !15330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.161(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15331 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15333, metadata !DIExpression()), !dbg !15334
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15335
  %3 = load i8, i8* %2, align 1, !dbg !15336
  %4 = and i8 %3, -5, !dbg !15336
  store i8 %4, i8* %2, align 1, !dbg !15336
  ret void, !dbg !15337
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15338 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15341, metadata !DIExpression()), !dbg !15342
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15340, metadata !DIExpression()), !dbg !15342
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !15343
  br i1 %4, label %5, label %9, !dbg !15345

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !15346
  br i1 %6, label %7, label %9, !dbg !15347

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15348, metadata !DIExpression()) #24, !dbg !15354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15353, metadata !DIExpression()) #24, !dbg !15354
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15357
  br label %10, !dbg !15358

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14764, metadata !DIExpression()) #24, !dbg !15359
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !15359
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !15362
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15364, !srcloc !14778
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15365
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15366 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15370, metadata !DIExpression()), !dbg !15371
  call void @llvm.dbg.value(metadata i32 %0, metadata !15372, metadata !DIExpression()), !dbg !15377
  %2 = icmp eq i32 %0, 0, !dbg !15379
  br i1 %2, label %3, label %6, !dbg !15380

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15381, !srcloc !15388
  call void @llvm.dbg.value(metadata i32 %4, metadata !15384, metadata !DIExpression()) #24, !dbg !15389
  %5 = icmp eq i32 %4, 0, !dbg !15390
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15371
  ret i1 %7, !dbg !15391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !15392 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15395
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15394, metadata !DIExpression()), !dbg !15396
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15397
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15398
  ret i1 %3, !dbg !15399
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15400 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15402, metadata !DIExpression()), !dbg !15404
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15405
  call void @llvm.dbg.value(metadata i32 %2, metadata !15403, metadata !DIExpression()), !dbg !15404
  ret i32 %2, !dbg !15406
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15407 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15409, metadata !DIExpression()), !dbg !15413
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15414
  call void @llvm.dbg.value(metadata i32 0, metadata !15410, metadata !DIExpression()), !dbg !15415
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !15416
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15418, !srcloc !14752
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15418
  call void @llvm.dbg.value(metadata i32 %4, metadata !14749, metadata !DIExpression()) #24, !dbg !15420
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15420
  call void @llvm.dbg.value(metadata i32 %4, metadata !14743, metadata !DIExpression()) #24, !dbg !15416
  call void @llvm.dbg.value(metadata i32 %4, metadata !15412, metadata !DIExpression()), !dbg !15415
  call void @llvm.dbg.value(metadata i32 undef, metadata !15410, metadata !DIExpression()), !dbg !15415
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15421
  br i1 %5, label %6, label %10, !dbg !15425

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14906, metadata !DIExpression()) #24, !dbg !15426
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15429
  %8 = load i8, i8* %7, align 1, !dbg !15430
  %9 = and i8 %8, 127, !dbg !15430
  store i8 %9, i8* %7, align 1, !dbg !15430
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14914, metadata !DIExpression()) #24, !dbg !15431
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15433
  br label %10, !dbg !15434

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !15435
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15436
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15437
  %13 = zext i1 %12 to i32, !dbg !15437
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !15438
  call void @llvm.dbg.value(metadata i32 %4, metadata !14764, metadata !DIExpression()) #24, !dbg !15439
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !15439
  call void @llvm.dbg.value(metadata i32 %4, metadata !14772, metadata !DIExpression()) #24, !dbg !15441
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !15443, !srcloc !14778
  call void @llvm.dbg.value(metadata i32 1, metadata !15410, metadata !DIExpression()), !dbg !15415
  call void @llvm.dbg.value(metadata i32 undef, metadata !15410, metadata !DIExpression()), !dbg !15415
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15444
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15446
  br i1 %15, label %16, label %17, !dbg !15447

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15448
  br label %17, !dbg !15450

17:                                               ; preds = %16, %10
  ret void, !dbg !15451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15452 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15454, metadata !DIExpression()), !dbg !15455
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15456
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15457
  ret i32 %3, !dbg !15458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15459 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15461, metadata !DIExpression()), !dbg !15462
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15463
  %3 = load i8, i8* %2, align 1, !dbg !15464
  %4 = or i8 %3, 16, !dbg !15464
  store i8 %4, i8* %2, align 1, !dbg !15464
  ret void, !dbg !15465
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15466 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15467, !srcloc !14752
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15467
  call void @llvm.dbg.value(metadata i32 %2, metadata !14749, metadata !DIExpression()) #24, !dbg !15469
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15469
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !15470
  ret void, !dbg !15471
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15474, metadata !DIExpression()), !dbg !15475
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !15476
  br i1 %2, label %3, label %5, !dbg !15478

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15479
  br label %6, !dbg !15481

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14772, metadata !DIExpression()) #24, !dbg !15482
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !15485, !srcloc !14778
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15486
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15487 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15489, metadata !DIExpression()), !dbg !15491
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !15492
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15494, !srcloc !14752
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15494
  call void @llvm.dbg.value(metadata i32 %3, metadata !14749, metadata !DIExpression()) #24, !dbg !15496
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15496
  call void @llvm.dbg.value(metadata i32 %3, metadata !14743, metadata !DIExpression()) #24, !dbg !15492
  call void @llvm.dbg.value(metadata i32 %3, metadata !15490, metadata !DIExpression()), !dbg !15491
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !15497
  br i1 %4, label %6, label %5, !dbg !15499

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14764, metadata !DIExpression()) #24, !dbg !15500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !15500
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !15503
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15505, !srcloc !14778
  br label %8, !dbg !15506

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15507
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15508
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15509
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15509
  br label %8, !dbg !15510

8:                                                ; preds = %6, %5
  ret void, !dbg !15510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15511 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15513, metadata !DIExpression()), !dbg !15514
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15515
  %3 = load i8, i8* %2, align 1, !dbg !15515
  %4 = and i8 %3, 16, !dbg !15516
  %5 = icmp ne i8 %4, 0, !dbg !15517
  ret i1 %5, !dbg !15518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15519 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15521, metadata !DIExpression()), !dbg !15522
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15523
  %3 = load i8, i8* %2, align 1, !dbg !15524
  %4 = and i8 %3, -17, !dbg !15524
  store i8 %4, i8* %2, align 1, !dbg !15524
  ret void, !dbg !15525
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15526 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15536, metadata !DIExpression()), !dbg !15540
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15534, metadata !DIExpression()), !dbg !15540
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15535, metadata !DIExpression()), !dbg !15540
  call void @llvm.dbg.value(metadata i32 0, metadata !15537, metadata !DIExpression()), !dbg !15541
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !15542
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15544, !srcloc !14752
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15544
  call void @llvm.dbg.value(metadata i32 %5, metadata !14749, metadata !DIExpression()) #24, !dbg !15546
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15546
  call void @llvm.dbg.value(metadata i32 %5, metadata !14743, metadata !DIExpression()) #24, !dbg !15542
  call void @llvm.dbg.value(metadata i32 %5, metadata !15539, metadata !DIExpression()), !dbg !15541
  call void @llvm.dbg.value(metadata i32 undef, metadata !15537, metadata !DIExpression()), !dbg !15541
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !15547
  call void @llvm.dbg.value(metadata i32 %5, metadata !14764, metadata !DIExpression()) #24, !dbg !15550
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !15550
  call void @llvm.dbg.value(metadata i32 %5, metadata !14772, metadata !DIExpression()) #24, !dbg !15552
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !15554, !srcloc !14778
  call void @llvm.dbg.value(metadata i32 1, metadata !15537, metadata !DIExpression()), !dbg !15541
  call void @llvm.dbg.value(metadata i32 undef, metadata !15537, metadata !DIExpression()), !dbg !15541
  ret void, !dbg !15555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15556 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15560, metadata !DIExpression()), !dbg !15561
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15558, metadata !DIExpression()), !dbg !15561
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15559, metadata !DIExpression()), !dbg !15561
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !15562
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !15563
  ret void, !dbg !15564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15565 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15569, metadata !DIExpression()), !dbg !15571
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15570, metadata !DIExpression()), !dbg !15571
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !15572
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !15573
  %3 = icmp eq %union.anon* %1, null, !dbg !15574
  br i1 %3, label %21, label %4, !dbg !15576

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15577
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15579
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15580
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14937, metadata !DIExpression()) #24, !dbg !15581
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14943, metadata !DIExpression()) #24, !dbg !15581
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15583
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14944, metadata !DIExpression()) #24, !dbg !15581
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15584
  br i1 %8, label %19, label %9, !dbg !15583

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14944, metadata !DIExpression()) #24, !dbg !15581
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15585
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14944, metadata !DIExpression()) #24, !dbg !15581
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !15586
  %13 = icmp sgt i32 %12, 0, !dbg !15587
  br i1 %13, label %14, label %16, !dbg !15588

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15589
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !15590
  br label %21, !dbg !15591

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !15584
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14944, metadata !DIExpression()) #24, !dbg !15581
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15584
  br i1 %18, label %19, label %9, !dbg !15583, !llvm.loop !15592

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15594
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !15595
  br label %21, !dbg !15596

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15598 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15603, metadata !DIExpression()), !dbg !15604
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15602, metadata !DIExpression()), !dbg !15604
  %4 = icmp eq i64 %3, -1, !dbg !15605
  br i1 %4, label %6, label %5, !dbg !15607

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.164(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15608
  br label %6, !dbg !15610

6:                                                ; preds = %5, %2
  ret void, !dbg !15611
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.164(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15612 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15615, metadata !DIExpression()), !dbg !15616
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15614, metadata !DIExpression()), !dbg !15616
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15617
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15618
  ret void, !dbg !15619
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15620 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15622, metadata !DIExpression()), !dbg !15630
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15631
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15631
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15623, metadata !DIExpression()), !dbg !15630
  call void @llvm.dbg.value(metadata i32 0, metadata !15624, metadata !DIExpression()), !dbg !15632
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !15633
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15635, !srcloc !14752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15637
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15637
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #24, !dbg !15633
  call void @llvm.dbg.value(metadata i32 undef, metadata !15626, metadata !DIExpression()), !dbg !15632
  call void @llvm.dbg.value(metadata i32 undef, metadata !15624, metadata !DIExpression()), !dbg !15632
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15638
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15639
  %7 = load i8, i8* %6, align 1, !dbg !15639
  %8 = and i8 %7, 40, !dbg !15640
  %9 = icmp eq i8 %8, 0, !dbg !15640
  call void @llvm.dbg.value(metadata i1 %9, metadata !15627, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15641
  br i1 %9, label %10, label %17, !dbg !15642

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15643
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15643
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15643
  %14 = icmp eq %union.anon* %13, null, !dbg !15647
  br i1 %14, label %16, label %15, !dbg !15648

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !15649
  br label %16, !dbg !15651

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.161(%struct.k_thread* noundef nonnull %3) #26, !dbg !15652
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !15653
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !15654
  br label %17, !dbg !15655

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15635
  call void @llvm.dbg.value(metadata i32 %18, metadata !14749, metadata !DIExpression()) #24, !dbg !15637
  call void @llvm.dbg.value(metadata i32 %18, metadata !14743, metadata !DIExpression()) #24, !dbg !15633
  call void @llvm.dbg.value(metadata i32 %18, metadata !15626, metadata !DIExpression()), !dbg !15632
  call void @llvm.dbg.value(metadata i32 undef, metadata !14764, metadata !DIExpression()) #24, !dbg !15656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !15656
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #24, !dbg !15658
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !15660, !srcloc !14778
  call void @llvm.dbg.value(metadata i32 1, metadata !15624, metadata !DIExpression()), !dbg !15632
  call void @llvm.dbg.value(metadata i32 undef, metadata !15624, metadata !DIExpression()), !dbg !15632
  ret void, !dbg !15661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15662 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15664, metadata !DIExpression()), !dbg !15665
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15666
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !15667
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15668
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15669
  ret void, !dbg !15670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15671 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15673, metadata !DIExpression()), !dbg !15674
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15675
  %3 = load i8, i8* %2, align 1, !dbg !15676
  %4 = and i8 %3, -3, !dbg !15676
  store i8 %4, i8* %2, align 1, !dbg !15676
  ret void, !dbg !15677
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15678 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15680, metadata !DIExpression()), !dbg !15681
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15682
  br i1 %2, label %3, label %7, !dbg !15684

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14906, metadata !DIExpression()) #24, !dbg !15685
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15688
  %5 = load i8, i8* %4, align 1, !dbg !15689
  %6 = and i8 %5, 127, !dbg !15689
  store i8 %6, i8* %4, align 1, !dbg !15689
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14914, metadata !DIExpression()) #24, !dbg !15690
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15692
  br label %7, !dbg !15693

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15694
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15695
  %10 = zext i1 %9 to i32, !dbg !15695
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !15696
  ret void, !dbg !15697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15698 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15700, metadata !DIExpression()), !dbg !15701
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15702
  %3 = load i8, i8* %2, align 1, !dbg !15703
  %4 = or i8 %3, 2, !dbg !15703
  store i8 %4, i8* %2, align 1, !dbg !15703
  ret void, !dbg !15704
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !15705 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15707, metadata !DIExpression()), !dbg !15711
  call void @llvm.dbg.value(metadata i32 0, metadata !15708, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !15713
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15715, !srcloc !14752
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15715
  call void @llvm.dbg.value(metadata i32 %3, metadata !14749, metadata !DIExpression()) #24, !dbg !15717
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15717
  call void @llvm.dbg.value(metadata i32 %3, metadata !14743, metadata !DIExpression()) #24, !dbg !15713
  call void @llvm.dbg.value(metadata i32 %3, metadata !15710, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata i32 undef, metadata !15708, metadata !DIExpression()), !dbg !15712
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15718
  call void @llvm.dbg.value(metadata i32 %3, metadata !14764, metadata !DIExpression()) #24, !dbg !15721
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !15721
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !15723
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15725, !srcloc !14778
  call void @llvm.dbg.value(metadata i32 1, metadata !15708, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata i32 undef, metadata !15708, metadata !DIExpression()), !dbg !15712
  ret void, !dbg !15726
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15727 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15733, metadata !DIExpression()), !dbg !15738
  call void @llvm.dbg.value(metadata i32 %0, metadata !15731, metadata !DIExpression()), !dbg !15738
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15732, metadata !DIExpression()), !dbg !15738
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15739
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !15740
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15741
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15742
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15743
  call void @llvm.dbg.value(metadata i32 %6, metadata !15734, metadata !DIExpression()), !dbg !15738
  call void @llvm.dbg.value(metadata i32 0, metadata !15735, metadata !DIExpression()), !dbg !15744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !15745
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15747, !srcloc !14752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15749
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15749
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #24, !dbg !15745
  call void @llvm.dbg.value(metadata i32 undef, metadata !15737, metadata !DIExpression()), !dbg !15744
  call void @llvm.dbg.value(metadata i32 undef, metadata !15735, metadata !DIExpression()), !dbg !15744
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15750
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15754
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15755
  br i1 %10, label %11, label %12, !dbg !15756

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15757
  br label %12, !dbg !15759

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15747
  call void @llvm.dbg.value(metadata i32 %13, metadata !14749, metadata !DIExpression()) #24, !dbg !15749
  call void @llvm.dbg.value(metadata i32 %13, metadata !14743, metadata !DIExpression()) #24, !dbg !15745
  call void @llvm.dbg.value(metadata i32 %13, metadata !15737, metadata !DIExpression()), !dbg !15744
  call void @llvm.dbg.value(metadata i32 undef, metadata !14764, metadata !DIExpression()) #24, !dbg !15760
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !15760
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #24, !dbg !15762
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !15764, !srcloc !14778
  call void @llvm.dbg.value(metadata i32 1, metadata !15735, metadata !DIExpression()), !dbg !15744
  call void @llvm.dbg.value(metadata i32 undef, metadata !15735, metadata !DIExpression()), !dbg !15744
  ret i32 %6, !dbg !15765
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15766 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15771, metadata !DIExpression()), !dbg !15774
  call void @llvm.dbg.value(metadata i64 undef, metadata !15773, metadata !DIExpression()), !dbg !15774
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15770, metadata !DIExpression()), !dbg !15774
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15772, metadata !DIExpression()), !dbg !15774
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15775
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15776
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !15777
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15779, !srcloc !14752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15781
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15781
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #24, !dbg !15777
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15782
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !15783
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15348, metadata !DIExpression()) #24, !dbg !15784
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15353, metadata !DIExpression()) #24, !dbg !15784
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !15786
  ret i32 %9, !dbg !15787
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15788 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15792, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15793, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata i32 0, metadata !15794, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !15799
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15801, !srcloc !14752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15803
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15803
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #24, !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !15796, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15793, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata i32 undef, metadata !15794, metadata !DIExpression()), !dbg !15798
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15804
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15793, metadata !DIExpression()), !dbg !15797
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15807
  br i1 %5, label %7, label %6, !dbg !15809

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15810
  br label %7, !dbg !15812

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15801
  call void @llvm.dbg.value(metadata i32 %8, metadata !14749, metadata !DIExpression()) #24, !dbg !15803
  call void @llvm.dbg.value(metadata i32 %8, metadata !14743, metadata !DIExpression()) #24, !dbg !15799
  call void @llvm.dbg.value(metadata i32 %8, metadata !15796, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.value(metadata i32 undef, metadata !14764, metadata !DIExpression()) #24, !dbg !15813
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !15813
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #24, !dbg !15815
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15817, !srcloc !14778
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15793, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata i32 undef, metadata !15794, metadata !DIExpression()), !dbg !15798
  ret %struct.k_thread* %4, !dbg !15818
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15819 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15821, metadata !DIExpression()), !dbg !15826
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15822, metadata !DIExpression()), !dbg !15826
  call void @llvm.dbg.value(metadata i32 0, metadata !15823, metadata !DIExpression()), !dbg !15827
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !15828
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15830, !srcloc !14752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #24, !dbg !15828
  call void @llvm.dbg.value(metadata i32 undef, metadata !15825, metadata !DIExpression()), !dbg !15827
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15822, metadata !DIExpression()), !dbg !15826
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()), !dbg !15827
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15833
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15822, metadata !DIExpression()), !dbg !15826
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15836
  br i1 %5, label %8, label %6, !dbg !15838

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15839
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15841
  br label %8, !dbg !15842

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15830
  call void @llvm.dbg.value(metadata i32 %9, metadata !14749, metadata !DIExpression()) #24, !dbg !15832
  call void @llvm.dbg.value(metadata i32 %9, metadata !14743, metadata !DIExpression()) #24, !dbg !15828
  call void @llvm.dbg.value(metadata i32 %9, metadata !15825, metadata !DIExpression()), !dbg !15827
  call void @llvm.dbg.value(metadata i32 undef, metadata !14764, metadata !DIExpression()) #24, !dbg !15843
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !15843
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #24, !dbg !15845
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15847, !srcloc !14778
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15822, metadata !DIExpression()), !dbg !15826
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()), !dbg !15827
  ret %struct.k_thread* %4, !dbg !15848
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15849 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15851, metadata !DIExpression()), !dbg !15852
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15707, metadata !DIExpression()) #24, !dbg !15853
  call void @llvm.dbg.value(metadata i32 0, metadata !15708, metadata !DIExpression()) #24, !dbg !15855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !15856
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15858, !srcloc !14752
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15858
  call void @llvm.dbg.value(metadata i32 %3, metadata !14749, metadata !DIExpression()) #24, !dbg !15860
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15860
  call void @llvm.dbg.value(metadata i32 %3, metadata !14743, metadata !DIExpression()) #24, !dbg !15856
  call void @llvm.dbg.value(metadata i32 %3, metadata !15710, metadata !DIExpression()) #24, !dbg !15855
  call void @llvm.dbg.value(metadata i32 undef, metadata !15708, metadata !DIExpression()) #24, !dbg !15855
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15861
  call void @llvm.dbg.value(metadata i32 %3, metadata !14764, metadata !DIExpression()) #24, !dbg !15862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !15862
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !15864
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15866, !srcloc !14778
  call void @llvm.dbg.value(metadata i32 1, metadata !15708, metadata !DIExpression()) #24, !dbg !15855
  call void @llvm.dbg.value(metadata i32 undef, metadata !15708, metadata !DIExpression()) #24, !dbg !15855
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15867
  ret void, !dbg !15868
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15869 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15871, metadata !DIExpression()), !dbg !15877
  call void @llvm.dbg.value(metadata i32 %1, metadata !15872, metadata !DIExpression()), !dbg !15877
  call void @llvm.dbg.value(metadata i8 0, metadata !15873, metadata !DIExpression()), !dbg !15877
  call void @llvm.dbg.value(metadata i32 0, metadata !15874, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !15879
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15881, !srcloc !14752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15883
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15883
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #24, !dbg !15879
  call void @llvm.dbg.value(metadata i32 undef, metadata !15876, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i8 poison, metadata !15873, metadata !DIExpression()), !dbg !15877
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()), !dbg !15878
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15884
  call void @llvm.dbg.value(metadata i1 %6, metadata !15873, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15877
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15887

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14906, metadata !DIExpression()) #24, !dbg !15888
  %11 = load i8, i8* %4, align 1, !dbg !15894
  %12 = and i8 %11, 127, !dbg !15894
  store i8 %12, i8* %4, align 1, !dbg !15894
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14914, metadata !DIExpression()) #24, !dbg !15895
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15897
  store i8 %9, i8* %8, align 2, !dbg !15898
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14923, metadata !DIExpression()) #24, !dbg !15899
  %13 = load i8, i8* %4, align 1, !dbg !15901
  %14 = or i8 %13, -128, !dbg !15901
  store i8 %14, i8* %4, align 1, !dbg !15901
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14930, metadata !DIExpression()) #24, !dbg !15902
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14937, metadata !DIExpression()) #24, !dbg !15904
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14943, metadata !DIExpression()) #24, !dbg !15904
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15906
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14944, metadata !DIExpression()) #24, !dbg !15904
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15907
  br i1 %16, label %26, label %17, !dbg !15906

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14944, metadata !DIExpression()) #24, !dbg !15904
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15908
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14944, metadata !DIExpression()) #24, !dbg !15904
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !15909
  %21 = icmp sgt i32 %20, 0, !dbg !15910
  br i1 %21, label %22, label %23, !dbg !15911

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !15912
  br label %27, !dbg !15913

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !15907
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14944, metadata !DIExpression()) #24, !dbg !15904
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15907
  br i1 %25, label %26, label %17, !dbg !15906, !llvm.loop !15914

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !15916
  br label %27, !dbg !15917

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15918
  br label %29, !dbg !15919

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15920
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15881
  call void @llvm.dbg.value(metadata i32 %30, metadata !14749, metadata !DIExpression()) #24, !dbg !15883
  call void @llvm.dbg.value(metadata i32 %30, metadata !14743, metadata !DIExpression()) #24, !dbg !15879
  call void @llvm.dbg.value(metadata i32 %30, metadata !15876, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i32 undef, metadata !14764, metadata !DIExpression()) #24, !dbg !15922
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !15922
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #24, !dbg !15924
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !15926, !srcloc !14778
  call void @llvm.dbg.value(metadata i8 poison, metadata !15873, metadata !DIExpression()), !dbg !15877
  call void @llvm.dbg.value(metadata i32 undef, metadata !15874, metadata !DIExpression()), !dbg !15878
  ret i1 %6, !dbg !15927
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15928 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15932, metadata !DIExpression()), !dbg !15935
  call void @llvm.dbg.value(metadata i32 %1, metadata !15933, metadata !DIExpression()), !dbg !15935
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15936
  call void @llvm.dbg.value(metadata i1 %3, metadata !15934, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15935
  br i1 %3, label %4, label %12, !dbg !15937

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15939
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15940
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15940
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15940
  %9 = load i8, i8* %8, align 1, !dbg !15940
  %10 = icmp eq i8 %9, 0, !dbg !15941
  br i1 %10, label %11, label %12, !dbg !15942

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15943
  br label %12, !dbg !15945

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15946
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15947 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15949, metadata !DIExpression()), !dbg !15952
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !15953
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15955, !srcloc !14752
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15955
  call void @llvm.dbg.value(metadata i32 %2, metadata !14749, metadata !DIExpression()) #24, !dbg !15957
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15957
  call void @llvm.dbg.value(metadata i32 %2, metadata !14743, metadata !DIExpression()) #24, !dbg !15953
  call void @llvm.dbg.value(metadata i32 %2, metadata !15951, metadata !DIExpression()), !dbg !15952
  call void @llvm.dbg.value(metadata i32 undef, metadata !15949, metadata !DIExpression()), !dbg !15952
  tail call fastcc void @z_sched_lock() #26, !dbg !15958
  call void @llvm.dbg.value(metadata i32 %2, metadata !14764, metadata !DIExpression()) #24, !dbg !15961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !15961
  call void @llvm.dbg.value(metadata i32 %2, metadata !14772, metadata !DIExpression()) #24, !dbg !15963
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15965, !srcloc !14778
  call void @llvm.dbg.value(metadata i32 1, metadata !15949, metadata !DIExpression()), !dbg !15952
  call void @llvm.dbg.value(metadata i32 undef, metadata !15949, metadata !DIExpression()), !dbg !15952
  ret void, !dbg !15966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15967 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15968
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15969
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15969
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15969
  %5 = load i8, i8* %4, align 1, !dbg !15970
  %6 = add i8 %5, -1, !dbg !15970
  store i8 %6, i8* %4, align 1, !dbg !15970
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !15971, !srcloc !15973
  ret void, !dbg !15974
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15975 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15977, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !15981
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15983, !srcloc !14752
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15983
  call void @llvm.dbg.value(metadata i32 %2, metadata !14749, metadata !DIExpression()) #24, !dbg !15985
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15985
  call void @llvm.dbg.value(metadata i32 %2, metadata !14743, metadata !DIExpression()) #24, !dbg !15981
  call void @llvm.dbg.value(metadata i32 %2, metadata !15979, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i32 undef, metadata !15977, metadata !DIExpression()), !dbg !15980
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15986
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15989
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15989
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15989
  %7 = load i8, i8* %6, align 1, !dbg !15990
  %8 = add i8 %7, 1, !dbg !15990
  store i8 %8, i8* %6, align 1, !dbg !15990
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15991
  call void @llvm.dbg.value(metadata i32 %2, metadata !14764, metadata !DIExpression()) #24, !dbg !15992
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !15992
  call void @llvm.dbg.value(metadata i32 %2, metadata !14772, metadata !DIExpression()) #24, !dbg !15994
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15996, !srcloc !14778
  call void @llvm.dbg.value(metadata i32 1, metadata !15977, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i32 undef, metadata !15977, metadata !DIExpression()), !dbg !15980
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15997
  ret void, !dbg !15998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !15999 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16000
  ret %struct.k_thread* %1, !dbg !16001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !16002 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16006, metadata !DIExpression()), !dbg !16011
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16007, metadata !DIExpression()), !dbg !16011
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16012
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16008, metadata !DIExpression()), !dbg !16011
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16013
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16009, metadata !DIExpression()), !dbg !16011
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !16014
  call void @llvm.dbg.value(metadata i32 %5, metadata !16010, metadata !DIExpression()), !dbg !16011
  %6 = icmp sgt i32 %5, 0, !dbg !16015
  br i1 %6, label %17, label %7, !dbg !16017

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16018
  br i1 %8, label %17, label %9, !dbg !16020

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16021
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16021
  %12 = load i32, i32* %11, align 8, !dbg !16021
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16023
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16023
  %15 = load i32, i32* %14, align 8, !dbg !16023
  %16 = icmp ult i32 %12, %15, !dbg !16024
  br label %17, !dbg !16025

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16026
  ret i1 %18, !dbg !16027
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16028 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16045, metadata !DIExpression()), !dbg !16060
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16046, metadata !DIExpression()), !dbg !16060
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16061
  %5 = load i32, i32* %4, align 4, !dbg !16062
  %6 = add nsw i32 %5, 1, !dbg !16062
  store i32 %6, i32* %4, align 4, !dbg !16062
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16063
  store i32 %5, i32* %7, align 8, !dbg !16064
  %8 = load i32, i32* %4, align 4, !dbg !16065
  %9 = icmp eq i32 %8, 0, !dbg !16066
  br i1 %9, label %10, label %32, !dbg !16067

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16068
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16068
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16048, metadata !DIExpression()), !dbg !16068
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16068
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16068
  %14 = load i32, i32* %13, align 4, !dbg !16068
  %15 = shl i32 %14, 2, !dbg !16068
  %16 = alloca i8, i32 %15, align 8, !dbg !16068
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16068
  store i8* %16, i8** %17, align 4, !dbg !16068
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16068
  %19 = alloca i8, i32 %14, align 8, !dbg !16068
  store i8* %19, i8** %18, align 4, !dbg !16068
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16068
  store i32 -1, i32* %20, align 4, !dbg !16068
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16069
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16057, metadata !DIExpression()), !dbg !16070
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16047, metadata !DIExpression()), !dbg !16060
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16071
  br i1 %22, label %23, label %24, !dbg !16068

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16071
  br label %32, !dbg !16072

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16047, metadata !DIExpression()), !dbg !16060
  %26 = load i32, i32* %4, align 4, !dbg !16073
  %27 = add nsw i32 %26, 1, !dbg !16073
  store i32 %27, i32* %4, align 4, !dbg !16073
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16075
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16075
  store i32 %26, i32* %29, align 8, !dbg !16076
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16069
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16057, metadata !DIExpression()), !dbg !16070
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16047, metadata !DIExpression()), !dbg !16060
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16071
  br i1 %31, label %23, label %24, !dbg !16068, !llvm.loop !16077

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16079
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16080
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16081
  ret void, !dbg !16082
}

; Function Attrs: optsize
declare !dbg !16083 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16088 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16091 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16093, metadata !DIExpression()), !dbg !16095
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16094, metadata !DIExpression()), !dbg !16095
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16096
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16097
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16098
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16099
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16099
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16101
  br i1 %7, label %8, label %10, !dbg !16102

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16103
  store i32 0, i32* %9, align 4, !dbg !16105
  br label %10, !dbg !16106

10:                                               ; preds = %8, %2
  ret void, !dbg !16107
}

; Function Attrs: optsize
declare !dbg !16108 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16109 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16113, metadata !DIExpression()), !dbg !16116
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16114, metadata !DIExpression()), !dbg !16116
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16117
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !16118
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16115, metadata !DIExpression()), !dbg !16116
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16114, metadata !DIExpression()), !dbg !16116
  ret %struct.k_thread* %4, !dbg !16119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16120 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16124, metadata !DIExpression()), !dbg !16125
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16126
  ret %struct.rbnode* %2, !dbg !16127
}

; Function Attrs: optsize
declare !dbg !16128 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !16131 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16143, metadata !DIExpression()), !dbg !16147
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16148
  %3 = load i32, i32* %2, align 4, !dbg !16148
  %4 = icmp eq i32 %3, 0, !dbg !16150
  br i1 %4, label %10, label %5, !dbg !16151

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16144, metadata !DIExpression()), !dbg !16147
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16152, !range !3885
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16153
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16145, metadata !DIExpression()), !dbg !16147
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !16154
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16146, metadata !DIExpression()), !dbg !16147
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16144, metadata !DIExpression()), !dbg !16147
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16147
  ret %struct.k_thread* %11, !dbg !16155
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16156 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16160, metadata !DIExpression()), !dbg !16163
  call void @llvm.dbg.value(metadata i32 0, metadata !16161, metadata !DIExpression()), !dbg !16163
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16164
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16162, metadata !DIExpression()), !dbg !16163
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16165
  br i1 %3, label %8, label %4, !dbg !16166

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16167
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16169
  call void @llvm.dbg.value(metadata i32 1, metadata !16161, metadata !DIExpression()), !dbg !16163
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16164
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16162, metadata !DIExpression()), !dbg !16163
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16165
  br i1 %7, label %8, label %4, !dbg !16166, !llvm.loop !16170

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16163
  ret i32 %9, !dbg !16172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !16173 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16175, metadata !DIExpression()), !dbg !16176
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16177
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !16178
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16179
  ret %struct.k_thread* %4, !dbg !16180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !16181 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16190, metadata !DIExpression()), !dbg !16191
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16192
  tail call fastcc void @sys_dlist_init.175(%struct._dnode* noundef nonnull %2) #26, !dbg !16193
  ret void, !dbg !16194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.175(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16195 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16199, metadata !DIExpression()), !dbg !16200
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16201
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16202
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16203
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16204
  ret void, !dbg !16205
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16206 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !16207
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !16208
  ret void, !dbg !16209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !16210 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16215, metadata !DIExpression()), !dbg !16216
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16217
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16217
  %4 = load i8, i8* %3, align 2, !dbg !16217
  %5 = sext i8 %4 to i32, !dbg !16218
  ret i32 %5, !dbg !16219
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16220 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16224, metadata !DIExpression()), !dbg !16227
  call void @llvm.dbg.value(metadata i32 %1, metadata !16225, metadata !DIExpression()), !dbg !16227
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16226, metadata !DIExpression()), !dbg !16227
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16228
  ret void, !dbg !16229
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16230 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !16231
  br i1 %1, label %8, label %2, !dbg !16232

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16233
  br i1 %3, label %8, label %4, !dbg !16234

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16235
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !16236
  %7 = xor i1 %6, true, !dbg !16234
  br label %8, !dbg !16234

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !16238 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16239, !range !7189
  %2 = icmp eq i8 %1, 0, !dbg !16239
  ret i1 %2, !dbg !16240
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16241 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !16244
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16246, !srcloc !14752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !16248
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !16248
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #24, !dbg !16244
  call void @llvm.dbg.value(metadata i32 undef, metadata !16243, metadata !DIExpression()), !dbg !16249
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16250
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14906, metadata !DIExpression()) #24, !dbg !16253
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16255
  %4 = load i8, i8* %3, align 1, !dbg !16256
  %5 = and i8 %4, 127, !dbg !16256
  store i8 %5, i8* %3, align 1, !dbg !16256
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14914, metadata !DIExpression()) #24, !dbg !16257
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16259
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16260
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14923, metadata !DIExpression()) #24, !dbg !16261
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16263
  %8 = load i8, i8* %7, align 1, !dbg !16264
  %9 = or i8 %8, -128, !dbg !16264
  store i8 %9, i8* %7, align 1, !dbg !16264
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14930, metadata !DIExpression()) #24, !dbg !16265
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14937, metadata !DIExpression()) #24, !dbg !16267
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14943, metadata !DIExpression()) #24, !dbg !16267
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16269
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14944, metadata !DIExpression()) #24, !dbg !16267
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16270
  br i1 %11, label %22, label %12, !dbg !16269

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14944, metadata !DIExpression()) #24, !dbg !16267
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16271
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14944, metadata !DIExpression()) #24, !dbg !16267
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16272
  %16 = icmp sgt i32 %15, 0, !dbg !16273
  br i1 %16, label %17, label %19, !dbg !16274

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16275
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16276
  br label %24, !dbg !16277

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16270
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14944, metadata !DIExpression()) #24, !dbg !16267
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16270
  br i1 %21, label %22, label %12, !dbg !16269, !llvm.loop !16278

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16280
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16281
  br label %24, !dbg !16282

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16246
  call void @llvm.dbg.value(metadata i32 %25, metadata !14749, metadata !DIExpression()) #24, !dbg !16248
  call void @llvm.dbg.value(metadata i32 %25, metadata !14743, metadata !DIExpression()) #24, !dbg !16244
  call void @llvm.dbg.value(metadata i32 %25, metadata !16243, metadata !DIExpression()), !dbg !16249
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16283
  call void @llvm.dbg.value(metadata i32 undef, metadata !15348, metadata !DIExpression()) #24, !dbg !16284
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15353, metadata !DIExpression()) #24, !dbg !16284
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16286
  ret void, !dbg !16287
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16288 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16292, metadata !DIExpression()), !dbg !16295
  %3 = icmp eq i64 %2, -1, !dbg !16296
  br i1 %3, label %4, label %6, !dbg !16298

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16299
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !16301
  br label %11, !dbg !16302

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16293, metadata !DIExpression()), !dbg !16295
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !16303
  %8 = sext i32 %7 to i64, !dbg !16303
  call void @llvm.dbg.value(metadata i64 %8, metadata !16293, metadata !DIExpression()), !dbg !16295
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !16304
  %10 = trunc i64 %9 to i32, !dbg !16304
  call void @llvm.dbg.value(metadata i32 %10, metadata !16294, metadata !DIExpression()), !dbg !16295
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16295
  ret i32 %12, !dbg !16305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16306 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16310, metadata !DIExpression()), !dbg !16311
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16312, !srcloc !16314
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !16315
  ret void, !dbg !16316
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16317 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16321, metadata !DIExpression()), !dbg !16325
  %2 = icmp eq i64 %0, 0, !dbg !16326
  br i1 %2, label %3, label %4, !dbg !16328

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !16329
  br label %29, !dbg !16331

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16323, metadata !DIExpression()), !dbg !16325
  %5 = icmp sgt i64 %0, -3, !dbg !16332
  br i1 %5, label %6, label %10, !dbg !16334

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16335
  %8 = trunc i64 %0 to i32, !dbg !16337
  %9 = add i32 %7, %8, !dbg !16337
  call void @llvm.dbg.value(metadata i32 %9, metadata !16322, metadata !DIExpression()), !dbg !16325
  br label %13, !dbg !16338

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16339
  %12 = sub i32 -2, %11, !dbg !16339
  call void @llvm.dbg.value(metadata i32 %12, metadata !16322, metadata !DIExpression()), !dbg !16325
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16341
  call void @llvm.dbg.value(metadata i32 %14, metadata !16322, metadata !DIExpression()), !dbg !16325
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !16342
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16344, !srcloc !14752
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16344
  call void @llvm.dbg.value(metadata i32 %16, metadata !14749, metadata !DIExpression()) #24, !dbg !16346
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !16346
  call void @llvm.dbg.value(metadata i32 %16, metadata !14743, metadata !DIExpression()) #24, !dbg !16342
  call void @llvm.dbg.value(metadata i32 %16, metadata !16324, metadata !DIExpression()), !dbg !16325
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16347
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16348
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !16349
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16350
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16351
  tail call fastcc void @z_add_thread_timeout.164(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !16351
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16352
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !16353
  call void @llvm.dbg.value(metadata i32 %16, metadata !15348, metadata !DIExpression()) #24, !dbg !16354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15353, metadata !DIExpression()) #24, !dbg !16354
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !16356
  %22 = zext i32 %14 to i64, !dbg !16357
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16358
  %24 = zext i32 %23 to i64, !dbg !16358
  %25 = sub nsw i64 %22, %24, !dbg !16359
  call void @llvm.dbg.value(metadata i64 %25, metadata !16321, metadata !DIExpression()), !dbg !16325
  %26 = icmp sgt i64 %25, 0, !dbg !16360
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16360
  %28 = trunc i64 %27 to i32, !dbg !16360
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16325
  ret i32 %30, !dbg !16361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16362 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16364, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata i64 %0, metadata !14784, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i32 10000, metadata !14787, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i32 1000, metadata !14788, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i8 1, metadata !14789, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i1 false, metadata !14790, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16366
  call void @llvm.dbg.value(metadata i1 false, metadata !14791, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16366
  call void @llvm.dbg.value(metadata i8 0, metadata !14792, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i1 false, metadata !14793, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16366
  call void @llvm.dbg.value(metadata i1 true, metadata !14794, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16366
  call void @llvm.dbg.value(metadata i64 0, metadata !14795, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i64 0, metadata !14795, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i64 %0, metadata !14784, metadata !DIExpression()), !dbg !16366
  %2 = udiv i64 %0, 10, !dbg !16368
  ret i64 %2, !dbg !16372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16373 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16374, !srcloc !16376
  tail call void @z_impl_k_yield() #26, !dbg !16377
  ret void, !dbg !16378
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16383, metadata !DIExpression()), !dbg !16385
  %2 = sext i32 %0 to i64, !dbg !16386
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !16387
  call void @llvm.dbg.value(metadata i64 %3, metadata !16384, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16385
  %4 = shl i64 %3, 32, !dbg !16388
  %5 = ashr exact i64 %4, 32, !dbg !16388
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !16389
  call void @llvm.dbg.value(metadata i32 %6, metadata !16384, metadata !DIExpression()), !dbg !16385
  %7 = sext i32 %6 to i64, !dbg !16390
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !16391
  %9 = trunc i64 %8 to i32, !dbg !16391
  ret i32 %9, !dbg !16392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !16393 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16395, metadata !DIExpression()), !dbg !16396
  call void @llvm.dbg.value(metadata i64 %0, metadata !14784, metadata !DIExpression()), !dbg !16397
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14787, metadata !DIExpression()), !dbg !16397
  call void @llvm.dbg.value(metadata i32 10000, metadata !14788, metadata !DIExpression()), !dbg !16397
  call void @llvm.dbg.value(metadata i8 1, metadata !14789, metadata !DIExpression()), !dbg !16397
  call void @llvm.dbg.value(metadata i1 false, metadata !14790, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16397
  call void @llvm.dbg.value(metadata i1 true, metadata !14791, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16397
  call void @llvm.dbg.value(metadata i8 0, metadata !14792, metadata !DIExpression()), !dbg !16397
  call void @llvm.dbg.value(metadata i1 false, metadata !14793, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16397
  call void @llvm.dbg.value(metadata i1 true, metadata !14794, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16397
  call void @llvm.dbg.value(metadata i64 0, metadata !14795, metadata !DIExpression()), !dbg !16397
  call void @llvm.dbg.value(metadata i64 0, metadata !14795, metadata !DIExpression()), !dbg !16397
  %2 = add i64 %0, 99, !dbg !16399
  call void @llvm.dbg.value(metadata i64 %2, metadata !14784, metadata !DIExpression()), !dbg !16397
  %3 = udiv i64 %2, 100, !dbg !16400
  ret i64 %3, !dbg !16401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16402 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16404, metadata !DIExpression()), !dbg !16405
  call void @llvm.dbg.value(metadata i64 %0, metadata !14784, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i32 10000, metadata !14787, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14788, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i8 1, metadata !14789, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i1 false, metadata !14790, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16406
  call void @llvm.dbg.value(metadata i1 false, metadata !14791, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16406
  call void @llvm.dbg.value(metadata i8 0, metadata !14792, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i1 true, metadata !14793, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16406
  call void @llvm.dbg.value(metadata i1 false, metadata !14794, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16406
  call void @llvm.dbg.value(metadata i64 0, metadata !14795, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i64 0, metadata !14795, metadata !DIExpression()), !dbg !16406
  %2 = mul i64 %0, 100, !dbg !16408
  ret i64 %2, !dbg !16410
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16411 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16413, metadata !DIExpression()), !dbg !16414
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !16415
  br i1 %2, label %14, label %3, !dbg !16417

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16418
  %5 = icmp slt i32 %4, 0, !dbg !16420
  br i1 %5, label %6, label %10, !dbg !16421

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16422
  %8 = load i8, i8* %7, align 1, !dbg !16422
  %9 = icmp eq i8 %8, 16, !dbg !16425
  br i1 %9, label %10, label %14, !dbg !16426

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16427
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16428
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16429, !srcloc !15388
  call void @llvm.dbg.value(metadata i32 %11, metadata !15384, metadata !DIExpression()) #24, !dbg !16433
  %12 = icmp eq i32 %11, 0, !dbg !16434
  br i1 %12, label %13, label %14, !dbg !16435

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16436
  br label %14, !dbg !16438

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16440 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16442, metadata !DIExpression()), !dbg !16443
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16444
  %3 = load i8, i8* %2, align 1, !dbg !16444
  %4 = and i8 %3, 2, !dbg !16445
  %5 = icmp ne i8 %4, 0, !dbg !16446
  ret i1 %5, !dbg !16447
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !16448 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16453
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16452, metadata !DIExpression()), !dbg !16454
  ret %struct.k_thread* %1, !dbg !16455
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16456 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16457, !srcloc !15388
  call void @llvm.dbg.value(metadata i32 %1, metadata !15384, metadata !DIExpression()) #24, !dbg !16460
  %2 = icmp eq i32 %1, 0, !dbg !16461
  br i1 %2, label %3, label %8, !dbg !16462

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16463
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !16464
  %6 = icmp ne i32 %5, 0, !dbg !16462
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16465
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16466 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16468, metadata !DIExpression()), !dbg !16470
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !16471
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16473, !srcloc !14752
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16473
  call void @llvm.dbg.value(metadata i32 %3, metadata !14749, metadata !DIExpression()) #24, !dbg !16475
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !16475
  call void @llvm.dbg.value(metadata i32 %3, metadata !14743, metadata !DIExpression()) #24, !dbg !16471
  call void @llvm.dbg.value(metadata i32 %3, metadata !16469, metadata !DIExpression()), !dbg !16470
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16476
  %5 = load i8, i8* %4, align 4, !dbg !16476
  %6 = and i8 %5, 1, !dbg !16478
  %7 = icmp eq i8 %6, 0, !dbg !16479
  br i1 %7, label %9, label %8, !dbg !16480

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14764, metadata !DIExpression()) #24, !dbg !16481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !16481
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !16484
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16486, !srcloc !14778
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !16487, !srcloc !16489
  br label %24, !dbg !16490

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16491
  %11 = load i8, i8* %10, align 1, !dbg !16491
  %12 = and i8 %11, 8, !dbg !16493
  %13 = icmp eq i8 %12, 0, !dbg !16494
  br i1 %13, label %15, label %14, !dbg !16495

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14764, metadata !DIExpression()) #24, !dbg !16496
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !16496
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !16499
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16501, !srcloc !14778
  br label %24, !dbg !16502

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !16503
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16504
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16506
  br i1 %17, label %18, label %23, !dbg !16507

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16508, !srcloc !15388
  call void @llvm.dbg.value(metadata i32 %19, metadata !15384, metadata !DIExpression()) #24, !dbg !16511
  %20 = icmp eq i32 %19, 0, !dbg !16512
  br i1 %20, label %21, label %23, !dbg !16513

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15348, metadata !DIExpression()) #24, !dbg !16514
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15353, metadata !DIExpression()) #24, !dbg !16514
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16517
  br label %23, !dbg !16518

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14764, metadata !DIExpression()) #24, !dbg !16519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !16519
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !16521
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16523, !srcloc !14778
  br label %24, !dbg !16524

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16525 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16527, metadata !DIExpression()), !dbg !16528
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16529
  %3 = load i8, i8* %2, align 1, !dbg !16529
  %4 = and i8 %3, 8, !dbg !16531
  %5 = icmp eq i8 %4, 0, !dbg !16532
  br i1 %5, label %6, label %20, !dbg !16533

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16534
  %8 = or i8 %7, 8, !dbg !16534
  store i8 %8, i8* %2, align 1, !dbg !16534
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !16536
  br i1 %9, label %10, label %12, !dbg !16538

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14906, metadata !DIExpression()) #24, !dbg !16539
  %11 = and i8 %8, 95, !dbg !16542
  store i8 %11, i8* %2, align 1, !dbg !16542
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14914, metadata !DIExpression()) #24, !dbg !16543
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16545
  br label %12, !dbg !16546

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16547
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16547
  %15 = icmp eq %union.anon* %14, null, !dbg !16549
  br i1 %15, label %17, label %16, !dbg !16550

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16551
  br label %17, !dbg !16553

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16554
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16555
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !16556
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16557
  br label %20, !dbg !16558

20:                                               ; preds = %17, %1
  ret void, !dbg !16559
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16560 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16564, metadata !DIExpression()), !dbg !16566
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16567
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16565, metadata !DIExpression()), !dbg !16566
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16568
  br i1 %3, label %10, label %4, !dbg !16569

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16570
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16572
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16573, metadata !DIExpression()), !dbg !16579
  call void @llvm.dbg.value(metadata i32 0, metadata !16578, metadata !DIExpression()), !dbg !16579
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16581
  store i32 0, i32* %7, align 4, !dbg !16582
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16583
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16567
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16565, metadata !DIExpression()), !dbg !16566
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16568
  br i1 %9, label %10, label %4, !dbg !16569, !llvm.loop !16584

10:                                               ; preds = %4, %1
  ret void, !dbg !16586
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16587 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16592, metadata !DIExpression()), !dbg !16595
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16591, metadata !DIExpression()), !dbg !16595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !16596
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16598, !srcloc !14752
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16598
  call void @llvm.dbg.value(metadata i32 %4, metadata !14749, metadata !DIExpression()) #24, !dbg !16600
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !16600
  call void @llvm.dbg.value(metadata i32 %4, metadata !14743, metadata !DIExpression()) #24, !dbg !16596
  call void @llvm.dbg.value(metadata i32 %4, metadata !16593, metadata !DIExpression()), !dbg !16595
  call void @llvm.dbg.value(metadata i32 0, metadata !16594, metadata !DIExpression()), !dbg !16595
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16601
  %6 = load i8, i8* %5, align 1, !dbg !16601
  %7 = and i8 %6, 8, !dbg !16603
  %8 = icmp eq i8 %7, 0, !dbg !16604
  br i1 %8, label %9, label %24, !dbg !16605

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16592, metadata !DIExpression()), !dbg !16595
  %11 = icmp eq i64 %10, 0, !dbg !16606
  br i1 %11, label %24, label %12, !dbg !16608

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16609
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16611
  br i1 %14, label %24, label %15, !dbg !16612

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16613
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16613
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16614
  %19 = icmp eq %union.anon* %17, %18, !dbg !16615
  br i1 %19, label %24, label %20, !dbg !16616

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16617
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !16619
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16620
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !16621
  call void @llvm.dbg.value(metadata i32 %4, metadata !15348, metadata !DIExpression()) #24, !dbg !16622
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15353, metadata !DIExpression()) #24, !dbg !16622
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !16624
  call void @llvm.dbg.value(metadata i32 %23, metadata !16594, metadata !DIExpression()), !dbg !16595
  br label %26, !dbg !16625

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16626
  call void @llvm.dbg.value(metadata i32 %25, metadata !16594, metadata !DIExpression()), !dbg !16595
  call void @llvm.dbg.value(metadata i32 %4, metadata !14764, metadata !DIExpression()) #24, !dbg !16627
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !16627
  call void @llvm.dbg.value(metadata i32 %4, metadata !14772, metadata !DIExpression()) #24, !dbg !16629
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !16631, !srcloc !14778
  br label %26, !dbg !16632

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16595
  ret i32 %27, !dbg !16633
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16634 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16638, metadata !DIExpression()), !dbg !16646
  call void @llvm.dbg.value(metadata i32 %1, metadata !16639, metadata !DIExpression()), !dbg !16646
  call void @llvm.dbg.value(metadata i8* %2, metadata !16640, metadata !DIExpression()), !dbg !16646
  call void @llvm.dbg.value(metadata i8 0, metadata !16642, metadata !DIExpression()), !dbg !16646
  call void @llvm.dbg.value(metadata i32 0, metadata !16643, metadata !DIExpression()), !dbg !16647
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14737, metadata !DIExpression()) #24, !dbg !16648
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16650, !srcloc !14752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !16652
  call void @llvm.dbg.value(metadata i32 undef, metadata !14750, metadata !DIExpression()) #24, !dbg !16652
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #24, !dbg !16648
  call void @llvm.dbg.value(metadata i32 undef, metadata !16645, metadata !DIExpression()), !dbg !16647
  call void @llvm.dbg.value(metadata i8 poison, metadata !16642, metadata !DIExpression()), !dbg !16646
  call void @llvm.dbg.value(metadata i32 undef, metadata !16643, metadata !DIExpression()), !dbg !16647
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !16653
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16641, metadata !DIExpression()), !dbg !16646
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16656
  br i1 %7, label %12, label %8, !dbg !16658

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16659, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata i32 %1, metadata !16665, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata i8* %2, metadata !16666, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16573, metadata !DIExpression()), !dbg !16670
  call void @llvm.dbg.value(metadata i32 %1, metadata !16578, metadata !DIExpression()), !dbg !16670
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16672
  store i32 %1, i32* %9, align 4, !dbg !16673
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16674
  store i8* %2, i8** %10, align 4, !dbg !16675
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16676
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16677
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !16678
  call void @llvm.dbg.value(metadata i8 1, metadata !16642, metadata !DIExpression()), !dbg !16646
  br label %12, !dbg !16679

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16650
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16650
  call void @llvm.dbg.value(metadata i32 %14, metadata !14749, metadata !DIExpression()) #24, !dbg !16652
  call void @llvm.dbg.value(metadata i32 %14, metadata !14743, metadata !DIExpression()) #24, !dbg !16648
  call void @llvm.dbg.value(metadata i32 %14, metadata !16645, metadata !DIExpression()), !dbg !16647
  call void @llvm.dbg.value(metadata i8 poison, metadata !16642, metadata !DIExpression()), !dbg !16646
  call void @llvm.dbg.value(metadata i32 undef, metadata !14764, metadata !DIExpression()) #24, !dbg !16680
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14769, metadata !DIExpression()) #24, !dbg !16680
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #24, !dbg !16682
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !16684, !srcloc !14778
  call void @llvm.dbg.value(metadata i32 undef, metadata !16643, metadata !DIExpression()), !dbg !16647
  ret i1 %13, !dbg !16685
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16686 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16692, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i64 undef, metadata !16694, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16691, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16693, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i8** %4, metadata !16695, metadata !DIExpression()), !dbg !16697
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16698
  call void @llvm.dbg.value(metadata i32 %6, metadata !16696, metadata !DIExpression()), !dbg !16697
  %7 = icmp eq i8** %4, null, !dbg !16699
  br i1 %7, label %12, label %8, !dbg !16701

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16702
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16704
  %11 = load i8*, i8** %10, align 4, !dbg !16704
  store i8* %11, i8** %4, align 4, !dbg !16705
  br label %12, !dbg !16706

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16707
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16708 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16710
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16711
  ret void, !dbg !16712
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16713 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16723, metadata !DIExpression()), !dbg !16740
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16721, metadata !DIExpression()), !dbg !16740
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16722, metadata !DIExpression()), !dbg !16740
  %5 = icmp eq i64 %4, -1, !dbg !16741
  br i1 %5, label %55, label %6, !dbg !16743

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16744
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16745
  call void @llvm.dbg.value(metadata i32 0, metadata !16724, metadata !DIExpression()), !dbg !16746
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !16754
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16756, !srcloc !16762
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16756
  call void @llvm.dbg.value(metadata i32 %9, metadata !16759, metadata !DIExpression()) #24, !dbg !16763
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !16763
  call void @llvm.dbg.value(metadata i32 %9, metadata !16753, metadata !DIExpression()) #24, !dbg !16754
  call void @llvm.dbg.value(metadata i32 %9, metadata !16730, metadata !DIExpression()), !dbg !16746
  call void @llvm.dbg.value(metadata i32 undef, metadata !16724, metadata !DIExpression()), !dbg !16746
  %10 = icmp slt i64 %4, -1, !dbg !16764
  br i1 %10, label %11, label %17, !dbg !16765

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16766
  %13 = add i64 %4, %12, !dbg !16767
  %14 = sub i64 -2, %13, !dbg !16767
  call void @llvm.dbg.value(metadata i64 %14, metadata !16734, metadata !DIExpression()), !dbg !16768
  %15 = icmp sgt i64 %14, 1, !dbg !16769
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16769
  br label %22, !dbg !16770

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16771
  %19 = tail call fastcc i32 @elapsed.188() #26, !dbg !16773
  %20 = sext i32 %19 to i64, !dbg !16773
  %21 = add nsw i64 %18, %20, !dbg !16774
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16775
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16776
  store i64 %23, i64* %24, align 8, !dbg !16777
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !16778
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16731, metadata !DIExpression()), !dbg !16780
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16781
  br i1 %26, label %42, label %27, !dbg !16781

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16782
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16731, metadata !DIExpression()), !dbg !16780
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16786
  %31 = load i64, i64* %30, align 8, !dbg !16786
  %32 = icmp slt i64 %28, %31, !dbg !16787
  br i1 %32, label %33, label %38, !dbg !16788

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16786
  %35 = sub nsw i64 %31, %28, !dbg !16789
  store i64 %35, i64* %34, align 8, !dbg !16789
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16791
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16792
  tail call fastcc void @sys_dlist_insert.189(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !16793
  br label %44, !dbg !16794

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16795
  store i64 %39, i64* %24, align 8, !dbg !16795
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !16796
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16731, metadata !DIExpression()), !dbg !16780
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16781
  br i1 %41, label %42, label %27, !dbg !16781, !llvm.loop !16797

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16799
  tail call fastcc void @sys_dlist_append.190(%struct._dnode* noundef %43) #26, !dbg !16802
  br label %44, !dbg !16803

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !16804
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16805
  br i1 %46, label %47, label %54, !dbg !16806

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !16807
  call void @llvm.dbg.value(metadata i32 %48, metadata !16737, metadata !DIExpression()), !dbg !16808
  %49 = icmp ne i32 %48, 0, !dbg !16809
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16811
  br i1 %52, label %54, label %53, !dbg !16811

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !16812
  br label %54, !dbg !16814

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16815, metadata !DIExpression()) #24, !dbg !16821
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !16821
  call void @llvm.dbg.value(metadata i32 %9, metadata !16823, metadata !DIExpression()) #24, !dbg !16826
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !16828, !srcloc !16829
  call void @llvm.dbg.value(metadata i32 undef, metadata !16724, metadata !DIExpression()), !dbg !16746
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16830
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.188() unnamed_addr #1 !dbg !16831 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16834
  %2 = icmp eq i32 %1, 0, !dbg !16835
  br i1 %2, label %3, label %5, !dbg !16834

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16836
  br label %5, !dbg !16834

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16834
  ret i32 %6, !dbg !16837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !16838 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.193() #26, !dbg !16844
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16842, metadata !DIExpression()), !dbg !16845
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16846
  ret %struct._timeout* %2, !dbg !16847
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.189(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !16848 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16852, metadata !DIExpression()), !dbg !16856
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16853, metadata !DIExpression()), !dbg !16856
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16857
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16857
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16854, metadata !DIExpression()), !dbg !16856
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16858
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16859
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16860
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16861
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16862
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16863
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16864
  ret void, !dbg !16865
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !16866 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16870, metadata !DIExpression()), !dbg !16872
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16873
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.191(%struct._dnode* noundef %2) #26, !dbg !16874
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16871, metadata !DIExpression()), !dbg !16872
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16875
  ret %struct._timeout* %4, !dbg !16876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.190(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16877 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16882, metadata !DIExpression()), !dbg !16885
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16883, metadata !DIExpression()), !dbg !16885
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16886
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16884, metadata !DIExpression()), !dbg !16885
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16887
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16888
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16889
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16890
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16891
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16892
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16893
  ret void, !dbg !16894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16895 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !16900
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16897, metadata !DIExpression()), !dbg !16901
  %2 = tail call fastcc i32 @elapsed.188() #26, !dbg !16902
  call void @llvm.dbg.value(metadata i32 %2, metadata !16898, metadata !DIExpression()), !dbg !16901
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16903
  br i1 %3, label %14, label %4, !dbg !16905

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16906
  %6 = load i64, i64* %5, align 8, !dbg !16906
  %7 = sext i32 %2 to i64, !dbg !16907
  %8 = sub nsw i64 %6, %7, !dbg !16908
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16909
  br i1 %9, label %14, label %10, !dbg !16910

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16911
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16911
  %13 = trunc i64 %12 to i32, !dbg !16911
  call void @llvm.dbg.value(metadata i32 %13, metadata !16899, metadata !DIExpression()), !dbg !16901
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16913
  call void @llvm.dbg.value(metadata i32 %15, metadata !16899, metadata !DIExpression()), !dbg !16901
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16914
  %17 = icmp ne i32 %16, 0, !dbg !16916
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16917
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16917
  call void @llvm.dbg.value(metadata i32 %20, metadata !16899, metadata !DIExpression()), !dbg !16901
  ret i32 %20, !dbg !16918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.191(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16919 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16923, metadata !DIExpression()), !dbg !16925
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16924, metadata !DIExpression()), !dbg !16925
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16926
  br i1 %2, label %5, label %3, !dbg !16927

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.192(%struct._dnode* noundef nonnull %0) #26, !dbg !16928
  br label %5, !dbg !16927

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16927
  ret %struct._dnode* %6, !dbg !16929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.192(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16930 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16932, metadata !DIExpression()), !dbg !16934
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16933, metadata !DIExpression()), !dbg !16934
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16935
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16936
  br i1 %3, label %7, label %4, !dbg !16937

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16938
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16938
  br label %7, !dbg !16937

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16937
  ret %struct._dnode* %8, !dbg !16939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.193() unnamed_addr #5 !dbg !16940 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16944, metadata !DIExpression()), !dbg !16945
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.194() #26, !dbg !16946
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16946
  ret %struct._dnode* %3, !dbg !16947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.194() unnamed_addr #5 !dbg !16948 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16952, metadata !DIExpression()), !dbg !16953
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16954
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16955
  ret i1 %2, !dbg !16956
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16957 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16961, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata i32 -22, metadata !16962, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata i32 0, metadata !16963, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !16968
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16970, !srcloc !16762
  call void @llvm.dbg.value(metadata i32 undef, metadata !16759, metadata !DIExpression()) #24, !dbg !16972
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !16972
  call void @llvm.dbg.value(metadata i32 undef, metadata !16753, metadata !DIExpression()) #24, !dbg !16968
  call void @llvm.dbg.value(metadata i32 undef, metadata !16965, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata i32 -22, metadata !16962, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()), !dbg !16967
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16962, metadata !DIExpression()), !dbg !16966
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.197(%struct._dnode* noundef %3) #26, !dbg !16973
  br i1 %4, label %5, label %6, !dbg !16977

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !16978
  call void @llvm.dbg.value(metadata i32 0, metadata !16962, metadata !DIExpression()), !dbg !16966
  br label %6, !dbg !16980

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16966
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16970
  call void @llvm.dbg.value(metadata i32 %8, metadata !16759, metadata !DIExpression()) #24, !dbg !16972
  call void @llvm.dbg.value(metadata i32 %8, metadata !16753, metadata !DIExpression()) #24, !dbg !16968
  call void @llvm.dbg.value(metadata i32 %8, metadata !16965, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata i32 %7, metadata !16962, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata i32 undef, metadata !16815, metadata !DIExpression()) #24, !dbg !16981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !16981
  call void @llvm.dbg.value(metadata i32 undef, metadata !16823, metadata !DIExpression()) #24, !dbg !16983
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !16985, !srcloc !16829
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()), !dbg !16967
  ret i32 %7, !dbg !16986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.197(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16987 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16993, metadata !DIExpression()), !dbg !16994
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16995
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16995
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16996
  ret i1 %4, !dbg !16997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !16998 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17000, metadata !DIExpression()), !dbg !17001
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !17002
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17004
  br i1 %3, label %10, label %4, !dbg !17005

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17006
  %6 = load i64, i64* %5, align 8, !dbg !17006
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17008
  %8 = load i64, i64* %7, align 8, !dbg !17009
  %9 = add nsw i64 %8, %6, !dbg !17009
  store i64 %9, i64* %7, align 8, !dbg !17009
  br label %10, !dbg !17010

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17011
  tail call fastcc void @sys_dlist_remove.198(%struct._dnode* noundef %11) #26, !dbg !17012
  ret void, !dbg !17013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.198(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !17014 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17018, metadata !DIExpression()), !dbg !17021
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17022
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17022
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17019, metadata !DIExpression()), !dbg !17021
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17023
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17023
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17020, metadata !DIExpression()), !dbg !17021
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17024
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17025
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17026
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17027
  tail call fastcc void @sys_dnode_init.199(%struct._dnode* noundef %0) #26, !dbg !17028
  ret void, !dbg !17029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.199(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !17030 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17032, metadata !DIExpression()), !dbg !17033
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17034
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17035
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17036
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17037
  ret void, !dbg !17038
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17039 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17045, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata i64 0, metadata !17046, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata i32 0, metadata !17047, metadata !DIExpression()), !dbg !17051
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !17052
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17054, !srcloc !16762
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17054
  call void @llvm.dbg.value(metadata i32 %3, metadata !16759, metadata !DIExpression()) #24, !dbg !17056
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !17056
  call void @llvm.dbg.value(metadata i32 %3, metadata !16753, metadata !DIExpression()) #24, !dbg !17052
  call void @llvm.dbg.value(metadata i32 %3, metadata !17049, metadata !DIExpression()), !dbg !17051
  call void @llvm.dbg.value(metadata i64 0, metadata !17046, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata i32 undef, metadata !17047, metadata !DIExpression()), !dbg !17051
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17057
  call void @llvm.dbg.value(metadata i64 %4, metadata !17046, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata i32 %3, metadata !16815, metadata !DIExpression()) #24, !dbg !17060
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !17060
  call void @llvm.dbg.value(metadata i32 %3, metadata !16823, metadata !DIExpression()) #24, !dbg !17062
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17064, !srcloc !16829
  call void @llvm.dbg.value(metadata i32 undef, metadata !17047, metadata !DIExpression()), !dbg !17051
  ret i64 %4, !dbg !17065
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17066 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17068, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.value(metadata i64 0, metadata !17069, metadata !DIExpression()), !dbg !17072
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.200(%struct._timeout* noundef %0) #26, !dbg !17073
  br i1 %2, label %21, label %3, !dbg !17075

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !17076
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17070, metadata !DIExpression()), !dbg !17077
  call void @llvm.dbg.value(metadata i64 0, metadata !17069, metadata !DIExpression()), !dbg !17072
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17078
  br i1 %5, label %16, label %6, !dbg !17080

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17070, metadata !DIExpression()), !dbg !17077
  call void @llvm.dbg.value(metadata i64 %8, metadata !17069, metadata !DIExpression()), !dbg !17072
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17081
  %10 = load i64, i64* %9, align 8, !dbg !17081
  %11 = add nsw i64 %10, %8, !dbg !17083
  call void @llvm.dbg.value(metadata i64 %11, metadata !17069, metadata !DIExpression()), !dbg !17072
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17084
  br i1 %12, label %16, label %13, !dbg !17086

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !17087
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17070, metadata !DIExpression()), !dbg !17077
  call void @llvm.dbg.value(metadata i64 %11, metadata !17069, metadata !DIExpression()), !dbg !17072
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17078
  br i1 %15, label %16, label %6, !dbg !17080, !llvm.loop !17088

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17072
  call void @llvm.dbg.value(metadata i64 %17, metadata !17069, metadata !DIExpression()), !dbg !17072
  %18 = tail call fastcc i32 @elapsed.188() #26, !dbg !17090
  %19 = sext i32 %18 to i64, !dbg !17090
  %20 = sub nsw i64 %17, %19, !dbg !17091
  br label %21, !dbg !17092

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17072
  ret i64 %22, !dbg !17093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.200(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17094 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17098, metadata !DIExpression()), !dbg !17099
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17100
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.197(%struct._dnode* noundef %2) #26, !dbg !17101
  %4 = xor i1 %3, true, !dbg !17102
  ret i1 %4, !dbg !17103
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17104 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17106, metadata !DIExpression()), !dbg !17111
  call void @llvm.dbg.value(metadata i64 0, metadata !17107, metadata !DIExpression()), !dbg !17111
  call void @llvm.dbg.value(metadata i32 0, metadata !17108, metadata !DIExpression()), !dbg !17112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !17113
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17115, !srcloc !16762
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17115
  call void @llvm.dbg.value(metadata i32 %3, metadata !16759, metadata !DIExpression()) #24, !dbg !17117
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !17117
  call void @llvm.dbg.value(metadata i32 %3, metadata !16753, metadata !DIExpression()) #24, !dbg !17113
  call void @llvm.dbg.value(metadata i32 %3, metadata !17110, metadata !DIExpression()), !dbg !17112
  call void @llvm.dbg.value(metadata i64 0, metadata !17107, metadata !DIExpression()), !dbg !17111
  call void @llvm.dbg.value(metadata i32 undef, metadata !17108, metadata !DIExpression()), !dbg !17112
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17118
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17121
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17107, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17111
  call void @llvm.dbg.value(metadata i32 %3, metadata !16815, metadata !DIExpression()) #24, !dbg !17122
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !17122
  call void @llvm.dbg.value(metadata i32 %3, metadata !16823, metadata !DIExpression()) #24, !dbg !17124
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17126, !srcloc !16829
  call void @llvm.dbg.value(metadata i32 undef, metadata !17108, metadata !DIExpression()), !dbg !17112
  %6 = add i64 %5, %4, !dbg !17127
  ret i64 %6, !dbg !17128
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17129 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17131, metadata !DIExpression()), !dbg !17135
  call void @llvm.dbg.value(metadata i32 0, metadata !17132, metadata !DIExpression()), !dbg !17136
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !17137
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17139, !srcloc !16762
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17139
  call void @llvm.dbg.value(metadata i32 %2, metadata !16759, metadata !DIExpression()) #24, !dbg !17141
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !17141
  call void @llvm.dbg.value(metadata i32 %2, metadata !16753, metadata !DIExpression()) #24, !dbg !17137
  call void @llvm.dbg.value(metadata i32 %2, metadata !17134, metadata !DIExpression()), !dbg !17136
  call void @llvm.dbg.value(metadata i32 -1, metadata !17131, metadata !DIExpression()), !dbg !17135
  call void @llvm.dbg.value(metadata i32 undef, metadata !17132, metadata !DIExpression()), !dbg !17136
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !17142
  call void @llvm.dbg.value(metadata i32 %3, metadata !17131, metadata !DIExpression()), !dbg !17135
  call void @llvm.dbg.value(metadata i32 %2, metadata !16815, metadata !DIExpression()) #24, !dbg !17145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !17145
  call void @llvm.dbg.value(metadata i32 %2, metadata !16823, metadata !DIExpression()) #24, !dbg !17147
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17149, !srcloc !16829
  call void @llvm.dbg.value(metadata i32 undef, metadata !17132, metadata !DIExpression()), !dbg !17136
  ret i32 %3, !dbg !17150
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17153, metadata !DIExpression()), !dbg !17163
  call void @llvm.dbg.value(metadata i1 %1, metadata !17154, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17163
  call void @llvm.dbg.value(metadata i32 0, metadata !17155, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !17165
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17167, !srcloc !16762
  call void @llvm.dbg.value(metadata i32 undef, metadata !16759, metadata !DIExpression()) #24, !dbg !17169
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !17169
  call void @llvm.dbg.value(metadata i32 undef, metadata !16753, metadata !DIExpression()) #24, !dbg !17165
  call void @llvm.dbg.value(metadata i32 undef, metadata !17157, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata i32 undef, metadata !17155, metadata !DIExpression()), !dbg !17164
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !17170
  call void @llvm.dbg.value(metadata i32 %4, metadata !17158, metadata !DIExpression()), !dbg !17171
  call void @llvm.dbg.value(metadata i1 undef, metadata !17161, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17171
  %5 = icmp slt i32 %4, 2, !dbg !17172
  call void @llvm.dbg.value(metadata i1 %5, metadata !17162, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17171
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17173
  call void @llvm.dbg.value(metadata i1 %6, metadata !17161, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17171
  br i1 %7, label %11, label %8, !dbg !17173

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17175
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17175
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17177
  br label %11, !dbg !17178

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17167
  call void @llvm.dbg.value(metadata i32 %12, metadata !16759, metadata !DIExpression()) #24, !dbg !17169
  call void @llvm.dbg.value(metadata i32 %12, metadata !16753, metadata !DIExpression()) #24, !dbg !17165
  call void @llvm.dbg.value(metadata i32 %12, metadata !17157, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata i32 undef, metadata !16815, metadata !DIExpression()) #24, !dbg !17179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !17179
  call void @llvm.dbg.value(metadata i32 undef, metadata !16823, metadata !DIExpression()) #24, !dbg !17181
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !17183, !srcloc !16829
  call void @llvm.dbg.value(metadata i32 1, metadata !17155, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata i32 undef, metadata !17155, metadata !DIExpression()), !dbg !17164
  ret void, !dbg !17184
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17185 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17189, metadata !DIExpression()), !dbg !17194
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17195
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !17196
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17198, !srcloc !16762
  call void @llvm.dbg.value(metadata i32 undef, metadata !16759, metadata !DIExpression()) #24, !dbg !17200
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !17200
  call void @llvm.dbg.value(metadata i32 undef, metadata !16753, metadata !DIExpression()) #24, !dbg !17196
  call void @llvm.dbg.value(metadata i32 undef, metadata !17190, metadata !DIExpression()), !dbg !17194
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17194
  call void @llvm.dbg.value(metadata i32 undef, metadata !17190, metadata !DIExpression()), !dbg !17194
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !17201
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17202
  br i1 %4, label %28, label %5, !dbg !17203

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17204
  %10 = load i64, i64* %9, align 8, !dbg !17204
  %11 = sext i32 %8 to i64, !dbg !17205
  %12 = icmp sgt i64 %10, %11, !dbg !17206
  br i1 %12, label %26, label %13, !dbg !17207

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17194
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17191, metadata !DIExpression()), !dbg !17208
  %15 = trunc i64 %10 to i32, !dbg !17209
  call void @llvm.dbg.value(metadata i32 %15, metadata !17193, metadata !DIExpression()), !dbg !17208
  %16 = sext i32 %15 to i64, !dbg !17210
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17211
  %18 = add i64 %17, %16, !dbg !17211
  store i64 %18, i64* @curr_tick, align 8, !dbg !17211
  store i64 0, i64* %9, align 8, !dbg !17212
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !17213
  call void @llvm.dbg.value(metadata i32 %14, metadata !16815, metadata !DIExpression()) #24, !dbg !17214
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !17214
  call void @llvm.dbg.value(metadata i32 %14, metadata !16823, metadata !DIExpression()) #24, !dbg !17216
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !17218, !srcloc !16829
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17219
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17219
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17220
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !17221
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17223, !srcloc !16762
  call void @llvm.dbg.value(metadata i32 undef, metadata !16759, metadata !DIExpression()) #24, !dbg !17225
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !17225
  call void @llvm.dbg.value(metadata i32 undef, metadata !16753, metadata !DIExpression()) #24, !dbg !17221
  call void @llvm.dbg.value(metadata i32 undef, metadata !17190, metadata !DIExpression()), !dbg !17194
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17226
  %23 = sub nsw i32 %22, %15, !dbg !17226
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17194
  call void @llvm.dbg.value(metadata i32 undef, metadata !17190, metadata !DIExpression()), !dbg !17194
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !17201
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17202
  br i1 %25, label %28, label %5, !dbg !17203, !llvm.loop !17227

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17229
  store i64 %27, i64* %9, align 8, !dbg !17229
  br label %32, !dbg !17232

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17194
  %31 = sext i32 %30 to i64, !dbg !17233
  br label %32, !dbg !17233

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17233
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17194
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17234
  %37 = add i64 %36, %33, !dbg !17234
  store i64 %37, i64* @curr_tick, align 8, !dbg !17234
  store i32 0, i32* @announce_remaining, align 4, !dbg !17235
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !17236
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17237
  call void @llvm.dbg.value(metadata i32 %35, metadata !16815, metadata !DIExpression()) #24, !dbg !17238
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !17238
  call void @llvm.dbg.value(metadata i32 %35, metadata !16823, metadata !DIExpression()) #24, !dbg !17240
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !17242, !srcloc !16829
  ret void, !dbg !17243
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17244 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17248, metadata !DIExpression()), !dbg !17252
  call void @llvm.dbg.value(metadata i32 0, metadata !17249, metadata !DIExpression()), !dbg !17253
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !17254
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17256, !srcloc !16762
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17256
  call void @llvm.dbg.value(metadata i32 %2, metadata !16759, metadata !DIExpression()) #24, !dbg !17258
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !17258
  call void @llvm.dbg.value(metadata i32 %2, metadata !16753, metadata !DIExpression()) #24, !dbg !17254
  call void @llvm.dbg.value(metadata i32 %2, metadata !17251, metadata !DIExpression()), !dbg !17253
  call void @llvm.dbg.value(metadata i64 0, metadata !17248, metadata !DIExpression()), !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !17249, metadata !DIExpression()), !dbg !17253
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17259
  %4 = tail call fastcc i32 @elapsed.188() #26, !dbg !17262
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17248, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17252
  call void @llvm.dbg.value(metadata i32 %2, metadata !16815, metadata !DIExpression()) #24, !dbg !17263
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !17263
  call void @llvm.dbg.value(metadata i32 %2, metadata !16823, metadata !DIExpression()) #24, !dbg !17265
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17267, !srcloc !16829
  call void @llvm.dbg.value(metadata i32 undef, metadata !17249, metadata !DIExpression()), !dbg !17253
  %5 = sext i32 %4 to i64, !dbg !17262
  %6 = add i64 %3, %5, !dbg !17268
  ret i64 %6, !dbg !17269
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17270 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17271
  %2 = trunc i64 %1 to i32, !dbg !17272
  ret i32 %2, !dbg !17273
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17274 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17275
  ret i64 %1, !dbg !17276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17279, metadata !DIExpression()), !dbg !17286
  %2 = icmp eq i32 %0, 0, !dbg !17287
  br i1 %2, label %10, label %3, !dbg !17289

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17290
  call void @llvm.dbg.value(metadata i32 %4, metadata !17280, metadata !DIExpression()), !dbg !17286
  %5 = mul i32 %0, 84, !dbg !17291
  call void @llvm.dbg.value(metadata i32 %5, metadata !17281, metadata !DIExpression()), !dbg !17286
  br label %6, !dbg !17292

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17293
  call void @llvm.dbg.value(metadata i32 %7, metadata !17282, metadata !DIExpression()), !dbg !17294
  %8 = sub i32 %7, %4, !dbg !17295
  %9 = icmp ult i32 %8, %5, !dbg !17297
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17299 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17300
  ret i32 %1, !dbg !17301
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17302 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17304
  ret i32 %1, !dbg !17305
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17306 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17310, metadata !DIExpression()), !dbg !17312
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17313

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !17314
  br label %14, !dbg !17318

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17311, metadata !DIExpression()), !dbg !17312
  %6 = icmp slt i64 %2, -1, !dbg !17319
  br i1 %6, label %7, label %9, !dbg !17322

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17323
  br label %14, !dbg !17324

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !17326
  %11 = icmp ugt i64 %2, 1, !dbg !17327
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17327
  %13 = add nsw i64 %10, %12, !dbg !17328
  br label %14, !dbg !17329

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17330
  ret i64 %15, !dbg !17331
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17332 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.209, i32 0, i32 0)) #25, !dbg !17334
  ret void, !dbg !17335
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17336 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17338, metadata !DIExpression()), !dbg !17358
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17339, metadata !DIExpression()), !dbg !17359
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !17360

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !17361

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17339, metadata !DIExpression()), !dbg !17359
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17362
  %6 = load i8*, i8** %5, align 4, !dbg !17362
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17366
  %8 = load i32, i32* %7, align 4, !dbg !17366
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !17367
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17368
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !17339, metadata !DIExpression()), !dbg !17359
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17369
  br i1 %10, label %3, label %2, !dbg !17360, !llvm.loop !17371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17373 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17377, metadata !DIExpression()), !dbg !17380
  call void @llvm.dbg.value(metadata i8* %1, metadata !17378, metadata !DIExpression()), !dbg !17380
  call void @llvm.dbg.value(metadata i32 %2, metadata !17379, metadata !DIExpression()), !dbg !17380
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17381
  tail call fastcc void @z_waitq_init.211(%union.anon* noundef nonnull %4) #26, !dbg !17382
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17383
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #25, !dbg !17384
  ret void, !dbg !17385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.211(%union.anon* noundef %0) unnamed_addr #4 !dbg !17386 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17391, metadata !DIExpression()), !dbg !17392
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17393
  tail call fastcc void @sys_dlist_init.212(%struct._dnode* noundef %2) #26, !dbg !17394
  ret void, !dbg !17395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.212(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !17396 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17401, metadata !DIExpression()), !dbg !17402
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17403
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17404
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17405
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17406
  ret void, !dbg !17407
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17408 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17419, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17416, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i32 %1, metadata !17417, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i32 %2, metadata !17418, metadata !DIExpression()), !dbg !17429
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #25, !dbg !17430
  call void @llvm.dbg.value(metadata i64 %6, metadata !17421, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i8* null, metadata !17422, metadata !DIExpression()), !dbg !17429
  %7 = icmp eq i64 %5, -1, !dbg !17431
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17431
  call void @llvm.dbg.value(metadata i64 %8, metadata !17421, metadata !DIExpression()), !dbg !17429
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17432
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17433, metadata !DIExpression()) #24, !dbg !17440
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17442, !srcloc !17448
  call void @llvm.dbg.value(metadata i32 undef, metadata !17445, metadata !DIExpression()) #24, !dbg !17449
  call void @llvm.dbg.value(metadata i32 undef, metadata !17446, metadata !DIExpression()) #24, !dbg !17449
  call void @llvm.dbg.value(metadata i32 undef, metadata !17439, metadata !DIExpression()) #24, !dbg !17440
  call void @llvm.dbg.value(metadata i32 undef, metadata !17423, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i8 0, metadata !17428, metadata !DIExpression()), !dbg !17429
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17422, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i8 0, metadata !17428, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i32 undef, metadata !17423, metadata !DIExpression()), !dbg !17429
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !17450
  call void @llvm.dbg.value(metadata i8* %12, metadata !17422, metadata !DIExpression()), !dbg !17429
  %13 = tail call i64 @sys_clock_tick_get() #25, !dbg !17452
  call void @llvm.dbg.value(metadata i64 %13, metadata !17420, metadata !DIExpression()), !dbg !17429
  %14 = icmp eq i8* %12, null, !dbg !17453
  br i1 %14, label %15, label %31, !dbg !17455

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17423, metadata !DIExpression()), !dbg !17429
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !17455

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17428, metadata !DIExpression()), !dbg !17429
  %20 = sub nsw i64 %8, %18, !dbg !17456
  %21 = icmp slt i64 %20, 1, !dbg !17457
  br i1 %21, label %31, label %22, !dbg !17458

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17429
  call void @llvm.dbg.value(metadata i8 undef, metadata !17428, metadata !DIExpression()), !dbg !17429
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !17459
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !17459
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #25, !dbg !17459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17433, metadata !DIExpression()) #24, !dbg !17460
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17462, !srcloc !17448
  call void @llvm.dbg.value(metadata i32 undef, metadata !17445, metadata !DIExpression()) #24, !dbg !17464
  call void @llvm.dbg.value(metadata i32 undef, metadata !17446, metadata !DIExpression()) #24, !dbg !17464
  call void @llvm.dbg.value(metadata i32 undef, metadata !17439, metadata !DIExpression()) #24, !dbg !17460
  call void @llvm.dbg.value(metadata i32 undef, metadata !17423, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i8* null, metadata !17422, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i32 undef, metadata !17423, metadata !DIExpression()), !dbg !17429
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !17450
  call void @llvm.dbg.value(metadata i8* %28, metadata !17422, metadata !DIExpression()), !dbg !17429
  %29 = tail call i64 @sys_clock_tick_get() #25, !dbg !17452
  call void @llvm.dbg.value(metadata i64 %29, metadata !17420, metadata !DIExpression()), !dbg !17429
  %30 = icmp eq i8* %28, null, !dbg !17453
  br i1 %30, label %17, label %31, !dbg !17455, !llvm.loop !17465

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !17450
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !17429
  call void @llvm.dbg.value(metadata i8* %33, metadata !17422, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i32 %34, metadata !17468, metadata !DIExpression()) #24, !dbg !17474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17473, metadata !DIExpression()) #24, !dbg !17474
  call void @llvm.dbg.value(metadata i32 %34, metadata !17476, metadata !DIExpression()) #24, !dbg !17479
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #24, !dbg !17481, !srcloc !17482
  ret i8* %33, !dbg !17483
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17484 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17490, metadata !DIExpression()), !dbg !17492
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17488, metadata !DIExpression()), !dbg !17492
  call void @llvm.dbg.value(metadata i32 %1, metadata !17489, metadata !DIExpression()), !dbg !17492
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !17493
  call void @llvm.dbg.value(metadata i8* %4, metadata !17491, metadata !DIExpression()), !dbg !17492
  ret i8* %4, !dbg !17494
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17495 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17499, metadata !DIExpression()), !dbg !17502
  call void @llvm.dbg.value(metadata i8* %1, metadata !17500, metadata !DIExpression()), !dbg !17502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17433, metadata !DIExpression()) #24, !dbg !17503
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17505, !srcloc !17448
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17505
  call void @llvm.dbg.value(metadata i32 %4, metadata !17445, metadata !DIExpression()) #24, !dbg !17507
  call void @llvm.dbg.value(metadata i32 undef, metadata !17446, metadata !DIExpression()) #24, !dbg !17507
  call void @llvm.dbg.value(metadata i32 %4, metadata !17439, metadata !DIExpression()) #24, !dbg !17503
  call void @llvm.dbg.value(metadata i32 %4, metadata !17501, metadata !DIExpression()), !dbg !17502
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17508
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #25, !dbg !17509
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17510
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #25, !dbg !17512
  %8 = icmp eq i32 %7, 0, !dbg !17513
  br i1 %8, label %12, label %9, !dbg !17514

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17515
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !17516
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #25, !dbg !17516
  br label %13, !dbg !17518

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !17468, metadata !DIExpression()) #24, !dbg !17519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17473, metadata !DIExpression()) #24, !dbg !17519
  call void @llvm.dbg.value(metadata i32 %4, metadata !17476, metadata !DIExpression()) #24, !dbg !17522
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !17524, !srcloc !17482
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !17525
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!765, !2, !2555, !27, !113, !2557, !2559, !2592, !2629, !122, !177, !2631, !206, !2713, !2724, !2770, !2772, !2800, !2828, !2871, !2942, !2987, !353, !502, !3015, !538, !548, !573, !797, !3020, !933, !1135, !1443, !1707, !3058, !1820, !1910, !3060, !3145, !3209, !1960, !3212, !1966, !2327, !3230, !2347, !2370, !3232, !2485, !3235, !2524}
!llvm.ident = !{!3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237, !3237}
!llvm.module.flags = !{!3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "prompt", scope: !27, file: !105, line: 9, type: !106, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/echo/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/samples/subsys/console/echo/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 400, elements: !109)
!107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!108 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!109 = !{!110}
!110 = !DISubrange(count: 50)
!111 = !DIGlobalVariableExpression(var: !112, expr: !DIExpression())
!112 = distinct !DIGlobalVariable(name: "_char_out", scope: !113, file: !116, line: 54, type: !117, isLocal: false, isDefinition: true)
!113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !114, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !115, splitDebugInlining: false, nameTableKind: None)
!114 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!115 = !{!111}
!116 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!118 = !DISubroutineType(types: !119)
!119 = !{!103, !103}
!120 = !DIGlobalVariableExpression(var: !121, expr: !DIExpression())
!121 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !122, file: !140, line: 56, type: !141, isLocal: true, isDefinition: true, align: 32)
!122 = distinct !DICompileUnit(language: DW_LANG_C99, file: !123, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !124, globals: !139, splitDebugInlining: false, nameTableKind: None)
!123 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!124 = !{!125}
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !127, line: 379, baseType: !128)
!127 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 370, size: 224, elements: !129)
!129 = !{!130, !133, !134, !135, !136, !137, !138}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !128, file: !127, line: 372, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !132)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !128, file: !127, line: 373, baseType: !131, size: 32, offset: 32)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !128, file: !127, line: 374, baseType: !131, size: 32, offset: 64)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !128, file: !127, line: 375, baseType: !131, size: 32, offset: 96)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !128, file: !127, line: 376, baseType: !131, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !128, file: !127, line: 377, baseType: !131, size: 32, offset: 160)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !128, file: !127, line: 378, baseType: !131, size: 32, offset: 192)
!139 = !{!120}
!140 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !{!145, !174}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !142, file: !143, line: 60, baseType: !146, size: 32)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = !DISubroutineType(types: !148)
!148 = !{!103, !149}
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !153)
!152 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!153 = !{!154, !156, !157, !158, !167, !168}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !151, file: !152, line: 380, baseType: !155, size: 32)
!155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !151, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !151, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !151, file: !152, line: 386, baseType: !159, size: 32, offset: 96)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !161)
!161 = !{!162, !165}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !160, file: !152, line: 359, baseType: !163, size: 8)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !164)
!164 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !160, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!166 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !151, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !151, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !171)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !152, line: 43, baseType: !172)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !173)
!173 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !142, file: !143, line: 65, baseType: !149, size: 32, offset: 32)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !177, file: !180, line: 71, type: !181, isLocal: true, isDefinition: true, align: 32)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !179, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!179 = !{!175}
!180 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !182)
!182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !183)
!183 = !{!184, !203}
!184 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !182, file: !143, line: 60, baseType: !185, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!186 = !DISubroutineType(types: !187)
!187 = !{!103, !188}
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !190)
!190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !191)
!191 = !{!192, !193, !194, !195, !201, !202}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !190, file: !152, line: 380, baseType: !155, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !190, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !190, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !190, file: !152, line: 386, baseType: !196, size: 32, offset: 96)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !198)
!198 = !{!199, !200}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !197, file: !152, line: 359, baseType: !163, size: 8)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !197, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !190, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !190, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !182, file: !143, line: 65, baseType: !188, size: 32, offset: 32)
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(name: "console_serial", scope: !206, file: !297, line: 13, type: !306, isLocal: true, isDefinition: true)
!206 = distinct !DICompileUnit(language: DW_LANG_C99, file: !207, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !208, globals: !294, splitDebugInlining: false, nameTableKind: None)
!207 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!208 = !{!209, !102, !103}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !212, line: 336, size: 608, elements: !213)
!212 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !{!214, !234, !238, !242, !255, !260, !266, !272, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !211, file: !212, line: 365, baseType: !215, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 32)
!216 = !DISubroutineType(types: !217)
!217 = !{!103, !218, !233}
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 32)
!219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !220)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !221)
!221 = !{!222, !223, !224, !225, !231, !232}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !220, file: !152, line: 380, baseType: !155, size: 32)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !220, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !220, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !220, file: !152, line: 386, baseType: !226, size: 32, offset: 96)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !228)
!228 = !{!229, !230}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !227, file: !152, line: 359, baseType: !163, size: 8)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !227, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !220, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !220, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !211, file: !212, line: 366, baseType: !235, size: 32, offset: 32)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!236 = !DISubroutineType(types: !237)
!237 = !{null, !218, !164}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !211, file: !212, line: 374, baseType: !239, size: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 32)
!240 = !DISubroutineType(types: !241)
!241 = !{!103, !218}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !211, file: !212, line: 377, baseType: !243, size: 32, offset: 96)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DISubroutineType(types: !245)
!245 = !{!103, !218, !246}
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !248)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !212, line: 122, size: 64, elements: !249)
!249 = !{!250, !251, !252, !253, !254}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !248, file: !212, line: 123, baseType: !132, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !248, file: !212, line: 124, baseType: !163, size: 8, offset: 32)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !248, file: !212, line: 125, baseType: !163, size: 8, offset: 40)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !248, file: !212, line: 126, baseType: !163, size: 8, offset: 48)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !248, file: !212, line: 127, baseType: !163, size: 8, offset: 56)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !211, file: !212, line: 379, baseType: !256, size: 32, offset: 128)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 32)
!257 = !DISubroutineType(types: !258)
!258 = !{!103, !218, !259}
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !211, file: !212, line: 384, baseType: !261, size: 32, offset: 160)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = !DISubroutineType(types: !263)
!263 = !{!103, !218, !264, !103}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !163)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !211, file: !212, line: 393, baseType: !267, size: 32, offset: 192)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = !DISubroutineType(types: !269)
!269 = !{!103, !218, !270, !271}
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !211, file: !212, line: 402, baseType: !273, size: 32, offset: 224)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DISubroutineType(types: !275)
!275 = !{null, !218}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !211, file: !212, line: 405, baseType: !273, size: 32, offset: 256)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !211, file: !212, line: 408, baseType: !239, size: 32, offset: 288)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !211, file: !212, line: 411, baseType: !273, size: 32, offset: 320)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !211, file: !212, line: 414, baseType: !273, size: 32, offset: 352)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !211, file: !212, line: 417, baseType: !239, size: 32, offset: 384)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !211, file: !212, line: 420, baseType: !239, size: 32, offset: 416)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !211, file: !212, line: 423, baseType: !273, size: 32, offset: 448)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !211, file: !212, line: 426, baseType: !273, size: 32, offset: 480)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !211, file: !212, line: 429, baseType: !239, size: 32, offset: 512)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !211, file: !212, line: 432, baseType: !239, size: 32, offset: 544)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !211, file: !212, line: 435, baseType: !287, size: 32, offset: 576)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{null, !218, !290, !102}
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !212, line: 142, baseType: !291)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 32)
!292 = !DISubroutineType(types: !293)
!293 = !{null, !218, !102}
!294 = !{!204, !295, !301}
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "console_rxbuf", scope: !206, file: !297, line: 15, type: !298, isLocal: true, isDefinition: true)
!297 = !DIFile(filename: "zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 512, elements: !299)
!299 = !{!300}
!300 = !DISubrange(count: 64)
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "console_txbuf", scope: !206, file: !297, line: 16, type: !303, isLocal: true, isDefinition: true)
!303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 4096, elements: !304)
!304 = !{!305}
!305 = !DISubrange(count: 512)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !307, line: 18, size: 544, elements: !308)
!307 = !DIFile(filename: "zephyr/include/zephyr/console/tty.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!308 = !{!309, !310, !337, !338, !339, !342, !343, !345, !346, !347, !348, !349, !350}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !306, file: !307, line: 19, baseType: !218, size: 32)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !306, file: !307, line: 21, baseType: !311, size: 128, offset: 32)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !312, line: 2909, size: 128, elements: !313)
!312 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = !{!314, !335, !336}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !311, file: !312, line: 2910, baseType: !315, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !318)
!318 = !{!319}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !317, file: !316, line: 232, baseType: !320, size: 64)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !322)
!321 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !323)
!323 = !{!324, !330}
!324 = !DIDerivedType(tag: DW_TAG_member, scope: !322, file: !321, line: 38, baseType: !325, size: 32)
!325 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !322, file: !321, line: 38, size: 32, elements: !326)
!326 = !{!327, !329}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !325, file: !321, line: 39, baseType: !328, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !325, file: !321, line: 40, baseType: !328, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_member, scope: !322, file: !321, line: 42, baseType: !331, size: 32, offset: 32)
!331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !322, file: !321, line: 42, size: 32, elements: !332)
!332 = !{!333, !334}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !331, file: !321, line: 43, baseType: !328, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !331, file: !321, line: 44, baseType: !328, size: 32)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !311, file: !312, line: 2911, baseType: !32, size: 32, offset: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !311, file: !312, line: 2912, baseType: !32, size: 32, offset: 96)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !306, file: !307, line: 22, baseType: !270, size: 32, offset: 160)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !306, file: !307, line: 23, baseType: !132, size: 32, offset: 192)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !306, file: !307, line: 24, baseType: !340, size: 16, offset: 224)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !341)
!341 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !306, file: !307, line: 24, baseType: !340, size: 16, offset: 240)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !306, file: !307, line: 25, baseType: !344, size: 32, offset: 256)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !306, file: !307, line: 27, baseType: !311, size: 128, offset: 288)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !306, file: !307, line: 28, baseType: !270, size: 32, offset: 416)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !306, file: !307, line: 29, baseType: !132, size: 32, offset: 448)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !306, file: !307, line: 30, baseType: !340, size: 16, offset: 480)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !306, file: !307, line: 30, baseType: !340, size: 16, offset: 496)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !306, file: !307, line: 31, baseType: !344, size: 32, offset: 512)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "static_regions", scope: !353, file: !362, line: 62, type: !498, isLocal: true, isDefinition: true)
!353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !354, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !355, globals: !358, splitDebugInlining: false, nameTableKind: None)
!354 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!355 = !{!356, !103, !132, !102}
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !357, line: 214, baseType: !32)
!357 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!358 = !{!359, !351}
!359 = !DIGlobalVariableExpression(var: !360, expr: !DIExpression())
!360 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !361, file: !362, line: 198, type: !484, isLocal: true, isDefinition: true)
!361 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !362, file: !362, line: 175, type: !363, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !353, retainedNodes: !479)
!362 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!363 = !DISubroutineType(types: !364)
!364 = !{null, !365}
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !368)
!367 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!368 = !{!369, !434, !447, !448, !449, !450, !456, !474}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !366, file: !367, line: 247, baseType: !370, size: 384)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !371)
!371 = !{!372, !399, !406, !407, !408, !419, !420, !421}
!372 = !DIDerivedType(tag: DW_TAG_member, scope: !370, file: !367, line: 60, baseType: !373, size: 64)
!373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !370, file: !367, line: 60, size: 64, elements: !374)
!374 = !{!375, !390}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !373, file: !367, line: 61, baseType: !376, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !377)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !378)
!378 = !{!379, !385}
!379 = !DIDerivedType(tag: DW_TAG_member, scope: !377, file: !321, line: 38, baseType: !380, size: 32)
!380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !377, file: !321, line: 38, size: 32, elements: !381)
!381 = !{!382, !384}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !380, file: !321, line: 39, baseType: !383, size: 32)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !380, file: !321, line: 40, baseType: !383, size: 32)
!385 = !DIDerivedType(tag: DW_TAG_member, scope: !377, file: !321, line: 42, baseType: !386, size: 32, offset: 32)
!386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !377, file: !321, line: 42, size: 32, elements: !387)
!387 = !{!388, !389}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !386, file: !321, line: 43, baseType: !383, size: 32)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !386, file: !321, line: 44, baseType: !383, size: 32)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !373, file: !367, line: 62, baseType: !391, size: 64)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !393)
!392 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !{!394}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !391, file: !392, line: 50, baseType: !395, size: 64)
!395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 64, elements: !397)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!397 = !{!398}
!398 = !DISubrange(count: 2)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !370, file: !367, line: 68, baseType: !400, size: 32, offset: 64)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !402, file: !316, line: 232, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !377)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !370, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !370, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!408 = !DIDerivedType(tag: DW_TAG_member, scope: !370, file: !367, line: 90, baseType: !409, size: 16, offset: 112)
!409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !370, file: !367, line: 90, size: 16, elements: !410)
!410 = !{!411, !418}
!411 = !DIDerivedType(tag: DW_TAG_member, scope: !409, file: !367, line: 91, baseType: !412, size: 16)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !409, file: !367, line: 91, size: 16, elements: !413)
!413 = !{!414, !417}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !412, file: !367, line: 96, baseType: !415, size: 8)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !416)
!416 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !412, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !409, file: !367, line: 100, baseType: !340, size: 16)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !370, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !370, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !370, file: !367, line: 131, baseType: !422, size: 192, offset: 192)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !423)
!423 = !{!424, !425, !431}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !422, file: !316, line: 245, baseType: !376, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !422, file: !316, line: 246, baseType: !426, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !427)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 32)
!428 = !DISubroutineType(types: !429)
!429 = !{null, !430}
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !422, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !433)
!433 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !366, file: !367, line: 250, baseType: !435, size: 288, offset: 384)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !437)
!436 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!437 = !{!438, !439, !440, !441, !442, !443, !444, !445, !446}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !435, file: !436, line: 26, baseType: !132, size: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !435, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !435, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !435, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !435, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !435, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !435, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !435, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !435, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !366, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !366, file: !367, line: 256, baseType: !401, size: 64, offset: 704)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !366, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !366, file: !367, line: 300, baseType: !451, size: 96, offset: 800)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !452)
!452 = !{!453, !454, !455}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !451, file: !367, line: 153, baseType: !22, size: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !451, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !451, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !366, file: !367, line: 325, baseType: !457, size: 32, offset: 896)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 32)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !459)
!459 = !{!460, !469, !470}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !458, file: !312, line: 5074, baseType: !461, size: 96)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !463)
!462 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!463 = !{!464, !467, !468}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !461, file: !462, line: 57, baseType: !465, size: 32)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 32)
!466 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !462, line: 57, flags: DIFlagFwdDecl)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !461, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !461, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !458, file: !312, line: 5075, baseType: !401, size: 64, offset: 96)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !458, file: !312, line: 5076, baseType: !471, offset: 160)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!472 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!473 = !{}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !366, file: !367, line: 343, baseType: !475, size: 64, offset: 928)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !476)
!476 = !{!477, !478}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !475, file: !436, line: 63, baseType: !132, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !475, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!479 = !{!480, !481, !482, !483}
!480 = !DILocalVariable(name: "thread", arg: 1, scope: !361, file: !362, line: 175, type: !365)
!481 = !DILocalVariable(name: "region_num", scope: !361, file: !362, line: 200, type: !163)
!482 = !DILocalVariable(name: "guard_start", scope: !361, file: !362, line: 265, type: !22)
!483 = !DILocalVariable(name: "guard_size", scope: !361, file: !362, line: 266, type: !356)
!484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 96, elements: !496)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !486, line: 52, size: 96, elements: !487)
!486 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!487 = !{!488, !489, !490}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !485, file: !486, line: 53, baseType: !22, size: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !485, file: !486, line: 54, baseType: !356, size: 32, offset: 32)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !485, file: !486, line: 55, baseType: !491, size: 32, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !492, line: 151, baseType: !493)
!492 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !492, line: 149, size: 32, elements: !494)
!494 = !{!495}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !493, file: !492, line: 150, baseType: !132, size: 32)
!496 = !{!497}
!497 = !DISubrange(count: 1)
!498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 96, elements: !496)
!499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !485)
!500 = !DIGlobalVariableExpression(var: !501, expr: !DIExpression())
!501 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !502, file: !535, line: 39, type: !163, isLocal: true, isDefinition: true)
!502 = distinct !DICompileUnit(language: DW_LANG_C99, file: !503, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !504, globals: !534, splitDebugInlining: false, nameTableKind: None)
!503 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!504 = !{!505, !102, !103, !522, !163}
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 32)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !507, line: 1226, baseType: !508)
!507 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 1213, size: 352, elements: !509)
!509 = !{!510, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !508, file: !507, line: 1215, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !508, file: !507, line: 1216, baseType: !131, size: 32, offset: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !508, file: !507, line: 1217, baseType: !131, size: 32, offset: 64)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !508, file: !507, line: 1218, baseType: !131, size: 32, offset: 96)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !508, file: !507, line: 1219, baseType: !131, size: 32, offset: 128)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !508, file: !507, line: 1220, baseType: !131, size: 32, offset: 160)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !508, file: !507, line: 1221, baseType: !131, size: 32, offset: 192)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !508, file: !507, line: 1222, baseType: !131, size: 32, offset: 224)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !508, file: !507, line: 1223, baseType: !131, size: 32, offset: 256)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !508, file: !507, line: 1224, baseType: !131, size: 32, offset: 288)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !508, file: !507, line: 1225, baseType: !131, size: 32, offset: 320)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !525, line: 27, size: 96, elements: !526)
!525 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!526 = !{!527, !528, !529}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !524, file: !525, line: 29, baseType: !132, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !524, file: !525, line: 31, baseType: !155, size: 32, offset: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !524, file: !525, line: 37, baseType: !530, size: 32, offset: 64)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !492, line: 146, baseType: !531)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !492, line: 141, size: 32, elements: !532)
!532 = !{!533}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !531, file: !492, line: 143, baseType: !132, size: 32)
!534 = !{!500}
!535 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !538, file: !545, line: 21, type: !117, isLocal: true, isDefinition: true)
!538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !540, globals: !544, splitDebugInlining: false, nameTableKind: None)
!539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!540 = !{!541, !103, !102}
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !543, line: 22, baseType: !103)
!543 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !{!536}
!545 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression())
!547 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !548, file: !553, line: 13, type: !570, isLocal: true, isDefinition: true)
!548 = distinct !DICompileUnit(language: DW_LANG_C99, file: !549, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !550, splitDebugInlining: false, nameTableKind: None)
!549 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!550 = !{!551, !546}
!551 = !DIGlobalVariableExpression(var: !552, expr: !DIExpression())
!552 = distinct !DIGlobalVariable(name: "mpu_config", scope: !548, file: !553, line: 37, type: !554, isLocal: false, isDefinition: true)
!553 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !555)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !525, line: 41, size: 64, elements: !556)
!556 = !{!557, !558}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !555, file: !525, line: 43, baseType: !132, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !555, file: !525, line: 45, baseType: !559, size: 32, offset: 32)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !561)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !525, line: 27, size: 96, elements: !562)
!562 = !{!563, !564, !565}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !561, file: !525, line: 29, baseType: !132, size: 32)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !561, file: !525, line: 31, baseType: !155, size: 32, offset: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !561, file: !525, line: 37, baseType: !566, size: 32, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !492, line: 146, baseType: !567)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !492, line: 141, size: 32, elements: !568)
!568 = !{!569}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !567, file: !492, line: 143, baseType: !132, size: 32)
!570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !560, size: 192, elements: !397)
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !573, file: !677, line: 72, type: !760, isLocal: true, isDefinition: true)
!573 = distinct !DICompileUnit(language: DW_LANG_C99, file: !574, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !575, retainedTypes: !663, globals: !674, splitDebugInlining: false, nameTableKind: None)
!574 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!575 = !{!30, !576}
!576 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !127, line: 65, baseType: !103, size: 32, elements: !577)
!577 = !{!578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662}
!578 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!579 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!580 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!581 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!582 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!583 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!584 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!585 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!586 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!587 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!588 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!589 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!590 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!591 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!592 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!593 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!594 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!595 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!596 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!597 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!598 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!599 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!600 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!601 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!602 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!603 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!604 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!605 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!606 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!607 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!608 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!609 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!610 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!611 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!612 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!613 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!614 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!615 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!616 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!617 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!618 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!619 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!620 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!621 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!622 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!623 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!624 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!625 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!626 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!627 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!628 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!629 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!630 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!631 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!632 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!633 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!634 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!635 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!636 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!637 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!638 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!639 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!640 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!641 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!642 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!643 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!644 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!645 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!646 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!647 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!648 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!649 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!650 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!651 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!652 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!653 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!654 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!655 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!656 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!657 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!658 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!659 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!660 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!661 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!662 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!663 = !{!356, !103, !102, !664}
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 32)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !127, line: 364, baseType: !666)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 356, size: 192, elements: !667)
!667 = !{!668, !669, !670, !671, !672, !673}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !666, file: !127, line: 358, baseType: !131, size: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !666, file: !127, line: 359, baseType: !131, size: 32, offset: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !666, file: !127, line: 360, baseType: !131, size: 32, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !666, file: !127, line: 361, baseType: !131, size: 32, offset: 96)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !666, file: !127, line: 362, baseType: !131, size: 32, offset: 128)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !666, file: !127, line: 363, baseType: !131, size: 32, offset: 160)
!674 = !{!675, !681, !697, !708, !725, !571, !727, !740, !742, !744, !746, !748, !750, !752, !754, !756, !758}
!675 = !DIGlobalVariableExpression(var: !676, expr: !DIExpression())
!676 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !573, file: !677, line: 424, type: !678, isLocal: false, isDefinition: true, align: 16)
!677 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 64, elements: !679)
!679 = !{!680}
!680 = !DISubrange(count: 4)
!681 = !DIGlobalVariableExpression(var: !682, expr: !DIExpression())
!682 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !573, file: !677, line: 424, type: !683, isLocal: false, isDefinition: true, align: 32)
!683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !685)
!685 = !{!686, !687, !688, !689, !695, !696}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !684, file: !152, line: 380, baseType: !155, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !684, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !684, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !684, file: !152, line: 386, baseType: !690, size: 32, offset: 96)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 32)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !692)
!692 = !{!693, !694}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !691, file: !152, line: 359, baseType: !163, size: 8)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !691, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !684, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !684, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!697 = !DIGlobalVariableExpression(var: !698, expr: !DIExpression())
!698 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !573, file: !677, line: 424, type: !699, isLocal: true, isDefinition: true, align: 32)
!699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !700)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !701)
!701 = !{!702, !707}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !700, file: !143, line: 60, baseType: !703, size: 32)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 32)
!704 = !DISubroutineType(types: !705)
!705 = !{!103, !706}
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !700, file: !143, line: 65, baseType: !706, size: 32, offset: 32)
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "exti_data", scope: !573, file: !677, line: 423, type: !710, isLocal: true, isDefinition: true)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !677, line: 107, size: 1472, elements: !711)
!711 = !{!712}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !710, file: !677, line: 109, baseType: !713, size: 1472)
!713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !714, size: 1472, elements: !723)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !677, line: 101, size: 64, elements: !715)
!715 = !{!716, !722}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !714, file: !677, line: 102, baseType: !717, size: 32)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !718, line: 63, baseType: !719)
!718 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = !DISubroutineType(types: !721)
!721 = !{null, !103, !102}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !714, file: !677, line: 103, baseType: !102, size: 32, offset: 32)
!723 = !{!724}
!724 = !DISubrange(count: 23)
!725 = !DIGlobalVariableExpression(var: !726, expr: !DIExpression())
!726 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !573, file: !677, line: 424, type: !691, isLocal: true, isDefinition: true, align: 8)
!727 = !DIGlobalVariableExpression(var: !728, expr: !DIExpression())
!728 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !729, file: !677, line: 493, type: !734, isLocal: true, isDefinition: true, align: 32)
!729 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !677, file: !677, line: 460, type: !730, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !732)
!730 = !DISubroutineType(types: !731)
!731 = !{null, !706}
!732 = !{!733}
!733 = !DILocalVariable(name: "dev", arg: 1, scope: !729, file: !677, line: 460, type: !706)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !735)
!735 = !{!736, !737, !738, !739}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !734, file: !10, line: 55, baseType: !344, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !734, file: !10, line: 57, baseType: !344, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !734, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !734, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !729, file: !677, line: 497, type: !734, isLocal: true, isDefinition: true, align: 32)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !729, file: !677, line: 507, type: !734, isLocal: true, isDefinition: true, align: 32)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !729, file: !677, line: 512, type: !734, isLocal: true, isDefinition: true, align: 32)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !729, file: !677, line: 516, type: !734, isLocal: true, isDefinition: true, align: 32)
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !729, file: !677, line: 523, type: !734, isLocal: true, isDefinition: true, align: 32)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !729, file: !677, line: 527, type: !734, isLocal: true, isDefinition: true, align: 32)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !729, file: !677, line: 581, type: !734, isLocal: true, isDefinition: true, align: 32)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !729, file: !677, line: 586, type: !734, isLocal: true, isDefinition: true, align: 32)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !729, file: !677, line: 591, type: !734, isLocal: true, isDefinition: true, align: 32)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !729, file: !677, line: 595, type: !734, isLocal: true, isDefinition: true, align: 32)
!760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !761, size: 736, elements: !723)
!761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !762)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !127, line: 154, baseType: !576)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !765, file: !770, line: 22, type: !792, isLocal: false, isDefinition: true, align: 16)
!765 = distinct !DICompileUnit(language: DW_LANG_C99, file: !766, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !767, splitDebugInlining: false, nameTableKind: None)
!766 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!767 = !{!768, !763, !774, !776, !778, !780, !782, !784, !786, !788, !790}
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !765, file: !770, line: 17, type: !771, isLocal: false, isDefinition: true, align: 16)
!770 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 192, elements: !772)
!772 = !{!773}
!773 = !DISubrange(count: 12)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !765, file: !770, line: 29, type: !678, isLocal: false, isDefinition: true, align: 16)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !765, file: !770, line: 36, type: !678, isLocal: false, isDefinition: true, align: 16)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !765, file: !770, line: 43, type: !678, isLocal: false, isDefinition: true, align: 16)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !765, file: !770, line: 50, type: !678, isLocal: false, isDefinition: true, align: 16)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !765, file: !770, line: 57, type: !678, isLocal: false, isDefinition: true, align: 16)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !765, file: !770, line: 64, type: !678, isLocal: false, isDefinition: true, align: 16)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !765, file: !770, line: 71, type: !678, isLocal: false, isDefinition: true, align: 16)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !765, file: !770, line: 78, type: !678, isLocal: false, isDefinition: true, align: 16)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !765, file: !770, line: 85, type: !678, isLocal: false, isDefinition: true, align: 16)
!792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 48, elements: !793)
!793 = !{!794}
!794 = !DISubrange(count: 3)
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !797, file: !859, line: 398, type: !892, isLocal: true, isDefinition: true)
!797 = distinct !DICompileUnit(language: DW_LANG_C99, file: !798, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !799, retainedTypes: !812, globals: !856, splitDebugInlining: false, nameTableKind: None)
!798 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!799 = !{!800, !30, !805}
!800 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !801, line: 197, baseType: !32, size: 32, elements: !802)
!801 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!802 = !{!803, !804}
!803 = !DIEnumerator(name: "SUCCESS", value: 0)
!804 = !DIEnumerator(name: "ERROR", value: 1)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !806, line: 44, baseType: !32, size: 32, elements: !807)
!806 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!807 = !{!808, !809, !810, !811}
!808 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!809 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!810 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!811 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!812 = !{!102, !103, !132, !813, !849, !855}
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 32)
!814 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 510, baseType: !815)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 477, size: 1216, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !822, !823, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !815, file: !127, line: 479, baseType: !131, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !815, file: !127, line: 480, baseType: !131, size: 32, offset: 32)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !815, file: !127, line: 481, baseType: !131, size: 32, offset: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !815, file: !127, line: 482, baseType: !131, size: 32, offset: 96)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !815, file: !127, line: 483, baseType: !131, size: 32, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !815, file: !127, line: 484, baseType: !131, size: 32, offset: 160)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !815, file: !127, line: 485, baseType: !824, size: 64, offset: 192)
!824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 64, elements: !397)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !815, file: !127, line: 486, baseType: !131, size: 32, offset: 256)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !815, file: !127, line: 487, baseType: !131, size: 32, offset: 288)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !815, file: !127, line: 488, baseType: !824, size: 64, offset: 320)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !815, file: !127, line: 489, baseType: !131, size: 32, offset: 384)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !815, file: !127, line: 490, baseType: !131, size: 32, offset: 416)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !815, file: !127, line: 491, baseType: !824, size: 64, offset: 448)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !815, file: !127, line: 492, baseType: !131, size: 32, offset: 512)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !815, file: !127, line: 493, baseType: !131, size: 32, offset: 544)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !815, file: !127, line: 494, baseType: !824, size: 64, offset: 576)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !815, file: !127, line: 495, baseType: !131, size: 32, offset: 640)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !815, file: !127, line: 496, baseType: !131, size: 32, offset: 672)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !815, file: !127, line: 497, baseType: !824, size: 64, offset: 704)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !815, file: !127, line: 498, baseType: !131, size: 32, offset: 768)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !815, file: !127, line: 499, baseType: !131, size: 32, offset: 800)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !815, file: !127, line: 500, baseType: !824, size: 64, offset: 832)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !815, file: !127, line: 501, baseType: !131, size: 32, offset: 896)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !815, file: !127, line: 502, baseType: !131, size: 32, offset: 928)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !815, file: !127, line: 503, baseType: !824, size: 64, offset: 960)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !815, file: !127, line: 504, baseType: !131, size: 32, offset: 1024)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !815, file: !127, line: 505, baseType: !131, size: 32, offset: 1056)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !815, file: !127, line: 506, baseType: !132, size: 32, offset: 1088)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !815, file: !127, line: 507, baseType: !131, size: 32, offset: 1120)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !815, file: !127, line: 508, baseType: !131, size: 32, offset: 1152)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !815, file: !127, line: 509, baseType: !131, size: 32, offset: 1184)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 32)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !851, line: 343, size: 64, elements: !852)
!851 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!852 = !{!853, !854}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !850, file: !851, line: 344, baseType: !132, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !850, file: !851, line: 345, baseType: !132, size: 32, offset: 32)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!856 = !{!857, !863, !879, !890, !795}
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !797, file: !859, line: 752, type: !860, isLocal: false, isDefinition: true, align: 16)
!859 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 848, elements: !861)
!861 = !{!862}
!862 = !DISubrange(count: 53)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !797, file: !859, line: 752, type: !865, isLocal: false, isDefinition: true, align: 32)
!865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !866)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !867)
!867 = !{!868, !869, !870, !871, !877, !878}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !866, file: !152, line: 380, baseType: !155, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !866, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !866, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !866, file: !152, line: 386, baseType: !872, size: 32, offset: 96)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 32)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !874)
!874 = !{!875, !876}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !873, file: !152, line: 359, baseType: !163, size: 8)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !873, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !866, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !866, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !797, file: !859, line: 752, type: !881, isLocal: true, isDefinition: true, align: 32)
!881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !882)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !883)
!883 = !{!884, !889}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !882, file: !143, line: 60, baseType: !885, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 32)
!886 = !DISubroutineType(types: !887)
!887 = !{!103, !888}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !882, file: !143, line: 65, baseType: !888, size: 32, offset: 32)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !797, file: !859, line: 752, type: !873, isLocal: true, isDefinition: true, align: 8)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !806, line: 100, size: 224, elements: !893)
!893 = !{!894, !900, !901, !910, !915, !920, !926}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !892, file: !806, line: 101, baseType: !895, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !806, line: 76, baseType: !896)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 32)
!897 = !DISubroutineType(types: !898)
!898 = !{!103, !888, !899}
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !806, line: 56, baseType: !102)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !892, file: !806, line: 102, baseType: !895, size: 32, offset: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !892, file: !806, line: 103, baseType: !902, size: 32, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !806, line: 83, baseType: !903)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 32)
!904 = !DISubroutineType(types: !905)
!905 = !{!103, !888, !899, !906, !102}
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !806, line: 72, baseType: !907)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!908 = !DISubroutineType(types: !909)
!909 = !{null, !888, !899, !102}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !892, file: !806, line: 104, baseType: !911, size: 32, offset: 96)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !806, line: 79, baseType: !912)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DISubroutineType(types: !914)
!914 = !{!103, !888, !899, !855}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !892, file: !806, line: 105, baseType: !916, size: 32, offset: 128)
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !806, line: 88, baseType: !917)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!918 = !DISubroutineType(types: !919)
!919 = !{!805, !888, !899}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !892, file: !806, line: 106, baseType: !921, size: 32, offset: 160)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !806, line: 92, baseType: !922)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 32)
!923 = !DISubroutineType(types: !924)
!924 = !{!103, !888, !899, !925}
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !806, line: 64, baseType: !102)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !892, file: !806, line: 107, baseType: !927, size: 32, offset: 192)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !806, line: 96, baseType: !928)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 32)
!929 = !DISubroutineType(types: !930)
!930 = !{!103, !888, !899, !102}
!931 = !DIGlobalVariableExpression(var: !932, expr: !DIExpression())
!932 = distinct !DIGlobalVariable(name: "debug_hook_in", scope: !933, file: !937, line: 43, type: !1129, isLocal: true, isDefinition: true)
!933 = distinct !DICompileUnit(language: DW_LANG_C99, file: !934, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !935, retainedTypes: !944, globals: !1024, splitDebugInlining: false, nameTableKind: None)
!934 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!935 = !{!30, !936}
!936 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !937, line: 214, baseType: !32, size: 32, elements: !938)
!937 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!938 = !{!939, !940, !941, !942, !943}
!939 = !DIEnumerator(name: "ESC_ESC", value: 0)
!940 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!941 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!942 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!943 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!944 = !{!102, !103, !945, !32, !24}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !212, line: 336, size: 608, elements: !948)
!948 = !{!949, !968, !972, !976, !989, !994, !998, !1002, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !947, file: !212, line: 365, baseType: !950, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!951 = !DISubroutineType(types: !952)
!952 = !{!103, !953, !233}
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !956)
!956 = !{!957, !958, !959, !960, !966, !967}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !955, file: !152, line: 380, baseType: !155, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !955, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !955, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !955, file: !152, line: 386, baseType: !961, size: 32, offset: 96)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 32)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !963)
!963 = !{!964, !965}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !962, file: !152, line: 359, baseType: !163, size: 8)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !962, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !955, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !955, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !947, file: !212, line: 366, baseType: !969, size: 32, offset: 32)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!970 = !DISubroutineType(types: !971)
!971 = !{null, !953, !164}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !947, file: !212, line: 374, baseType: !973, size: 32, offset: 64)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = !DISubroutineType(types: !975)
!975 = !{!103, !953}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !947, file: !212, line: 377, baseType: !977, size: 32, offset: 96)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 32)
!978 = !DISubroutineType(types: !979)
!979 = !{!103, !953, !980}
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !982)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !212, line: 122, size: 64, elements: !983)
!983 = !{!984, !985, !986, !987, !988}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !982, file: !212, line: 123, baseType: !132, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !982, file: !212, line: 124, baseType: !163, size: 8, offset: 32)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !982, file: !212, line: 125, baseType: !163, size: 8, offset: 40)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !982, file: !212, line: 126, baseType: !163, size: 8, offset: 48)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !982, file: !212, line: 127, baseType: !163, size: 8, offset: 56)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !947, file: !212, line: 379, baseType: !990, size: 32, offset: 128)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DISubroutineType(types: !992)
!992 = !{!103, !953, !993}
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !947, file: !212, line: 384, baseType: !995, size: 32, offset: 160)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{!103, !953, !264, !103}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !947, file: !212, line: 393, baseType: !999, size: 32, offset: 192)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 32)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!103, !953, !270, !271}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !947, file: !212, line: 402, baseType: !1003, size: 32, offset: 224)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{null, !953}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !947, file: !212, line: 405, baseType: !1003, size: 32, offset: 256)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !947, file: !212, line: 408, baseType: !973, size: 32, offset: 288)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !947, file: !212, line: 411, baseType: !1003, size: 32, offset: 320)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !947, file: !212, line: 414, baseType: !1003, size: 32, offset: 352)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !947, file: !212, line: 417, baseType: !973, size: 32, offset: 384)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !947, file: !212, line: 420, baseType: !973, size: 32, offset: 416)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !947, file: !212, line: 423, baseType: !1003, size: 32, offset: 448)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !947, file: !212, line: 426, baseType: !1003, size: 32, offset: 480)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !947, file: !212, line: 429, baseType: !973, size: 32, offset: 512)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !947, file: !212, line: 432, baseType: !973, size: 32, offset: 544)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !947, file: !212, line: 435, baseType: !1017, size: 32, offset: 576)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 32)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{null, !953, !1020, !102}
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !212, line: 142, baseType: !1021)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{null, !953, !102}
!1024 = !{!1025, !931, !1032, !1074, !1076, !1082, !1089, !1092, !1117, !1121, !1123, !1125, !1127}
!1025 = !DIGlobalVariableExpression(var: !1026, expr: !DIExpression())
!1026 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !933, file: !937, line: 603, type: !1027, isLocal: true, isDefinition: true, align: 32)
!1027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1028)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !1029)
!1029 = !{!1030, !1031}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1028, file: !143, line: 60, baseType: !973, size: 32)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1028, file: !143, line: 65, baseType: !953, size: 32, offset: 32)
!1032 = !DIGlobalVariableExpression(var: !1033, expr: !DIExpression())
!1033 = distinct !DIGlobalVariable(name: "avail_queue", scope: !933, file: !937, line: 108, type: !1034, isLocal: true, isDefinition: true)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !312, line: 2208, size: 128, elements: !1036)
!1036 = !{!1037}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1035, file: !312, line: 2209, baseType: !1038, size: 128)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !312, line: 1709, size: 128, elements: !1039)
!1039 = !{!1040, !1053, !1055}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1038, file: !312, line: 1710, baseType: !1041, size: 64)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !1042, line: 46, baseType: !1043)
!1042 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !1042, line: 41, size: 64, elements: !1044)
!1044 = !{!1045, !1052}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1043, file: !1042, line: 42, baseType: !1046, size: 32)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 32)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !1042, line: 39, baseType: !1048)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !1042, line: 35, size: 32, elements: !1049)
!1049 = !{!1050}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1048, file: !1042, line: 36, baseType: !1051, size: 32)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !1042, line: 32, baseType: !132)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1043, file: !1042, line: 43, baseType: !1046, size: 32, offset: 32)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1038, file: !312, line: 1711, baseType: !1054, offset: 64)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1038, file: !312, line: 1712, baseType: !1056, size: 64, offset: 64)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !1057)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !1058)
!1058 = !{!1059}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1057, file: !316, line: 232, baseType: !1060, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !1061)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !1062)
!1062 = !{!1063, !1069}
!1063 = !DIDerivedType(tag: DW_TAG_member, scope: !1061, file: !321, line: 38, baseType: !1064, size: 32)
!1064 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1061, file: !321, line: 38, size: 32, elements: !1065)
!1065 = !{!1066, !1068}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1064, file: !321, line: 39, baseType: !1067, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1064, file: !321, line: 40, baseType: !1067, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_member, scope: !1061, file: !321, line: 42, baseType: !1070, size: 32, offset: 32)
!1070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1061, file: !321, line: 42, size: 32, elements: !1071)
!1071 = !{!1072, !1073}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1070, file: !321, line: 43, baseType: !1067, size: 32)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1070, file: !321, line: 44, baseType: !1067, size: 32)
!1074 = !DIGlobalVariableExpression(var: !1075, expr: !DIExpression())
!1075 = distinct !DIGlobalVariable(name: "lines_queue", scope: !933, file: !937, line: 109, type: !1034, isLocal: true, isDefinition: true)
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "completion_cb", scope: !933, file: !937, line: 110, type: !1078, isLocal: true, isDefinition: true)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!163, !1081, !163}
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "debug_hook_out", scope: !933, file: !937, line: 54, type: !1084, isLocal: true, isDefinition: true)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_out_debug_hook_t", file: !1086, line: 40, baseType: !1087)
!1086 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/uart_console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!103, !108}
!1089 = !DIGlobalVariableExpression(var: !1090, expr: !DIExpression())
!1090 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !933, file: !937, line: 38, type: !1091, isLocal: true, isDefinition: true)
!1091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !953)
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "cmd", scope: !1094, file: !937, line: 435, type: !1105, isLocal: true, isDefinition: true)
!1094 = distinct !DISubprogram(name: "uart_console_isr", scope: !937, file: !937, line: 428, type: !1022, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !1095)
!1095 = !{!1096, !1097, !1098, !1100, !1101}
!1096 = !DILocalVariable(name: "unused", arg: 1, scope: !1094, file: !937, line: 428, type: !953)
!1097 = !DILocalVariable(name: "user_data", arg: 2, scope: !1094, file: !937, line: 428, type: !102)
!1098 = !DILocalVariable(name: "byte", scope: !1099, file: !937, line: 436, type: !163)
!1099 = distinct !DILexicalBlock(scope: !1094, file: !937, line: 434, column: 48)
!1100 = !DILocalVariable(name: "rx", scope: !1099, file: !937, line: 437, type: !103)
!1101 = !DILocalVariable(name: "ret", scope: !1102, file: !937, line: 461, type: !102)
!1102 = distinct !DILexicalBlock(scope: !1103, file: !937, line: 461, column: 10)
!1103 = distinct !DILexicalBlock(scope: !1104, file: !937, line: 460, column: 13)
!1104 = distinct !DILexicalBlock(scope: !1099, file: !937, line: 460, column: 7)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !1107, line: 21, size: 1088, elements: !1108)
!1107 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1108 = !{!1109, !1112, !1113}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1106, file: !1107, line: 23, baseType: !1110, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !1111)
!1111 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1106, file: !1107, line: 25, baseType: !163, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1106, file: !1107, line: 27, baseType: !1114, size: 1024, offset: 40)
!1114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1024, elements: !1115)
!1115 = !{!1116}
!1116 = !DISubrange(count: 128)
!1117 = !DIGlobalVariableExpression(var: !1118, expr: !DIExpression())
!1118 = distinct !DIGlobalVariable(name: "esc_state", scope: !933, file: !937, line: 228, type: !1119, isLocal: true, isDefinition: true)
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1120, line: 22, baseType: !1111)
!1120 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "ansi_val", scope: !933, file: !937, line: 229, type: !32, isLocal: true, isDefinition: true)
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !933, file: !937, line: 229, type: !32, isLocal: true, isDefinition: true)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "cur", scope: !933, file: !937, line: 230, type: !163, isLocal: true, isDefinition: true)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "end", scope: !933, file: !937, line: 230, type: !163, isLocal: true, isDefinition: true)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_in_debug_hook_t", file: !1086, line: 45, baseType: !1130)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!103, !163}
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1135, file: !1306, line: 762, type: !1418, isLocal: true, isDefinition: true)
!1135 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1136, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1137, retainedTypes: !1155, globals: !1303, splitDebugInlining: false, nameTableKind: None)
!1136 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!1137 = !{!30, !1138, !1144, !1149, !805}
!1138 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1139, line: 506, baseType: !32, size: 32, elements: !1140)
!1139 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1140 = !{!1141, !1142, !1143}
!1141 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1142 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1143 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1139, line: 512, baseType: !32, size: 32, elements: !1145)
!1145 = !{!1146, !1147, !1148}
!1146 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1147 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1148 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !718, line: 43, baseType: !32, size: 32, elements: !1150)
!1150 = !{!1151, !1152, !1153, !1154}
!1151 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1152 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1153 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1154 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1155 = !{!102, !103, !1156, !1226, !1231, !1191, !1144, !1138, !1236, !1237, !132, !1251, !1206, !1081, !1263, !1264}
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1158)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1139, line: 523, size: 288, elements: !1159)
!1159 = !{!1160, !1181, !1187, !1192, !1196, !1197, !1198, !1202, !1222}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1158, file: !1139, line: 524, baseType: !1161, size: 32)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!103, !1164, !1179, !1180}
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1166)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1167)
!1167 = !{!1168, !1169, !1170, !1171, !1177, !1178}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1166, file: !152, line: 380, baseType: !155, size: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1166, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1166, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1166, file: !152, line: 386, baseType: !1172, size: 32, offset: 96)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1174)
!1174 = !{!1175, !1176}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1173, file: !152, line: 359, baseType: !163, size: 8)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1173, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1166, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1166, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1139, line: 237, baseType: !163)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1139, line: 257, baseType: !132)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1158, file: !1139, line: 530, baseType: !1182, size: 32, offset: 32)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 32)
!1183 = !DISubroutineType(types: !1184)
!1184 = !{!103, !1164, !1185}
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1139, line: 229, baseType: !132)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1158, file: !1139, line: 532, baseType: !1188, size: 32, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!103, !1164, !1191, !1186}
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1139, line: 216, baseType: !132)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1158, file: !1139, line: 535, baseType: !1193, size: 32, offset: 96)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!103, !1164, !1191}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1158, file: !1139, line: 537, baseType: !1193, size: 32, offset: 128)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1158, file: !1139, line: 539, baseType: !1193, size: 32, offset: 160)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1158, file: !1139, line: 541, baseType: !1199, size: 32, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!103, !1164, !1179, !1138, !1144}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1158, file: !1139, line: 544, baseType: !1203, size: 32, offset: 224)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{!103, !1164, !1206, !166}
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1139, line: 478, size: 96, elements: !1208)
!1208 = !{!1209, !1216, !1221}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1207, file: !1139, line: 482, baseType: !1210, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1211, line: 33, baseType: !1212)
!1211 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1211, line: 29, size: 32, elements: !1213)
!1213 = !{!1214}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1212, file: !1211, line: 30, baseType: !1215, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1207, file: !1139, line: 485, baseType: !1217, size: 32, offset: 32)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1139, line: 464, baseType: !1218)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 32)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{null, !1164, !1206, !1191}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1207, file: !1139, line: 493, baseType: !1191, size: 32, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1158, file: !1139, line: 547, baseType: !1223, size: 32, offset: 256)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 32)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{!132, !1164}
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1139, line: 428, size: 32, elements: !1229)
!1229 = !{!1230}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1228, file: !1139, line: 434, baseType: !1191, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1233)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1139, line: 441, size: 32, elements: !1234)
!1234 = !{!1235}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1233, file: !1139, line: 447, baseType: !1191, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !127, line: 396, baseType: !1239)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 385, size: 320, elements: !1240)
!1240 = !{!1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1239, file: !127, line: 387, baseType: !131, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1239, file: !127, line: 388, baseType: !131, size: 32, offset: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1239, file: !127, line: 389, baseType: !131, size: 32, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1239, file: !127, line: 390, baseType: !131, size: 32, offset: 96)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1239, file: !127, line: 391, baseType: !131, size: 32, offset: 128)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1239, file: !127, line: 392, baseType: !131, size: 32, offset: 160)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1239, file: !127, line: 393, baseType: !131, size: 32, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1239, file: !127, line: 394, baseType: !131, size: 32, offset: 224)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1239, file: !127, line: 395, baseType: !1250, size: 64, offset: 256)
!1250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 64, elements: !397)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !127, line: 411, baseType: !1253)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 402, size: 320, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1259, !1260, !1261, !1262}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1253, file: !127, line: 404, baseType: !131, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1253, file: !127, line: 405, baseType: !131, size: 32, offset: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1253, file: !127, line: 406, baseType: !1258, size: 128, offset: 64)
!1258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 128, elements: !679)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1253, file: !127, line: 407, baseType: !132, size: 32, offset: 192)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1253, file: !127, line: 408, baseType: !131, size: 32, offset: 224)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1253, file: !127, line: 409, baseType: !131, size: 32, offset: 256)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1253, file: !127, line: 410, baseType: !131, size: 32, offset: 288)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1266)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !806, line: 100, size: 224, elements: !1267)
!1267 = !{!1268, !1273, !1274, !1283, !1288, !1293, !1298}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1266, file: !806, line: 101, baseType: !1269, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !806, line: 76, baseType: !1270)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!103, !1164, !899}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1266, file: !806, line: 102, baseType: !1269, size: 32, offset: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1266, file: !806, line: 103, baseType: !1275, size: 32, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !806, line: 83, baseType: !1276)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!103, !1164, !899, !1279, !102}
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !806, line: 72, baseType: !1280)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{null, !1164, !899, !102}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1266, file: !806, line: 104, baseType: !1284, size: 32, offset: 96)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !806, line: 79, baseType: !1285)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!103, !1164, !899, !855}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1266, file: !806, line: 105, baseType: !1289, size: 32, offset: 128)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !806, line: 88, baseType: !1290)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 32)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!805, !1164, !899}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1266, file: !806, line: 106, baseType: !1294, size: 32, offset: 160)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !806, line: 92, baseType: !1295)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!103, !1164, !899, !925}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1266, file: !806, line: 107, baseType: !1299, size: 32, offset: 192)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !806, line: 96, baseType: !1300)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!103, !1164, !899, !102}
!1303 = !{!1304, !1310, !1312, !1322, !1324, !1326, !1328, !1333, !1335, !1337, !1342, !1344, !1346, !1348, !1350, !1352, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1384, !1386, !1388, !1390, !1392, !1394, !1396, !1398, !1400, !1402, !1404, !1406, !1408, !1410, !1412, !1133, !1414, !1416, !1429, !1431, !1433, !1435, !1437, !1439}
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1135, file: !1306, line: 762, type: !1307, isLocal: false, isDefinition: true, align: 16)
!1306 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 112, elements: !1308)
!1308 = !{!1309}
!1309 = !DISubrange(count: 7)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1135, file: !1306, line: 762, type: !1165, isLocal: false, isDefinition: true, align: 32)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1135, file: !1306, line: 762, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1315)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !1316)
!1316 = !{!1317, !1321}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1315, file: !143, line: 60, baseType: !1318, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 32)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!103, !1164}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1315, file: !143, line: 65, baseType: !1164, size: 32, offset: 32)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1135, file: !1306, line: 766, type: !1307, isLocal: false, isDefinition: true, align: 16)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1135, file: !1306, line: 766, type: !1165, isLocal: false, isDefinition: true, align: 32)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1135, file: !1306, line: 766, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1135, file: !1306, line: 770, type: !1330, isLocal: false, isDefinition: true, align: 16)
!1330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 96, elements: !1331)
!1331 = !{!1332}
!1332 = !DISubrange(count: 6)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1135, file: !1306, line: 770, type: !1165, isLocal: false, isDefinition: true, align: 32)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1135, file: !1306, line: 770, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1135, file: !1306, line: 774, type: !1339, isLocal: false, isDefinition: true, align: 16)
!1339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 80, elements: !1340)
!1340 = !{!1341}
!1341 = !DISubrange(count: 5)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1135, file: !1306, line: 774, type: !1165, isLocal: false, isDefinition: true, align: 32)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1135, file: !1306, line: 774, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1135, file: !1306, line: 778, type: !1339, isLocal: false, isDefinition: true, align: 16)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1135, file: !1306, line: 778, type: !1165, isLocal: false, isDefinition: true, align: 32)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1135, file: !1306, line: 778, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1135, file: !1306, line: 782, type: !1339, isLocal: false, isDefinition: true, align: 16)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1135, file: !1306, line: 782, type: !1165, isLocal: false, isDefinition: true, align: 32)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1135, file: !1306, line: 782, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1135, file: !1306, line: 786, type: !1339, isLocal: false, isDefinition: true, align: 16)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1135, file: !1306, line: 786, type: !1165, isLocal: false, isDefinition: true, align: 32)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1135, file: !1306, line: 786, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1135, file: !1306, line: 790, type: !1339, isLocal: false, isDefinition: true, align: 16)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1135, file: !1306, line: 790, type: !1165, isLocal: false, isDefinition: true, align: 32)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1135, file: !1306, line: 790, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1135, file: !1306, line: 762, type: !1372, isLocal: true, isDefinition: true)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1373, line: 237, size: 128, elements: !1374)
!1373 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1374 = !{!1375, !1376, !1377}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1372, file: !1373, line: 239, baseType: !1233, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1372, file: !1373, line: 241, baseType: !1164, size: 32, offset: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1372, file: !1373, line: 243, baseType: !1378, size: 64, offset: 64)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1211, line: 40, baseType: !1379)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1211, line: 35, size: 64, elements: !1380)
!1380 = !{!1381, !1383}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1379, file: !1211, line: 36, baseType: !1382, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1379, file: !1211, line: 37, baseType: !1382, size: 32, offset: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1135, file: !1306, line: 762, type: !1173, isLocal: true, isDefinition: true, align: 8)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1135, file: !1306, line: 766, type: !1372, isLocal: true, isDefinition: true)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1135, file: !1306, line: 766, type: !1173, isLocal: true, isDefinition: true, align: 8)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1135, file: !1306, line: 770, type: !1372, isLocal: true, isDefinition: true)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1135, file: !1306, line: 770, type: !1173, isLocal: true, isDefinition: true, align: 8)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1135, file: !1306, line: 774, type: !1372, isLocal: true, isDefinition: true)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1135, file: !1306, line: 774, type: !1173, isLocal: true, isDefinition: true, align: 8)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1135, file: !1306, line: 778, type: !1372, isLocal: true, isDefinition: true)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1135, file: !1306, line: 778, type: !1173, isLocal: true, isDefinition: true, align: 8)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1135, file: !1306, line: 782, type: !1372, isLocal: true, isDefinition: true)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1135, file: !1306, line: 782, type: !1173, isLocal: true, isDefinition: true, align: 8)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1135, file: !1306, line: 786, type: !1372, isLocal: true, isDefinition: true)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1135, file: !1306, line: 786, type: !1173, isLocal: true, isDefinition: true, align: 8)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1135, file: !1306, line: 790, type: !1372, isLocal: true, isDefinition: true)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1135, file: !1306, line: 790, type: !1173, isLocal: true, isDefinition: true, align: 8)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1135, file: !1306, line: 656, type: !1157, isLocal: true, isDefinition: true)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1135, file: !1306, line: 766, type: !1418, isLocal: true, isDefinition: true)
!1418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1419)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1373, line: 224, size: 160, elements: !1420)
!1420 = !{!1421, !1422, !1423, !1424}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1419, file: !1373, line: 226, baseType: !1228, size: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1419, file: !1373, line: 228, baseType: !855, size: 32, offset: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1419, file: !1373, line: 230, baseType: !103, size: 32, offset: 64)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1419, file: !1373, line: 231, baseType: !1425, size: 64, offset: 96)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !851, line: 343, size: 64, elements: !1426)
!1426 = !{!1427, !1428}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1425, file: !851, line: 344, baseType: !132, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1425, file: !851, line: 345, baseType: !132, size: 32, offset: 32)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1135, file: !1306, line: 770, type: !1418, isLocal: true, isDefinition: true)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1135, file: !1306, line: 774, type: !1418, isLocal: true, isDefinition: true)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1135, file: !1306, line: 778, type: !1418, isLocal: true, isDefinition: true)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1135, file: !1306, line: 782, type: !1418, isLocal: true, isDefinition: true)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1135, file: !1306, line: 786, type: !1418, isLocal: true, isDefinition: true)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1135, file: !1306, line: 790, type: !1418, isLocal: true, isDefinition: true)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1443, file: !1614, line: 1914, type: !1688, isLocal: true, isDefinition: true)
!1443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1445, retainedTypes: !1478, globals: !1611, splitDebugInlining: false, nameTableKind: None)
!1444 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!1445 = !{!30, !1446, !1453, !1460, !1467, !1473, !805}
!1446 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !212, line: 47, baseType: !32, size: 32, elements: !1447)
!1447 = !{!1448, !1449, !1450, !1451, !1452}
!1448 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1449 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1450 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1451 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1452 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1453 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !212, line: 75, baseType: !32, size: 32, elements: !1454)
!1454 = !{!1455, !1456, !1457, !1458, !1459}
!1455 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1456 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1457 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1458 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1459 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1460 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !212, line: 92, baseType: !32, size: 32, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465, !1466}
!1462 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1463 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1464 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1465 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1466 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1467 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !212, line: 84, baseType: !32, size: 32, elements: !1468)
!1468 = !{!1469, !1470, !1471, !1472}
!1469 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1470 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1471 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1472 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !212, line: 107, baseType: !32, size: 32, elements: !1474)
!1474 = !{!1475, !1476, !1477}
!1475 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1476 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1477 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1478 = !{!102, !103, !1479, !164, !163, !1558, !132, !899, !1569, !340, !1608, !1610}
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1481)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !212, line: 336, size: 608, elements: !1482)
!1482 = !{!1483, !1502, !1506, !1510, !1523, !1528, !1532, !1536, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1481, file: !212, line: 365, baseType: !1484, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 32)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!103, !1487, !233}
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1489)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1490)
!1490 = !{!1491, !1492, !1493, !1494, !1500, !1501}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1489, file: !152, line: 380, baseType: !155, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1489, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1489, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1489, file: !152, line: 386, baseType: !1495, size: 32, offset: 96)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1497)
!1497 = !{!1498, !1499}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1496, file: !152, line: 359, baseType: !163, size: 8)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1496, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1489, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1489, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1481, file: !212, line: 366, baseType: !1503, size: 32, offset: 32)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{null, !1487, !164}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1481, file: !212, line: 374, baseType: !1507, size: 32, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 32)
!1508 = !DISubroutineType(types: !1509)
!1509 = !{!103, !1487}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1481, file: !212, line: 377, baseType: !1511, size: 32, offset: 96)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{!103, !1487, !1514}
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1516)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !212, line: 122, size: 64, elements: !1517)
!1517 = !{!1518, !1519, !1520, !1521, !1522}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1516, file: !212, line: 123, baseType: !132, size: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1516, file: !212, line: 124, baseType: !163, size: 8, offset: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1516, file: !212, line: 125, baseType: !163, size: 8, offset: 40)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1516, file: !212, line: 126, baseType: !163, size: 8, offset: 48)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1516, file: !212, line: 127, baseType: !163, size: 8, offset: 56)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1481, file: !212, line: 379, baseType: !1524, size: 32, offset: 128)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 32)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!103, !1487, !1527}
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1481, file: !212, line: 384, baseType: !1529, size: 32, offset: 160)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 32)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{!103, !1487, !264, !103}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1481, file: !212, line: 393, baseType: !1533, size: 32, offset: 192)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!103, !1487, !270, !271}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1481, file: !212, line: 402, baseType: !1537, size: 32, offset: 224)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{null, !1487}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1481, file: !212, line: 405, baseType: !1537, size: 32, offset: 256)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1481, file: !212, line: 408, baseType: !1507, size: 32, offset: 288)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1481, file: !212, line: 411, baseType: !1537, size: 32, offset: 320)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1481, file: !212, line: 414, baseType: !1537, size: 32, offset: 352)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1481, file: !212, line: 417, baseType: !1507, size: 32, offset: 384)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1481, file: !212, line: 420, baseType: !1507, size: 32, offset: 416)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1481, file: !212, line: 423, baseType: !1537, size: 32, offset: 448)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1481, file: !212, line: 426, baseType: !1537, size: 32, offset: 480)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1481, file: !212, line: 429, baseType: !1507, size: 32, offset: 512)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1481, file: !212, line: 432, baseType: !1507, size: 32, offset: 544)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1481, file: !212, line: 435, baseType: !1551, size: 32, offset: 576)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{null, !1487, !1554, !102}
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !212, line: 142, baseType: !1555)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{null, !1487, !102}
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !127, line: 648, baseType: !1560)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 639, size: 224, elements: !1561)
!1561 = !{!1562, !1563, !1564, !1565, !1566, !1567, !1568}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1560, file: !127, line: 641, baseType: !131, size: 32)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1560, file: !127, line: 642, baseType: !131, size: 32, offset: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1560, file: !127, line: 643, baseType: !131, size: 32, offset: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1560, file: !127, line: 644, baseType: !131, size: 32, offset: 96)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1560, file: !127, line: 645, baseType: !131, size: 32, offset: 128)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1560, file: !127, line: 646, baseType: !131, size: 32, offset: 160)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1560, file: !127, line: 647, baseType: !131, size: 32, offset: 192)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32)
!1570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1571)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !806, line: 100, size: 224, elements: !1572)
!1572 = !{!1573, !1578, !1579, !1588, !1593, !1598, !1603}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1571, file: !806, line: 101, baseType: !1574, size: 32)
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !806, line: 76, baseType: !1575)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 32)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!103, !1487, !899}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1571, file: !806, line: 102, baseType: !1574, size: 32, offset: 32)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1571, file: !806, line: 103, baseType: !1580, size: 32, offset: 64)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !806, line: 83, baseType: !1581)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!103, !1487, !899, !1584, !102}
!1584 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !806, line: 72, baseType: !1585)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 32)
!1586 = !DISubroutineType(types: !1587)
!1587 = !{null, !1487, !899, !102}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1571, file: !806, line: 104, baseType: !1589, size: 32, offset: 96)
!1589 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !806, line: 79, baseType: !1590)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 32)
!1591 = !DISubroutineType(types: !1592)
!1592 = !{!103, !1487, !899, !855}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1571, file: !806, line: 105, baseType: !1594, size: 32, offset: 128)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !806, line: 88, baseType: !1595)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1596 = !DISubroutineType(types: !1597)
!1597 = !{!805, !1487, !899}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1571, file: !806, line: 106, baseType: !1599, size: 32, offset: 160)
!1599 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !806, line: 92, baseType: !1600)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 32)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!103, !1487, !899, !925}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1571, file: !806, line: 107, baseType: !1604, size: 32, offset: 192)
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !806, line: 96, baseType: !1605)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{!103, !1487, !899, !102}
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1609)
!1609 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!1611 = !{!1612, !1618, !1620, !1627, !1441, !1629, !1637, !1660, !1663, !1666, !1677, !1679}
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1443, file: !1614, line: 1914, type: !1615, isLocal: false, isDefinition: true, align: 16)
!1614 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 128, elements: !1616)
!1616 = !{!1617}
!1617 = !DISubrange(count: 8)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1443, file: !1614, line: 1914, type: !1488, isLocal: false, isDefinition: true, align: 32)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1443, file: !1614, line: 1914, type: !1622, isLocal: true, isDefinition: true, align: 32)
!1622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1623)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !1624)
!1624 = !{!1625, !1626}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1623, file: !143, line: 60, baseType: !1507, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1623, file: !143, line: 65, baseType: !1487, size: 32, offset: 32)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1443, file: !1614, line: 1914, type: !1496, isLocal: true, isDefinition: true, align: 8)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1443, file: !1614, line: 1914, type: !1631, isLocal: true, isDefinition: true)
!1631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1632, size: 64, elements: !496)
!1632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1633)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !851, line: 343, size: 64, elements: !1634)
!1634 = !{!1635, !1636}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1633, file: !851, line: 344, baseType: !132, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1633, file: !851, line: 345, baseType: !132, size: 32, offset: 32)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1443, file: !1614, line: 1914, type: !1639, isLocal: true, isDefinition: true)
!1639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1641, line: 60, size: 64, elements: !1642)
!1641 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1642 = !{!1643, !1659}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1640, file: !1641, line: 69, baseType: !1644, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1646)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1641, line: 50, size: 64, elements: !1647)
!1647 = !{!1648, !1657, !1658}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1646, file: !1641, line: 52, baseType: !1649, size: 32)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1651)
!1651 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1652, line: 37, baseType: !1653)
!1652 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1652, line: 32, size: 64, elements: !1654)
!1654 = !{!1655, !1656}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1653, file: !1652, line: 34, baseType: !132, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1653, file: !1652, line: 36, baseType: !132, size: 32, offset: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1646, file: !1641, line: 54, baseType: !163, size: 8, offset: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1646, file: !1641, line: 56, baseType: !163, size: 8, offset: 40)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1640, file: !1641, line: 71, baseType: !163, size: 8, offset: 32)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1443, file: !1614, line: 1914, type: !1662, isLocal: true, isDefinition: true)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1645, size: 64, elements: !496)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1443, file: !1614, line: 1914, type: !1665, isLocal: true, isDefinition: true)
!1665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1650, size: 128, elements: !397)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1668, file: !1614, line: 1914, type: !1671, isLocal: true, isDefinition: true, align: 32)
!1668 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1614, file: !1614, line: 1914, type: !1538, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !1669)
!1669 = !{!1670}
!1670 = !DILocalVariable(name: "dev", arg: 1, scope: !1668, file: !1614, line: 1914, type: !1487)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1672)
!1672 = !{!1673, !1674, !1675, !1676}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1671, file: !10, line: 55, baseType: !344, size: 32)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1671, file: !10, line: 57, baseType: !344, size: 32, offset: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1671, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1671, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1443, file: !1614, line: 1539, type: !1480, isLocal: true, isDefinition: true)
!1679 = !DIGlobalVariableExpression(var: !1680, expr: !DIExpression())
!1680 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1443, file: !1614, line: 1914, type: !1681, isLocal: true, isDefinition: true)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1682, line: 74, size: 128, elements: !1683)
!1682 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1683 = !{!1684, !1685, !1686, !1687}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1681, file: !1682, line: 76, baseType: !132, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1681, file: !1682, line: 78, baseType: !1487, size: 32, offset: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1681, file: !1682, line: 80, baseType: !1554, size: 32, offset: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1681, file: !1682, line: 81, baseType: !102, size: 32, offset: 96)
!1688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1689)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1682, line: 22, size: 256, elements: !1690)
!1690 = !{!1691, !1692, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1703}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1689, file: !1682, line: 24, baseType: !1558, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1689, file: !1682, line: 26, baseType: !1693, size: 32, offset: 32)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 32)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1689, file: !1682, line: 28, baseType: !356, size: 32, offset: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1689, file: !1682, line: 30, baseType: !166, size: 8, offset: 96)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1689, file: !1682, line: 32, baseType: !103, size: 32, offset: 128)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1689, file: !1682, line: 34, baseType: !166, size: 8, offset: 160)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1689, file: !1682, line: 36, baseType: !166, size: 8, offset: 168)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1689, file: !1682, line: 38, baseType: !166, size: 8, offset: 176)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1689, file: !1682, line: 40, baseType: !166, size: 8, offset: 184)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1689, file: !1682, line: 41, baseType: !1702, size: 32, offset: 192)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1689, file: !1682, line: 44, baseType: !1704, size: 32, offset: 224)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !212, line: 150, baseType: !1537)
!1705 = !DIGlobalVariableExpression(var: !1706, expr: !DIExpression())
!1706 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1707, file: !1785, line: 65, type: !131, isLocal: true, isDefinition: true)
!1707 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1708, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1709, retainedTypes: !1710, globals: !1782, splitDebugInlining: false, nameTableKind: None)
!1708 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!1709 = !{!576}
!1710 = !{!1711, !1713, !344, !163, !132, !1721, !1752}
!1711 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1712, line: 46, baseType: !432)
!1712 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!1714 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !507, line: 770, baseType: !1715)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 764, size: 128, elements: !1716)
!1716 = !{!1717, !1718, !1719, !1720}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1715, file: !507, line: 766, baseType: !131, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1715, file: !507, line: 767, baseType: !131, size: 32, offset: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1715, file: !507, line: 768, baseType: !131, size: 32, offset: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1715, file: !507, line: 769, baseType: !511, size: 32, offset: 96)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !507, line: 426, baseType: !1723)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 411, size: 28704, elements: !1724)
!1724 = !{!1725, !1727, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1742, !1747, !1751}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1723, file: !507, line: 413, baseType: !1726, size: 256)
!1726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 256, elements: !1616)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1723, file: !507, line: 414, baseType: !1728, size: 768, offset: 256)
!1728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 768, elements: !1729)
!1729 = !{!1730}
!1730 = !DISubrange(count: 24)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1723, file: !507, line: 415, baseType: !1726, size: 256, offset: 1024)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1723, file: !507, line: 416, baseType: !1728, size: 768, offset: 1280)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1723, file: !507, line: 417, baseType: !1726, size: 256, offset: 2048)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1723, file: !507, line: 418, baseType: !1728, size: 768, offset: 2304)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1723, file: !507, line: 419, baseType: !1726, size: 256, offset: 3072)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1723, file: !507, line: 420, baseType: !1728, size: 768, offset: 3328)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1723, file: !507, line: 421, baseType: !1726, size: 256, offset: 4096)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1723, file: !507, line: 422, baseType: !1739, size: 1792, offset: 4352)
!1739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 1792, elements: !1740)
!1740 = !{!1741}
!1741 = !DISubrange(count: 56)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1723, file: !507, line: 423, baseType: !1743, size: 1920, offset: 6144)
!1743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1744, size: 1920, elements: !1745)
!1744 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !163)
!1745 = !{!1746}
!1746 = !DISubrange(count: 240)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1723, file: !507, line: 424, baseType: !1748, size: 20608, offset: 8064)
!1748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 20608, elements: !1749)
!1749 = !{!1750}
!1750 = !DISubrange(count: 644)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1723, file: !507, line: 425, baseType: !131, size: 32, offset: 28672)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !1754)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !1755)
!1755 = !{!1756, !1757, !1758, !1759, !1760, !1761, !1762, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1773, !1774, !1775, !1777, !1779, !1781}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1754, file: !507, line: 447, baseType: !511, size: 32)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1754, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1754, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1754, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1754, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1754, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1754, file: !507, line: 453, baseType: !1763, size: 96, offset: 192)
!1763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1744, size: 96, elements: !772)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1754, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1754, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1754, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1754, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1754, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1754, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1754, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1754, file: !507, line: 461, baseType: !1772, size: 64, offset: 512)
!1772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 64, elements: !397)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1754, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1754, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1754, file: !507, line: 464, baseType: !1776, size: 128, offset: 640)
!1776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 128, elements: !679)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1754, file: !507, line: 465, baseType: !1778, size: 160, offset: 768)
!1778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 160, elements: !1340)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1754, file: !507, line: 466, baseType: !1780, size: 160, offset: 928)
!1780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 160, elements: !1340)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1754, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!1782 = !{!1783, !1809, !1812, !1814, !1816, !1705}
!1783 = !DIGlobalVariableExpression(var: !1784, expr: !DIExpression())
!1784 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1707, file: !1785, line: 285, type: !1786, isLocal: true, isDefinition: true, align: 32)
!1785 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1787)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !1788)
!1788 = !{!1789, !1808}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1787, file: !143, line: 60, baseType: !1790, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{!103, !1793}
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1795)
!1795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1796)
!1796 = !{!1797, !1798, !1799, !1800, !1806, !1807}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1795, file: !152, line: 380, baseType: !155, size: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1795, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1795, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1795, file: !152, line: 386, baseType: !1801, size: 32, offset: 96)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1803)
!1803 = !{!1804, !1805}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1802, file: !152, line: 359, baseType: !163, size: 8)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1802, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1795, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1795, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1787, file: !143, line: 65, baseType: !1793, size: 32, offset: 32)
!1809 = !DIGlobalVariableExpression(var: !1810, expr: !DIExpression())
!1810 = distinct !DIGlobalVariable(name: "lock", scope: !1707, file: !1785, line: 34, type: !1811, isLocal: true, isDefinition: true)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!1812 = !DIGlobalVariableExpression(var: !1813, expr: !DIExpression())
!1813 = distinct !DIGlobalVariable(name: "last_load", scope: !1707, file: !1785, line: 36, type: !132, isLocal: true, isDefinition: true)
!1814 = !DIGlobalVariableExpression(var: !1815, expr: !DIExpression())
!1815 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1707, file: !1785, line: 48, type: !132, isLocal: true, isDefinition: true)
!1816 = !DIGlobalVariableExpression(var: !1817, expr: !DIExpression())
!1817 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1707, file: !1785, line: 54, type: !132, isLocal: true, isDefinition: true)
!1818 = !DIGlobalVariableExpression(var: !1819, expr: !DIExpression())
!1819 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1820, file: !1902, line: 22, type: !1904, isLocal: true, isDefinition: true)
!1820 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1821, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1822, retainedTypes: !1823, globals: !1899, splitDebugInlining: false, nameTableKind: None)
!1821 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!1822 = !{!1138, !1144}
!1823 = !{!1824, !1888, !1893, !1191, !1144, !1138, !1898, !102}
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1826)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1139, line: 523, size: 288, elements: !1827)
!1827 = !{!1828, !1847, !1851, !1855, !1859, !1860, !1861, !1865, !1884}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1826, file: !1139, line: 524, baseType: !1829, size: 32)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!1830 = !DISubroutineType(types: !1831)
!1831 = !{!103, !1832, !1179, !1180}
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1834)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1835)
!1835 = !{!1836, !1837, !1838, !1839, !1845, !1846}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1834, file: !152, line: 380, baseType: !155, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1834, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1834, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1834, file: !152, line: 386, baseType: !1840, size: 32, offset: 96)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1842)
!1842 = !{!1843, !1844}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1841, file: !152, line: 359, baseType: !163, size: 8)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1841, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1834, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1834, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1826, file: !1139, line: 530, baseType: !1848, size: 32, offset: 32)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 32)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{!103, !1832, !1185}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1826, file: !1139, line: 532, baseType: !1852, size: 32, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 32)
!1853 = !DISubroutineType(types: !1854)
!1854 = !{!103, !1832, !1191, !1186}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1826, file: !1139, line: 535, baseType: !1856, size: 32, offset: 96)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!103, !1832, !1191}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1826, file: !1139, line: 537, baseType: !1856, size: 32, offset: 128)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1826, file: !1139, line: 539, baseType: !1856, size: 32, offset: 160)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1826, file: !1139, line: 541, baseType: !1862, size: 32, offset: 192)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 32)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{!103, !1832, !1179, !1138, !1144}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1826, file: !1139, line: 544, baseType: !1866, size: 32, offset: 224)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32)
!1867 = !DISubroutineType(types: !1868)
!1868 = !{!103, !1832, !1869, !166}
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1139, line: 478, size: 96, elements: !1871)
!1871 = !{!1872, !1878, !1883}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1870, file: !1139, line: 482, baseType: !1873, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1211, line: 33, baseType: !1874)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1211, line: 29, size: 32, elements: !1875)
!1875 = !{!1876}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1874, file: !1211, line: 30, baseType: !1877, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1870, file: !1139, line: 485, baseType: !1879, size: 32, offset: 32)
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1139, line: 464, baseType: !1880)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 32)
!1881 = !DISubroutineType(types: !1882)
!1882 = !{null, !1832, !1869, !1191}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1870, file: !1139, line: 493, baseType: !1191, size: 32, offset: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1826, file: !1139, line: 547, baseType: !1885, size: 32, offset: 256)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 32)
!1886 = !DISubroutineType(types: !1887)
!1887 = !{!132, !1832}
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1890)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1139, line: 428, size: 32, elements: !1891)
!1891 = !{!1892}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1890, file: !1139, line: 434, baseType: !1191, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1895)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1139, line: 441, size: 32, elements: !1896)
!1896 = !{!1897}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1895, file: !1139, line: 447, baseType: !1191, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 32)
!1899 = !{!1900, !1818}
!1900 = !DIGlobalVariableExpression(var: !1901, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1901 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1820, file: !1902, line: 37, type: !1903, isLocal: true, isDefinition: true)
!1902 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1903 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !356)
!1904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1905, size: 352, elements: !1906)
!1905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1832)
!1906 = !{!1907}
!1907 = !DISubrange(count: 11)
!1908 = !DIGlobalVariableExpression(var: !1909, expr: !DIExpression())
!1909 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1910, file: !1951, line: 139, type: !1957, isLocal: false, isDefinition: true)
!1910 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1911, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1912, globals: !1948, splitDebugInlining: false, nameTableKind: None)
!1911 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!1912 = !{!1913}
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 510, baseType: !1915)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 477, size: 1216, elements: !1916)
!1916 = !{!1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1915, file: !127, line: 479, baseType: !131, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1915, file: !127, line: 480, baseType: !131, size: 32, offset: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1915, file: !127, line: 481, baseType: !131, size: 32, offset: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1915, file: !127, line: 482, baseType: !131, size: 32, offset: 96)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1915, file: !127, line: 483, baseType: !131, size: 32, offset: 128)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1915, file: !127, line: 484, baseType: !131, size: 32, offset: 160)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1915, file: !127, line: 485, baseType: !824, size: 64, offset: 192)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1915, file: !127, line: 486, baseType: !131, size: 32, offset: 256)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1915, file: !127, line: 487, baseType: !131, size: 32, offset: 288)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1915, file: !127, line: 488, baseType: !824, size: 64, offset: 320)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1915, file: !127, line: 489, baseType: !131, size: 32, offset: 384)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1915, file: !127, line: 490, baseType: !131, size: 32, offset: 416)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1915, file: !127, line: 491, baseType: !824, size: 64, offset: 448)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1915, file: !127, line: 492, baseType: !131, size: 32, offset: 512)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1915, file: !127, line: 493, baseType: !131, size: 32, offset: 544)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1915, file: !127, line: 494, baseType: !824, size: 64, offset: 576)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1915, file: !127, line: 495, baseType: !131, size: 32, offset: 640)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1915, file: !127, line: 496, baseType: !131, size: 32, offset: 672)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1915, file: !127, line: 497, baseType: !824, size: 64, offset: 704)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1915, file: !127, line: 498, baseType: !131, size: 32, offset: 768)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1915, file: !127, line: 499, baseType: !131, size: 32, offset: 800)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1915, file: !127, line: 500, baseType: !824, size: 64, offset: 832)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1915, file: !127, line: 501, baseType: !131, size: 32, offset: 896)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1915, file: !127, line: 502, baseType: !131, size: 32, offset: 928)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1915, file: !127, line: 503, baseType: !824, size: 64, offset: 960)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1915, file: !127, line: 504, baseType: !131, size: 32, offset: 1024)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1915, file: !127, line: 505, baseType: !131, size: 32, offset: 1056)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1915, file: !127, line: 506, baseType: !132, size: 32, offset: 1088)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1915, file: !127, line: 507, baseType: !131, size: 32, offset: 1120)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1915, file: !127, line: 508, baseType: !131, size: 32, offset: 1152)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1915, file: !127, line: 509, baseType: !131, size: 32, offset: 1184)
!1948 = !{!1949, !1952, !1908}
!1949 = !DIGlobalVariableExpression(var: !1950, expr: !DIExpression())
!1950 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1910, file: !1951, line: 137, type: !132, isLocal: false, isDefinition: true)
!1951 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1952 = !DIGlobalVariableExpression(var: !1953, expr: !DIExpression())
!1953 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1910, file: !1951, line: 138, type: !1954, isLocal: false, isDefinition: true)
!1954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !265, size: 128, elements: !1955)
!1955 = !{!1956}
!1956 = !DISubrange(count: 16)
!1957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !265, size: 64, elements: !1616)
!1958 = !DIGlobalVariableExpression(var: !1959, expr: !DIExpression())
!1959 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1960, file: !1963, line: 23, type: !271, isLocal: false, isDefinition: true)
!1960 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1961, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1962, splitDebugInlining: false, nameTableKind: None)
!1961 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!1962 = !{!1958}
!1963 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1964 = !DIGlobalVariableExpression(var: !1965, expr: !DIExpression())
!1965 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1966, file: !1970, line: 86, type: !2217, isLocal: false, isDefinition: true, align: 512)
!1966 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1967, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1968, retainedTypes: !1977, globals: !2050, splitDebugInlining: false, nameTableKind: None)
!1967 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!1968 = !{!1969, !30, !576}
!1969 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1970, line: 63, baseType: !32, size: 32, elements: !1971)
!1970 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1971 = !{!1972, !1973, !1974, !1975, !1976}
!1972 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1973 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1974 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1975 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1976 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1977 = !{!356, !102, !103, !1978, !1081, !132, !2008, !344, !163, !2033}
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1980)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1981, line: 51, size: 64, elements: !1982)
!1981 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1982 = !{!1983, !2003}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1980, file: !1981, line: 52, baseType: !1984, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1981, line: 38, baseType: !1985)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 32)
!1986 = !DISubroutineType(types: !1987)
!1987 = !{!103, !1988, !270, !340}
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 32)
!1989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1990)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1991)
!1991 = !{!1992, !1993, !1994, !1995, !2001, !2002}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1990, file: !152, line: 380, baseType: !155, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1990, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1990, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1990, file: !152, line: 386, baseType: !1996, size: 32, offset: 96)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1998)
!1998 = !{!1999, !2000}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1997, file: !152, line: 359, baseType: !163, size: 8)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1997, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1990, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1990, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1980, file: !1981, line: 53, baseType: !2004, size: 32, offset: 32)
!2004 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1981, line: 47, baseType: !2005)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 32)
!2006 = !DISubroutineType(types: !2007)
!2007 = !{!103, !1988, !270, !340, !132}
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2010)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2011)
!2011 = !{!2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2010, file: !507, line: 447, baseType: !511, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2010, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2010, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2010, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2010, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2010, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2010, file: !507, line: 453, baseType: !1763, size: 96, offset: 192)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2010, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2010, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2010, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2010, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2010, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2010, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2010, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2010, file: !507, line: 461, baseType: !1772, size: 64, offset: 512)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2010, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2010, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2010, file: !507, line: 464, baseType: !1776, size: 128, offset: 640)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2010, file: !507, line: 465, baseType: !1778, size: 160, offset: 768)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2010, file: !507, line: 466, baseType: !1780, size: 160, offset: 928)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2010, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !507, line: 426, baseType: !2035)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 411, size: 28704, elements: !2036)
!2036 = !{!2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2035, file: !507, line: 413, baseType: !1726, size: 256)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2035, file: !507, line: 414, baseType: !1728, size: 768, offset: 256)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2035, file: !507, line: 415, baseType: !1726, size: 256, offset: 1024)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2035, file: !507, line: 416, baseType: !1728, size: 768, offset: 1280)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2035, file: !507, line: 417, baseType: !1726, size: 256, offset: 2048)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2035, file: !507, line: 418, baseType: !1728, size: 768, offset: 2304)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2035, file: !507, line: 419, baseType: !1726, size: 256, offset: 3072)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2035, file: !507, line: 420, baseType: !1728, size: 768, offset: 3328)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2035, file: !507, line: 421, baseType: !1726, size: 256, offset: 4096)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2035, file: !507, line: 422, baseType: !1739, size: 1792, offset: 4352)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2035, file: !507, line: 423, baseType: !1743, size: 1920, offset: 6144)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2035, file: !507, line: 424, baseType: !1748, size: 20608, offset: 8064)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2035, file: !507, line: 425, baseType: !131, size: 32, offset: 28672)
!2050 = !{!2051, !2173, !2182, !2184, !1964, !2187, !2189, !2194}
!2051 = !DIGlobalVariableExpression(var: !2052, expr: !DIExpression())
!2052 = distinct !DIGlobalVariable(name: "_kernel", scope: !1966, file: !1970, line: 40, type: !2053, isLocal: false, isDefinition: true)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !316, line: 158, size: 288, elements: !2054)
!2054 = !{!2055, !2168}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2053, file: !316, line: 159, baseType: !2056, size: 192)
!2056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2057, size: 192, elements: !496)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !316, line: 100, size: 192, elements: !2058)
!2058 = !{!2059, !2060, !2061, !2162, !2163, !2164, !2165}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2057, file: !316, line: 102, baseType: !132, size: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2057, file: !316, line: 105, baseType: !1081, size: 32, offset: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2057, file: !316, line: 108, baseType: !2062, size: 32, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 32)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !2064)
!2064 = !{!2065, !2123, !2135, !2136, !2137, !2138, !2144, !2157}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2063, file: !367, line: 247, baseType: !2066, size: 384)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !2067)
!2067 = !{!2068, !2092, !2099, !2100, !2101, !2110, !2111, !2112}
!2068 = !DIDerivedType(tag: DW_TAG_member, scope: !2066, file: !367, line: 60, baseType: !2069, size: 64)
!2069 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2066, file: !367, line: 60, size: 64, elements: !2070)
!2070 = !{!2071, !2086}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2069, file: !367, line: 61, baseType: !2072, size: 64)
!2072 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2073)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2074)
!2074 = !{!2075, !2081}
!2075 = !DIDerivedType(tag: DW_TAG_member, scope: !2073, file: !321, line: 38, baseType: !2076, size: 32)
!2076 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2073, file: !321, line: 38, size: 32, elements: !2077)
!2077 = !{!2078, !2080}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2076, file: !321, line: 39, baseType: !2079, size: 32)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2076, file: !321, line: 40, baseType: !2079, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, scope: !2073, file: !321, line: 42, baseType: !2082, size: 32, offset: 32)
!2082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2073, file: !321, line: 42, size: 32, elements: !2083)
!2083 = !{!2084, !2085}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2082, file: !321, line: 43, baseType: !2079, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2082, file: !321, line: 44, baseType: !2079, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2069, file: !367, line: 62, baseType: !2087, size: 64)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !2088)
!2088 = !{!2089}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2087, file: !392, line: 50, baseType: !2090, size: 64)
!2090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2091, size: 64, elements: !397)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2066, file: !367, line: 68, baseType: !2093, size: 32, offset: 64)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !2095)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !2096)
!2096 = !{!2097}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2095, file: !316, line: 232, baseType: !2098, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2073)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2066, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2066, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!2101 = !DIDerivedType(tag: DW_TAG_member, scope: !2066, file: !367, line: 90, baseType: !2102, size: 16, offset: 112)
!2102 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2066, file: !367, line: 90, size: 16, elements: !2103)
!2103 = !{!2104, !2109}
!2104 = !DIDerivedType(tag: DW_TAG_member, scope: !2102, file: !367, line: 91, baseType: !2105, size: 16)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2102, file: !367, line: 91, size: 16, elements: !2106)
!2106 = !{!2107, !2108}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2105, file: !367, line: 96, baseType: !415, size: 8)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2105, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2102, file: !367, line: 100, baseType: !340, size: 16)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2066, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2066, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2066, file: !367, line: 131, baseType: !2113, size: 192, offset: 192)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !2114)
!2114 = !{!2115, !2116, !2122}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2113, file: !316, line: 245, baseType: !2072, size: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2113, file: !316, line: 246, baseType: !2117, size: 32, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !2118)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 32)
!2119 = !DISubroutineType(types: !2120)
!2120 = !{null, !2121}
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2113, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2063, file: !367, line: 250, baseType: !2124, size: 288, offset: 384)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !2125)
!2125 = !{!2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2124, file: !436, line: 26, baseType: !132, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2124, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2124, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2124, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2124, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2124, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2124, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2124, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2124, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2063, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2063, file: !367, line: 256, baseType: !2094, size: 64, offset: 704)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2063, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2063, file: !367, line: 300, baseType: !2139, size: 96, offset: 800)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !2140)
!2140 = !{!2141, !2142, !2143}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2139, file: !367, line: 153, baseType: !22, size: 32)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2139, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2139, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2063, file: !367, line: 325, baseType: !2145, size: 32, offset: 896)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 32)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !2147)
!2147 = !{!2148, !2154, !2155}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2146, file: !312, line: 5074, baseType: !2149, size: 96)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !2150)
!2150 = !{!2151, !2152, !2153}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2149, file: !462, line: 57, baseType: !465, size: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2149, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2149, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2146, file: !312, line: 5075, baseType: !2094, size: 64, offset: 96)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2146, file: !312, line: 5076, baseType: !2156, offset: 160)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2063, file: !367, line: 343, baseType: !2158, size: 64, offset: 928)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !2159)
!2159 = !{!2160, !2161}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2158, file: !436, line: 63, baseType: !132, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2158, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2057, file: !316, line: 111, baseType: !2062, size: 32, offset: 96)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2057, file: !316, line: 124, baseType: !103, size: 32, offset: 128)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2057, file: !316, line: 127, baseType: !163, size: 8, offset: 160)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2057, file: !316, line: 153, baseType: !2166, offset: 168)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2167, line: 33, elements: !473)
!2167 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2053, file: !316, line: 170, baseType: !2169, size: 96, offset: 192)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !316, line: 83, size: 96, elements: !2170)
!2170 = !{!2171, !2172}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2169, file: !316, line: 86, baseType: !2062, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2169, file: !316, line: 90, baseType: !2098, size: 64, offset: 32)
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1966, file: !1970, line: 43, type: !2175, isLocal: false, isDefinition: true, align: 512)
!2175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2176, size: 8704, elements: !2180)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2177, line: 47, size: 8, elements: !2178)
!2177 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2178 = !{!2179}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2176, file: !2177, line: 48, baseType: !108, size: 8)
!2180 = !{!2181}
!2181 = !DISubrange(count: 1088)
!2182 = !DIGlobalVariableExpression(var: !2183, expr: !DIExpression())
!2183 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1966, file: !1970, line: 44, type: !2063, isLocal: false, isDefinition: true)
!2184 = !DIGlobalVariableExpression(var: !2185, expr: !DIExpression())
!2185 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1966, file: !1970, line: 48, type: !2186, isLocal: false, isDefinition: true)
!2186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2063, size: 1024, elements: !496)
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1966, file: !1970, line: 217, type: !166, isLocal: false, isDefinition: true)
!2189 = !DIGlobalVariableExpression(var: !2190, expr: !DIExpression())
!2190 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1966, file: !1970, line: 50, type: !2191, isLocal: true, isDefinition: true, align: 512)
!2191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2176, size: 3072, elements: !2192)
!2192 = !{!497, !2193}
!2193 = !DISubrange(count: 384)
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(name: "levels", scope: !2196, file: !1970, line: 232, type: !2216, isLocal: true, isDefinition: true)
!2196 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1970, file: !1970, line: 230, type: !2197, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !2199)
!2197 = !DISubroutineType(types: !2198)
!2198 = !{null, !1969}
!2199 = !{!2200, !2201, !2211, !2215}
!2200 = !DILocalVariable(name: "level", arg: 1, scope: !2196, file: !1970, line: 230, type: !1969)
!2201 = !DILocalVariable(name: "entry", scope: !2196, file: !1970, line: 244, type: !2202)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2204)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !2205)
!2205 = !{!2206, !2210}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2204, file: !143, line: 60, baseType: !2207, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 32)
!2208 = !DISubroutineType(types: !2209)
!2209 = !{!103, !1988}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2204, file: !143, line: 65, baseType: !1988, size: 32, offset: 32)
!2211 = !DILocalVariable(name: "dev", scope: !2212, file: !1970, line: 247, type: !1988)
!2212 = distinct !DILexicalBlock(scope: !2213, file: !1970, line: 246, column: 64)
!2213 = distinct !DILexicalBlock(scope: !2214, file: !1970, line: 246, column: 2)
!2214 = distinct !DILexicalBlock(scope: !2196, file: !1970, line: 246, column: 2)
!2215 = !DILocalVariable(name: "rc", scope: !2212, file: !1970, line: 248, type: !103)
!2216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2202, size: 192, elements: !1331)
!2217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2176, size: 16896, elements: !2218)
!2218 = !{!497, !2219}
!2219 = !DISubrange(count: 2112)
!2220 = !DIGlobalVariableExpression(var: !2221, expr: !DIExpression())
!2221 = distinct !DIGlobalVariable(name: "states_str", scope: !2222, file: !2223, line: 276, type: !2344, isLocal: true, isDefinition: true)
!2222 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2223, file: !2223, line: 271, type: !2224, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !2335)
!2223 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2224 = !DISubroutineType(types: !2225)
!2225 = !{!155, !2226, !1081, !356}
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !2227)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 32)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !2229)
!2229 = !{!2230, !2288, !2300, !2301, !2302, !2303, !2309, !2322}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2228, file: !367, line: 247, baseType: !2231, size: 384)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !2232)
!2232 = !{!2233, !2257, !2264, !2265, !2266, !2275, !2276, !2277}
!2233 = !DIDerivedType(tag: DW_TAG_member, scope: !2231, file: !367, line: 60, baseType: !2234, size: 64)
!2234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2231, file: !367, line: 60, size: 64, elements: !2235)
!2235 = !{!2236, !2251}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2234, file: !367, line: 61, baseType: !2237, size: 64)
!2237 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2238)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2239)
!2239 = !{!2240, !2246}
!2240 = !DIDerivedType(tag: DW_TAG_member, scope: !2238, file: !321, line: 38, baseType: !2241, size: 32)
!2241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2238, file: !321, line: 38, size: 32, elements: !2242)
!2242 = !{!2243, !2245}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2241, file: !321, line: 39, baseType: !2244, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2241, file: !321, line: 40, baseType: !2244, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, scope: !2238, file: !321, line: 42, baseType: !2247, size: 32, offset: 32)
!2247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2238, file: !321, line: 42, size: 32, elements: !2248)
!2248 = !{!2249, !2250}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2247, file: !321, line: 43, baseType: !2244, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2247, file: !321, line: 44, baseType: !2244, size: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2234, file: !367, line: 62, baseType: !2252, size: 64)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !2253)
!2253 = !{!2254}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2252, file: !392, line: 50, baseType: !2255, size: 64)
!2255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 64, elements: !397)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2231, file: !367, line: 68, baseType: !2258, size: 32, offset: 64)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !2260)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !2261)
!2261 = !{!2262}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2260, file: !316, line: 232, baseType: !2263, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2238)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2231, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2231, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!2266 = !DIDerivedType(tag: DW_TAG_member, scope: !2231, file: !367, line: 90, baseType: !2267, size: 16, offset: 112)
!2267 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2231, file: !367, line: 90, size: 16, elements: !2268)
!2268 = !{!2269, !2274}
!2269 = !DIDerivedType(tag: DW_TAG_member, scope: !2267, file: !367, line: 91, baseType: !2270, size: 16)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2267, file: !367, line: 91, size: 16, elements: !2271)
!2271 = !{!2272, !2273}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2270, file: !367, line: 96, baseType: !415, size: 8)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2270, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2267, file: !367, line: 100, baseType: !340, size: 16)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2231, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2231, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2231, file: !367, line: 131, baseType: !2278, size: 192, offset: 192)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !2279)
!2279 = !{!2280, !2281, !2287}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2278, file: !316, line: 245, baseType: !2237, size: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2278, file: !316, line: 246, baseType: !2282, size: 32, offset: 64)
!2282 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !2283)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 32)
!2284 = !DISubroutineType(types: !2285)
!2285 = !{null, !2286}
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2278, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2228, file: !367, line: 250, baseType: !2289, size: 288, offset: 384)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !2290)
!2290 = !{!2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2289, file: !436, line: 26, baseType: !132, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2289, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2289, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2289, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2289, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2289, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2289, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2289, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2289, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2228, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2228, file: !367, line: 256, baseType: !2259, size: 64, offset: 704)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2228, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2228, file: !367, line: 300, baseType: !2304, size: 96, offset: 800)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !2305)
!2305 = !{!2306, !2307, !2308}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2304, file: !367, line: 153, baseType: !22, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2304, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2304, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2228, file: !367, line: 325, baseType: !2310, size: 32, offset: 896)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 32)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !2312)
!2312 = !{!2313, !2319, !2320}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2311, file: !312, line: 5074, baseType: !2314, size: 96)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !2315)
!2315 = !{!2316, !2317, !2318}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2314, file: !462, line: 57, baseType: !465, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2314, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2314, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2311, file: !312, line: 5075, baseType: !2259, size: 64, offset: 96)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2311, file: !312, line: 5076, baseType: !2321, offset: 160)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2228, file: !367, line: 343, baseType: !2323, size: 64, offset: 928)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !2324)
!2324 = !{!2325, !2326}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2323, file: !436, line: 63, baseType: !132, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2323, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!2327 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2328, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2329, globals: !2331, splitDebugInlining: false, nameTableKind: None)
!2328 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2329 = !{!102, !155, !1711, !163, !103, !2330, !24, !356, !1081, !22, !132, !1608}
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 32)
!2331 = !{!2220, !2332}
!2332 = !DIGlobalVariableExpression(var: !2333, expr: !DIExpression())
!2333 = distinct !DIGlobalVariable(name: "states_sz", scope: !2222, file: !2223, line: 279, type: !2334, isLocal: true, isDefinition: true)
!2334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1903, size: 256, elements: !1616)
!2335 = !{!2336, !2337, !2338, !2339, !2340, !2341, !2342}
!2336 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2222, file: !2223, line: 271, type: !2226)
!2337 = !DILocalVariable(name: "buf", arg: 2, scope: !2222, file: !2223, line: 271, type: !1081)
!2338 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2222, file: !2223, line: 271, type: !356)
!2339 = !DILocalVariable(name: "off", scope: !2222, file: !2223, line: 273, type: !356)
!2340 = !DILocalVariable(name: "bit", scope: !2222, file: !2223, line: 274, type: !163)
!2341 = !DILocalVariable(name: "thread_state", scope: !2222, file: !2223, line: 275, type: !163)
!2342 = !DILocalVariable(name: "index", scope: !2343, file: !2223, line: 293, type: !163)
!2343 = distinct !DILexicalBlock(scope: !2222, file: !2223, line: 293, column: 2)
!2344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 256, elements: !1616)
!2345 = !DIGlobalVariableExpression(var: !2346, expr: !DIExpression())
!2346 = distinct !DIGlobalVariable(name: "lock", scope: !2347, file: !2366, line: 39, type: !2367, isLocal: true, isDefinition: true)
!2347 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2348, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2349, globals: !2365, splitDebugInlining: false, nameTableKind: None)
!2348 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2349 = !{!102, !166, !103, !2350}
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2352)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2353)
!2353 = !{!2354, !2360}
!2354 = !DIDerivedType(tag: DW_TAG_member, scope: !2352, file: !321, line: 38, baseType: !2355, size: 32)
!2355 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2352, file: !321, line: 38, size: 32, elements: !2356)
!2356 = !{!2357, !2359}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2355, file: !321, line: 39, baseType: !2358, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2355, file: !321, line: 40, baseType: !2358, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, scope: !2352, file: !321, line: 42, baseType: !2361, size: 32, offset: 32)
!2361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2352, file: !321, line: 42, size: 32, elements: !2362)
!2362 = !{!2363, !2364}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2361, file: !321, line: 43, baseType: !2358, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2361, file: !321, line: 44, baseType: !2358, size: 32)
!2365 = !{!2345}
!2366 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2368 = !DIGlobalVariableExpression(var: !2369, expr: !DIExpression())
!2369 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2370, file: !2478, line: 56, type: !2467, isLocal: false, isDefinition: true)
!2370 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2371, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2372, globals: !2475, splitDebugInlining: false, nameTableKind: None)
!2371 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2372 = !{!2373, !1081, !102, !2473, !270, !1711, !344, !103, !132, !1608, !2474}
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 32)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !2375)
!2375 = !{!2376, !2434, !2446, !2447, !2448, !2449, !2455, !2468}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2374, file: !367, line: 247, baseType: !2377, size: 384)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !2378)
!2378 = !{!2379, !2403, !2410, !2411, !2412, !2421, !2422, !2423}
!2379 = !DIDerivedType(tag: DW_TAG_member, scope: !2377, file: !367, line: 60, baseType: !2380, size: 64)
!2380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2377, file: !367, line: 60, size: 64, elements: !2381)
!2381 = !{!2382, !2397}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2380, file: !367, line: 61, baseType: !2383, size: 64)
!2383 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2384)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2385)
!2385 = !{!2386, !2392}
!2386 = !DIDerivedType(tag: DW_TAG_member, scope: !2384, file: !321, line: 38, baseType: !2387, size: 32)
!2387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2384, file: !321, line: 38, size: 32, elements: !2388)
!2388 = !{!2389, !2391}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2387, file: !321, line: 39, baseType: !2390, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2387, file: !321, line: 40, baseType: !2390, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, scope: !2384, file: !321, line: 42, baseType: !2393, size: 32, offset: 32)
!2393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2384, file: !321, line: 42, size: 32, elements: !2394)
!2394 = !{!2395, !2396}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2393, file: !321, line: 43, baseType: !2390, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2393, file: !321, line: 44, baseType: !2390, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2380, file: !367, line: 62, baseType: !2398, size: 64)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !2399)
!2399 = !{!2400}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2398, file: !392, line: 50, baseType: !2401, size: 64)
!2401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2402, size: 64, elements: !397)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2377, file: !367, line: 68, baseType: !2404, size: 32, offset: 64)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !2406)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !2407)
!2407 = !{!2408}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2406, file: !316, line: 232, baseType: !2409, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2384)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2377, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2377, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!2412 = !DIDerivedType(tag: DW_TAG_member, scope: !2377, file: !367, line: 90, baseType: !2413, size: 16, offset: 112)
!2413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2377, file: !367, line: 90, size: 16, elements: !2414)
!2414 = !{!2415, !2420}
!2415 = !DIDerivedType(tag: DW_TAG_member, scope: !2413, file: !367, line: 91, baseType: !2416, size: 16)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2413, file: !367, line: 91, size: 16, elements: !2417)
!2417 = !{!2418, !2419}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2416, file: !367, line: 96, baseType: !415, size: 8)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2416, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2413, file: !367, line: 100, baseType: !340, size: 16)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2377, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2377, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2377, file: !367, line: 131, baseType: !2424, size: 192, offset: 192)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !2425)
!2425 = !{!2426, !2427, !2433}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2424, file: !316, line: 245, baseType: !2383, size: 64)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2424, file: !316, line: 246, baseType: !2428, size: 32, offset: 64)
!2428 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !2429)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 32)
!2430 = !DISubroutineType(types: !2431)
!2431 = !{null, !2432}
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2424, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2374, file: !367, line: 250, baseType: !2435, size: 288, offset: 384)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !2436)
!2436 = !{!2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2435, file: !436, line: 26, baseType: !132, size: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2435, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2435, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2435, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2435, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2435, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2435, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2435, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2435, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2374, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2374, file: !367, line: 256, baseType: !2405, size: 64, offset: 704)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2374, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2374, file: !367, line: 300, baseType: !2450, size: 96, offset: 800)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !2451)
!2451 = !{!2452, !2453, !2454}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2450, file: !367, line: 153, baseType: !22, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2450, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2450, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2374, file: !367, line: 325, baseType: !2456, size: 32, offset: 896)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 32)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !2458)
!2458 = !{!2459, !2465, !2466}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2457, file: !312, line: 5074, baseType: !2460, size: 96)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !2461)
!2461 = !{!2462, !2463, !2464}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2460, file: !462, line: 57, baseType: !465, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2460, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2460, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2457, file: !312, line: 5075, baseType: !2405, size: 64, offset: 96)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2457, file: !312, line: 5076, baseType: !2467, offset: 160)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2374, file: !367, line: 343, baseType: !2469, size: 64, offset: 928)
!2469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !2470)
!2470 = !{!2471, !2472}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2469, file: !436, line: 63, baseType: !132, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2469, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 32)
!2475 = !{!2368, !2476, !2479, !2481}
!2476 = !DIGlobalVariableExpression(var: !2477, expr: !DIExpression())
!2477 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2370, file: !2478, line: 404, type: !103, isLocal: true, isDefinition: true)
!2478 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2479 = !DIGlobalVariableExpression(var: !2480, expr: !DIExpression())
!2480 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2370, file: !2478, line: 405, type: !103, isLocal: true, isDefinition: true)
!2481 = !DIGlobalVariableExpression(var: !2482, expr: !DIExpression())
!2482 = distinct !DIGlobalVariable(name: "pending_current", scope: !2370, file: !2478, line: 425, type: !2373, isLocal: true, isDefinition: true)
!2483 = !DIGlobalVariableExpression(var: !2484, expr: !DIExpression())
!2484 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2485, file: !2515, line: 15, type: !1608, isLocal: true, isDefinition: true)
!2485 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2486, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2487, globals: !2512, splitDebugInlining: false, nameTableKind: None)
!2486 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2487 = !{!1711, !102, !344, !132, !1608, !103, !2488, !1081, !432}
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 32)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !2490)
!2490 = !{!2491, !2506, !2511}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2489, file: !316, line: 245, baseType: !2492, size: 64)
!2492 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2493)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2494)
!2494 = !{!2495, !2501}
!2495 = !DIDerivedType(tag: DW_TAG_member, scope: !2493, file: !321, line: 38, baseType: !2496, size: 32)
!2496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2493, file: !321, line: 38, size: 32, elements: !2497)
!2497 = !{!2498, !2500}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2496, file: !321, line: 39, baseType: !2499, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2496, file: !321, line: 40, baseType: !2499, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, scope: !2493, file: !321, line: 42, baseType: !2502, size: 32, offset: 32)
!2502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2493, file: !321, line: 42, size: 32, elements: !2503)
!2503 = !{!2504, !2505}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2502, file: !321, line: 43, baseType: !2499, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2502, file: !321, line: 44, baseType: !2499, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2489, file: !316, line: 246, baseType: !2507, size: 32, offset: 64)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !2508)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 32)
!2509 = !DISubroutineType(types: !2510)
!2510 = !{null, !2488}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2489, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!2512 = !{!2483, !2513, !2517, !2519}
!2513 = !DIGlobalVariableExpression(var: !2514, expr: !DIExpression())
!2514 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2485, file: !2515, line: 19, type: !2516, isLocal: true, isDefinition: true)
!2515 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2517 = !DIGlobalVariableExpression(var: !2518, expr: !DIExpression())
!2518 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2485, file: !2515, line: 25, type: !103, isLocal: true, isDefinition: true)
!2519 = !DIGlobalVariableExpression(var: !2520, expr: !DIExpression())
!2520 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2485, file: !2515, line: 17, type: !2521, isLocal: true, isDefinition: true)
!2521 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2493)
!2522 = !DIGlobalVariableExpression(var: !2523, expr: !DIExpression())
!2523 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2524, file: !2543, line: 55, type: !2544, isLocal: true, isDefinition: true, align: 32)
!2524 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2525, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2526, globals: !2542, splitDebugInlining: false, nameTableKind: None)
!2525 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2526 = !{!102, !1711, !103, !2527}
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2529)
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2530)
!2530 = !{!2531, !2537}
!2531 = !DIDerivedType(tag: DW_TAG_member, scope: !2529, file: !321, line: 38, baseType: !2532, size: 32)
!2532 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2529, file: !321, line: 38, size: 32, elements: !2533)
!2533 = !{!2534, !2536}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2532, file: !321, line: 39, baseType: !2535, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2532, file: !321, line: 40, baseType: !2535, size: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, scope: !2529, file: !321, line: 42, baseType: !2538, size: 32, offset: 32)
!2538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2529, file: !321, line: 42, size: 32, elements: !2539)
!2539 = !{!2540, !2541}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2538, file: !321, line: 43, baseType: !2535, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2538, file: !321, line: 44, baseType: !2535, size: 32)
!2542 = !{!2522}
!2543 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2545)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !2546)
!2546 = !{!2547, !2554}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2545, file: !143, line: 60, baseType: !2548, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 32)
!2549 = !DISubroutineType(types: !2550)
!2550 = !{!103, !2551}
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2553)
!2553 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !143, line: 48, flags: DIFlagFwdDecl)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2545, file: !143, line: 65, baseType: !2551, size: 32, offset: 32)
!2555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2556, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2556 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2558 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2559 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2560, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2561, retainedTypes: !2569, splitDebugInlining: false, nameTableKind: None)
!2560 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2561 = !{!30, !2562}
!2562 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2563, line: 54, baseType: !32, size: 32, elements: !2564)
!2563 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2564 = !{!2565, !2566, !2567, !2568}
!2565 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2566 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2567 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2568 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2569 = !{!102, !356, !270, !24, !2570, !22, !2576, !103, !855, !2591}
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2563, line: 58, baseType: !2572)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2563, line: 58, size: 64, elements: !2573)
!2573 = !{!2574}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2572, file: !2563, line: 58, baseType: !2575, size: 64)
!2575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !1616)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 32)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2563, line: 68, size: 128, elements: !2578)
!2578 = !{!2579, !2582, !2583, !2584}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2577, file: !2563, line: 69, baseType: !2580, size: 64)
!2580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2581, size: 64, elements: !397)
!2581 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2563, line: 61, baseType: !132)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2577, file: !2563, line: 70, baseType: !2581, size: 32, offset: 64)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2577, file: !2563, line: 71, baseType: !132, size: 32, offset: 96)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2577, file: !2563, line: 77, baseType: !2585, offset: 128)
!2585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2586, elements: !2589)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2563, line: 64, size: 32, elements: !2587)
!2587 = !{!2588}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2586, file: !2563, line: 65, baseType: !2581, size: 32)
!2589 = !{!2590}
!2590 = !DISubrange(count: 0)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 32)
!2592 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2593, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2594, retainedTypes: !2614, splitDebugInlining: false, nameTableKind: None)
!2593 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2594 = !{!2595, !2603}
!2595 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2596, line: 69, baseType: !32, size: 32, elements: !2597)
!2596 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2597 = !{!2598, !2599, !2600, !2601, !2602}
!2598 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2599 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2600 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2601 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2602 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2603 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2596, line: 56, baseType: !32, size: 32, elements: !2604)
!2604 = !{!2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613}
!2605 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2606 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2607 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2608 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2609 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2610 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2611 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2612 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2613 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2614 = !{!103, !2595, !2603, !2615, !416, !173, !2617, !2618, !164, !341, !155, !356, !102, !22, !32, !2620, !2621, !2622, !1111, !2623, !433, !2624, !2616, !2625, !2626, !2627, !2628}
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2596, line: 31, baseType: !2616)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !433)
!2617 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !357, line: 329, baseType: !32)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2596, line: 32, baseType: !2619)
!2619 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1609)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !357, line: 145, baseType: !103)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 32)
!2629 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2630, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2630 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2631 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2632, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2633, splitDebugInlining: false, nameTableKind: None)
!2632 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2633 = !{!163, !102, !103, !2634, !1711, !132, !1608}
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2636)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !212, line: 336, size: 608, elements: !2637)
!2637 = !{!2638, !2657, !2661, !2665, !2678, !2683, !2687, !2691, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !2636, file: !212, line: 365, baseType: !2639, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 32)
!2640 = !DISubroutineType(types: !2641)
!2641 = !{!103, !2642, !233}
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2644)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !2645)
!2645 = !{!2646, !2647, !2648, !2649, !2655, !2656}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2644, file: !152, line: 380, baseType: !155, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2644, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2644, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2644, file: !152, line: 386, baseType: !2650, size: 32, offset: 96)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 32)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !2652)
!2652 = !{!2653, !2654}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2651, file: !152, line: 359, baseType: !163, size: 8)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2651, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2644, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2644, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !2636, file: !212, line: 366, baseType: !2658, size: 32, offset: 32)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 32)
!2659 = !DISubroutineType(types: !2660)
!2660 = !{null, !2642, !164}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !2636, file: !212, line: 374, baseType: !2662, size: 32, offset: 64)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 32)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!103, !2642}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2636, file: !212, line: 377, baseType: !2666, size: 32, offset: 96)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 32)
!2667 = !DISubroutineType(types: !2668)
!2668 = !{!103, !2642, !2669}
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 32)
!2670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2671)
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !212, line: 122, size: 64, elements: !2672)
!2672 = !{!2673, !2674, !2675, !2676, !2677}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2671, file: !212, line: 123, baseType: !132, size: 32)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2671, file: !212, line: 124, baseType: !163, size: 8, offset: 32)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !2671, file: !212, line: 125, baseType: !163, size: 8, offset: 40)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !2671, file: !212, line: 126, baseType: !163, size: 8, offset: 48)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !2671, file: !212, line: 127, baseType: !163, size: 8, offset: 56)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !2636, file: !212, line: 379, baseType: !2679, size: 32, offset: 128)
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 32)
!2680 = !DISubroutineType(types: !2681)
!2681 = !{!103, !2642, !2682}
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !2636, file: !212, line: 384, baseType: !2684, size: 32, offset: 160)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 32)
!2685 = !DISubroutineType(types: !2686)
!2686 = !{!103, !2642, !264, !103}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !2636, file: !212, line: 393, baseType: !2688, size: 32, offset: 192)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 32)
!2689 = !DISubroutineType(types: !2690)
!2690 = !{!103, !2642, !270, !271}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !2636, file: !212, line: 402, baseType: !2692, size: 32, offset: 224)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 32)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{null, !2642}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !2636, file: !212, line: 405, baseType: !2692, size: 32, offset: 256)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !2636, file: !212, line: 408, baseType: !2662, size: 32, offset: 288)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !2636, file: !212, line: 411, baseType: !2692, size: 32, offset: 320)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !2636, file: !212, line: 414, baseType: !2692, size: 32, offset: 352)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !2636, file: !212, line: 417, baseType: !2662, size: 32, offset: 384)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !2636, file: !212, line: 420, baseType: !2662, size: 32, offset: 416)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !2636, file: !212, line: 423, baseType: !2692, size: 32, offset: 448)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !2636, file: !212, line: 426, baseType: !2692, size: 32, offset: 480)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !2636, file: !212, line: 429, baseType: !2662, size: 32, offset: 512)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !2636, file: !212, line: 432, baseType: !2662, size: 32, offset: 544)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !2636, file: !212, line: 435, baseType: !2706, size: 32, offset: 576)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 32)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{null, !2642, !2709, !102}
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !212, line: 142, baseType: !2710)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 32)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{null, !2642, !102}
!2713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2715, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2715 = !{!2716, !30}
!2716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2717, line: 27, baseType: !32, size: 32, elements: !2718)
!2717 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2718 = !{!2719, !2720, !2721, !2722, !2723}
!2719 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2720 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2721 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2722 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2723 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2724 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2725, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2726, retainedTypes: !2727, splitDebugInlining: false, nameTableKind: None)
!2725 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2726 = !{!576, !2716, !30}
!2727 = !{!762, !2728, !102, !103, !344, !132, !163, !2745}
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 32)
!2729 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !507, line: 426, baseType: !2730)
!2730 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 411, size: 28704, elements: !2731)
!2731 = !{!2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2730, file: !507, line: 413, baseType: !1726, size: 256)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2730, file: !507, line: 414, baseType: !1728, size: 768, offset: 256)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2730, file: !507, line: 415, baseType: !1726, size: 256, offset: 1024)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2730, file: !507, line: 416, baseType: !1728, size: 768, offset: 1280)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2730, file: !507, line: 417, baseType: !1726, size: 256, offset: 2048)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2730, file: !507, line: 418, baseType: !1728, size: 768, offset: 2304)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2730, file: !507, line: 419, baseType: !1726, size: 256, offset: 3072)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2730, file: !507, line: 420, baseType: !1728, size: 768, offset: 3328)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2730, file: !507, line: 421, baseType: !1726, size: 256, offset: 4096)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2730, file: !507, line: 422, baseType: !1739, size: 1792, offset: 4352)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2730, file: !507, line: 423, baseType: !1743, size: 1920, offset: 6144)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2730, file: !507, line: 424, baseType: !1748, size: 20608, offset: 8064)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2730, file: !507, line: 425, baseType: !131, size: 32, offset: 28672)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2747)
!2747 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2748)
!2748 = !{!2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2747, file: !507, line: 447, baseType: !511, size: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2747, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2747, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2747, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2747, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2747, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2747, file: !507, line: 453, baseType: !1763, size: 96, offset: 192)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2747, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2747, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2747, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2747, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2747, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2747, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2747, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2747, file: !507, line: 461, baseType: !1772, size: 64, offset: 512)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2747, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2747, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2747, file: !507, line: 464, baseType: !1776, size: 128, offset: 640)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2747, file: !507, line: 465, baseType: !1778, size: 160, offset: 768)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2747, file: !507, line: 466, baseType: !1780, size: 160, offset: 928)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2747, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2770 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2771, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2771 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2772 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2773, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2774, splitDebugInlining: false, nameTableKind: None)
!2773 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2774 = !{!102, !103, !22, !2775}
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2777)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2778)
!2778 = !{!2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2777, file: !507, line: 447, baseType: !511, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2777, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2777, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2777, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2777, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2777, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2777, file: !507, line: 453, baseType: !1763, size: 96, offset: 192)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2777, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2777, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2777, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2777, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2777, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2777, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2777, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2777, file: !507, line: 461, baseType: !1772, size: 64, offset: 512)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2777, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2777, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2777, file: !507, line: 464, baseType: !1776, size: 128, offset: 640)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2777, file: !507, line: 465, baseType: !1778, size: 160, offset: 768)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2777, file: !507, line: 466, baseType: !1780, size: 160, offset: 928)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2777, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2800 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2801, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2802, splitDebugInlining: false, nameTableKind: None)
!2801 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2802 = !{!2803, !102, !103}
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2805)
!2805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2806)
!2806 = !{!2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2805, file: !507, line: 447, baseType: !511, size: 32)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2805, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2805, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2805, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2805, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2805, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2805, file: !507, line: 453, baseType: !1763, size: 96, offset: 192)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2805, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2805, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2805, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2805, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2805, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2805, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2805, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2805, file: !507, line: 461, baseType: !1772, size: 64, offset: 512)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2805, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2805, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2805, file: !507, line: 464, baseType: !1776, size: 128, offset: 640)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2805, file: !507, line: 465, baseType: !1778, size: 160, offset: 768)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2805, file: !507, line: 466, baseType: !1780, size: 160, offset: 928)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2805, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2829, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2830, splitDebugInlining: false, nameTableKind: None)
!2829 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2830 = !{!2831, !132, !102, !103}
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 32)
!2832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2833, line: 98, size: 256, elements: !2834)
!2833 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2834 = !{!2835, !2840, !2845, !2850, !2855, !2860, !2865, !2870}
!2835 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !2833, line: 99, baseType: !2836, size: 32)
!2836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !2833, line: 99, size: 32, elements: !2837)
!2837 = !{!2838, !2839}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2836, file: !2833, line: 99, baseType: !132, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2836, file: !2833, line: 99, baseType: !132, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !2833, line: 100, baseType: !2841, size: 32, offset: 32)
!2841 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !2833, line: 100, size: 32, elements: !2842)
!2842 = !{!2843, !2844}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2841, file: !2833, line: 100, baseType: !132, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2841, file: !2833, line: 100, baseType: !132, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !2833, line: 101, baseType: !2846, size: 32, offset: 64)
!2846 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !2833, line: 101, size: 32, elements: !2847)
!2847 = !{!2848, !2849}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2846, file: !2833, line: 101, baseType: !132, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2846, file: !2833, line: 101, baseType: !132, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !2833, line: 102, baseType: !2851, size: 32, offset: 96)
!2851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !2833, line: 102, size: 32, elements: !2852)
!2852 = !{!2853, !2854}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2851, file: !2833, line: 102, baseType: !132, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2851, file: !2833, line: 102, baseType: !132, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !2833, line: 103, baseType: !2856, size: 32, offset: 128)
!2856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !2833, line: 103, size: 32, elements: !2857)
!2857 = !{!2858, !2859}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2856, file: !2833, line: 103, baseType: !132, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2856, file: !2833, line: 103, baseType: !132, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !2833, line: 104, baseType: !2861, size: 32, offset: 160)
!2861 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !2833, line: 104, size: 32, elements: !2862)
!2862 = !{!2863, !2864}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2861, file: !2833, line: 104, baseType: !132, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2861, file: !2833, line: 104, baseType: !132, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !2833, line: 105, baseType: !2866, size: 32, offset: 192)
!2866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !2833, line: 105, size: 32, elements: !2867)
!2867 = !{!2868, !2869}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2866, file: !2833, line: 105, baseType: !132, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2866, file: !2833, line: 105, baseType: !132, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2832, file: !2833, line: 106, baseType: !132, size: 32, offset: 224)
!2871 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2872, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2715, retainedTypes: !2873, splitDebugInlining: false, nameTableKind: None)
!2872 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2873 = !{!2874, !102, !103, !2899, !2591, !132}
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2875, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2876)
!2876 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2877)
!2877 = !{!2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2876, file: !507, line: 447, baseType: !511, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2876, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2876, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2876, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2876, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2876, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2876, file: !507, line: 453, baseType: !1763, size: 96, offset: 192)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2876, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2876, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2876, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2876, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2876, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2876, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2876, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2876, file: !507, line: 461, baseType: !1772, size: 64, offset: 512)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2876, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2876, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2876, file: !507, line: 464, baseType: !1776, size: 128, offset: 640)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2876, file: !507, line: 465, baseType: !1778, size: 160, offset: 768)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2876, file: !507, line: 466, baseType: !1780, size: 160, offset: 928)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2876, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 32)
!2900 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2833, line: 141, baseType: !2901)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2833, line: 97, size: 256, elements: !2902)
!2902 = !{!2903}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2901, file: !2833, line: 107, baseType: !2904, size: 256)
!2904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2833, line: 98, size: 256, elements: !2905)
!2905 = !{!2906, !2911, !2916, !2921, !2926, !2931, !2936, !2941}
!2906 = !DIDerivedType(tag: DW_TAG_member, scope: !2904, file: !2833, line: 99, baseType: !2907, size: 32)
!2907 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2904, file: !2833, line: 99, size: 32, elements: !2908)
!2908 = !{!2909, !2910}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2907, file: !2833, line: 99, baseType: !132, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2907, file: !2833, line: 99, baseType: !132, size: 32)
!2911 = !DIDerivedType(tag: DW_TAG_member, scope: !2904, file: !2833, line: 100, baseType: !2912, size: 32, offset: 32)
!2912 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2904, file: !2833, line: 100, size: 32, elements: !2913)
!2913 = !{!2914, !2915}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2912, file: !2833, line: 100, baseType: !132, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2912, file: !2833, line: 100, baseType: !132, size: 32)
!2916 = !DIDerivedType(tag: DW_TAG_member, scope: !2904, file: !2833, line: 101, baseType: !2917, size: 32, offset: 64)
!2917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2904, file: !2833, line: 101, size: 32, elements: !2918)
!2918 = !{!2919, !2920}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2917, file: !2833, line: 101, baseType: !132, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2917, file: !2833, line: 101, baseType: !132, size: 32)
!2921 = !DIDerivedType(tag: DW_TAG_member, scope: !2904, file: !2833, line: 102, baseType: !2922, size: 32, offset: 96)
!2922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2904, file: !2833, line: 102, size: 32, elements: !2923)
!2923 = !{!2924, !2925}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2922, file: !2833, line: 102, baseType: !132, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2922, file: !2833, line: 102, baseType: !132, size: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, scope: !2904, file: !2833, line: 103, baseType: !2927, size: 32, offset: 128)
!2927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2904, file: !2833, line: 103, size: 32, elements: !2928)
!2928 = !{!2929, !2930}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2927, file: !2833, line: 103, baseType: !132, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2927, file: !2833, line: 103, baseType: !132, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, scope: !2904, file: !2833, line: 104, baseType: !2932, size: 32, offset: 160)
!2932 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2904, file: !2833, line: 104, size: 32, elements: !2933)
!2933 = !{!2934, !2935}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2932, file: !2833, line: 104, baseType: !132, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2932, file: !2833, line: 104, baseType: !132, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, scope: !2904, file: !2833, line: 105, baseType: !2937, size: 32, offset: 192)
!2937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2904, file: !2833, line: 105, size: 32, elements: !2938)
!2938 = !{!2939, !2940}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2937, file: !2833, line: 105, baseType: !132, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2937, file: !2833, line: 105, baseType: !132, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2904, file: !2833, line: 106, baseType: !132, size: 32, offset: 224)
!2942 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2943, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1709, retainedTypes: !2944, splitDebugInlining: false, nameTableKind: None)
!2943 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2944 = !{!762, !344, !163, !132, !2945, !2962}
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !507, line: 426, baseType: !2947)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 411, size: 28704, elements: !2948)
!2948 = !{!2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2947, file: !507, line: 413, baseType: !1726, size: 256)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2947, file: !507, line: 414, baseType: !1728, size: 768, offset: 256)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2947, file: !507, line: 415, baseType: !1726, size: 256, offset: 1024)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2947, file: !507, line: 416, baseType: !1728, size: 768, offset: 1280)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2947, file: !507, line: 417, baseType: !1726, size: 256, offset: 2048)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2947, file: !507, line: 418, baseType: !1728, size: 768, offset: 2304)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2947, file: !507, line: 419, baseType: !1726, size: 256, offset: 3072)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2947, file: !507, line: 420, baseType: !1728, size: 768, offset: 3328)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2947, file: !507, line: 421, baseType: !1726, size: 256, offset: 4096)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2947, file: !507, line: 422, baseType: !1739, size: 1792, offset: 4352)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2947, file: !507, line: 423, baseType: !1743, size: 1920, offset: 6144)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2947, file: !507, line: 424, baseType: !1748, size: 20608, offset: 8064)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2947, file: !507, line: 425, baseType: !131, size: 32, offset: 28672)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 32)
!2963 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2964)
!2964 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2965)
!2965 = !{!2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2964, file: !507, line: 447, baseType: !511, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2964, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2964, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2964, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2964, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2964, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2964, file: !507, line: 453, baseType: !1763, size: 96, offset: 192)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2964, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2964, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2964, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2964, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2964, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2964, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2964, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2964, file: !507, line: 461, baseType: !1772, size: 64, offset: 512)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2964, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2964, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2964, file: !507, line: 464, baseType: !1776, size: 128, offset: 640)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2964, file: !507, line: 465, baseType: !1778, size: 160, offset: 768)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2964, file: !507, line: 466, baseType: !1780, size: 160, offset: 928)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2964, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2987 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2988, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2989, splitDebugInlining: false, nameTableKind: None)
!2988 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!2989 = !{!2990, !102, !103}
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2992)
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2993)
!2993 = !{!2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2992, file: !507, line: 447, baseType: !511, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2992, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2992, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2992, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2992, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2992, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2992, file: !507, line: 453, baseType: !1763, size: 96, offset: 192)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2992, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2992, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2992, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2992, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2992, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2992, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2992, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2992, file: !507, line: 461, baseType: !1772, size: 64, offset: 512)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2992, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2992, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2992, file: !507, line: 464, baseType: !1776, size: 128, offset: 640)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2992, file: !507, line: 465, baseType: !1778, size: 160, offset: 768)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2992, file: !507, line: 466, baseType: !1780, size: 160, offset: 928)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2992, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!3015 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3016, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3017, splitDebugInlining: false, nameTableKind: None)
!3016 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!3017 = !{!108, !1081, !356, !233, !3018, !164, !102}
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!3020 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3021, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3022, splitDebugInlining: false, nameTableKind: None)
!3021 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!3022 = !{!3023}
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 32)
!3024 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 510, baseType: !3025)
!3025 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 477, size: 1216, elements: !3026)
!3026 = !{!3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3025, file: !127, line: 479, baseType: !131, size: 32)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3025, file: !127, line: 480, baseType: !131, size: 32, offset: 32)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3025, file: !127, line: 481, baseType: !131, size: 32, offset: 64)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3025, file: !127, line: 482, baseType: !131, size: 32, offset: 96)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3025, file: !127, line: 483, baseType: !131, size: 32, offset: 128)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3025, file: !127, line: 484, baseType: !131, size: 32, offset: 160)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3025, file: !127, line: 485, baseType: !824, size: 64, offset: 192)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3025, file: !127, line: 486, baseType: !131, size: 32, offset: 256)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3025, file: !127, line: 487, baseType: !131, size: 32, offset: 288)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3025, file: !127, line: 488, baseType: !824, size: 64, offset: 320)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3025, file: !127, line: 489, baseType: !131, size: 32, offset: 384)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3025, file: !127, line: 490, baseType: !131, size: 32, offset: 416)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3025, file: !127, line: 491, baseType: !824, size: 64, offset: 448)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3025, file: !127, line: 492, baseType: !131, size: 32, offset: 512)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3025, file: !127, line: 493, baseType: !131, size: 32, offset: 544)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3025, file: !127, line: 494, baseType: !824, size: 64, offset: 576)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3025, file: !127, line: 495, baseType: !131, size: 32, offset: 640)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3025, file: !127, line: 496, baseType: !131, size: 32, offset: 672)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3025, file: !127, line: 497, baseType: !824, size: 64, offset: 704)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3025, file: !127, line: 498, baseType: !131, size: 32, offset: 768)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3025, file: !127, line: 499, baseType: !131, size: 32, offset: 800)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3025, file: !127, line: 500, baseType: !824, size: 64, offset: 832)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3025, file: !127, line: 501, baseType: !131, size: 32, offset: 896)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3025, file: !127, line: 502, baseType: !131, size: 32, offset: 928)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3025, file: !127, line: 503, baseType: !824, size: 64, offset: 960)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3025, file: !127, line: 504, baseType: !131, size: 32, offset: 1024)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3025, file: !127, line: 505, baseType: !131, size: 32, offset: 1056)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3025, file: !127, line: 506, baseType: !132, size: 32, offset: 1088)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3025, file: !127, line: 507, baseType: !131, size: 32, offset: 1120)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3025, file: !127, line: 508, baseType: !131, size: 32, offset: 1152)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3025, file: !127, line: 509, baseType: !131, size: 32, offset: 1184)
!3058 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3059, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3059 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!3060 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3061, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3062, retainedTypes: !3078, splitDebugInlining: false, nameTableKind: None)
!3061 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!3062 = !{!3063, !3070, !3074}
!3063 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3064, line: 38, baseType: !32, size: 32, elements: !3065)
!3064 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3065 = !{!3066, !3067, !3068, !3069}
!3066 = !DIEnumerator(name: "HAL_OK", value: 0)
!3067 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3068 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3069 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3070 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !801, line: 184, baseType: !32, size: 32, elements: !3071)
!3071 = !{!3072, !3073}
!3072 = !DIEnumerator(name: "RESET", value: 0)
!3073 = !DIEnumerator(name: "SET", value: 1)
!3074 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !801, line: 190, baseType: !32, size: 32, elements: !3075)
!3075 = !{!3076, !3077}
!3076 = !DIEnumerator(name: "DISABLE", value: 0)
!3077 = !DIEnumerator(name: "ENABLE", value: 1)
!3078 = !{!102, !3079, !163, !132, !1610, !3114, !3120, !3131, !340, !3132, !1608}
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 32)
!3080 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 510, baseType: !3081)
!3081 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 477, size: 1216, elements: !3082)
!3082 = !{!3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3081, file: !127, line: 479, baseType: !131, size: 32)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3081, file: !127, line: 480, baseType: !131, size: 32, offset: 32)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3081, file: !127, line: 481, baseType: !131, size: 32, offset: 64)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3081, file: !127, line: 482, baseType: !131, size: 32, offset: 96)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3081, file: !127, line: 483, baseType: !131, size: 32, offset: 128)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3081, file: !127, line: 484, baseType: !131, size: 32, offset: 160)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3081, file: !127, line: 485, baseType: !824, size: 64, offset: 192)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3081, file: !127, line: 486, baseType: !131, size: 32, offset: 256)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3081, file: !127, line: 487, baseType: !131, size: 32, offset: 288)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3081, file: !127, line: 488, baseType: !824, size: 64, offset: 320)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3081, file: !127, line: 489, baseType: !131, size: 32, offset: 384)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3081, file: !127, line: 490, baseType: !131, size: 32, offset: 416)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3081, file: !127, line: 491, baseType: !824, size: 64, offset: 448)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3081, file: !127, line: 492, baseType: !131, size: 32, offset: 512)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3081, file: !127, line: 493, baseType: !131, size: 32, offset: 544)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3081, file: !127, line: 494, baseType: !824, size: 64, offset: 576)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3081, file: !127, line: 495, baseType: !131, size: 32, offset: 640)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3081, file: !127, line: 496, baseType: !131, size: 32, offset: 672)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3081, file: !127, line: 497, baseType: !824, size: 64, offset: 704)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3081, file: !127, line: 498, baseType: !131, size: 32, offset: 768)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3081, file: !127, line: 499, baseType: !131, size: 32, offset: 800)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3081, file: !127, line: 500, baseType: !824, size: 64, offset: 832)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3081, file: !127, line: 501, baseType: !131, size: 32, offset: 896)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3081, file: !127, line: 502, baseType: !131, size: 32, offset: 928)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3081, file: !127, line: 503, baseType: !824, size: 64, offset: 960)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3081, file: !127, line: 504, baseType: !131, size: 32, offset: 1024)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3081, file: !127, line: 505, baseType: !131, size: 32, offset: 1056)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3081, file: !127, line: 506, baseType: !132, size: 32, offset: 1088)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3081, file: !127, line: 507, baseType: !131, size: 32, offset: 1120)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3081, file: !127, line: 508, baseType: !131, size: 32, offset: 1152)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3081, file: !127, line: 509, baseType: !131, size: 32, offset: 1184)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 32)
!3115 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !127, line: 471, baseType: !3116)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 467, size: 64, elements: !3117)
!3117 = !{!3118, !3119}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3116, file: !127, line: 469, baseType: !131, size: 32)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3116, file: !127, line: 470, baseType: !131, size: 32, offset: 32)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 32)
!3121 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !127, line: 379, baseType: !3122)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 370, size: 224, elements: !3123)
!3123 = !{!3124, !3125, !3126, !3127, !3128, !3129, !3130}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3122, file: !127, line: 372, baseType: !131, size: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3122, file: !127, line: 373, baseType: !131, size: 32, offset: 32)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3122, file: !127, line: 374, baseType: !131, size: 32, offset: 64)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3122, file: !127, line: 375, baseType: !131, size: 32, offset: 96)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3122, file: !127, line: 376, baseType: !131, size: 32, offset: 128)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3122, file: !127, line: 377, baseType: !131, size: 32, offset: 160)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3122, file: !127, line: 378, baseType: !131, size: 32, offset: 192)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 32)
!3133 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !127, line: 396, baseType: !3134)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 385, size: 320, elements: !3135)
!3135 = !{!3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3134, file: !127, line: 387, baseType: !131, size: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3134, file: !127, line: 388, baseType: !131, size: 32, offset: 32)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3134, file: !127, line: 389, baseType: !131, size: 32, offset: 64)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3134, file: !127, line: 390, baseType: !131, size: 32, offset: 96)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3134, file: !127, line: 391, baseType: !131, size: 32, offset: 128)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3134, file: !127, line: 392, baseType: !131, size: 32, offset: 160)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3134, file: !127, line: 393, baseType: !131, size: 32, offset: 192)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3134, file: !127, line: 394, baseType: !131, size: 32, offset: 224)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3134, file: !127, line: 395, baseType: !1250, size: 64, offset: 256)
!3145 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3146, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3147, retainedTypes: !3148, splitDebugInlining: false, nameTableKind: None)
!3146 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!3147 = !{!800}
!3148 = !{!3149, !132, !3157, !3163, !3174}
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !507, line: 770, baseType: !3151)
!3151 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 764, size: 128, elements: !3152)
!3152 = !{!3153, !3154, !3155, !3156}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3151, file: !507, line: 766, baseType: !131, size: 32)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3151, file: !507, line: 767, baseType: !131, size: 32, offset: 32)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3151, file: !507, line: 768, baseType: !131, size: 32, offset: 64)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3151, file: !507, line: 769, baseType: !511, size: 32, offset: 96)
!3157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3158, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !127, line: 471, baseType: !3159)
!3159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 467, size: 64, elements: !3160)
!3160 = !{!3161, !3162}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3159, file: !127, line: 469, baseType: !131, size: 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3159, file: !127, line: 470, baseType: !131, size: 32, offset: 32)
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 32)
!3164 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !127, line: 379, baseType: !3165)
!3165 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 370, size: 224, elements: !3166)
!3166 = !{!3167, !3168, !3169, !3170, !3171, !3172, !3173}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3165, file: !127, line: 372, baseType: !131, size: 32)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3165, file: !127, line: 373, baseType: !131, size: 32, offset: 32)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3165, file: !127, line: 374, baseType: !131, size: 32, offset: 64)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3165, file: !127, line: 375, baseType: !131, size: 32, offset: 96)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3165, file: !127, line: 376, baseType: !131, size: 32, offset: 128)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3165, file: !127, line: 377, baseType: !131, size: 32, offset: 160)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3165, file: !127, line: 378, baseType: !131, size: 32, offset: 192)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 32)
!3175 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 510, baseType: !3176)
!3176 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 477, size: 1216, elements: !3177)
!3177 = !{!3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3176, file: !127, line: 479, baseType: !131, size: 32)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3176, file: !127, line: 480, baseType: !131, size: 32, offset: 32)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3176, file: !127, line: 481, baseType: !131, size: 32, offset: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3176, file: !127, line: 482, baseType: !131, size: 32, offset: 96)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3176, file: !127, line: 483, baseType: !131, size: 32, offset: 128)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3176, file: !127, line: 484, baseType: !131, size: 32, offset: 160)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3176, file: !127, line: 485, baseType: !824, size: 64, offset: 192)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3176, file: !127, line: 486, baseType: !131, size: 32, offset: 256)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3176, file: !127, line: 487, baseType: !131, size: 32, offset: 288)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3176, file: !127, line: 488, baseType: !824, size: 64, offset: 320)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3176, file: !127, line: 489, baseType: !131, size: 32, offset: 384)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3176, file: !127, line: 490, baseType: !131, size: 32, offset: 416)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3176, file: !127, line: 491, baseType: !824, size: 64, offset: 448)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3176, file: !127, line: 492, baseType: !131, size: 32, offset: 512)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3176, file: !127, line: 493, baseType: !131, size: 32, offset: 544)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3176, file: !127, line: 494, baseType: !824, size: 64, offset: 576)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3176, file: !127, line: 495, baseType: !131, size: 32, offset: 640)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3176, file: !127, line: 496, baseType: !131, size: 32, offset: 672)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3176, file: !127, line: 497, baseType: !824, size: 64, offset: 704)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3176, file: !127, line: 498, baseType: !131, size: 32, offset: 768)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3176, file: !127, line: 499, baseType: !131, size: 32, offset: 800)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3176, file: !127, line: 500, baseType: !824, size: 64, offset: 832)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3176, file: !127, line: 501, baseType: !131, size: 32, offset: 896)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3176, file: !127, line: 502, baseType: !131, size: 32, offset: 928)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3176, file: !127, line: 503, baseType: !824, size: 64, offset: 960)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3176, file: !127, line: 504, baseType: !131, size: 32, offset: 1024)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3176, file: !127, line: 505, baseType: !131, size: 32, offset: 1056)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3176, file: !127, line: 506, baseType: !132, size: 32, offset: 1088)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3176, file: !127, line: 507, baseType: !131, size: 32, offset: 1120)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3176, file: !127, line: 508, baseType: !131, size: 32, offset: 1152)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3176, file: !127, line: 509, baseType: !131, size: 32, offset: 1184)
!3209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3211, splitDebugInlining: false, nameTableKind: None)
!3210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!3211 = !{!102, !356}
!3212 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3213, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3214, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3213 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!3214 = !{!3215, !3222, !30}
!3215 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3216, line: 14, baseType: !32, size: 32, elements: !3217)
!3216 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3217 = !{!3218, !3219, !3220, !3221}
!3218 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3219 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3220 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3221 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3222 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3216, line: 42, baseType: !32, size: 32, elements: !3223)
!3223 = !{!3224, !3225, !3226, !3227, !3228, !3229}
!3224 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3225 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3226 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3227 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3228 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3229 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3230 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3231, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3231 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!3232 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3233, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3234, splitDebugInlining: false, nameTableKind: None)
!3233 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!3234 = !{!22, !102, !103}
!3235 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3236, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3236 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!3237 = !{!"Ubuntu clang version 14.0.6"}
!3238 = !{i32 7, !"Dwarf Version", i32 4}
!3239 = !{i32 2, !"Debug Info Version", i32 3}
!3240 = !{i32 1, !"wchar_size", i32 4}
!3241 = !{i32 1, !"min_enum_size", i32 4}
!3242 = !{i32 1, !"branch-target-enforcement", i32 0}
!3243 = !{i32 1, !"sign-return-address", i32 0}
!3244 = !{i32 1, !"sign-return-address-all", i32 0}
!3245 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3246 = !{i32 7, !"frame-pointer", i32 2}
!3247 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3248, file: !3248, line: 26, type: !3249, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !473)
!3248 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3249 = !DISubroutineType(types: !3250)
!3250 = !{null}
!3251 = !DILocation(line: 28, column: 1, scope: !3247)
!3252 = !{i64 2155025886, i64 2155025906, i64 2155025969}
!3253 = !DILocation(line: 29, column: 1, scope: !3247)
!3254 = !{i64 2155026301, i64 2155026321, i64 2155026384}
!3255 = !DILocation(line: 30, column: 1, scope: !3247)
!3256 = !{i64 2155026720, i64 2155026740, i64 2155026803}
!3257 = !DILocation(line: 31, column: 1, scope: !3247)
!3258 = !{i64 2155027139, i64 2155027159, i64 2155027222}
!3259 = !DILocation(line: 33, column: 1, scope: !3247)
!3260 = !{i64 2155027431, i64 2155027451, i64 2155027514}
!3261 = !DILocation(line: 35, column: 1, scope: !3247)
!3262 = !{i64 2155027756, i64 2155027776, i64 2155027839}
!3263 = !DILocation(line: 50, column: 1, scope: !3247)
!3264 = !{i64 2155028183, i64 2155028203, i64 2155028266}
!3265 = !DILocation(line: 54, column: 1, scope: !3247)
!3266 = !{i64 2155028622, i64 2155028642, i64 2155028705}
!3267 = !DILocation(line: 61, column: 1, scope: !3247)
!3268 = !{i64 2155028939, i64 2155028959, i64 2155029022}
!3269 = !DILocation(line: 63, column: 1, scope: !3247)
!3270 = !{i64 2155029319, i64 2155029339, i64 2155029402}
!3271 = !DILocation(line: 64, column: 1, scope: !3247)
!3272 = !{i64 2155029841, i64 2155029861, i64 2155029924}
!3273 = !DILocation(line: 65, column: 1, scope: !3247)
!3274 = !{i64 2155030339, i64 2155030359, i64 2155030422}
!3275 = !DILocation(line: 66, column: 1, scope: !3247)
!3276 = !{i64 2155030821, i64 2155030841, i64 2155030904}
!3277 = !DILocation(line: 67, column: 1, scope: !3247)
!3278 = !{i64 2155031328, i64 2155031348, i64 2155031411}
!3279 = !DILocation(line: 68, column: 1, scope: !3247)
!3280 = !{i64 2155031816, i64 2155031836, i64 2155031899}
!3281 = !DILocation(line: 70, column: 1, scope: !3247)
!3282 = !{i64 2155032284, i64 2155032304, i64 2155032367}
!3283 = !DILocation(line: 71, column: 1, scope: !3247)
!3284 = !{i64 2155036787, i64 2155036807, i64 2155036870}
!3285 = !DILocation(line: 72, column: 1, scope: !3247)
!3286 = !{i64 2155037245, i64 2155037265, i64 2155037328}
!3287 = !DILocation(line: 79, column: 1, scope: !3247)
!3288 = !{i64 2155037699, i64 2155037719, i64 2155037782}
!3289 = !DILocation(line: 80, column: 1, scope: !3247)
!3290 = !{i64 2155038210, i64 2155038230, i64 2155038293}
!3291 = !DILocation(line: 82, column: 1, scope: !3247)
!3292 = !{i64 2155038701, i64 2155038721, i64 2155038784}
!3293 = !DILocation(line: 97, column: 1, scope: !3247)
!3294 = !{i64 2155039038, i64 2155039058, i64 2155039121}
!3295 = !DILocation(line: 99, column: 1, scope: !3247)
!3296 = !{i64 2155039256, i64 2155039276, i64 2155039339}
!3297 = !DILocation(line: 102, column: 1, scope: !3247)
!3298 = !{i64 2155039513, i64 2155039533, i64 2155039596}
!3299 = !DILocation(line: 105, column: 1, scope: !3247)
!3300 = !{i64 2155039753, i64 2155039773, i64 2155039836}
!3301 = !DILocation(line: 115, column: 1, scope: !3247)
!3302 = !{i64 2155040092, i64 2155040112, i64 2155040175}
!3303 = !DILocation(line: 118, column: 1, scope: !3247)
!3304 = !{i64 2155040436, i64 2155040456, i64 2155040519}
!3305 = !DILocation(line: 32, column: 1, scope: !3306)
!3306 = !DILexicalBlockFile(scope: !3247, file: !3307, discriminator: 0)
!3307 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3308 = !{i64 2155040792, i64 2155040812, i64 2155040875}
!3309 = !DILocation(line: 33, column: 1, scope: !3306)
!3310 = !{i64 2155041304, i64 2155041324, i64 2155041387}
!3311 = !DILocation(line: 53, column: 1, scope: !3306)
!3312 = !{i64 2155041812, i64 2155041832, i64 2155041895}
!3313 = !DILocation(line: 54, column: 1, scope: !3306)
!3314 = !{i64 2155042230, i64 2155042250, i64 2155042313}
!3315 = !DILocation(line: 55, column: 1, scope: !3306)
!3316 = !{i64 2155042648, i64 2155042668, i64 2155042731}
!3317 = !DILocation(line: 56, column: 1, scope: !3306)
!3318 = !{i64 2155043066, i64 2155043086, i64 2155043149}
!3319 = !DILocation(line: 57, column: 1, scope: !3306)
!3320 = !{i64 2155043484, i64 2155043504, i64 2155043567}
!3321 = !DILocation(line: 58, column: 1, scope: !3306)
!3322 = !{i64 2155043902, i64 2155043922, i64 2155043985}
!3323 = !DILocation(line: 59, column: 1, scope: !3306)
!3324 = !{i64 2155044320, i64 2155044340, i64 2155044403}
!3325 = !DILocation(line: 60, column: 1, scope: !3306)
!3326 = !{i64 2155044744, i64 2155044764, i64 2155044827}
!3327 = !DILocation(line: 61, column: 1, scope: !3306)
!3328 = !{i64 2155045061, i64 2155045081, i64 2155045144}
!3329 = !DILocation(line: 70, column: 1, scope: !3306)
!3330 = !{i64 2155045290, i64 2155045310, i64 2155045373}
!3331 = !DILocation(line: 72, column: 1, scope: !3306)
!3332 = !{i64 2155045622, i64 2155045642, i64 2155045705}
!3333 = !DILocation(line: 73, column: 1, scope: !3306)
!3334 = !{i64 2155046072, i64 2155046092, i64 2155046155}
!3335 = !DILocation(line: 74, column: 1, scope: !3306)
!3336 = !{i64 2155050583, i64 2155050603, i64 2155050666}
!3337 = !DILocation(line: 75, column: 1, scope: !3306)
!3338 = !{i64 2155051033, i64 2155051053, i64 2155051116}
!3339 = !DILocation(line: 76, column: 1, scope: !3306)
!3340 = !{i64 2155051483, i64 2155051503, i64 2155051566}
!3341 = !DILocation(line: 77, column: 1, scope: !3306)
!3342 = !{i64 2155051933, i64 2155051953, i64 2155052016}
!3343 = !DILocation(line: 78, column: 1, scope: !3306)
!3344 = !{i64 2155052383, i64 2155052403, i64 2155052466}
!3345 = !DILocation(line: 79, column: 1, scope: !3306)
!3346 = !{i64 2155052833, i64 2155052853, i64 2155052916}
!3347 = !DILocation(line: 80, column: 1, scope: !3306)
!3348 = !{i64 2155053286, i64 2155053306, i64 2155053369}
!3349 = !DILocation(line: 84, column: 1, scope: !3306)
!3350 = !{i64 2155053618, i64 2155053638, i64 2155053701}
!3351 = !DILocation(line: 91, column: 1, scope: !3306)
!3352 = !{i64 2155054015, i64 2155054035, i64 2155054098}
!3353 = !DILocation(line: 93, column: 1, scope: !3306)
!3354 = !{i64 2155054382, i64 2155054402, i64 2155054465}
!3355 = !DILocation(line: 106, column: 1, scope: !3306)
!3356 = !{i64 2155054652, i64 2155054672, i64 2155054735}
!3357 = !DILocation(line: 11, column: 1, scope: !3358)
!3358 = !DILexicalBlockFile(scope: !3247, file: !3359, discriminator: 0)
!3359 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3360 = distinct !DISubprogram(name: "main", scope: !105, file: !105, line: 11, type: !3249, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3361)
!3361 = !{!3362}
!3362 = !DILocalVariable(name: "c", scope: !3363, file: !105, line: 20, type: !163)
!3363 = distinct !DILexicalBlock(scope: !3360, file: !105, line: 19, column: 12)
!3364 = !DILocation(line: 13, column: 2, scope: !3360)
!3365 = !DILocation(line: 15, column: 2, scope: !3360)
!3366 = !DILocation(line: 16, column: 2, scope: !3360)
!3367 = !DILocation(line: 17, column: 2, scope: !3360)
!3368 = !DILocation(line: 19, column: 2, scope: !3360)
!3369 = !DILocation(line: 20, column: 15, scope: !3363)
!3370 = !DILocation(line: 0, scope: !3363)
!3371 = !DILocation(line: 22, column: 3, scope: !3363)
!3372 = !DILocation(line: 23, column: 7, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3363, file: !105, line: 23, column: 7)
!3374 = !DILocation(line: 23, column: 9, scope: !3373)
!3375 = !DILocation(line: 23, column: 7, scope: !3363)
!3376 = !DILocation(line: 24, column: 4, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3373, file: !105, line: 23, column: 18)
!3378 = !DILocation(line: 25, column: 3, scope: !3377)
!3379 = distinct !{!3379, !3368, !3380}
!3380 = !DILocation(line: 26, column: 2, scope: !3360)
!3381 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !116, file: !116, line: 45, type: !118, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3382)
!3382 = !{!3383}
!3383 = !DILocalVariable(name: "c", arg: 1, scope: !3381, file: !116, line: 45, type: !103)
!3384 = !DILocation(line: 0, scope: !3381)
!3385 = !DILocation(line: 50, column: 2, scope: !3381)
!3386 = distinct !DISubprogram(name: "__printk_hook_install", scope: !116, file: !116, line: 63, type: !3387, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3389)
!3387 = !DISubroutineType(types: !3388)
!3388 = !{null, !117}
!3389 = !{!3390}
!3390 = !DILocalVariable(name: "fn", arg: 1, scope: !3386, file: !116, line: 63, type: !117)
!3391 = !DILocation(line: 0, scope: !3386)
!3392 = !DILocation(line: 65, column: 12, scope: !3386)
!3393 = !DILocation(line: 66, column: 1, scope: !3386)
!3394 = distinct !DISubprogram(name: "__printk_get_hook", scope: !116, file: !116, line: 76, type: !3395, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !473)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{!102}
!3397 = !DILocation(line: 78, column: 9, scope: !3394)
!3398 = !DILocation(line: 78, column: 2, scope: !3394)
!3399 = distinct !DISubprogram(name: "vprintk", scope: !116, file: !116, line: 113, type: !3400, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3409)
!3400 = !DISubroutineType(types: !3401)
!3401 = !{null, !155, !3402}
!3402 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3403, line: 99, baseType: !3404)
!3403 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3404 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3403, line: 40, baseType: !3405)
!3405 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !116, baseType: !3406)
!3406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3407)
!3407 = !{!3408}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3406, file: !116, line: 79, baseType: !102, size: 32)
!3409 = !{!3410, !3411, !3412}
!3410 = !DILocalVariable(name: "fmt", arg: 1, scope: !3399, file: !116, line: 113, type: !155)
!3411 = !DILocalVariable(name: "ap", arg: 2, scope: !3399, file: !116, line: 113, type: !3402)
!3412 = !DILocalVariable(name: "ctx", scope: !3413, file: !116, line: 121, type: !3415)
!3413 = distinct !DILexicalBlock(scope: !3414, file: !116, line: 120, column: 27)
!3414 = distinct !DILexicalBlock(scope: !3399, file: !116, line: 120, column: 6)
!3415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !116, line: 81, size: 32, elements: !3416)
!3416 = !{!3417, !3418}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3415, file: !116, line: 85, baseType: !32, size: 32)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3415, file: !116, line: 86, baseType: !3419, offset: 32)
!3419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, elements: !2589)
!3420 = !DILocation(line: 0, scope: !3399)
!3421 = !DILocation(line: 148, column: 3, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3414, file: !116, line: 138, column: 9)
!3423 = !DILocation(line: 155, column: 1, scope: !3399)
!3424 = distinct !DISubprogram(name: "char_out", scope: !116, file: !116, line: 107, type: !3425, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3427)
!3425 = !DISubroutineType(types: !3426)
!3426 = !{!103, !103, !102}
!3427 = !{!3428, !3429}
!3428 = !DILocalVariable(name: "c", arg: 1, scope: !3424, file: !116, line: 107, type: !103)
!3429 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3424, file: !116, line: 107, type: !102)
!3430 = !DILocation(line: 0, scope: !3424)
!3431 = !DILocation(line: 110, column: 9, scope: !3424)
!3432 = !DILocation(line: 110, column: 2, scope: !3424)
!3433 = distinct !DISubprogram(name: "cbvprintf", scope: !3434, file: !3434, line: 739, type: !3435, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3441)
!3434 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3435 = !DISubroutineType(types: !3436)
!3436 = !{!103, !3437, !102, !155, !3402}
!3437 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3434, line: 297, baseType: !3438)
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 32)
!3439 = !DISubroutineType(types: !3440)
!3440 = !{!103, null}
!3441 = !{!3442, !3443, !3444, !3445}
!3442 = !DILocalVariable(name: "out", arg: 1, scope: !3433, file: !3434, line: 739, type: !3437)
!3443 = !DILocalVariable(name: "ctx", arg: 2, scope: !3433, file: !3434, line: 739, type: !102)
!3444 = !DILocalVariable(name: "format", arg: 3, scope: !3433, file: !3434, line: 739, type: !155)
!3445 = !DILocalVariable(name: "ap", arg: 4, scope: !3433, file: !3434, line: 739, type: !3402)
!3446 = !DILocation(line: 0, scope: !3433)
!3447 = !DILocation(line: 741, column: 9, scope: !3433)
!3448 = !DILocation(line: 741, column: 2, scope: !3433)
!3449 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !116, file: !116, line: 157, type: !3450, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3452)
!3450 = !DISubroutineType(types: !3451)
!3451 = !{null, !1081, !356}
!3452 = !{!3453, !3454, !3455}
!3453 = !DILocalVariable(name: "c", arg: 1, scope: !3449, file: !116, line: 157, type: !1081)
!3454 = !DILocalVariable(name: "n", arg: 2, scope: !3449, file: !116, line: 157, type: !356)
!3455 = !DILocalVariable(name: "i", scope: !3449, file: !116, line: 159, type: !356)
!3456 = !DILocation(line: 0, scope: !3449)
!3457 = !DILocation(line: 164, column: 16, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3459, file: !116, line: 164, column: 2)
!3459 = distinct !DILexicalBlock(scope: !3449, file: !116, line: 164, column: 2)
!3460 = !DILocation(line: 164, column: 2, scope: !3459)
!3461 = !DILocation(line: 165, column: 3, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3458, file: !116, line: 164, column: 26)
!3463 = !DILocation(line: 165, column: 13, scope: !3462)
!3464 = !DILocation(line: 164, column: 22, scope: !3458)
!3465 = distinct !{!3465, !3460, !3466}
!3466 = !DILocation(line: 166, column: 2, scope: !3459)
!3467 = !DILocation(line: 171, column: 1, scope: !3449)
!3468 = distinct !DISubprogram(name: "printk", scope: !116, file: !116, line: 203, type: !3469, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3471)
!3469 = !DISubroutineType(types: !3470)
!3470 = !{null, !155, null}
!3471 = !{!3472, !3473}
!3472 = !DILocalVariable(name: "fmt", arg: 1, scope: !3468, file: !116, line: 203, type: !155)
!3473 = !DILocalVariable(name: "ap", scope: !3468, file: !116, line: 205, type: !3402)
!3474 = !DILocation(line: 0, scope: !3468)
!3475 = !DILocation(line: 205, column: 2, scope: !3468)
!3476 = !DILocation(line: 205, column: 10, scope: !3468)
!3477 = !DILocation(line: 207, column: 2, scope: !3468)
!3478 = !DILocation(line: 209, column: 2, scope: !3468)
!3479 = !DILocation(line: 211, column: 2, scope: !3468)
!3480 = !DILocation(line: 212, column: 1, scope: !3468)
!3481 = distinct !DISubprogram(name: "snprintk", scope: !116, file: !116, line: 239, type: !3482, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3484)
!3482 = !DISubroutineType(types: !3483)
!3483 = !{!103, !1081, !356, !155, null}
!3484 = !{!3485, !3486, !3487, !3488, !3489}
!3485 = !DILocalVariable(name: "str", arg: 1, scope: !3481, file: !116, line: 239, type: !1081)
!3486 = !DILocalVariable(name: "size", arg: 2, scope: !3481, file: !116, line: 239, type: !356)
!3487 = !DILocalVariable(name: "fmt", arg: 3, scope: !3481, file: !116, line: 239, type: !155)
!3488 = !DILocalVariable(name: "ap", scope: !3481, file: !116, line: 241, type: !3402)
!3489 = !DILocalVariable(name: "ret", scope: !3481, file: !116, line: 242, type: !103)
!3490 = !DILocation(line: 0, scope: !3481)
!3491 = !DILocation(line: 241, column: 2, scope: !3481)
!3492 = !DILocation(line: 241, column: 10, scope: !3481)
!3493 = !DILocation(line: 244, column: 2, scope: !3481)
!3494 = !DILocation(line: 245, column: 8, scope: !3481)
!3495 = !DILocation(line: 246, column: 2, scope: !3481)
!3496 = !DILocation(line: 249, column: 1, scope: !3481)
!3497 = !DILocation(line: 248, column: 2, scope: !3481)
!3498 = distinct !DISubprogram(name: "vsnprintk", scope: !116, file: !116, line: 251, type: !3499, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3501)
!3499 = !DISubroutineType(types: !3500)
!3500 = !{!103, !1081, !356, !155, !3402}
!3501 = !{!3502, !3503, !3504, !3505, !3506}
!3502 = !DILocalVariable(name: "str", arg: 1, scope: !3498, file: !116, line: 251, type: !1081)
!3503 = !DILocalVariable(name: "size", arg: 2, scope: !3498, file: !116, line: 251, type: !356)
!3504 = !DILocalVariable(name: "fmt", arg: 3, scope: !3498, file: !116, line: 251, type: !155)
!3505 = !DILocalVariable(name: "ap", arg: 4, scope: !3498, file: !116, line: 251, type: !3402)
!3506 = !DILocalVariable(name: "ctx", scope: !3498, file: !116, line: 253, type: !3507)
!3507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !116, line: 217, size: 96, elements: !3508)
!3508 = !{!3509, !3510, !3511}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3507, file: !116, line: 218, baseType: !1081, size: 32)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3507, file: !116, line: 219, baseType: !103, size: 32, offset: 32)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3507, file: !116, line: 220, baseType: !103, size: 32, offset: 64)
!3512 = !DILocation(line: 0, scope: !3498)
!3513 = !DILocation(line: 253, column: 2, scope: !3498)
!3514 = !DILocation(line: 253, column: 21, scope: !3498)
!3515 = !DILocation(line: 253, column: 27, scope: !3498)
!3516 = !DILocation(line: 255, column: 2, scope: !3498)
!3517 = !DILocation(line: 257, column: 10, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3498, file: !116, line: 257, column: 6)
!3519 = !DILocation(line: 257, column: 22, scope: !3518)
!3520 = !DILocation(line: 257, column: 16, scope: !3518)
!3521 = !DILocation(line: 257, column: 6, scope: !3498)
!3522 = !DILocation(line: 258, column: 3, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3518, file: !116, line: 257, column: 27)
!3524 = !DILocation(line: 258, column: 18, scope: !3523)
!3525 = !DILocation(line: 259, column: 2, scope: !3523)
!3526 = !DILocation(line: 262, column: 1, scope: !3498)
!3527 = !DILocation(line: 261, column: 2, scope: !3498)
!3528 = distinct !DISubprogram(name: "str_out", scope: !116, file: !116, line: 223, type: !3529, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3532)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{!103, !103, !3531}
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 32)
!3532 = !{!3533, !3534}
!3533 = !DILocalVariable(name: "c", arg: 1, scope: !3528, file: !116, line: 223, type: !103)
!3534 = !DILocalVariable(name: "ctx", arg: 2, scope: !3528, file: !116, line: 223, type: !3531)
!3535 = !DILocation(line: 0, scope: !3528)
!3536 = !DILocation(line: 225, column: 11, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3528, file: !116, line: 225, column: 6)
!3538 = !DILocation(line: 225, column: 15, scope: !3537)
!3539 = !DILocation(line: 0, scope: !3537)
!3540 = !DILocation(line: 225, column: 23, scope: !3537)
!3541 = !DILocation(line: 225, column: 45, scope: !3537)
!3542 = !DILocation(line: 225, column: 37, scope: !3537)
!3543 = !DILocation(line: 225, column: 6, scope: !3528)
!3544 = !DILocation(line: 226, column: 8, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3537, file: !116, line: 225, column: 50)
!3546 = !DILocation(line: 226, column: 13, scope: !3545)
!3547 = !DILocation(line: 227, column: 3, scope: !3545)
!3548 = !DILocation(line: 230, column: 29, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3528, file: !116, line: 230, column: 6)
!3550 = !DILocation(line: 230, column: 17, scope: !3549)
!3551 = !DILocation(line: 230, column: 6, scope: !3528)
!3552 = !DILocation(line: 231, column: 22, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3549, file: !116, line: 230, column: 34)
!3554 = !DILocation(line: 231, column: 3, scope: !3553)
!3555 = !DILocation(line: 231, column: 26, scope: !3553)
!3556 = !DILocation(line: 232, column: 2, scope: !3553)
!3557 = !DILocation(line: 233, column: 28, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3549, file: !116, line: 232, column: 9)
!3559 = !DILocation(line: 233, column: 22, scope: !3558)
!3560 = !DILocation(line: 233, column: 3, scope: !3558)
!3561 = !DILocation(line: 233, column: 26, scope: !3558)
!3562 = !DILocation(line: 237, column: 1, scope: !3528)
!3563 = distinct !DISubprogram(name: "z_thread_entry", scope: !3564, file: !3564, line: 30, type: !3565, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3572)
!3564 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3565 = !DISubroutineType(types: !3566)
!3566 = !{null, !3567, !102, !102, !102}
!3567 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3568, line: 46, baseType: !3569)
!3568 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 32)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{null, !102, !102, !102}
!3572 = !{!3573, !3574, !3575, !3576}
!3573 = !DILocalVariable(name: "entry", arg: 1, scope: !3563, file: !3564, line: 30, type: !3567)
!3574 = !DILocalVariable(name: "p1", arg: 2, scope: !3563, file: !3564, line: 31, type: !102)
!3575 = !DILocalVariable(name: "p2", arg: 3, scope: !3563, file: !3564, line: 31, type: !102)
!3576 = !DILocalVariable(name: "p3", arg: 4, scope: !3563, file: !3564, line: 31, type: !102)
!3577 = !DILocation(line: 0, scope: !3563)
!3578 = !DILocation(line: 36, column: 2, scope: !3563)
!3579 = !DILocation(line: 38, column: 17, scope: !3563)
!3580 = !DILocation(line: 38, column: 2, scope: !3563)
!3581 = !DILocation(line: 45, column: 2, scope: !3563)
!3582 = distinct !DISubprogram(name: "k_current_get", scope: !312, file: !312, line: 530, type: !3583, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !473)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{!3585}
!3585 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !3586)
!3586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3587, size: 32)
!3587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !3588)
!3588 = !{!3589, !3647, !3659, !3660, !3661, !3662, !3668, !3681}
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3587, file: !367, line: 247, baseType: !3590, size: 384)
!3590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !3591)
!3591 = !{!3592, !3616, !3623, !3624, !3625, !3634, !3635, !3636}
!3592 = !DIDerivedType(tag: DW_TAG_member, scope: !3590, file: !367, line: 60, baseType: !3593, size: 64)
!3593 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3590, file: !367, line: 60, size: 64, elements: !3594)
!3594 = !{!3595, !3610}
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3593, file: !367, line: 61, baseType: !3596, size: 64)
!3596 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !3597)
!3597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !3598)
!3598 = !{!3599, !3605}
!3599 = !DIDerivedType(tag: DW_TAG_member, scope: !3597, file: !321, line: 38, baseType: !3600, size: 32)
!3600 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3597, file: !321, line: 38, size: 32, elements: !3601)
!3601 = !{!3602, !3604}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3600, file: !321, line: 39, baseType: !3603, size: 32)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 32)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3600, file: !321, line: 40, baseType: !3603, size: 32)
!3605 = !DIDerivedType(tag: DW_TAG_member, scope: !3597, file: !321, line: 42, baseType: !3606, size: 32, offset: 32)
!3606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3597, file: !321, line: 42, size: 32, elements: !3607)
!3607 = !{!3608, !3609}
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3606, file: !321, line: 43, baseType: !3603, size: 32)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3606, file: !321, line: 44, baseType: !3603, size: 32)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3593, file: !367, line: 62, baseType: !3611, size: 64)
!3611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !3612)
!3612 = !{!3613}
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3611, file: !392, line: 50, baseType: !3614, size: 64)
!3614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3615, size: 64, elements: !397)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 32)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3590, file: !367, line: 68, baseType: !3617, size: 32, offset: 64)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 32)
!3618 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !3619)
!3619 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !3620)
!3620 = !{!3621}
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3619, file: !316, line: 232, baseType: !3622, size: 64)
!3622 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !3597)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3590, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3590, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!3625 = !DIDerivedType(tag: DW_TAG_member, scope: !3590, file: !367, line: 90, baseType: !3626, size: 16, offset: 112)
!3626 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3590, file: !367, line: 90, size: 16, elements: !3627)
!3627 = !{!3628, !3633}
!3628 = !DIDerivedType(tag: DW_TAG_member, scope: !3626, file: !367, line: 91, baseType: !3629, size: 16)
!3629 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3626, file: !367, line: 91, size: 16, elements: !3630)
!3630 = !{!3631, !3632}
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3629, file: !367, line: 96, baseType: !415, size: 8)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3629, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3626, file: !367, line: 100, baseType: !340, size: 16)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3590, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3590, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3590, file: !367, line: 131, baseType: !3637, size: 192, offset: 192)
!3637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !3638)
!3638 = !{!3639, !3640, !3646}
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3637, file: !316, line: 245, baseType: !3596, size: 64)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3637, file: !316, line: 246, baseType: !3641, size: 32, offset: 64)
!3641 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !3642)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 32)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{null, !3645}
!3645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3637, size: 32)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3637, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3587, file: !367, line: 250, baseType: !3648, size: 288, offset: 384)
!3648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !3649)
!3649 = !{!3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658}
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3648, file: !436, line: 26, baseType: !132, size: 32)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3648, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3648, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3648, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3648, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3648, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3648, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3648, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3648, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3587, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3587, file: !367, line: 256, baseType: !3618, size: 64, offset: 704)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3587, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3587, file: !367, line: 300, baseType: !3663, size: 96, offset: 800)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !3664)
!3664 = !{!3665, !3666, !3667}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3663, file: !367, line: 153, baseType: !22, size: 32)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3663, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3663, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3587, file: !367, line: 325, baseType: !3669, size: 32, offset: 896)
!3669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3670, size: 32)
!3670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !3671)
!3671 = !{!3672, !3678, !3679}
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3670, file: !312, line: 5074, baseType: !3673, size: 96)
!3673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !3674)
!3674 = !{!3675, !3676, !3677}
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3673, file: !462, line: 57, baseType: !465, size: 32)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3673, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3673, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3670, file: !312, line: 5075, baseType: !3618, size: 64, offset: 96)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3670, file: !312, line: 5076, baseType: !3680, offset: 160)
!3680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3587, file: !367, line: 343, baseType: !3682, size: 64, offset: 928)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !3683)
!3683 = !{!3684, !3685}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3682, file: !436, line: 63, baseType: !132, size: 32)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3682, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!3686 = !DILocation(line: 535, column: 9, scope: !3582)
!3687 = !DILocation(line: 535, column: 2, scope: !3582)
!3688 = distinct !DISubprogram(name: "k_thread_abort", scope: !3689, file: !3689, line: 188, type: !3690, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3692)
!3689 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!3690 = !DISubroutineType(types: !3691)
!3691 = !{null, !3585}
!3692 = !{!3693}
!3693 = !DILocalVariable(name: "thread", arg: 1, scope: !3688, file: !3689, line: 188, type: !3585)
!3694 = !DILocation(line: 0, scope: !3688)
!3695 = !DILocation(line: 197, column: 2, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3688, file: !3689, line: 197, column: 2)
!3697 = !{i64 2154738164}
!3698 = !DILocation(line: 198, column: 2, scope: !3688)
!3699 = !DILocation(line: 199, column: 1, scope: !3688)
!3700 = distinct !DISubprogram(name: "z_current_get", scope: !3689, file: !3689, line: 173, type: !3583, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !473)
!3701 = !DILocation(line: 180, column: 2, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3700, file: !3689, line: 180, column: 2)
!3703 = !{i64 2154738096}
!3704 = !DILocation(line: 181, column: 9, scope: !3700)
!3705 = !DILocation(line: 181, column: 2, scope: !3700)
!3706 = distinct !DISubprogram(name: "sys_heap_free", scope: !3707, file: !3707, line: 163, type: !3708, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3716)
!3707 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3708 = !DISubroutineType(types: !3709)
!3709 = !{null, !3710, !102}
!3710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3711, size: 32)
!3711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !3712)
!3712 = !{!3713, !3714, !3715}
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3711, file: !462, line: 57, baseType: !2576, size: 32)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3711, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3711, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!3716 = !{!3717, !3718, !3719, !3720}
!3717 = !DILocalVariable(name: "heap", arg: 1, scope: !3706, file: !3707, line: 163, type: !3710)
!3718 = !DILocalVariable(name: "mem", arg: 2, scope: !3706, file: !3707, line: 163, type: !102)
!3719 = !DILocalVariable(name: "h", scope: !3706, file: !3707, line: 168, type: !2576)
!3720 = !DILocalVariable(name: "c", scope: !3706, file: !3707, line: 169, type: !2581)
!3721 = !DILocation(line: 0, scope: !3706)
!3722 = !DILocation(line: 165, column: 10, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3706, file: !3707, line: 165, column: 6)
!3724 = !DILocation(line: 165, column: 6, scope: !3706)
!3725 = !DILocation(line: 168, column: 27, scope: !3706)
!3726 = !DILocation(line: 169, column: 16, scope: !3706)
!3727 = !{i32 0, i32 536870912}
!3728 = !DILocation(line: 187, column: 2, scope: !3706)
!3729 = !DILocation(line: 197, column: 2, scope: !3706)
!3730 = !DILocation(line: 198, column: 1, scope: !3706)
!3731 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3707, file: !3707, line: 157, type: !3732, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3734)
!3732 = !DISubroutineType(types: !3733)
!3733 = !{!2581, !2576, !102}
!3734 = !{!3735, !3736, !3737, !3738}
!3735 = !DILocalVariable(name: "h", arg: 1, scope: !3731, file: !3707, line: 157, type: !2576)
!3736 = !DILocalVariable(name: "p", arg: 2, scope: !3731, file: !3707, line: 157, type: !102)
!3737 = !DILocalVariable(name: "mem", scope: !3731, file: !3707, line: 159, type: !270)
!3738 = !DILocalVariable(name: "base", scope: !3731, file: !3707, line: 159, type: !270)
!3739 = !DILocation(line: 0, scope: !3731)
!3740 = !DILocation(line: 159, column: 39, scope: !3731)
!3741 = !DILocation(line: 160, column: 14, scope: !3731)
!3742 = !DILocation(line: 160, column: 38, scope: !3731)
!3743 = !DILocation(line: 160, column: 46, scope: !3731)
!3744 = !DILocation(line: 160, column: 2, scope: !3731)
!3745 = distinct !DISubprogram(name: "set_chunk_used", scope: !2563, file: !2563, line: 147, type: !3746, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3748)
!3746 = !DISubroutineType(types: !3747)
!3747 = !{null, !2576, !2581, !166}
!3748 = !{!3749, !3750, !3751, !3752, !3753}
!3749 = !DILocalVariable(name: "h", arg: 1, scope: !3745, file: !2563, line: 147, type: !2576)
!3750 = !DILocalVariable(name: "c", arg: 2, scope: !3745, file: !2563, line: 147, type: !2581)
!3751 = !DILocalVariable(name: "used", arg: 3, scope: !3745, file: !2563, line: 147, type: !166)
!3752 = !DILocalVariable(name: "buf", scope: !3745, file: !2563, line: 149, type: !2570)
!3753 = !DILocalVariable(name: "cmem", scope: !3745, file: !2563, line: 150, type: !102)
!3754 = !DILocation(line: 0, scope: !3745)
!3755 = !DILocation(line: 149, column: 22, scope: !3745)
!3756 = !DILocation(line: 0, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3758, file: !2563, line: 159, column: 7)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !2563, line: 158, column: 9)
!3759 = distinct !DILexicalBlock(scope: !3745, file: !2563, line: 152, column: 6)
!3760 = !DILocation(line: 159, column: 7, scope: !3758)
!3761 = !DILocation(line: 165, column: 1, scope: !3745)
!3762 = distinct !DISubprogram(name: "free_chunk", scope: !3707, file: !3707, line: 133, type: !3763, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3765)
!3763 = !DISubroutineType(types: !3764)
!3764 = !{null, !2576, !2581}
!3765 = !{!3766, !3767}
!3766 = !DILocalVariable(name: "h", arg: 1, scope: !3762, file: !3707, line: 133, type: !2576)
!3767 = !DILocalVariable(name: "c", arg: 2, scope: !3762, file: !3707, line: 133, type: !2581)
!3768 = !DILocation(line: 0, scope: !3762)
!3769 = !DILocation(line: 136, column: 21, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3762, file: !3707, line: 136, column: 6)
!3771 = !DILocation(line: 136, column: 7, scope: !3770)
!3772 = !DILocation(line: 136, column: 6, scope: !3762)
!3773 = !DILocation(line: 137, column: 3, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3770, file: !3707, line: 136, column: 41)
!3775 = !DILocation(line: 138, column: 22, scope: !3774)
!3776 = !DILocation(line: 138, column: 3, scope: !3774)
!3777 = !DILocation(line: 139, column: 2, scope: !3774)
!3778 = !DILocation(line: 142, column: 21, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3762, file: !3707, line: 142, column: 6)
!3780 = !{i32 -65535, i32 536903678}
!3781 = !DILocation(line: 142, column: 7, scope: !3779)
!3782 = !DILocation(line: 142, column: 6, scope: !3762)
!3783 = !DILocation(line: 143, column: 3, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3779, file: !3707, line: 142, column: 40)
!3785 = !DILocation(line: 144, column: 19, scope: !3784)
!3786 = !DILocation(line: 144, column: 3, scope: !3784)
!3787 = !DILocation(line: 145, column: 7, scope: !3784)
!3788 = !DILocation(line: 146, column: 2, scope: !3784)
!3789 = !DILocation(line: 148, column: 2, scope: !3762)
!3790 = !DILocation(line: 149, column: 1, scope: !3762)
!3791 = distinct !DISubprogram(name: "right_chunk", scope: !2563, file: !2563, line: 204, type: !3792, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3794)
!3792 = !DISubroutineType(types: !3793)
!3793 = !{!2581, !2576, !2581}
!3794 = !{!3795, !3796}
!3795 = !DILocalVariable(name: "h", arg: 1, scope: !3791, file: !2563, line: 204, type: !2576)
!3796 = !DILocalVariable(name: "c", arg: 2, scope: !3791, file: !2563, line: 204, type: !2581)
!3797 = !DILocation(line: 0, scope: !3791)
!3798 = !DILocation(line: 206, column: 13, scope: !3791)
!3799 = !DILocation(line: 206, column: 11, scope: !3791)
!3800 = !DILocation(line: 206, column: 2, scope: !3791)
!3801 = distinct !DISubprogram(name: "chunk_used", scope: !2563, file: !2563, line: 137, type: !3802, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3804)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{!166, !2576, !2581}
!3804 = !{!3805, !3806}
!3805 = !DILocalVariable(name: "h", arg: 1, scope: !3801, file: !2563, line: 137, type: !2576)
!3806 = !DILocalVariable(name: "c", arg: 2, scope: !3801, file: !2563, line: 137, type: !2581)
!3807 = !DILocation(line: 0, scope: !3801)
!3808 = !DILocation(line: 139, column: 9, scope: !3801)
!3809 = !DILocation(line: 139, column: 42, scope: !3801)
!3810 = !DILocation(line: 139, column: 2, scope: !3801)
!3811 = distinct !DISubprogram(name: "free_list_remove", scope: !3707, file: !3707, line: 60, type: !3763, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3812)
!3812 = !{!3813, !3814, !3815}
!3813 = !DILocalVariable(name: "h", arg: 1, scope: !3811, file: !3707, line: 60, type: !2576)
!3814 = !DILocalVariable(name: "c", arg: 2, scope: !3811, file: !3707, line: 60, type: !2581)
!3815 = !DILocalVariable(name: "bidx", scope: !3816, file: !3707, line: 63, type: !103)
!3816 = distinct !DILexicalBlock(scope: !3817, file: !3707, line: 62, column: 31)
!3817 = distinct !DILexicalBlock(scope: !3811, file: !3707, line: 62, column: 6)
!3818 = !DILocation(line: 0, scope: !3811)
!3819 = !DILocation(line: 63, column: 28, scope: !3816)
!3820 = !{i32 0, i32 32768}
!3821 = !DILocation(line: 63, column: 14, scope: !3816)
!3822 = !DILocation(line: 0, scope: !3816)
!3823 = !DILocation(line: 64, column: 3, scope: !3816)
!3824 = !DILocation(line: 66, column: 1, scope: !3811)
!3825 = distinct !DISubprogram(name: "merge_chunks", scope: !3707, file: !3707, line: 125, type: !3826, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3828)
!3826 = !DISubroutineType(types: !3827)
!3827 = !{null, !2576, !2581, !2581}
!3828 = !{!3829, !3830, !3831, !3832}
!3829 = !DILocalVariable(name: "h", arg: 1, scope: !3825, file: !3707, line: 125, type: !2576)
!3830 = !DILocalVariable(name: "lc", arg: 2, scope: !3825, file: !3707, line: 125, type: !2581)
!3831 = !DILocalVariable(name: "rc", arg: 3, scope: !3825, file: !3707, line: 125, type: !2581)
!3832 = !DILocalVariable(name: "newsz", scope: !3825, file: !3707, line: 127, type: !3833)
!3833 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2563, line: 62, baseType: !132)
!3834 = !DILocation(line: 0, scope: !3825)
!3835 = !DILocation(line: 127, column: 20, scope: !3825)
!3836 = !DILocation(line: 127, column: 40, scope: !3825)
!3837 = !DILocation(line: 127, column: 38, scope: !3825)
!3838 = !DILocation(line: 129, column: 2, scope: !3825)
!3839 = !DILocation(line: 130, column: 25, scope: !3825)
!3840 = !DILocation(line: 130, column: 2, scope: !3825)
!3841 = !DILocation(line: 131, column: 1, scope: !3825)
!3842 = distinct !DISubprogram(name: "left_chunk", scope: !2563, file: !2563, line: 199, type: !3792, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3843)
!3843 = !{!3844, !3845}
!3844 = !DILocalVariable(name: "h", arg: 1, scope: !3842, file: !2563, line: 199, type: !2576)
!3845 = !DILocalVariable(name: "c", arg: 2, scope: !3842, file: !2563, line: 199, type: !2581)
!3846 = !DILocation(line: 0, scope: !3842)
!3847 = !DILocation(line: 201, column: 13, scope: !3842)
!3848 = !DILocation(line: 201, column: 11, scope: !3842)
!3849 = !DILocation(line: 201, column: 2, scope: !3842)
!3850 = distinct !DISubprogram(name: "free_list_add", scope: !3707, file: !3707, line: 98, type: !3763, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3851)
!3851 = !{!3852, !3853, !3854}
!3852 = !DILocalVariable(name: "h", arg: 1, scope: !3850, file: !3707, line: 98, type: !2576)
!3853 = !DILocalVariable(name: "c", arg: 2, scope: !3850, file: !3707, line: 98, type: !2581)
!3854 = !DILocalVariable(name: "bidx", scope: !3855, file: !3707, line: 101, type: !103)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !3707, line: 100, column: 31)
!3856 = distinct !DILexicalBlock(scope: !3850, file: !3707, line: 100, column: 6)
!3857 = !DILocation(line: 0, scope: !3850)
!3858 = !DILocation(line: 101, column: 28, scope: !3855)
!3859 = !DILocation(line: 101, column: 14, scope: !3855)
!3860 = !DILocation(line: 0, scope: !3855)
!3861 = !DILocation(line: 102, column: 3, scope: !3855)
!3862 = !DILocation(line: 104, column: 1, scope: !3850)
!3863 = distinct !DISubprogram(name: "chunk_size", scope: !2563, file: !2563, line: 142, type: !3864, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3866)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{!3833, !2576, !2581}
!3866 = !{!3867, !3868}
!3867 = !DILocalVariable(name: "h", arg: 1, scope: !3863, file: !2563, line: 142, type: !2576)
!3868 = !DILocalVariable(name: "c", arg: 2, scope: !3863, file: !2563, line: 142, type: !2581)
!3869 = !DILocation(line: 0, scope: !3863)
!3870 = !DILocation(line: 144, column: 9, scope: !3863)
!3871 = !DILocation(line: 144, column: 42, scope: !3863)
!3872 = !DILocation(line: 144, column: 2, scope: !3863)
!3873 = distinct !DISubprogram(name: "bucket_idx", scope: !2563, file: !2563, line: 250, type: !3874, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3876)
!3874 = !DISubroutineType(types: !3875)
!3875 = !{!103, !2576, !3833}
!3876 = !{!3877, !3878, !3879}
!3877 = !DILocalVariable(name: "h", arg: 1, scope: !3873, file: !2563, line: 250, type: !2576)
!3878 = !DILocalVariable(name: "sz", arg: 2, scope: !3873, file: !2563, line: 250, type: !3833)
!3879 = !DILocalVariable(name: "usable_sz", scope: !3873, file: !2563, line: 252, type: !32)
!3880 = !DILocation(line: 0, scope: !3873)
!3881 = !DILocation(line: 252, column: 32, scope: !3873)
!3882 = !DILocation(line: 252, column: 30, scope: !3873)
!3883 = !DILocation(line: 252, column: 50, scope: !3873)
!3884 = !DILocation(line: 253, column: 14, scope: !3873)
!3885 = !{i32 0, i32 33}
!3886 = !DILocation(line: 253, column: 12, scope: !3873)
!3887 = !DILocation(line: 253, column: 2, scope: !3873)
!3888 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3707, file: !3707, line: 68, type: !3889, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3891)
!3889 = !DISubroutineType(types: !3890)
!3890 = !{null, !2576, !2581, !103}
!3891 = !{!3892, !3893, !3894, !3895, !3897, !3900}
!3892 = !DILocalVariable(name: "h", arg: 1, scope: !3888, file: !3707, line: 68, type: !2576)
!3893 = !DILocalVariable(name: "c", arg: 2, scope: !3888, file: !3707, line: 68, type: !2581)
!3894 = !DILocalVariable(name: "bidx", arg: 3, scope: !3888, file: !3707, line: 68, type: !103)
!3895 = !DILocalVariable(name: "b", scope: !3888, file: !3707, line: 70, type: !3896)
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 32)
!3897 = !DILocalVariable(name: "second", scope: !3898, file: !3707, line: 84, type: !2581)
!3898 = distinct !DILexicalBlock(scope: !3899, file: !3707, line: 80, column: 9)
!3899 = distinct !DILexicalBlock(scope: !3888, file: !3707, line: 72, column: 6)
!3900 = !DILocalVariable(name: "first", scope: !3898, file: !3707, line: 85, type: !2581)
!3901 = !DILocation(line: 0, scope: !3888)
!3902 = !DILocation(line: 72, column: 9, scope: !3899)
!3903 = !DILocation(line: 72, column: 14, scope: !3899)
!3904 = !DILocation(line: 72, column: 6, scope: !3888)
!3905 = !DILocation(line: 76, column: 23, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3899, file: !3707, line: 72, column: 21)
!3907 = !DILocation(line: 76, column: 6, scope: !3906)
!3908 = !DILocation(line: 76, column: 20, scope: !3906)
!3909 = !DILocation(line: 77, column: 11, scope: !3906)
!3910 = !DILocation(line: 78, column: 3, scope: !3906)
!3911 = !DILocation(line: 79, column: 3, scope: !3906)
!3912 = !DILocation(line: 80, column: 2, scope: !3906)
!3913 = !DILocation(line: 0, scope: !3898)
!3914 = !DILocation(line: 85, column: 21, scope: !3898)
!3915 = !{i32 0, i32 65536}
!3916 = !DILocation(line: 87, column: 3, scope: !3898)
!3917 = !DILocation(line: 88, column: 3, scope: !3898)
!3918 = !DILocation(line: 89, column: 3, scope: !3898)
!3919 = !DILocation(line: 90, column: 3, scope: !3898)
!3920 = !DILocation(line: 96, column: 1, scope: !3888)
!3921 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2563, file: !2563, line: 187, type: !3826, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3922)
!3922 = !{!3923, !3924, !3925}
!3923 = !DILocalVariable(name: "h", arg: 1, scope: !3921, file: !2563, line: 187, type: !2576)
!3924 = !DILocalVariable(name: "c", arg: 2, scope: !3921, file: !2563, line: 187, type: !2581)
!3925 = !DILocalVariable(name: "prev", arg: 3, scope: !3921, file: !2563, line: 188, type: !2581)
!3926 = !DILocation(line: 0, scope: !3921)
!3927 = !DILocation(line: 190, column: 2, scope: !3921)
!3928 = !DILocation(line: 191, column: 1, scope: !3921)
!3929 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2563, file: !2563, line: 193, type: !3826, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3930)
!3930 = !{!3931, !3932, !3933}
!3931 = !DILocalVariable(name: "h", arg: 1, scope: !3929, file: !2563, line: 193, type: !2576)
!3932 = !DILocalVariable(name: "c", arg: 2, scope: !3929, file: !2563, line: 193, type: !2581)
!3933 = !DILocalVariable(name: "next", arg: 3, scope: !3929, file: !2563, line: 194, type: !2581)
!3934 = !DILocation(line: 0, scope: !3929)
!3935 = !DILocation(line: 196, column: 2, scope: !3929)
!3936 = !DILocation(line: 197, column: 1, scope: !3929)
!3937 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2563, file: !2563, line: 177, type: !3792, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3938)
!3938 = !{!3939, !3940}
!3939 = !DILocalVariable(name: "h", arg: 1, scope: !3937, file: !2563, line: 177, type: !2576)
!3940 = !DILocalVariable(name: "c", arg: 2, scope: !3937, file: !2563, line: 177, type: !2581)
!3941 = !DILocation(line: 0, scope: !3937)
!3942 = !DILocation(line: 179, column: 9, scope: !3937)
!3943 = !DILocation(line: 179, column: 2, scope: !3937)
!3944 = distinct !DISubprogram(name: "chunk_field", scope: !2563, file: !2563, line: 107, type: !3945, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3947)
!3945 = !DISubroutineType(types: !3946)
!3946 = !{!2581, !2576, !2581, !2562}
!3947 = !{!3948, !3949, !3950, !3951, !3952}
!3948 = !DILocalVariable(name: "h", arg: 1, scope: !3944, file: !2563, line: 107, type: !2576)
!3949 = !DILocalVariable(name: "c", arg: 2, scope: !3944, file: !2563, line: 107, type: !2581)
!3950 = !DILocalVariable(name: "f", arg: 3, scope: !3944, file: !2563, line: 108, type: !2562)
!3951 = !DILocalVariable(name: "buf", scope: !3944, file: !2563, line: 110, type: !2570)
!3952 = !DILocalVariable(name: "cmem", scope: !3944, file: !2563, line: 111, type: !102)
!3953 = !DILocation(line: 0, scope: !3944)
!3954 = !DILocation(line: 110, column: 22, scope: !3944)
!3955 = !DILocation(line: 111, column: 15, scope: !3944)
!3956 = !DILocation(line: 116, column: 11, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !2563, line: 115, column: 9)
!3958 = distinct !DILexicalBlock(scope: !3944, file: !2563, line: 113, column: 6)
!3959 = !DILocation(line: 116, column: 10, scope: !3957)
!3960 = !DILocation(line: 118, column: 1, scope: !3944)
!3961 = distinct !DISubprogram(name: "chunk_buf", scope: !2563, file: !2563, line: 101, type: !3962, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3964)
!3962 = !DISubroutineType(types: !3963)
!3963 = !{!2570, !2576}
!3964 = !{!3965}
!3965 = !DILocalVariable(name: "h", arg: 1, scope: !3961, file: !2563, line: 101, type: !2576)
!3966 = !DILocation(line: 0, scope: !3961)
!3967 = !DILocation(line: 104, column: 9, scope: !3961)
!3968 = !DILocation(line: 104, column: 2, scope: !3961)
!3969 = distinct !DISubprogram(name: "chunk_set", scope: !2563, file: !2563, line: 120, type: !3970, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3972)
!3970 = !DISubroutineType(types: !3971)
!3971 = !{null, !2576, !2581, !2562, !2581}
!3972 = !{!3973, !3974, !3975, !3976, !3977, !3978}
!3973 = !DILocalVariable(name: "h", arg: 1, scope: !3969, file: !2563, line: 120, type: !2576)
!3974 = !DILocalVariable(name: "c", arg: 2, scope: !3969, file: !2563, line: 120, type: !2581)
!3975 = !DILocalVariable(name: "f", arg: 3, scope: !3969, file: !2563, line: 121, type: !2562)
!3976 = !DILocalVariable(name: "val", arg: 4, scope: !3969, file: !2563, line: 121, type: !2581)
!3977 = !DILocalVariable(name: "buf", scope: !3969, file: !2563, line: 125, type: !2570)
!3978 = !DILocalVariable(name: "cmem", scope: !3969, file: !2563, line: 126, type: !102)
!3979 = !DILocation(line: 0, scope: !3969)
!3980 = !DILocation(line: 125, column: 22, scope: !3969)
!3981 = !DILocation(line: 126, column: 15, scope: !3969)
!3982 = !DILocation(line: 133, column: 27, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3984, file: !2563, line: 131, column: 9)
!3984 = distinct !DILexicalBlock(scope: !3969, file: !2563, line: 128, column: 6)
!3985 = !DILocation(line: 133, column: 4, scope: !3983)
!3986 = !DILocation(line: 133, column: 3, scope: !3983)
!3987 = !DILocation(line: 133, column: 25, scope: !3983)
!3988 = !DILocation(line: 135, column: 1, scope: !3969)
!3989 = distinct !DISubprogram(name: "min_chunk_size", scope: !2563, file: !2563, line: 240, type: !3990, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3992)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{!3833, !2576}
!3992 = !{!3993}
!3993 = !DILocalVariable(name: "h", arg: 1, scope: !3989, file: !2563, line: 240, type: !2576)
!3994 = !DILocation(line: 0, scope: !3989)
!3995 = !DILocation(line: 242, column: 9, scope: !3989)
!3996 = !DILocation(line: 242, column: 2, scope: !3989)
!3997 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2563, file: !2563, line: 235, type: !3998, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4000)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{!3833, !2576, !356}
!4000 = !{!4001, !4002}
!4001 = !DILocalVariable(name: "h", arg: 1, scope: !3997, file: !2563, line: 235, type: !2576)
!4002 = !DILocalVariable(name: "bytes", arg: 2, scope: !3997, file: !2563, line: 235, type: !356)
!4003 = !DILocation(line: 0, scope: !3997)
!4004 = !DILocation(line: 237, column: 39, scope: !3997)
!4005 = !DILocation(line: 237, column: 9, scope: !3997)
!4006 = !DILocation(line: 237, column: 2, scope: !3997)
!4007 = distinct !DISubprogram(name: "chunksz", scope: !2563, file: !2563, line: 230, type: !4008, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4010)
!4008 = !DISubroutineType(types: !4009)
!4009 = !{!3833, !356}
!4010 = !{!4011}
!4011 = !DILocalVariable(name: "bytes", arg: 1, scope: !4007, file: !2563, line: 230, type: !356)
!4012 = !DILocation(line: 0, scope: !4007)
!4013 = !DILocation(line: 232, column: 29, scope: !4007)
!4014 = !DILocation(line: 232, column: 35, scope: !4007)
!4015 = !DILocation(line: 232, column: 2, scope: !4007)
!4016 = distinct !DISubprogram(name: "set_chunk_size", scope: !2563, file: !2563, line: 172, type: !4017, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4019)
!4017 = !DISubroutineType(types: !4018)
!4018 = !{null, !2576, !2581, !3833}
!4019 = !{!4020, !4021, !4022}
!4020 = !DILocalVariable(name: "h", arg: 1, scope: !4016, file: !2563, line: 172, type: !2576)
!4021 = !DILocalVariable(name: "c", arg: 2, scope: !4016, file: !2563, line: 172, type: !2581)
!4022 = !DILocalVariable(name: "size", arg: 3, scope: !4016, file: !2563, line: 172, type: !3833)
!4023 = !DILocation(line: 0, scope: !4016)
!4024 = !DILocation(line: 174, column: 38, scope: !4016)
!4025 = !DILocation(line: 174, column: 2, scope: !4016)
!4026 = !DILocation(line: 175, column: 1, scope: !4016)
!4027 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2563, file: !2563, line: 209, type: !4017, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4028)
!4028 = !{!4029, !4030, !4031}
!4029 = !DILocalVariable(name: "h", arg: 1, scope: !4027, file: !2563, line: 209, type: !2576)
!4030 = !DILocalVariable(name: "c", arg: 2, scope: !4027, file: !2563, line: 209, type: !2581)
!4031 = !DILocalVariable(name: "size", arg: 3, scope: !4027, file: !2563, line: 210, type: !3833)
!4032 = !DILocation(line: 0, scope: !4027)
!4033 = !DILocation(line: 212, column: 2, scope: !4027)
!4034 = !DILocation(line: 213, column: 1, scope: !4027)
!4035 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3707, file: !3707, line: 34, type: !3889, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4036)
!4036 = !{!4037, !4038, !4039, !4040, !4041, !4044}
!4037 = !DILocalVariable(name: "h", arg: 1, scope: !4035, file: !3707, line: 34, type: !2576)
!4038 = !DILocalVariable(name: "c", arg: 2, scope: !4035, file: !3707, line: 34, type: !2581)
!4039 = !DILocalVariable(name: "bidx", arg: 3, scope: !4035, file: !3707, line: 34, type: !103)
!4040 = !DILocalVariable(name: "b", scope: !4035, file: !3707, line: 36, type: !3896)
!4041 = !DILocalVariable(name: "first", scope: !4042, file: !3707, line: 47, type: !2581)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !3707, line: 46, column: 9)
!4043 = distinct !DILexicalBlock(scope: !4035, file: !3707, line: 42, column: 6)
!4044 = !DILocalVariable(name: "second", scope: !4042, file: !3707, line: 48, type: !2581)
!4045 = !DILocation(line: 0, scope: !4035)
!4046 = !DILocation(line: 36, column: 29, scope: !4035)
!4047 = !DILocation(line: 42, column: 6, scope: !4043)
!4048 = !DILocation(line: 42, column: 28, scope: !4043)
!4049 = !DILocation(line: 42, column: 6, scope: !4035)
!4050 = !DILocation(line: 44, column: 24, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4043, file: !3707, line: 42, column: 34)
!4052 = !DILocation(line: 44, column: 23, scope: !4051)
!4053 = !DILocation(line: 44, column: 6, scope: !4051)
!4054 = !DILocation(line: 44, column: 20, scope: !4051)
!4055 = !DILocation(line: 45, column: 6, scope: !4051)
!4056 = !DILocation(line: 45, column: 11, scope: !4051)
!4057 = !DILocation(line: 46, column: 2, scope: !4051)
!4058 = !DILocation(line: 47, column: 21, scope: !4042)
!4059 = !DILocation(line: 0, scope: !4042)
!4060 = !DILocation(line: 50, column: 6, scope: !4042)
!4061 = !DILocation(line: 50, column: 11, scope: !4042)
!4062 = !DILocation(line: 51, column: 3, scope: !4042)
!4063 = !DILocation(line: 52, column: 3, scope: !4042)
!4064 = !DILocation(line: 58, column: 1, scope: !4035)
!4065 = distinct !DISubprogram(name: "next_free_chunk", scope: !2563, file: !2563, line: 182, type: !3792, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4066)
!4066 = !{!4067, !4068}
!4067 = !DILocalVariable(name: "h", arg: 1, scope: !4065, file: !2563, line: 182, type: !2576)
!4068 = !DILocalVariable(name: "c", arg: 2, scope: !4065, file: !2563, line: 182, type: !2581)
!4069 = !DILocation(line: 0, scope: !4065)
!4070 = !DILocation(line: 184, column: 9, scope: !4065)
!4071 = !DILocation(line: 184, column: 2, scope: !4065)
!4072 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3707, file: !3707, line: 200, type: !4073, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4075)
!4073 = !DISubroutineType(types: !4074)
!4074 = !{!356, !3710, !102}
!4075 = !{!4076, !4077, !4078, !4079, !4080, !4081, !4082}
!4076 = !DILocalVariable(name: "heap", arg: 1, scope: !4072, file: !3707, line: 200, type: !3710)
!4077 = !DILocalVariable(name: "mem", arg: 2, scope: !4072, file: !3707, line: 200, type: !102)
!4078 = !DILocalVariable(name: "h", scope: !4072, file: !3707, line: 202, type: !2576)
!4079 = !DILocalVariable(name: "c", scope: !4072, file: !3707, line: 203, type: !2581)
!4080 = !DILocalVariable(name: "addr", scope: !4072, file: !3707, line: 204, type: !356)
!4081 = !DILocalVariable(name: "chunk_base", scope: !4072, file: !3707, line: 205, type: !356)
!4082 = !DILocalVariable(name: "chunk_sz", scope: !4072, file: !3707, line: 206, type: !356)
!4083 = !DILocation(line: 0, scope: !4072)
!4084 = !DILocation(line: 202, column: 27, scope: !4072)
!4085 = !DILocation(line: 203, column: 16, scope: !4072)
!4086 = !DILocation(line: 204, column: 16, scope: !4072)
!4087 = !DILocation(line: 205, column: 31, scope: !4072)
!4088 = !DILocation(line: 205, column: 22, scope: !4072)
!4089 = !DILocation(line: 206, column: 20, scope: !4072)
!4090 = !DILocation(line: 206, column: 37, scope: !4072)
!4091 = !DILocation(line: 208, column: 26, scope: !4072)
!4092 = !DILocation(line: 208, column: 18, scope: !4072)
!4093 = !DILocation(line: 208, column: 2, scope: !4072)
!4094 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3707, file: !3707, line: 263, type: !4095, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4097)
!4095 = !DISubroutineType(types: !4096)
!4096 = !{!102, !3710, !356}
!4097 = !{!4098, !4099, !4100, !4101, !4102, !4103}
!4098 = !DILocalVariable(name: "heap", arg: 1, scope: !4094, file: !3707, line: 263, type: !3710)
!4099 = !DILocalVariable(name: "bytes", arg: 2, scope: !4094, file: !3707, line: 263, type: !356)
!4100 = !DILocalVariable(name: "h", scope: !4094, file: !3707, line: 265, type: !2576)
!4101 = !DILocalVariable(name: "mem", scope: !4094, file: !3707, line: 266, type: !102)
!4102 = !DILocalVariable(name: "chunk_sz", scope: !4094, file: !3707, line: 272, type: !3833)
!4103 = !DILocalVariable(name: "c", scope: !4094, file: !3707, line: 273, type: !2581)
!4104 = !DILocation(line: 0, scope: !4094)
!4105 = !DILocation(line: 265, column: 27, scope: !4094)
!4106 = !DILocation(line: 268, column: 12, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4094, file: !3707, line: 268, column: 6)
!4108 = !DILocation(line: 268, column: 18, scope: !4107)
!4109 = !DILocation(line: 268, column: 21, scope: !4107)
!4110 = !DILocation(line: 268, column: 6, scope: !4094)
!4111 = !DILocation(line: 272, column: 23, scope: !4094)
!4112 = !DILocation(line: 273, column: 16, scope: !4094)
!4113 = !DILocation(line: 274, column: 8, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4094, file: !3707, line: 274, column: 6)
!4115 = !DILocation(line: 274, column: 6, scope: !4094)
!4116 = !DILocation(line: 279, column: 6, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4094, file: !3707, line: 279, column: 6)
!4118 = !DILocation(line: 279, column: 23, scope: !4117)
!4119 = !DILocation(line: 279, column: 6, scope: !4094)
!4120 = !DILocation(line: 280, column: 24, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4117, file: !3707, line: 279, column: 35)
!4122 = !DILocation(line: 280, column: 3, scope: !4121)
!4123 = !DILocation(line: 281, column: 3, scope: !4121)
!4124 = !DILocation(line: 282, column: 2, scope: !4121)
!4125 = !DILocation(line: 284, column: 2, scope: !4094)
!4126 = !DILocation(line: 286, column: 8, scope: !4094)
!4127 = !DILocation(line: 298, column: 2, scope: !4094)
!4128 = !DILocation(line: 299, column: 1, scope: !4094)
!4129 = distinct !DISubprogram(name: "size_too_big", scope: !2563, file: !2563, line: 256, type: !4130, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4132)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{!166, !2576, !356}
!4132 = !{!4133, !4134}
!4133 = !DILocalVariable(name: "h", arg: 1, scope: !4129, file: !2563, line: 256, type: !2576)
!4134 = !DILocalVariable(name: "bytes", arg: 2, scope: !4129, file: !2563, line: 256, type: !356)
!4135 = !DILocation(line: 0, scope: !4129)
!4136 = !DILocation(line: 262, column: 16, scope: !4129)
!4137 = !DILocation(line: 262, column: 36, scope: !4129)
!4138 = !DILocation(line: 262, column: 30, scope: !4129)
!4139 = !DILocation(line: 262, column: 2, scope: !4129)
!4140 = distinct !DISubprogram(name: "alloc_chunk", scope: !3707, file: !3707, line: 211, type: !4141, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4143)
!4141 = !DISubroutineType(types: !4142)
!4142 = !{!2581, !2576, !3833}
!4143 = !{!4144, !4145, !4146, !4147, !4148, !4151, !4152, !4154, !4155, !4158}
!4144 = !DILocalVariable(name: "h", arg: 1, scope: !4140, file: !3707, line: 211, type: !2576)
!4145 = !DILocalVariable(name: "sz", arg: 2, scope: !4140, file: !3707, line: 211, type: !3833)
!4146 = !DILocalVariable(name: "bi", scope: !4140, file: !3707, line: 213, type: !103)
!4147 = !DILocalVariable(name: "b", scope: !4140, file: !3707, line: 214, type: !3896)
!4148 = !DILocalVariable(name: "first", scope: !4149, file: !3707, line: 233, type: !2581)
!4149 = distinct !DILexicalBlock(scope: !4150, file: !3707, line: 232, column: 15)
!4150 = distinct !DILexicalBlock(scope: !4140, file: !3707, line: 232, column: 6)
!4151 = !DILocalVariable(name: "i", scope: !4149, file: !3707, line: 234, type: !103)
!4152 = !DILocalVariable(name: "c", scope: !4153, file: !3707, line: 236, type: !2581)
!4153 = distinct !DILexicalBlock(scope: !4149, file: !3707, line: 235, column: 6)
!4154 = !DILocalVariable(name: "bmask", scope: !4140, file: !3707, line: 249, type: !132)
!4155 = !DILocalVariable(name: "minbucket", scope: !4156, file: !3707, line: 252, type: !103)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !3707, line: 251, column: 19)
!4157 = distinct !DILexicalBlock(scope: !4140, file: !3707, line: 251, column: 6)
!4158 = !DILocalVariable(name: "c", scope: !4156, file: !3707, line: 253, type: !2581)
!4159 = !DILocation(line: 0, scope: !4140)
!4160 = !DILocation(line: 213, column: 11, scope: !4140)
!4161 = !DILocation(line: 232, column: 9, scope: !4150)
!4162 = !DILocation(line: 232, column: 6, scope: !4150)
!4163 = !DILocation(line: 232, column: 6, scope: !4140)
!4164 = !DILocation(line: 236, column: 21, scope: !4153)
!4165 = !DILocation(line: 0, scope: !4149)
!4166 = !DILocation(line: 0, scope: !4153)
!4167 = !DILocation(line: 237, column: 8, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4153, file: !3707, line: 237, column: 8)
!4169 = !DILocation(line: 237, column: 25, scope: !4168)
!4170 = !DILocation(line: 237, column: 8, scope: !4153)
!4171 = !DILocation(line: 238, column: 5, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4168, file: !3707, line: 237, column: 32)
!4173 = !DILocation(line: 241, column: 14, scope: !4153)
!4174 = !DILocation(line: 241, column: 12, scope: !4153)
!4175 = !DILocation(line: 243, column: 12, scope: !4149)
!4176 = !DILocation(line: 243, column: 16, scope: !4149)
!4177 = distinct !{!4177, !4178, !4179}
!4178 = !DILocation(line: 235, column: 3, scope: !4149)
!4179 = !DILocation(line: 243, column: 35, scope: !4149)
!4180 = !DILocation(line: 249, column: 22, scope: !4140)
!4181 = !DILocation(line: 249, column: 39, scope: !4140)
!4182 = !DILocation(line: 249, column: 36, scope: !4140)
!4183 = !DILocation(line: 251, column: 12, scope: !4157)
!4184 = !DILocation(line: 251, column: 6, scope: !4140)
!4185 = !DILocation(line: 252, column: 19, scope: !4156)
!4186 = !DILocation(line: 0, scope: !4156)
!4187 = !DILocation(line: 253, column: 39, scope: !4156)
!4188 = !DILocation(line: 255, column: 3, scope: !4156)
!4189 = !DILocation(line: 261, column: 1, scope: !4140)
!4190 = distinct !DISubprogram(name: "split_chunks", scope: !3707, file: !3707, line: 109, type: !3826, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4191)
!4191 = !{!4192, !4193, !4194, !4195, !4196, !4197}
!4192 = !DILocalVariable(name: "h", arg: 1, scope: !4190, file: !3707, line: 109, type: !2576)
!4193 = !DILocalVariable(name: "lc", arg: 2, scope: !4190, file: !3707, line: 109, type: !2581)
!4194 = !DILocalVariable(name: "rc", arg: 3, scope: !4190, file: !3707, line: 109, type: !2581)
!4195 = !DILocalVariable(name: "sz0", scope: !4190, file: !3707, line: 114, type: !3833)
!4196 = !DILocalVariable(name: "lsz", scope: !4190, file: !3707, line: 115, type: !3833)
!4197 = !DILocalVariable(name: "rsz", scope: !4190, file: !3707, line: 116, type: !3833)
!4198 = !DILocation(line: 0, scope: !4190)
!4199 = !DILocation(line: 114, column: 18, scope: !4190)
!4200 = !DILocation(line: 115, column: 21, scope: !4190)
!4201 = !DILocation(line: 116, column: 22, scope: !4190)
!4202 = !DILocation(line: 118, column: 2, scope: !4190)
!4203 = !DILocation(line: 119, column: 2, scope: !4190)
!4204 = !DILocation(line: 120, column: 2, scope: !4190)
!4205 = !DILocation(line: 121, column: 25, scope: !4190)
!4206 = !DILocation(line: 121, column: 2, scope: !4190)
!4207 = !DILocation(line: 122, column: 1, scope: !4190)
!4208 = distinct !DISubprogram(name: "chunk_mem", scope: !3707, file: !3707, line: 24, type: !4209, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4211)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{!102, !2576, !2581}
!4211 = !{!4212, !4213, !4214, !4215}
!4212 = !DILocalVariable(name: "h", arg: 1, scope: !4208, file: !3707, line: 24, type: !2576)
!4213 = !DILocalVariable(name: "c", arg: 2, scope: !4208, file: !3707, line: 24, type: !2581)
!4214 = !DILocalVariable(name: "buf", scope: !4208, file: !3707, line: 26, type: !2570)
!4215 = !DILocalVariable(name: "ret", scope: !4208, file: !3707, line: 27, type: !270)
!4216 = !DILocation(line: 0, scope: !4208)
!4217 = !DILocation(line: 26, column: 22, scope: !4208)
!4218 = !DILocation(line: 27, column: 38, scope: !4208)
!4219 = !DILocation(line: 31, column: 2, scope: !4208)
!4220 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3707, file: !3707, line: 301, type: !4221, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4223)
!4221 = !DISubroutineType(types: !4222)
!4222 = !{!102, !3710, !356, !356}
!4223 = !{!4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235}
!4224 = !DILocalVariable(name: "heap", arg: 1, scope: !4220, file: !3707, line: 301, type: !3710)
!4225 = !DILocalVariable(name: "align", arg: 2, scope: !4220, file: !3707, line: 301, type: !356)
!4226 = !DILocalVariable(name: "bytes", arg: 3, scope: !4220, file: !3707, line: 301, type: !356)
!4227 = !DILocalVariable(name: "h", scope: !4220, file: !3707, line: 303, type: !2576)
!4228 = !DILocalVariable(name: "gap", scope: !4220, file: !3707, line: 304, type: !356)
!4229 = !DILocalVariable(name: "rew", scope: !4220, file: !3707, line: 304, type: !356)
!4230 = !DILocalVariable(name: "padded_sz", scope: !4220, file: !3707, line: 335, type: !3833)
!4231 = !DILocalVariable(name: "c0", scope: !4220, file: !3707, line: 336, type: !2581)
!4232 = !DILocalVariable(name: "mem", scope: !4220, file: !3707, line: 341, type: !270)
!4233 = !DILocalVariable(name: "end", scope: !4220, file: !3707, line: 345, type: !2570)
!4234 = !DILocalVariable(name: "c", scope: !4220, file: !3707, line: 348, type: !2581)
!4235 = !DILocalVariable(name: "c_end", scope: !4220, file: !3707, line: 349, type: !2581)
!4236 = !DILocation(line: 0, scope: !4220)
!4237 = !DILocation(line: 303, column: 27, scope: !4220)
!4238 = !DILocation(line: 313, column: 16, scope: !4220)
!4239 = !DILocation(line: 313, column: 14, scope: !4220)
!4240 = !DILocation(line: 314, column: 12, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4220, file: !3707, line: 314, column: 6)
!4242 = !DILocation(line: 314, column: 6, scope: !4220)
!4243 = !DILocation(line: 315, column: 9, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4241, file: !3707, line: 314, column: 20)
!4245 = !DILocation(line: 316, column: 9, scope: !4244)
!4246 = !DILocation(line: 318, column: 13, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4248, file: !3707, line: 318, column: 7)
!4248 = distinct !DILexicalBlock(scope: !4241, file: !3707, line: 317, column: 9)
!4249 = !DILocation(line: 318, column: 7, scope: !4248)
!4250 = !DILocation(line: 319, column: 11, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4247, file: !3707, line: 318, column: 39)
!4252 = !DILocation(line: 319, column: 4, scope: !4251)
!4253 = !DILocation(line: 0, scope: !4241)
!4254 = !DILocation(line: 326, column: 12, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4220, file: !3707, line: 326, column: 6)
!4256 = !DILocation(line: 326, column: 17, scope: !4255)
!4257 = !DILocation(line: 326, column: 20, scope: !4255)
!4258 = !DILocation(line: 326, column: 6, scope: !4220)
!4259 = !DILocation(line: 335, column: 50, scope: !4220)
!4260 = !DILocation(line: 335, column: 58, scope: !4220)
!4261 = !DILocation(line: 335, column: 24, scope: !4220)
!4262 = !DILocation(line: 336, column: 17, scope: !4220)
!4263 = !DILocation(line: 338, column: 9, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4220, file: !3707, line: 338, column: 6)
!4265 = !DILocation(line: 338, column: 6, scope: !4220)
!4266 = !DILocation(line: 341, column: 17, scope: !4220)
!4267 = !DILocation(line: 344, column: 20, scope: !4220)
!4268 = !DILocation(line: 344, column: 8, scope: !4220)
!4269 = !DILocation(line: 344, column: 47, scope: !4220)
!4270 = !DILocation(line: 345, column: 39, scope: !4220)
!4271 = !DILocation(line: 348, column: 16, scope: !4220)
!4272 = !DILocation(line: 349, column: 26, scope: !4220)
!4273 = !DILocation(line: 349, column: 24, scope: !4220)
!4274 = !DILocation(line: 353, column: 8, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4220, file: !3707, line: 353, column: 6)
!4276 = !DILocation(line: 353, column: 6, scope: !4220)
!4277 = !DILocation(line: 354, column: 3, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4275, file: !3707, line: 353, column: 14)
!4279 = !DILocation(line: 355, column: 3, scope: !4278)
!4280 = !DILocation(line: 356, column: 2, scope: !4278)
!4281 = !DILocation(line: 359, column: 6, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4220, file: !3707, line: 359, column: 6)
!4283 = !DILocation(line: 359, column: 24, scope: !4282)
!4284 = !DILocation(line: 359, column: 6, scope: !4220)
!4285 = !DILocation(line: 360, column: 3, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4282, file: !3707, line: 359, column: 33)
!4287 = !DILocation(line: 361, column: 3, scope: !4286)
!4288 = !DILocation(line: 362, column: 2, scope: !4286)
!4289 = !DILocation(line: 364, column: 2, scope: !4220)
!4290 = !DILocation(line: 377, column: 1, scope: !4220)
!4291 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3707, file: !3707, line: 379, type: !4292, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4294)
!4292 = !DISubroutineType(types: !4293)
!4293 = !{!102, !3710, !102, !356, !356}
!4294 = !{!4295, !4296, !4297, !4298, !4299, !4300, !4301, !4302, !4303, !4304, !4310, !4311}
!4295 = !DILocalVariable(name: "heap", arg: 1, scope: !4291, file: !3707, line: 379, type: !3710)
!4296 = !DILocalVariable(name: "ptr", arg: 2, scope: !4291, file: !3707, line: 379, type: !102)
!4297 = !DILocalVariable(name: "align", arg: 3, scope: !4291, file: !3707, line: 380, type: !356)
!4298 = !DILocalVariable(name: "bytes", arg: 4, scope: !4291, file: !3707, line: 380, type: !356)
!4299 = !DILocalVariable(name: "h", scope: !4291, file: !3707, line: 382, type: !2576)
!4300 = !DILocalVariable(name: "c", scope: !4291, file: !3707, line: 399, type: !2581)
!4301 = !DILocalVariable(name: "rc", scope: !4291, file: !3707, line: 400, type: !2581)
!4302 = !DILocalVariable(name: "align_gap", scope: !4291, file: !3707, line: 401, type: !356)
!4303 = !DILocalVariable(name: "chunks_need", scope: !4291, file: !3707, line: 402, type: !3833)
!4304 = !DILocalVariable(name: "split_size", scope: !4305, file: !3707, line: 435, type: !3833)
!4305 = distinct !DILexicalBlock(scope: !4306, file: !3707, line: 433, column: 61)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !3707, line: 432, column: 13)
!4307 = distinct !DILexicalBlock(scope: !4308, file: !3707, line: 409, column: 13)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !3707, line: 406, column: 13)
!4309 = distinct !DILexicalBlock(scope: !4291, file: !3707, line: 404, column: 6)
!4310 = !DILocalVariable(name: "ptr2", scope: !4291, file: !3707, line: 474, type: !102)
!4311 = !DILocalVariable(name: "prev_size", scope: !4312, file: !3707, line: 477, type: !356)
!4312 = distinct !DILexicalBlock(scope: !4313, file: !3707, line: 476, column: 20)
!4313 = distinct !DILexicalBlock(scope: !4291, file: !3707, line: 476, column: 6)
!4314 = !DILocation(line: 0, scope: !4291)
!4315 = !DILocation(line: 382, column: 27, scope: !4291)
!4316 = !DILocation(line: 385, column: 10, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4291, file: !3707, line: 385, column: 6)
!4318 = !DILocation(line: 385, column: 6, scope: !4291)
!4319 = !DILocation(line: 386, column: 10, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4317, file: !3707, line: 385, column: 19)
!4321 = !DILocation(line: 386, column: 3, scope: !4320)
!4322 = !DILocation(line: 388, column: 12, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4291, file: !3707, line: 388, column: 6)
!4324 = !DILocation(line: 388, column: 6, scope: !4291)
!4325 = !DILocation(line: 389, column: 3, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4323, file: !3707, line: 388, column: 18)
!4327 = !DILocation(line: 390, column: 3, scope: !4326)
!4328 = !DILocation(line: 395, column: 6, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4291, file: !3707, line: 395, column: 6)
!4330 = !DILocation(line: 395, column: 6, scope: !4291)
!4331 = !DILocation(line: 399, column: 16, scope: !4291)
!4332 = !DILocation(line: 400, column: 17, scope: !4291)
!4333 = !DILocation(line: 401, column: 49, scope: !4291)
!4334 = !DILocation(line: 401, column: 36, scope: !4291)
!4335 = !DILocation(line: 402, column: 52, scope: !4291)
!4336 = !DILocation(line: 402, column: 26, scope: !4291)
!4337 = !DILocation(line: 404, column: 6, scope: !4309)
!4338 = !DILocation(line: 404, column: 12, scope: !4309)
!4339 = !DILocation(line: 404, column: 40, scope: !4309)
!4340 = !DILocation(line: 404, column: 31, scope: !4309)
!4341 = !DILocation(line: 404, column: 6, scope: !4291)
!4342 = !DILocation(line: 406, column: 13, scope: !4308)
!4343 = !DILocation(line: 406, column: 30, scope: !4308)
!4344 = !DILocation(line: 406, column: 13, scope: !4309)
!4345 = !DILocation(line: 409, column: 30, scope: !4307)
!4346 = !DILocation(line: 409, column: 13, scope: !4308)
!4347 = !DILocation(line: 420, column: 24, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4307, file: !3707, line: 409, column: 45)
!4349 = !DILocation(line: 420, column: 3, scope: !4348)
!4350 = !DILocation(line: 421, column: 3, scope: !4348)
!4351 = !DILocation(line: 422, column: 3, scope: !4348)
!4352 = !DILocation(line: 431, column: 3, scope: !4348)
!4353 = !DILocation(line: 432, column: 14, scope: !4306)
!4354 = !DILocation(line: 432, column: 32, scope: !4306)
!4355 = !DILocation(line: 433, column: 26, scope: !4306)
!4356 = !DILocation(line: 433, column: 24, scope: !4306)
!4357 = !DILocation(line: 433, column: 44, scope: !4306)
!4358 = !DILocation(line: 432, column: 13, scope: !4307)
!4359 = !DILocation(line: 435, column: 38, scope: !4305)
!4360 = !DILocation(line: 0, scope: !4305)
!4361 = !DILocation(line: 445, column: 3, scope: !4305)
!4362 = !DILocation(line: 447, column: 20, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4305, file: !3707, line: 447, column: 7)
!4364 = !DILocation(line: 447, column: 18, scope: !4363)
!4365 = !DILocation(line: 447, column: 7, scope: !4305)
!4366 = !DILocation(line: 448, column: 27, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4363, file: !3707, line: 447, column: 39)
!4368 = !DILocation(line: 448, column: 4, scope: !4367)
!4369 = !DILocation(line: 449, column: 4, scope: !4367)
!4370 = !DILocation(line: 450, column: 3, scope: !4367)
!4371 = !DILocation(line: 452, column: 3, scope: !4305)
!4372 = !DILocation(line: 453, column: 3, scope: !4305)
!4373 = !DILocation(line: 474, column: 15, scope: !4291)
!4374 = !DILocation(line: 476, column: 11, scope: !4313)
!4375 = !DILocation(line: 476, column: 6, scope: !4291)
!4376 = !DILocation(line: 477, column: 42, scope: !4312)
!4377 = !DILocation(line: 477, column: 22, scope: !4312)
!4378 = !DILocation(line: 477, column: 60, scope: !4312)
!4379 = !DILocation(line: 0, scope: !4312)
!4380 = !DILocation(line: 479, column: 21, scope: !4312)
!4381 = !DILocation(line: 479, column: 3, scope: !4312)
!4382 = !DILocation(line: 480, column: 3, scope: !4312)
!4383 = !DILocation(line: 481, column: 2, scope: !4312)
!4384 = !DILocation(line: 483, column: 1, scope: !4291)
!4385 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2563, file: !2563, line: 245, type: !4386, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4388)
!4386 = !DISubroutineType(types: !4387)
!4387 = !{!356, !2576, !3833}
!4388 = !{!4389, !4390}
!4389 = !DILocalVariable(name: "h", arg: 1, scope: !4385, file: !2563, line: 245, type: !2576)
!4390 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4385, file: !2563, line: 245, type: !3833)
!4391 = !DILocation(line: 0, scope: !4385)
!4392 = !DILocation(line: 247, column: 20, scope: !4385)
!4393 = !DILocation(line: 247, column: 33, scope: !4385)
!4394 = !DILocation(line: 247, column: 2, scope: !4385)
!4395 = distinct !DISubprogram(name: "sys_heap_init", scope: !3707, file: !3707, line: 485, type: !4396, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4398)
!4396 = !DISubroutineType(types: !4397)
!4397 = !{null, !3710, !102, !356}
!4398 = !{!4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408}
!4399 = !DILocalVariable(name: "heap", arg: 1, scope: !4395, file: !3707, line: 485, type: !3710)
!4400 = !DILocalVariable(name: "mem", arg: 2, scope: !4395, file: !3707, line: 485, type: !102)
!4401 = !DILocalVariable(name: "bytes", arg: 3, scope: !4395, file: !3707, line: 485, type: !356)
!4402 = !DILocalVariable(name: "addr", scope: !4395, file: !3707, line: 502, type: !22)
!4403 = !DILocalVariable(name: "end", scope: !4395, file: !3707, line: 503, type: !22)
!4404 = !DILocalVariable(name: "heap_sz", scope: !4395, file: !3707, line: 504, type: !3833)
!4405 = !DILocalVariable(name: "h", scope: !4395, file: !3707, line: 509, type: !2576)
!4406 = !DILocalVariable(name: "nb_buckets", scope: !4395, file: !3707, line: 520, type: !103)
!4407 = !DILocalVariable(name: "chunk0_size", scope: !4395, file: !3707, line: 521, type: !3833)
!4408 = !DILocalVariable(name: "i", scope: !4409, file: !3707, line: 526, type: !103)
!4409 = distinct !DILexicalBlock(scope: !4395, file: !3707, line: 526, column: 2)
!4410 = !DILocation(line: 0, scope: !4395)
!4411 = !DILocation(line: 499, column: 8, scope: !4395)
!4412 = !DILocation(line: 502, column: 19, scope: !4395)
!4413 = !DILocation(line: 503, column: 18, scope: !4395)
!4414 = !DILocation(line: 504, column: 27, scope: !4395)
!4415 = !DILocation(line: 504, column: 35, scope: !4395)
!4416 = !DILocation(line: 509, column: 21, scope: !4395)
!4417 = !DILocation(line: 510, column: 8, scope: !4395)
!4418 = !DILocation(line: 510, column: 13, scope: !4395)
!4419 = !DILocation(line: 511, column: 5, scope: !4395)
!4420 = !DILocation(line: 511, column: 15, scope: !4395)
!4421 = !DILocation(line: 512, column: 5, scope: !4395)
!4422 = !DILocation(line: 512, column: 19, scope: !4395)
!4423 = !DILocation(line: 520, column: 19, scope: !4395)
!4424 = !DILocation(line: 522, column: 21, scope: !4395)
!4425 = !DILocation(line: 521, column: 56, scope: !4395)
!4426 = !DILocation(line: 521, column: 26, scope: !4395)
!4427 = !DILocation(line: 0, scope: !4409)
!4428 = !DILocation(line: 526, column: 20, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4409, file: !3707, line: 526, column: 2)
!4430 = !DILocation(line: 526, column: 2, scope: !4409)
!4431 = !DILocation(line: 531, column: 2, scope: !4395)
!4432 = !DILocation(line: 532, column: 2, scope: !4395)
!4433 = !DILocation(line: 533, column: 2, scope: !4395)
!4434 = !DILocation(line: 536, column: 41, scope: !4395)
!4435 = !DILocation(line: 536, column: 2, scope: !4395)
!4436 = !DILocation(line: 537, column: 2, scope: !4395)
!4437 = !DILocation(line: 540, column: 2, scope: !4395)
!4438 = !DILocation(line: 541, column: 2, scope: !4395)
!4439 = !DILocation(line: 542, column: 2, scope: !4395)
!4440 = !DILocation(line: 544, column: 2, scope: !4395)
!4441 = !DILocation(line: 545, column: 1, scope: !4395)
!4442 = !DILocation(line: 527, column: 17, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4429, file: !3707, line: 526, column: 39)
!4444 = !DILocation(line: 527, column: 22, scope: !4443)
!4445 = !DILocation(line: 526, column: 35, scope: !4429)
!4446 = distinct !{!4446, !4430, !4447}
!4447 = !DILocation(line: 528, column: 2, scope: !4409)
!4448 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2596, file: !2596, line: 1338, type: !4449, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !4457)
!4449 = !DISubroutineType(types: !4450)
!4450 = !{!103, !3437, !102, !155, !4451, !132}
!4451 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3403, line: 99, baseType: !4452)
!4452 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3403, line: 40, baseType: !4453)
!4453 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2596, baseType: !4454)
!4454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4455)
!4455 = !{!4456}
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4454, file: !2596, baseType: !102, size: 32)
!4457 = !{!4458, !4459, !4460, !4461, !4462, !4463, !4467, !4468, !4469, !4471, !4476, !4521, !4524, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4536, !4537, !4538, !4542, !4545, !4547, !4550, !4551, !4552, !4557, !4563, !4566, !4570, !4576, !4580, !4583, !4585, !4588}
!4458 = !DILocalVariable(name: "out", arg: 1, scope: !4448, file: !2596, line: 1338, type: !3437)
!4459 = !DILocalVariable(name: "ctx", arg: 2, scope: !4448, file: !2596, line: 1338, type: !102)
!4460 = !DILocalVariable(name: "fp", arg: 3, scope: !4448, file: !2596, line: 1338, type: !155)
!4461 = !DILocalVariable(name: "ap", arg: 4, scope: !4448, file: !2596, line: 1339, type: !4451)
!4462 = !DILocalVariable(name: "flags", arg: 5, scope: !4448, file: !2596, line: 1339, type: !132)
!4463 = !DILocalVariable(name: "buf", scope: !4448, file: !2596, line: 1341, type: !4464)
!4464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 176, elements: !4465)
!4465 = !{!4466}
!4466 = !DISubrange(count: 22)
!4467 = !DILocalVariable(name: "count", scope: !4448, file: !2596, line: 1342, type: !356)
!4468 = !DILocalVariable(name: "sint", scope: !4448, file: !2596, line: 1343, type: !2615)
!4469 = !DILocalVariable(name: "tagged_ap", scope: !4448, file: !2596, line: 1345, type: !4470)
!4470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !166)
!4471 = !DILocalVariable(name: "rc", scope: !4472, file: !2596, line: 1377, type: !103)
!4472 = distinct !DILexicalBlock(scope: !4473, file: !2596, line: 1377, column: 4)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !2596, line: 1376, column: 19)
!4474 = distinct !DILexicalBlock(scope: !4475, file: !2596, line: 1376, column: 7)
!4475 = distinct !DILexicalBlock(scope: !4448, file: !2596, line: 1375, column: 19)
!4476 = !DILocalVariable(name: "state", scope: !4475, file: !2596, line: 1395, type: !4477)
!4477 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4448, file: !2596, line: 1392, size: 192, elements: !4478)
!4478 = !{!4479, !4489}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4477, file: !2596, line: 1393, baseType: !4480, size: 64)
!4480 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2596, line: 166, size: 64, elements: !4481)
!4481 = !{!4482, !4483, !4484, !4486, !4488}
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4480, file: !2596, line: 168, baseType: !2615, size: 64)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4480, file: !2596, line: 171, baseType: !2618, size: 64)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4480, file: !2596, line: 174, baseType: !4485, size: 64)
!4485 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4480, file: !2596, line: 177, baseType: !4487, size: 64)
!4487 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4480, file: !2596, line: 180, baseType: !102, size: 32)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4477, file: !2596, line: 1394, baseType: !4490, size: 96, offset: 64)
!4490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2596, line: 189, size: 96, elements: !4491)
!4491 = !{!4492, !4493, !4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4516}
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4490, file: !2596, line: 191, baseType: !166, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4490, file: !2596, line: 194, baseType: !166, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4490, file: !2596, line: 197, baseType: !166, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4490, file: !2596, line: 200, baseType: !166, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4490, file: !2596, line: 203, baseType: !166, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4490, file: !2596, line: 206, baseType: !166, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4490, file: !2596, line: 209, baseType: !166, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4490, file: !2596, line: 212, baseType: !166, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4490, file: !2596, line: 219, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4490, file: !2596, line: 222, baseType: !166, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4490, file: !2596, line: 229, baseType: !166, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4490, file: !2596, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4490, file: !2596, line: 238, baseType: !166, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4490, file: !2596, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4490, file: !2596, line: 244, baseType: !166, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4490, file: !2596, line: 247, baseType: !166, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4490, file: !2596, line: 252, baseType: !166, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4490, file: !2596, line: 257, baseType: !166, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4490, file: !2596, line: 260, baseType: !164, size: 8, offset: 24)
!4511 = !DIDerivedType(tag: DW_TAG_member, scope: !4490, file: !2596, line: 262, baseType: !4512, size: 32, offset: 32)
!4512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4490, file: !2596, line: 262, size: 32, elements: !4513)
!4513 = !{!4514, !4515}
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4512, file: !2596, line: 267, baseType: !103, size: 32)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4512, file: !2596, line: 289, baseType: !103, size: 32)
!4516 = !DIDerivedType(tag: DW_TAG_member, scope: !4490, file: !2596, line: 292, baseType: !4517, size: 32, offset: 64)
!4517 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4490, file: !2596, line: 292, size: 32, elements: !4518)
!4518 = !{!4519, !4520}
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4517, file: !2596, line: 297, baseType: !103, size: 32)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4517, file: !2596, line: 306, baseType: !103, size: 32)
!4521 = !DILocalVariable(name: "conv", scope: !4475, file: !2596, line: 1400, type: !4522)
!4522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4523)
!4523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4490, size: 32)
!4524 = !DILocalVariable(name: "value", scope: !4475, file: !2596, line: 1401, type: !4525)
!4525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4526)
!4526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4480, size: 32)
!4527 = !DILocalVariable(name: "sp", scope: !4475, file: !2596, line: 1402, type: !155)
!4528 = !DILocalVariable(name: "width", scope: !4475, file: !2596, line: 1403, type: !103)
!4529 = !DILocalVariable(name: "precision", scope: !4475, file: !2596, line: 1404, type: !103)
!4530 = !DILocalVariable(name: "bps", scope: !4475, file: !2596, line: 1405, type: !155)
!4531 = !DILocalVariable(name: "bpe", scope: !4475, file: !2596, line: 1406, type: !155)
!4532 = !DILocalVariable(name: "sign", scope: !4475, file: !2596, line: 1407, type: !108)
!4533 = !DILocalVariable(name: "arg", scope: !4534, file: !2596, line: 1432, type: !103)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !2596, line: 1431, column: 24)
!4535 = distinct !DILexicalBlock(scope: !4475, file: !2596, line: 1431, column: 7)
!4536 = !DILocalVariable(name: "specifier_cat", scope: !4475, file: !2596, line: 1468, type: !2595)
!4537 = !DILocalVariable(name: "length_mod", scope: !4475, file: !2596, line: 1470, type: !2603)
!4538 = !DILocalVariable(name: "rc", scope: !4539, file: !2596, line: 1575, type: !103)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !2596, line: 1575, column: 4)
!4540 = distinct !DILexicalBlock(scope: !4541, file: !2596, line: 1574, column: 43)
!4541 = distinct !DILexicalBlock(scope: !4475, file: !2596, line: 1574, column: 7)
!4542 = !DILocalVariable(name: "rc", scope: !4543, file: !2596, line: 1584, type: !103)
!4543 = distinct !DILexicalBlock(scope: !4544, file: !2596, line: 1584, column: 4)
!4544 = distinct !DILexicalBlock(scope: !4475, file: !2596, line: 1582, column: 28)
!4545 = !DILocalVariable(name: "len", scope: !4546, file: !2596, line: 1589, type: !356)
!4546 = distinct !DILexicalBlock(scope: !4544, file: !2596, line: 1586, column: 13)
!4547 = !DILocalVariable(name: "len", scope: !4548, file: !2596, line: 1641, type: !356)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !2596, line: 1640, column: 24)
!4549 = distinct !DILexicalBlock(scope: !4544, file: !2596, line: 1640, column: 8)
!4550 = !DILocalVariable(name: "nj_len", scope: !4475, file: !2596, line: 1722, type: !356)
!4551 = !DILocalVariable(name: "pad_len", scope: !4475, file: !2596, line: 1723, type: !103)
!4552 = !DILocalVariable(name: "pad", scope: !4553, file: !2596, line: 1751, type: !108)
!4553 = distinct !DILexicalBlock(scope: !4554, file: !2596, line: 1750, column: 26)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !2596, line: 1750, column: 8)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !2596, line: 1747, column: 18)
!4556 = distinct !DILexicalBlock(scope: !4475, file: !2596, line: 1747, column: 7)
!4557 = !DILocalVariable(name: "rc", scope: !4558, file: !2596, line: 1758, type: !103)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !2596, line: 1758, column: 7)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !2596, line: 1757, column: 21)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !2596, line: 1757, column: 10)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !2596, line: 1756, column: 26)
!4562 = distinct !DILexicalBlock(scope: !4553, file: !2596, line: 1756, column: 9)
!4563 = !DILocalVariable(name: "rc", scope: !4564, file: !2596, line: 1765, type: !103)
!4564 = distinct !DILexicalBlock(scope: !4565, file: !2596, line: 1765, column: 6)
!4565 = distinct !DILexicalBlock(scope: !4553, file: !2596, line: 1764, column: 25)
!4566 = !DILocalVariable(name: "rc", scope: !4567, file: !2596, line: 1774, type: !103)
!4567 = distinct !DILexicalBlock(scope: !4568, file: !2596, line: 1774, column: 4)
!4568 = distinct !DILexicalBlock(scope: !4569, file: !2596, line: 1773, column: 18)
!4569 = distinct !DILexicalBlock(scope: !4475, file: !2596, line: 1773, column: 7)
!4570 = !DILocalVariable(name: "rc", scope: !4571, file: !2596, line: 1819, type: !103)
!4571 = distinct !DILexicalBlock(scope: !4572, file: !2596, line: 1819, column: 5)
!4572 = distinct !DILexicalBlock(scope: !4573, file: !2596, line: 1818, column: 44)
!4573 = distinct !DILexicalBlock(scope: !4574, file: !2596, line: 1818, column: 8)
!4574 = distinct !DILexicalBlock(scope: !4575, file: !2596, line: 1817, column: 10)
!4575 = distinct !DILexicalBlock(scope: !4475, file: !2596, line: 1777, column: 7)
!4576 = !DILocalVariable(name: "rc", scope: !4577, file: !2596, line: 1823, type: !103)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !2596, line: 1823, column: 5)
!4578 = distinct !DILexicalBlock(scope: !4579, file: !2596, line: 1822, column: 26)
!4579 = distinct !DILexicalBlock(scope: !4574, file: !2596, line: 1822, column: 8)
!4580 = !DILocalVariable(name: "rc", scope: !4581, file: !2596, line: 1828, type: !103)
!4581 = distinct !DILexicalBlock(scope: !4582, file: !2596, line: 1828, column: 5)
!4582 = distinct !DILexicalBlock(scope: !4574, file: !2596, line: 1827, column: 26)
!4583 = !DILocalVariable(name: "rc", scope: !4584, file: !2596, line: 1831, type: !103)
!4584 = distinct !DILexicalBlock(scope: !4574, file: !2596, line: 1831, column: 4)
!4585 = !DILocalVariable(name: "rc", scope: !4586, file: !2596, line: 1836, type: !103)
!4586 = distinct !DILexicalBlock(scope: !4587, file: !2596, line: 1836, column: 4)
!4587 = distinct !DILexicalBlock(scope: !4475, file: !2596, line: 1835, column: 21)
!4588 = !DILabel(scope: !4544, name: "prec_int_pad0", file: !2596, line: 1634)
!4589 = !DILocation(line: 0, scope: !4448)
!4590 = !DILocation(line: 1341, column: 2, scope: !4448)
!4591 = !DILocation(line: 1341, column: 7, scope: !4448)
!4592 = !DILocation(line: 1375, column: 2, scope: !4448)
!4593 = !DILocation(line: 1342, column: 9, scope: !4448)
!4594 = !DILocation(line: 1375, column: 9, scope: !4448)
!4595 = !DILocation(line: 1377, column: 4, scope: !4472)
!4596 = !DILocation(line: 0, scope: !4472)
!4597 = !DILocation(line: 1377, column: 4, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4472, file: !2596, line: 1377, column: 4)
!4599 = distinct !{!4599, !4592, !4600}
!4600 = !DILocation(line: 1839, column: 2, scope: !4448)
!4601 = !DILocation(line: 1392, column: 3, scope: !4475)
!4602 = !DILocation(line: 1395, column: 5, scope: !4475)
!4603 = !DILocation(line: 0, scope: !4475)
!4604 = !DILocation(line: 1409, column: 8, scope: !4475)
!4605 = !DILocation(line: 1414, column: 13, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4475, file: !2596, line: 1414, column: 7)
!4607 = !DILocation(line: 1414, column: 7, scope: !4475)
!4608 = !DILocation(line: 1415, column: 12, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4606, file: !2596, line: 1414, column: 25)
!4610 = !DILocation(line: 1417, column: 14, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4609, file: !2596, line: 1417, column: 8)
!4612 = !DILocation(line: 1417, column: 8, scope: !4609)
!4613 = !DILocation(line: 1418, column: 21, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4611, file: !2596, line: 1417, column: 19)
!4615 = !DILocation(line: 1419, column: 13, scope: !4614)
!4616 = !DILocation(line: 1420, column: 4, scope: !4614)
!4617 = !DILocation(line: 1421, column: 20, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4606, file: !2596, line: 1421, column: 14)
!4619 = !DILocation(line: 1421, column: 14, scope: !4606)
!4620 = !DILocation(line: 1431, column: 13, scope: !4535)
!4621 = !DILocation(line: 1431, column: 7, scope: !4475)
!4622 = !DILocation(line: 1432, column: 14, scope: !4534)
!4623 = !DILocation(line: 0, scope: !4534)
!4624 = !DILocation(line: 1434, column: 12, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4534, file: !2596, line: 1434, column: 8)
!4626 = !DILocation(line: 1434, column: 8, scope: !4534)
!4627 = !DILocation(line: 1435, column: 24, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4625, file: !2596, line: 1434, column: 17)
!4629 = !DILocation(line: 1436, column: 4, scope: !4628)
!4630 = !DILocation(line: 1439, column: 20, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4535, file: !2596, line: 1439, column: 14)
!4632 = !DILocation(line: 1439, column: 14, scope: !4535)
!4633 = !DILocation(line: 1469, column: 37, scope: !4475)
!4634 = !DILocation(line: 1448, column: 20, scope: !4475)
!4635 = !DILocation(line: 1449, column: 22, scope: !4475)
!4636 = !DILocation(line: 1471, column: 34, scope: !4475)
!4637 = !DILocation(line: 1478, column: 7, scope: !4475)
!4638 = !DILocation(line: 1479, column: 4, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !2596, line: 1478, column: 40)
!4640 = distinct !DILexicalBlock(scope: !4475, file: !2596, line: 1478, column: 7)
!4641 = !DILocation(line: 1484, column: 19, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4639, file: !2596, line: 1479, column: 24)
!4643 = !DILocation(line: 1484, column: 17, scope: !4642)
!4644 = !DILocation(line: 1485, column: 5, scope: !4642)
!4645 = !DILocation(line: 1492, column: 20, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !2596, line: 1491, column: 12)
!4647 = distinct !DILexicalBlock(scope: !4642, file: !2596, line: 1487, column: 9)
!4648 = !DILocation(line: 1492, column: 18, scope: !4646)
!4649 = !DILocation(line: 1494, column: 5, scope: !4642)
!4650 = !DILocation(line: 1497, column: 23, scope: !4642)
!4651 = !DILocation(line: 1496, column: 17, scope: !4642)
!4652 = !DILocation(line: 1498, column: 5, scope: !4642)
!4653 = !DILocation(line: 1501, column: 23, scope: !4642)
!4654 = !DILocation(line: 1500, column: 17, scope: !4642)
!4655 = !DILocation(line: 1502, column: 5, scope: !4642)
!4656 = !DILocation(line: 1513, column: 23, scope: !4642)
!4657 = !DILocation(line: 1513, column: 6, scope: !4642)
!4658 = !DILocation(line: 1512, column: 17, scope: !4642)
!4659 = !DILocation(line: 1514, column: 5, scope: !4642)
!4660 = !DILocation(line: 0, scope: !4642)
!4661 = !DILocation(line: 1516, column: 8, scope: !4639)
!4662 = !DILocation(line: 1517, column: 19, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !2596, line: 1516, column: 33)
!4664 = distinct !DILexicalBlock(scope: !4639, file: !2596, line: 1516, column: 8)
!4665 = !DILocation(line: 1517, column: 17, scope: !4663)
!4666 = !DILocation(line: 1518, column: 4, scope: !4663)
!4667 = !DILocation(line: 1519, column: 19, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4669, file: !2596, line: 1518, column: 39)
!4669 = distinct !DILexicalBlock(scope: !4664, file: !2596, line: 1518, column: 15)
!4670 = !DILocation(line: 1519, column: 17, scope: !4668)
!4671 = !DILocation(line: 1520, column: 4, scope: !4668)
!4672 = !DILocation(line: 1522, column: 4, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4674, file: !2596, line: 1521, column: 47)
!4674 = distinct !DILexicalBlock(scope: !4640, file: !2596, line: 1521, column: 14)
!4675 = !DILocation(line: 1527, column: 19, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4673, file: !2596, line: 1522, column: 24)
!4677 = !DILocation(line: 1527, column: 17, scope: !4676)
!4678 = !DILocation(line: 1528, column: 5, scope: !4676)
!4679 = !DILocation(line: 0, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4676, file: !2596, line: 1530, column: 9)
!4681 = !DILocation(line: 1540, column: 23, scope: !4676)
!4682 = !DILocation(line: 1539, column: 17, scope: !4676)
!4683 = !DILocation(line: 1542, column: 5, scope: !4676)
!4684 = !DILocation(line: 1545, column: 23, scope: !4676)
!4685 = !DILocation(line: 1544, column: 17, scope: !4676)
!4686 = !DILocation(line: 1547, column: 5, scope: !4676)
!4687 = !DILocation(line: 1551, column: 23, scope: !4676)
!4688 = !DILocation(line: 1551, column: 6, scope: !4676)
!4689 = !DILocation(line: 1550, column: 17, scope: !4676)
!4690 = !DILocation(line: 1552, column: 5, scope: !4676)
!4691 = !DILocation(line: 0, scope: !4676)
!4692 = !DILocation(line: 1554, column: 8, scope: !4673)
!4693 = !DILocation(line: 1555, column: 19, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4695, file: !2596, line: 1554, column: 33)
!4695 = distinct !DILexicalBlock(scope: !4673, file: !2596, line: 1554, column: 8)
!4696 = !DILocation(line: 1555, column: 17, scope: !4694)
!4697 = !DILocation(line: 1556, column: 4, scope: !4694)
!4698 = !DILocation(line: 1557, column: 19, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4700, file: !2596, line: 1556, column: 39)
!4700 = distinct !DILexicalBlock(scope: !4695, file: !2596, line: 1556, column: 15)
!4701 = !DILocation(line: 1557, column: 17, scope: !4699)
!4702 = !DILocation(line: 1558, column: 4, scope: !4699)
!4703 = !DILocation(line: 0, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !2596, line: 1560, column: 8)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !2596, line: 1559, column: 45)
!4706 = distinct !DILexicalBlock(scope: !4674, file: !2596, line: 1559, column: 14)
!4707 = !DILocation(line: 1566, column: 17, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !2596, line: 1565, column: 46)
!4709 = distinct !DILexicalBlock(scope: !4706, file: !2596, line: 1565, column: 14)
!4710 = !DILocation(line: 1566, column: 15, scope: !4708)
!4711 = !DILocation(line: 1567, column: 3, scope: !4708)
!4712 = !DILocation(line: 1574, column: 21, scope: !4541)
!4713 = !DILocation(line: 1575, column: 4, scope: !4539)
!4714 = !DILocation(line: 0, scope: !4539)
!4715 = !DILocation(line: 1575, column: 4, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4539, file: !2596, line: 1575, column: 4)
!4717 = !DILocation(line: 1582, column: 17, scope: !4475)
!4718 = !DILocation(line: 1582, column: 3, scope: !4475)
!4719 = !DILocation(line: 1584, column: 4, scope: !4543)
!4720 = !DILocation(line: 0, scope: !4543)
!4721 = !DILocation(line: 1584, column: 4, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4543, file: !2596, line: 1584, column: 4)
!4723 = !DILocation(line: 1587, column: 31, scope: !4546)
!4724 = !DILocation(line: 1591, column: 18, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4546, file: !2596, line: 1591, column: 8)
!4726 = !DILocation(line: 1591, column: 8, scope: !4546)
!4727 = !DILocation(line: 1592, column: 11, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4725, file: !2596, line: 1591, column: 24)
!4729 = !DILocation(line: 0, scope: !4546)
!4730 = !DILocation(line: 1593, column: 4, scope: !4728)
!4731 = !DILocation(line: 1594, column: 11, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4725, file: !2596, line: 1593, column: 11)
!4733 = !DILocation(line: 1604, column: 51, scope: !4544)
!4734 = !DILocation(line: 1604, column: 13, scope: !4544)
!4735 = !DILocation(line: 1604, column: 11, scope: !4544)
!4736 = !DILocation(line: 1606, column: 4, scope: !4544)
!4737 = !DILocation(line: 1609, column: 14, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4544, file: !2596, line: 1609, column: 8)
!4739 = !DILocation(line: 1609, column: 8, scope: !4544)
!4740 = !DILocation(line: 1619, column: 18, scope: !4544)
!4741 = !DILocation(line: 1620, column: 13, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4544, file: !2596, line: 1620, column: 8)
!4743 = !DILocation(line: 1620, column: 8, scope: !4544)
!4744 = !DILocation(line: 1622, column: 36, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4742, file: !2596, line: 1620, column: 18)
!4746 = !DILocation(line: 1622, column: 17, scope: !4745)
!4747 = !DILocation(line: 1623, column: 4, scope: !4745)
!4748 = !DILocation(line: 1632, column: 29, scope: !4544)
!4749 = !DILocation(line: 1632, column: 10, scope: !4544)
!4750 = !DILocation(line: 1632, column: 4, scope: !4544)
!4751 = !DILocation(line: 1407, column: 8, scope: !4475)
!4752 = !DILocation(line: 0, scope: !4544)
!4753 = !DILocation(line: 1634, column: 3, scope: !4544)
!4754 = !DILocation(line: 1640, column: 18, scope: !4549)
!4755 = !DILocation(line: 1640, column: 8, scope: !4544)
!4756 = !DILocation(line: 1729, column: 13, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4475, file: !2596, line: 1729, column: 7)
!4758 = !DILocation(line: 1641, column: 22, scope: !4548)
!4759 = !DILocation(line: 0, scope: !4548)
!4760 = !DILocation(line: 1646, column: 21, scope: !4548)
!4761 = !DILocation(line: 1649, column: 13, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4548, file: !2596, line: 1649, column: 9)
!4763 = !DILocation(line: 1649, column: 9, scope: !4548)
!4764 = !DILocation(line: 1650, column: 35, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4762, file: !2596, line: 1649, column: 34)
!4766 = !DILocation(line: 1650, column: 23, scope: !4765)
!4767 = !DILocation(line: 1651, column: 5, scope: !4765)
!4768 = !DILocation(line: 1660, column: 15, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4544, file: !2596, line: 1660, column: 8)
!4770 = !DILocation(line: 1660, column: 19, scope: !4769)
!4771 = !DILocation(line: 1660, column: 8, scope: !4544)
!4772 = !DILocation(line: 1661, column: 23, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4769, file: !2596, line: 1660, column: 28)
!4774 = !DILocation(line: 1661, column: 11, scope: !4773)
!4775 = !DILocation(line: 1665, column: 22, scope: !4773)
!4776 = !DILocation(line: 1666, column: 21, scope: !4773)
!4777 = !DILocation(line: 1668, column: 5, scope: !4773)
!4778 = !DILocation(line: 1677, column: 30, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4780, file: !2596, line: 1676, column: 49)
!4780 = distinct !DILexicalBlock(scope: !4544, file: !2596, line: 1676, column: 8)
!4781 = !DILocation(line: 1677, column: 5, scope: !4779)
!4782 = !DILocation(line: 1680, column: 4, scope: !4544)
!4783 = !DILocation(line: 0, scope: !4725)
!4784 = !DILocation(line: 1597, column: 14, scope: !4546)
!4785 = !DILocation(line: 1699, column: 11, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4475, file: !2596, line: 1699, column: 7)
!4787 = !DILocation(line: 1699, column: 7, scope: !4475)
!4788 = !DILocation(line: 1725, column: 7, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4475, file: !2596, line: 1725, column: 7)
!4790 = !DILocation(line: 1725, column: 12, scope: !4789)
!4791 = !DILocation(line: 1747, column: 13, scope: !4556)
!4792 = !DILocation(line: 1747, column: 7, scope: !4475)
!4793 = !DILocation(line: 1722, column: 24, scope: !4475)
!4794 = !DILocation(line: 1725, column: 7, scope: !4475)
!4795 = !DILocation(line: 1729, column: 7, scope: !4475)
!4796 = !DILocation(line: 1736, column: 13, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4475, file: !2596, line: 1736, column: 7)
!4798 = !DILocation(line: 1735, column: 19, scope: !4475)
!4799 = !DILocation(line: 1736, column: 7, scope: !4475)
!4800 = !DILocation(line: 1748, column: 10, scope: !4555)
!4801 = !DILocation(line: 1750, column: 15, scope: !4554)
!4802 = !DILocation(line: 1750, column: 8, scope: !4555)
!4803 = !DILocation(line: 0, scope: !4553)
!4804 = !DILocation(line: 1756, column: 15, scope: !4562)
!4805 = !DILocation(line: 1756, column: 9, scope: !4553)
!4806 = !DILocation(line: 1758, column: 7, scope: !4558)
!4807 = !DILocation(line: 0, scope: !4558)
!4808 = !DILocation(line: 1758, column: 7, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4558, file: !2596, line: 1758, column: 7)
!4810 = !DILocation(line: 1764, column: 5, scope: !4553)
!4811 = !DILocation(line: 0, scope: !4555)
!4812 = !DILocation(line: 1764, column: 20, scope: !4553)
!4813 = !DILocation(line: 1764, column: 17, scope: !4553)
!4814 = !DILocation(line: 1765, column: 6, scope: !4564)
!4815 = !DILocation(line: 0, scope: !4564)
!4816 = !DILocation(line: 1765, column: 6, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4564, file: !2596, line: 1765, column: 6)
!4818 = distinct !{!4818, !4810, !4819}
!4819 = !DILocation(line: 1766, column: 5, scope: !4553)
!4820 = !DILocation(line: 1773, column: 12, scope: !4569)
!4821 = !DILocation(line: 1773, column: 7, scope: !4475)
!4822 = !DILocation(line: 1773, column: 7, scope: !4569)
!4823 = !DILocation(line: 1774, column: 4, scope: !4567)
!4824 = !DILocation(line: 0, scope: !4567)
!4825 = !DILocation(line: 1774, column: 4, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4567, file: !2596, line: 1774, column: 4)
!4827 = !DILocation(line: 1818, column: 8, scope: !4573)
!4828 = !DILocation(line: 1818, column: 27, scope: !4573)
!4829 = !DILocation(line: 1818, column: 25, scope: !4573)
!4830 = !DILocation(line: 1818, column: 8, scope: !4574)
!4831 = !DILocation(line: 1819, column: 5, scope: !4571)
!4832 = !DILocation(line: 0, scope: !4571)
!4833 = !DILocation(line: 1819, column: 5, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4571, file: !2596, line: 1819, column: 5)
!4835 = !DILocation(line: 1822, column: 14, scope: !4579)
!4836 = !DILocation(line: 1822, column: 8, scope: !4574)
!4837 = !DILocation(line: 1823, column: 5, scope: !4577)
!4838 = !DILocation(line: 0, scope: !4577)
!4839 = !DILocation(line: 1823, column: 5, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4577, file: !2596, line: 1823, column: 5)
!4841 = !DILocation(line: 1826, column: 20, scope: !4574)
!4842 = !DILocation(line: 1827, column: 4, scope: !4574)
!4843 = !DILocation(line: 0, scope: !4574)
!4844 = !DILocation(line: 1827, column: 21, scope: !4574)
!4845 = !DILocation(line: 1827, column: 18, scope: !4574)
!4846 = !DILocation(line: 1828, column: 5, scope: !4581)
!4847 = !DILocation(line: 0, scope: !4581)
!4848 = !DILocation(line: 1828, column: 5, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4581, file: !2596, line: 1828, column: 5)
!4850 = distinct !{!4850, !4842, !4851}
!4851 = !DILocation(line: 1829, column: 4, scope: !4574)
!4852 = !DILocation(line: 1831, column: 4, scope: !4584)
!4853 = !DILocation(line: 0, scope: !4584)
!4854 = !DILocation(line: 1831, column: 4, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4584, file: !2596, line: 1831, column: 4)
!4856 = !DILocation(line: 1835, column: 16, scope: !4475)
!4857 = !DILocation(line: 1835, column: 3, scope: !4475)
!4858 = !DILocation(line: 1836, column: 4, scope: !4586)
!4859 = !DILocation(line: 0, scope: !4586)
!4860 = !DILocation(line: 1836, column: 4, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4586, file: !2596, line: 1836, column: 4)
!4862 = !DILocation(line: 1837, column: 4, scope: !4587)
!4863 = distinct !{!4863, !4857, !4864}
!4864 = !DILocation(line: 1838, column: 3, scope: !4475)
!4865 = !DILocation(line: 1844, column: 1, scope: !4448)
!4866 = distinct !DISubprogram(name: "extract_conversion", scope: !2596, file: !2596, line: 642, type: !4867, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !4869)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{!155, !4523, !155}
!4869 = !{!4870, !4871}
!4870 = !DILocalVariable(name: "conv", arg: 1, scope: !4866, file: !2596, line: 642, type: !4523)
!4871 = !DILocalVariable(name: "sp", arg: 2, scope: !4866, file: !2596, line: 643, type: !155)
!4872 = !DILocation(line: 0, scope: !4866)
!4873 = !DILocation(line: 645, column: 10, scope: !4866)
!4874 = !DILocation(line: 653, column: 2, scope: !4866)
!4875 = !DILocation(line: 654, column: 6, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4866, file: !2596, line: 654, column: 6)
!4877 = !DILocation(line: 654, column: 10, scope: !4876)
!4878 = !DILocation(line: 654, column: 6, scope: !4866)
!4879 = !DILocation(line: 655, column: 24, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4876, file: !2596, line: 654, column: 18)
!4881 = !DILocation(line: 655, column: 19, scope: !4880)
!4882 = !DILocation(line: 656, column: 3, scope: !4880)
!4883 = !DILocation(line: 659, column: 7, scope: !4866)
!4884 = !DILocation(line: 660, column: 7, scope: !4866)
!4885 = !DILocation(line: 661, column: 7, scope: !4866)
!4886 = !DILocation(line: 662, column: 7, scope: !4866)
!4887 = !DILocation(line: 663, column: 7, scope: !4866)
!4888 = !DILocation(line: 665, column: 2, scope: !4866)
!4889 = !DILocation(line: 666, column: 1, scope: !4866)
!4890 = distinct !DISubprogram(name: "outs", scope: !2596, file: !2596, line: 1319, type: !4891, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !4893)
!4891 = !DISubroutineType(types: !4892)
!4892 = !{!103, !3437, !102, !155, !155}
!4893 = !{!4894, !4895, !4896, !4897, !4898, !4899}
!4894 = !DILocalVariable(name: "out", arg: 1, scope: !4890, file: !2596, line: 1319, type: !3437)
!4895 = !DILocalVariable(name: "ctx", arg: 2, scope: !4890, file: !2596, line: 1320, type: !102)
!4896 = !DILocalVariable(name: "sp", arg: 3, scope: !4890, file: !2596, line: 1321, type: !155)
!4897 = !DILocalVariable(name: "ep", arg: 4, scope: !4890, file: !2596, line: 1322, type: !155)
!4898 = !DILocalVariable(name: "count", scope: !4890, file: !2596, line: 1324, type: !356)
!4899 = !DILocalVariable(name: "rc", scope: !4900, file: !2596, line: 1327, type: !103)
!4900 = distinct !DILexicalBlock(scope: !4890, file: !2596, line: 1326, column: 45)
!4901 = !DILocation(line: 0, scope: !4890)
!4902 = !DILocation(line: 1326, column: 2, scope: !4890)
!4903 = !DILocation(line: 1324, column: 9, scope: !4890)
!4904 = !DILocation(line: 1326, column: 13, scope: !4890)
!4905 = !DILocation(line: 1326, column: 19, scope: !4890)
!4906 = !DILocation(line: 1327, column: 21, scope: !4900)
!4907 = !DILocation(line: 1326, column: 36, scope: !4890)
!4908 = !DILocation(line: 1326, column: 39, scope: !4890)
!4909 = !DILocation(line: 1327, column: 24, scope: !4900)
!4910 = !DILocation(line: 1327, column: 16, scope: !4900)
!4911 = !DILocation(line: 1327, column: 12, scope: !4900)
!4912 = !DILocation(line: 0, scope: !4900)
!4913 = !DILocation(line: 1329, column: 10, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4900, file: !2596, line: 1329, column: 7)
!4915 = !DILocation(line: 1329, column: 7, scope: !4900)
!4916 = distinct !{!4916, !4902, !4917}
!4917 = !DILocation(line: 1333, column: 2, scope: !4890)
!4918 = !DILocation(line: 1336, column: 1, scope: !4890)
!4919 = distinct !DISubprogram(name: "encode_uint", scope: !2596, file: !2596, line: 788, type: !4920, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !4922)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!1081, !2618, !4523, !1081, !155}
!4922 = !{!4923, !4924, !4925, !4926, !4927, !4928, !4930, !4931}
!4923 = !DILocalVariable(name: "value", arg: 1, scope: !4919, file: !2596, line: 788, type: !2618)
!4924 = !DILocalVariable(name: "conv", arg: 2, scope: !4919, file: !2596, line: 789, type: !4523)
!4925 = !DILocalVariable(name: "bps", arg: 3, scope: !4919, file: !2596, line: 790, type: !1081)
!4926 = !DILocalVariable(name: "bpe", arg: 4, scope: !4919, file: !2596, line: 791, type: !155)
!4927 = !DILocalVariable(name: "upcase", scope: !4919, file: !2596, line: 793, type: !166)
!4928 = !DILocalVariable(name: "radix", scope: !4919, file: !2596, line: 794, type: !4929)
!4929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4930 = !DILocalVariable(name: "bp", scope: !4919, file: !2596, line: 795, type: !1081)
!4931 = !DILocalVariable(name: "lsv", scope: !4932, file: !2596, line: 798, type: !32)
!4932 = distinct !DILexicalBlock(scope: !4919, file: !2596, line: 797, column: 5)
!4933 = !DILocation(line: 0, scope: !4919)
!4934 = !DILocation(line: 793, column: 35, scope: !4919)
!4935 = !DILocation(line: 793, column: 24, scope: !4919)
!4936 = !DILocation(line: 793, column: 16, scope: !4919)
!4937 = !DILocation(line: 794, column: 29, scope: !4919)
!4938 = !DILocation(line: 795, column: 24, scope: !4919)
!4939 = !DILocation(line: 795, column: 17, scope: !4919)
!4940 = !DILocation(line: 797, column: 2, scope: !4919)
!4941 = !DILocation(line: 802, column: 9, scope: !4932)
!4942 = !DILocation(line: 798, column: 22, scope: !4932)
!4943 = !DILocation(line: 0, scope: !4932)
!4944 = !DILocation(line: 800, column: 16, scope: !4932)
!4945 = !DILocation(line: 800, column: 11, scope: !4932)
!4946 = !DILocation(line: 800, column: 4, scope: !4932)
!4947 = !DILocation(line: 800, column: 9, scope: !4932)
!4948 = !DILocation(line: 803, column: 18, scope: !4919)
!4949 = !DILocation(line: 803, column: 24, scope: !4919)
!4950 = !DILocation(line: 803, column: 2, scope: !4932)
!4951 = distinct !{!4951, !4940, !4952}
!4952 = !DILocation(line: 803, column: 37, scope: !4919)
!4953 = !DILocation(line: 808, column: 12, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4919, file: !2596, line: 808, column: 6)
!4955 = !DILocation(line: 808, column: 6, scope: !4919)
!4956 = !DILocation(line: 809, column: 7, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4954, file: !2596, line: 808, column: 23)
!4958 = !DILocation(line: 813, column: 3, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4960, file: !2596, line: 811, column: 27)
!4960 = distinct !DILexicalBlock(scope: !4961, file: !2596, line: 811, column: 14)
!4961 = distinct !DILexicalBlock(scope: !4957, file: !2596, line: 809, column: 7)
!4962 = !DILocation(line: 0, scope: !4961)
!4963 = !DILocation(line: 818, column: 2, scope: !4919)
!4964 = distinct !DISubprogram(name: "store_count", scope: !2596, file: !2596, line: 1280, type: !4965, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !4969)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{null, !4967, !102, !103}
!4967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4968, size: 32)
!4968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4490)
!4969 = !{!4970, !4971, !4972}
!4970 = !DILocalVariable(name: "conv", arg: 1, scope: !4964, file: !2596, line: 1280, type: !4967)
!4971 = !DILocalVariable(name: "dp", arg: 2, scope: !4964, file: !2596, line: 1281, type: !102)
!4972 = !DILocalVariable(name: "count", arg: 3, scope: !4964, file: !2596, line: 1282, type: !103)
!4973 = !DILocation(line: 0, scope: !4964)
!4974 = !DILocation(line: 1284, column: 38, scope: !4964)
!4975 = !DILocation(line: 1284, column: 2, scope: !4964)
!4976 = !DILocation(line: 1286, column: 4, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4964, file: !2596, line: 1284, column: 50)
!4978 = !DILocation(line: 1286, column: 14, scope: !4977)
!4979 = !DILocation(line: 1287, column: 3, scope: !4977)
!4980 = !DILocation(line: 1289, column: 24, scope: !4977)
!4981 = !DILocation(line: 1289, column: 22, scope: !4977)
!4982 = !DILocation(line: 1290, column: 3, scope: !4977)
!4983 = !DILocation(line: 1292, column: 18, scope: !4977)
!4984 = !DILocation(line: 1292, column: 4, scope: !4977)
!4985 = !DILocation(line: 1292, column: 16, scope: !4977)
!4986 = !DILocation(line: 1293, column: 3, scope: !4977)
!4987 = !DILocation(line: 1295, column: 4, scope: !4977)
!4988 = !DILocation(line: 1295, column: 15, scope: !4977)
!4989 = !DILocation(line: 1296, column: 3, scope: !4977)
!4990 = !DILocation(line: 1298, column: 22, scope: !4977)
!4991 = !DILocation(line: 1298, column: 4, scope: !4977)
!4992 = !DILocation(line: 1298, column: 20, scope: !4977)
!4993 = !DILocation(line: 1299, column: 3, scope: !4977)
!4994 = !DILocation(line: 1301, column: 21, scope: !4977)
!4995 = !DILocation(line: 1301, column: 4, scope: !4977)
!4996 = !DILocation(line: 1301, column: 19, scope: !4977)
!4997 = !DILocation(line: 1302, column: 3, scope: !4977)
!4998 = !DILocation(line: 1304, column: 4, scope: !4977)
!4999 = !DILocation(line: 1304, column: 17, scope: !4977)
!5000 = !DILocation(line: 1305, column: 3, scope: !4977)
!5001 = !DILocation(line: 1307, column: 4, scope: !4977)
!5002 = !DILocation(line: 1307, column: 20, scope: !4977)
!5003 = !DILocation(line: 1308, column: 3, scope: !4977)
!5004 = !DILocation(line: 1316, column: 1, scope: !4964)
!5005 = distinct !DISubprogram(name: "isupper", scope: !5006, file: !5006, line: 16, type: !118, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !5007)
!5006 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5007 = !{!5008}
!5008 = !DILocalVariable(name: "a", arg: 1, scope: !5005, file: !5006, line: 16, type: !103)
!5009 = !DILocation(line: 0, scope: !5005)
!5010 = !DILocation(line: 18, column: 29, scope: !5005)
!5011 = !DILocation(line: 18, column: 45, scope: !5005)
!5012 = !DILocation(line: 18, column: 2, scope: !5005)
!5013 = distinct !DISubprogram(name: "conversion_radix", scope: !2596, file: !2596, line: 761, type: !5014, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !5016)
!5014 = !DISubroutineType(types: !5015)
!5015 = !{!356, !108}
!5016 = !{!5017}
!5017 = !DILocalVariable(name: "specifier", arg: 1, scope: !5013, file: !2596, line: 761, type: !108)
!5018 = !DILocation(line: 0, scope: !5013)
!5019 = !DILocation(line: 763, column: 2, scope: !5013)
!5020 = !DILocation(line: 770, column: 3, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5013, file: !2596, line: 763, column: 21)
!5022 = !DILocation(line: 774, column: 3, scope: !5021)
!5023 = !DILocation(line: 0, scope: !5021)
!5024 = !DILocation(line: 776, column: 1, scope: !5013)
!5025 = distinct !DISubprogram(name: "extract_flags", scope: !2596, file: !2596, line: 339, type: !4867, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !5026)
!5026 = !{!5027, !5028, !5029}
!5027 = !DILocalVariable(name: "conv", arg: 1, scope: !5025, file: !2596, line: 339, type: !4523)
!5028 = !DILocalVariable(name: "sp", arg: 2, scope: !5025, file: !2596, line: 340, type: !155)
!5029 = !DILocalVariable(name: "loop", scope: !5025, file: !2596, line: 342, type: !166)
!5030 = !DILocation(line: 0, scope: !5025)
!5031 = !DILocation(line: 344, column: 2, scope: !5025)
!5032 = !DILocation(line: 345, column: 11, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5025, file: !2596, line: 344, column: 5)
!5034 = !DILocation(line: 345, column: 3, scope: !5033)
!5035 = !DILocation(line: 351, column: 4, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5033, file: !2596, line: 345, column: 16)
!5037 = !DILocation(line: 354, column: 4, scope: !5036)
!5038 = !DILocation(line: 357, column: 4, scope: !5036)
!5039 = !DILocation(line: 360, column: 4, scope: !5036)
!5040 = !DILocation(line: 0, scope: !5036)
!5041 = !DILocation(line: 370, column: 12, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5025, file: !2596, line: 370, column: 6)
!5043 = !DILocation(line: 370, column: 22, scope: !5042)
!5044 = !DILocation(line: 371, column: 19, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5042, file: !2596, line: 370, column: 42)
!5046 = !DILocation(line: 372, column: 2, scope: !5045)
!5047 = !DILocation(line: 376, column: 2, scope: !5025)
!5048 = distinct !DISubprogram(name: "extract_width", scope: !2596, file: !2596, line: 388, type: !4867, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !5049)
!5049 = !{!5050, !5051, !5052, !5053}
!5050 = !DILocalVariable(name: "conv", arg: 1, scope: !5048, file: !2596, line: 388, type: !4523)
!5051 = !DILocalVariable(name: "sp", arg: 2, scope: !5048, file: !2596, line: 389, type: !155)
!5052 = !DILocalVariable(name: "wp", scope: !5048, file: !2596, line: 398, type: !155)
!5053 = !DILocalVariable(name: "width", scope: !5048, file: !2596, line: 399, type: !356)
!5054 = !DILocation(line: 0, scope: !5048)
!5055 = !DILocation(line: 391, column: 8, scope: !5048)
!5056 = !DILocation(line: 391, column: 22, scope: !5048)
!5057 = !DILocation(line: 393, column: 6, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5048, file: !2596, line: 393, column: 6)
!5059 = !DILocation(line: 393, column: 10, scope: !5058)
!5060 = !DILocation(line: 393, column: 6, scope: !5048)
!5061 = !DILocation(line: 394, column: 20, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5058, file: !2596, line: 393, column: 18)
!5063 = !DILocation(line: 395, column: 10, scope: !5062)
!5064 = !DILocation(line: 395, column: 3, scope: !5062)
!5065 = !DILocation(line: 399, column: 17, scope: !5048)
!5066 = !DILocation(line: 401, column: 6, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5048, file: !2596, line: 401, column: 6)
!5068 = !DILocation(line: 401, column: 9, scope: !5067)
!5069 = !DILocation(line: 401, column: 6, scope: !5048)
!5070 = !DILocation(line: 402, column: 23, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5067, file: !2596, line: 401, column: 16)
!5072 = !DILocation(line: 403, column: 9, scope: !5071)
!5073 = !DILocation(line: 403, column: 21, scope: !5071)
!5074 = !DILocation(line: 405, column: 11, scope: !5071)
!5075 = !DILocation(line: 404, column: 21, scope: !5071)
!5076 = !DILocation(line: 406, column: 2, scope: !5071)
!5077 = !DILocation(line: 409, column: 1, scope: !5048)
!5078 = distinct !DISubprogram(name: "extract_prec", scope: !2596, file: !2596, line: 420, type: !4867, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !5079)
!5079 = !{!5080, !5081, !5082}
!5080 = !DILocalVariable(name: "conv", arg: 1, scope: !5078, file: !2596, line: 420, type: !4523)
!5081 = !DILocalVariable(name: "sp", arg: 2, scope: !5078, file: !2596, line: 421, type: !155)
!5082 = !DILocalVariable(name: "prec", scope: !5078, file: !2596, line: 435, type: !356)
!5083 = !DILocation(line: 0, scope: !5078)
!5084 = !DILocation(line: 423, column: 24, scope: !5078)
!5085 = !DILocation(line: 423, column: 28, scope: !5078)
!5086 = !DILocation(line: 423, column: 8, scope: !5078)
!5087 = !DILocation(line: 423, column: 21, scope: !5078)
!5088 = !DILocation(line: 425, column: 6, scope: !5078)
!5089 = !DILocation(line: 428, column: 2, scope: !5078)
!5090 = !DILocation(line: 430, column: 6, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5078, file: !2596, line: 430, column: 6)
!5092 = !DILocation(line: 430, column: 10, scope: !5091)
!5093 = !DILocation(line: 430, column: 6, scope: !5078)
!5094 = !DILocation(line: 431, column: 19, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5091, file: !2596, line: 430, column: 18)
!5096 = !DILocation(line: 432, column: 10, scope: !5095)
!5097 = !DILocation(line: 432, column: 3, scope: !5095)
!5098 = !DILocation(line: 435, column: 16, scope: !5078)
!5099 = !DILocation(line: 437, column: 8, scope: !5078)
!5100 = !DILocation(line: 437, column: 19, scope: !5078)
!5101 = !DILocation(line: 439, column: 10, scope: !5078)
!5102 = !DILocation(line: 438, column: 20, scope: !5078)
!5103 = !DILocation(line: 441, column: 9, scope: !5078)
!5104 = !DILocation(line: 442, column: 1, scope: !5078)
!5105 = distinct !DISubprogram(name: "extract_length", scope: !2596, file: !2596, line: 453, type: !4867, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !5106)
!5106 = !{!5107, !5108}
!5107 = !DILocalVariable(name: "conv", arg: 1, scope: !5105, file: !2596, line: 453, type: !4523)
!5108 = !DILocalVariable(name: "sp", arg: 2, scope: !5105, file: !2596, line: 454, type: !155)
!5109 = !DILocation(line: 0, scope: !5105)
!5110 = !DILocation(line: 456, column: 10, scope: !5105)
!5111 = !DILocation(line: 456, column: 2, scope: !5105)
!5112 = !DILocation(line: 458, column: 8, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !2596, line: 458, column: 7)
!5114 = distinct !DILexicalBlock(scope: !5105, file: !2596, line: 456, column: 15)
!5115 = !DILocation(line: 458, column: 7, scope: !5113)
!5116 = !DILocation(line: 458, column: 13, scope: !5113)
!5117 = !DILocation(line: 0, scope: !5113)
!5118 = !DILocation(line: 458, column: 7, scope: !5114)
!5119 = !DILocation(line: 459, column: 21, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5113, file: !2596, line: 458, column: 21)
!5121 = !DILocation(line: 460, column: 4, scope: !5120)
!5122 = !DILocation(line: 461, column: 3, scope: !5120)
!5123 = !DILocation(line: 462, column: 21, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5113, file: !2596, line: 461, column: 10)
!5125 = !DILocation(line: 466, column: 8, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5114, file: !2596, line: 466, column: 7)
!5127 = !DILocation(line: 466, column: 7, scope: !5126)
!5128 = !DILocation(line: 466, column: 13, scope: !5126)
!5129 = !DILocation(line: 0, scope: !5126)
!5130 = !DILocation(line: 466, column: 7, scope: !5114)
!5131 = !DILocation(line: 467, column: 21, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5126, file: !2596, line: 466, column: 21)
!5133 = !DILocation(line: 468, column: 4, scope: !5132)
!5134 = !DILocation(line: 469, column: 3, scope: !5132)
!5135 = !DILocation(line: 470, column: 21, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5126, file: !2596, line: 469, column: 10)
!5137 = !DILocation(line: 474, column: 9, scope: !5114)
!5138 = !DILocation(line: 474, column: 20, scope: !5114)
!5139 = !DILocation(line: 475, column: 3, scope: !5114)
!5140 = !DILocation(line: 476, column: 3, scope: !5114)
!5141 = !DILocation(line: 478, column: 9, scope: !5114)
!5142 = !DILocation(line: 478, column: 20, scope: !5114)
!5143 = !DILocation(line: 479, column: 3, scope: !5114)
!5144 = !DILocation(line: 480, column: 3, scope: !5114)
!5145 = !DILocation(line: 482, column: 9, scope: !5114)
!5146 = !DILocation(line: 482, column: 20, scope: !5114)
!5147 = !DILocation(line: 483, column: 3, scope: !5114)
!5148 = !DILocation(line: 484, column: 3, scope: !5114)
!5149 = !DILocation(line: 486, column: 9, scope: !5114)
!5150 = !DILocation(line: 486, column: 20, scope: !5114)
!5151 = !DILocation(line: 487, column: 3, scope: !5114)
!5152 = !DILocation(line: 492, column: 21, scope: !5114)
!5153 = !DILocation(line: 493, column: 3, scope: !5114)
!5154 = !DILocation(line: 495, column: 9, scope: !5114)
!5155 = !DILocation(line: 495, column: 20, scope: !5114)
!5156 = !DILocation(line: 496, column: 3, scope: !5114)
!5157 = !DILocation(line: 498, column: 2, scope: !5105)
!5158 = distinct !DISubprogram(name: "extract_specifier", scope: !2596, file: !2596, line: 513, type: !4867, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !5159)
!5159 = !{!5160, !5161, !5162, !5163}
!5160 = !DILocalVariable(name: "conv", arg: 1, scope: !5158, file: !2596, line: 513, type: !4523)
!5161 = !DILocalVariable(name: "sp", arg: 2, scope: !5158, file: !2596, line: 514, type: !155)
!5162 = !DILocalVariable(name: "unsupported", scope: !5158, file: !2596, line: 516, type: !166)
!5163 = !DILabel(scope: !5164, name: "int_conv", file: !2596, line: 526)
!5164 = distinct !DILexicalBlock(scope: !5158, file: !2596, line: 520, column: 27)
!5165 = !DILocation(line: 0, scope: !5158)
!5166 = !DILocation(line: 518, column: 20, scope: !5158)
!5167 = !DILocation(line: 518, column: 8, scope: !5158)
!5168 = !DILocation(line: 518, column: 18, scope: !5158)
!5169 = !DILocation(line: 520, column: 2, scope: !5158)
!5170 = !DILocation(line: 525, column: 3, scope: !5164)
!5171 = !DILocation(line: 0, scope: !5164)
!5172 = !DILocation(line: 526, column: 1, scope: !5164)
!5173 = !DILocation(line: 528, column: 24, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5164, file: !2596, line: 528, column: 7)
!5175 = !DILocation(line: 528, column: 7, scope: !5164)
!5176 = !DILocation(line: 535, column: 23, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5164, file: !2596, line: 535, column: 7)
!5178 = !DILocation(line: 535, column: 7, scope: !5164)
!5179 = !DILocation(line: 536, column: 36, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5177, file: !2596, line: 535, column: 31)
!5181 = !DILocation(line: 537, column: 3, scope: !5180)
!5182 = !DILocation(line: 570, column: 9, scope: !5164)
!5183 = !DILocation(line: 570, column: 23, scope: !5164)
!5184 = !DILocation(line: 575, column: 4, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5186, file: !2596, line: 573, column: 48)
!5186 = distinct !DILexicalBlock(scope: !5164, file: !2596, line: 573, column: 7)
!5187 = !DILocation(line: 603, column: 9, scope: !5164)
!5188 = !DILocation(line: 603, column: 23, scope: !5164)
!5189 = !DILocation(line: 605, column: 24, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5164, file: !2596, line: 605, column: 7)
!5191 = !DILocation(line: 605, column: 7, scope: !5164)
!5192 = !DILocation(line: 612, column: 9, scope: !5164)
!5193 = !DILocation(line: 612, column: 23, scope: !5164)
!5194 = !DILocation(line: 619, column: 24, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5164, file: !2596, line: 619, column: 7)
!5196 = !DILocation(line: 619, column: 7, scope: !5164)
!5197 = !DILocation(line: 625, column: 9, scope: !5164)
!5198 = !DILocation(line: 625, column: 17, scope: !5164)
!5199 = !DILocation(line: 626, column: 3, scope: !5164)
!5200 = !DILocation(line: 629, column: 20, scope: !5158)
!5201 = !DILocation(line: 629, column: 8, scope: !5158)
!5202 = !DILocation(line: 518, column: 23, scope: !5158)
!5203 = !DILocation(line: 631, column: 2, scope: !5158)
!5204 = distinct !DISubprogram(name: "extract_decimal", scope: !2596, file: !2596, line: 318, type: !5205, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !5208)
!5205 = !DISubroutineType(types: !5206)
!5206 = !{!356, !5207}
!5207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!5208 = !{!5209, !5210, !5211}
!5209 = !DILocalVariable(name: "str", arg: 1, scope: !5204, file: !2596, line: 318, type: !5207)
!5210 = !DILocalVariable(name: "sp", scope: !5204, file: !2596, line: 320, type: !155)
!5211 = !DILocalVariable(name: "val", scope: !5204, file: !2596, line: 321, type: !356)
!5212 = !DILocation(line: 0, scope: !5204)
!5213 = !DILocation(line: 320, column: 19, scope: !5204)
!5214 = !DILocation(line: 323, column: 37, scope: !5204)
!5215 = !DILocation(line: 323, column: 17, scope: !5204)
!5216 = !DILocation(line: 323, column: 9, scope: !5204)
!5217 = !DILocation(line: 323, column: 2, scope: !5204)
!5218 = !DILocation(line: 324, column: 13, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5204, file: !2596, line: 323, column: 43)
!5220 = !DILocation(line: 324, column: 24, scope: !5219)
!5221 = !DILocation(line: 324, column: 19, scope: !5219)
!5222 = !DILocation(line: 324, column: 27, scope: !5219)
!5223 = distinct !{!5223, !5217, !5224}
!5224 = !DILocation(line: 325, column: 2, scope: !5204)
!5225 = !DILocation(line: 326, column: 7, scope: !5204)
!5226 = !DILocation(line: 327, column: 2, scope: !5204)
!5227 = distinct !DISubprogram(name: "isdigit", scope: !5006, file: !5006, line: 43, type: !118, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !5228)
!5228 = !{!5229}
!5229 = !DILocalVariable(name: "a", arg: 1, scope: !5227, file: !5006, line: 43, type: !103)
!5230 = !DILocation(line: 0, scope: !5227)
!5231 = !DILocation(line: 45, column: 29, scope: !5227)
!5232 = !DILocation(line: 45, column: 45, scope: !5227)
!5233 = !DILocation(line: 45, column: 2, scope: !5227)
!5234 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5235, file: !5235, line: 9, type: !3249, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !473)
!5235 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!5236 = !DILocation(line: 11, column: 1, scope: !5234)
!5237 = !{i64 2147562325, i64 2147562368, i64 2147562408}
!5238 = !DILocation(line: 12, column: 1, scope: !5234)
!5239 = !{i64 2147566552, i64 2147566595, i64 2147566635}
!5240 = !DILocation(line: 13, column: 1, scope: !5234)
!5241 = !{i64 2147566761, i64 2147566804, i64 2147566844}
!5242 = !DILocation(line: 14, column: 1, scope: !5234)
!5243 = !{i64 2147566978, i64 2147567021, i64 2147567061}
!5244 = !DILocation(line: 15, column: 1, scope: !5234)
!5245 = !{i64 2147567147, i64 2147567190, i64 2147567230}
!5246 = !DILocation(line: 16, column: 1, scope: !5234)
!5247 = !{i64 2147567310, i64 2147567353, i64 2147567393}
!5248 = !DILocation(line: 17, column: 1, scope: !5234)
!5249 = !{i64 2147567494, i64 2147567537, i64 2147567577}
!5250 = !DILocation(line: 18, column: 1, scope: !5234)
!5251 = !{i64 2147567673, i64 2147567716, i64 2147567756}
!5252 = !DILocation(line: 19, column: 1, scope: !5234)
!5253 = !{i64 2147567915, i64 2147567958, i64 2147567998}
!5254 = !DILocation(line: 20, column: 1, scope: !5234)
!5255 = !{i64 2147568150, i64 2147568193, i64 2147568233}
!5256 = !DILocation(line: 21, column: 1, scope: !5234)
!5257 = !{i64 2147568337, i64 2147568380, i64 2147568420}
!5258 = !DILocation(line: 22, column: 1, scope: !5234)
!5259 = !{i64 2147568553, i64 2147568596, i64 2147568636}
!5260 = !DILocation(line: 23, column: 1, scope: !5234)
!5261 = !{i64 2147568756, i64 2147568799, i64 2147568839}
!5262 = !DILocation(line: 24, column: 1, scope: !5234)
!5263 = !{i64 2147568959, i64 2147569002, i64 2147569042}
!5264 = !DILocation(line: 25, column: 1, scope: !5234)
!5265 = !{i64 2147569134, i64 2147569177, i64 2147569217}
!5266 = !DILocation(line: 26, column: 1, scope: !5234)
!5267 = !{i64 2147569342, i64 2147569385, i64 2147569425}
!5268 = !DILocation(line: 27, column: 1, scope: !5234)
!5269 = !{i64 2147569546, i64 2147569589, i64 2147569629}
!5270 = !DILocation(line: 28, column: 1, scope: !5234)
!5271 = !{i64 2147569739, i64 2147569782, i64 2147569822}
!5272 = !DILocation(line: 29, column: 1, scope: !5234)
!5273 = !{i64 2147569941, i64 2147569984, i64 2147570024}
!5274 = !DILocation(line: 30, column: 1, scope: !5234)
!5275 = !{i64 2147570168, i64 2147570211, i64 2147570251}
!5276 = !DILocation(line: 31, column: 1, scope: !5234)
!5277 = !{i64 2147570370, i64 2147570413, i64 2147570453}
!5278 = !DILocation(line: 32, column: 1, scope: !5234)
!5279 = !{i64 2147570585, i64 2147570628, i64 2147570668}
!5280 = !DILocation(line: 33, column: 1, scope: !5234)
!5281 = !{i64 2147570757, i64 2147570800, i64 2147570840}
!5282 = !DILocation(line: 34, column: 1, scope: !5234)
!5283 = !{i64 2147570959, i64 2147571002, i64 2147571042}
!5284 = !DILocation(line: 35, column: 1, scope: !5234)
!5285 = !{i64 2147571185, i64 2147571228, i64 2147571268}
!5286 = !DILocation(line: 36, column: 1, scope: !5234)
!5287 = !{i64 2147571384, i64 2147571427, i64 2147571467}
!5288 = !DILocation(line: 37, column: 1, scope: !5234)
!5289 = !{i64 2147571559, i64 2147571602, i64 2147571642}
!5290 = !DILocation(line: 38, column: 1, scope: !5234)
!5291 = !{i64 2147571812, i64 2147571855, i64 2147571895}
!5292 = !DILocation(line: 39, column: 1, scope: !5234)
!5293 = !{i64 2147572053, i64 2147572096, i64 2147572136}
!5294 = !DILocation(line: 40, column: 1, scope: !5234)
!5295 = !{i64 2147572288, i64 2147572331, i64 2147572371}
!5296 = !DILocation(line: 41, column: 1, scope: !5234)
!5297 = !{i64 2147572520, i64 2147572563, i64 2147572603}
!5298 = !DILocation(line: 42, column: 1, scope: !5234)
!5299 = !{i64 2147572746, i64 2147572789, i64 2147572829}
!5300 = !DILocation(line: 43, column: 1, scope: !5234)
!5301 = !{i64 2147572972, i64 2147573015, i64 2147573055}
!5302 = !DILocation(line: 44, column: 1, scope: !5234)
!5303 = !{i64 2147573198, i64 2147573241, i64 2147573281}
!5304 = !DILocation(line: 45, column: 1, scope: !5234)
!5305 = !{i64 2147573433, i64 2147573476, i64 2147573516}
!5306 = !DILocation(line: 46, column: 1, scope: !5234)
!5307 = !{i64 2147573659, i64 2147573702, i64 2147573742}
!5308 = !DILocation(line: 47, column: 1, scope: !5234)
!5309 = !{i64 2147573906, i64 2147573949, i64 2147573989}
!5310 = !DILocation(line: 48, column: 1, scope: !5234)
!5311 = !{i64 2147574135, i64 2147574178, i64 2147574218}
!5312 = !DILocation(line: 49, column: 1, scope: !5234)
!5313 = !{i64 2147574367, i64 2147574410, i64 2147574450}
!5314 = !DILocation(line: 50, column: 1, scope: !5234)
!5315 = !{i64 2147574611, i64 2147574654, i64 2147574694}
!5316 = !DILocation(line: 51, column: 1, scope: !5234)
!5317 = !{i64 2147574849, i64 2147574892, i64 2147574932}
!5318 = !DILocation(line: 52, column: 1, scope: !5234)
!5319 = !{i64 2147575123, i64 2147575166, i64 2147575206}
!5320 = !DILocation(line: 53, column: 1, scope: !5234)
!5321 = !{i64 2147579422, i64 2147579465, i64 2147579505}
!5322 = !DILocation(line: 54, column: 1, scope: !5234)
!5323 = !{i64 2147579675, i64 2147579718, i64 2147579758}
!5324 = !DILocation(line: 55, column: 1, scope: !5234)
!5325 = !{i64 2147579919, i64 2147579962, i64 2147580002}
!5326 = !DILocation(line: 56, column: 1, scope: !5234)
!5327 = !{i64 2147580154, i64 2147580197, i64 2147580237}
!5328 = !DILocation(line: 57, column: 1, scope: !5234)
!5329 = !{i64 2147580404, i64 2147580447, i64 2147580487}
!5330 = !DILocation(line: 58, column: 1, scope: !5234)
!5331 = !{i64 2147580651, i64 2147580694, i64 2147580734}
!5332 = !DILocation(line: 59, column: 1, scope: !5234)
!5333 = !{i64 2147580886, i64 2147580929, i64 2147580969}
!5334 = !DILocation(line: 60, column: 1, scope: !5234)
!5335 = !{i64 2147581121, i64 2147581164, i64 2147581204}
!5336 = !DILocation(line: 61, column: 1, scope: !5234)
!5337 = !{i64 2147581356, i64 2147581399, i64 2147581439}
!5338 = !DILocation(line: 62, column: 1, scope: !5234)
!5339 = !{i64 2147581594, i64 2147581637, i64 2147581677}
!5340 = !DILocation(line: 63, column: 1, scope: !5234)
!5341 = !{i64 2147581835, i64 2147581878, i64 2147581918}
!5342 = !DILocation(line: 64, column: 1, scope: !5234)
!5343 = !{i64 2147582115, i64 2147582158, i64 2147582198}
!5344 = !DILocation(line: 65, column: 1, scope: !5234)
!5345 = !{i64 2147582374, i64 2147582417, i64 2147582457}
!5346 = !DILocation(line: 66, column: 1, scope: !5234)
!5347 = !{i64 2147582603, i64 2147582646, i64 2147582686}
!5348 = !DILocation(line: 67, column: 1, scope: !5234)
!5349 = !{i64 2147582829, i64 2147582872, i64 2147582912}
!5350 = !DILocation(line: 68, column: 1, scope: !5234)
!5351 = !{i64 2147583067, i64 2147583110, i64 2147583150}
!5352 = !DILocation(line: 69, column: 1, scope: !5234)
!5353 = !{i64 2147583296, i64 2147583339, i64 2147583379}
!5354 = !DILocation(line: 70, column: 1, scope: !5234)
!5355 = !{i64 2147583504, i64 2147583547, i64 2147583587}
!5356 = !DILocation(line: 71, column: 1, scope: !5234)
!5357 = !{i64 2147583715, i64 2147583758, i64 2147583798}
!5358 = !DILocation(line: 72, column: 1, scope: !5234)
!5359 = !{i64 2147583950, i64 2147583993, i64 2147584033}
!5360 = !DILocation(line: 73, column: 1, scope: !5234)
!5361 = !{i64 2147584179, i64 2147584222, i64 2147584262}
!5362 = !DILocation(line: 74, column: 1, scope: !5234)
!5363 = !{i64 2147584417, i64 2147584460, i64 2147584500}
!5364 = !DILocation(line: 75, column: 1, scope: !5234)
!5365 = !{i64 2147584649, i64 2147584692, i64 2147584732}
!5366 = !DILocation(line: 76, column: 1, scope: !5234)
!5367 = !{i64 2147584875, i64 2147584918, i64 2147584958}
!5368 = !DILocation(line: 77, column: 1, scope: !5234)
!5369 = !{i64 2147585092, i64 2147585135, i64 2147585175}
!5370 = !DILocation(line: 78, column: 1, scope: !5234)
!5371 = !{i64 2147585324, i64 2147585367, i64 2147585407}
!5372 = !DILocation(line: 79, column: 1, scope: !5234)
!5373 = !{i64 2147585550, i64 2147585593, i64 2147585633}
!5374 = !DILocation(line: 80, column: 1, scope: !5234)
!5375 = !{i64 2147585764, i64 2147585807, i64 2147585847}
!5376 = !DILocation(line: 81, column: 1, scope: !5234)
!5377 = !{i64 2147585984, i64 2147586027, i64 2147586067}
!5378 = !DILocation(line: 82, column: 1, scope: !5234)
!5379 = !{i64 2147586216, i64 2147586259, i64 2147586299}
!5380 = !DILocation(line: 83, column: 1, scope: !5234)
!5381 = !{i64 2147586424, i64 2147586467, i64 2147586507}
!5382 = !DILocation(line: 84, column: 1, scope: !5234)
!5383 = !{i64 2147586629, i64 2147586672, i64 2147586712}
!5384 = !DILocation(line: 85, column: 1, scope: !5234)
!5385 = !{i64 2147586846, i64 2147586889, i64 2147586929}
!5386 = !DILocation(line: 86, column: 1, scope: !5234)
!5387 = !{i64 2147587060, i64 2147587103, i64 2147587143}
!5388 = !DILocation(line: 87, column: 1, scope: !5234)
!5389 = !{i64 2147587286, i64 2147587329, i64 2147587369}
!5390 = !DILocation(line: 88, column: 1, scope: !5234)
!5391 = !{i64 2147591567, i64 2147591610, i64 2147591650}
!5392 = !DILocation(line: 89, column: 1, scope: !5234)
!5393 = !{i64 2147591772, i64 2147591815, i64 2147591855}
!5394 = !DILocation(line: 90, column: 1, scope: !5234)
!5395 = !{i64 2147592004, i64 2147592047, i64 2147592087}
!5396 = !DILocation(line: 91, column: 1, scope: !5234)
!5397 = !{i64 2147592239, i64 2147592282, i64 2147592322}
!5398 = !DILocation(line: 92, column: 1, scope: !5234)
!5399 = !{i64 2147592489, i64 2147592532, i64 2147592572}
!5400 = !DILocation(line: 93, column: 1, scope: !5234)
!5401 = !{i64 2147592739, i64 2147592782, i64 2147592822}
!5402 = !DILocation(line: 94, column: 1, scope: !5234)
!5403 = !{i64 2147592977, i64 2147593020, i64 2147593060}
!5404 = !DILocation(line: 95, column: 1, scope: !5234)
!5405 = !{i64 2147593188, i64 2147593231, i64 2147593271}
!5406 = !DILocation(line: 96, column: 1, scope: !5234)
!5407 = !{i64 2147593405, i64 2147593448, i64 2147593488}
!5408 = !DILocation(line: 97, column: 1, scope: !5234)
!5409 = !{i64 2147593601, i64 2147593644, i64 2147593684}
!5410 = !DILocation(line: 98, column: 1, scope: !5234)
!5411 = !{i64 2147593803, i64 2147593846, i64 2147593886}
!5412 = !DILocation(line: 99, column: 1, scope: !5234)
!5413 = !{i64 2147593996, i64 2147594039, i64 2147594079}
!5414 = !DILocation(line: 100, column: 1, scope: !5234)
!5415 = !{i64 2147594204, i64 2147594247, i64 2147594287}
!5416 = !DILocation(line: 101, column: 1, scope: !5234)
!5417 = !{i64 2147594400, i64 2147594443, i64 2147594483}
!5418 = !DILocation(line: 102, column: 1, scope: !5234)
!5419 = !{i64 2147594608, i64 2147594651, i64 2147594691}
!5420 = !DILocation(line: 103, column: 1, scope: !5234)
!5421 = !{i64 2147594819, i64 2147594862, i64 2147594902}
!5422 = !DILocation(line: 104, column: 1, scope: !5234)
!5423 = !{i64 2147595018, i64 2147595061, i64 2147595101}
!5424 = !DILocation(line: 105, column: 1, scope: !5234)
!5425 = !{i64 2147595193, i64 2147595236, i64 2147595276}
!5426 = !DILocation(line: 106, column: 1, scope: !5234)
!5427 = !{i64 2147595377, i64 2147595420, i64 2147595460}
!5428 = !DILocation(line: 107, column: 1, scope: !5234)
!5429 = !{i64 2147595579, i64 2147595622, i64 2147595662}
!5430 = !DILocation(line: 108, column: 1, scope: !5234)
!5431 = !{i64 2147595778, i64 2147595821, i64 2147595861}
!5432 = !DILocation(line: 109, column: 1, scope: !5234)
!5433 = !{i64 2147595944, i64 2147595987, i64 2147596027}
!5434 = !DILocation(line: 110, column: 1, scope: !5234)
!5435 = !{i64 2147596128, i64 2147596171, i64 2147596211}
!5436 = !DILocation(line: 111, column: 1, scope: !5234)
!5437 = !{i64 2147596318, i64 2147596361, i64 2147596401}
!5438 = !DILocation(line: 112, column: 1, scope: !5234)
!5439 = !{i64 2147596502, i64 2147596545, i64 2147596585}
!5440 = !DILocation(line: 113, column: 1, scope: !5234)
!5441 = !{i64 2147596716, i64 2147596759, i64 2147596799}
!5442 = !DILocation(line: 114, column: 1, scope: !5234)
!5443 = !{i64 2147596927, i64 2147596970, i64 2147597010}
!5444 = !DILocation(line: 115, column: 1, scope: !5234)
!5445 = !{i64 2147597150, i64 2147597193, i64 2147597233}
!5446 = !DILocation(line: 116, column: 1, scope: !5234)
!5447 = !{i64 2147597334, i64 2147597377, i64 2147597417}
!5448 = !DILocation(line: 117, column: 1, scope: !5234)
!5449 = !{i64 2147597548, i64 2147597591, i64 2147597631}
!5450 = !DILocation(line: 118, column: 1, scope: !5234)
!5451 = !{i64 2147597714, i64 2147597757, i64 2147597797}
!5452 = !DILocation(line: 119, column: 1, scope: !5234)
!5453 = !{i64 2147597895, i64 2147597938, i64 2147597978}
!5454 = !DILocation(line: 120, column: 1, scope: !5234)
!5455 = !{i64 2147598088, i64 2147598131, i64 2147598171}
!5456 = !DILocation(line: 121, column: 1, scope: !5234)
!5457 = !{i64 2147598314, i64 2147598357, i64 2147598397}
!5458 = !DILocation(line: 122, column: 1, scope: !5234)
!5459 = !{i64 2147598528, i64 2147598571, i64 2147598611}
!5460 = !DILocation(line: 123, column: 1, scope: !5234)
!5461 = !{i64 2147598754, i64 2147598797, i64 2147598837}
!5462 = !DILocation(line: 124, column: 1, scope: !5234)
!5463 = !{i64 2147598971, i64 2147599014, i64 2147599054}
!5464 = !DILocation(line: 125, column: 1, scope: !5234)
!5465 = !{i64 2147599248, i64 2147599291, i64 2147599331}
!5466 = !DILocation(line: 126, column: 1, scope: !5234)
!5467 = !{i64 2147599474, i64 2147599517, i64 2147599557}
!5468 = !DILocation(line: 127, column: 1, scope: !5234)
!5469 = !{i64 2147599682, i64 2147599725, i64 2147599765}
!5470 = !DILocation(line: 128, column: 1, scope: !5234)
!5471 = !{i64 2147599878, i64 2147599921, i64 2147599961}
!5472 = !DILocation(line: 129, column: 1, scope: !5234)
!5473 = !{i64 2147600143, i64 2147600186, i64 2147600226}
!5474 = !DILocation(line: 130, column: 1, scope: !5234)
!5475 = !{i64 2147600357, i64 2147600400, i64 2147600440}
!5476 = !DILocation(line: 131, column: 1, scope: !5234)
!5477 = !{i64 2147600532, i64 2147600575, i64 2147600615}
!5478 = !DILocation(line: 132, column: 1, scope: !5234)
!5479 = !{i64 2147604847, i64 2147604890, i64 2147604930}
!5480 = !DILocation(line: 133, column: 1, scope: !5234)
!5481 = !{i64 2147605046, i64 2147605089, i64 2147605129}
!5482 = !DILocation(line: 134, column: 1, scope: !5234)
!5483 = !{i64 2147605288, i64 2147605331, i64 2147605371}
!5484 = !DILocation(line: 135, column: 1, scope: !5234)
!5485 = !{i64 2147605451, i64 2147605494, i64 2147605534}
!5486 = !DILocation(line: 136, column: 1, scope: !5234)
!5487 = !{i64 2147605638, i64 2147605681, i64 2147605721}
!5488 = !DILocation(line: 137, column: 1, scope: !5234)
!5489 = !{i64 2147605831, i64 2147605874, i64 2147605914}
!5490 = !DILocation(line: 138, column: 1, scope: !5234)
!5491 = !{i64 2147606014, i64 2147606057, i64 2147606097}
!5492 = !DILocation(line: 139, column: 1, scope: !5234)
!5493 = !{i64 2147606228, i64 2147606271, i64 2147606311}
!5494 = !DILocation(line: 140, column: 1, scope: !5234)
!5495 = !{i64 2147606439, i64 2147606482, i64 2147606522}
!5496 = !DILocation(line: 141, column: 1, scope: !5234)
!5497 = !{i64 2147606659, i64 2147606702, i64 2147606742}
!5498 = !DILocation(line: 142, column: 1, scope: !5234)
!5499 = !{i64 2147606866, i64 2147606909, i64 2147606949}
!5500 = !DILocation(line: 143, column: 1, scope: !5234)
!5501 = !{i64 2147607139, i64 2147607182, i64 2147607222}
!5502 = !DILocation(line: 144, column: 1, scope: !5234)
!5503 = !{i64 2147607387, i64 2147607430, i64 2147607470}
!5504 = !DILocation(line: 145, column: 1, scope: !5234)
!5505 = !{i64 2147607586, i64 2147607629, i64 2147607669}
!5506 = !DILocation(line: 146, column: 1, scope: !5234)
!5507 = !{i64 2147607821, i64 2147607864, i64 2147607904}
!5508 = !DILocation(line: 147, column: 1, scope: !5234)
!5509 = !{i64 2147608071, i64 2147608114, i64 2147608154}
!5510 = !DILocation(line: 148, column: 1, scope: !5234)
!5511 = !{i64 2147608273, i64 2147608316, i64 2147608356}
!5512 = !DILocation(line: 149, column: 1, scope: !5234)
!5513 = !{i64 2147608496, i64 2147608539, i64 2147608579}
!5514 = !DILocation(line: 150, column: 1, scope: !5234)
!5515 = !{i64 2147608710, i64 2147608753, i64 2147608793}
!5516 = !DILocation(line: 151, column: 1, scope: !5234)
!5517 = !{i64 2147608954, i64 2147608997, i64 2147609037}
!5518 = !DILocation(line: 152, column: 1, scope: !5234)
!5519 = !{i64 2147609183, i64 2147609226, i64 2147609266}
!5520 = !DILocation(line: 153, column: 1, scope: !5234)
!5521 = !{i64 2147609412, i64 2147609455, i64 2147609495}
!5522 = !DILocation(line: 154, column: 1, scope: !5234)
!5523 = !{i64 2147609620, i64 2147609663, i64 2147609703}
!5524 = !DILocation(line: 155, column: 1, scope: !5234)
!5525 = !{i64 2147609858, i64 2147609901, i64 2147609941}
!5526 = !DILocation(line: 156, column: 1, scope: !5234)
!5527 = !{i64 2147610084, i64 2147610127, i64 2147610167}
!5528 = !DILocation(line: 157, column: 1, scope: !5234)
!5529 = !{i64 2147610343, i64 2147610386, i64 2147610426}
!5530 = !DILocation(line: 158, column: 1, scope: !5234)
!5531 = !{i64 2147610563, i64 2147610606, i64 2147610646}
!5532 = !DILocation(line: 159, column: 1, scope: !5234)
!5533 = !{i64 2147610795, i64 2147610838, i64 2147610878}
!5534 = !DILocation(line: 160, column: 1, scope: !5234)
!5535 = !{i64 2147611036, i64 2147611079, i64 2147611119}
!5536 = !DILocation(line: 161, column: 1, scope: !5234)
!5537 = !{i64 2147611277, i64 2147611320, i64 2147611360}
!5538 = !DILocation(line: 162, column: 1, scope: !5234)
!5539 = !{i64 2147611500, i64 2147611543, i64 2147611583}
!5540 = !DILocation(line: 163, column: 1, scope: !5234)
!5541 = !{i64 2147611717, i64 2147611760, i64 2147611800}
!5542 = !DILocation(line: 164, column: 1, scope: !5234)
!5543 = !{i64 2147611958, i64 2147612001, i64 2147612041}
!5544 = !DILocation(line: 165, column: 1, scope: !5234)
!5545 = !{i64 2147612145, i64 2147612188, i64 2147612228}
!5546 = !DILocation(line: 166, column: 1, scope: !5234)
!5547 = !{i64 2147612332, i64 2147612375, i64 2147612415}
!5548 = !DILocation(line: 167, column: 1, scope: !5234)
!5549 = !{i64 2147612495, i64 2147612538, i64 2147612578}
!5550 = !DILocation(line: 168, column: 1, scope: !5234)
!5551 = !{i64 2147612754, i64 2147612797, i64 2147612837}
!5552 = !DILocation(line: 169, column: 1, scope: !5234)
!5553 = !{i64 2147612977, i64 2147613020, i64 2147613060}
!5554 = !DILocation(line: 170, column: 1, scope: !5234)
!5555 = !{i64 2147613206, i64 2147613249, i64 2147613289}
!5556 = !DILocation(line: 171, column: 1, scope: !5234)
!5557 = !{i64 2147617463, i64 2147617506, i64 2147617546}
!5558 = !DILocation(line: 172, column: 1, scope: !5234)
!5559 = !{i64 2147617675, i64 2147617718, i64 2147617758}
!5560 = !DILocation(line: 173, column: 1, scope: !5234)
!5561 = !{i64 2147617896, i64 2147617939, i64 2147617979}
!5562 = !DILocation(line: 174, column: 1, scope: !5234)
!5563 = !{i64 2147618110, i64 2147618153, i64 2147618193}
!5564 = !DILocation(line: 175, column: 1, scope: !5234)
!5565 = !{i64 2147618300, i64 2147618343, i64 2147618383}
!5566 = !DILocation(line: 176, column: 1, scope: !5234)
!5567 = !{i64 2147618499, i64 2147618542, i64 2147618582}
!5568 = !DILocation(line: 177, column: 1, scope: !5234)
!5569 = !{i64 2147618704, i64 2147618747, i64 2147618787}
!5570 = !DILocation(line: 178, column: 1, scope: !5234)
!5571 = !{i64 2147618924, i64 2147618967, i64 2147619007}
!5572 = !DILocation(line: 179, column: 1, scope: !5234)
!5573 = !{i64 2147619125, i64 2147619168, i64 2147619208}
!5574 = !DILocation(line: 180, column: 1, scope: !5234)
!5575 = !{i64 2147619324, i64 2147619367, i64 2147619407}
!5576 = !DILocation(line: 181, column: 1, scope: !5234)
!5577 = !{i64 2147619529, i64 2147619572, i64 2147619612}
!5578 = !DILocation(line: 182, column: 1, scope: !5234)
!5579 = !{i64 2147619698, i64 2147619741, i64 2147619781}
!5580 = !DILocation(line: 183, column: 1, scope: !5234)
!5581 = !{i64 2147619882, i64 2147619925, i64 2147619965}
!5582 = !DILocation(line: 184, column: 1, scope: !5234)
!5583 = !{i64 2147620066, i64 2147620109, i64 2147620149}
!5584 = !DILocation(line: 185, column: 1, scope: !5234)
!5585 = !{i64 2147620253, i64 2147620296, i64 2147620336}
!5586 = !DILocation(line: 186, column: 1, scope: !5234)
!5587 = !{i64 2147620437, i64 2147620480, i64 2147620520}
!5588 = !DILocation(line: 187, column: 1, scope: !5234)
!5589 = !{i64 2147620675, i64 2147620718, i64 2147620758}
!5590 = !DILocation(line: 188, column: 1, scope: !5234)
!5591 = !{i64 2147620905, i64 2147620948, i64 2147620988}
!5592 = !DILocation(line: 189, column: 1, scope: !5234)
!5593 = !{i64 2147621134, i64 2147621177, i64 2147621217}
!5594 = !DILocation(line: 190, column: 1, scope: !5234)
!5595 = !{i64 2147621321, i64 2147621364, i64 2147621404}
!5596 = !DILocation(line: 191, column: 1, scope: !5234)
!5597 = !{i64 2147621517, i64 2147621560, i64 2147621600}
!5598 = !DILocation(line: 192, column: 1, scope: !5234)
!5599 = !{i64 2147621725, i64 2147621768, i64 2147621808}
!5600 = !DILocation(line: 193, column: 1, scope: !5234)
!5601 = !{i64 2147621937, i64 2147621980, i64 2147622020}
!5602 = !DILocation(line: 194, column: 1, scope: !5234)
!5603 = !{i64 2147622136, i64 2147622179, i64 2147622219}
!5604 = !DILocation(line: 195, column: 1, scope: !5234)
!5605 = !{i64 2147622374, i64 2147622417, i64 2147622457}
!5606 = !DILocation(line: 196, column: 1, scope: !5234)
!5607 = !{i64 2147622570, i64 2147622613, i64 2147622653}
!5608 = !DILocation(line: 197, column: 1, scope: !5234)
!5609 = !{i64 2147622772, i64 2147622815, i64 2147622855}
!5610 = !DILocation(line: 198, column: 1, scope: !5234)
!5611 = !{i64 2147622965, i64 2147623008, i64 2147623048}
!5612 = !DILocation(line: 199, column: 1, scope: !5234)
!5613 = !{i64 2147623199, i64 2147623242, i64 2147623282}
!5614 = !DILocation(line: 200, column: 1, scope: !5234)
!5615 = !{i64 2147623362, i64 2147623405, i64 2147623445}
!5616 = !DILocation(line: 201, column: 1, scope: !5234)
!5617 = !{i64 2147623601, i64 2147623644, i64 2147623684}
!5618 = !DILocation(line: 202, column: 1, scope: !5234)
!5619 = !{i64 2147623840, i64 2147623883, i64 2147623923}
!5620 = !DILocation(line: 203, column: 1, scope: !5234)
!5621 = !{i64 2147624076, i64 2147624119, i64 2147624159}
!5622 = !DILocation(line: 204, column: 1, scope: !5234)
!5623 = !{i64 2147624306, i64 2147624349, i64 2147624389}
!5624 = !DILocation(line: 205, column: 1, scope: !5234)
!5625 = !{i64 2147624493, i64 2147624536, i64 2147624576}
!5626 = !DILocation(line: 206, column: 1, scope: !5234)
!5627 = !{i64 2147624692, i64 2147624735, i64 2147624775}
!5628 = !DILocation(line: 207, column: 1, scope: !5234)
!5629 = !{i64 2147624963, i64 2147625006, i64 2147625046}
!5630 = !DILocation(line: 208, column: 1, scope: !5234)
!5631 = !{i64 2147625138, i64 2147625181, i64 2147625221}
!5632 = !DILocation(line: 209, column: 1, scope: !5234)
!5633 = !{i64 2147625372, i64 2147625415, i64 2147625455}
!5634 = !DILocation(line: 210, column: 1, scope: !5234)
!5635 = !{i64 2147625580, i64 2147625623, i64 2147625663}
!5636 = !DILocation(line: 211, column: 1, scope: !5234)
!5637 = !{i64 2147625779, i64 2147625822, i64 2147625862}
!5638 = !DILocation(line: 212, column: 1, scope: !5234)
!5639 = !{i64 2147625997, i64 2147626040, i64 2147626080}
!5640 = !DILocation(line: 213, column: 1, scope: !5234)
!5641 = !{i64 2147626187, i64 2147626230, i64 2147626270}
!5642 = !DILocation(line: 214, column: 1, scope: !5234)
!5643 = !{i64 2147630495, i64 2147630538, i64 2147630578}
!5644 = !DILocation(line: 215, column: 1, scope: !5234)
!5645 = !{i64 2147630691, i64 2147630734, i64 2147630774}
!5646 = !DILocation(line: 216, column: 1, scope: !5234)
!5647 = !{i64 2147630897, i64 2147630940, i64 2147630980}
!5648 = !DILocation(line: 217, column: 1, scope: !5234)
!5649 = !{i64 2147631102, i64 2147631145, i64 2147631185}
!5650 = !DILocation(line: 218, column: 1, scope: !5234)
!5651 = !{i64 2147631316, i64 2147631359, i64 2147631399}
!5652 = !DILocation(line: 219, column: 1, scope: !5234)
!5653 = !{i64 2147631542, i64 2147631585, i64 2147631625}
!5654 = !DILocation(line: 220, column: 1, scope: !5234)
!5655 = !{i64 2147631774, i64 2147631817, i64 2147631857}
!5656 = !DILocation(line: 221, column: 1, scope: !5234)
!5657 = !{i64 2147631958, i64 2147632001, i64 2147632041}
!5658 = !DILocation(line: 222, column: 1, scope: !5234)
!5659 = !{i64 2147632167, i64 2147632210, i64 2147632250}
!5660 = !DILocation(line: 223, column: 1, scope: !5234)
!5661 = !{i64 2147632351, i64 2147632394, i64 2147632434}
!5662 = !DILocation(line: 224, column: 1, scope: !5234)
!5663 = !{i64 2147632577, i64 2147632620, i64 2147632660}
!5664 = !DILocation(line: 225, column: 1, scope: !5234)
!5665 = !{i64 2147632803, i64 2147632846, i64 2147632886}
!5666 = !DILocation(line: 226, column: 1, scope: !5234)
!5667 = !{i64 2147633029, i64 2147633072, i64 2147633112}
!5668 = !DILocation(line: 227, column: 1, scope: !5234)
!5669 = !{i64 2147633255, i64 2147633298, i64 2147633338}
!5670 = !DILocation(line: 228, column: 1, scope: !5234)
!5671 = !{i64 2147633481, i64 2147633524, i64 2147633564}
!5672 = !DILocation(line: 229, column: 1, scope: !5234)
!5673 = !{i64 2147633713, i64 2147633756, i64 2147633796}
!5674 = !DILocation(line: 230, column: 1, scope: !5234)
!5675 = !{i64 2147633951, i64 2147633994, i64 2147634034}
!5676 = !DILocation(line: 231, column: 1, scope: !5234)
!5677 = !{i64 2147634171, i64 2147634214, i64 2147634254}
!5678 = !DILocation(line: 232, column: 1, scope: !5234)
!5679 = !{i64 2147634415, i64 2147634458, i64 2147634498}
!5680 = !DILocation(line: 233, column: 1, scope: !5234)
!5681 = !{i64 2147634656, i64 2147634699, i64 2147634739}
!5682 = !DILocation(line: 234, column: 1, scope: !5234)
!5683 = !{i64 2147634891, i64 2147634934, i64 2147634974}
!5684 = !DILocation(line: 235, column: 1, scope: !5234)
!5685 = !{i64 2147635123, i64 2147635166, i64 2147635206}
!5686 = !DILocation(line: 236, column: 1, scope: !5234)
!5687 = !{i64 2147635325, i64 2147635368, i64 2147635408}
!5688 = !DILocation(line: 237, column: 1, scope: !5234)
!5689 = !{i64 2147635575, i64 2147635618, i64 2147635658}
!5690 = !DILocation(line: 238, column: 1, scope: !5234)
!5691 = !{i64 2147635813, i64 2147635856, i64 2147635896}
!5692 = !DILocation(line: 239, column: 1, scope: !5234)
!5693 = !{i64 2147635997, i64 2147636040, i64 2147636080}
!5694 = !DILocation(line: 240, column: 1, scope: !5234)
!5695 = !{i64 2147636221, i64 2147636264, i64 2147636304}
!5696 = !DILocation(line: 241, column: 1, scope: !5234)
!5697 = !{i64 2147636459, i64 2147636502, i64 2147636542}
!5698 = !DILocation(line: 242, column: 1, scope: !5234)
!5699 = !{i64 2147636697, i64 2147636740, i64 2147636780}
!5700 = !DILocation(line: 243, column: 1, scope: !5234)
!5701 = !{i64 2147636890, i64 2147636933, i64 2147636973}
!5702 = !DILocation(line: 244, column: 1, scope: !5234)
!5703 = !{i64 2147637143, i64 2147637186, i64 2147637226}
!5704 = !DILocation(line: 245, column: 1, scope: !5234)
!5705 = !{i64 2147637357, i64 2147637400, i64 2147637440}
!5706 = !DILocation(line: 246, column: 1, scope: !5234)
!5707 = !{i64 2147637565, i64 2147637608, i64 2147637648}
!5708 = !DILocation(line: 247, column: 1, scope: !5234)
!5709 = !{i64 2147637755, i64 2147637798, i64 2147637838}
!5710 = !DILocation(line: 248, column: 1, scope: !5234)
!5711 = !{i64 2147637969, i64 2147638012, i64 2147638052}
!5712 = !DILocation(line: 249, column: 1, scope: !5234)
!5713 = !{i64 2147638231, i64 2147638274, i64 2147638314}
!5714 = !DILocation(line: 250, column: 1, scope: !5234)
!5715 = !{i64 2147638442, i64 2147638485, i64 2147638525}
!5716 = !DILocation(line: 251, column: 1, scope: !5234)
!5717 = !{i64 2147638686, i64 2147638729, i64 2147638769}
!5718 = !DILocation(line: 252, column: 1, scope: !5234)
!5719 = !{i64 2147638897, i64 2147638940, i64 2147638980}
!5720 = !DILocation(line: 253, column: 1, scope: !5234)
!5721 = !{i64 2147643187, i64 2147643230, i64 2147643270}
!5722 = !DILocation(line: 254, column: 1, scope: !5234)
!5723 = !{i64 2147643452, i64 2147643495, i64 2147643535}
!5724 = !DILocation(line: 255, column: 1, scope: !5234)
!5725 = !{i64 2147643657, i64 2147643700, i64 2147643740}
!5726 = !DILocation(line: 256, column: 1, scope: !5234)
!5727 = !{i64 2147643853, i64 2147643896, i64 2147643936}
!5728 = !DILocation(line: 257, column: 1, scope: !5234)
!5729 = !{i64 2147644076, i64 2147644119, i64 2147644159}
!5730 = !DILocation(line: 258, column: 1, scope: !5234)
!5731 = !{i64 2147644239, i64 2147644282, i64 2147644322}
!5732 = !DILocation(line: 259, column: 1, scope: !5234)
!5733 = !{i64 2147644444, i64 2147644487, i64 2147644527}
!5734 = !DILocation(line: 260, column: 1, scope: !5234)
!5735 = !{i64 2147644664, i64 2147644707, i64 2147644747}
!5736 = !DILocation(line: 261, column: 1, scope: !5234)
!5737 = !{i64 2147644878, i64 2147644921, i64 2147644961}
!5738 = !DILocation(line: 262, column: 1, scope: !5234)
!5739 = !{i64 2147645092, i64 2147645135, i64 2147645175}
!5740 = !DILocation(line: 263, column: 1, scope: !5234)
!5741 = !{i64 2147645303, i64 2147645346, i64 2147645386}
!5742 = !DILocation(line: 264, column: 1, scope: !5234)
!5743 = !{i64 2147645496, i64 2147645539, i64 2147645579}
!5744 = !DILocation(line: 265, column: 1, scope: !5234)
!5745 = !{i64 2147645695, i64 2147645738, i64 2147645778}
!5746 = !DILocation(line: 266, column: 1, scope: !5234)
!5747 = !{i64 2147645891, i64 2147645934, i64 2147645974}
!5748 = !DILocation(line: 267, column: 1, scope: !5234)
!5749 = !{i64 2147646090, i64 2147646133, i64 2147646173}
!5750 = !DILocation(line: 268, column: 1, scope: !5234)
!5751 = !{i64 2147646314, i64 2147646357, i64 2147646397}
!5752 = !DILocation(line: 269, column: 1, scope: !5234)
!5753 = !{i64 2147646539, i64 2147646582, i64 2147646622}
!5754 = !DILocation(line: 270, column: 1, scope: !5234)
!5755 = !{i64 2147646711, i64 2147646754, i64 2147646794}
!5756 = !DILocation(line: 271, column: 1, scope: !5234)
!5757 = !{i64 2147646904, i64 2147646947, i64 2147646987}
!5758 = !DILocation(line: 272, column: 1, scope: !5234)
!5759 = !{i64 2147647100, i64 2147647143, i64 2147647183}
!5760 = !DILocation(line: 273, column: 1, scope: !5234)
!5761 = !{i64 2147647327, i64 2147647370, i64 2147647410}
!5762 = !DILocation(line: 274, column: 1, scope: !5234)
!5763 = !{i64 2147647544, i64 2147647587, i64 2147647627}
!5764 = !DILocation(line: 275, column: 1, scope: !5234)
!5765 = !{i64 2147647836, i64 2147647879, i64 2147647919}
!5766 = !DILocation(line: 276, column: 1, scope: !5234)
!5767 = !{i64 2147648068, i64 2147648111, i64 2147648151}
!5768 = !DILocation(line: 277, column: 1, scope: !5234)
!5769 = !{i64 2147648285, i64 2147648328, i64 2147648368}
!5770 = !DILocation(line: 278, column: 1, scope: !5234)
!5771 = !{i64 2147648492, i64 2147648535, i64 2147648575}
!5772 = !DILocation(line: 279, column: 1, scope: !5234)
!5773 = !{i64 2147648693, i64 2147648736, i64 2147648776}
!5774 = !DILocation(line: 280, column: 1, scope: !5234)
!5775 = !{i64 2147648925, i64 2147648968, i64 2147649008}
!5776 = !DILocation(line: 281, column: 1, scope: !5234)
!5777 = !{i64 2147649133, i64 2147649176, i64 2147649216}
!5778 = !DILocation(line: 282, column: 1, scope: !5234)
!5779 = !{i64 2147649323, i64 2147649366, i64 2147649406}
!5780 = !DILocation(line: 283, column: 1, scope: !5234)
!5781 = !{i64 2147649549, i64 2147649592, i64 2147649632}
!5782 = !DILocation(line: 284, column: 1, scope: !5234)
!5783 = !{i64 2147649738, i64 2147649781, i64 2147649821}
!5784 = !DILocation(line: 285, column: 1, scope: !5234)
!5785 = !{i64 2147650009, i64 2147650052, i64 2147650092}
!5786 = !DILocation(line: 286, column: 1, scope: !5234)
!5787 = !{i64 2147650229, i64 2147650272, i64 2147650312}
!5788 = !DILocation(line: 287, column: 1, scope: !5234)
!5789 = !{i64 2147650482, i64 2147650525, i64 2147650565}
!5790 = !DILocation(line: 288, column: 1, scope: !5234)
!5791 = !{i64 2147650690, i64 2147650733, i64 2147650773}
!5792 = !DILocation(line: 289, column: 1, scope: !5234)
!5793 = !{i64 2147650922, i64 2147650965, i64 2147651005}
!5794 = !DILocation(line: 290, column: 1, scope: !5234)
!5795 = !{i64 2147651133, i64 2147651176, i64 2147651216}
!5796 = !DILocation(line: 291, column: 1, scope: !5234)
!5797 = !{i64 2147651323, i64 2147651366, i64 2147651406}
!5798 = !DILocation(line: 292, column: 1, scope: !5234)
!5799 = !{i64 2147651537, i64 2147651580, i64 2147651620}
!5800 = !DILocation(line: 293, column: 1, scope: !5234)
!5801 = !{i64 2147651736, i64 2147651779, i64 2147651819}
!5802 = !DILocation(line: 294, column: 1, scope: !5234)
!5803 = !{i64 2147655984, i64 2147656027, i64 2147656067}
!5804 = !DILocation(line: 295, column: 1, scope: !5234)
!5805 = !{i64 2147656192, i64 2147656235, i64 2147656275}
!5806 = !DILocation(line: 296, column: 1, scope: !5234)
!5807 = !{i64 2147656421, i64 2147656464, i64 2147656504}
!5808 = !DILocation(line: 297, column: 1, scope: !5234)
!5809 = !{i64 2147656623, i64 2147656666, i64 2147656706}
!5810 = !DILocation(line: 298, column: 1, scope: !5234)
!5811 = !{i64 2147656822, i64 2147656865, i64 2147656905}
!5812 = !DILocation(line: 299, column: 1, scope: !5234)
!5813 = !{i64 2147657039, i64 2147657082, i64 2147657122}
!5814 = !DILocation(line: 301, column: 1, scope: !5234)
!5815 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !140, file: !140, line: 30, type: !147, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5816)
!5816 = !{!5817, !5818}
!5817 = !DILocalVariable(name: "arg", arg: 1, scope: !5815, file: !140, line: 30, type: !149)
!5818 = !DILocalVariable(name: "key", scope: !5815, file: !140, line: 32, type: !132)
!5819 = !DILocation(line: 0, scope: !5815)
!5820 = !DILocation(line: 37, column: 2, scope: !5815)
!5821 = !DILocation(line: 38, column: 2, scope: !5815)
!5822 = !DILocation(line: 55, column: 2, scope: !5823, inlinedAt: !5830)
!5823 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5824, file: !5824, line: 42, type: !5825, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5827)
!5824 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5825 = !DISubroutineType(types: !5826)
!5826 = !{!32}
!5827 = !{!5828, !5829}
!5828 = !DILocalVariable(name: "key", scope: !5823, file: !5824, line: 44, type: !32)
!5829 = !DILocalVariable(name: "tmp", scope: !5823, file: !5824, line: 53, type: !32)
!5830 = distinct !DILocation(line: 40, column: 8, scope: !5815)
!5831 = !{i64 2130839}
!5832 = !DILocation(line: 0, scope: !5823, inlinedAt: !5830)
!5833 = !DILocalVariable(name: "key", arg: 1, scope: !5834, file: !5824, line: 84, type: !32)
!5834 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5824, file: !5824, line: 84, type: !5835, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5837)
!5835 = !DISubroutineType(types: !5836)
!5836 = !{null, !32}
!5837 = !{!5833}
!5838 = !DILocation(line: 0, scope: !5834, inlinedAt: !5839)
!5839 = distinct !DILocation(line: 47, column: 2, scope: !5815)
!5840 = !DILocation(line: 95, column: 2, scope: !5834, inlinedAt: !5839)
!5841 = !{i64 2131656}
!5842 = !DILocation(line: 51, column: 18, scope: !5815)
!5843 = !DILocation(line: 53, column: 2, scope: !5815)
!5844 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5845, file: !5845, line: 1609, type: !3249, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !473)
!5845 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5846 = !DILocation(line: 1611, column: 3, scope: !5844)
!5847 = !DILocation(line: 1612, column: 1, scope: !5844)
!5848 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5845, file: !5845, line: 1629, type: !3249, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !473)
!5849 = !DILocation(line: 1631, column: 3, scope: !5848)
!5850 = !DILocation(line: 1632, column: 1, scope: !5848)
!5851 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !180, file: !180, line: 26, type: !186, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !5852)
!5852 = !{!5853}
!5853 = !DILocalVariable(name: "dev", arg: 1, scope: !5851, file: !180, line: 26, type: !188)
!5854 = !DILocation(line: 0, scope: !5851)
!5855 = !DILocation(line: 68, column: 2, scope: !5851)
!5856 = distinct !DISubprogram(name: "tty_write", scope: !5857, file: !5857, line: 100, type: !5858, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !5901)
!5857 = !DIFile(filename: "zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5858 = !DISubroutineType(types: !5859)
!5859 = !{!5860, !5862, !13, !356}
!5860 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !5861, line: 28, baseType: !103)
!5861 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5863, size: 32)
!5863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !307, line: 18, size: 544, elements: !5864)
!5864 = !{!5865, !5866, !5890, !5891, !5892, !5893, !5894, !5895, !5896, !5897, !5898, !5899, !5900}
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !5863, file: !307, line: 19, baseType: !2642, size: 32)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !5863, file: !307, line: 21, baseType: !5867, size: 128, offset: 32)
!5867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !312, line: 2909, size: 128, elements: !5868)
!5868 = !{!5869, !5888, !5889}
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5867, file: !312, line: 2910, baseType: !5870, size: 64)
!5870 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !5871)
!5871 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !5872)
!5872 = !{!5873}
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5871, file: !316, line: 232, baseType: !5874, size: 64)
!5874 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !5875)
!5875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !5876)
!5876 = !{!5877, !5883}
!5877 = !DIDerivedType(tag: DW_TAG_member, scope: !5875, file: !321, line: 38, baseType: !5878, size: 32)
!5878 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5875, file: !321, line: 38, size: 32, elements: !5879)
!5879 = !{!5880, !5882}
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5878, file: !321, line: 39, baseType: !5881, size: 32)
!5881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5875, size: 32)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5878, file: !321, line: 40, baseType: !5881, size: 32)
!5883 = !DIDerivedType(tag: DW_TAG_member, scope: !5875, file: !321, line: 42, baseType: !5884, size: 32, offset: 32)
!5884 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5875, file: !321, line: 42, size: 32, elements: !5885)
!5885 = !{!5886, !5887}
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5884, file: !321, line: 43, baseType: !5881, size: 32)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5884, file: !321, line: 44, baseType: !5881, size: 32)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5867, file: !312, line: 2911, baseType: !32, size: 32, offset: 64)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5867, file: !312, line: 2912, baseType: !32, size: 32, offset: 96)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !5863, file: !307, line: 22, baseType: !270, size: 32, offset: 160)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !5863, file: !307, line: 23, baseType: !132, size: 32, offset: 192)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !5863, file: !307, line: 24, baseType: !340, size: 16, offset: 224)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !5863, file: !307, line: 24, baseType: !340, size: 16, offset: 240)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !5863, file: !307, line: 25, baseType: !344, size: 32, offset: 256)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !5863, file: !307, line: 27, baseType: !5867, size: 128, offset: 288)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !5863, file: !307, line: 28, baseType: !270, size: 32, offset: 416)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !5863, file: !307, line: 29, baseType: !132, size: 32, offset: 448)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !5863, file: !307, line: 30, baseType: !340, size: 16, offset: 480)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !5863, file: !307, line: 30, baseType: !340, size: 16, offset: 496)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !5863, file: !307, line: 31, baseType: !344, size: 32, offset: 512)
!5901 = !{!5902, !5903, !5904, !5905, !5906, !5907}
!5902 = !DILocalVariable(name: "tty", arg: 1, scope: !5856, file: !5857, line: 100, type: !5862)
!5903 = !DILocalVariable(name: "buf", arg: 2, scope: !5856, file: !5857, line: 100, type: !13)
!5904 = !DILocalVariable(name: "size", arg: 3, scope: !5856, file: !5857, line: 100, type: !356)
!5905 = !DILocalVariable(name: "p", scope: !5856, file: !5857, line: 102, type: !264)
!5906 = !DILocalVariable(name: "out_size", scope: !5856, file: !5857, line: 103, type: !356)
!5907 = !DILocalVariable(name: "res", scope: !5856, file: !5857, line: 104, type: !103)
!5908 = !DILocation(line: 0, scope: !5856)
!5909 = !DILocation(line: 106, column: 11, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5856, file: !5857, line: 106, column: 6)
!5911 = !DILocation(line: 106, column: 25, scope: !5910)
!5912 = !DILocation(line: 106, column: 6, scope: !5856)
!5913 = !DILocation(line: 117, column: 2, scope: !5856)
!5914 = !DILocation(line: 110, column: 3, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5910, file: !5857, line: 106, column: 32)
!5916 = !DILocation(line: 110, column: 14, scope: !5915)
!5917 = !DILocation(line: 111, column: 23, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5915, file: !5857, line: 110, column: 18)
!5919 = !DILocation(line: 111, column: 35, scope: !5918)
!5920 = !DILocation(line: 111, column: 33, scope: !5918)
!5921 = !DILocation(line: 111, column: 4, scope: !5918)
!5922 = distinct !{!5922, !5914, !5923}
!5923 = !DILocation(line: 112, column: 3, scope: !5915)
!5924 = !DILocation(line: 117, column: 13, scope: !5856)
!5925 = !DILocation(line: 118, column: 26, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5856, file: !5857, line: 117, column: 17)
!5927 = !DILocation(line: 118, column: 9, scope: !5926)
!5928 = !DILocation(line: 119, column: 11, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5926, file: !5857, line: 119, column: 7)
!5930 = !DILocation(line: 119, column: 7, scope: !5926)
!5931 = !DILocation(line: 121, column: 17, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5933, file: !5857, line: 121, column: 8)
!5933 = distinct !DILexicalBlock(scope: !5929, file: !5857, line: 119, column: 16)
!5934 = !DILocation(line: 121, column: 8, scope: !5933)
!5935 = !DILocation(line: 122, column: 13, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5932, file: !5857, line: 121, column: 23)
!5937 = !DILocation(line: 122, column: 5, scope: !5936)
!5938 = !DILocation(line: 122, column: 11, scope: !5936)
!5939 = !DILocation(line: 123, column: 5, scope: !5936)
!5940 = !DILocation(line: 118, column: 28, scope: !5926)
!5941 = !DILocation(line: 135, column: 11, scope: !5926)
!5942 = distinct !{!5942, !5913, !5943}
!5943 = !DILocation(line: 136, column: 2, scope: !5856)
!5944 = !DILocation(line: 139, column: 1, scope: !5856)
!5945 = distinct !DISubprogram(name: "uart_poll_out", scope: !5946, file: !5946, line: 95, type: !2659, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !5947)
!5946 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!5947 = !{!5948, !5949}
!5948 = !DILocalVariable(name: "dev", arg: 1, scope: !5945, file: !5946, line: 95, type: !2642)
!5949 = !DILocalVariable(name: "out_char", arg: 2, scope: !5945, file: !5946, line: 95, type: !164)
!5950 = !DILocation(line: 0, scope: !5945)
!5951 = !DILocation(line: 105, column: 2, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5945, file: !5946, line: 105, column: 2)
!5953 = !{i64 2155010950}
!5954 = !DILocation(line: 106, column: 2, scope: !5945)
!5955 = !DILocation(line: 107, column: 1, scope: !5945)
!5956 = distinct !DISubprogram(name: "tty_putchar", scope: !5857, file: !5857, line: 69, type: !5957, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !5959)
!5957 = !DISubroutineType(types: !5958)
!5958 = !{!103, !5862, !163}
!5959 = !{!5960, !5961, !5962, !5963, !5964}
!5960 = !DILocalVariable(name: "tty", arg: 1, scope: !5956, file: !5857, line: 69, type: !5862)
!5961 = !DILocalVariable(name: "c", arg: 2, scope: !5956, file: !5857, line: 69, type: !163)
!5962 = !DILocalVariable(name: "key", scope: !5956, file: !5857, line: 71, type: !32)
!5963 = !DILocalVariable(name: "tx_next", scope: !5956, file: !5857, line: 72, type: !103)
!5964 = !DILocalVariable(name: "res", scope: !5956, file: !5857, line: 73, type: !103)
!5965 = !DILocation(line: 0, scope: !5956)
!5966 = !DILocation(line: 75, column: 25, scope: !5956)
!5967 = !DILocation(line: 76, column: 5, scope: !5956)
!5968 = !DILocation(line: 77, column: 7, scope: !5956)
!5969 = !DILocation(line: 75, column: 8, scope: !5956)
!5970 = !DILocation(line: 78, column: 10, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5956, file: !5857, line: 78, column: 6)
!5972 = !DILocation(line: 78, column: 6, scope: !5956)
!5973 = !DILocation(line: 55, column: 2, scope: !5974, inlinedAt: !5978)
!5974 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5824, file: !5824, line: 42, type: !5825, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !5975)
!5975 = !{!5976, !5977}
!5976 = !DILocalVariable(name: "key", scope: !5974, file: !5824, line: 44, type: !32)
!5977 = !DILocalVariable(name: "tmp", scope: !5974, file: !5824, line: 53, type: !32)
!5978 = distinct !DILocation(line: 82, column: 8, scope: !5956)
!5979 = !{i64 2241923}
!5980 = !DILocation(line: 0, scope: !5974, inlinedAt: !5978)
!5981 = !DILocation(line: 83, column: 17, scope: !5956)
!5982 = !DILocation(line: 83, column: 12, scope: !5956)
!5983 = !DILocation(line: 83, column: 24, scope: !5956)
!5984 = !DILocation(line: 84, column: 22, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5956, file: !5857, line: 84, column: 6)
!5986 = !DILocation(line: 84, column: 14, scope: !5985)
!5987 = !DILocation(line: 84, column: 6, scope: !5956)
!5988 = !DILocation(line: 87, column: 22, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5956, file: !5857, line: 87, column: 6)
!5990 = !DILocation(line: 87, column: 17, scope: !5989)
!5991 = !DILocation(line: 87, column: 14, scope: !5989)
!5992 = !DILocation(line: 87, column: 6, scope: !5956)
!5993 = !DILocalVariable(name: "key", arg: 1, scope: !5994, file: !5824, line: 84, type: !32)
!5994 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5824, file: !5824, line: 84, type: !5835, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !5995)
!5995 = !{!5993}
!5996 = !DILocation(line: 0, scope: !5994, inlinedAt: !5997)
!5997 = distinct !DILocation(line: 88, column: 3, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5989, file: !5857, line: 87, column: 30)
!5999 = !DILocation(line: 95, column: 2, scope: !5994, inlinedAt: !5997)
!6000 = !{i64 2242740}
!6001 = !DILocation(line: 89, column: 3, scope: !5998)
!6002 = !DILocation(line: 92, column: 7, scope: !5956)
!6003 = !DILocation(line: 92, column: 2, scope: !5956)
!6004 = !DILocation(line: 92, column: 31, scope: !5956)
!6005 = !DILocation(line: 93, column: 16, scope: !5956)
!6006 = !DILocation(line: 93, column: 14, scope: !5956)
!6007 = !DILocation(line: 0, scope: !5994, inlinedAt: !6008)
!6008 = distinct !DILocation(line: 95, column: 2, scope: !5956)
!6009 = !DILocation(line: 95, column: 2, scope: !5994, inlinedAt: !6008)
!6010 = !DILocation(line: 96, column: 26, scope: !5956)
!6011 = !DILocation(line: 96, column: 2, scope: !5956)
!6012 = !DILocation(line: 97, column: 2, scope: !5956)
!6013 = !DILocation(line: 98, column: 1, scope: !5956)
!6014 = distinct !DISubprogram(name: "z_errno", scope: !6015, file: !6015, line: 24, type: !6016, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !473)
!6015 = !DIFile(filename: "zephyr/include/generated/syscalls/errno_private.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!6016 = !DISubroutineType(types: !6017)
!6017 = !{!2620}
!6018 = !DILocation(line: 31, column: 2, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6014, file: !6015, line: 31, column: 2)
!6020 = !{i64 2154266950}
!6021 = !DILocation(line: 32, column: 9, scope: !6014)
!6022 = !DILocation(line: 32, column: 2, scope: !6014)
!6023 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !6024, file: !6024, line: 403, type: !6025, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6027)
!6024 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6025 = !DISubroutineType(types: !6026)
!6026 = !{!1608, !1608}
!6027 = !{!6028}
!6028 = !DILocalVariable(name: "t", arg: 1, scope: !6023, file: !6024, line: 403, type: !1608)
!6029 = !DILocation(line: 0, scope: !6023)
!6030 = !DILocalVariable(name: "t", arg: 1, scope: !6031, file: !6024, line: 102, type: !1608)
!6031 = distinct !DISubprogram(name: "z_tmcvt", scope: !6024, file: !6024, line: 102, type: !6032, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6034)
!6032 = !DISubroutineType(types: !6033)
!6033 = !{!1608, !1608, !132, !132, !166, !166, !166, !166}
!6034 = !{!6030, !6035, !6036, !6037, !6038, !6039, !6040, !6041, !6042, !6043, !6044}
!6035 = !DILocalVariable(name: "from_hz", arg: 2, scope: !6031, file: !6024, line: 102, type: !132)
!6036 = !DILocalVariable(name: "to_hz", arg: 3, scope: !6031, file: !6024, line: 103, type: !132)
!6037 = !DILocalVariable(name: "const_hz", arg: 4, scope: !6031, file: !6024, line: 103, type: !166)
!6038 = !DILocalVariable(name: "result32", arg: 5, scope: !6031, file: !6024, line: 104, type: !166)
!6039 = !DILocalVariable(name: "round_up", arg: 6, scope: !6031, file: !6024, line: 104, type: !166)
!6040 = !DILocalVariable(name: "round_off", arg: 7, scope: !6031, file: !6024, line: 105, type: !166)
!6041 = !DILocalVariable(name: "mul_ratio", scope: !6031, file: !6024, line: 107, type: !166)
!6042 = !DILocalVariable(name: "div_ratio", scope: !6031, file: !6024, line: 109, type: !166)
!6043 = !DILocalVariable(name: "off", scope: !6031, file: !6024, line: 116, type: !1608)
!6044 = !DILocalVariable(name: "rdivisor", scope: !6045, file: !6024, line: 119, type: !132)
!6045 = distinct !DILexicalBlock(scope: !6046, file: !6024, line: 118, column: 18)
!6046 = distinct !DILexicalBlock(scope: !6031, file: !6024, line: 118, column: 6)
!6047 = !DILocation(line: 0, scope: !6031, inlinedAt: !6048)
!6048 = distinct !DILocation(line: 406, column: 9, scope: !6023)
!6049 = !DILocation(line: 145, column: 13, scope: !6050, inlinedAt: !6048)
!6050 = distinct !DILexicalBlock(scope: !6051, file: !6024, line: 144, column: 10)
!6051 = distinct !DILexicalBlock(scope: !6052, file: !6024, line: 142, column: 7)
!6052 = distinct !DILexicalBlock(scope: !6053, file: !6024, line: 141, column: 24)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !6024, line: 141, column: 13)
!6054 = distinct !DILexicalBlock(scope: !6031, file: !6024, line: 134, column: 6)
!6055 = !DILocation(line: 406, column: 2, scope: !6023)
!6056 = distinct !DISubprogram(name: "k_sem_take", scope: !3689, file: !3689, line: 1044, type: !6057, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6064)
!6057 = !DISubroutineType(types: !6058)
!6058 = !{!103, !6059, !6060}
!6059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5867, size: 32)
!6060 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1712, line: 67, baseType: !6061)
!6061 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1712, line: 65, size: 64, elements: !6062)
!6062 = !{!6063}
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !6061, file: !1712, line: 66, baseType: !1711, size: 64)
!6064 = !{!6065, !6066}
!6065 = !DILocalVariable(name: "sem", arg: 1, scope: !6056, file: !3689, line: 1044, type: !6059)
!6066 = !DILocalVariable(name: "timeout", arg: 2, scope: !6056, file: !3689, line: 1044, type: !6060)
!6067 = !DILocation(line: 0, scope: !6056)
!6068 = !DILocation(line: 1053, column: 2, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6056, file: !3689, line: 1053, column: 2)
!6070 = !{i64 2154746138}
!6071 = !DILocation(line: 1054, column: 9, scope: !6056)
!6072 = !DILocation(line: 1054, column: 2, scope: !6056)
!6073 = distinct !DISubprogram(name: "uart_irq_tx_enable", scope: !5946, file: !5946, line: 193, type: !2693, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6074)
!6074 = !{!6075}
!6075 = !DILocalVariable(name: "dev", arg: 1, scope: !6073, file: !5946, line: 193, type: !2642)
!6076 = !DILocation(line: 0, scope: !6073)
!6077 = !DILocation(line: 202, column: 2, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6073, file: !5946, line: 202, column: 2)
!6079 = !{i64 2155011222}
!6080 = !DILocation(line: 203, column: 2, scope: !6073)
!6081 = !DILocation(line: 204, column: 1, scope: !6073)
!6082 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_enable", scope: !212, file: !212, line: 857, type: !2693, scopeLine: 858, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6083)
!6083 = !{!6084, !6085}
!6084 = !DILocalVariable(name: "dev", arg: 1, scope: !6082, file: !212, line: 857, type: !2642)
!6085 = !DILocalVariable(name: "api", scope: !6082, file: !212, line: 860, type: !2634)
!6086 = !DILocation(line: 0, scope: !6082)
!6087 = !DILocation(line: 861, column: 40, scope: !6082)
!6088 = !DILocation(line: 863, column: 11, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6082, file: !212, line: 863, column: 6)
!6090 = !DILocation(line: 863, column: 25, scope: !6089)
!6091 = !DILocation(line: 863, column: 6, scope: !6082)
!6092 = !DILocation(line: 864, column: 3, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6089, file: !212, line: 863, column: 34)
!6094 = !DILocation(line: 865, column: 2, scope: !6093)
!6095 = !DILocation(line: 869, column: 1, scope: !6082)
!6096 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !212, file: !212, line: 574, type: !2659, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6097)
!6097 = !{!6098, !6099, !6100}
!6098 = !DILocalVariable(name: "dev", arg: 1, scope: !6096, file: !212, line: 574, type: !2642)
!6099 = !DILocalVariable(name: "out_char", arg: 2, scope: !6096, file: !212, line: 575, type: !164)
!6100 = !DILocalVariable(name: "api", scope: !6096, file: !212, line: 577, type: !2634)
!6101 = !DILocation(line: 0, scope: !6096)
!6102 = !DILocation(line: 578, column: 40, scope: !6096)
!6103 = !DILocation(line: 580, column: 7, scope: !6096)
!6104 = !DILocation(line: 580, column: 2, scope: !6096)
!6105 = !DILocation(line: 581, column: 1, scope: !6096)
!6106 = distinct !DISubprogram(name: "tty_read", scope: !5857, file: !5857, line: 206, type: !6107, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6109)
!6107 = !DISubroutineType(types: !6108)
!6108 = !{!5860, !5862, !102, !356}
!6109 = !{!6110, !6111, !6112, !6113, !6114, !6115}
!6110 = !DILocalVariable(name: "tty", arg: 1, scope: !6106, file: !5857, line: 206, type: !5862)
!6111 = !DILocalVariable(name: "buf", arg: 2, scope: !6106, file: !5857, line: 206, type: !102)
!6112 = !DILocalVariable(name: "size", arg: 3, scope: !6106, file: !5857, line: 206, type: !356)
!6113 = !DILocalVariable(name: "p", scope: !6106, file: !5857, line: 208, type: !270)
!6114 = !DILocalVariable(name: "out_size", scope: !6106, file: !5857, line: 209, type: !356)
!6115 = !DILocalVariable(name: "res", scope: !6106, file: !5857, line: 210, type: !103)
!6116 = !DILocation(line: 0, scope: !6106)
!6117 = !DILocation(line: 212, column: 11, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6106, file: !5857, line: 212, column: 6)
!6119 = !DILocation(line: 212, column: 25, scope: !6118)
!6120 = !DILocation(line: 212, column: 6, scope: !6106)
!6121 = !DILocation(line: 216, column: 2, scope: !6106)
!6122 = !DILocation(line: 213, column: 10, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6118, file: !5857, line: 212, column: 32)
!6124 = !DILocation(line: 213, column: 3, scope: !6123)
!6125 = !DILocation(line: 216, column: 13, scope: !6106)
!6126 = !DILocation(line: 217, column: 9, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6106, file: !5857, line: 216, column: 17)
!6128 = !DILocation(line: 218, column: 11, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6127, file: !5857, line: 218, column: 7)
!6130 = !DILocation(line: 218, column: 7, scope: !6127)
!6131 = !DILocation(line: 220, column: 17, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6133, file: !5857, line: 220, column: 8)
!6133 = distinct !DILexicalBlock(scope: !6129, file: !5857, line: 218, column: 16)
!6134 = !DILocation(line: 220, column: 8, scope: !6133)
!6135 = !DILocation(line: 221, column: 13, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6132, file: !5857, line: 220, column: 23)
!6137 = !DILocation(line: 221, column: 5, scope: !6136)
!6138 = !DILocation(line: 221, column: 11, scope: !6136)
!6139 = !DILocation(line: 222, column: 5, scope: !6136)
!6140 = !DILocation(line: 234, column: 10, scope: !6127)
!6141 = !DILocation(line: 234, column: 5, scope: !6127)
!6142 = !DILocation(line: 234, column: 8, scope: !6127)
!6143 = !DILocation(line: 235, column: 11, scope: !6127)
!6144 = distinct !{!6144, !6121, !6145}
!6145 = !DILocation(line: 236, column: 2, scope: !6106)
!6146 = !DILocation(line: 239, column: 1, scope: !6106)
!6147 = distinct !DISubprogram(name: "tty_read_unbuf", scope: !5857, file: !5857, line: 162, type: !6107, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6148)
!6148 = !{!6149, !6150, !6151, !6152, !6153, !6154, !6155, !6156}
!6149 = !DILocalVariable(name: "tty", arg: 1, scope: !6147, file: !5857, line: 162, type: !5862)
!6150 = !DILocalVariable(name: "buf", arg: 2, scope: !6147, file: !5857, line: 162, type: !102)
!6151 = !DILocalVariable(name: "size", arg: 3, scope: !6147, file: !5857, line: 162, type: !356)
!6152 = !DILocalVariable(name: "p", scope: !6147, file: !5857, line: 164, type: !270)
!6153 = !DILocalVariable(name: "out_size", scope: !6147, file: !5857, line: 165, type: !356)
!6154 = !DILocalVariable(name: "res", scope: !6147, file: !5857, line: 166, type: !103)
!6155 = !DILocalVariable(name: "timeout", scope: !6147, file: !5857, line: 167, type: !132)
!6156 = !DILocalVariable(name: "c", scope: !6157, file: !5857, line: 170, type: !163)
!6157 = distinct !DILexicalBlock(scope: !6147, file: !5857, line: 169, column: 15)
!6158 = !DILocation(line: 0, scope: !6147)
!6159 = !DILocation(line: 169, column: 2, scope: !6147)
!6160 = !DILocation(line: 167, column: 26, scope: !6147)
!6161 = !DILocation(line: 170, column: 3, scope: !6157)
!6162 = !DILocation(line: 171, column: 27, scope: !6157)
!6163 = !DILocation(line: 0, scope: !6157)
!6164 = !DILocation(line: 171, column: 9, scope: !6157)
!6165 = !DILocation(line: 172, column: 11, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6157, file: !5857, line: 172, column: 7)
!6167 = !DILocation(line: 172, column: 7, scope: !6157)
!6168 = !DILocation(line: 177, column: 17, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6170, file: !5857, line: 177, column: 8)
!6170 = distinct !DILexicalBlock(scope: !6166, file: !5857, line: 172, column: 18)
!6171 = !DILocation(line: 177, column: 8, scope: !6170)
!6172 = !DILocation(line: 178, column: 5, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6169, file: !5857, line: 177, column: 23)
!6174 = !DILocation(line: 178, column: 11, scope: !6173)
!6175 = !DILocation(line: 201, column: 2, scope: !6147)
!6176 = !DILocation(line: 184, column: 11, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6157, file: !5857, line: 184, column: 7)
!6178 = !DILocation(line: 184, column: 7, scope: !6157)
!6179 = !DILocation(line: 185, column: 11, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6177, file: !5857, line: 184, column: 17)
!6181 = !DILocation(line: 185, column: 6, scope: !6180)
!6182 = !DILocation(line: 185, column: 9, scope: !6180)
!6183 = !DILocation(line: 186, column: 12, scope: !6180)
!6184 = !DILocation(line: 187, column: 8, scope: !6180)
!6185 = !DILocation(line: 190, column: 12, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6157, file: !5857, line: 190, column: 7)
!6187 = !DILocation(line: 190, column: 17, scope: !6186)
!6188 = !DILocation(line: 191, column: 17, scope: !6186)
!6189 = !DILocation(line: 191, column: 36, scope: !6186)
!6190 = !DILocation(line: 191, column: 46, scope: !6186)
!6191 = !DILocation(line: 191, column: 49, scope: !6186)
!6192 = !DILocation(line: 190, column: 7, scope: !6157)
!6193 = !DILocation(line: 198, column: 11, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6157, file: !5857, line: 198, column: 7)
!6195 = !DILocation(line: 198, column: 7, scope: !6157)
!6196 = !DILocation(line: 199, column: 12, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6194, file: !5857, line: 198, column: 18)
!6198 = !DILocation(line: 199, column: 4, scope: !6197)
!6199 = !DILocation(line: 200, column: 3, scope: !6197)
!6200 = !DILocation(line: 204, column: 1, scope: !6147)
!6201 = distinct !DISubprogram(name: "tty_getchar", scope: !5857, file: !5857, line: 141, type: !6202, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6204)
!6202 = !DISubroutineType(types: !6203)
!6203 = !{!103, !5862}
!6204 = !{!6205, !6206, !6207, !6208}
!6205 = !DILocalVariable(name: "tty", arg: 1, scope: !6201, file: !5857, line: 141, type: !5862)
!6206 = !DILocalVariable(name: "key", scope: !6201, file: !5857, line: 143, type: !32)
!6207 = !DILocalVariable(name: "c", scope: !6201, file: !5857, line: 144, type: !163)
!6208 = !DILocalVariable(name: "res", scope: !6201, file: !5857, line: 145, type: !103)
!6209 = !DILocation(line: 0, scope: !6201)
!6210 = !DILocation(line: 147, column: 25, scope: !6201)
!6211 = !DILocation(line: 147, column: 33, scope: !6201)
!6212 = !DILocation(line: 147, column: 8, scope: !6201)
!6213 = !DILocation(line: 148, column: 10, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6201, file: !5857, line: 148, column: 6)
!6215 = !DILocation(line: 148, column: 6, scope: !6201)
!6216 = !DILocation(line: 55, column: 2, scope: !5974, inlinedAt: !6217)
!6217 = distinct !DILocation(line: 152, column: 8, scope: !6201)
!6218 = !DILocation(line: 0, scope: !5974, inlinedAt: !6217)
!6219 = !DILocation(line: 153, column: 11, scope: !6201)
!6220 = !DILocation(line: 153, column: 27, scope: !6201)
!6221 = !DILocation(line: 153, column: 33, scope: !6201)
!6222 = !DILocation(line: 153, column: 6, scope: !6201)
!6223 = !DILocation(line: 154, column: 6, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6201, file: !5857, line: 154, column: 6)
!6225 = !DILocation(line: 154, column: 26, scope: !6224)
!6226 = !DILocation(line: 154, column: 18, scope: !6224)
!6227 = !DILocation(line: 154, column: 6, scope: !6201)
!6228 = !DILocation(line: 0, scope: !5994, inlinedAt: !6229)
!6229 = distinct !DILocation(line: 157, column: 2, scope: !6201)
!6230 = !DILocation(line: 95, column: 2, scope: !5994, inlinedAt: !6229)
!6231 = !DILocation(line: 159, column: 9, scope: !6201)
!6232 = !DILocation(line: 159, column: 2, scope: !6201)
!6233 = !DILocation(line: 160, column: 1, scope: !6201)
!6234 = distinct !DISubprogram(name: "uart_poll_in", scope: !5946, file: !5946, line: 47, type: !2640, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6235)
!6235 = !{!6236, !6237}
!6236 = !DILocalVariable(name: "dev", arg: 1, scope: !6234, file: !5946, line: 47, type: !2642)
!6237 = !DILocalVariable(name: "p_char", arg: 2, scope: !6234, file: !5946, line: 47, type: !233)
!6238 = !DILocation(line: 0, scope: !6234)
!6239 = !DILocation(line: 56, column: 2, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6234, file: !5946, line: 56, column: 2)
!6241 = !{i64 2155010814}
!6242 = !DILocation(line: 57, column: 9, scope: !6234)
!6243 = !DILocation(line: 57, column: 2, scope: !6234)
!6244 = distinct !DISubprogram(name: "k_sleep", scope: !3689, file: !3689, line: 91, type: !6245, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6247)
!6245 = !DISubroutineType(types: !6246)
!6246 = !{!344, !6060}
!6247 = !{!6248}
!6248 = !DILocalVariable(name: "timeout", arg: 1, scope: !6244, file: !3689, line: 91, type: !6060)
!6249 = !DILocation(line: 0, scope: !6244)
!6250 = !DILocation(line: 99, column: 2, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6244, file: !3689, line: 99, column: 2)
!6252 = !{i64 2154742294}
!6253 = !DILocation(line: 100, column: 9, scope: !6244)
!6254 = !DILocation(line: 100, column: 2, scope: !6244)
!6255 = distinct !DISubprogram(name: "z_impl_uart_poll_in", scope: !212, file: !212, line: 504, type: !2640, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6256)
!6256 = !{!6257, !6258, !6259}
!6257 = !DILocalVariable(name: "dev", arg: 1, scope: !6255, file: !212, line: 504, type: !2642)
!6258 = !DILocalVariable(name: "p_char", arg: 2, scope: !6255, file: !212, line: 505, type: !233)
!6259 = !DILocalVariable(name: "api", scope: !6255, file: !212, line: 507, type: !2634)
!6260 = !DILocation(line: 0, scope: !6255)
!6261 = !DILocation(line: 508, column: 40, scope: !6255)
!6262 = !DILocation(line: 510, column: 11, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6255, file: !212, line: 510, column: 6)
!6264 = !DILocation(line: 510, column: 19, scope: !6263)
!6265 = !DILocation(line: 510, column: 6, scope: !6255)
!6266 = !DILocation(line: 514, column: 9, scope: !6255)
!6267 = !DILocation(line: 514, column: 2, scope: !6255)
!6268 = !DILocation(line: 515, column: 1, scope: !6255)
!6269 = distinct !DISubprogram(name: "tty_init", scope: !5857, file: !5857, line: 241, type: !6270, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6272)
!6270 = !DISubroutineType(types: !6271)
!6271 = !{!103, !5862, !2642}
!6272 = !{!6273, !6274}
!6273 = !DILocalVariable(name: "tty", arg: 1, scope: !6269, file: !5857, line: 241, type: !5862)
!6274 = !DILocalVariable(name: "uart_dev", arg: 2, scope: !6269, file: !5857, line: 241, type: !2642)
!6275 = !DILocation(line: 0, scope: !6269)
!6276 = !DILocation(line: 243, column: 7, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6269, file: !5857, line: 243, column: 6)
!6278 = !DILocation(line: 243, column: 6, scope: !6269)
!6279 = !DILocation(line: 247, column: 7, scope: !6269)
!6280 = !DILocation(line: 247, column: 16, scope: !6269)
!6281 = !DILocation(line: 250, column: 7, scope: !6269)
!6282 = !DILocation(line: 250, column: 18, scope: !6269)
!6283 = !DILocation(line: 251, column: 7, scope: !6269)
!6284 = !DILocation(line: 251, column: 21, scope: !6269)
!6285 = !DILocation(line: 252, column: 7, scope: !6269)
!6286 = !DILocation(line: 252, column: 18, scope: !6269)
!6287 = !DILocation(line: 253, column: 7, scope: !6269)
!6288 = !DILocation(line: 253, column: 21, scope: !6269)
!6289 = !DILocation(line: 255, column: 49, scope: !6269)
!6290 = !DILocation(line: 255, column: 56, scope: !6269)
!6291 = !DILocation(line: 255, column: 35, scope: !6269)
!6292 = !DILocation(line: 255, column: 42, scope: !6269)
!6293 = !DILocation(line: 255, column: 21, scope: !6269)
!6294 = !DILocation(line: 255, column: 28, scope: !6269)
!6295 = !DILocation(line: 255, column: 7, scope: !6269)
!6296 = !DILocation(line: 255, column: 14, scope: !6269)
!6297 = !DILocation(line: 257, column: 7, scope: !6269)
!6298 = !DILocation(line: 257, column: 18, scope: !6269)
!6299 = !DILocation(line: 258, column: 7, scope: !6269)
!6300 = !DILocation(line: 258, column: 18, scope: !6269)
!6301 = !DILocation(line: 260, column: 58, scope: !6269)
!6302 = !DILocation(line: 260, column: 2, scope: !6269)
!6303 = !DILocation(line: 262, column: 2, scope: !6269)
!6304 = !DILocation(line: 263, column: 1, scope: !6269)
!6305 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !212, file: !212, line: 1163, type: !2707, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6306)
!6306 = !{!6307, !6308, !6309, !6310}
!6307 = !DILocalVariable(name: "dev", arg: 1, scope: !6305, file: !212, line: 1163, type: !2642)
!6308 = !DILocalVariable(name: "cb", arg: 2, scope: !6305, file: !212, line: 1164, type: !2709)
!6309 = !DILocalVariable(name: "user_data", arg: 3, scope: !6305, file: !212, line: 1165, type: !102)
!6310 = !DILocalVariable(name: "api", scope: !6305, file: !212, line: 1168, type: !2634)
!6311 = !DILocation(line: 0, scope: !6305)
!6312 = !DILocation(line: 1169, column: 40, scope: !6305)
!6313 = !DILocation(line: 1171, column: 11, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6305, file: !212, line: 1171, column: 6)
!6315 = !DILocation(line: 1171, column: 20, scope: !6314)
!6316 = !DILocation(line: 1171, column: 29, scope: !6314)
!6317 = !DILocation(line: 1171, column: 46, scope: !6314)
!6318 = !DILocation(line: 1171, column: 6, scope: !6305)
!6319 = !DILocation(line: 1172, column: 3, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6314, file: !212, line: 1171, column: 56)
!6321 = !DILocation(line: 1173, column: 2, scope: !6320)
!6322 = !DILocation(line: 1179, column: 1, scope: !6305)
!6323 = distinct !DISubprogram(name: "tty_uart_isr", scope: !5857, file: !5857, line: 15, type: !2711, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6324)
!6324 = !{!6325, !6326, !6327, !6328}
!6325 = !DILocalVariable(name: "dev", arg: 1, scope: !6323, file: !5857, line: 15, type: !2642)
!6326 = !DILocalVariable(name: "user_data", arg: 2, scope: !6323, file: !5857, line: 15, type: !102)
!6327 = !DILocalVariable(name: "tty", scope: !6323, file: !5857, line: 17, type: !5862)
!6328 = !DILocalVariable(name: "c", scope: !6329, file: !5857, line: 22, type: !163)
!6329 = distinct !DILexicalBlock(scope: !6330, file: !5857, line: 21, column: 30)
!6330 = distinct !DILexicalBlock(scope: !6323, file: !5857, line: 21, column: 6)
!6331 = !DILocation(line: 0, scope: !6323)
!6332 = !DILocation(line: 17, column: 27, scope: !6323)
!6333 = !DILocation(line: 19, column: 2, scope: !6323)
!6334 = !DILocation(line: 21, column: 6, scope: !6330)
!6335 = !DILocation(line: 21, column: 6, scope: !6323)
!6336 = !DILocation(line: 22, column: 3, scope: !6329)
!6337 = !DILocation(line: 0, scope: !6329)
!6338 = !DILocation(line: 25, column: 8, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6340, file: !5857, line: 25, column: 8)
!6340 = distinct !DILexicalBlock(scope: !6329, file: !5857, line: 24, column: 13)
!6341 = !DILocation(line: 25, column: 35, scope: !6339)
!6342 = !DILocation(line: 25, column: 8, scope: !6340)
!6343 = !DILocation(line: 28, column: 28, scope: !6340)
!6344 = !DILocation(line: 28, column: 4, scope: !6340)
!6345 = distinct !{!6345, !6346, !6347}
!6346 = !DILocation(line: 24, column: 3, scope: !6329)
!6347 = !DILocation(line: 29, column: 3, scope: !6329)
!6348 = !DILocation(line: 30, column: 2, scope: !6330)
!6349 = !DILocation(line: 30, column: 2, scope: !6329)
!6350 = !DILocation(line: 32, column: 6, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6323, file: !5857, line: 32, column: 6)
!6352 = !DILocation(line: 32, column: 6, scope: !6323)
!6353 = !DILocation(line: 33, column: 12, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6355, file: !5857, line: 33, column: 7)
!6355 = distinct !DILexicalBlock(scope: !6351, file: !5857, line: 32, column: 30)
!6356 = !DILocation(line: 33, column: 27, scope: !6354)
!6357 = !DILocation(line: 33, column: 19, scope: !6354)
!6358 = !DILocation(line: 33, column: 7, scope: !6355)
!6359 = !DILocation(line: 37, column: 4, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6354, file: !5857, line: 33, column: 35)
!6361 = !DILocation(line: 38, column: 3, scope: !6360)
!6362 = !DILocation(line: 33, column: 7, scope: !6354)
!6363 = !DILocation(line: 39, column: 30, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6354, file: !5857, line: 38, column: 10)
!6365 = !DILocation(line: 39, column: 52, scope: !6364)
!6366 = !DILocation(line: 39, column: 25, scope: !6364)
!6367 = !DILocation(line: 39, column: 4, scope: !6364)
!6368 = !DILocation(line: 40, column: 13, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6364, file: !5857, line: 40, column: 8)
!6370 = !DILocation(line: 40, column: 8, scope: !6369)
!6371 = !DILocation(line: 40, column: 28, scope: !6369)
!6372 = !DILocation(line: 40, column: 20, scope: !6369)
!6373 = !DILocation(line: 40, column: 8, scope: !6364)
!6374 = !DILocation(line: 41, column: 17, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6369, file: !5857, line: 40, column: 43)
!6376 = !DILocation(line: 42, column: 4, scope: !6375)
!6377 = !DILocation(line: 43, column: 21, scope: !6364)
!6378 = !DILocation(line: 43, column: 4, scope: !6364)
!6379 = !DILocation(line: 46, column: 1, scope: !6323)
!6380 = distinct !DISubprogram(name: "uart_irq_update", scope: !5946, file: !5946, line: 360, type: !2663, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6381)
!6381 = !{!6382}
!6382 = !DILocalVariable(name: "dev", arg: 1, scope: !6380, file: !5946, line: 360, type: !2642)
!6383 = !DILocation(line: 0, scope: !6380)
!6384 = !DILocation(line: 368, column: 2, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6380, file: !5946, line: 368, column: 2)
!6386 = !{i64 2155011698}
!6387 = !DILocation(line: 369, column: 9, scope: !6380)
!6388 = !DILocation(line: 369, column: 2, scope: !6380)
!6389 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !212, file: !212, line: 1024, type: !2663, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6390)
!6390 = !{!6391, !6392}
!6391 = !DILocalVariable(name: "dev", arg: 1, scope: !6389, file: !212, line: 1024, type: !2642)
!6392 = !DILocalVariable(name: "api", scope: !6389, file: !212, line: 1027, type: !2634)
!6393 = !DILocation(line: 0, scope: !6389)
!6394 = !DILocation(line: 1028, column: 40, scope: !6389)
!6395 = !DILocation(line: 1030, column: 11, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6389, file: !212, line: 1030, column: 6)
!6397 = !DILocation(line: 1030, column: 24, scope: !6396)
!6398 = !DILocation(line: 1030, column: 6, scope: !6389)
!6399 = !DILocation(line: 1033, column: 9, scope: !6389)
!6400 = !DILocation(line: 1033, column: 2, scope: !6389)
!6401 = !DILocation(line: 1038, column: 1, scope: !6389)
!6402 = distinct !DISubprogram(name: "uart_fifo_read", scope: !212, file: !212, line: 785, type: !2689, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6403)
!6403 = !{!6404, !6405, !6406, !6407}
!6404 = !DILocalVariable(name: "dev", arg: 1, scope: !6402, file: !212, line: 785, type: !2642)
!6405 = !DILocalVariable(name: "rx_data", arg: 2, scope: !6402, file: !212, line: 785, type: !270)
!6406 = !DILocalVariable(name: "size", arg: 3, scope: !6402, file: !212, line: 786, type: !271)
!6407 = !DILocalVariable(name: "api", scope: !6402, file: !212, line: 789, type: !2634)
!6408 = !DILocation(line: 0, scope: !6402)
!6409 = !DILocation(line: 790, column: 40, scope: !6402)
!6410 = !DILocation(line: 792, column: 11, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6402, file: !212, line: 792, column: 6)
!6412 = !DILocation(line: 792, column: 21, scope: !6411)
!6413 = !DILocation(line: 792, column: 6, scope: !6402)
!6414 = !DILocation(line: 796, column: 9, scope: !6402)
!6415 = !DILocation(line: 796, column: 2, scope: !6402)
!6416 = !DILocation(line: 803, column: 1, scope: !6402)
!6417 = distinct !DISubprogram(name: "tty_irq_input_hook", scope: !5857, file: !5857, line: 48, type: !5957, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6418)
!6418 = !{!6419, !6420, !6421}
!6419 = !DILocalVariable(name: "tty", arg: 1, scope: !6417, file: !5857, line: 48, type: !5862)
!6420 = !DILocalVariable(name: "c", arg: 2, scope: !6417, file: !5857, line: 48, type: !163)
!6421 = !DILocalVariable(name: "rx_next", scope: !6417, file: !5857, line: 50, type: !103)
!6422 = !DILocation(line: 0, scope: !6417)
!6423 = !DILocation(line: 50, column: 21, scope: !6417)
!6424 = !DILocation(line: 50, column: 16, scope: !6417)
!6425 = !DILocation(line: 50, column: 28, scope: !6417)
!6426 = !DILocation(line: 52, column: 22, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6417, file: !5857, line: 52, column: 6)
!6428 = !DILocation(line: 52, column: 14, scope: !6427)
!6429 = !DILocation(line: 52, column: 6, scope: !6417)
!6430 = !DILocation(line: 56, column: 22, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6417, file: !5857, line: 56, column: 6)
!6432 = !DILocation(line: 56, column: 17, scope: !6431)
!6433 = !DILocation(line: 56, column: 14, scope: !6431)
!6434 = !DILocation(line: 56, column: 6, scope: !6417)
!6435 = !DILocation(line: 58, column: 3, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6431, file: !5857, line: 56, column: 30)
!6437 = !DILocation(line: 59, column: 3, scope: !6436)
!6438 = !DILocation(line: 62, column: 7, scope: !6417)
!6439 = !DILocation(line: 62, column: 2, scope: !6417)
!6440 = !DILocation(line: 62, column: 31, scope: !6417)
!6441 = !DILocation(line: 63, column: 16, scope: !6417)
!6442 = !DILocation(line: 63, column: 14, scope: !6417)
!6443 = !DILocation(line: 64, column: 19, scope: !6417)
!6444 = !DILocation(line: 64, column: 2, scope: !6417)
!6445 = !DILocation(line: 66, column: 2, scope: !6417)
!6446 = !DILocation(line: 67, column: 1, scope: !6417)
!6447 = distinct !DISubprogram(name: "uart_irq_tx_ready", scope: !212, file: !212, line: 910, type: !2663, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6448)
!6448 = !{!6449, !6450}
!6449 = !DILocalVariable(name: "dev", arg: 1, scope: !6447, file: !212, line: 910, type: !2642)
!6450 = !DILocalVariable(name: "api", scope: !6447, file: !212, line: 913, type: !2634)
!6451 = !DILocation(line: 0, scope: !6447)
!6452 = !DILocation(line: 914, column: 40, scope: !6447)
!6453 = !DILocation(line: 916, column: 11, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6447, file: !212, line: 916, column: 6)
!6455 = !DILocation(line: 916, column: 24, scope: !6454)
!6456 = !DILocation(line: 916, column: 6, scope: !6447)
!6457 = !DILocation(line: 920, column: 9, scope: !6447)
!6458 = !DILocation(line: 920, column: 2, scope: !6447)
!6459 = !DILocation(line: 925, column: 1, scope: !6447)
!6460 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5946, file: !5946, line: 217, type: !2693, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6461)
!6461 = !{!6462}
!6462 = !DILocalVariable(name: "dev", arg: 1, scope: !6460, file: !5946, line: 217, type: !2642)
!6463 = !DILocation(line: 0, scope: !6460)
!6464 = !DILocation(line: 226, column: 2, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6460, file: !5946, line: 226, column: 2)
!6466 = !{i64 2155011290}
!6467 = !DILocation(line: 227, column: 2, scope: !6460)
!6468 = !DILocation(line: 228, column: 1, scope: !6460)
!6469 = distinct !DISubprogram(name: "uart_fifo_fill", scope: !212, file: !212, line: 699, type: !2685, scopeLine: 702, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6470)
!6470 = !{!6471, !6472, !6473, !6474}
!6471 = !DILocalVariable(name: "dev", arg: 1, scope: !6469, file: !212, line: 699, type: !2642)
!6472 = !DILocalVariable(name: "tx_data", arg: 2, scope: !6469, file: !212, line: 700, type: !264)
!6473 = !DILocalVariable(name: "size", arg: 3, scope: !6469, file: !212, line: 701, type: !103)
!6474 = !DILocalVariable(name: "api", scope: !6469, file: !212, line: 704, type: !2634)
!6475 = !DILocation(line: 0, scope: !6469)
!6476 = !DILocation(line: 705, column: 40, scope: !6469)
!6477 = !DILocation(line: 707, column: 11, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6469, file: !212, line: 707, column: 6)
!6479 = !DILocation(line: 707, column: 21, scope: !6478)
!6480 = !DILocation(line: 707, column: 6, scope: !6469)
!6481 = !DILocation(line: 711, column: 9, scope: !6469)
!6482 = !DILocation(line: 711, column: 2, scope: !6469)
!6483 = !DILocation(line: 718, column: 1, scope: !6469)
!6484 = distinct !DISubprogram(name: "k_sem_give", scope: !3689, file: !3689, line: 1061, type: !6485, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6487)
!6485 = !DISubroutineType(types: !6486)
!6486 = !{null, !6059}
!6487 = !{!6488}
!6488 = !DILocalVariable(name: "sem", arg: 1, scope: !6484, file: !3689, line: 1061, type: !6059)
!6489 = !DILocation(line: 0, scope: !6484)
!6490 = !DILocation(line: 1070, column: 2, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6484, file: !3689, line: 1070, column: 2)
!6492 = !{i64 2154746206}
!6493 = !DILocation(line: 1071, column: 2, scope: !6484)
!6494 = !DILocation(line: 1072, column: 1, scope: !6484)
!6495 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !212, file: !212, line: 878, type: !2693, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6496)
!6496 = !{!6497, !6498}
!6497 = !DILocalVariable(name: "dev", arg: 1, scope: !6495, file: !212, line: 878, type: !2642)
!6498 = !DILocalVariable(name: "api", scope: !6495, file: !212, line: 881, type: !2634)
!6499 = !DILocation(line: 0, scope: !6495)
!6500 = !DILocation(line: 882, column: 40, scope: !6495)
!6501 = !DILocation(line: 884, column: 11, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6495, file: !212, line: 884, column: 6)
!6503 = !DILocation(line: 884, column: 26, scope: !6502)
!6504 = !DILocation(line: 884, column: 6, scope: !6495)
!6505 = !DILocation(line: 885, column: 3, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6502, file: !212, line: 884, column: 35)
!6507 = !DILocation(line: 886, column: 2, scope: !6506)
!6508 = !DILocation(line: 890, column: 1, scope: !6495)
!6509 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !212, file: !212, line: 1136, type: !2663, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6510)
!6510 = !{!6511, !6512}
!6511 = !DILocalVariable(name: "dev", arg: 1, scope: !6509, file: !212, line: 1136, type: !2642)
!6512 = !DILocalVariable(name: "api", scope: !6509, file: !212, line: 1139, type: !2634)
!6513 = !DILocation(line: 0, scope: !6509)
!6514 = !DILocation(line: 1140, column: 40, scope: !6509)
!6515 = !DILocation(line: 1142, column: 11, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6509, file: !212, line: 1142, column: 6)
!6517 = !DILocation(line: 1142, column: 22, scope: !6516)
!6518 = !DILocation(line: 1142, column: 6, scope: !6509)
!6519 = !DILocation(line: 1145, column: 9, scope: !6509)
!6520 = !DILocation(line: 1145, column: 2, scope: !6509)
!6521 = !DILocation(line: 1150, column: 1, scope: !6509)
!6522 = distinct !DISubprogram(name: "tty_set_rx_buf", scope: !5857, file: !5857, line: 265, type: !6523, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6525)
!6523 = !DISubroutineType(types: !6524)
!6524 = !{!103, !5862, !102, !356}
!6525 = !{!6526, !6527, !6528}
!6526 = !DILocalVariable(name: "tty", arg: 1, scope: !6522, file: !5857, line: 265, type: !5862)
!6527 = !DILocalVariable(name: "buf", arg: 2, scope: !6522, file: !5857, line: 265, type: !102)
!6528 = !DILocalVariable(name: "size", arg: 3, scope: !6522, file: !5857, line: 265, type: !356)
!6529 = !DILocation(line: 0, scope: !6522)
!6530 = !DILocation(line: 267, column: 27, scope: !6522)
!6531 = !DILocation(line: 267, column: 2, scope: !6522)
!6532 = !DILocation(line: 269, column: 7, scope: !6522)
!6533 = !DILocation(line: 269, column: 18, scope: !6522)
!6534 = !DILocation(line: 270, column: 7, scope: !6522)
!6535 = !DILocation(line: 270, column: 21, scope: !6522)
!6536 = !DILocation(line: 272, column: 11, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6522, file: !5857, line: 272, column: 6)
!6538 = !DILocation(line: 272, column: 6, scope: !6522)
!6539 = !DILocation(line: 273, column: 20, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6537, file: !5857, line: 272, column: 16)
!6541 = !DILocation(line: 273, column: 3, scope: !6540)
!6542 = !DILocation(line: 274, column: 27, scope: !6540)
!6543 = !DILocation(line: 274, column: 3, scope: !6540)
!6544 = !DILocation(line: 275, column: 2, scope: !6540)
!6545 = !DILocation(line: 277, column: 2, scope: !6522)
!6546 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5946, file: !5946, line: 265, type: !2693, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6547)
!6547 = !{!6548}
!6548 = !DILocalVariable(name: "dev", arg: 1, scope: !6546, file: !5946, line: 265, type: !2642)
!6549 = !DILocation(line: 0, scope: !6546)
!6550 = !DILocation(line: 274, column: 2, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6546, file: !5946, line: 274, column: 2)
!6552 = !{i64 2155011426}
!6553 = !DILocation(line: 275, column: 2, scope: !6546)
!6554 = !DILocation(line: 276, column: 1, scope: !6546)
!6555 = distinct !DISubprogram(name: "k_sem_init", scope: !3689, file: !3689, line: 1026, type: !6556, scopeLine: 1027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6558)
!6556 = !DISubroutineType(types: !6557)
!6557 = !{!103, !6059, !32, !32}
!6558 = !{!6559, !6560, !6561}
!6559 = !DILocalVariable(name: "sem", arg: 1, scope: !6555, file: !3689, line: 1026, type: !6059)
!6560 = !DILocalVariable(name: "initial_count", arg: 2, scope: !6555, file: !3689, line: 1026, type: !32)
!6561 = !DILocalVariable(name: "limit", arg: 3, scope: !6555, file: !3689, line: 1026, type: !32)
!6562 = !DILocation(line: 0, scope: !6555)
!6563 = !DILocation(line: 1036, column: 2, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6555, file: !3689, line: 1036, column: 2)
!6565 = !{i64 2154746070}
!6566 = !DILocation(line: 1037, column: 9, scope: !6555)
!6567 = !DILocation(line: 1037, column: 2, scope: !6555)
!6568 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5946, file: !5946, line: 241, type: !2693, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6569)
!6569 = !{!6570}
!6570 = !DILocalVariable(name: "dev", arg: 1, scope: !6568, file: !5946, line: 241, type: !2642)
!6571 = !DILocation(line: 0, scope: !6568)
!6572 = !DILocation(line: 250, column: 2, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6568, file: !5946, line: 250, column: 2)
!6574 = !{i64 2155011358}
!6575 = !DILocation(line: 251, column: 2, scope: !6568)
!6576 = !DILocation(line: 252, column: 1, scope: !6568)
!6577 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !212, file: !212, line: 934, type: !2693, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6578)
!6578 = !{!6579, !6580}
!6579 = !DILocalVariable(name: "dev", arg: 1, scope: !6577, file: !212, line: 934, type: !2642)
!6580 = !DILocalVariable(name: "api", scope: !6577, file: !212, line: 937, type: !2634)
!6581 = !DILocation(line: 0, scope: !6577)
!6582 = !DILocation(line: 938, column: 40, scope: !6577)
!6583 = !DILocation(line: 940, column: 11, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6577, file: !212, line: 940, column: 6)
!6585 = !DILocation(line: 940, column: 25, scope: !6584)
!6586 = !DILocation(line: 940, column: 6, scope: !6577)
!6587 = !DILocation(line: 941, column: 3, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6584, file: !212, line: 940, column: 34)
!6589 = !DILocation(line: 942, column: 2, scope: !6588)
!6590 = !DILocation(line: 946, column: 1, scope: !6577)
!6591 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !212, file: !212, line: 955, type: !2693, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6592)
!6592 = !{!6593, !6594}
!6593 = !DILocalVariable(name: "dev", arg: 1, scope: !6591, file: !212, line: 955, type: !2642)
!6594 = !DILocalVariable(name: "api", scope: !6591, file: !212, line: 958, type: !2634)
!6595 = !DILocation(line: 0, scope: !6591)
!6596 = !DILocation(line: 959, column: 40, scope: !6591)
!6597 = !DILocation(line: 961, column: 11, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6591, file: !212, line: 961, column: 6)
!6599 = !DILocation(line: 961, column: 26, scope: !6598)
!6600 = !DILocation(line: 961, column: 6, scope: !6591)
!6601 = !DILocation(line: 962, column: 3, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6598, file: !212, line: 961, column: 35)
!6603 = !DILocation(line: 963, column: 2, scope: !6602)
!6604 = !DILocation(line: 967, column: 1, scope: !6591)
!6605 = distinct !DISubprogram(name: "tty_set_tx_buf", scope: !5857, file: !5857, line: 280, type: !6523, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6606)
!6606 = !{!6607, !6608, !6609}
!6607 = !DILocalVariable(name: "tty", arg: 1, scope: !6605, file: !5857, line: 280, type: !5862)
!6608 = !DILocalVariable(name: "buf", arg: 2, scope: !6605, file: !5857, line: 280, type: !102)
!6609 = !DILocalVariable(name: "size", arg: 3, scope: !6605, file: !5857, line: 280, type: !356)
!6610 = !DILocation(line: 0, scope: !6605)
!6611 = !DILocation(line: 282, column: 27, scope: !6605)
!6612 = !DILocation(line: 282, column: 2, scope: !6605)
!6613 = !DILocation(line: 284, column: 7, scope: !6605)
!6614 = !DILocation(line: 284, column: 18, scope: !6605)
!6615 = !DILocation(line: 285, column: 7, scope: !6605)
!6616 = !DILocation(line: 285, column: 21, scope: !6605)
!6617 = !DILocation(line: 287, column: 19, scope: !6605)
!6618 = !DILocation(line: 287, column: 32, scope: !6605)
!6619 = !DILocation(line: 287, column: 2, scope: !6605)
!6620 = !DILocation(line: 293, column: 2, scope: !6605)
!6621 = distinct !DISubprogram(name: "console_write", scope: !297, file: !297, line: 18, type: !6622, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6624)
!6622 = !DISubroutineType(types: !6623)
!6623 = !{!5860, !102, !13, !356}
!6624 = !{!6625, !6626, !6627}
!6625 = !DILocalVariable(name: "dummy", arg: 1, scope: !6621, file: !297, line: 18, type: !102)
!6626 = !DILocalVariable(name: "buf", arg: 2, scope: !6621, file: !297, line: 18, type: !13)
!6627 = !DILocalVariable(name: "size", arg: 3, scope: !6621, file: !297, line: 18, type: !356)
!6628 = !DILocation(line: 0, scope: !6621)
!6629 = !DILocation(line: 22, column: 9, scope: !6621)
!6630 = !DILocation(line: 22, column: 2, scope: !6621)
!6631 = distinct !DISubprogram(name: "console_read", scope: !297, file: !297, line: 25, type: !6632, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6634)
!6632 = !DISubroutineType(types: !6633)
!6633 = !{!5860, !102, !102, !356}
!6634 = !{!6635, !6636, !6637}
!6635 = !DILocalVariable(name: "dummy", arg: 1, scope: !6631, file: !297, line: 25, type: !102)
!6636 = !DILocalVariable(name: "buf", arg: 2, scope: !6631, file: !297, line: 25, type: !102)
!6637 = !DILocalVariable(name: "size", arg: 3, scope: !6631, file: !297, line: 25, type: !356)
!6638 = !DILocation(line: 0, scope: !6631)
!6639 = !DILocation(line: 29, column: 9, scope: !6631)
!6640 = !DILocation(line: 29, column: 2, scope: !6631)
!6641 = distinct !DISubprogram(name: "console_putchar", scope: !297, file: !297, line: 32, type: !1087, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6642)
!6642 = !{!6643}
!6643 = !DILocalVariable(name: "c", arg: 1, scope: !6641, file: !297, line: 32, type: !108)
!6644 = !DILocation(line: 0, scope: !6641)
!6645 = !DILocation(line: 34, column: 9, scope: !6641)
!6646 = !DILocation(line: 34, column: 2, scope: !6641)
!6647 = distinct !DISubprogram(name: "console_getchar", scope: !297, file: !297, line: 37, type: !6648, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6650)
!6648 = !DISubroutineType(types: !6649)
!6649 = !{!103}
!6650 = !{!6651, !6652}
!6651 = !DILocalVariable(name: "c", scope: !6647, file: !297, line: 39, type: !163)
!6652 = !DILocalVariable(name: "res", scope: !6647, file: !297, line: 40, type: !103)
!6653 = !DILocation(line: 39, column: 2, scope: !6647)
!6654 = !DILocation(line: 0, scope: !6647)
!6655 = !DILocation(line: 42, column: 8, scope: !6647)
!6656 = !DILocation(line: 43, column: 10, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6647, file: !297, line: 43, column: 6)
!6658 = !DILocation(line: 43, column: 6, scope: !6647)
!6659 = !DILocation(line: 48, column: 1, scope: !6647)
!6660 = distinct !DISubprogram(name: "console_init", scope: !297, file: !297, line: 50, type: !6648, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6661)
!6661 = !{!6662, !6663, !6664}
!6662 = !DILocalVariable(name: "uart_dev", scope: !6660, file: !297, line: 52, type: !218)
!6663 = !DILocalVariable(name: "ret", scope: !6660, file: !297, line: 53, type: !103)
!6664 = !DILocalVariable(name: "api", scope: !6665, file: !297, line: 68, type: !209)
!6665 = distinct !DILexicalBlock(scope: !6666, file: !297, line: 67, column: 71)
!6666 = distinct !DILexicalBlock(scope: !6660, file: !297, line: 67, column: 6)
!6667 = !DILocation(line: 0, scope: !6660)
!6668 = !DILocation(line: 56, column: 7, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6660, file: !297, line: 56, column: 6)
!6670 = !DILocation(line: 56, column: 6, scope: !6660)
!6671 = !DILocation(line: 60, column: 8, scope: !6660)
!6672 = !DILocation(line: 62, column: 6, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6660, file: !297, line: 62, column: 6)
!6674 = !DILocation(line: 62, column: 6, scope: !6660)
!6675 = !DILocation(line: 69, column: 46, scope: !6665)
!6676 = !DILocation(line: 0, scope: !6665)
!6677 = !DILocation(line: 70, column: 13, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6665, file: !297, line: 70, column: 7)
!6679 = !DILocation(line: 70, column: 8, scope: !6678)
!6680 = !DILocation(line: 75, column: 2, scope: !6660)
!6681 = !DILocation(line: 76, column: 2, scope: !6660)
!6682 = !DILocation(line: 78, column: 2, scope: !6660)
!6683 = !DILocation(line: 79, column: 1, scope: !6660)
!6684 = distinct !DISubprogram(name: "device_is_ready", scope: !6685, file: !6685, line: 47, type: !6686, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6688)
!6685 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!6686 = !DISubroutineType(types: !6687)
!6687 = !{!166, !218}
!6688 = !{!6689}
!6689 = !DILocalVariable(name: "dev", arg: 1, scope: !6684, file: !6685, line: 47, type: !218)
!6690 = !DILocation(line: 0, scope: !6684)
!6691 = !DILocation(line: 55, column: 2, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6684, file: !6685, line: 55, column: 2)
!6693 = !{i64 2154923639}
!6694 = !DILocation(line: 56, column: 9, scope: !6684)
!6695 = !DILocation(line: 56, column: 2, scope: !6684)
!6696 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !6686, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6697)
!6697 = !{!6698}
!6698 = !DILocalVariable(name: "dev", arg: 1, scope: !6696, file: !152, line: 730, type: !218)
!6699 = !DILocation(line: 0, scope: !6696)
!6700 = !DILocation(line: 732, column: 9, scope: !6696)
!6701 = !DILocation(line: 732, column: 2, scope: !6696)
!6702 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6703, file: !6703, line: 57, type: !6704, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6750)
!6703 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6704 = !DISubroutineType(types: !6705)
!6705 = !{null, !32, !6706}
!6706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6707, size: 32)
!6707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6708)
!6708 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2833, line: 141, baseType: !6709)
!6709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2833, line: 97, size: 256, elements: !6710)
!6710 = !{!6711}
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6709, file: !2833, line: 107, baseType: !6712, size: 256)
!6712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2833, line: 98, size: 256, elements: !6713)
!6713 = !{!6714, !6719, !6724, !6729, !6734, !6739, !6744, !6749}
!6714 = !DIDerivedType(tag: DW_TAG_member, scope: !6712, file: !2833, line: 99, baseType: !6715, size: 32)
!6715 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6712, file: !2833, line: 99, size: 32, elements: !6716)
!6716 = !{!6717, !6718}
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6715, file: !2833, line: 99, baseType: !132, size: 32)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6715, file: !2833, line: 99, baseType: !132, size: 32)
!6719 = !DIDerivedType(tag: DW_TAG_member, scope: !6712, file: !2833, line: 100, baseType: !6720, size: 32, offset: 32)
!6720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6712, file: !2833, line: 100, size: 32, elements: !6721)
!6721 = !{!6722, !6723}
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6720, file: !2833, line: 100, baseType: !132, size: 32)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6720, file: !2833, line: 100, baseType: !132, size: 32)
!6724 = !DIDerivedType(tag: DW_TAG_member, scope: !6712, file: !2833, line: 101, baseType: !6725, size: 32, offset: 64)
!6725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6712, file: !2833, line: 101, size: 32, elements: !6726)
!6726 = !{!6727, !6728}
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6725, file: !2833, line: 101, baseType: !132, size: 32)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6725, file: !2833, line: 101, baseType: !132, size: 32)
!6729 = !DIDerivedType(tag: DW_TAG_member, scope: !6712, file: !2833, line: 102, baseType: !6730, size: 32, offset: 96)
!6730 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6712, file: !2833, line: 102, size: 32, elements: !6731)
!6731 = !{!6732, !6733}
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6730, file: !2833, line: 102, baseType: !132, size: 32)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6730, file: !2833, line: 102, baseType: !132, size: 32)
!6734 = !DIDerivedType(tag: DW_TAG_member, scope: !6712, file: !2833, line: 103, baseType: !6735, size: 32, offset: 128)
!6735 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6712, file: !2833, line: 103, size: 32, elements: !6736)
!6736 = !{!6737, !6738}
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6735, file: !2833, line: 103, baseType: !132, size: 32)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6735, file: !2833, line: 103, baseType: !132, size: 32)
!6739 = !DIDerivedType(tag: DW_TAG_member, scope: !6712, file: !2833, line: 104, baseType: !6740, size: 32, offset: 160)
!6740 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6712, file: !2833, line: 104, size: 32, elements: !6741)
!6741 = !{!6742, !6743}
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6740, file: !2833, line: 104, baseType: !132, size: 32)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6740, file: !2833, line: 104, baseType: !132, size: 32)
!6744 = !DIDerivedType(tag: DW_TAG_member, scope: !6712, file: !2833, line: 105, baseType: !6745, size: 32, offset: 192)
!6745 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6712, file: !2833, line: 105, size: 32, elements: !6746)
!6746 = !{!6747, !6748}
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6745, file: !2833, line: 105, baseType: !132, size: 32)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6745, file: !2833, line: 105, baseType: !132, size: 32)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6712, file: !2833, line: 106, baseType: !132, size: 32, offset: 224)
!6750 = !{!6751, !6752}
!6751 = !DILocalVariable(name: "reason", arg: 1, scope: !6702, file: !6703, line: 57, type: !32)
!6752 = !DILocalVariable(name: "esf", arg: 2, scope: !6702, file: !6703, line: 57, type: !6706)
!6753 = !DILocation(line: 0, scope: !6702)
!6754 = !DILocation(line: 63, column: 2, scope: !6702)
!6755 = !DILocation(line: 64, column: 1, scope: !6702)
!6756 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6703, file: !6703, line: 82, type: !6757, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6772)
!6757 = !DISubroutineType(types: !6758)
!6758 = !{null, !6706, !6759}
!6759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6760, size: 32)
!6760 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !436, line: 37, baseType: !6761)
!6761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !6762)
!6762 = !{!6763, !6764, !6765, !6766, !6767, !6768, !6769, !6770, !6771}
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6761, file: !436, line: 26, baseType: !132, size: 32)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6761, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6761, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6761, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6761, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6761, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6761, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6761, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6761, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!6772 = !{!6773, !6774, !6775}
!6773 = !DILocalVariable(name: "esf", arg: 1, scope: !6756, file: !6703, line: 82, type: !6706)
!6774 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6756, file: !6703, line: 82, type: !6759)
!6775 = !DILocalVariable(name: "reason", scope: !6756, file: !6703, line: 88, type: !32)
!6776 = !DILocation(line: 0, scope: !6756)
!6777 = !DILocation(line: 88, column: 35, scope: !6756)
!6778 = !DILocation(line: 108, column: 2, scope: !6756)
!6779 = !DILocation(line: 131, column: 1, scope: !6756)
!6780 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6703, file: !6703, line: 133, type: !6781, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6783)
!6781 = !DISubroutineType(types: !6782)
!6782 = !{null, !102}
!6783 = !{!6784, !6785, !6786}
!6784 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6780, file: !6703, line: 133, type: !102)
!6785 = !DILocalVariable(name: "ssf_contents", scope: !6780, file: !6703, line: 135, type: !855)
!6786 = !DILocalVariable(name: "oops_esf", scope: !6780, file: !6703, line: 136, type: !6708)
!6787 = !DILocation(line: 0, scope: !6780)
!6788 = !DILocation(line: 136, column: 2, scope: !6780)
!6789 = !DILocation(line: 136, column: 15, scope: !6780)
!6790 = !DILocation(line: 139, column: 22, scope: !6780)
!6791 = !DILocation(line: 139, column: 17, scope: !6780)
!6792 = !DILocation(line: 139, column: 20, scope: !6780)
!6793 = !DILocation(line: 141, column: 2, scope: !6780)
!6794 = !DILocation(line: 142, column: 2, scope: !6780)
!6795 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6796, file: !6796, line: 40, type: !5835, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6797)
!6796 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6797 = !{!6798}
!6798 = !DILocalVariable(name: "irq", arg: 1, scope: !6795, file: !6796, line: 40, type: !32)
!6799 = !DILocation(line: 0, scope: !6795)
!6800 = !DILocation(line: 42, column: 2, scope: !6795)
!6801 = !DILocation(line: 43, column: 1, scope: !6795)
!6802 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !507, file: !507, line: 1684, type: !6803, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6805)
!6803 = !DISubroutineType(types: !6804)
!6804 = !{null, !762}
!6805 = !{!6806}
!6806 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6802, file: !507, line: 1684, type: !762)
!6807 = !DILocation(line: 0, scope: !6802)
!6808 = !DILocation(line: 1686, column: 23, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6802, file: !507, line: 1686, column: 7)
!6810 = !DILocation(line: 1686, column: 7, scope: !6802)
!6811 = !DILocation(line: 1688, column: 5, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6809, file: !507, line: 1687, column: 3)
!6813 = !{i64 2151023811}
!6814 = !DILocation(line: 1689, column: 81, scope: !6812)
!6815 = !DILocation(line: 1689, column: 60, scope: !6812)
!6816 = !DILocation(line: 1689, column: 34, scope: !6812)
!6817 = !DILocation(line: 1689, column: 5, scope: !6812)
!6818 = !DILocation(line: 1689, column: 43, scope: !6812)
!6819 = !DILocation(line: 1690, column: 5, scope: !6812)
!6820 = !{i64 2151023925}
!6821 = !DILocation(line: 1691, column: 3, scope: !6812)
!6822 = !DILocation(line: 1692, column: 1, scope: !6802)
!6823 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6796, file: !6796, line: 45, type: !5835, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6824)
!6824 = !{!6825}
!6825 = !DILocalVariable(name: "irq", arg: 1, scope: !6823, file: !6796, line: 45, type: !32)
!6826 = !DILocation(line: 0, scope: !6823)
!6827 = !DILocation(line: 47, column: 2, scope: !6823)
!6828 = !DILocation(line: 48, column: 1, scope: !6823)
!6829 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !507, file: !507, line: 1722, type: !6803, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6830)
!6830 = !{!6831}
!6831 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6829, file: !507, line: 1722, type: !762)
!6832 = !DILocation(line: 0, scope: !6829)
!6833 = !DILocation(line: 1724, column: 23, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6829, file: !507, line: 1724, column: 7)
!6835 = !DILocation(line: 1724, column: 7, scope: !6829)
!6836 = !DILocation(line: 1726, column: 81, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6834, file: !507, line: 1725, column: 3)
!6838 = !DILocation(line: 1726, column: 60, scope: !6837)
!6839 = !DILocation(line: 1726, column: 34, scope: !6837)
!6840 = !DILocation(line: 1726, column: 5, scope: !6837)
!6841 = !DILocation(line: 1726, column: 43, scope: !6837)
!6842 = !DILocation(line: 271, column: 3, scope: !6843, inlinedAt: !6845)
!6843 = distinct !DISubprogram(name: "__DSB", scope: !6844, file: !6844, line: 269, type: !3249, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !473)
!6844 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6845 = distinct !DILocation(line: 1727, column: 5, scope: !6837)
!6846 = !{i64 3478194}
!6847 = !DILocation(line: 260, column: 3, scope: !6848, inlinedAt: !6849)
!6848 = distinct !DISubprogram(name: "__ISB", scope: !6844, file: !6844, line: 258, type: !3249, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !473)
!6849 = distinct !DILocation(line: 1728, column: 5, scope: !6837)
!6850 = !{i64 3477911}
!6851 = !DILocation(line: 1729, column: 3, scope: !6837)
!6852 = !DILocation(line: 1730, column: 1, scope: !6829)
!6853 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6796, file: !6796, line: 50, type: !6854, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6856)
!6854 = !DISubroutineType(types: !6855)
!6855 = !{!103, !32}
!6856 = !{!6857}
!6857 = !DILocalVariable(name: "irq", arg: 1, scope: !6853, file: !6796, line: 50, type: !32)
!6858 = !DILocation(line: 0, scope: !6853)
!6859 = !DILocation(line: 52, column: 20, scope: !6853)
!6860 = !DILocation(line: 52, column: 9, scope: !6853)
!6861 = !DILocation(line: 52, column: 41, scope: !6853)
!6862 = !DILocation(line: 52, column: 39, scope: !6853)
!6863 = !DILocation(line: 52, column: 2, scope: !6853)
!6864 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6796, file: !6796, line: 64, type: !6865, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6867)
!6865 = !DISubroutineType(types: !6866)
!6866 = !{null, !32, !32, !132}
!6867 = !{!6868, !6869, !6870}
!6868 = !DILocalVariable(name: "irq", arg: 1, scope: !6864, file: !6796, line: 64, type: !32)
!6869 = !DILocalVariable(name: "prio", arg: 2, scope: !6864, file: !6796, line: 64, type: !32)
!6870 = !DILocalVariable(name: "flags", arg: 3, scope: !6864, file: !6796, line: 64, type: !132)
!6871 = !DILocation(line: 0, scope: !6864)
!6872 = !DILocation(line: 83, column: 8, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6874, file: !6796, line: 82, column: 9)
!6874 = distinct !DILexicalBlock(scope: !6864, file: !6796, line: 76, column: 6)
!6875 = !DILocation(line: 95, column: 2, scope: !6864)
!6876 = !DILocation(line: 96, column: 1, scope: !6864)
!6877 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !507, file: !507, line: 1814, type: !6878, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6880)
!6878 = !DISubroutineType(types: !6879)
!6879 = !{null, !762, !132}
!6880 = !{!6881, !6882}
!6881 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6877, file: !507, line: 1814, type: !762)
!6882 = !DILocalVariable(name: "priority", arg: 2, scope: !6877, file: !507, line: 1814, type: !132)
!6883 = !DILocation(line: 0, scope: !6877)
!6884 = !DILocation(line: 0, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6877, file: !507, line: 1816, column: 7)
!6886 = !DILocation(line: 1816, column: 7, scope: !6877)
!6887 = !DILocation(line: 1824, column: 1, scope: !6877)
!6888 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6796, file: !6796, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !6889)
!6889 = !{!6890}
!6890 = !DILocalVariable(name: "unused", arg: 1, scope: !6888, file: !6796, line: 155, type: !13)
!6891 = !DILocation(line: 0, scope: !6888)
!6892 = !DILocation(line: 159, column: 2, scope: !6888)
!6893 = !DILocation(line: 160, column: 1, scope: !6888)
!6894 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6895, file: !6895, line: 87, type: !3249, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !473)
!6895 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6896 = !DILocation(line: 89, column: 2, scope: !6894)
!6897 = !DILocation(line: 90, column: 2, scope: !6894)
!6898 = !DILocation(line: 91, column: 1, scope: !6894)
!6899 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6895, file: !6895, line: 23, type: !3249, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!6900 = !DISubprogram(name: "z_arm_int_exit", scope: !6901, file: !6901, line: 153, type: !3249, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!6901 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6902 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6903, file: !6903, line: 256, type: !3249, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !473)
!6903 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6904 = !DILocation(line: 258, column: 2, scope: !6902)
!6905 = !DILocation(line: 260, column: 2, scope: !6902)
!6906 = !DILocation(line: 262, column: 2, scope: !6902)
!6907 = !DILocation(line: 263, column: 2, scope: !6902)
!6908 = !DILocation(line: 267, column: 2, scope: !6902)
!6909 = !DILocation(line: 268, column: 2, scope: !6902)
!6910 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6903, file: !6903, line: 53, type: !3249, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !473)
!6911 = !DILocation(line: 55, column: 12, scope: !6910)
!6912 = !DILocation(line: 271, column: 3, scope: !6913, inlinedAt: !6914)
!6913 = distinct !DISubprogram(name: "__DSB", scope: !6844, file: !6844, line: 269, type: !3249, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !473)
!6914 = distinct !DILocation(line: 56, column: 2, scope: !6910)
!6915 = !{i64 3476865}
!6916 = !DILocation(line: 260, column: 3, scope: !6917, inlinedAt: !6918)
!6917 = distinct !DISubprogram(name: "__ISB", scope: !6844, file: !6844, line: 258, type: !3249, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !473)
!6918 = distinct !DILocation(line: 57, column: 2, scope: !6910)
!6919 = !{i64 3476582}
!6920 = !DILocation(line: 58, column: 1, scope: !6910)
!6921 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6903, file: !6903, line: 96, type: !3249, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !473)
!6922 = !DILocation(line: 103, column: 13, scope: !6921)
!6923 = !DILocation(line: 975, column: 3, scope: !6924, inlinedAt: !6929)
!6924 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6844, file: !6844, line: 971, type: !6925, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !6927)
!6925 = !DISubroutineType(types: !6926)
!6926 = !{!132}
!6927 = !{!6928}
!6928 = !DILocalVariable(name: "result", scope: !6924, file: !6844, line: 973, type: !132)
!6929 = distinct !DILocation(line: 189, column: 16, scope: !6921)
!6930 = !{i64 3497695}
!6931 = !DILocation(line: 0, scope: !6924, inlinedAt: !6929)
!6932 = !DILocation(line: 189, column: 32, scope: !6921)
!6933 = !DILocalVariable(name: "control", arg: 1, scope: !6934, file: !6844, line: 1001, type: !132)
!6934 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6844, file: !6844, line: 1001, type: !6935, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !6937)
!6935 = !DISubroutineType(types: !6936)
!6936 = !{null, !132}
!6937 = !{!6933}
!6938 = !DILocation(line: 0, scope: !6934, inlinedAt: !6939)
!6939 = distinct !DILocation(line: 189, column: 2, scope: !6921)
!6940 = !DILocation(line: 1003, column: 3, scope: !6934, inlinedAt: !6939)
!6941 = !{i64 3498415}
!6942 = !DILocation(line: 260, column: 3, scope: !6917, inlinedAt: !6943)
!6943 = distinct !DILocation(line: 1004, column: 3, scope: !6934, inlinedAt: !6939)
!6944 = !DILocation(line: 191, column: 1, scope: !6921)
!6945 = distinct !DISubprogram(name: "arch_swap", scope: !6946, file: !6946, line: 33, type: !6854, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !6947)
!6946 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6947 = !{!6948}
!6948 = !DILocalVariable(name: "key", arg: 1, scope: !6945, file: !6946, line: 33, type: !32)
!6949 = !DILocation(line: 0, scope: !6945)
!6950 = !DILocation(line: 36, column: 2, scope: !6945)
!6951 = !DILocation(line: 36, column: 17, scope: !6945)
!6952 = !DILocation(line: 36, column: 25, scope: !6945)
!6953 = !DILocation(line: 37, column: 37, scope: !6945)
!6954 = !DILocation(line: 37, column: 17, scope: !6945)
!6955 = !DILocation(line: 37, column: 35, scope: !6945)
!6956 = !DILocation(line: 41, column: 12, scope: !6945)
!6957 = !DILocalVariable(name: "key", arg: 1, scope: !6958, file: !5824, line: 84, type: !32)
!6958 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5824, file: !5824, line: 84, type: !5835, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !6959)
!6959 = !{!6957}
!6960 = !DILocation(line: 0, scope: !6958, inlinedAt: !6961)
!6961 = distinct !DILocation(line: 44, column: 2, scope: !6945)
!6962 = !DILocation(line: 95, column: 2, scope: !6958, inlinedAt: !6961)
!6963 = !{i64 2238929}
!6964 = !DILocation(line: 53, column: 9, scope: !6945)
!6965 = !DILocation(line: 53, column: 24, scope: !6945)
!6966 = !DILocation(line: 53, column: 2, scope: !6945)
!6967 = distinct !DISubprogram(name: "arch_new_thread", scope: !6968, file: !6968, line: 56, type: !6969, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7076)
!6968 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6969 = !DISubroutineType(types: !6970)
!6970 = !{null, !6971, !7071, !1081, !3567, !102, !102, !102}
!6971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6972, size: 32)
!6972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !6973)
!6973 = !{!6974, !7032, !7044, !7045, !7046, !7047, !7053, !7066}
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6972, file: !367, line: 247, baseType: !6975, size: 384)
!6975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !6976)
!6976 = !{!6977, !7001, !7008, !7009, !7010, !7019, !7020, !7021}
!6977 = !DIDerivedType(tag: DW_TAG_member, scope: !6975, file: !367, line: 60, baseType: !6978, size: 64)
!6978 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6975, file: !367, line: 60, size: 64, elements: !6979)
!6979 = !{!6980, !6995}
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6978, file: !367, line: 61, baseType: !6981, size: 64)
!6981 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !6982)
!6982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !6983)
!6983 = !{!6984, !6990}
!6984 = !DIDerivedType(tag: DW_TAG_member, scope: !6982, file: !321, line: 38, baseType: !6985, size: 32)
!6985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6982, file: !321, line: 38, size: 32, elements: !6986)
!6986 = !{!6987, !6989}
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6985, file: !321, line: 39, baseType: !6988, size: 32)
!6988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6982, size: 32)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6985, file: !321, line: 40, baseType: !6988, size: 32)
!6990 = !DIDerivedType(tag: DW_TAG_member, scope: !6982, file: !321, line: 42, baseType: !6991, size: 32, offset: 32)
!6991 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6982, file: !321, line: 42, size: 32, elements: !6992)
!6992 = !{!6993, !6994}
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6991, file: !321, line: 43, baseType: !6988, size: 32)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6991, file: !321, line: 44, baseType: !6988, size: 32)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6978, file: !367, line: 62, baseType: !6996, size: 64)
!6996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !6997)
!6997 = !{!6998}
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6996, file: !392, line: 50, baseType: !6999, size: 64)
!6999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7000, size: 64, elements: !397)
!7000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6996, size: 32)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6975, file: !367, line: 68, baseType: !7002, size: 32, offset: 64)
!7002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7003, size: 32)
!7003 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !7004)
!7004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !7005)
!7005 = !{!7006}
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7004, file: !316, line: 232, baseType: !7007, size: 64)
!7007 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !6982)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6975, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6975, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!7010 = !DIDerivedType(tag: DW_TAG_member, scope: !6975, file: !367, line: 90, baseType: !7011, size: 16, offset: 112)
!7011 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6975, file: !367, line: 90, size: 16, elements: !7012)
!7012 = !{!7013, !7018}
!7013 = !DIDerivedType(tag: DW_TAG_member, scope: !7011, file: !367, line: 91, baseType: !7014, size: 16)
!7014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7011, file: !367, line: 91, size: 16, elements: !7015)
!7015 = !{!7016, !7017}
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7014, file: !367, line: 96, baseType: !415, size: 8)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7014, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7011, file: !367, line: 100, baseType: !340, size: 16)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6975, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6975, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6975, file: !367, line: 131, baseType: !7022, size: 192, offset: 192)
!7022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !7023)
!7023 = !{!7024, !7025, !7031}
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7022, file: !316, line: 245, baseType: !6981, size: 64)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7022, file: !316, line: 246, baseType: !7026, size: 32, offset: 64)
!7026 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !7027)
!7027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7028, size: 32)
!7028 = !DISubroutineType(types: !7029)
!7029 = !{null, !7030}
!7030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7022, size: 32)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7022, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6972, file: !367, line: 250, baseType: !7033, size: 288, offset: 384)
!7033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !7034)
!7034 = !{!7035, !7036, !7037, !7038, !7039, !7040, !7041, !7042, !7043}
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7033, file: !436, line: 26, baseType: !132, size: 32)
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7033, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7033, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7033, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7033, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7033, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7033, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7033, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7033, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6972, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6972, file: !367, line: 256, baseType: !7003, size: 64, offset: 704)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6972, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6972, file: !367, line: 300, baseType: !7048, size: 96, offset: 800)
!7048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !7049)
!7049 = !{!7050, !7051, !7052}
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7048, file: !367, line: 153, baseType: !22, size: 32)
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7048, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7048, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6972, file: !367, line: 325, baseType: !7054, size: 32, offset: 896)
!7054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7055, size: 32)
!7055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !7056)
!7056 = !{!7057, !7063, !7064}
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7055, file: !312, line: 5074, baseType: !7058, size: 96)
!7058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !7059)
!7059 = !{!7060, !7061, !7062}
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7058, file: !462, line: 57, baseType: !465, size: 32)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7058, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7058, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7055, file: !312, line: 5075, baseType: !7003, size: 64, offset: 96)
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7055, file: !312, line: 5076, baseType: !7065, offset: 160)
!7065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6972, file: !367, line: 343, baseType: !7067, size: 64, offset: 928)
!7067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !7068)
!7068 = !{!7069, !7070}
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7067, file: !436, line: 63, baseType: !132, size: 32)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7067, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!7071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7072, size: 32)
!7072 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3568, line: 44, baseType: !7073)
!7073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2177, line: 47, size: 8, elements: !7074)
!7074 = !{!7075}
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7073, file: !2177, line: 48, baseType: !108, size: 8)
!7076 = !{!7077, !7078, !7079, !7080, !7081, !7082, !7083, !7084}
!7077 = !DILocalVariable(name: "thread", arg: 1, scope: !6967, file: !6968, line: 56, type: !6971)
!7078 = !DILocalVariable(name: "stack", arg: 2, scope: !6967, file: !6968, line: 56, type: !7071)
!7079 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6967, file: !6968, line: 57, type: !1081)
!7080 = !DILocalVariable(name: "entry", arg: 4, scope: !6967, file: !6968, line: 57, type: !3567)
!7081 = !DILocalVariable(name: "p1", arg: 5, scope: !6967, file: !6968, line: 58, type: !102)
!7082 = !DILocalVariable(name: "p2", arg: 6, scope: !6967, file: !6968, line: 58, type: !102)
!7083 = !DILocalVariable(name: "p3", arg: 7, scope: !6967, file: !6968, line: 58, type: !102)
!7084 = !DILocalVariable(name: "iframe", scope: !6967, file: !6968, line: 60, type: !2831)
!7085 = !DILocation(line: 0, scope: !6967)
!7086 = !DILocation(line: 85, column: 11, scope: !6967)
!7087 = !DILocation(line: 93, column: 10, scope: !6967)
!7088 = !DILocation(line: 98, column: 13, scope: !6967)
!7089 = !DILocation(line: 100, column: 15, scope: !6967)
!7090 = !DILocation(line: 100, column: 10, scope: !6967)
!7091 = !DILocation(line: 100, column: 13, scope: !6967)
!7092 = !DILocation(line: 101, column: 15, scope: !6967)
!7093 = !DILocation(line: 101, column: 10, scope: !6967)
!7094 = !DILocation(line: 101, column: 13, scope: !6967)
!7095 = !DILocation(line: 102, column: 15, scope: !6967)
!7096 = !DILocation(line: 102, column: 10, scope: !6967)
!7097 = !DILocation(line: 102, column: 13, scope: !6967)
!7098 = !DILocation(line: 103, column: 15, scope: !6967)
!7099 = !DILocation(line: 103, column: 10, scope: !6967)
!7100 = !DILocation(line: 103, column: 13, scope: !6967)
!7101 = !DILocation(line: 106, column: 10, scope: !6967)
!7102 = !DILocation(line: 106, column: 15, scope: !6967)
!7103 = !DILocation(line: 122, column: 29, scope: !6967)
!7104 = !DILocation(line: 122, column: 23, scope: !6967)
!7105 = !DILocation(line: 122, column: 27, scope: !6967)
!7106 = !DILocation(line: 123, column: 15, scope: !6967)
!7107 = !DILocation(line: 123, column: 23, scope: !6967)
!7108 = !DILocation(line: 143, column: 1, scope: !6967)
!7109 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6968, file: !6968, line: 385, type: !7110, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7113)
!7110 = !DISubroutineType(types: !7111)
!7111 = !{!132, !7112, !7112}
!7112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!7113 = !{!7114, !7115, !7116, !7119}
!7114 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7109, file: !6968, line: 385, type: !7112)
!7115 = !DILocalVariable(name: "psp", arg: 2, scope: !7109, file: !6968, line: 385, type: !7112)
!7116 = !DILocalVariable(name: "thread", scope: !7109, file: !6968, line: 388, type: !7117)
!7117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7118, size: 32)
!7118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6972)
!7119 = !DILocalVariable(name: "guard_len", scope: !7109, file: !6968, line: 405, type: !132)
!7120 = !DILocation(line: 0, scope: !7109)
!7121 = !DILocation(line: 388, column: 34, scope: !7109)
!7122 = !DILocation(line: 390, column: 13, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7109, file: !6968, line: 390, column: 6)
!7124 = !DILocation(line: 390, column: 6, scope: !7109)
!7125 = !DILocation(line: 438, column: 6, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7109, file: !6968, line: 438, column: 6)
!7127 = !DILocation(line: 438, column: 6, scope: !7109)
!7128 = !DILocation(line: 442, column: 3, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7126, file: !6968, line: 440, column: 22)
!7130 = !DILocation(line: 455, column: 1, scope: !7109)
!7131 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6968, file: !6968, line: 530, type: !7132, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7134)
!7132 = !DISubroutineType(types: !7133)
!7133 = !{null, !6971, !1081, !3567}
!7134 = !{!7135, !7136, !7137}
!7135 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7131, file: !6968, line: 530, type: !6971)
!7136 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7131, file: !6968, line: 530, type: !1081)
!7137 = !DILocalVariable(name: "_main", arg: 3, scope: !7131, file: !6968, line: 531, type: !3567)
!7138 = !DILocation(line: 0, scope: !7131)
!7139 = !DILocation(line: 535, column: 11, scope: !7131)
!7140 = !DILocation(line: 560, column: 2, scope: !7131)
!7141 = !DILocation(line: 576, column: 2, scope: !7131)
!7142 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7143 = !DILocation(line: 603, column: 2, scope: !7131)
!7144 = distinct !DISubprogram(name: "z_arm_fault", scope: !7145, file: !7145, line: 1036, type: !7146, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7161)
!7145 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7146 = !DISubroutineType(types: !7147)
!7147 = !{null, !132, !132, !132, !7148}
!7148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7149, size: 32)
!7149 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !436, line: 37, baseType: !7150)
!7150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !7151)
!7151 = !{!7152, !7153, !7154, !7155, !7156, !7157, !7158, !7159, !7160}
!7152 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7150, file: !436, line: 26, baseType: !132, size: 32)
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7150, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7150, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7150, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7150, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7150, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7150, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7150, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!7160 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7150, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!7161 = !{!7162, !7163, !7164, !7165, !7166, !7167, !7168, !7169, !7170, !7171}
!7162 = !DILocalVariable(name: "msp", arg: 1, scope: !7144, file: !7145, line: 1036, type: !132)
!7163 = !DILocalVariable(name: "psp", arg: 2, scope: !7144, file: !7145, line: 1036, type: !132)
!7164 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7144, file: !7145, line: 1036, type: !132)
!7165 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7144, file: !7145, line: 1037, type: !7148)
!7166 = !DILocalVariable(name: "reason", scope: !7144, file: !7145, line: 1039, type: !132)
!7167 = !DILocalVariable(name: "fault", scope: !7144, file: !7145, line: 1040, type: !103)
!7168 = !DILocalVariable(name: "recoverable", scope: !7144, file: !7145, line: 1041, type: !166)
!7169 = !DILocalVariable(name: "nested_exc", scope: !7144, file: !7145, line: 1041, type: !166)
!7170 = !DILocalVariable(name: "esf", scope: !7144, file: !7145, line: 1042, type: !2899)
!7171 = !DILocalVariable(name: "esf_copy", scope: !7144, file: !7145, line: 1047, type: !2900)
!7172 = !DILocation(line: 0, scope: !7144)
!7173 = !DILocation(line: 1040, column: 19, scope: !7144)
!7174 = !DILocation(line: 1040, column: 24, scope: !7144)
!7175 = !DILocation(line: 1041, column: 2, scope: !7144)
!7176 = !DILocation(line: 1047, column: 2, scope: !7144)
!7177 = !DILocation(line: 1047, column: 15, scope: !7144)
!7178 = !DILocalVariable(name: "key", arg: 1, scope: !7179, file: !5824, line: 84, type: !32)
!7179 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5824, file: !5824, line: 84, type: !5835, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7180)
!7180 = !{!7178}
!7181 = !DILocation(line: 0, scope: !7179, inlinedAt: !7182)
!7182 = distinct !DILocation(line: 1050, column: 2, scope: !7144)
!7183 = !DILocation(line: 95, column: 2, scope: !7179, inlinedAt: !7182)
!7184 = !{i64 2272173}
!7185 = !DILocation(line: 1055, column: 9, scope: !7144)
!7186 = !DILocation(line: 1063, column: 11, scope: !7144)
!7187 = !DILocation(line: 1064, column: 6, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7144, file: !7145, line: 1064, column: 6)
!7189 = !{i8 0, i8 2}
!7190 = !DILocation(line: 1064, column: 6, scope: !7144)
!7191 = !DILocation(line: 1070, column: 20, scope: !7144)
!7192 = !DILocation(line: 1070, column: 2, scope: !7144)
!7193 = !DILocation(line: 1089, column: 6, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7144, file: !7145, line: 1089, column: 6)
!7195 = !DILocation(line: 0, scope: !7194)
!7196 = !DILocation(line: 1089, column: 6, scope: !7144)
!7197 = !DILocation(line: 1090, column: 28, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7199, file: !7145, line: 1090, column: 7)
!7199 = distinct !DILexicalBlock(scope: !7194, file: !7145, line: 1089, column: 18)
!7200 = !DILocation(line: 1090, column: 44, scope: !7198)
!7201 = !DILocation(line: 1090, column: 7, scope: !7199)
!7202 = !DILocation(line: 1091, column: 24, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7198, file: !7145, line: 1090, column: 50)
!7204 = !DILocation(line: 1092, column: 3, scope: !7203)
!7205 = !DILocation(line: 1094, column: 23, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7194, file: !7145, line: 1093, column: 9)
!7207 = !DILocation(line: 1097, column: 2, scope: !7144)
!7208 = !DILocation(line: 1098, column: 1, scope: !7144)
!7209 = distinct !DISubprogram(name: "get_esf", scope: !7145, file: !7145, line: 894, type: !7210, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7213)
!7210 = !DISubroutineType(types: !7211)
!7211 = !{!2899, !132, !132, !132, !7212}
!7212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!7213 = !{!7214, !7215, !7216, !7217, !7218, !7219}
!7214 = !DILocalVariable(name: "msp", arg: 1, scope: !7209, file: !7145, line: 894, type: !132)
!7215 = !DILocalVariable(name: "psp", arg: 2, scope: !7209, file: !7145, line: 894, type: !132)
!7216 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7209, file: !7145, line: 894, type: !132)
!7217 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7209, file: !7145, line: 895, type: !7212)
!7218 = !DILocalVariable(name: "alternative_state_exc", scope: !7209, file: !7145, line: 897, type: !166)
!7219 = !DILocalVariable(name: "ptr_esf", scope: !7209, file: !7145, line: 898, type: !2899)
!7220 = !DILocation(line: 0, scope: !7209)
!7221 = !DILocation(line: 900, column: 14, scope: !7209)
!7222 = !DILocation(line: 902, column: 49, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7209, file: !7145, line: 902, column: 6)
!7224 = !DILocation(line: 902, column: 6, scope: !7209)
!7225 = !DILocation(line: 983, column: 18, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7209, file: !7145, line: 983, column: 6)
!7227 = !DILocation(line: 991, column: 7, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !7145, line: 990, column: 30)
!7229 = distinct !DILexicalBlock(scope: !7209, file: !7145, line: 990, column: 6)
!7230 = !DILocation(line: 998, column: 16, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7232, file: !7145, line: 995, column: 10)
!7232 = distinct !DILexicalBlock(scope: !7228, file: !7145, line: 991, column: 7)
!7233 = !DILocation(line: 1002, column: 2, scope: !7209)
!7234 = !DILocation(line: 1003, column: 1, scope: !7209)
!7235 = distinct !DISubprogram(name: "fault_handle", scope: !7145, file: !7145, line: 786, type: !7236, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7238)
!7236 = !DISubroutineType(types: !7237)
!7237 = !{!132, !2899, !103, !7212}
!7238 = !{!7239, !7240, !7241, !7242}
!7239 = !DILocalVariable(name: "esf", arg: 1, scope: !7235, file: !7145, line: 786, type: !2899)
!7240 = !DILocalVariable(name: "fault", arg: 2, scope: !7235, file: !7145, line: 786, type: !103)
!7241 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7235, file: !7145, line: 786, type: !7212)
!7242 = !DILocalVariable(name: "reason", scope: !7235, file: !7145, line: 788, type: !132)
!7243 = !DILocation(line: 0, scope: !7235)
!7244 = !DILocation(line: 790, column: 15, scope: !7235)
!7245 = !DILocation(line: 792, column: 2, scope: !7235)
!7246 = !DILocation(line: 794, column: 12, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7235, file: !7145, line: 792, column: 17)
!7248 = !DILocation(line: 795, column: 3, scope: !7247)
!7249 = !DILocation(line: 800, column: 12, scope: !7247)
!7250 = !DILocation(line: 801, column: 3, scope: !7247)
!7251 = !DILocation(line: 803, column: 12, scope: !7247)
!7252 = !DILocation(line: 804, column: 3, scope: !7247)
!7253 = !DILocation(line: 806, column: 12, scope: !7247)
!7254 = !DILocation(line: 807, column: 3, scope: !7247)
!7255 = !DILocation(line: 814, column: 3, scope: !7247)
!7256 = !DILocation(line: 815, column: 3, scope: !7247)
!7257 = !DILocation(line: 829, column: 2, scope: !7235)
!7258 = distinct !DISubprogram(name: "hard_fault", scope: !7145, file: !7145, line: 709, type: !7259, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7261)
!7259 = !DISubroutineType(types: !7260)
!7260 = !{!132, !2899, !7212}
!7261 = !{!7262, !7263, !7264}
!7262 = !DILocalVariable(name: "esf", arg: 1, scope: !7258, file: !7145, line: 709, type: !2899)
!7263 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7258, file: !7145, line: 709, type: !7212)
!7264 = !DILocalVariable(name: "reason", scope: !7258, file: !7145, line: 711, type: !132)
!7265 = !DILocation(line: 0, scope: !7258)
!7266 = !DILocation(line: 732, column: 15, scope: !7258)
!7267 = !DILocation(line: 734, column: 12, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7258, file: !7145, line: 734, column: 6)
!7269 = !DILocation(line: 734, column: 17, scope: !7268)
!7270 = !DILocation(line: 734, column: 41, scope: !7268)
!7271 = !DILocation(line: 734, column: 6, scope: !7258)
!7272 = !DILocation(line: 736, column: 19, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7268, file: !7145, line: 736, column: 13)
!7274 = !DILocation(line: 736, column: 49, scope: !7273)
!7275 = !DILocation(line: 736, column: 13, scope: !7268)
!7276 = !DILocation(line: 738, column: 19, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7273, file: !7145, line: 738, column: 13)
!7278 = !DILocation(line: 738, column: 24, scope: !7277)
!7279 = !DILocation(line: 738, column: 47, scope: !7277)
!7280 = !DILocation(line: 738, column: 13, scope: !7273)
!7281 = !DILocation(line: 740, column: 7, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7283, file: !7145, line: 740, column: 7)
!7283 = distinct !DILexicalBlock(scope: !7277, file: !7145, line: 738, column: 53)
!7284 = !DILocation(line: 740, column: 7, scope: !7283)
!7285 = !DILocation(line: 742, column: 24, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7282, file: !7145, line: 740, column: 38)
!7287 = !DILocation(line: 743, column: 3, scope: !7286)
!7288 = !DILocation(line: 743, column: 20, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7282, file: !7145, line: 743, column: 14)
!7290 = !DILocation(line: 743, column: 25, scope: !7289)
!7291 = !DILocation(line: 743, column: 52, scope: !7289)
!7292 = !DILocation(line: 743, column: 14, scope: !7282)
!7293 = !DILocation(line: 744, column: 13, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7289, file: !7145, line: 743, column: 58)
!7295 = !DILocation(line: 745, column: 3, scope: !7294)
!7296 = !DILocation(line: 745, column: 20, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7289, file: !7145, line: 745, column: 14)
!7298 = !DILocation(line: 745, column: 25, scope: !7297)
!7299 = !DILocation(line: 745, column: 52, scope: !7297)
!7300 = !DILocation(line: 745, column: 14, scope: !7289)
!7301 = !DILocation(line: 746, column: 13, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7297, file: !7145, line: 745, column: 58)
!7303 = !DILocation(line: 747, column: 3, scope: !7302)
!7304 = !DILocation(line: 747, column: 20, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7297, file: !7145, line: 747, column: 14)
!7306 = !DILocation(line: 747, column: 52, scope: !7305)
!7307 = !DILocation(line: 747, column: 14, scope: !7297)
!7308 = !DILocation(line: 748, column: 13, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7305, file: !7145, line: 747, column: 58)
!7310 = !DILocation(line: 753, column: 3, scope: !7309)
!7311 = !DILocation(line: 766, column: 2, scope: !7258)
!7312 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7145, file: !7145, line: 229, type: !7236, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7313)
!7313 = !{!7314, !7315, !7316, !7317, !7318, !7319, !7322}
!7314 = !DILocalVariable(name: "esf", arg: 1, scope: !7312, file: !7145, line: 229, type: !2899)
!7315 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7312, file: !7145, line: 229, type: !103)
!7316 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7312, file: !7145, line: 230, type: !7212)
!7317 = !DILocalVariable(name: "reason", scope: !7312, file: !7145, line: 232, type: !132)
!7318 = !DILocalVariable(name: "mmfar", scope: !7312, file: !7145, line: 233, type: !132)
!7319 = !DILocalVariable(name: "temp", scope: !7320, file: !7145, line: 254, type: !132)
!7320 = distinct !DILexicalBlock(scope: !7321, file: !7145, line: 244, column: 48)
!7321 = distinct !DILexicalBlock(scope: !7312, file: !7145, line: 244, column: 6)
!7322 = !DILocalVariable(name: "min_stack_ptr", scope: !7323, file: !7145, line: 309, type: !132)
!7323 = distinct !DILexicalBlock(scope: !7324, file: !7145, line: 308, column: 43)
!7324 = distinct !DILexicalBlock(scope: !7325, file: !7145, line: 308, column: 7)
!7325 = distinct !DILexicalBlock(scope: !7326, file: !7145, line: 289, column: 40)
!7326 = distinct !DILexicalBlock(scope: !7312, file: !7145, line: 288, column: 6)
!7327 = !DILocation(line: 0, scope: !7312)
!7328 = !DILocation(line: 237, column: 12, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7312, file: !7145, line: 237, column: 6)
!7330 = !DILocation(line: 241, column: 12, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7312, file: !7145, line: 241, column: 6)
!7332 = !DILocation(line: 244, column: 12, scope: !7321)
!7333 = !DILocation(line: 244, column: 17, scope: !7321)
!7334 = !DILocation(line: 244, column: 42, scope: !7321)
!7335 = !DILocation(line: 244, column: 6, scope: !7312)
!7336 = !DILocation(line: 254, column: 24, scope: !7320)
!7337 = !DILocation(line: 0, scope: !7320)
!7338 = !DILocation(line: 256, column: 13, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7320, file: !7145, line: 256, column: 7)
!7340 = !DILocation(line: 256, column: 18, scope: !7339)
!7341 = !DILocation(line: 256, column: 44, scope: !7339)
!7342 = !DILocation(line: 256, column: 7, scope: !7320)
!7343 = !DILocation(line: 259, column: 24, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7345, file: !7145, line: 259, column: 8)
!7345 = distinct !DILexicalBlock(scope: !7339, file: !7145, line: 256, column: 50)
!7346 = !DILocation(line: 259, column: 8, scope: !7345)
!7347 = !DILocation(line: 261, column: 15, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7344, file: !7145, line: 259, column: 30)
!7349 = !DILocation(line: 262, column: 4, scope: !7348)
!7350 = !DILocation(line: 265, column: 12, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7312, file: !7145, line: 265, column: 6)
!7352 = !DILocation(line: 269, column: 12, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7312, file: !7145, line: 269, column: 6)
!7354 = !DILocation(line: 288, column: 12, scope: !7326)
!7355 = !DILocation(line: 288, column: 17, scope: !7326)
!7356 = !DILocation(line: 288, column: 41, scope: !7326)
!7357 = !DILocation(line: 289, column: 9, scope: !7326)
!7358 = !DILocation(line: 289, column: 14, scope: !7326)
!7359 = !DILocation(line: 288, column: 6, scope: !7312)
!7360 = !DILocation(line: 308, column: 12, scope: !7324)
!7361 = !DILocation(line: 308, column: 17, scope: !7324)
!7362 = !DILocation(line: 308, column: 7, scope: !7325)
!7363 = !DILocation(line: 310, column: 6, scope: !7323)
!7364 = !DILocation(line: 309, column: 29, scope: !7323)
!7365 = !DILocation(line: 0, scope: !7323)
!7366 = !DILocation(line: 312, column: 8, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7323, file: !7145, line: 312, column: 8)
!7368 = !DILocation(line: 312, column: 8, scope: !7323)
!7369 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7370, file: !6844, line: 1099, type: !132)
!7370 = distinct !DISubprogram(name: "__set_PSP", scope: !6844, file: !6844, line: 1099, type: !6935, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7371)
!7371 = !{!7369}
!7372 = !DILocation(line: 0, scope: !7370, inlinedAt: !7373)
!7373 = distinct !DILocation(line: 338, column: 5, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7367, file: !7145, line: 312, column: 23)
!7375 = !DILocation(line: 1101, column: 3, scope: !7370, inlinedAt: !7373)
!7376 = !{i64 3527834}
!7377 = !DILocation(line: 341, column: 4, scope: !7374)
!7378 = !DILocation(line: 360, column: 12, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7312, file: !7145, line: 360, column: 6)
!7380 = !DILocation(line: 360, column: 17, scope: !7379)
!7381 = !DILocation(line: 360, column: 41, scope: !7379)
!7382 = !DILocation(line: 360, column: 6, scope: !7312)
!7383 = !DILocation(line: 361, column: 14, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7379, file: !7145, line: 360, column: 47)
!7385 = !DILocation(line: 362, column: 2, scope: !7384)
!7386 = !DILocation(line: 366, column: 12, scope: !7312)
!7387 = !DILocation(line: 369, column: 15, scope: !7312)
!7388 = !DILocation(line: 371, column: 2, scope: !7312)
!7389 = distinct !DISubprogram(name: "bus_fault", scope: !7145, file: !7145, line: 383, type: !7390, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7392)
!7390 = !DISubroutineType(types: !7391)
!7391 = !{!103, !2899, !103, !7212}
!7392 = !{!7393, !7394, !7395, !7396, !7397}
!7393 = !DILocalVariable(name: "esf", arg: 1, scope: !7389, file: !7145, line: 383, type: !2899)
!7394 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7389, file: !7145, line: 383, type: !103)
!7395 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7389, file: !7145, line: 383, type: !7212)
!7396 = !DILocalVariable(name: "reason", scope: !7389, file: !7145, line: 385, type: !132)
!7397 = !DILocalVariable(name: "bfar", scope: !7398, file: !7145, line: 405, type: !132)
!7398 = distinct !DILexicalBlock(scope: !7399, file: !7145, line: 395, column: 42)
!7399 = distinct !DILexicalBlock(scope: !7389, file: !7145, line: 395, column: 6)
!7400 = !DILocation(line: 0, scope: !7389)
!7401 = !DILocation(line: 389, column: 11, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7389, file: !7145, line: 389, column: 6)
!7403 = !DILocation(line: 392, column: 11, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7389, file: !7145, line: 392, column: 6)
!7405 = !DILocation(line: 395, column: 11, scope: !7399)
!7406 = !DILocation(line: 395, column: 16, scope: !7399)
!7407 = !DILocation(line: 395, column: 6, scope: !7389)
!7408 = !DILocation(line: 405, column: 3, scope: !7398)
!7409 = !DILocation(line: 0, scope: !7398)
!7410 = !DILocation(line: 407, column: 13, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7398, file: !7145, line: 407, column: 7)
!7412 = !DILocation(line: 407, column: 18, scope: !7411)
!7413 = !DILocation(line: 407, column: 44, scope: !7411)
!7414 = !DILocation(line: 407, column: 7, scope: !7398)
!7415 = !DILocation(line: 411, column: 15, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7417, file: !7145, line: 409, column: 30)
!7417 = distinct !DILexicalBlock(scope: !7418, file: !7145, line: 409, column: 8)
!7418 = distinct !DILexicalBlock(scope: !7411, file: !7145, line: 407, column: 50)
!7419 = !DILocation(line: 412, column: 4, scope: !7416)
!7420 = !DILocation(line: 415, column: 11, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7389, file: !7145, line: 415, column: 6)
!7422 = !DILocation(line: 418, column: 12, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7389, file: !7145, line: 418, column: 6)
!7424 = !DILocation(line: 418, column: 17, scope: !7423)
!7425 = !DILocation(line: 418, column: 41, scope: !7423)
!7426 = !DILocation(line: 418, column: 6, scope: !7389)
!7427 = !DILocation(line: 423, column: 18, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7423, file: !7145, line: 423, column: 13)
!7429 = !DILocation(line: 524, column: 12, scope: !7389)
!7430 = !DILocation(line: 526, column: 15, scope: !7389)
!7431 = !DILocation(line: 528, column: 2, scope: !7389)
!7432 = distinct !DISubprogram(name: "usage_fault", scope: !7145, file: !7145, line: 539, type: !7433, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7437)
!7433 = !DISubroutineType(types: !7434)
!7434 = !{!132, !7435}
!7435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7436, size: 32)
!7436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2900)
!7437 = !{!7438, !7439}
!7438 = !DILocalVariable(name: "esf", arg: 1, scope: !7432, file: !7145, line: 539, type: !7435)
!7439 = !DILocalVariable(name: "reason", scope: !7432, file: !7145, line: 541, type: !132)
!7440 = !DILocation(line: 0, scope: !7432)
!7441 = !DILocation(line: 546, column: 12, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7432, file: !7145, line: 546, column: 6)
!7443 = !DILocation(line: 549, column: 12, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7432, file: !7145, line: 549, column: 6)
!7445 = !DILocation(line: 567, column: 12, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7432, file: !7145, line: 567, column: 6)
!7447 = !DILocation(line: 570, column: 12, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7432, file: !7145, line: 570, column: 6)
!7449 = !DILocation(line: 573, column: 12, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7432, file: !7145, line: 573, column: 6)
!7451 = !DILocation(line: 576, column: 12, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7432, file: !7145, line: 576, column: 6)
!7453 = !DILocation(line: 581, column: 12, scope: !7432)
!7454 = !DILocation(line: 583, column: 2, scope: !7432)
!7455 = distinct !DISubprogram(name: "debug_monitor", scope: !7145, file: !7145, line: 632, type: !7456, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7458)
!7456 = !DISubroutineType(types: !7457)
!7457 = !{null, !2899, !7212}
!7458 = !{!7459, !7460}
!7459 = !DILocalVariable(name: "esf", arg: 1, scope: !7455, file: !7145, line: 632, type: !2899)
!7460 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7455, file: !7145, line: 632, type: !7212)
!7461 = !DILocation(line: 0, scope: !7455)
!7462 = !DILocation(line: 634, column: 15, scope: !7455)
!7463 = !DILocation(line: 652, column: 1, scope: !7455)
!7464 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7145, file: !7145, line: 658, type: !7465, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7467)
!7465 = !DISubroutineType(types: !7466)
!7466 = !{!166, !2899}
!7467 = !{!7468, !7469, !7470}
!7468 = !DILocalVariable(name: "esf", arg: 1, scope: !7464, file: !7145, line: 658, type: !2899)
!7469 = !DILocalVariable(name: "ret_addr", scope: !7464, file: !7145, line: 660, type: !2591)
!7470 = !DILocalVariable(name: "fault_insn", scope: !7464, file: !7145, line: 686, type: !340)
!7471 = !DILocation(line: 0, scope: !7464)
!7472 = !DILocation(line: 660, column: 46, scope: !7464)
!7473 = !DILocation(line: 660, column: 23, scope: !7464)
!7474 = !DILocation(line: 682, column: 11, scope: !7464)
!7475 = !DILocation(line: 271, column: 3, scope: !7476, inlinedAt: !7477)
!7476 = distinct !DISubprogram(name: "__DSB", scope: !6844, file: !6844, line: 269, type: !3249, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !473)
!7477 = distinct !DILocation(line: 683, column: 2, scope: !7464)
!7478 = !{i64 3503969}
!7479 = !DILocation(line: 260, column: 3, scope: !7480, inlinedAt: !7481)
!7480 = distinct !DISubprogram(name: "__ISB", scope: !6844, file: !6844, line: 258, type: !3249, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !473)
!7481 = distinct !DILocation(line: 684, column: 2, scope: !7464)
!7482 = !{i64 3503686}
!7483 = !DILocation(line: 686, column: 35, scope: !7464)
!7484 = !DILocation(line: 686, column: 24, scope: !7464)
!7485 = !DILocation(line: 688, column: 11, scope: !7464)
!7486 = !DILocation(line: 271, column: 3, scope: !7476, inlinedAt: !7487)
!7487 = distinct !DILocation(line: 689, column: 2, scope: !7464)
!7488 = !DILocation(line: 260, column: 3, scope: !7480, inlinedAt: !7489)
!7489 = distinct !DILocation(line: 690, column: 2, scope: !7464)
!7490 = !DILocation(line: 693, column: 45, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7464, file: !7145, line: 693, column: 6)
!7492 = !DILocation(line: 699, column: 1, scope: !7464)
!7493 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7145, file: !7145, line: 1107, type: !3249, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !473)
!7494 = !DILocation(line: 1111, column: 11, scope: !7493)
!7495 = !DILocation(line: 1136, column: 1, scope: !7493)
!7496 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7497, file: !7497, line: 26, type: !3249, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !7498)
!7497 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7498 = !{!7499}
!7499 = !DILocalVariable(name: "irq", scope: !7496, file: !7497, line: 28, type: !103)
!7500 = !DILocation(line: 0, scope: !7496)
!7501 = !DILocation(line: 30, column: 2, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7496, file: !7497, line: 30, column: 2)
!7503 = !DILocation(line: 31, column: 3, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7505, file: !7497, line: 30, column: 39)
!7505 = distinct !DILexicalBlock(scope: !7502, file: !7497, line: 30, column: 2)
!7506 = !DILocation(line: 30, column: 35, scope: !7505)
!7507 = !DILocation(line: 30, column: 13, scope: !7505)
!7508 = distinct !{!7508, !7501, !7509}
!7509 = !DILocation(line: 32, column: 2, scope: !7502)
!7510 = !DILocation(line: 33, column: 1, scope: !7496)
!7511 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !507, file: !507, line: 1814, type: !6878, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !7512)
!7512 = !{!7513, !7514}
!7513 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7511, file: !507, line: 1814, type: !762)
!7514 = !DILocalVariable(name: "priority", arg: 2, scope: !7511, file: !507, line: 1814, type: !132)
!7515 = !DILocation(line: 0, scope: !7511)
!7516 = !DILocation(line: 1816, column: 7, scope: !7511)
!7517 = !DILocation(line: 0, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7511, file: !507, line: 1816, column: 7)
!7519 = !DILocation(line: 1824, column: 1, scope: !7511)
!7520 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7521, file: !7521, line: 27, type: !7522, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !7625)
!7521 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7522 = !DISubroutineType(types: !7523)
!7523 = !{null, !7524}
!7524 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !7525)
!7525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7526, size: 32)
!7526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !7527)
!7527 = !{!7528, !7586, !7598, !7599, !7600, !7601, !7607, !7620}
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7526, file: !367, line: 247, baseType: !7529, size: 384)
!7529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !7530)
!7530 = !{!7531, !7555, !7562, !7563, !7564, !7573, !7574, !7575}
!7531 = !DIDerivedType(tag: DW_TAG_member, scope: !7529, file: !367, line: 60, baseType: !7532, size: 64)
!7532 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7529, file: !367, line: 60, size: 64, elements: !7533)
!7533 = !{!7534, !7549}
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7532, file: !367, line: 61, baseType: !7535, size: 64)
!7535 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !7536)
!7536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !7537)
!7537 = !{!7538, !7544}
!7538 = !DIDerivedType(tag: DW_TAG_member, scope: !7536, file: !321, line: 38, baseType: !7539, size: 32)
!7539 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7536, file: !321, line: 38, size: 32, elements: !7540)
!7540 = !{!7541, !7543}
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7539, file: !321, line: 39, baseType: !7542, size: 32)
!7542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7536, size: 32)
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7539, file: !321, line: 40, baseType: !7542, size: 32)
!7544 = !DIDerivedType(tag: DW_TAG_member, scope: !7536, file: !321, line: 42, baseType: !7545, size: 32, offset: 32)
!7545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7536, file: !321, line: 42, size: 32, elements: !7546)
!7546 = !{!7547, !7548}
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7545, file: !321, line: 43, baseType: !7542, size: 32)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7545, file: !321, line: 44, baseType: !7542, size: 32)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7532, file: !367, line: 62, baseType: !7550, size: 64)
!7550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !7551)
!7551 = !{!7552}
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7550, file: !392, line: 50, baseType: !7553, size: 64)
!7553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7554, size: 64, elements: !397)
!7554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7550, size: 32)
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7529, file: !367, line: 68, baseType: !7556, size: 32, offset: 64)
!7556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7557, size: 32)
!7557 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !7558)
!7558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !7559)
!7559 = !{!7560}
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7558, file: !316, line: 232, baseType: !7561, size: 64)
!7561 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !7536)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7529, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7529, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!7564 = !DIDerivedType(tag: DW_TAG_member, scope: !7529, file: !367, line: 90, baseType: !7565, size: 16, offset: 112)
!7565 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7529, file: !367, line: 90, size: 16, elements: !7566)
!7566 = !{!7567, !7572}
!7567 = !DIDerivedType(tag: DW_TAG_member, scope: !7565, file: !367, line: 91, baseType: !7568, size: 16)
!7568 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7565, file: !367, line: 91, size: 16, elements: !7569)
!7569 = !{!7570, !7571}
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7568, file: !367, line: 96, baseType: !415, size: 8)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7568, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7565, file: !367, line: 100, baseType: !340, size: 16)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7529, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7529, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7529, file: !367, line: 131, baseType: !7576, size: 192, offset: 192)
!7576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !7577)
!7577 = !{!7578, !7579, !7585}
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7576, file: !316, line: 245, baseType: !7535, size: 64)
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7576, file: !316, line: 246, baseType: !7580, size: 32, offset: 64)
!7580 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !7581)
!7581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7582, size: 32)
!7582 = !DISubroutineType(types: !7583)
!7583 = !{null, !7584}
!7584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7576, size: 32)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7576, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7526, file: !367, line: 250, baseType: !7587, size: 288, offset: 384)
!7587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !7588)
!7588 = !{!7589, !7590, !7591, !7592, !7593, !7594, !7595, !7596, !7597}
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7587, file: !436, line: 26, baseType: !132, size: 32)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7587, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7587, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7587, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7587, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7587, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7587, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7587, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7587, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!7598 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7526, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7526, file: !367, line: 256, baseType: !7557, size: 64, offset: 704)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7526, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7526, file: !367, line: 300, baseType: !7602, size: 96, offset: 800)
!7602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !7603)
!7603 = !{!7604, !7605, !7606}
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7602, file: !367, line: 153, baseType: !22, size: 32)
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7602, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7602, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7526, file: !367, line: 325, baseType: !7608, size: 32, offset: 896)
!7608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7609, size: 32)
!7609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !7610)
!7610 = !{!7611, !7617, !7618}
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7609, file: !312, line: 5074, baseType: !7612, size: 96)
!7612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !7613)
!7613 = !{!7614, !7615, !7616}
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7612, file: !462, line: 57, baseType: !465, size: 32)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7612, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7612, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7609, file: !312, line: 5075, baseType: !7557, size: 64, offset: 96)
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7609, file: !312, line: 5076, baseType: !7619, offset: 160)
!7619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7526, file: !367, line: 343, baseType: !7621, size: 64, offset: 928)
!7621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !7622)
!7622 = !{!7623, !7624}
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7621, file: !436, line: 63, baseType: !132, size: 32)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7621, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!7625 = !{!7626}
!7626 = !DILocalVariable(name: "thread", arg: 1, scope: !7520, file: !7521, line: 27, type: !7524)
!7627 = !DILocation(line: 0, scope: !7520)
!7628 = !DILocation(line: 29, column: 6, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7520, file: !7521, line: 29, column: 6)
!7630 = !DILocation(line: 29, column: 15, scope: !7629)
!7631 = !DILocation(line: 29, column: 6, scope: !7520)
!7632 = !DILocation(line: 1031, column: 3, scope: !7633, inlinedAt: !7636)
!7633 = distinct !DISubprogram(name: "__get_IPSR", scope: !6844, file: !6844, line: 1027, type: !6925, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !7634)
!7634 = !{!7635}
!7635 = !DILocalVariable(name: "result", scope: !7633, file: !6844, line: 1029, type: !132)
!7636 = distinct !DILocation(line: 48, column: 10, scope: !7637, inlinedAt: !7641)
!7637 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7638, file: !7638, line: 46, type: !7639, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !473)
!7638 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7639 = !DISubroutineType(types: !7640)
!7640 = !{!166}
!7641 = distinct !DILocation(line: 30, column: 7, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7643, file: !7521, line: 30, column: 7)
!7643 = distinct !DILexicalBlock(scope: !7629, file: !7521, line: 29, column: 26)
!7644 = !{i64 3492817}
!7645 = !DILocation(line: 0, scope: !7633, inlinedAt: !7636)
!7646 = !DILocation(line: 48, column: 9, scope: !7637, inlinedAt: !7641)
!7647 = !DILocation(line: 30, column: 7, scope: !7643)
!7648 = !DILocation(line: 42, column: 14, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7642, file: !7521, line: 30, column: 25)
!7650 = !DILocation(line: 48, column: 15, scope: !7649)
!7651 = !DILocation(line: 49, column: 3, scope: !7649)
!7652 = !DILocation(line: 52, column: 2, scope: !7520)
!7653 = !DILocation(line: 53, column: 1, scope: !7520)
!7654 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !362, file: !362, line: 127, type: !3249, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !353, retainedNodes: !473)
!7655 = !DILocation(line: 134, column: 2, scope: !7654)
!7656 = !DILocation(line: 156, column: 1, scope: !7654)
!7657 = !DILocation(line: 0, scope: !361)
!7658 = !DILocation(line: 289, column: 36, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !361, file: !362, line: 285, column: 2)
!7660 = !DILocation(line: 289, column: 42, scope: !7659)
!7661 = !DILocation(line: 300, column: 36, scope: !361)
!7662 = !DILocation(line: 301, column: 35, scope: !361)
!7663 = !DILocation(line: 302, column: 37, scope: !361)
!7664 = !DILocation(line: 311, column: 2, scope: !361)
!7665 = !DILocation(line: 316, column: 1, scope: !361)
!7666 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !535, file: !535, line: 180, type: !3249, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7667 = !DILocation(line: 188, column: 12, scope: !7666)
!7668 = !DILocation(line: 271, column: 3, scope: !7669, inlinedAt: !7670)
!7669 = distinct !DISubprogram(name: "__DSB", scope: !6844, file: !6844, line: 269, type: !3249, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7670 = distinct !DILocation(line: 192, column: 2, scope: !7666)
!7671 = !{i64 3661645}
!7672 = !DILocation(line: 260, column: 3, scope: !7673, inlinedAt: !7674)
!7673 = distinct !DISubprogram(name: "__ISB", scope: !6844, file: !6844, line: 258, type: !3249, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7674 = distinct !DILocation(line: 193, column: 2, scope: !7666)
!7675 = !{i64 3661362}
!7676 = !DILocation(line: 194, column: 1, scope: !7666)
!7677 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !535, file: !535, line: 199, type: !3249, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7678 = !DILocation(line: 282, column: 3, scope: !7679, inlinedAt: !7680)
!7679 = distinct !DISubprogram(name: "__DMB", scope: !6844, file: !6844, line: 280, type: !3249, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7680 = distinct !DILocation(line: 202, column: 2, scope: !7677)
!7681 = !{i64 3661921}
!7682 = !DILocation(line: 205, column: 12, scope: !7677)
!7683 = !DILocation(line: 206, column: 1, scope: !7677)
!7684 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !535, file: !535, line: 275, type: !7685, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7698)
!7685 = !DISubroutineType(types: !7686)
!7686 = !{null, !7687, !265, !7112, !7112}
!7687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7688, size: 32)
!7688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7689)
!7689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !486, line: 52, size: 96, elements: !7690)
!7690 = !{!7691, !7692, !7693}
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7689, file: !486, line: 53, baseType: !22, size: 32)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7689, file: !486, line: 54, baseType: !356, size: 32, offset: 32)
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7689, file: !486, line: 55, baseType: !7694, size: 32, offset: 64)
!7694 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !492, line: 151, baseType: !7695)
!7695 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !492, line: 149, size: 32, elements: !7696)
!7696 = !{!7697}
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7695, file: !492, line: 150, baseType: !132, size: 32)
!7698 = !{!7699, !7700, !7701, !7702}
!7699 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7684, file: !535, line: 276, type: !7687)
!7700 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7684, file: !535, line: 276, type: !265)
!7701 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7684, file: !535, line: 277, type: !7112)
!7702 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7684, file: !535, line: 277, type: !7112)
!7703 = !DILocation(line: 0, scope: !7684)
!7704 = !DILocation(line: 279, column: 6, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7684, file: !535, line: 279, column: 6)
!7706 = !DILocation(line: 285, column: 1, scope: !7684)
!7707 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7708, file: !7708, line: 220, type: !7709, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7711)
!7708 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7709 = !DISubroutineType(types: !7710)
!7710 = !{!103, !7687, !265, !7112, !7112}
!7711 = !{!7712, !7713, !7714, !7715, !7716}
!7712 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7707, file: !7708, line: 221, type: !7687)
!7713 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7707, file: !7708, line: 221, type: !265)
!7714 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7707, file: !7708, line: 222, type: !7112)
!7715 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7707, file: !7708, line: 223, type: !7112)
!7716 = !DILocalVariable(name: "mpu_reg_index", scope: !7707, file: !7708, line: 225, type: !103)
!7717 = !DILocation(line: 0, scope: !7707)
!7718 = !DILocation(line: 225, column: 22, scope: !7707)
!7719 = !DILocation(line: 233, column: 18, scope: !7707)
!7720 = !DILocation(line: 236, column: 23, scope: !7707)
!7721 = !DILocation(line: 236, column: 21, scope: !7707)
!7722 = !DILocation(line: 238, column: 2, scope: !7707)
!7723 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !535, file: !535, line: 105, type: !7724, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7726)
!7724 = !DISubroutineType(types: !7725)
!7725 = !{!103, !7687, !163, !163, !166}
!7726 = !{!7727, !7728, !7729, !7730, !7731, !7732}
!7727 = !DILocalVariable(name: "regions", arg: 1, scope: !7723, file: !535, line: 106, type: !7687)
!7728 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7723, file: !535, line: 106, type: !163)
!7729 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7723, file: !535, line: 106, type: !163)
!7730 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7723, file: !535, line: 107, type: !166)
!7731 = !DILocalVariable(name: "i", scope: !7723, file: !535, line: 109, type: !103)
!7732 = !DILocalVariable(name: "reg_index", scope: !7723, file: !535, line: 110, type: !103)
!7733 = !DILocation(line: 0, scope: !7723)
!7734 = !DILocation(line: 110, column: 18, scope: !7723)
!7735 = !DILocation(line: 112, column: 16, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7737, file: !535, line: 112, column: 2)
!7737 = distinct !DILexicalBlock(scope: !7723, file: !535, line: 112, column: 2)
!7738 = !DILocation(line: 112, column: 2, scope: !7737)
!7739 = !DILocation(line: 113, column: 7, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !535, line: 113, column: 7)
!7741 = distinct !DILexicalBlock(scope: !7736, file: !535, line: 112, column: 36)
!7742 = !DILocation(line: 113, column: 18, scope: !7740)
!7743 = !DILocation(line: 113, column: 23, scope: !7740)
!7744 = !DILocation(line: 113, column: 7, scope: !7741)
!7745 = !DILocation(line: 118, column: 23, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7741, file: !535, line: 118, column: 7)
!7747 = !DILocation(line: 119, column: 7, scope: !7746)
!7748 = !DILocation(line: 118, column: 7, scope: !7741)
!7749 = !DILocation(line: 124, column: 36, scope: !7741)
!7750 = !DILocation(line: 124, column: 15, scope: !7741)
!7751 = !DILocation(line: 126, column: 17, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7741, file: !535, line: 126, column: 7)
!7753 = !DILocation(line: 126, column: 7, scope: !7741)
!7754 = !DILocation(line: 131, column: 12, scope: !7741)
!7755 = !DILocation(line: 132, column: 2, scope: !7741)
!7756 = !DILocation(line: 112, column: 32, scope: !7736)
!7757 = distinct !{!7757, !7738, !7758}
!7758 = !DILocation(line: 132, column: 2, scope: !7737)
!7759 = !DILocation(line: 135, column: 1, scope: !7723)
!7760 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7708, file: !7708, line: 63, type: !7761, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7763)
!7761 = !DISubroutineType(types: !7762)
!7762 = !{!103, !7687}
!7763 = !{!7764, !7765}
!7764 = !DILocalVariable(name: "part", arg: 1, scope: !7760, file: !7708, line: 63, type: !7687)
!7765 = !DILocalVariable(name: "partition_is_valid", scope: !7760, file: !7708, line: 70, type: !103)
!7766 = !DILocation(line: 0, scope: !7760)
!7767 = !DILocation(line: 71, column: 11, scope: !7760)
!7768 = !DILocation(line: 71, column: 37, scope: !7760)
!7769 = !DILocation(line: 72, column: 3, scope: !7760)
!7770 = !DILocation(line: 71, column: 30, scope: !7760)
!7771 = !DILocation(line: 75, column: 11, scope: !7760)
!7772 = !DILocation(line: 75, column: 17, scope: !7760)
!7773 = !DILocation(line: 75, column: 38, scope: !7760)
!7774 = !DILocation(line: 77, column: 2, scope: !7760)
!7775 = distinct !DISubprogram(name: "mpu_configure_region", scope: !535, file: !535, line: 79, type: !7776, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7778)
!7776 = !DISubroutineType(types: !7777)
!7777 = !{!103, !265, !7687}
!7778 = !{!7779, !7780, !7781}
!7779 = !DILocalVariable(name: "index", arg: 1, scope: !7775, file: !535, line: 79, type: !265)
!7780 = !DILocalVariable(name: "new_region", arg: 2, scope: !7775, file: !535, line: 80, type: !7687)
!7781 = !DILocalVariable(name: "region_conf", scope: !7775, file: !535, line: 82, type: !524)
!7782 = !DILocation(line: 0, scope: !7775)
!7783 = !DILocation(line: 82, column: 2, scope: !7775)
!7784 = !DILocation(line: 82, column: 24, scope: !7775)
!7785 = !DILocation(line: 87, column: 33, scope: !7775)
!7786 = !DILocation(line: 87, column: 14, scope: !7775)
!7787 = !DILocation(line: 87, column: 19, scope: !7775)
!7788 = !DILocation(line: 91, column: 55, scope: !7775)
!7789 = !DILocation(line: 92, column: 16, scope: !7775)
!7790 = !DILocation(line: 92, column: 53, scope: !7775)
!7791 = !DILocation(line: 91, column: 2, scope: !7775)
!7792 = !DILocation(line: 95, column: 9, scope: !7775)
!7793 = !DILocation(line: 97, column: 1, scope: !7775)
!7794 = !DILocation(line: 95, column: 2, scope: !7775)
!7795 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7708, file: !7708, line: 113, type: !7796, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7801)
!7796 = !DISubroutineType(types: !7797)
!7797 = !{null, !7798, !7799, !132, !132}
!7798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!7799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7800, size: 32)
!7800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7694)
!7801 = !{!7802, !7803, !7804, !7805}
!7802 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7795, file: !7708, line: 114, type: !7798)
!7803 = !DILocalVariable(name: "attr", arg: 2, scope: !7795, file: !7708, line: 115, type: !7799)
!7804 = !DILocalVariable(name: "base", arg: 3, scope: !7795, file: !7708, line: 115, type: !132)
!7805 = !DILocalVariable(name: "size", arg: 4, scope: !7795, file: !7708, line: 115, type: !132)
!7806 = !DILocation(line: 0, scope: !7795)
!7807 = !DILocation(line: 127, column: 23, scope: !7795)
!7808 = !DILocation(line: 127, column: 35, scope: !7795)
!7809 = !DILocation(line: 127, column: 33, scope: !7795)
!7810 = !DILocation(line: 127, column: 10, scope: !7795)
!7811 = !DILocation(line: 127, column: 15, scope: !7795)
!7812 = !DILocation(line: 129, column: 1, scope: !7795)
!7813 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !535, file: !535, line: 57, type: !7814, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7816)
!7814 = !DISubroutineType(types: !7815)
!7815 = !{!103, !265, !522}
!7816 = !{!7817, !7818}
!7817 = !DILocalVariable(name: "index", arg: 1, scope: !7813, file: !535, line: 57, type: !265)
!7818 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7813, file: !535, line: 58, type: !522)
!7819 = !DILocation(line: 0, scope: !7813)
!7820 = !DILocation(line: 61, column: 6, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7813, file: !535, line: 61, column: 6)
!7822 = !DILocation(line: 61, column: 12, scope: !7821)
!7823 = !DILocation(line: 61, column: 6, scope: !7813)
!7824 = !DILocation(line: 71, column: 2, scope: !7813)
!7825 = !DILocation(line: 73, column: 2, scope: !7813)
!7826 = !DILocation(line: 74, column: 1, scope: !7813)
!7827 = distinct !DISubprogram(name: "region_init", scope: !7708, file: !7708, line: 29, type: !7828, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7830)
!7828 = !DISubroutineType(types: !7829)
!7829 = !{null, !7112, !522}
!7830 = !{!7831, !7832}
!7831 = !DILocalVariable(name: "index", arg: 1, scope: !7827, file: !7708, line: 29, type: !7112)
!7832 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7827, file: !7708, line: 30, type: !522)
!7833 = !DILocation(line: 0, scope: !7827)
!7834 = !DILocation(line: 33, column: 2, scope: !7827)
!7835 = !DILocation(line: 47, column: 28, scope: !7827)
!7836 = !DILocation(line: 47, column: 33, scope: !7827)
!7837 = !DILocation(line: 48, column: 26, scope: !7827)
!7838 = !DILocation(line: 47, column: 12, scope: !7827)
!7839 = !DILocation(line: 49, column: 32, scope: !7827)
!7840 = !DILocation(line: 49, column: 37, scope: !7827)
!7841 = !DILocation(line: 49, column: 12, scope: !7827)
!7842 = !DILocation(line: 53, column: 1, scope: !7827)
!7843 = distinct !DISubprogram(name: "set_region_number", scope: !7844, file: !7844, line: 32, type: !6935, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7845)
!7844 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7845 = !{!7846}
!7846 = !DILocalVariable(name: "index", arg: 1, scope: !7843, file: !7844, line: 32, type: !132)
!7847 = !DILocation(line: 0, scope: !7843)
!7848 = !DILocation(line: 34, column: 11, scope: !7843)
!7849 = !DILocation(line: 35, column: 1, scope: !7843)
!7850 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7708, file: !7708, line: 88, type: !7851, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7853)
!7851 = !DISubroutineType(types: !7852)
!7852 = !{!132, !132}
!7853 = !{!7854}
!7854 = !DILocalVariable(name: "size", arg: 1, scope: !7850, file: !7708, line: 88, type: !132)
!7855 = !DILocation(line: 0, scope: !7850)
!7856 = !DILocation(line: 91, column: 11, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7850, file: !7708, line: 91, column: 6)
!7858 = !DILocation(line: 91, column: 6, scope: !7850)
!7859 = !DILocation(line: 100, column: 11, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7850, file: !7708, line: 100, column: 6)
!7861 = !DILocation(line: 100, column: 6, scope: !7850)
!7862 = !DILocation(line: 104, column: 35, scope: !7850)
!7863 = !DILocation(line: 104, column: 16, scope: !7850)
!7864 = !DILocation(line: 104, column: 50, scope: !7850)
!7865 = !DILocation(line: 104, column: 72, scope: !7850)
!7866 = !DILocation(line: 104, column: 2, scope: !7850)
!7867 = !DILocation(line: 106, column: 1, scope: !7850)
!7868 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !535, file: !535, line: 307, type: !7869, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7871)
!7869 = !DISubroutineType(types: !7870)
!7870 = !{null, !7687, !163}
!7871 = !{!7872, !7873}
!7872 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7868, file: !535, line: 308, type: !7687)
!7873 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7868, file: !535, line: 308, type: !163)
!7874 = !DILocation(line: 0, scope: !7868)
!7875 = !DILocation(line: 310, column: 6, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7868, file: !535, line: 310, column: 6)
!7877 = !DILocation(line: 316, column: 1, scope: !7868)
!7878 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7708, file: !7708, line: 249, type: !7879, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7881)
!7879 = !DISubroutineType(types: !7880)
!7880 = !{!103, !7687, !163}
!7881 = !{!7882, !7883, !7884, !7885}
!7882 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7878, file: !7708, line: 250, type: !7687)
!7883 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7878, file: !7708, line: 250, type: !163)
!7884 = !DILocalVariable(name: "mpu_reg_index", scope: !7878, file: !7708, line: 252, type: !103)
!7885 = !DILocalVariable(name: "i", scope: !7886, file: !7708, line: 264, type: !103)
!7886 = distinct !DILexicalBlock(scope: !7887, file: !7708, line: 264, column: 3)
!7887 = distinct !DILexicalBlock(scope: !7888, file: !7708, line: 261, column: 32)
!7888 = distinct !DILexicalBlock(scope: !7878, file: !7708, line: 261, column: 6)
!7889 = !DILocation(line: 0, scope: !7878)
!7890 = !DILocation(line: 252, column: 22, scope: !7878)
!7891 = !DILocation(line: 258, column: 18, scope: !7878)
!7892 = !DILocation(line: 261, column: 20, scope: !7888)
!7893 = !DILocation(line: 261, column: 6, scope: !7878)
!7894 = !DILocation(line: 0, scope: !7886)
!7895 = !DILocation(line: 265, column: 4, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7897, file: !7708, line: 264, column: 59)
!7897 = distinct !DILexicalBlock(scope: !7886, file: !7708, line: 264, column: 3)
!7898 = !DILocation(line: 264, column: 55, scope: !7897)
!7899 = !DILocation(line: 264, column: 33, scope: !7897)
!7900 = !DILocation(line: 264, column: 3, scope: !7886)
!7901 = distinct !{!7901, !7900, !7902}
!7902 = !DILocation(line: 266, column: 3, scope: !7886)
!7903 = !DILocation(line: 269, column: 2, scope: !7878)
!7904 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7905, file: !7905, line: 218, type: !6935, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7906)
!7905 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7906 = !{!7907}
!7907 = !DILocalVariable(name: "rnr", arg: 1, scope: !7904, file: !7905, line: 218, type: !132)
!7908 = !DILocation(line: 0, scope: !7904)
!7909 = !DILocation(line: 220, column: 12, scope: !7904)
!7910 = !DILocation(line: 221, column: 13, scope: !7904)
!7911 = !DILocation(line: 222, column: 1, scope: !7904)
!7912 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !535, file: !535, line: 326, type: !6648, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7913)
!7913 = !{!7914}
!7914 = !DILocalVariable(name: "r_index", scope: !7912, file: !535, line: 328, type: !132)
!7915 = !DILocation(line: 330, column: 17, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7912, file: !535, line: 330, column: 6)
!7917 = !DILocation(line: 330, column: 29, scope: !7916)
!7918 = !DILocation(line: 330, column: 6, scope: !7912)
!7919 = !DILocation(line: 347, column: 2, scope: !7912)
!7920 = !DILocation(line: 0, scope: !7912)
!7921 = !DILocation(line: 364, column: 29, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7923, file: !535, line: 364, column: 2)
!7923 = distinct !DILexicalBlock(scope: !7912, file: !535, line: 364, column: 2)
!7924 = !DILocation(line: 364, column: 2, scope: !7923)
!7925 = !DILocation(line: 365, column: 25, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7922, file: !535, line: 364, column: 66)
!7927 = !DILocation(line: 365, column: 3, scope: !7926)
!7928 = !DILocation(line: 364, column: 62, scope: !7922)
!7929 = distinct !{!7929, !7924, !7930}
!7930 = !DILocation(line: 366, column: 2, scope: !7923)
!7931 = !DILocation(line: 369, column: 23, scope: !7912)
!7932 = !DILocation(line: 369, column: 21, scope: !7912)
!7933 = !DILocation(line: 372, column: 2, scope: !7912)
!7934 = !DILocation(line: 443, column: 2, scope: !7912)
!7935 = !DILocation(line: 444, column: 1, scope: !7912)
!7936 = distinct !DISubprogram(name: "strcpy", scope: !7937, file: !7937, line: 20, type: !7938, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !7942)
!7937 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7938 = !DISubroutineType(types: !7939)
!7939 = !{!1081, !7940, !7941}
!7940 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1081)
!7941 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !155)
!7942 = !{!7943, !7944, !7945}
!7943 = !DILocalVariable(name: "d", arg: 1, scope: !7936, file: !7937, line: 20, type: !7940)
!7944 = !DILocalVariable(name: "s", arg: 2, scope: !7936, file: !7937, line: 20, type: !7941)
!7945 = !DILocalVariable(name: "dest", scope: !7936, file: !7937, line: 22, type: !1081)
!7946 = !DILocation(line: 0, scope: !7936)
!7947 = !DILocation(line: 24, column: 9, scope: !7936)
!7948 = !DILocation(line: 24, column: 12, scope: !7936)
!7949 = !DILocation(line: 24, column: 2, scope: !7936)
!7950 = !DILocation(line: 25, column: 6, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7936, file: !7937, line: 24, column: 21)
!7952 = !DILocation(line: 26, column: 4, scope: !7951)
!7953 = !DILocation(line: 27, column: 4, scope: !7951)
!7954 = distinct !{!7954, !7949, !7955}
!7955 = !DILocation(line: 28, column: 2, scope: !7936)
!7956 = !DILocation(line: 30, column: 5, scope: !7936)
!7957 = !DILocation(line: 32, column: 2, scope: !7936)
!7958 = distinct !DISubprogram(name: "strncpy", scope: !7937, file: !7937, line: 42, type: !7959, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !7961)
!7959 = !DISubroutineType(types: !7960)
!7960 = !{!1081, !7940, !7941, !356}
!7961 = !{!7962, !7963, !7964, !7965}
!7962 = !DILocalVariable(name: "d", arg: 1, scope: !7958, file: !7937, line: 42, type: !7940)
!7963 = !DILocalVariable(name: "s", arg: 2, scope: !7958, file: !7937, line: 42, type: !7941)
!7964 = !DILocalVariable(name: "n", arg: 3, scope: !7958, file: !7937, line: 42, type: !356)
!7965 = !DILocalVariable(name: "dest", scope: !7958, file: !7937, line: 44, type: !1081)
!7966 = !DILocation(line: 0, scope: !7958)
!7967 = !DILocation(line: 46, column: 12, scope: !7958)
!7968 = !DILocation(line: 46, column: 17, scope: !7958)
!7969 = !DILocation(line: 46, column: 20, scope: !7958)
!7970 = !DILocation(line: 46, column: 23, scope: !7958)
!7971 = !DILocation(line: 46, column: 2, scope: !7958)
!7972 = !DILocation(line: 47, column: 6, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7958, file: !7937, line: 46, column: 32)
!7974 = !DILocation(line: 48, column: 4, scope: !7973)
!7975 = !DILocation(line: 49, column: 4, scope: !7973)
!7976 = !DILocation(line: 50, column: 4, scope: !7973)
!7977 = distinct !{!7977, !7971, !7978}
!7978 = !DILocation(line: 51, column: 2, scope: !7958)
!7979 = !DILocation(line: 54, column: 6, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7958, file: !7937, line: 53, column: 16)
!7981 = !DILocation(line: 55, column: 4, scope: !7980)
!7982 = !DILocation(line: 56, column: 4, scope: !7980)
!7983 = !DILocation(line: 53, column: 11, scope: !7958)
!7984 = !DILocation(line: 53, column: 2, scope: !7958)
!7985 = distinct !{!7985, !7984, !7986}
!7986 = !DILocation(line: 57, column: 2, scope: !7958)
!7987 = !DILocation(line: 59, column: 2, scope: !7958)
!7988 = distinct !DISubprogram(name: "strchr", scope: !7937, file: !7937, line: 69, type: !7989, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !7991)
!7989 = !DISubroutineType(types: !7990)
!7990 = !{!1081, !155, !103}
!7991 = !{!7992, !7993, !7994}
!7992 = !DILocalVariable(name: "s", arg: 1, scope: !7988, file: !7937, line: 69, type: !155)
!7993 = !DILocalVariable(name: "c", arg: 2, scope: !7988, file: !7937, line: 69, type: !103)
!7994 = !DILocalVariable(name: "tmp", scope: !7988, file: !7937, line: 71, type: !108)
!7995 = !DILocation(line: 0, scope: !7988)
!7996 = !DILocation(line: 73, column: 2, scope: !7988)
!7997 = !DILocation(line: 73, column: 10, scope: !7988)
!7998 = !DILocation(line: 73, column: 13, scope: !7988)
!7999 = !DILocation(line: 73, column: 21, scope: !7988)
!8000 = !DILocation(line: 74, column: 4, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7988, file: !7937, line: 73, column: 38)
!8002 = distinct !{!8002, !7996, !8003}
!8003 = !DILocation(line: 75, column: 2, scope: !7988)
!8004 = !DILocation(line: 77, column: 9, scope: !7988)
!8005 = !DILocation(line: 77, column: 2, scope: !7988)
!8006 = distinct !DISubprogram(name: "strrchr", scope: !7937, file: !7937, line: 87, type: !7989, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8007)
!8007 = !{!8008, !8009, !8010}
!8008 = !DILocalVariable(name: "s", arg: 1, scope: !8006, file: !7937, line: 87, type: !155)
!8009 = !DILocalVariable(name: "c", arg: 2, scope: !8006, file: !7937, line: 87, type: !103)
!8010 = !DILocalVariable(name: "match", scope: !8006, file: !7937, line: 89, type: !1081)
!8011 = !DILocation(line: 0, scope: !8006)
!8012 = !DILocation(line: 91, column: 2, scope: !8006)
!8013 = !DILocation(line: 92, column: 7, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8015, file: !7937, line: 92, column: 7)
!8015 = distinct !DILexicalBlock(scope: !8006, file: !7937, line: 91, column: 5)
!8016 = !DILocation(line: 92, column: 10, scope: !8014)
!8017 = !DILocation(line: 92, column: 7, scope: !8015)
!8018 = !DILocation(line: 95, column: 13, scope: !8006)
!8019 = !DILocation(line: 95, column: 2, scope: !8015)
!8020 = distinct !{!8020, !8012, !8021}
!8021 = !DILocation(line: 95, column: 15, scope: !8006)
!8022 = !DILocation(line: 97, column: 2, scope: !8006)
!8023 = distinct !DISubprogram(name: "strlen", scope: !7937, file: !7937, line: 107, type: !8024, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8026)
!8024 = !DISubroutineType(types: !8025)
!8025 = !{!356, !155}
!8026 = !{!8027, !8028}
!8027 = !DILocalVariable(name: "s", arg: 1, scope: !8023, file: !7937, line: 107, type: !155)
!8028 = !DILocalVariable(name: "n", scope: !8023, file: !7937, line: 109, type: !356)
!8029 = !DILocation(line: 0, scope: !8023)
!8030 = !DILocation(line: 111, column: 9, scope: !8023)
!8031 = !DILocation(line: 111, column: 12, scope: !8023)
!8032 = !DILocation(line: 111, column: 2, scope: !8023)
!8033 = !DILocation(line: 112, column: 4, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8023, file: !7937, line: 111, column: 21)
!8035 = !DILocation(line: 113, column: 4, scope: !8034)
!8036 = distinct !{!8036, !8032, !8037}
!8037 = !DILocation(line: 114, column: 2, scope: !8023)
!8038 = !DILocation(line: 116, column: 2, scope: !8023)
!8039 = distinct !DISubprogram(name: "strnlen", scope: !7937, file: !7937, line: 126, type: !8040, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8042)
!8040 = !DISubroutineType(types: !8041)
!8041 = !{!356, !155, !356}
!8042 = !{!8043, !8044, !8045}
!8043 = !DILocalVariable(name: "s", arg: 1, scope: !8039, file: !7937, line: 126, type: !155)
!8044 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8039, file: !7937, line: 126, type: !356)
!8045 = !DILocalVariable(name: "n", scope: !8039, file: !7937, line: 128, type: !356)
!8046 = !DILocation(line: 0, scope: !8039)
!8047 = !DILocation(line: 130, column: 9, scope: !8039)
!8048 = !DILocation(line: 130, column: 12, scope: !8039)
!8049 = !DILocation(line: 130, column: 20, scope: !8039)
!8050 = !DILocation(line: 130, column: 2, scope: !8039)
!8051 = !DILocation(line: 131, column: 4, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8039, file: !7937, line: 130, column: 35)
!8053 = !DILocation(line: 132, column: 4, scope: !8052)
!8054 = distinct !{!8054, !8050, !8055}
!8055 = !DILocation(line: 133, column: 2, scope: !8039)
!8056 = !DILocation(line: 135, column: 2, scope: !8039)
!8057 = distinct !DISubprogram(name: "strcmp", scope: !7937, file: !7937, line: 145, type: !8058, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8060)
!8058 = !DISubroutineType(types: !8059)
!8059 = !{!103, !155, !155}
!8060 = !{!8061, !8062}
!8061 = !DILocalVariable(name: "s1", arg: 1, scope: !8057, file: !7937, line: 145, type: !155)
!8062 = !DILocalVariable(name: "s2", arg: 2, scope: !8057, file: !7937, line: 145, type: !155)
!8063 = !DILocation(line: 0, scope: !8057)
!8064 = !DILocation(line: 147, column: 10, scope: !8057)
!8065 = !DILocation(line: 147, column: 17, scope: !8057)
!8066 = !DILocation(line: 147, column: 14, scope: !8057)
!8067 = !DILocation(line: 147, column: 22, scope: !8057)
!8068 = !DILocation(line: 148, column: 5, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8057, file: !7937, line: 147, column: 40)
!8070 = !DILocation(line: 149, column: 5, scope: !8069)
!8071 = distinct !{!8071, !8072, !8073}
!8072 = !DILocation(line: 147, column: 2, scope: !8057)
!8073 = !DILocation(line: 150, column: 2, scope: !8057)
!8074 = !DILocation(line: 152, column: 9, scope: !8057)
!8075 = !DILocation(line: 152, column: 15, scope: !8057)
!8076 = !DILocation(line: 152, column: 13, scope: !8057)
!8077 = !DILocation(line: 152, column: 2, scope: !8057)
!8078 = distinct !DISubprogram(name: "strncmp", scope: !7937, file: !7937, line: 162, type: !8079, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8081)
!8079 = !DISubroutineType(types: !8080)
!8080 = !{!103, !155, !155, !356}
!8081 = !{!8082, !8083, !8084}
!8082 = !DILocalVariable(name: "s1", arg: 1, scope: !8078, file: !7937, line: 162, type: !155)
!8083 = !DILocalVariable(name: "s2", arg: 2, scope: !8078, file: !7937, line: 162, type: !155)
!8084 = !DILocalVariable(name: "n", arg: 3, scope: !8078, file: !7937, line: 162, type: !356)
!8085 = !DILocation(line: 0, scope: !8078)
!8086 = !DILocation(line: 164, column: 17, scope: !8078)
!8087 = !DILocation(line: 164, column: 21, scope: !8078)
!8088 = !DILocation(line: 164, column: 28, scope: !8078)
!8089 = !DILocation(line: 164, column: 25, scope: !8078)
!8090 = !DILocation(line: 164, column: 33, scope: !8078)
!8091 = !DILocation(line: 165, column: 5, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8078, file: !7937, line: 164, column: 51)
!8093 = !DILocation(line: 166, column: 5, scope: !8092)
!8094 = !DILocation(line: 167, column: 4, scope: !8092)
!8095 = distinct !{!8095, !8096, !8097}
!8096 = !DILocation(line: 164, column: 2, scope: !8078)
!8097 = !DILocation(line: 168, column: 2, scope: !8078)
!8098 = !DILocation(line: 170, column: 25, scope: !8078)
!8099 = !DILocation(line: 170, column: 31, scope: !8078)
!8100 = !DILocation(line: 170, column: 29, scope: !8078)
!8101 = !DILocation(line: 170, column: 9, scope: !8078)
!8102 = !DILocation(line: 170, column: 2, scope: !8078)
!8103 = distinct !DISubprogram(name: "strtok_r", scope: !7937, file: !7937, line: 180, type: !8104, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8107)
!8104 = !DISubroutineType(types: !8105)
!8105 = !{!1081, !1081, !155, !8106}
!8106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!8107 = !{!8108, !8109, !8110, !8111, !8112}
!8108 = !DILocalVariable(name: "str", arg: 1, scope: !8103, file: !7937, line: 180, type: !1081)
!8109 = !DILocalVariable(name: "sep", arg: 2, scope: !8103, file: !7937, line: 180, type: !155)
!8110 = !DILocalVariable(name: "state", arg: 3, scope: !8103, file: !7937, line: 180, type: !8106)
!8111 = !DILocalVariable(name: "start", scope: !8103, file: !7937, line: 182, type: !1081)
!8112 = !DILocalVariable(name: "end", scope: !8103, file: !7937, line: 182, type: !1081)
!8113 = !DILocation(line: 0, scope: !8103)
!8114 = !DILocation(line: 184, column: 10, scope: !8103)
!8115 = !DILocation(line: 184, column: 22, scope: !8103)
!8116 = !DILocation(line: 187, column: 9, scope: !8103)
!8117 = !DILocation(line: 187, column: 16, scope: !8103)
!8118 = !DILocation(line: 187, column: 19, scope: !8103)
!8119 = !DILocation(line: 187, column: 2, scope: !8103)
!8120 = !DILocation(line: 188, column: 8, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8103, file: !7937, line: 187, column: 40)
!8122 = distinct !{!8122, !8119, !8123}
!8123 = !DILocation(line: 189, column: 2, scope: !8103)
!8124 = !DILocation(line: 198, column: 9, scope: !8103)
!8125 = !DILocation(line: 198, column: 18, scope: !8103)
!8126 = !DILocation(line: 198, column: 17, scope: !8103)
!8127 = !DILocation(line: 198, column: 2, scope: !8103)
!8128 = !DILocation(line: 199, column: 6, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8103, file: !7937, line: 198, column: 37)
!8130 = !DILocation(line: 198, column: 14, scope: !8103)
!8131 = distinct !{!8131, !8127, !8132}
!8132 = !DILocation(line: 200, column: 2, scope: !8103)
!8133 = !DILocation(line: 203, column: 8, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !7937, line: 202, column: 20)
!8135 = distinct !DILexicalBlock(scope: !8103, file: !7937, line: 202, column: 6)
!8136 = !DILocation(line: 204, column: 16, scope: !8134)
!8137 = !DILocation(line: 205, column: 2, scope: !8134)
!8138 = !DILocation(line: 210, column: 1, scope: !8103)
!8139 = distinct !DISubprogram(name: "strcat", scope: !7937, file: !7937, line: 212, type: !7938, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8140)
!8140 = !{!8141, !8142}
!8141 = !DILocalVariable(name: "dest", arg: 1, scope: !8139, file: !7937, line: 212, type: !7940)
!8142 = !DILocalVariable(name: "src", arg: 2, scope: !8139, file: !7937, line: 212, type: !7941)
!8143 = !DILocation(line: 0, scope: !8139)
!8144 = !DILocation(line: 214, column: 16, scope: !8139)
!8145 = !DILocation(line: 214, column: 14, scope: !8139)
!8146 = !DILocation(line: 214, column: 2, scope: !8139)
!8147 = !DILocation(line: 215, column: 2, scope: !8139)
!8148 = distinct !DISubprogram(name: "strncat", scope: !7937, file: !7937, line: 218, type: !7959, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8149)
!8149 = !{!8150, !8151, !8152, !8153, !8154}
!8150 = !DILocalVariable(name: "dest", arg: 1, scope: !8148, file: !7937, line: 218, type: !7940)
!8151 = !DILocalVariable(name: "src", arg: 2, scope: !8148, file: !7937, line: 218, type: !7941)
!8152 = !DILocalVariable(name: "n", arg: 3, scope: !8148, file: !7937, line: 219, type: !356)
!8153 = !DILocalVariable(name: "orig_dest", scope: !8148, file: !7937, line: 221, type: !1081)
!8154 = !DILocalVariable(name: "len", scope: !8148, file: !7937, line: 222, type: !356)
!8155 = !DILocation(line: 0, scope: !8148)
!8156 = !DILocation(line: 222, column: 15, scope: !8148)
!8157 = !DILocation(line: 224, column: 7, scope: !8148)
!8158 = !DILocation(line: 225, column: 14, scope: !8148)
!8159 = !DILocation(line: 225, column: 19, scope: !8148)
!8160 = !DILocation(line: 225, column: 11, scope: !8148)
!8161 = !DILocation(line: 225, column: 23, scope: !8148)
!8162 = !DILocation(line: 225, column: 28, scope: !8148)
!8163 = !DILocation(line: 225, column: 2, scope: !8148)
!8164 = !DILocation(line: 226, column: 17, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8148, file: !7937, line: 225, column: 38)
!8166 = !DILocation(line: 226, column: 8, scope: !8165)
!8167 = !DILocation(line: 226, column: 11, scope: !8165)
!8168 = distinct !{!8168, !8163, !8169}
!8169 = !DILocation(line: 227, column: 2, scope: !8148)
!8170 = !DILocation(line: 228, column: 8, scope: !8148)
!8171 = !DILocation(line: 230, column: 2, scope: !8148)
!8172 = distinct !DISubprogram(name: "memcmp", scope: !7937, file: !7937, line: 239, type: !8173, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8175)
!8173 = !DISubroutineType(types: !8174)
!8174 = !{!103, !13, !13, !356}
!8175 = !{!8176, !8177, !8178, !8179, !8180}
!8176 = !DILocalVariable(name: "m1", arg: 1, scope: !8172, file: !7937, line: 239, type: !13)
!8177 = !DILocalVariable(name: "m2", arg: 2, scope: !8172, file: !7937, line: 239, type: !13)
!8178 = !DILocalVariable(name: "n", arg: 3, scope: !8172, file: !7937, line: 239, type: !356)
!8179 = !DILocalVariable(name: "c1", scope: !8172, file: !7937, line: 241, type: !155)
!8180 = !DILocalVariable(name: "c2", scope: !8172, file: !7937, line: 242, type: !155)
!8181 = !DILocation(line: 0, scope: !8172)
!8182 = !DILocation(line: 244, column: 7, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8172, file: !7937, line: 244, column: 6)
!8184 = !DILocation(line: 244, column: 6, scope: !8172)
!8185 = !DILocation(line: 248, column: 10, scope: !8172)
!8186 = !DILocation(line: 248, column: 14, scope: !8172)
!8187 = !DILocation(line: 248, column: 19, scope: !8172)
!8188 = !DILocation(line: 248, column: 2, scope: !8172)
!8189 = !DILocation(line: 248, column: 23, scope: !8172)
!8190 = !DILocation(line: 248, column: 30, scope: !8172)
!8191 = !DILocation(line: 248, column: 27, scope: !8172)
!8192 = !DILocation(line: 249, column: 5, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8172, file: !7937, line: 248, column: 36)
!8194 = !DILocation(line: 250, column: 5, scope: !8193)
!8195 = distinct !{!8195, !8188, !8196}
!8196 = !DILocation(line: 251, column: 2, scope: !8172)
!8197 = !DILocation(line: 253, column: 9, scope: !8172)
!8198 = !DILocation(line: 253, column: 15, scope: !8172)
!8199 = !DILocation(line: 253, column: 13, scope: !8172)
!8200 = !DILocation(line: 253, column: 2, scope: !8172)
!8201 = !DILocation(line: 254, column: 1, scope: !8172)
!8202 = distinct !DISubprogram(name: "memmove", scope: !7937, file: !7937, line: 263, type: !8203, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8205)
!8203 = !DISubroutineType(types: !8204)
!8204 = !{!102, !102, !13, !356}
!8205 = !{!8206, !8207, !8208, !8209, !8210}
!8206 = !DILocalVariable(name: "d", arg: 1, scope: !8202, file: !7937, line: 263, type: !102)
!8207 = !DILocalVariable(name: "s", arg: 2, scope: !8202, file: !7937, line: 263, type: !13)
!8208 = !DILocalVariable(name: "n", arg: 3, scope: !8202, file: !7937, line: 263, type: !356)
!8209 = !DILocalVariable(name: "dest", scope: !8202, file: !7937, line: 265, type: !1081)
!8210 = !DILocalVariable(name: "src", scope: !8202, file: !7937, line: 266, type: !155)
!8211 = !DILocation(line: 0, scope: !8202)
!8212 = !DILocation(line: 268, column: 21, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8202, file: !7937, line: 268, column: 6)
!8214 = !DILocation(line: 268, column: 28, scope: !8213)
!8215 = !DILocation(line: 268, column: 6, scope: !8202)
!8216 = !DILocation(line: 280, column: 12, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8213, file: !7937, line: 278, column: 9)
!8218 = !DILocation(line: 280, column: 3, scope: !8217)
!8219 = !DILocation(line: 275, column: 5, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8221, file: !7937, line: 274, column: 17)
!8221 = distinct !DILexicalBlock(scope: !8213, file: !7937, line: 268, column: 33)
!8222 = !DILocation(line: 276, column: 14, scope: !8220)
!8223 = !DILocation(line: 276, column: 4, scope: !8220)
!8224 = !DILocation(line: 276, column: 12, scope: !8220)
!8225 = !DILocation(line: 274, column: 12, scope: !8221)
!8226 = !DILocation(line: 274, column: 3, scope: !8221)
!8227 = distinct !{!8227, !8226, !8228}
!8228 = !DILocation(line: 277, column: 3, scope: !8221)
!8229 = !DILocation(line: 281, column: 12, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8217, file: !7937, line: 280, column: 17)
!8231 = !DILocation(line: 281, column: 10, scope: !8230)
!8232 = !DILocation(line: 282, column: 8, scope: !8230)
!8233 = !DILocation(line: 283, column: 7, scope: !8230)
!8234 = !DILocation(line: 284, column: 5, scope: !8230)
!8235 = distinct !{!8235, !8218, !8236}
!8236 = !DILocation(line: 285, column: 3, scope: !8217)
!8237 = !DILocation(line: 288, column: 2, scope: !8202)
!8238 = distinct !DISubprogram(name: "memcpy", scope: !7937, file: !7937, line: 298, type: !8239, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8243)
!8239 = !DISubroutineType(types: !8240)
!8240 = !{!102, !8241, !8242, !356}
!8241 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8242 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8243 = !{!8244, !8245, !8246, !8247, !8248}
!8244 = !DILocalVariable(name: "d", arg: 1, scope: !8238, file: !7937, line: 298, type: !8241)
!8245 = !DILocalVariable(name: "s", arg: 2, scope: !8238, file: !7937, line: 298, type: !8242)
!8246 = !DILocalVariable(name: "n", arg: 3, scope: !8238, file: !7937, line: 298, type: !356)
!8247 = !DILocalVariable(name: "d_byte", scope: !8238, file: !7937, line: 302, type: !233)
!8248 = !DILocalVariable(name: "s_byte", scope: !8238, file: !7937, line: 303, type: !3018)
!8249 = !DILocation(line: 0, scope: !8238)
!8250 = !DILocation(line: 337, column: 11, scope: !8238)
!8251 = !DILocation(line: 337, column: 2, scope: !8238)
!8252 = !DILocation(line: 338, column: 25, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8238, file: !7937, line: 337, column: 16)
!8254 = !DILocation(line: 338, column: 17, scope: !8253)
!8255 = !DILocation(line: 338, column: 11, scope: !8253)
!8256 = !DILocation(line: 338, column: 15, scope: !8253)
!8257 = !DILocation(line: 339, column: 4, scope: !8253)
!8258 = distinct !{!8258, !8251, !8259}
!8259 = !DILocation(line: 340, column: 2, scope: !8238)
!8260 = !DILocation(line: 342, column: 2, scope: !8238)
!8261 = distinct !DISubprogram(name: "memset", scope: !7937, file: !7937, line: 352, type: !8262, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8264)
!8262 = !DISubroutineType(types: !8263)
!8263 = !{!102, !102, !103, !356}
!8264 = !{!8265, !8266, !8267, !8268, !8269}
!8265 = !DILocalVariable(name: "buf", arg: 1, scope: !8261, file: !7937, line: 352, type: !102)
!8266 = !DILocalVariable(name: "c", arg: 2, scope: !8261, file: !7937, line: 352, type: !103)
!8267 = !DILocalVariable(name: "n", arg: 3, scope: !8261, file: !7937, line: 352, type: !356)
!8268 = !DILocalVariable(name: "d_byte", scope: !8261, file: !7937, line: 356, type: !233)
!8269 = !DILocalVariable(name: "c_byte", scope: !8261, file: !7937, line: 357, type: !164)
!8270 = !DILocation(line: 0, scope: !8261)
!8271 = !DILocation(line: 357, column: 25, scope: !8261)
!8272 = !DILocation(line: 389, column: 11, scope: !8261)
!8273 = !DILocation(line: 389, column: 2, scope: !8261)
!8274 = !DILocation(line: 390, column: 11, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8261, file: !7937, line: 389, column: 16)
!8276 = !DILocation(line: 390, column: 15, scope: !8275)
!8277 = !DILocation(line: 391, column: 4, scope: !8275)
!8278 = distinct !{!8278, !8273, !8279}
!8279 = !DILocation(line: 392, column: 2, scope: !8261)
!8280 = !DILocation(line: 394, column: 2, scope: !8261)
!8281 = distinct !DISubprogram(name: "memchr", scope: !7937, file: !7937, line: 404, type: !8282, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8284)
!8282 = !DISubroutineType(types: !8283)
!8283 = !{!102, !13, !103, !356}
!8284 = !{!8285, !8286, !8287, !8288}
!8285 = !DILocalVariable(name: "s", arg: 1, scope: !8281, file: !7937, line: 404, type: !13)
!8286 = !DILocalVariable(name: "c", arg: 2, scope: !8281, file: !7937, line: 404, type: !103)
!8287 = !DILocalVariable(name: "n", arg: 3, scope: !8281, file: !7937, line: 404, type: !356)
!8288 = !DILocalVariable(name: "p", scope: !8289, file: !7937, line: 407, type: !3018)
!8289 = distinct !DILexicalBlock(scope: !8290, file: !7937, line: 406, column: 14)
!8290 = distinct !DILexicalBlock(scope: !8281, file: !7937, line: 406, column: 6)
!8291 = !DILocation(line: 0, scope: !8281)
!8292 = !DILocation(line: 406, column: 8, scope: !8290)
!8293 = !DILocation(line: 406, column: 6, scope: !8281)
!8294 = !DILocation(line: 409, column: 3, scope: !8289)
!8295 = !DILocation(line: 0, scope: !8289)
!8296 = !DILocation(line: 410, column: 8, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8298, file: !7937, line: 410, column: 8)
!8298 = distinct !DILexicalBlock(scope: !8289, file: !7937, line: 409, column: 6)
!8299 = !DILocation(line: 410, column: 13, scope: !8297)
!8300 = !DILocation(line: 410, column: 8, scope: !8298)
!8301 = distinct !{!8301, !8294, !8302}
!8302 = !DILocation(line: 414, column: 20, scope: !8289)
!8303 = !DILocation(line: 417, column: 2, scope: !8281)
!8304 = !DILocation(line: 418, column: 1, scope: !8281)
!8305 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !545, file: !545, line: 23, type: !3387, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8306)
!8306 = !{!8307}
!8307 = !DILocalVariable(name: "hook", arg: 1, scope: !8305, file: !545, line: 23, type: !117)
!8308 = !DILocation(line: 0, scope: !8305)
!8309 = !DILocation(line: 25, column: 15, scope: !8305)
!8310 = !DILocation(line: 26, column: 1, scope: !8305)
!8311 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !545, file: !545, line: 14, type: !118, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8312)
!8312 = !{!8313}
!8313 = !DILocalVariable(name: "c", arg: 1, scope: !8311, file: !545, line: 14, type: !103)
!8314 = !DILocation(line: 0, scope: !8311)
!8315 = !DILocation(line: 18, column: 2, scope: !8311)
!8316 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !545, file: !545, line: 28, type: !8317, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8319)
!8317 = !DISubroutineType(types: !8318)
!8318 = !{!103, !103, !541}
!8319 = !{!8320, !8321}
!8320 = !DILocalVariable(name: "c", arg: 1, scope: !8316, file: !545, line: 28, type: !103)
!8321 = !DILocalVariable(name: "stream", arg: 2, scope: !8316, file: !545, line: 28, type: !541)
!8322 = !DILocation(line: 0, scope: !8316)
!8323 = !DILocation(line: 30, column: 27, scope: !8316)
!8324 = !DILocation(line: 30, column: 50, scope: !8316)
!8325 = !DILocation(line: 30, column: 9, scope: !8316)
!8326 = !DILocation(line: 30, column: 2, scope: !8316)
!8327 = distinct !DISubprogram(name: "fputc", scope: !545, file: !545, line: 41, type: !8317, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8328)
!8328 = !{!8329, !8330}
!8329 = !DILocalVariable(name: "c", arg: 1, scope: !8327, file: !545, line: 41, type: !103)
!8330 = !DILocalVariable(name: "stream", arg: 2, scope: !8327, file: !545, line: 41, type: !541)
!8331 = !DILocation(line: 0, scope: !8327)
!8332 = !DILocation(line: 43, column: 9, scope: !8327)
!8333 = !DILocation(line: 43, column: 2, scope: !8327)
!8334 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8335, file: !8335, line: 72, type: !8317, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8336)
!8335 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_argonkey/subsys/console/echo")
!8336 = !{!8337, !8338}
!8337 = !DILocalVariable(name: "c", arg: 1, scope: !8334, file: !8335, line: 72, type: !103)
!8338 = !DILocalVariable(name: "stream", arg: 2, scope: !8334, file: !8335, line: 72, type: !541)
!8339 = !DILocation(line: 0, scope: !8334)
!8340 = !DILocation(line: 81, column: 2, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8334, file: !8335, line: 81, column: 2)
!8342 = !{i64 2154803713}
!8343 = !DILocation(line: 82, column: 9, scope: !8334)
!8344 = !DILocation(line: 82, column: 2, scope: !8334)
!8345 = distinct !DISubprogram(name: "fputs", scope: !545, file: !545, line: 46, type: !8346, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8349)
!8346 = !DISubroutineType(types: !8347)
!8347 = !{!103, !7941, !8348}
!8348 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !541)
!8349 = !{!8350, !8351, !8352, !8353}
!8350 = !DILocalVariable(name: "s", arg: 1, scope: !8345, file: !545, line: 46, type: !7941)
!8351 = !DILocalVariable(name: "stream", arg: 2, scope: !8345, file: !545, line: 46, type: !8348)
!8352 = !DILocalVariable(name: "len", scope: !8345, file: !545, line: 48, type: !103)
!8353 = !DILocalVariable(name: "ret", scope: !8345, file: !545, line: 49, type: !103)
!8354 = !DILocation(line: 0, scope: !8345)
!8355 = !DILocation(line: 48, column: 12, scope: !8345)
!8356 = !DILocation(line: 51, column: 8, scope: !8345)
!8357 = !DILocation(line: 53, column: 13, scope: !8345)
!8358 = !DILocation(line: 53, column: 9, scope: !8345)
!8359 = !DILocation(line: 53, column: 2, scope: !8345)
!8360 = distinct !DISubprogram(name: "fwrite", scope: !545, file: !545, line: 99, type: !8361, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8363)
!8361 = !DISubroutineType(types: !8362)
!8362 = !{!356, !8242, !356, !356, !8348}
!8363 = !{!8364, !8365, !8366, !8367}
!8364 = !DILocalVariable(name: "ptr", arg: 1, scope: !8360, file: !545, line: 99, type: !8242)
!8365 = !DILocalVariable(name: "size", arg: 2, scope: !8360, file: !545, line: 99, type: !356)
!8366 = !DILocalVariable(name: "nitems", arg: 3, scope: !8360, file: !545, line: 99, type: !356)
!8367 = !DILocalVariable(name: "stream", arg: 4, scope: !8360, file: !545, line: 100, type: !8348)
!8368 = !DILocation(line: 0, scope: !8360)
!8369 = !DILocation(line: 102, column: 9, scope: !8360)
!8370 = !DILocation(line: 102, column: 2, scope: !8360)
!8371 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8335, file: !8335, line: 96, type: !8361, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8372)
!8372 = !{!8373, !8374, !8375, !8376}
!8373 = !DILocalVariable(name: "ptr", arg: 1, scope: !8371, file: !8335, line: 96, type: !8242)
!8374 = !DILocalVariable(name: "size", arg: 2, scope: !8371, file: !8335, line: 96, type: !356)
!8375 = !DILocalVariable(name: "nitems", arg: 3, scope: !8371, file: !8335, line: 96, type: !356)
!8376 = !DILocalVariable(name: "stream", arg: 4, scope: !8371, file: !8335, line: 96, type: !8348)
!8377 = !DILocation(line: 0, scope: !8371)
!8378 = !DILocation(line: 107, column: 2, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8371, file: !8335, line: 107, column: 2)
!8380 = !{i64 2154803817}
!8381 = !DILocation(line: 108, column: 9, scope: !8371)
!8382 = !DILocation(line: 108, column: 2, scope: !8371)
!8383 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !545, file: !545, line: 56, type: !8361, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8384)
!8384 = !{!8385, !8386, !8387, !8388, !8389, !8390, !8391, !8392}
!8385 = !DILocalVariable(name: "ptr", arg: 1, scope: !8383, file: !545, line: 56, type: !8242)
!8386 = !DILocalVariable(name: "size", arg: 2, scope: !8383, file: !545, line: 56, type: !356)
!8387 = !DILocalVariable(name: "nitems", arg: 3, scope: !8383, file: !545, line: 57, type: !356)
!8388 = !DILocalVariable(name: "stream", arg: 4, scope: !8383, file: !545, line: 57, type: !8348)
!8389 = !DILocalVariable(name: "i", scope: !8383, file: !545, line: 59, type: !356)
!8390 = !DILocalVariable(name: "j", scope: !8383, file: !545, line: 60, type: !356)
!8391 = !DILocalVariable(name: "p", scope: !8383, file: !545, line: 61, type: !3018)
!8392 = !DILabel(scope: !8383, name: "done", file: !545, line: 82)
!8393 = !DILocation(line: 0, scope: !8383)
!8394 = !DILocation(line: 63, column: 14, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8383, file: !545, line: 63, column: 6)
!8396 = !DILocation(line: 63, column: 24, scope: !8395)
!8397 = !DILocation(line: 72, column: 3, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8383, file: !545, line: 70, column: 5)
!8399 = !DILocation(line: 0, scope: !8398)
!8400 = !DILocation(line: 73, column: 8, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8402, file: !545, line: 73, column: 8)
!8402 = distinct !DILexicalBlock(scope: !8398, file: !545, line: 72, column: 6)
!8403 = !DILocation(line: 73, column: 29, scope: !8401)
!8404 = !DILocation(line: 73, column: 27, scope: !8401)
!8405 = !DILocation(line: 73, column: 21, scope: !8401)
!8406 = !DILocation(line: 73, column: 33, scope: !8401)
!8407 = !DILocation(line: 73, column: 8, scope: !8402)
!8408 = !DILocation(line: 76, column: 5, scope: !8402)
!8409 = !DILocation(line: 77, column: 14, scope: !8398)
!8410 = !DILocation(line: 77, column: 3, scope: !8402)
!8411 = distinct !{!8411, !8397, !8412}
!8412 = !DILocation(line: 77, column: 17, scope: !8398)
!8413 = !DILocation(line: 79, column: 4, scope: !8398)
!8414 = !DILocation(line: 80, column: 13, scope: !8383)
!8415 = !DILocation(line: 80, column: 2, scope: !8398)
!8416 = distinct !{!8416, !8417, !8418}
!8417 = !DILocation(line: 70, column: 2, scope: !8383)
!8418 = !DILocation(line: 80, column: 16, scope: !8383)
!8419 = !DILocation(line: 82, column: 1, scope: !8383)
!8420 = !DILocation(line: 83, column: 17, scope: !8383)
!8421 = !DILocation(line: 83, column: 2, scope: !8383)
!8422 = !DILocation(line: 84, column: 1, scope: !8383)
!8423 = distinct !DISubprogram(name: "puts", scope: !545, file: !545, line: 106, type: !8424, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8426)
!8424 = !DISubroutineType(types: !8425)
!8425 = !{!103, !155}
!8426 = !{!8427}
!8427 = !DILocalVariable(name: "s", arg: 1, scope: !8423, file: !545, line: 106, type: !155)
!8428 = !DILocation(line: 0, scope: !8423)
!8429 = !DILocation(line: 108, column: 6, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8423, file: !545, line: 108, column: 6)
!8431 = !DILocation(line: 108, column: 23, scope: !8430)
!8432 = !DILocation(line: 108, column: 6, scope: !8423)
!8433 = !DILocation(line: 112, column: 9, scope: !8423)
!8434 = !DILocation(line: 112, column: 29, scope: !8423)
!8435 = !DILocation(line: 112, column: 2, scope: !8423)
!8436 = !DILocation(line: 113, column: 1, scope: !8423)
!8437 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !677, file: !677, line: 368, type: !730, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8438)
!8438 = !{!8439}
!8439 = !DILocalVariable(name: "dev", arg: 1, scope: !8437, file: !677, line: 368, type: !706)
!8440 = !DILocation(line: 0, scope: !8437)
!8441 = !DILocation(line: 370, column: 2, scope: !8437)
!8442 = !DILocation(line: 371, column: 1, scope: !8437)
!8443 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !677, file: !677, line: 243, type: !8444, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8446)
!8444 = !DISubroutineType(types: !8445)
!8445 = !{null, !103, !103, !706}
!8446 = !{!8447, !8448, !8449, !8450, !8452}
!8447 = !DILocalVariable(name: "min", arg: 1, scope: !8443, file: !677, line: 243, type: !103)
!8448 = !DILocalVariable(name: "max", arg: 2, scope: !8443, file: !677, line: 243, type: !103)
!8449 = !DILocalVariable(name: "dev", arg: 3, scope: !8443, file: !677, line: 243, type: !706)
!8450 = !DILocalVariable(name: "data", scope: !8443, file: !677, line: 245, type: !8451)
!8451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 32)
!8452 = !DILocalVariable(name: "line", scope: !8443, file: !677, line: 246, type: !103)
!8453 = !DILocation(line: 0, scope: !8443)
!8454 = !DILocation(line: 245, column: 38, scope: !8443)
!8455 = !DILocation(line: 249, column: 24, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8457, file: !677, line: 249, column: 2)
!8457 = distinct !DILexicalBlock(scope: !8443, file: !677, line: 249, column: 2)
!8458 = !DILocation(line: 249, column: 2, scope: !8457)
!8459 = !DILocation(line: 251, column: 7, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8461, file: !677, line: 251, column: 7)
!8461 = distinct !DILexicalBlock(scope: !8456, file: !677, line: 249, column: 39)
!8462 = !DILocation(line: 251, column: 7, scope: !8461)
!8463 = !DILocation(line: 253, column: 4, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8460, file: !677, line: 251, column: 36)
!8465 = !DILocation(line: 256, column: 24, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8464, file: !677, line: 256, column: 8)
!8467 = !DILocation(line: 256, column: 9, scope: !8466)
!8468 = !DILocation(line: 256, column: 8, scope: !8464)
!8469 = !DILocation(line: 260, column: 43, scope: !8464)
!8470 = !DILocation(line: 260, column: 4, scope: !8464)
!8471 = !DILocation(line: 261, column: 3, scope: !8464)
!8472 = !DILocation(line: 249, column: 35, scope: !8456)
!8473 = distinct !{!8473, !8458, !8474}
!8474 = !DILocation(line: 262, column: 2, scope: !8457)
!8475 = !DILocation(line: 263, column: 1, scope: !8443)
!8476 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !677, file: !677, line: 158, type: !118, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8477)
!8477 = !{!8478}
!8478 = !DILocalVariable(name: "line", arg: 1, scope: !8476, file: !677, line: 158, type: !103)
!8479 = !DILocation(line: 0, scope: !8476)
!8480 = !DILocation(line: 170, column: 38, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8482, file: !677, line: 160, column: 17)
!8482 = distinct !DILexicalBlock(scope: !8476, file: !677, line: 160, column: 6)
!8483 = !DILocation(line: 170, column: 10, scope: !8481)
!8484 = !DILocation(line: 176, column: 1, scope: !8476)
!8485 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !677, file: !677, line: 183, type: !8486, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8488)
!8486 = !DISubroutineType(types: !8487)
!8487 = !{null, !103}
!8488 = !{!8489}
!8489 = !DILocalVariable(name: "line", arg: 1, scope: !8485, file: !677, line: 183, type: !103)
!8490 = !DILocation(line: 0, scope: !8485)
!8491 = !DILocation(line: 195, column: 28, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8493, file: !677, line: 185, column: 17)
!8493 = distinct !DILexicalBlock(scope: !8485, file: !677, line: 185, column: 6)
!8494 = !DILocation(line: 195, column: 3, scope: !8492)
!8495 = !DILocation(line: 200, column: 1, scope: !8485)
!8496 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8497, file: !8497, line: 910, type: !6935, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8498)
!8497 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8498 = !{!8499}
!8499 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8496, file: !8497, line: 910, type: !132)
!8500 = !DILocation(line: 0, scope: !8496)
!8501 = !DILocation(line: 912, column: 3, scope: !8496)
!8502 = !DILocation(line: 913, column: 1, scope: !8496)
!8503 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8497, file: !8497, line: 834, type: !7851, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8504)
!8504 = !{!8505}
!8505 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8503, file: !8497, line: 834, type: !132)
!8506 = !DILocation(line: 0, scope: !8503)
!8507 = !DILocation(line: 836, column: 11, scope: !8503)
!8508 = !DILocation(line: 836, column: 40, scope: !8503)
!8509 = !DILocation(line: 836, column: 3, scope: !8503)
!8510 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !677, file: !677, line: 304, type: !730, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8511)
!8511 = !{!8512}
!8512 = !DILocalVariable(name: "dev", arg: 1, scope: !8510, file: !677, line: 304, type: !706)
!8513 = !DILocation(line: 0, scope: !8510)
!8514 = !DILocation(line: 306, column: 2, scope: !8510)
!8515 = !DILocation(line: 307, column: 1, scope: !8510)
!8516 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !677, file: !677, line: 299, type: !730, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8517)
!8517 = !{!8518}
!8518 = !DILocalVariable(name: "dev", arg: 1, scope: !8516, file: !677, line: 299, type: !706)
!8519 = !DILocation(line: 0, scope: !8516)
!8520 = !DILocation(line: 301, column: 2, scope: !8516)
!8521 = !DILocation(line: 302, column: 1, scope: !8516)
!8522 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !677, file: !677, line: 294, type: !730, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8523)
!8523 = !{!8524}
!8524 = !DILocalVariable(name: "dev", arg: 1, scope: !8522, file: !677, line: 294, type: !706)
!8525 = !DILocation(line: 0, scope: !8522)
!8526 = !DILocation(line: 296, column: 2, scope: !8522)
!8527 = !DILocation(line: 297, column: 1, scope: !8522)
!8528 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !677, file: !677, line: 397, type: !730, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8529)
!8529 = !{!8530}
!8530 = !DILocalVariable(name: "dev", arg: 1, scope: !8528, file: !677, line: 397, type: !706)
!8531 = !DILocation(line: 0, scope: !8528)
!8532 = !DILocation(line: 399, column: 2, scope: !8528)
!8533 = !DILocation(line: 400, column: 1, scope: !8528)
!8534 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !677, file: !677, line: 392, type: !730, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8535)
!8535 = !{!8536}
!8536 = !DILocalVariable(name: "dev", arg: 1, scope: !8534, file: !677, line: 392, type: !706)
!8537 = !DILocation(line: 0, scope: !8534)
!8538 = !DILocation(line: 394, column: 2, scope: !8534)
!8539 = !DILocation(line: 395, column: 1, scope: !8534)
!8540 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !677, file: !677, line: 289, type: !730, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8541)
!8541 = !{!8542}
!8542 = !DILocalVariable(name: "dev", arg: 1, scope: !8540, file: !677, line: 289, type: !706)
!8543 = !DILocation(line: 0, scope: !8540)
!8544 = !DILocation(line: 291, column: 2, scope: !8540)
!8545 = !DILocation(line: 292, column: 1, scope: !8540)
!8546 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !677, file: !677, line: 387, type: !730, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8547)
!8547 = !{!8548}
!8548 = !DILocalVariable(name: "dev", arg: 1, scope: !8546, file: !677, line: 387, type: !706)
!8549 = !DILocation(line: 0, scope: !8546)
!8550 = !DILocation(line: 389, column: 2, scope: !8546)
!8551 = !DILocation(line: 390, column: 1, scope: !8546)
!8552 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !677, file: !677, line: 382, type: !730, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8553)
!8553 = !{!8554}
!8554 = !DILocalVariable(name: "dev", arg: 1, scope: !8552, file: !677, line: 382, type: !706)
!8555 = !DILocation(line: 0, scope: !8552)
!8556 = !DILocation(line: 384, column: 2, scope: !8552)
!8557 = !DILocation(line: 385, column: 1, scope: !8552)
!8558 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !677, file: !677, line: 373, type: !730, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8559)
!8559 = !{!8560}
!8560 = !DILocalVariable(name: "dev", arg: 1, scope: !8558, file: !677, line: 373, type: !706)
!8561 = !DILocation(line: 0, scope: !8558)
!8562 = !DILocation(line: 375, column: 2, scope: !8558)
!8563 = !DILocation(line: 376, column: 1, scope: !8558)
!8564 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !677, file: !677, line: 284, type: !730, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8565)
!8565 = !{!8566}
!8566 = !DILocalVariable(name: "dev", arg: 1, scope: !8564, file: !677, line: 284, type: !706)
!8567 = !DILocation(line: 0, scope: !8564)
!8568 = !DILocation(line: 286, column: 2, scope: !8564)
!8569 = !DILocation(line: 287, column: 1, scope: !8564)
!8570 = distinct !DISubprogram(name: "stm32_exti_init", scope: !677, file: !677, line: 416, type: !704, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8571)
!8571 = !{!8572}
!8572 = !DILocalVariable(name: "dev", arg: 1, scope: !8570, file: !677, line: 416, type: !706)
!8573 = !DILocation(line: 0, scope: !8570)
!8574 = !DILocation(line: 418, column: 2, scope: !8570)
!8575 = !DILocation(line: 420, column: 2, scope: !8570)
!8576 = !DILocation(line: 0, scope: !729)
!8577 = !DILocation(line: 493, column: 2, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !729, file: !677, line: 493, column: 2)
!8579 = !DILocation(line: 497, column: 2, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !729, file: !677, line: 497, column: 2)
!8581 = !DILocation(line: 507, column: 2, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !729, file: !677, line: 507, column: 2)
!8583 = !DILocation(line: 512, column: 2, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !729, file: !677, line: 512, column: 2)
!8585 = !DILocation(line: 516, column: 2, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !729, file: !677, line: 516, column: 2)
!8587 = !DILocation(line: 523, column: 2, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !729, file: !677, line: 523, column: 2)
!8589 = !DILocation(line: 527, column: 2, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !729, file: !677, line: 527, column: 2)
!8591 = !DILocation(line: 581, column: 2, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !729, file: !677, line: 581, column: 2)
!8593 = !DILocation(line: 586, column: 2, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !729, file: !677, line: 586, column: 2)
!8595 = !DILocation(line: 591, column: 2, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !729, file: !677, line: 591, column: 2)
!8597 = !DILocation(line: 595, column: 2, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !729, file: !677, line: 595, column: 2)
!8599 = !DILocation(line: 607, column: 1, scope: !729)
!8600 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !677, file: !677, line: 112, type: !8486, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8601)
!8601 = !{!8602, !8603}
!8602 = !DILocalVariable(name: "line", arg: 1, scope: !8600, file: !677, line: 112, type: !103)
!8603 = !DILocalVariable(name: "irqnum", scope: !8600, file: !677, line: 114, type: !103)
!8604 = !DILocation(line: 0, scope: !8600)
!8605 = !DILocation(line: 121, column: 11, scope: !8600)
!8606 = !DILocation(line: 130, column: 26, scope: !8600)
!8607 = !DILocation(line: 130, column: 2, scope: !8600)
!8608 = !DILocation(line: 134, column: 2, scope: !8600)
!8609 = !DILocation(line: 135, column: 1, scope: !8600)
!8610 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8497, file: !8497, line: 268, type: !6935, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8611)
!8611 = !{!8612}
!8612 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8610, file: !8497, line: 268, type: !132)
!8613 = !DILocation(line: 0, scope: !8610)
!8614 = !DILocation(line: 270, column: 3, scope: !8610)
!8615 = !DILocation(line: 271, column: 1, scope: !8610)
!8616 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !677, file: !677, line: 137, type: !8486, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8617)
!8617 = !{!8618}
!8618 = !DILocalVariable(name: "line", arg: 1, scope: !8616, file: !677, line: 137, type: !103)
!8619 = !DILocation(line: 0, scope: !8616)
!8620 = !DILocation(line: 141, column: 11, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8616, file: !677, line: 141, column: 6)
!8622 = !DILocation(line: 141, column: 6, scope: !8616)
!8623 = !DILocation(line: 145, column: 28, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8621, file: !677, line: 141, column: 17)
!8625 = !DILocation(line: 145, column: 3, scope: !8624)
!8626 = !DILocation(line: 147, column: 2, scope: !8624)
!8627 = !DILocation(line: 151, column: 1, scope: !8616)
!8628 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8497, file: !8497, line: 309, type: !6935, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8629)
!8629 = !{!8630}
!8630 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8628, file: !8497, line: 309, type: !132)
!8631 = !DILocation(line: 0, scope: !8628)
!8632 = !DILocation(line: 311, column: 3, scope: !8628)
!8633 = !DILocation(line: 312, column: 1, scope: !8628)
!8634 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !677, file: !677, line: 202, type: !8635, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8637)
!8635 = !DISubroutineType(types: !8636)
!8636 = !{null, !103, !103}
!8637 = !{!8638, !8639}
!8638 = !DILocalVariable(name: "line", arg: 1, scope: !8634, file: !677, line: 202, type: !103)
!8639 = !DILocalVariable(name: "trigger", arg: 2, scope: !8634, file: !677, line: 202, type: !103)
!8640 = !DILocation(line: 0, scope: !8634)
!8641 = !DILocation(line: 211, column: 2, scope: !8634)
!8642 = !DILocation(line: 213, column: 36, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8634, file: !677, line: 211, column: 19)
!8644 = !DILocation(line: 213, column: 3, scope: !8643)
!8645 = !DILocation(line: 214, column: 3, scope: !8643)
!8646 = !DILocation(line: 215, column: 3, scope: !8643)
!8647 = !DILocation(line: 217, column: 35, scope: !8643)
!8648 = !DILocation(line: 217, column: 3, scope: !8643)
!8649 = !DILocation(line: 218, column: 3, scope: !8643)
!8650 = !DILocation(line: 219, column: 3, scope: !8643)
!8651 = !DILocation(line: 221, column: 36, scope: !8643)
!8652 = !DILocation(line: 221, column: 3, scope: !8643)
!8653 = !DILocation(line: 222, column: 3, scope: !8643)
!8654 = !DILocation(line: 223, column: 3, scope: !8643)
!8655 = !DILocation(line: 225, column: 35, scope: !8643)
!8656 = !DILocation(line: 225, column: 3, scope: !8643)
!8657 = !DILocation(line: 226, column: 3, scope: !8643)
!8658 = !DILocation(line: 227, column: 3, scope: !8643)
!8659 = !DILocation(line: 232, column: 1, scope: !8634)
!8660 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8497, file: !8497, line: 573, type: !6935, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8661)
!8661 = !{!8662}
!8662 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8660, file: !8497, line: 573, type: !132)
!8663 = !DILocation(line: 0, scope: !8660)
!8664 = !DILocation(line: 575, column: 3, scope: !8660)
!8665 = !DILocation(line: 577, column: 1, scope: !8660)
!8666 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8497, file: !8497, line: 703, type: !6935, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8667)
!8667 = !{!8668}
!8668 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8666, file: !8497, line: 703, type: !132)
!8669 = !DILocation(line: 0, scope: !8666)
!8670 = !DILocation(line: 705, column: 3, scope: !8666)
!8671 = !DILocation(line: 706, column: 1, scope: !8666)
!8672 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8497, file: !8497, line: 529, type: !6935, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8673)
!8673 = !{!8674}
!8674 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8672, file: !8497, line: 529, type: !132)
!8675 = !DILocation(line: 0, scope: !8672)
!8676 = !DILocation(line: 531, column: 3, scope: !8672)
!8677 = !DILocation(line: 533, column: 1, scope: !8672)
!8678 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8497, file: !8497, line: 661, type: !6935, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8679)
!8679 = !{!8680}
!8680 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8678, file: !8497, line: 661, type: !132)
!8681 = !DILocation(line: 0, scope: !8678)
!8682 = !DILocation(line: 663, column: 3, scope: !8678)
!8683 = !DILocation(line: 664, column: 1, scope: !8678)
!8684 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !677, file: !677, line: 433, type: !8685, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8687)
!8685 = !DISubroutineType(types: !8686)
!8686 = !{!103, !103, !717, !102}
!8687 = !{!8688, !8689, !8690, !8691, !8693}
!8688 = !DILocalVariable(name: "line", arg: 1, scope: !8684, file: !677, line: 433, type: !103)
!8689 = !DILocalVariable(name: "cb", arg: 2, scope: !8684, file: !677, line: 433, type: !717)
!8690 = !DILocalVariable(name: "arg", arg: 3, scope: !8684, file: !677, line: 433, type: !102)
!8691 = !DILocalVariable(name: "dev", scope: !8684, file: !677, line: 435, type: !8692)
!8692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !706)
!8693 = !DILocalVariable(name: "data", scope: !8684, file: !677, line: 436, type: !8451)
!8694 = !DILocation(line: 0, scope: !8684)
!8695 = !DILocation(line: 438, column: 21, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8684, file: !677, line: 438, column: 6)
!8697 = !DILocation(line: 438, column: 6, scope: !8696)
!8698 = !DILocation(line: 438, column: 6, scope: !8684)
!8699 = !DILocation(line: 442, column: 20, scope: !8684)
!8700 = !DILocation(line: 443, column: 17, scope: !8684)
!8701 = !DILocation(line: 443, column: 22, scope: !8684)
!8702 = !DILocation(line: 445, column: 2, scope: !8684)
!8703 = !DILocation(line: 446, column: 1, scope: !8684)
!8704 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !677, file: !677, line: 448, type: !8486, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8705)
!8705 = !{!8706, !8707, !8708}
!8706 = !DILocalVariable(name: "line", arg: 1, scope: !8704, file: !677, line: 448, type: !103)
!8707 = !DILocalVariable(name: "dev", scope: !8704, file: !677, line: 450, type: !8692)
!8708 = !DILocalVariable(name: "data", scope: !8704, file: !677, line: 451, type: !8451)
!8709 = !DILocation(line: 0, scope: !8704)
!8710 = !DILocation(line: 453, column: 17, scope: !8704)
!8711 = !DILocation(line: 453, column: 20, scope: !8704)
!8712 = !DILocation(line: 454, column: 17, scope: !8704)
!8713 = !DILocation(line: 454, column: 22, scope: !8704)
!8714 = !DILocation(line: 455, column: 1, scope: !8704)
!8715 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !859, file: !859, line: 183, type: !897, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8716)
!8716 = !{!8717, !8718, !8719, !8720, !8721}
!8717 = !DILocalVariable(name: "dev", arg: 1, scope: !8715, file: !859, line: 183, type: !888)
!8718 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8715, file: !859, line: 184, type: !899)
!8719 = !DILocalVariable(name: "pclken", scope: !8715, file: !859, line: 186, type: !849)
!8720 = !DILocalVariable(name: "reg", scope: !8715, file: !859, line: 187, type: !1610)
!8721 = !DILocalVariable(name: "reg_val", scope: !8715, file: !859, line: 188, type: !132)
!8722 = !DILocation(line: 0, scope: !8715)
!8723 = !DILocation(line: 192, column: 6, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8715, file: !859, line: 192, column: 6)
!8725 = !DILocation(line: 192, column: 6, scope: !8715)
!8726 = !DILocation(line: 197, column: 52, scope: !8715)
!8727 = !DILocation(line: 197, column: 8, scope: !8715)
!8728 = !DILocation(line: 198, column: 12, scope: !8715)
!8729 = !DILocation(line: 199, column: 21, scope: !8715)
!8730 = !DILocation(line: 199, column: 10, scope: !8715)
!8731 = !DILocation(line: 200, column: 7, scope: !8715)
!8732 = !DILocation(line: 202, column: 2, scope: !8715)
!8733 = !DILocation(line: 203, column: 1, scope: !8715)
!8734 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !859, file: !859, line: 205, type: !897, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8735)
!8735 = !{!8736, !8737, !8738, !8739, !8740}
!8736 = !DILocalVariable(name: "dev", arg: 1, scope: !8734, file: !859, line: 205, type: !888)
!8737 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8734, file: !859, line: 206, type: !899)
!8738 = !DILocalVariable(name: "pclken", scope: !8734, file: !859, line: 208, type: !849)
!8739 = !DILocalVariable(name: "reg", scope: !8734, file: !859, line: 209, type: !1610)
!8740 = !DILocalVariable(name: "reg_val", scope: !8734, file: !859, line: 210, type: !132)
!8741 = !DILocation(line: 0, scope: !8734)
!8742 = !DILocation(line: 214, column: 6, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8734, file: !859, line: 214, column: 6)
!8744 = !DILocation(line: 214, column: 6, scope: !8734)
!8745 = !DILocation(line: 219, column: 52, scope: !8734)
!8746 = !DILocation(line: 219, column: 8, scope: !8734)
!8747 = !DILocation(line: 220, column: 12, scope: !8734)
!8748 = !DILocation(line: 221, column: 22, scope: !8734)
!8749 = !DILocation(line: 221, column: 13, scope: !8734)
!8750 = !DILocation(line: 221, column: 10, scope: !8734)
!8751 = !DILocation(line: 222, column: 7, scope: !8734)
!8752 = !DILocation(line: 224, column: 2, scope: !8734)
!8753 = !DILocation(line: 225, column: 1, scope: !8734)
!8754 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !859, file: !859, line: 262, type: !913, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8755)
!8755 = !{!8756, !8757, !8758, !8759, !8760, !8761, !8762, !8763}
!8756 = !DILocalVariable(name: "clock", arg: 1, scope: !8754, file: !859, line: 262, type: !888)
!8757 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8754, file: !859, line: 263, type: !899)
!8758 = !DILocalVariable(name: "rate", arg: 3, scope: !8754, file: !859, line: 264, type: !855)
!8759 = !DILocalVariable(name: "pclken", scope: !8754, file: !859, line: 266, type: !849)
!8760 = !DILocalVariable(name: "ahb_clock", scope: !8754, file: !859, line: 273, type: !132)
!8761 = !DILocalVariable(name: "apb1_clock", scope: !8754, file: !859, line: 274, type: !132)
!8762 = !DILocalVariable(name: "apb2_clock", scope: !8754, file: !859, line: 276, type: !132)
!8763 = !DILocalVariable(name: "ahb3_clock", scope: !8754, file: !859, line: 286, type: !132)
!8764 = !DILocation(line: 0, scope: !8754)
!8765 = !DILocation(line: 273, column: 23, scope: !8754)
!8766 = !DILocation(line: 274, column: 24, scope: !8754)
!8767 = !DILocation(line: 299, column: 18, scope: !8754)
!8768 = !DILocation(line: 299, column: 2, scope: !8754)
!8769 = !DILocation(line: 319, column: 3, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8754, file: !859, line: 299, column: 23)
!8771 = !DILocation(line: 323, column: 3, scope: !8770)
!8772 = !DILocation(line: 346, column: 33, scope: !8770)
!8773 = !DILocation(line: 346, column: 11, scope: !8770)
!8774 = !DILocation(line: 350, column: 3, scope: !8770)
!8775 = !DILocation(line: 354, column: 33, scope: !8770)
!8776 = !DILocation(line: 354, column: 11, scope: !8770)
!8777 = !DILocation(line: 358, column: 3, scope: !8770)
!8778 = !DILocation(line: 374, column: 3, scope: !8770)
!8779 = !DILocation(line: 379, column: 3, scope: !8770)
!8780 = !DILocation(line: 0, scope: !8770)
!8781 = !DILocation(line: 396, column: 1, scope: !8754)
!8782 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !859, file: !859, line: 227, type: !929, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8783)
!8783 = !{!8784, !8785, !8786, !8787, !8788, !8789, !8790, !8791}
!8784 = !DILocalVariable(name: "dev", arg: 1, scope: !8782, file: !859, line: 227, type: !888)
!8785 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8782, file: !859, line: 228, type: !899)
!8786 = !DILocalVariable(name: "data", arg: 3, scope: !8782, file: !859, line: 229, type: !102)
!8787 = !DILocalVariable(name: "pclken", scope: !8782, file: !859, line: 233, type: !849)
!8788 = !DILocalVariable(name: "reg", scope: !8782, file: !859, line: 234, type: !1610)
!8789 = !DILocalVariable(name: "reg_val", scope: !8782, file: !859, line: 235, type: !132)
!8790 = !DILocalVariable(name: "dt_val", scope: !8782, file: !859, line: 235, type: !132)
!8791 = !DILocalVariable(name: "err", scope: !8782, file: !859, line: 236, type: !103)
!8792 = !DILocation(line: 0, scope: !8782)
!8793 = !DILocation(line: 241, column: 30, scope: !8782)
!8794 = !DILocation(line: 241, column: 8, scope: !8782)
!8795 = !DILocation(line: 242, column: 10, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8782, file: !859, line: 242, column: 6)
!8797 = !DILocation(line: 242, column: 6, scope: !8782)
!8798 = !DILocation(line: 247, column: 11, scope: !8782)
!8799 = !DILocation(line: 248, column: 6, scope: !8782)
!8800 = !DILocation(line: 247, column: 44, scope: !8782)
!8801 = !DILocation(line: 250, column: 6, scope: !8782)
!8802 = !DILocation(line: 249, column: 52, scope: !8782)
!8803 = !DILocation(line: 249, column: 8, scope: !8782)
!8804 = !DILocation(line: 251, column: 12, scope: !8782)
!8805 = !DILocation(line: 252, column: 10, scope: !8782)
!8806 = !DILocation(line: 253, column: 7, scope: !8782)
!8807 = !DILocation(line: 255, column: 2, scope: !8782)
!8808 = !DILocation(line: 260, column: 1, scope: !8782)
!8809 = distinct !DISubprogram(name: "enabled_clock", scope: !859, file: !859, line: 100, type: !8810, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8812)
!8810 = !DISubroutineType(types: !8811)
!8811 = !{!103, !132}
!8812 = !{!8813, !8814}
!8813 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8809, file: !859, line: 100, type: !132)
!8814 = !DILocalVariable(name: "r", scope: !8809, file: !859, line: 102, type: !103)
!8815 = !DILocation(line: 0, scope: !8809)
!8816 = !DILocation(line: 104, column: 2, scope: !8809)
!8817 = !DILocation(line: 180, column: 2, scope: !8809)
!8818 = !DILocation(line: 181, column: 1, scope: !8809)
!8819 = distinct !DISubprogram(name: "get_bus_clock", scope: !859, file: !859, line: 79, type: !8820, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8822)
!8820 = !DISubroutineType(types: !8821)
!8821 = !{!132, !132, !132}
!8822 = !{!8823, !8824}
!8823 = !DILocalVariable(name: "clock", arg: 1, scope: !8819, file: !859, line: 79, type: !132)
!8824 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8819, file: !859, line: 79, type: !132)
!8825 = !DILocation(line: 0, scope: !8819)
!8826 = !DILocation(line: 81, column: 15, scope: !8819)
!8827 = !DILocation(line: 81, column: 2, scope: !8819)
!8828 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !859, file: !859, line: 68, type: !8829, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8831)
!8829 = !DISubroutineType(types: !8830)
!8830 = !{!132, !132, !103, !103, !103}
!8831 = !{!8832, !8833, !8834, !8835}
!8832 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8828, file: !859, line: 68, type: !132)
!8833 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8828, file: !859, line: 69, type: !103)
!8834 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8828, file: !859, line: 70, type: !103)
!8835 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8828, file: !859, line: 71, type: !103)
!8836 = !DILocation(line: 0, scope: !8828)
!8837 = !DILocation(line: 75, column: 22, scope: !8828)
!8838 = !DILocation(line: 76, column: 13, scope: !8828)
!8839 = !DILocation(line: 75, column: 34, scope: !8828)
!8840 = !DILocation(line: 75, column: 2, scope: !8828)
!8841 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !859, file: !859, line: 641, type: !886, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8842)
!8842 = !{!8843, !8844, !8845}
!8843 = !DILocalVariable(name: "dev", arg: 1, scope: !8841, file: !859, line: 641, type: !888)
!8844 = !DILocalVariable(name: "old_flash_freq", scope: !8841, file: !859, line: 664, type: !132)
!8845 = !DILocalVariable(name: "new_flash_freq", scope: !8841, file: !859, line: 665, type: !132)
!8846 = !DILocation(line: 0, scope: !8841)
!8847 = !DILocation(line: 646, column: 2, scope: !8841)
!8848 = !DILocation(line: 667, column: 19, scope: !8841)
!8849 = !DILocation(line: 674, column: 21, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8841, file: !859, line: 674, column: 6)
!8851 = !DILocation(line: 674, column: 6, scope: !8841)
!8852 = !DILocation(line: 675, column: 3, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8850, file: !859, line: 674, column: 59)
!8854 = !DILocation(line: 676, column: 2, scope: !8853)
!8855 = !DILocation(line: 680, column: 2, scope: !8841)
!8856 = !DILocation(line: 683, column: 2, scope: !8841)
!8857 = !DILocation(line: 690, column: 3, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8859, file: !859, line: 689, column: 9)
!8859 = distinct !DILexicalBlock(scope: !8841, file: !859, line: 685, column: 6)
!8860 = !DILocation(line: 695, column: 2, scope: !8841)
!8861 = !DILocation(line: 696, column: 2, scope: !8841)
!8862 = !DILocation(line: 696, column: 9, scope: !8841)
!8863 = !DILocation(line: 696, column: 34, scope: !8841)
!8864 = distinct !{!8864, !8861, !8865}
!8865 = !DILocation(line: 697, column: 2, scope: !8841)
!8866 = !DILocation(line: 720, column: 21, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8841, file: !859, line: 720, column: 6)
!8868 = !DILocation(line: 720, column: 6, scope: !8841)
!8869 = !DILocation(line: 721, column: 3, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8867, file: !859, line: 720, column: 60)
!8871 = !DILocation(line: 722, column: 2, scope: !8870)
!8872 = !DILocation(line: 725, column: 18, scope: !8841)
!8873 = !DILocation(line: 728, column: 2, scope: !8841)
!8874 = !DILocation(line: 730, column: 2, scope: !8841)
!8875 = !DILocation(line: 745, column: 2, scope: !8841)
!8876 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8877, file: !8877, line: 3275, type: !6925, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !473)
!8877 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8878 = !DILocation(line: 3277, column: 21, scope: !8876)
!8879 = !DILocation(line: 3277, column: 3, scope: !8876)
!8880 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !859, file: !859, line: 507, type: !3249, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !473)
!8881 = !DILocation(line: 516, column: 4, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8883, file: !859, line: 515, column: 10)
!8883 = distinct !DILexicalBlock(scope: !8884, file: !859, line: 513, column: 7)
!8884 = distinct !DILexicalBlock(scope: !8885, file: !859, line: 510, column: 37)
!8885 = distinct !DILexicalBlock(scope: !8880, file: !859, line: 510, column: 6)
!8886 = !DILocation(line: 526, column: 3, scope: !8884)
!8887 = !DILocation(line: 527, column: 3, scope: !8884)
!8888 = !DILocation(line: 527, column: 10, scope: !8884)
!8889 = !DILocation(line: 527, column: 31, scope: !8884)
!8890 = distinct !{!8890, !8887, !8891}
!8891 = !DILocation(line: 529, column: 3, scope: !8884)
!8892 = !DILocation(line: 583, column: 3, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8894, file: !859, line: 577, column: 37)
!8894 = distinct !DILexicalBlock(scope: !8880, file: !859, line: 577, column: 6)
!8895 = !DILocation(line: 584, column: 3, scope: !8893)
!8896 = !DILocation(line: 584, column: 10, scope: !8893)
!8897 = !DILocation(line: 584, column: 31, scope: !8893)
!8898 = distinct !{!8898, !8895, !8899}
!8899 = !DILocation(line: 585, column: 3, scope: !8893)
!8900 = !DILocation(line: 627, column: 1, scope: !8880)
!8901 = distinct !DISubprogram(name: "set_up_plls", scope: !859, file: !859, line: 448, type: !3249, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !473)
!8902 = !DILocation(line: 460, column: 6, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8901, file: !859, line: 460, column: 6)
!8904 = !DILocation(line: 460, column: 31, scope: !8903)
!8905 = !DILocation(line: 460, column: 6, scope: !8901)
!8906 = !DILocation(line: 461, column: 3, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8903, file: !859, line: 460, column: 67)
!8908 = !DILocation(line: 462, column: 3, scope: !8907)
!8909 = !DILocation(line: 463, column: 2, scope: !8907)
!8910 = !DILocation(line: 464, column: 2, scope: !8901)
!8911 = !DILocation(line: 488, column: 2, scope: !8901)
!8912 = !DILocation(line: 492, column: 2, scope: !8901)
!8913 = !DILocation(line: 496, column: 2, scope: !8901)
!8914 = !DILocation(line: 499, column: 2, scope: !8901)
!8915 = !DILocation(line: 500, column: 2, scope: !8901)
!8916 = !DILocation(line: 500, column: 9, scope: !8901)
!8917 = !DILocation(line: 500, column: 30, scope: !8901)
!8918 = distinct !{!8918, !8915, !8919}
!8919 = !DILocation(line: 502, column: 2, scope: !8901)
!8920 = !DILocation(line: 505, column: 1, scope: !8901)
!8921 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8877, file: !8877, line: 3224, type: !6935, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8922)
!8922 = !{!8923}
!8923 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8921, file: !8877, line: 3224, type: !132)
!8924 = !DILocation(line: 0, scope: !8921)
!8925 = !DILocation(line: 3226, column: 3, scope: !8921)
!8926 = !DILocation(line: 3227, column: 1, scope: !8921)
!8927 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8877, file: !8877, line: 3188, type: !6935, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8928)
!8928 = !{!8929}
!8929 = !DILocalVariable(name: "Source", arg: 1, scope: !8927, file: !8877, line: 3188, type: !132)
!8930 = !DILocation(line: 0, scope: !8927)
!8931 = !DILocation(line: 3190, column: 3, scope: !8927)
!8932 = !DILocation(line: 3191, column: 1, scope: !8927)
!8933 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8877, file: !8877, line: 3204, type: !6925, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !473)
!8934 = !DILocation(line: 3206, column: 21, scope: !8933)
!8935 = !DILocation(line: 3206, column: 3, scope: !8933)
!8936 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8877, file: !8877, line: 3240, type: !6935, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8937)
!8937 = !{!8938}
!8938 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8936, file: !8877, line: 3240, type: !132)
!8939 = !DILocation(line: 0, scope: !8936)
!8940 = !DILocation(line: 3242, column: 3, scope: !8936)
!8941 = !DILocation(line: 3243, column: 1, scope: !8936)
!8942 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8877, file: !8877, line: 3256, type: !6935, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !8943)
!8943 = !{!8944}
!8944 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8942, file: !8877, line: 3256, type: !132)
!8945 = !DILocation(line: 0, scope: !8942)
!8946 = !DILocation(line: 3258, column: 3, scope: !8942)
!8947 = !DILocation(line: 3259, column: 1, scope: !8942)
!8948 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !859, file: !859, line: 409, type: !3249, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !473)
!8949 = !DILocation(line: 412, column: 6, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8948, file: !859, line: 412, column: 6)
!8951 = !DILocation(line: 412, column: 27, scope: !8950)
!8952 = !DILocation(line: 412, column: 6, scope: !8948)
!8953 = !DILocation(line: 414, column: 3, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8950, file: !859, line: 412, column: 33)
!8955 = !DILocation(line: 415, column: 3, scope: !8954)
!8956 = !DILocation(line: 415, column: 10, scope: !8954)
!8957 = !DILocation(line: 415, column: 31, scope: !8954)
!8958 = distinct !{!8958, !8955, !8959}
!8959 = !DILocation(line: 417, column: 3, scope: !8954)
!8960 = !DILocation(line: 421, column: 2, scope: !8948)
!8961 = !DILocation(line: 422, column: 2, scope: !8948)
!8962 = !DILocation(line: 422, column: 9, scope: !8948)
!8963 = !DILocation(line: 422, column: 34, scope: !8948)
!8964 = distinct !{!8964, !8961, !8965}
!8965 = !DILocation(line: 423, column: 2, scope: !8948)
!8966 = !DILocation(line: 424, column: 1, scope: !8948)
!8967 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8877, file: !8877, line: 4195, type: !3249, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !473)
!8968 = !DILocation(line: 4197, column: 3, scope: !8967)
!8969 = !DILocation(line: 4198, column: 1, scope: !8967)
!8970 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8877, file: !8877, line: 4184, type: !3249, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !473)
!8971 = !DILocation(line: 4186, column: 3, scope: !8970)
!8972 = !DILocation(line: 4187, column: 1, scope: !8970)
!8973 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8877, file: !8877, line: 4205, type: !6925, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !473)
!8974 = !DILocation(line: 4207, column: 11, scope: !8973)
!8975 = !DILocation(line: 4207, column: 44, scope: !8973)
!8976 = !DILocation(line: 4207, column: 3, scope: !8973)
!8977 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8877, file: !8877, line: 3007, type: !6925, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !473)
!8978 = !DILocation(line: 3009, column: 11, scope: !8977)
!8979 = !DILocation(line: 3009, column: 44, scope: !8977)
!8980 = !DILocation(line: 3009, column: 3, scope: !8977)
!8981 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8877, file: !8877, line: 2987, type: !3249, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !473)
!8982 = !DILocation(line: 2989, column: 3, scope: !8981)
!8983 = !DILocation(line: 2990, column: 1, scope: !8981)
!8984 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8877, file: !8877, line: 2939, type: !3249, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !473)
!8985 = !DILocation(line: 2941, column: 3, scope: !8984)
!8986 = !DILocation(line: 2942, column: 1, scope: !8984)
!8987 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8877, file: !8877, line: 2949, type: !3249, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !473)
!8988 = !DILocation(line: 2951, column: 3, scope: !8987)
!8989 = !DILocation(line: 2952, column: 1, scope: !8987)
!8990 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8877, file: !8877, line: 2969, type: !6925, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !473)
!8991 = !DILocation(line: 2971, column: 11, scope: !8990)
!8992 = !DILocation(line: 2971, column: 44, scope: !8990)
!8993 = !DILocation(line: 2971, column: 3, scope: !8990)
!8994 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8877, file: !8877, line: 3143, type: !3249, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !473)
!8995 = !DILocation(line: 3145, column: 3, scope: !8994)
!8996 = !DILocation(line: 3146, column: 1, scope: !8994)
!8997 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8877, file: !8877, line: 3163, type: !6925, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !797, retainedNodes: !473)
!8998 = !DILocation(line: 3165, column: 11, scope: !8997)
!8999 = !DILocation(line: 3165, column: 46, scope: !8997)
!9000 = !DILocation(line: 3165, column: 3, scope: !8997)
!9001 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9002, file: !9002, line: 40, type: !6925, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !473)
!9002 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9003 = !DILocation(line: 45, column: 3, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !9005, file: !9002, line: 44, column: 44)
!9005 = distinct !DILexicalBlock(scope: !9006, file: !9002, line: 44, column: 13)
!9006 = distinct !DILexicalBlock(scope: !9001, file: !9002, line: 42, column: 6)
!9007 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9002, file: !9002, line: 56, type: !3249, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !473)
!9008 = !DILocation(line: 58, column: 2, scope: !9007)
!9009 = !DILocation(line: 62, column: 1, scope: !9007)
!9010 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8877, file: !8877, line: 4304, type: !9011, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !9013)
!9011 = !DISubroutineType(types: !9012)
!9012 = !{null, !132, !132, !132, !132}
!9013 = !{!9014, !9015, !9016, !9017}
!9014 = !DILocalVariable(name: "Source", arg: 1, scope: !9010, file: !8877, line: 4304, type: !132)
!9015 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9010, file: !8877, line: 4304, type: !132)
!9016 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9010, file: !8877, line: 4304, type: !132)
!9017 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9010, file: !8877, line: 4304, type: !132)
!9018 = !DILocation(line: 0, scope: !9010)
!9019 = !DILocation(line: 4306, column: 3, scope: !9010)
!9020 = !DILocation(line: 4308, column: 3, scope: !9010)
!9021 = !DILocation(line: 4312, column: 1, scope: !9010)
!9022 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9002, file: !9002, line: 69, type: !3249, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !473)
!9023 = !DILocation(line: 72, column: 2, scope: !9022)
!9024 = !DILocation(line: 73, column: 1, scope: !9022)
!9025 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9026, file: !9026, line: 1185, type: !6935, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !9027)
!9026 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9027 = !{!9028, !9029}
!9028 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9025, file: !9026, line: 1185, type: !132)
!9029 = !DILocalVariable(name: "tmpreg", scope: !9025, file: !9026, line: 1187, type: !131)
!9030 = !DILocation(line: 0, scope: !9025)
!9031 = !DILocation(line: 1187, column: 3, scope: !9025)
!9032 = !DILocation(line: 1187, column: 17, scope: !9025)
!9033 = !DILocation(line: 1188, column: 3, scope: !9025)
!9034 = !DILocation(line: 1190, column: 12, scope: !9025)
!9035 = !DILocation(line: 1190, column: 10, scope: !9025)
!9036 = !DILocation(line: 1191, column: 9, scope: !9025)
!9037 = !DILocation(line: 1192, column: 1, scope: !9025)
!9038 = distinct !DISubprogram(name: "uart_console_init", scope: !937, file: !937, line: 588, type: !974, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9039)
!9039 = !{!9040}
!9040 = !DILocalVariable(name: "arg", arg: 1, scope: !9038, file: !937, line: 588, type: !953)
!9041 = !DILocation(line: 0, scope: !9038)
!9042 = !DILocation(line: 593, column: 7, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9038, file: !937, line: 593, column: 6)
!9044 = !DILocation(line: 593, column: 6, scope: !9038)
!9045 = !DILocation(line: 597, column: 2, scope: !9038)
!9046 = !DILocation(line: 599, column: 2, scope: !9038)
!9047 = !DILocation(line: 600, column: 1, scope: !9038)
!9048 = distinct !DISubprogram(name: "device_is_ready", scope: !6685, file: !6685, line: 47, type: !9049, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9051)
!9049 = !DISubroutineType(types: !9050)
!9050 = !{!166, !953}
!9051 = !{!9052}
!9052 = !DILocalVariable(name: "dev", arg: 1, scope: !9048, file: !6685, line: 47, type: !953)
!9053 = !DILocation(line: 0, scope: !9048)
!9054 = !DILocation(line: 55, column: 2, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9048, file: !6685, line: 55, column: 2)
!9056 = !{i64 2154951793}
!9057 = !DILocation(line: 56, column: 9, scope: !9048)
!9058 = !DILocation(line: 56, column: 2, scope: !9048)
!9059 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !937, file: !937, line: 573, type: !3249, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !473)
!9060 = !DILocation(line: 576, column: 2, scope: !9059)
!9061 = !DILocation(line: 579, column: 2, scope: !9059)
!9062 = !DILocation(line: 581, column: 1, scope: !9059)
!9063 = distinct !DISubprogram(name: "console_out", scope: !937, file: !937, line: 77, type: !118, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9064)
!9064 = !{!9065, !9066}
!9065 = !DILocalVariable(name: "c", arg: 1, scope: !9063, file: !937, line: 77, type: !103)
!9066 = !DILocalVariable(name: "handled_by_debug_server", scope: !9063, file: !937, line: 81, type: !103)
!9067 = !DILocation(line: 0, scope: !9063)
!9068 = !DILocation(line: 81, column: 32, scope: !9063)
!9069 = !DILocation(line: 83, column: 6, scope: !9063)
!9070 = !DILocation(line: 89, column: 11, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9063, file: !937, line: 89, column: 6)
!9072 = !DILocation(line: 89, column: 6, scope: !9063)
!9073 = !DILocation(line: 90, column: 3, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9071, file: !937, line: 89, column: 17)
!9075 = !DILocation(line: 91, column: 2, scope: !9074)
!9076 = !DILocation(line: 92, column: 2, scope: !9063)
!9077 = !DILocation(line: 94, column: 2, scope: !9063)
!9078 = !DILocation(line: 95, column: 1, scope: !9063)
!9079 = distinct !DISubprogram(name: "uart_poll_out", scope: !5946, file: !5946, line: 95, type: !970, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9080)
!9080 = !{!9081, !9082}
!9081 = !DILocalVariable(name: "dev", arg: 1, scope: !9079, file: !5946, line: 95, type: !953)
!9082 = !DILocalVariable(name: "out_char", arg: 2, scope: !9079, file: !5946, line: 95, type: !164)
!9083 = !DILocation(line: 0, scope: !9079)
!9084 = !DILocation(line: 105, column: 2, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9079, file: !5946, line: 105, column: 2)
!9086 = !{i64 2155035038}
!9087 = !DILocation(line: 106, column: 2, scope: !9079)
!9088 = !DILocation(line: 107, column: 1, scope: !9079)
!9089 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !212, file: !212, line: 574, type: !970, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9090)
!9090 = !{!9091, !9092, !9093}
!9091 = !DILocalVariable(name: "dev", arg: 1, scope: !9089, file: !212, line: 574, type: !953)
!9092 = !DILocalVariable(name: "out_char", arg: 2, scope: !9089, file: !212, line: 575, type: !164)
!9093 = !DILocalVariable(name: "api", scope: !9089, file: !212, line: 577, type: !945)
!9094 = !DILocation(line: 0, scope: !9089)
!9095 = !DILocation(line: 578, column: 40, scope: !9089)
!9096 = !DILocation(line: 580, column: 7, scope: !9089)
!9097 = !DILocation(line: 580, column: 2, scope: !9089)
!9098 = !DILocation(line: 581, column: 1, scope: !9089)
!9099 = distinct !DISubprogram(name: "debug_hook_out_nop", scope: !937, file: !937, line: 49, type: !1087, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9100)
!9100 = !{!9101}
!9101 = !DILocalVariable(name: "c", arg: 1, scope: !9099, file: !937, line: 49, type: !108)
!9102 = !DILocation(line: 0, scope: !9099)
!9103 = !DILocation(line: 51, column: 2, scope: !9099)
!9104 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !9049, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9105)
!9105 = !{!9106}
!9106 = !DILocalVariable(name: "dev", arg: 1, scope: !9104, file: !152, line: 730, type: !953)
!9107 = !DILocation(line: 0, scope: !9104)
!9108 = !DILocation(line: 732, column: 9, scope: !9104)
!9109 = !DILocation(line: 732, column: 2, scope: !9104)
!9110 = distinct !DISubprogram(name: "uart_console_in_debug_hook_install", scope: !937, file: !937, line: 44, type: !9111, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9113)
!9111 = !DISubroutineType(types: !9112)
!9112 = !{null, !1129}
!9113 = !{!9114}
!9114 = !DILocalVariable(name: "hook", arg: 1, scope: !9110, file: !937, line: 44, type: !1129)
!9115 = !DILocation(line: 0, scope: !9110)
!9116 = !DILocation(line: 46, column: 16, scope: !9110)
!9117 = !DILocation(line: 47, column: 1, scope: !9110)
!9118 = distinct !DISubprogram(name: "uart_console_out_debug_hook_install", scope: !937, file: !937, line: 55, type: !9119, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9121)
!9119 = !DISubroutineType(types: !9120)
!9120 = !{null, !1084}
!9121 = !{!9122}
!9122 = !DILocalVariable(name: "hook", arg: 1, scope: !9118, file: !937, line: 55, type: !1084)
!9123 = !DILocation(line: 0, scope: !9118)
!9124 = !DILocation(line: 57, column: 17, scope: !9118)
!9125 = !DILocation(line: 58, column: 1, scope: !9118)
!9126 = distinct !DISubprogram(name: "uart_register_input", scope: !937, file: !937, line: 549, type: !9127, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9129)
!9127 = !DISubroutineType(types: !9128)
!9128 = !{null, !1034, !1034, !1078}
!9129 = !{!9130, !9131, !9132}
!9130 = !DILocalVariable(name: "avail", arg: 1, scope: !9126, file: !937, line: 549, type: !1034)
!9131 = !DILocalVariable(name: "lines", arg: 2, scope: !9126, file: !937, line: 549, type: !1034)
!9132 = !DILocalVariable(name: "completion", arg: 3, scope: !9126, file: !937, line: 550, type: !1078)
!9133 = !DILocation(line: 0, scope: !9126)
!9134 = !DILocation(line: 552, column: 14, scope: !9126)
!9135 = !DILocation(line: 553, column: 14, scope: !9126)
!9136 = !DILocation(line: 554, column: 16, scope: !9126)
!9137 = !DILocation(line: 556, column: 2, scope: !9126)
!9138 = !DILocation(line: 557, column: 1, scope: !9126)
!9139 = distinct !DISubprogram(name: "console_input_init", scope: !937, file: !937, line: 532, type: !3249, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9140)
!9140 = !{!9141}
!9141 = !DILocalVariable(name: "c", scope: !9139, file: !937, line: 534, type: !163)
!9142 = !DILocation(line: 534, column: 2, scope: !9139)
!9143 = !DILocation(line: 536, column: 2, scope: !9139)
!9144 = !DILocation(line: 537, column: 2, scope: !9139)
!9145 = !DILocation(line: 539, column: 2, scope: !9139)
!9146 = !DILocation(line: 542, column: 9, scope: !9139)
!9147 = !DILocation(line: 542, column: 2, scope: !9139)
!9148 = !DILocation(line: 0, scope: !9139)
!9149 = !DILocation(line: 543, column: 3, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9139, file: !937, line: 542, column: 46)
!9151 = distinct !{!9151, !9147, !9152}
!9152 = !DILocation(line: 544, column: 2, scope: !9139)
!9153 = !DILocation(line: 546, column: 2, scope: !9139)
!9154 = !DILocation(line: 547, column: 1, scope: !9139)
!9155 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5946, file: !5946, line: 265, type: !1004, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9156)
!9156 = !{!9157}
!9157 = !DILocalVariable(name: "dev", arg: 1, scope: !9155, file: !5946, line: 265, type: !953)
!9158 = !DILocation(line: 0, scope: !9155)
!9159 = !DILocation(line: 274, column: 2, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9155, file: !5946, line: 274, column: 2)
!9161 = !{i64 2155035514}
!9162 = !DILocation(line: 275, column: 2, scope: !9155)
!9163 = !DILocation(line: 276, column: 1, scope: !9155)
!9164 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5946, file: !5946, line: 217, type: !1004, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9165)
!9165 = !{!9166}
!9166 = !DILocalVariable(name: "dev", arg: 1, scope: !9164, file: !5946, line: 217, type: !953)
!9167 = !DILocation(line: 0, scope: !9164)
!9168 = !DILocation(line: 226, column: 2, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9164, file: !5946, line: 226, column: 2)
!9170 = !{i64 2155035378}
!9171 = !DILocation(line: 227, column: 2, scope: !9164)
!9172 = !DILocation(line: 228, column: 1, scope: !9164)
!9173 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !212, file: !212, line: 1190, type: !9174, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9176)
!9174 = !DISubroutineType(types: !9175)
!9175 = !{null, !953, !1020}
!9176 = !{!9177, !9178}
!9177 = !DILocalVariable(name: "dev", arg: 1, scope: !9173, file: !212, line: 1190, type: !953)
!9178 = !DILocalVariable(name: "cb", arg: 2, scope: !9173, file: !212, line: 1191, type: !1020)
!9179 = !DILocation(line: 0, scope: !9173)
!9180 = !DILocation(line: 1193, column: 2, scope: !9173)
!9181 = !DILocation(line: 1194, column: 1, scope: !9173)
!9182 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !212, file: !212, line: 1024, type: !974, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9183)
!9183 = !{!9184, !9185}
!9184 = !DILocalVariable(name: "dev", arg: 1, scope: !9182, file: !212, line: 1024, type: !953)
!9185 = !DILocalVariable(name: "api", scope: !9182, file: !212, line: 1027, type: !945)
!9186 = !DILocation(line: 0, scope: !9182)
!9187 = !DILocation(line: 1028, column: 40, scope: !9182)
!9188 = !DILocation(line: 1030, column: 11, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9182, file: !212, line: 1030, column: 6)
!9190 = !DILocation(line: 1030, column: 24, scope: !9189)
!9191 = !DILocation(line: 1030, column: 6, scope: !9182)
!9192 = !DILocation(line: 1033, column: 9, scope: !9182)
!9193 = !DILocation(line: 1033, column: 2, scope: !9182)
!9194 = !DILocation(line: 1038, column: 1, scope: !9182)
!9195 = distinct !DISubprogram(name: "uart_fifo_read", scope: !212, file: !212, line: 785, type: !1000, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9196)
!9196 = !{!9197, !9198, !9199, !9200}
!9197 = !DILocalVariable(name: "dev", arg: 1, scope: !9195, file: !212, line: 785, type: !953)
!9198 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9195, file: !212, line: 785, type: !270)
!9199 = !DILocalVariable(name: "size", arg: 3, scope: !9195, file: !212, line: 786, type: !271)
!9200 = !DILocalVariable(name: "api", scope: !9195, file: !212, line: 789, type: !945)
!9201 = !DILocation(line: 0, scope: !9195)
!9202 = !DILocation(line: 790, column: 40, scope: !9195)
!9203 = !DILocation(line: 792, column: 11, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9195, file: !212, line: 792, column: 6)
!9205 = !DILocation(line: 792, column: 21, scope: !9204)
!9206 = !DILocation(line: 792, column: 6, scope: !9195)
!9207 = !DILocation(line: 796, column: 9, scope: !9195)
!9208 = !DILocation(line: 796, column: 2, scope: !9195)
!9209 = !DILocation(line: 803, column: 1, scope: !9195)
!9210 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5946, file: !5946, line: 241, type: !1004, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9211)
!9211 = !{!9212}
!9212 = !DILocalVariable(name: "dev", arg: 1, scope: !9210, file: !5946, line: 241, type: !953)
!9213 = !DILocation(line: 0, scope: !9210)
!9214 = !DILocation(line: 250, column: 2, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9210, file: !5946, line: 250, column: 2)
!9216 = !{i64 2155035446}
!9217 = !DILocation(line: 251, column: 2, scope: !9210)
!9218 = !DILocation(line: 252, column: 1, scope: !9210)
!9219 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !212, file: !212, line: 934, type: !1004, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9220)
!9220 = !{!9221, !9222}
!9221 = !DILocalVariable(name: "dev", arg: 1, scope: !9219, file: !212, line: 934, type: !953)
!9222 = !DILocalVariable(name: "api", scope: !9219, file: !212, line: 937, type: !945)
!9223 = !DILocation(line: 0, scope: !9219)
!9224 = !DILocation(line: 938, column: 40, scope: !9219)
!9225 = !DILocation(line: 940, column: 11, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9219, file: !212, line: 940, column: 6)
!9227 = !DILocation(line: 940, column: 25, scope: !9226)
!9228 = !DILocation(line: 940, column: 6, scope: !9219)
!9229 = !DILocation(line: 941, column: 3, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9226, file: !212, line: 940, column: 34)
!9231 = !DILocation(line: 942, column: 2, scope: !9230)
!9232 = !DILocation(line: 946, column: 1, scope: !9219)
!9233 = !DILocation(line: 0, scope: !1094)
!9234 = !DILocation(line: 433, column: 9, scope: !1094)
!9235 = !DILocation(line: 433, column: 43, scope: !1094)
!9236 = !DILocation(line: 434, column: 9, scope: !1094)
!9237 = !DILocation(line: 433, column: 2, scope: !1094)
!9238 = !DILocation(line: 436, column: 3, scope: !1099)
!9239 = !DILocation(line: 439, column: 8, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !1099, file: !937, line: 439, column: 7)
!9241 = !DILocation(line: 439, column: 7, scope: !1099)
!9242 = distinct !{!9242, !9237, !9243}
!9243 = !DILocation(line: 529, column: 2, scope: !1094)
!9244 = !DILocation(line: 0, scope: !1099)
!9245 = !DILocation(line: 445, column: 8, scope: !1099)
!9246 = !DILocation(line: 446, column: 10, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !1099, file: !937, line: 446, column: 7)
!9248 = !DILocation(line: 446, column: 7, scope: !1099)
!9249 = !DILocation(line: 451, column: 7, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !1099, file: !937, line: 451, column: 7)
!9251 = !DILocation(line: 451, column: 21, scope: !9250)
!9252 = !DILocation(line: 451, column: 29, scope: !9250)
!9253 = !DILocation(line: 451, column: 46, scope: !9250)
!9254 = !DILocation(line: 451, column: 32, scope: !9250)
!9255 = !DILocation(line: 451, column: 52, scope: !9250)
!9256 = !DILocation(line: 451, column: 7, scope: !1099)
!9257 = !DILocation(line: 460, column: 8, scope: !1104)
!9258 = !DILocation(line: 460, column: 7, scope: !1099)
!9259 = !DILocation(line: 461, column: 10, scope: !1102)
!9260 = !DILocation(line: 0, scope: !1102)
!9261 = !DILocation(line: 461, column: 8, scope: !1103)
!9262 = !DILocation(line: 462, column: 9, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !1103, file: !937, line: 462, column: 8)
!9264 = !DILocation(line: 462, column: 8, scope: !1103)
!9265 = !DILocation(line: 477, column: 7, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !1099, file: !937, line: 477, column: 7)
!9267 = !DILocation(line: 477, column: 7, scope: !1099)
!9268 = !DILocation(line: 478, column: 16, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9266, file: !937, line: 477, column: 46)
!9270 = !DILocation(line: 478, column: 22, scope: !9269)
!9271 = !DILocation(line: 478, column: 4, scope: !9269)
!9272 = !DILocation(line: 479, column: 4, scope: !9269)
!9273 = !DILocation(line: 483, column: 7, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !1099, file: !937, line: 483, column: 7)
!9275 = !DILocation(line: 483, column: 7, scope: !1099)
!9276 = !DILocation(line: 484, column: 13, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9278, file: !937, line: 484, column: 8)
!9278 = distinct !DILexicalBlock(scope: !9274, file: !937, line: 483, column: 55)
!9279 = !DILocation(line: 484, column: 8, scope: !9278)
!9280 = !DILocation(line: 485, column: 5, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9277, file: !937, line: 484, column: 26)
!9282 = !DILocation(line: 486, column: 5, scope: !9281)
!9283 = !DILocation(line: 487, column: 4, scope: !9281)
!9284 = !DILocation(line: 493, column: 16, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !1099, file: !937, line: 493, column: 7)
!9286 = !DILocation(line: 493, column: 8, scope: !9285)
!9287 = !DILocation(line: 493, column: 7, scope: !1099)
!9288 = !DILocation(line: 494, column: 4, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9285, file: !937, line: 493, column: 23)
!9290 = !DILocation(line: 497, column: 9, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9292, file: !937, line: 497, column: 9)
!9292 = distinct !DILexicalBlock(scope: !9289, file: !937, line: 494, column: 18)
!9293 = !DILocation(line: 497, column: 13, scope: !9291)
!9294 = !DILocation(line: 497, column: 9, scope: !9292)
!9295 = !DILocation(line: 498, column: 16, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9291, file: !937, line: 497, column: 18)
!9297 = !DILocation(line: 498, column: 26, scope: !9296)
!9298 = !DILocation(line: 498, column: 34, scope: !9296)
!9299 = !DILocation(line: 498, column: 6, scope: !9296)
!9300 = !DILocation(line: 499, column: 5, scope: !9296)
!9301 = !DILocation(line: 502, column: 5, scope: !9292)
!9302 = !DILocation(line: 503, column: 5, scope: !9292)
!9303 = !DILocation(line: 505, column: 5, scope: !9292)
!9304 = !DILocation(line: 505, column: 15, scope: !9292)
!9305 = !DILocation(line: 505, column: 21, scope: !9292)
!9306 = !DILocation(line: 505, column: 19, scope: !9292)
!9307 = !DILocation(line: 505, column: 26, scope: !9292)
!9308 = !DILocation(line: 506, column: 5, scope: !9292)
!9309 = !DILocation(line: 507, column: 5, scope: !9292)
!9310 = !DILocation(line: 508, column: 9, scope: !9292)
!9311 = !DILocation(line: 509, column: 9, scope: !9292)
!9312 = !DILocation(line: 510, column: 5, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9292, file: !937, line: 510, column: 5)
!9314 = !DILocation(line: 511, column: 9, scope: !9292)
!9315 = !DILocation(line: 512, column: 5, scope: !9292)
!9316 = !DILocation(line: 514, column: 9, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9292, file: !937, line: 514, column: 9)
!9318 = !DILocation(line: 514, column: 23, scope: !9317)
!9319 = !DILocation(line: 515, column: 27, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9317, file: !937, line: 514, column: 32)
!9321 = !DILocation(line: 515, column: 38, scope: !9320)
!9322 = !DILocation(line: 515, column: 13, scope: !9320)
!9323 = !DILocation(line: 515, column: 10, scope: !9320)
!9324 = !DILocation(line: 516, column: 5, scope: !9320)
!9325 = !DILocation(line: 526, column: 7, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !1099, file: !937, line: 526, column: 7)
!9327 = !DILocation(line: 526, column: 13, scope: !9326)
!9328 = !DILocation(line: 526, column: 11, scope: !9326)
!9329 = !DILocation(line: 526, column: 17, scope: !9326)
!9330 = !DILocation(line: 526, column: 7, scope: !1099)
!9331 = !DILocation(line: 527, column: 17, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9326, file: !937, line: 526, column: 42)
!9333 = !DILocation(line: 527, column: 30, scope: !9332)
!9334 = !DILocation(line: 527, column: 4, scope: !9332)
!9335 = !DILocation(line: 528, column: 3, scope: !9332)
!9336 = !DILocation(line: 530, column: 1, scope: !1094)
!9337 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !212, file: !212, line: 1163, type: !1018, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9338)
!9338 = !{!9339, !9340, !9341, !9342}
!9339 = !DILocalVariable(name: "dev", arg: 1, scope: !9337, file: !212, line: 1163, type: !953)
!9340 = !DILocalVariable(name: "cb", arg: 2, scope: !9337, file: !212, line: 1164, type: !1020)
!9341 = !DILocalVariable(name: "user_data", arg: 3, scope: !9337, file: !212, line: 1165, type: !102)
!9342 = !DILocalVariable(name: "api", scope: !9337, file: !212, line: 1168, type: !945)
!9343 = !DILocation(line: 0, scope: !9337)
!9344 = !DILocation(line: 1169, column: 40, scope: !9337)
!9345 = !DILocation(line: 1171, column: 11, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9337, file: !212, line: 1171, column: 6)
!9347 = !DILocation(line: 1171, column: 20, scope: !9346)
!9348 = !DILocation(line: 1171, column: 29, scope: !9346)
!9349 = !DILocation(line: 1171, column: 46, scope: !9346)
!9350 = !DILocation(line: 1171, column: 6, scope: !9337)
!9351 = !DILocation(line: 1172, column: 3, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9346, file: !212, line: 1171, column: 56)
!9353 = !DILocation(line: 1173, column: 2, scope: !9352)
!9354 = !DILocation(line: 1179, column: 1, scope: !9337)
!9355 = distinct !DISubprogram(name: "uart_irq_update", scope: !5946, file: !5946, line: 360, type: !974, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9356)
!9356 = !{!9357}
!9357 = !DILocalVariable(name: "dev", arg: 1, scope: !9355, file: !5946, line: 360, type: !953)
!9358 = !DILocation(line: 0, scope: !9355)
!9359 = !DILocation(line: 368, column: 2, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9355, file: !5946, line: 368, column: 2)
!9361 = !{i64 2155035786}
!9362 = !DILocation(line: 369, column: 9, scope: !9355)
!9363 = !DILocation(line: 369, column: 2, scope: !9355)
!9364 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !5946, file: !5946, line: 337, type: !974, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9365)
!9365 = !{!9366}
!9366 = !DILocalVariable(name: "dev", arg: 1, scope: !9364, file: !5946, line: 337, type: !953)
!9367 = !DILocation(line: 0, scope: !9364)
!9368 = !DILocation(line: 345, column: 2, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9364, file: !5946, line: 345, column: 2)
!9370 = !{i64 2155035718}
!9371 = !DILocation(line: 346, column: 9, scope: !9364)
!9372 = !DILocation(line: 346, column: 2, scope: !9364)
!9373 = distinct !DISubprogram(name: "read_uart", scope: !937, file: !937, line: 127, type: !9374, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9376)
!9374 = !DISubroutineType(types: !9375)
!9375 = !{!103, !953, !270, !32}
!9376 = !{!9377, !9378, !9379, !9380}
!9377 = !DILocalVariable(name: "uart", arg: 1, scope: !9373, file: !937, line: 127, type: !953)
!9378 = !DILocalVariable(name: "buf", arg: 2, scope: !9373, file: !937, line: 127, type: !270)
!9379 = !DILocalVariable(name: "size", arg: 3, scope: !9373, file: !937, line: 128, type: !32)
!9380 = !DILocalVariable(name: "rx", scope: !9373, file: !937, line: 130, type: !103)
!9381 = !DILocation(line: 0, scope: !9373)
!9382 = !DILocation(line: 132, column: 7, scope: !9373)
!9383 = !DILocation(line: 133, column: 9, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9373, file: !937, line: 133, column: 6)
!9385 = !DILocation(line: 133, column: 6, scope: !9373)
!9386 = !DILocation(line: 135, column: 3, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9384, file: !937, line: 133, column: 14)
!9388 = !DILocation(line: 137, column: 3, scope: !9387)
!9389 = !DILocation(line: 141, column: 1, scope: !9373)
!9390 = distinct !DISubprogram(name: "k_queue_get", scope: !3689, file: !3689, line: 649, type: !9391, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9398)
!9391 = !DISubroutineType(types: !9392)
!9392 = !{!102, !9393, !9394}
!9393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!9394 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1712, line: 67, baseType: !9395)
!9395 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1712, line: 65, size: 64, elements: !9396)
!9396 = !{!9397}
!9397 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9395, file: !1712, line: 66, baseType: !1711, size: 64)
!9398 = !{!9399, !9400}
!9399 = !DILocalVariable(name: "queue", arg: 1, scope: !9390, file: !3689, line: 649, type: !9393)
!9400 = !DILocalVariable(name: "timeout", arg: 2, scope: !9390, file: !3689, line: 649, type: !9394)
!9401 = !DILocation(line: 0, scope: !9390)
!9402 = !DILocation(line: 658, column: 2, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9390, file: !3689, line: 658, column: 2)
!9404 = !{i64 2154751483}
!9405 = !DILocation(line: 659, column: 9, scope: !9390)
!9406 = !DILocation(line: 659, column: 2, scope: !9390)
!9407 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1120, file: !1120, line: 131, type: !9408, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9412)
!9408 = !DISubroutineType(types: !9409)
!9409 = !{!166, !9410, !103}
!9410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9411, size: 32)
!9411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1119)
!9412 = !{!9413, !9414, !9415}
!9413 = !DILocalVariable(name: "target", arg: 1, scope: !9407, file: !1120, line: 131, type: !9410)
!9414 = !DILocalVariable(name: "bit", arg: 2, scope: !9407, file: !1120, line: 131, type: !103)
!9415 = !DILocalVariable(name: "val", scope: !9407, file: !1120, line: 133, type: !9416)
!9416 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1120, line: 23, baseType: !1119)
!9417 = !DILocation(line: 0, scope: !9407)
!9418 = !DILocation(line: 133, column: 21, scope: !9407)
!9419 = !DILocation(line: 135, column: 27, scope: !9407)
!9420 = !DILocation(line: 135, column: 50, scope: !9407)
!9421 = !DILocation(line: 135, column: 2, scope: !9407)
!9422 = distinct !DISubprogram(name: "handle_ansi", scope: !937, file: !937, line: 232, type: !9423, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9425)
!9423 = !DISubroutineType(types: !9424)
!9424 = !{null, !163, !1081}
!9425 = !{!9426, !9427, !9428}
!9426 = !DILocalVariable(name: "byte", arg: 1, scope: !9422, file: !937, line: 232, type: !163)
!9427 = !DILocalVariable(name: "line", arg: 2, scope: !9422, file: !937, line: 232, type: !1081)
!9428 = !DILabel(scope: !9422, name: "ansi_cmd", file: !937, line: 268)
!9429 = !DILocation(line: 0, scope: !9422)
!9430 = !DILocation(line: 234, column: 6, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9422, file: !937, line: 234, column: 6)
!9432 = !DILocation(line: 234, column: 6, scope: !9422)
!9433 = !DILocation(line: 235, column: 16, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9435, file: !937, line: 235, column: 7)
!9435 = distinct !DILexicalBlock(scope: !9431, file: !937, line: 234, column: 61)
!9436 = !DILocation(line: 235, column: 8, scope: !9434)
!9437 = !DILocation(line: 235, column: 7, scope: !9435)
!9438 = !DILocation(line: 236, column: 13, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9434, file: !937, line: 235, column: 23)
!9440 = !DILocation(line: 237, column: 4, scope: !9439)
!9441 = !DILocation(line: 240, column: 3, scope: !9435)
!9442 = !DILocation(line: 241, column: 19, scope: !9435)
!9443 = !DILocation(line: 241, column: 12, scope: !9435)
!9444 = !DILocation(line: 242, column: 14, scope: !9435)
!9445 = !DILocation(line: 243, column: 3, scope: !9435)
!9446 = !DILocation(line: 246, column: 6, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9422, file: !937, line: 246, column: 6)
!9448 = !DILocation(line: 246, column: 6, scope: !9422)
!9449 = !DILocation(line: 247, column: 15, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9451, file: !937, line: 247, column: 7)
!9451 = distinct !DILexicalBlock(scope: !9447, file: !937, line: 246, column: 49)
!9452 = !DILocation(line: 247, column: 7, scope: !9450)
!9453 = !DILocation(line: 247, column: 7, scope: !9451)
!9454 = !DILocation(line: 248, column: 8, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9456, file: !937, line: 248, column: 8)
!9456 = distinct !DILexicalBlock(scope: !9450, file: !937, line: 247, column: 22)
!9457 = !DILocation(line: 248, column: 8, scope: !9456)
!9458 = !DILocation(line: 249, column: 16, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9455, file: !937, line: 248, column: 53)
!9460 = !DILocation(line: 250, column: 24, scope: !9459)
!9461 = !DILocation(line: 250, column: 16, scope: !9459)
!9462 = !DILocation(line: 251, column: 4, scope: !9459)
!9463 = !DILocation(line: 252, column: 14, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9455, file: !937, line: 251, column: 11)
!9465 = !DILocation(line: 253, column: 22, scope: !9464)
!9466 = !DILocation(line: 253, column: 14, scope: !9464)
!9467 = !DILocation(line: 259, column: 12, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9451, file: !937, line: 259, column: 7)
!9469 = !DILocation(line: 259, column: 19, scope: !9468)
!9470 = !DILocation(line: 260, column: 8, scope: !9468)
!9471 = !DILocation(line: 259, column: 7, scope: !9451)
!9472 = !DILocation(line: 264, column: 3, scope: !9451)
!9473 = !DILocation(line: 265, column: 3, scope: !9451)
!9474 = !DILocation(line: 266, column: 2, scope: !9451)
!9475 = !DILocation(line: 268, column: 1, scope: !9422)
!9476 = !DILocation(line: 269, column: 2, scope: !9422)
!9477 = !DILocation(line: 271, column: 7, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9479, file: !937, line: 271, column: 7)
!9479 = distinct !DILexicalBlock(scope: !9422, file: !937, line: 269, column: 16)
!9480 = !DILocation(line: 271, column: 18, scope: !9478)
!9481 = !DILocation(line: 271, column: 16, scope: !9478)
!9482 = !DILocation(line: 271, column: 7, scope: !9479)
!9483 = !DILocation(line: 275, column: 7, scope: !9479)
!9484 = !DILocation(line: 276, column: 7, scope: !9479)
!9485 = !DILocation(line: 277, column: 3, scope: !9479)
!9486 = !DILocation(line: 278, column: 3, scope: !9479)
!9487 = !DILocation(line: 280, column: 7, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9479, file: !937, line: 280, column: 7)
!9489 = !DILocation(line: 280, column: 18, scope: !9488)
!9490 = !DILocation(line: 280, column: 16, scope: !9488)
!9491 = !DILocation(line: 280, column: 7, scope: !9479)
!9492 = !DILocation(line: 284, column: 7, scope: !9479)
!9493 = !DILocation(line: 285, column: 7, scope: !9479)
!9494 = !DILocation(line: 286, column: 3, scope: !9479)
!9495 = !DILocation(line: 287, column: 3, scope: !9479)
!9496 = !DILocation(line: 289, column: 8, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9479, file: !937, line: 289, column: 7)
!9498 = !DILocation(line: 289, column: 7, scope: !9479)
!9499 = !DILocation(line: 293, column: 19, scope: !9479)
!9500 = !DILocation(line: 293, column: 3, scope: !9479)
!9501 = !DILocation(line: 294, column: 10, scope: !9479)
!9502 = !DILocation(line: 294, column: 7, scope: !9479)
!9503 = !DILocation(line: 295, column: 7, scope: !9479)
!9504 = !DILocation(line: 296, column: 3, scope: !9479)
!9505 = !DILocation(line: 298, column: 8, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9479, file: !937, line: 298, column: 7)
!9507 = !DILocation(line: 298, column: 7, scope: !9479)
!9508 = !DILocation(line: 302, column: 18, scope: !9479)
!9509 = !DILocation(line: 302, column: 3, scope: !9479)
!9510 = !DILocation(line: 303, column: 10, scope: !9479)
!9511 = !DILocation(line: 303, column: 7, scope: !9479)
!9512 = !DILocation(line: 304, column: 7, scope: !9479)
!9513 = !DILocation(line: 305, column: 3, scope: !9479)
!9514 = !DILocation(line: 307, column: 8, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9479, file: !937, line: 307, column: 7)
!9516 = !DILocation(line: 307, column: 7, scope: !9479)
!9517 = !DILocation(line: 311, column: 3, scope: !9479)
!9518 = !DILocation(line: 312, column: 18, scope: !9479)
!9519 = !DILocation(line: 312, column: 13, scope: !9479)
!9520 = !DILocation(line: 312, column: 24, scope: !9479)
!9521 = !DILocation(line: 312, column: 3, scope: !9479)
!9522 = !DILocation(line: 313, column: 3, scope: !9479)
!9523 = !DILocation(line: 318, column: 2, scope: !9422)
!9524 = !DILocation(line: 319, column: 1, scope: !9422)
!9525 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1120, file: !1120, line: 152, type: !9526, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9529)
!9526 = !DISubroutineType(types: !9527)
!9527 = !{!166, !9528, !103}
!9528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!9529 = !{!9530, !9531, !9532, !9533}
!9530 = !DILocalVariable(name: "target", arg: 1, scope: !9525, file: !1120, line: 152, type: !9528)
!9531 = !DILocalVariable(name: "bit", arg: 2, scope: !9525, file: !1120, line: 152, type: !103)
!9532 = !DILocalVariable(name: "mask", scope: !9525, file: !1120, line: 154, type: !9416)
!9533 = !DILocalVariable(name: "old", scope: !9525, file: !1120, line: 155, type: !9416)
!9534 = !DILocation(line: 0, scope: !9525)
!9535 = !DILocation(line: 154, column: 22, scope: !9525)
!9536 = !DILocation(line: 157, column: 45, scope: !9525)
!9537 = !DILocation(line: 157, column: 8, scope: !9525)
!9538 = !DILocation(line: 159, column: 14, scope: !9525)
!9539 = !DILocation(line: 159, column: 22, scope: !9525)
!9540 = !DILocation(line: 159, column: 2, scope: !9525)
!9541 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1120, file: !1120, line: 217, type: !9542, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9544)
!9542 = !DISubroutineType(types: !9543)
!9543 = !{null, !9528, !103}
!9544 = !{!9545, !9546, !9547}
!9545 = !DILocalVariable(name: "target", arg: 1, scope: !9541, file: !1120, line: 217, type: !9528)
!9546 = !DILocalVariable(name: "bit", arg: 2, scope: !9541, file: !1120, line: 217, type: !103)
!9547 = !DILocalVariable(name: "mask", scope: !9541, file: !1120, line: 219, type: !9416)
!9548 = !DILocation(line: 0, scope: !9541)
!9549 = !DILocation(line: 219, column: 22, scope: !9541)
!9550 = !DILocation(line: 221, column: 8, scope: !9541)
!9551 = !DILocation(line: 222, column: 1, scope: !9541)
!9552 = distinct !DISubprogram(name: "isprint", scope: !5006, file: !5006, line: 37, type: !118, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9553)
!9553 = !{!9554}
!9554 = !DILocalVariable(name: "c", arg: 1, scope: !9552, file: !5006, line: 37, type: !103)
!9555 = !DILocation(line: 0, scope: !9552)
!9556 = !DILocation(line: 39, column: 38, scope: !9552)
!9557 = !DILocation(line: 39, column: 2, scope: !9552)
!9558 = distinct !DISubprogram(name: "del_char", scope: !937, file: !937, line: 191, type: !9559, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9561)
!9559 = !DISubroutineType(types: !9560)
!9560 = !{null, !1081, !163}
!9561 = !{!9562, !9563}
!9562 = !DILocalVariable(name: "pos", arg: 1, scope: !9558, file: !937, line: 191, type: !1081)
!9563 = !DILocalVariable(name: "end", arg: 2, scope: !9558, file: !937, line: 191, type: !163)
!9564 = !DILocation(line: 0, scope: !9558)
!9565 = !DILocation(line: 193, column: 2, scope: !9558)
!9566 = !DILocation(line: 195, column: 10, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9558, file: !937, line: 195, column: 6)
!9568 = !DILocation(line: 195, column: 6, scope: !9558)
!9569 = !DILocation(line: 196, column: 3, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9567, file: !937, line: 195, column: 17)
!9571 = !DILocation(line: 197, column: 3, scope: !9570)
!9572 = !DILocation(line: 198, column: 3, scope: !9570)
!9573 = !DILocation(line: 201, column: 2, scope: !9558)
!9574 = !DILocation(line: 203, column: 2, scope: !9558)
!9575 = !DILocation(line: 203, column: 12, scope: !9558)
!9576 = !DILocation(line: 204, column: 16, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9558, file: !937, line: 203, column: 20)
!9578 = !DILocation(line: 204, column: 10, scope: !9577)
!9579 = !DILocation(line: 204, column: 8, scope: !9577)
!9580 = !DILocation(line: 205, column: 3, scope: !9577)
!9581 = !DILocation(line: 203, column: 15, scope: !9558)
!9582 = distinct !{!9582, !9574, !9583}
!9583 = !DILocation(line: 206, column: 2, scope: !9558)
!9584 = !DILocation(line: 208, column: 2, scope: !9558)
!9585 = !DILocation(line: 211, column: 2, scope: !9558)
!9586 = !DILocation(line: 212, column: 1, scope: !9558)
!9587 = !DISubprogram(name: "k_queue_append", scope: !312, file: !312, line: 1775, type: !9588, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!9588 = !DISubroutineType(types: !9589)
!9589 = !{null, !9393, !102}
!9590 = distinct !DISubprogram(name: "insert_char", scope: !937, file: !937, line: 163, type: !9591, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9593)
!9591 = !DISubroutineType(types: !9592)
!9592 = !{null, !1081, !108, !163}
!9593 = !{!9594, !9595, !9596, !9597}
!9594 = !DILocalVariable(name: "pos", arg: 1, scope: !9590, file: !937, line: 163, type: !1081)
!9595 = !DILocalVariable(name: "c", arg: 2, scope: !9590, file: !937, line: 163, type: !108)
!9596 = !DILocalVariable(name: "end", arg: 3, scope: !9590, file: !937, line: 163, type: !163)
!9597 = !DILocalVariable(name: "tmp", scope: !9590, file: !937, line: 165, type: !108)
!9598 = !DILocation(line: 0, scope: !9590)
!9599 = !DILocation(line: 168, column: 2, scope: !9590)
!9600 = !DILocation(line: 170, column: 10, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9590, file: !937, line: 170, column: 6)
!9602 = !DILocation(line: 170, column: 6, scope: !9590)
!9603 = !DILocation(line: 171, column: 8, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9601, file: !937, line: 170, column: 17)
!9605 = !DILocation(line: 172, column: 3, scope: !9604)
!9606 = !DILocation(line: 175, column: 8, scope: !9590)
!9607 = !DILocation(line: 176, column: 11, scope: !9590)
!9608 = !DILocation(line: 178, column: 2, scope: !9590)
!9609 = !DILocation(line: 180, column: 2, scope: !9590)
!9610 = !DILocation(line: 180, column: 12, scope: !9590)
!9611 = !DILocation(line: 181, column: 3, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9590, file: !937, line: 180, column: 20)
!9613 = !DILocation(line: 182, column: 7, scope: !9612)
!9614 = !DILocation(line: 183, column: 12, scope: !9612)
!9615 = !DILocation(line: 180, column: 15, scope: !9590)
!9616 = distinct !{!9616, !9609, !9617}
!9617 = !DILocation(line: 185, column: 2, scope: !9590)
!9618 = !DILocation(line: 188, column: 2, scope: !9590)
!9619 = !DILocation(line: 189, column: 1, scope: !9590)
!9620 = distinct !DISubprogram(name: "cursor_save", scope: !937, file: !937, line: 153, type: !3249, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !473)
!9621 = !DILocation(line: 155, column: 2, scope: !9620)
!9622 = !DILocation(line: 156, column: 1, scope: !9620)
!9623 = distinct !DISubprogram(name: "cursor_restore", scope: !937, file: !937, line: 158, type: !3249, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !473)
!9624 = !DILocation(line: 160, column: 2, scope: !9623)
!9625 = !DILocation(line: 161, column: 1, scope: !9623)
!9626 = distinct !DISubprogram(name: "atomic_or", scope: !9627, file: !9627, line: 279, type: !9628, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9630)
!9627 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9628 = !DISubroutineType(types: !9629)
!9629 = !{!9416, !9528, !9416}
!9630 = !{!9631, !9632}
!9631 = !DILocalVariable(name: "target", arg: 1, scope: !9626, file: !9627, line: 279, type: !9528)
!9632 = !DILocalVariable(name: "value", arg: 2, scope: !9626, file: !9627, line: 279, type: !9416)
!9633 = !DILocation(line: 0, scope: !9626)
!9634 = !DILocation(line: 281, column: 9, scope: !9626)
!9635 = !DILocation(line: 281, column: 2, scope: !9626)
!9636 = distinct !DISubprogram(name: "atomic_and", scope: !9627, file: !9627, line: 319, type: !9628, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9637)
!9637 = !{!9638, !9639}
!9638 = !DILocalVariable(name: "target", arg: 1, scope: !9636, file: !9627, line: 319, type: !9528)
!9639 = !DILocalVariable(name: "value", arg: 2, scope: !9636, file: !9627, line: 319, type: !9416)
!9640 = !DILocation(line: 0, scope: !9636)
!9641 = !DILocation(line: 321, column: 9, scope: !9636)
!9642 = !DILocation(line: 321, column: 2, scope: !9636)
!9643 = distinct !DISubprogram(name: "isdigit", scope: !5006, file: !5006, line: 43, type: !118, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9644)
!9644 = !{!9645}
!9645 = !DILocalVariable(name: "a", arg: 1, scope: !9643, file: !5006, line: 43, type: !103)
!9646 = !DILocation(line: 0, scope: !9643)
!9647 = !DILocation(line: 45, column: 29, scope: !9643)
!9648 = !DILocation(line: 45, column: 45, scope: !9643)
!9649 = !DILocation(line: 45, column: 2, scope: !9643)
!9650 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1120, file: !1120, line: 176, type: !9526, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9651)
!9651 = !{!9652, !9653, !9654, !9655}
!9652 = !DILocalVariable(name: "target", arg: 1, scope: !9650, file: !1120, line: 176, type: !9528)
!9653 = !DILocalVariable(name: "bit", arg: 2, scope: !9650, file: !1120, line: 176, type: !103)
!9654 = !DILocalVariable(name: "mask", scope: !9650, file: !1120, line: 178, type: !9416)
!9655 = !DILocalVariable(name: "old", scope: !9650, file: !1120, line: 179, type: !9416)
!9656 = !DILocation(line: 0, scope: !9650)
!9657 = !DILocation(line: 181, column: 8, scope: !9650)
!9658 = !DILocation(line: 183, column: 14, scope: !9650)
!9659 = !DILocation(line: 183, column: 22, scope: !9650)
!9660 = !DILocation(line: 183, column: 2, scope: !9650)
!9661 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1120, file: !1120, line: 198, type: !9542, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9662)
!9662 = !{!9663, !9664, !9665}
!9663 = !DILocalVariable(name: "target", arg: 1, scope: !9661, file: !1120, line: 198, type: !9528)
!9664 = !DILocalVariable(name: "bit", arg: 2, scope: !9661, file: !1120, line: 198, type: !103)
!9665 = !DILocalVariable(name: "mask", scope: !9661, file: !1120, line: 200, type: !9416)
!9666 = !DILocation(line: 0, scope: !9661)
!9667 = !DILocation(line: 200, column: 22, scope: !9661)
!9668 = !DILocation(line: 202, column: 45, scope: !9661)
!9669 = !DILocation(line: 202, column: 8, scope: !9661)
!9670 = !DILocation(line: 203, column: 1, scope: !9661)
!9671 = distinct !DISubprogram(name: "cursor_backward", scope: !937, file: !937, line: 148, type: !5835, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9672)
!9672 = !{!9673}
!9673 = !DILocalVariable(name: "count", arg: 1, scope: !9671, file: !937, line: 148, type: !32)
!9674 = !DILocation(line: 0, scope: !9671)
!9675 = !DILocation(line: 150, column: 2, scope: !9671)
!9676 = !DILocation(line: 151, column: 1, scope: !9671)
!9677 = distinct !DISubprogram(name: "cursor_forward", scope: !937, file: !937, line: 143, type: !5835, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9678)
!9678 = !{!9679}
!9679 = !DILocalVariable(name: "count", arg: 1, scope: !9677, file: !937, line: 143, type: !32)
!9680 = !DILocation(line: 0, scope: !9677)
!9681 = !DILocation(line: 145, column: 2, scope: !9677)
!9682 = !DILocation(line: 146, column: 1, scope: !9677)
!9683 = distinct !DISubprogram(name: "atomic_get", scope: !9627, file: !9627, line: 159, type: !9684, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9686)
!9684 = !DISubroutineType(types: !9685)
!9685 = !{!9416, !9410}
!9686 = !{!9687}
!9687 = !DILocalVariable(name: "target", arg: 1, scope: !9683, file: !9627, line: 159, type: !9410)
!9688 = !DILocation(line: 0, scope: !9683)
!9689 = !DILocation(line: 161, column: 9, scope: !9683)
!9690 = !DILocation(line: 161, column: 2, scope: !9683)
!9691 = !DISubprogram(name: "z_impl_k_queue_get", scope: !3689, file: !3689, line: 646, type: !9391, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!9692 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !212, file: !212, line: 1093, type: !974, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9693)
!9693 = !{!9694, !9695}
!9694 = !DILocalVariable(name: "dev", arg: 1, scope: !9692, file: !212, line: 1093, type: !953)
!9695 = !DILocalVariable(name: "api", scope: !9692, file: !212, line: 1096, type: !945)
!9696 = !DILocation(line: 0, scope: !9692)
!9697 = !DILocation(line: 1097, column: 40, scope: !9692)
!9698 = !DILocation(line: 1099, column: 11, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9692, file: !212, line: 1099, column: 6)
!9700 = !DILocation(line: 1099, column: 26, scope: !9699)
!9701 = !DILocation(line: 1099, column: 6, scope: !9692)
!9702 = !DILocation(line: 1102, column: 9, scope: !9692)
!9703 = !DILocation(line: 1102, column: 2, scope: !9692)
!9704 = !DILocation(line: 1107, column: 1, scope: !9692)
!9705 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !212, file: !212, line: 1136, type: !974, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9706)
!9706 = !{!9707, !9708}
!9707 = !DILocalVariable(name: "dev", arg: 1, scope: !9705, file: !212, line: 1136, type: !953)
!9708 = !DILocalVariable(name: "api", scope: !9705, file: !212, line: 1139, type: !945)
!9709 = !DILocation(line: 0, scope: !9705)
!9710 = !DILocation(line: 1140, column: 40, scope: !9705)
!9711 = !DILocation(line: 1142, column: 11, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9705, file: !212, line: 1142, column: 6)
!9713 = !DILocation(line: 1142, column: 22, scope: !9712)
!9714 = !DILocation(line: 1142, column: 6, scope: !9705)
!9715 = !DILocation(line: 1145, column: 9, scope: !9705)
!9716 = !DILocation(line: 1145, column: 2, scope: !9705)
!9717 = !DILocation(line: 1150, column: 1, scope: !9705)
!9718 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !212, file: !212, line: 878, type: !1004, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9719)
!9719 = !{!9720, !9721}
!9720 = !DILocalVariable(name: "dev", arg: 1, scope: !9718, file: !212, line: 878, type: !953)
!9721 = !DILocalVariable(name: "api", scope: !9718, file: !212, line: 881, type: !945)
!9722 = !DILocation(line: 0, scope: !9718)
!9723 = !DILocation(line: 882, column: 40, scope: !9718)
!9724 = !DILocation(line: 884, column: 11, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9718, file: !212, line: 884, column: 6)
!9726 = !DILocation(line: 884, column: 26, scope: !9725)
!9727 = !DILocation(line: 884, column: 6, scope: !9718)
!9728 = !DILocation(line: 885, column: 3, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9725, file: !212, line: 884, column: 35)
!9730 = !DILocation(line: 886, column: 2, scope: !9729)
!9731 = !DILocation(line: 890, column: 1, scope: !9718)
!9732 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !212, file: !212, line: 955, type: !1004, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !933, retainedNodes: !9733)
!9733 = !{!9734, !9735}
!9734 = !DILocalVariable(name: "dev", arg: 1, scope: !9732, file: !212, line: 955, type: !953)
!9735 = !DILocalVariable(name: "api", scope: !9732, file: !212, line: 958, type: !945)
!9736 = !DILocation(line: 0, scope: !9732)
!9737 = !DILocation(line: 959, column: 40, scope: !9732)
!9738 = !DILocation(line: 961, column: 11, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9732, file: !212, line: 961, column: 6)
!9740 = !DILocation(line: 961, column: 26, scope: !9739)
!9741 = !DILocation(line: 961, column: 6, scope: !9732)
!9742 = !DILocation(line: 962, column: 3, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9739, file: !212, line: 961, column: 35)
!9744 = !DILocation(line: 963, column: 2, scope: !9743)
!9745 = !DILocation(line: 967, column: 1, scope: !9732)
!9746 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1306, file: !1306, line: 523, type: !1162, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9747)
!9747 = !{!9748, !9749, !9750, !9751, !9752}
!9748 = !DILocalVariable(name: "dev", arg: 1, scope: !9746, file: !1306, line: 523, type: !1164)
!9749 = !DILocalVariable(name: "pin", arg: 2, scope: !9746, file: !1306, line: 524, type: !1179)
!9750 = !DILocalVariable(name: "flags", arg: 3, scope: !9746, file: !1306, line: 524, type: !1180)
!9751 = !DILocalVariable(name: "err", scope: !9746, file: !1306, line: 526, type: !103)
!9752 = !DILocalVariable(name: "pincfg", scope: !9746, file: !1306, line: 527, type: !103)
!9753 = !DILocation(line: 0, scope: !9746)
!9754 = !DILocation(line: 527, column: 2, scope: !9746)
!9755 = !DILocation(line: 532, column: 8, scope: !9746)
!9756 = !DILocation(line: 533, column: 10, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9746, file: !1306, line: 533, column: 6)
!9758 = !DILocation(line: 533, column: 6, scope: !9746)
!9759 = !DILocation(line: 543, column: 13, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9746, file: !1306, line: 543, column: 6)
!9761 = !DILocation(line: 543, column: 28, scope: !9760)
!9762 = !DILocation(line: 543, column: 6, scope: !9746)
!9763 = !DILocation(line: 544, column: 14, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !1306, line: 544, column: 7)
!9765 = distinct !DILexicalBlock(scope: !9760, file: !1306, line: 543, column: 34)
!9766 = !DILocation(line: 544, column: 39, scope: !9764)
!9767 = !DILocation(line: 544, column: 7, scope: !9765)
!9768 = !DILocation(line: 545, column: 38, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9764, file: !1306, line: 544, column: 45)
!9770 = !DILocation(line: 545, column: 4, scope: !9769)
!9771 = !DILocation(line: 546, column: 3, scope: !9769)
!9772 = !DILocation(line: 546, column: 21, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9764, file: !1306, line: 546, column: 14)
!9774 = !DILocation(line: 546, column: 45, scope: !9773)
!9775 = !DILocation(line: 546, column: 14, scope: !9764)
!9776 = !DILocation(line: 547, column: 40, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9773, file: !1306, line: 546, column: 51)
!9778 = !DILocation(line: 547, column: 4, scope: !9777)
!9779 = !DILocation(line: 548, column: 3, scope: !9777)
!9780 = !DILocation(line: 551, column: 32, scope: !9746)
!9781 = !DILocation(line: 551, column: 37, scope: !9746)
!9782 = !DILocation(line: 551, column: 2, scope: !9746)
!9783 = !DILocation(line: 554, column: 6, scope: !9746)
!9784 = !DILocation(line: 562, column: 1, scope: !9746)
!9785 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1306, file: !1306, line: 410, type: !9786, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9788)
!9786 = !DISubroutineType(types: !9787)
!9787 = !{!103, !1164, !855}
!9788 = !{!9789, !9790, !9791, !9793}
!9789 = !DILocalVariable(name: "dev", arg: 1, scope: !9785, file: !1306, line: 410, type: !1164)
!9790 = !DILocalVariable(name: "value", arg: 2, scope: !9785, file: !1306, line: 410, type: !855)
!9791 = !DILocalVariable(name: "cfg", scope: !9785, file: !1306, line: 412, type: !9792)
!9792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!9793 = !DILocalVariable(name: "gpio", scope: !9785, file: !1306, line: 413, type: !1237)
!9794 = !DILocation(line: 0, scope: !9785)
!9795 = !DILocation(line: 412, column: 45, scope: !9785)
!9796 = !DILocation(line: 413, column: 44, scope: !9785)
!9797 = !DILocation(line: 415, column: 11, scope: !9785)
!9798 = !DILocation(line: 415, column: 9, scope: !9785)
!9799 = !DILocation(line: 417, column: 2, scope: !9785)
!9800 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1306, file: !1306, line: 420, type: !1189, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9801)
!9801 = !{!9802, !9803, !9804, !9805, !9806, !9807}
!9802 = !DILocalVariable(name: "dev", arg: 1, scope: !9800, file: !1306, line: 420, type: !1164)
!9803 = !DILocalVariable(name: "mask", arg: 2, scope: !9800, file: !1306, line: 421, type: !1191)
!9804 = !DILocalVariable(name: "value", arg: 3, scope: !9800, file: !1306, line: 422, type: !1186)
!9805 = !DILocalVariable(name: "cfg", scope: !9800, file: !1306, line: 424, type: !9792)
!9806 = !DILocalVariable(name: "gpio", scope: !9800, file: !1306, line: 425, type: !1237)
!9807 = !DILocalVariable(name: "port_value", scope: !9800, file: !1306, line: 426, type: !132)
!9808 = !DILocation(line: 0, scope: !9800)
!9809 = !DILocation(line: 424, column: 45, scope: !9800)
!9810 = !DILocation(line: 425, column: 44, scope: !9800)
!9811 = !DILocation(line: 430, column: 15, scope: !9800)
!9812 = !DILocation(line: 431, column: 46, scope: !9800)
!9813 = !DILocation(line: 431, column: 44, scope: !9800)
!9814 = !DILocation(line: 431, column: 61, scope: !9800)
!9815 = !DILocation(line: 431, column: 53, scope: !9800)
!9816 = !DILocation(line: 431, column: 2, scope: !9800)
!9817 = !DILocation(line: 435, column: 2, scope: !9800)
!9818 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1306, file: !1306, line: 438, type: !1194, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9819)
!9819 = !{!9820, !9821, !9822, !9823}
!9820 = !DILocalVariable(name: "dev", arg: 1, scope: !9818, file: !1306, line: 438, type: !1164)
!9821 = !DILocalVariable(name: "pins", arg: 2, scope: !9818, file: !1306, line: 439, type: !1191)
!9822 = !DILocalVariable(name: "cfg", scope: !9818, file: !1306, line: 441, type: !9792)
!9823 = !DILocalVariable(name: "gpio", scope: !9818, file: !1306, line: 442, type: !1237)
!9824 = !DILocation(line: 0, scope: !9818)
!9825 = !DILocation(line: 441, column: 45, scope: !9818)
!9826 = !DILocation(line: 442, column: 44, scope: !9818)
!9827 = !DILocation(line: 448, column: 2, scope: !9818)
!9828 = !DILocation(line: 450, column: 2, scope: !9818)
!9829 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1306, file: !1306, line: 453, type: !1194, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9830)
!9830 = !{!9831, !9832, !9833, !9834}
!9831 = !DILocalVariable(name: "dev", arg: 1, scope: !9829, file: !1306, line: 453, type: !1164)
!9832 = !DILocalVariable(name: "pins", arg: 2, scope: !9829, file: !1306, line: 454, type: !1191)
!9833 = !DILocalVariable(name: "cfg", scope: !9829, file: !1306, line: 456, type: !9792)
!9834 = !DILocalVariable(name: "gpio", scope: !9829, file: !1306, line: 457, type: !1237)
!9835 = !DILocation(line: 0, scope: !9829)
!9836 = !DILocation(line: 456, column: 45, scope: !9829)
!9837 = !DILocation(line: 457, column: 44, scope: !9829)
!9838 = !DILocation(line: 467, column: 2, scope: !9829)
!9839 = !DILocation(line: 470, column: 2, scope: !9829)
!9840 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1306, file: !1306, line: 473, type: !1194, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9841)
!9841 = !{!9842, !9843, !9844, !9845}
!9842 = !DILocalVariable(name: "dev", arg: 1, scope: !9840, file: !1306, line: 473, type: !1164)
!9843 = !DILocalVariable(name: "pins", arg: 2, scope: !9840, file: !1306, line: 474, type: !1191)
!9844 = !DILocalVariable(name: "cfg", scope: !9840, file: !1306, line: 476, type: !9792)
!9845 = !DILocalVariable(name: "gpio", scope: !9840, file: !1306, line: 477, type: !1237)
!9846 = !DILocation(line: 0, scope: !9840)
!9847 = !DILocation(line: 476, column: 45, scope: !9840)
!9848 = !DILocation(line: 477, column: 44, scope: !9840)
!9849 = !DILocation(line: 484, column: 2, scope: !9840)
!9850 = !DILocation(line: 487, column: 2, scope: !9840)
!9851 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1306, file: !1306, line: 594, type: !1200, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9852)
!9852 = !{!9853, !9854, !9855, !9856, !9857, !9858, !9860, !9861, !9862}
!9853 = !DILocalVariable(name: "dev", arg: 1, scope: !9851, file: !1306, line: 594, type: !1164)
!9854 = !DILocalVariable(name: "pin", arg: 2, scope: !9851, file: !1306, line: 595, type: !1179)
!9855 = !DILocalVariable(name: "mode", arg: 3, scope: !9851, file: !1306, line: 596, type: !1138)
!9856 = !DILocalVariable(name: "trig", arg: 4, scope: !9851, file: !1306, line: 597, type: !1144)
!9857 = !DILocalVariable(name: "cfg", scope: !9851, file: !1306, line: 599, type: !9792)
!9858 = !DILocalVariable(name: "data", scope: !9851, file: !1306, line: 600, type: !9859)
!9859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 32)
!9860 = !DILocalVariable(name: "edge", scope: !9851, file: !1306, line: 601, type: !103)
!9861 = !DILocalVariable(name: "err", scope: !9851, file: !1306, line: 602, type: !103)
!9862 = !DILabel(scope: !9851, name: "exit", file: !1306, line: 643)
!9863 = !DILocation(line: 0, scope: !9851)
!9864 = !DILocation(line: 599, column: 45, scope: !9851)
!9865 = !DILocation(line: 604, column: 6, scope: !9851)
!9866 = !DILocation(line: 605, column: 34, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9868, file: !1306, line: 605, column: 7)
!9868 = distinct !DILexicalBlock(scope: !9869, file: !1306, line: 604, column: 38)
!9869 = distinct !DILexicalBlock(scope: !9851, file: !1306, line: 604, column: 6)
!9870 = !DILocation(line: 605, column: 7, scope: !9867)
!9871 = !DILocation(line: 605, column: 47, scope: !9867)
!9872 = !DILocation(line: 605, column: 39, scope: !9867)
!9873 = !DILocation(line: 605, column: 7, scope: !9868)
!9874 = !DILocation(line: 606, column: 4, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9867, file: !1306, line: 605, column: 53)
!9876 = !DILocation(line: 607, column: 4, scope: !9875)
!9877 = !DILocation(line: 608, column: 4, scope: !9875)
!9878 = !DILocation(line: 609, column: 3, scope: !9875)
!9879 = !DILocation(line: 600, column: 38, scope: !9851)
!9880 = !DILocation(line: 620, column: 30, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9851, file: !1306, line: 620, column: 6)
!9882 = !DILocation(line: 620, column: 6, scope: !9881)
!9883 = !DILocation(line: 620, column: 57, scope: !9881)
!9884 = !DILocation(line: 620, column: 6, scope: !9851)
!9885 = !DILocation(line: 625, column: 29, scope: !9851)
!9886 = !DILocation(line: 625, column: 2, scope: !9851)
!9887 = !DILocation(line: 627, column: 2, scope: !9851)
!9888 = !DILocation(line: 630, column: 3, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9851, file: !1306, line: 627, column: 16)
!9890 = !DILocation(line: 633, column: 3, scope: !9889)
!9891 = !DILocation(line: 636, column: 3, scope: !9889)
!9892 = !DILocation(line: 639, column: 2, scope: !9851)
!9893 = !DILocation(line: 641, column: 2, scope: !9851)
!9894 = !DILocation(line: 643, column: 1, scope: !9851)
!9895 = !DILocation(line: 644, column: 2, scope: !9851)
!9896 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1306, file: !1306, line: 647, type: !1204, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9897)
!9897 = !{!9898, !9899, !9900, !9901}
!9898 = !DILocalVariable(name: "dev", arg: 1, scope: !9896, file: !1306, line: 647, type: !1164)
!9899 = !DILocalVariable(name: "callback", arg: 2, scope: !9896, file: !1306, line: 648, type: !1206)
!9900 = !DILocalVariable(name: "set", arg: 3, scope: !9896, file: !1306, line: 649, type: !166)
!9901 = !DILocalVariable(name: "data", scope: !9896, file: !1306, line: 651, type: !9859)
!9902 = !DILocation(line: 0, scope: !9896)
!9903 = !DILocation(line: 651, column: 38, scope: !9896)
!9904 = !DILocation(line: 653, column: 37, scope: !9896)
!9905 = !DILocation(line: 653, column: 9, scope: !9896)
!9906 = !DILocation(line: 653, column: 2, scope: !9896)
!9907 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9908, file: !9908, line: 38, type: !9909, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9912)
!9908 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9909 = !DISubroutineType(types: !9910)
!9910 = !{!103, !9911, !1206, !166}
!9911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!9912 = !{!9913, !9914, !9915}
!9913 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9907, file: !9908, line: 38, type: !9911)
!9914 = !DILocalVariable(name: "callback", arg: 2, scope: !9907, file: !9908, line: 39, type: !1206)
!9915 = !DILocalVariable(name: "set", arg: 3, scope: !9907, file: !9908, line: 40, type: !166)
!9916 = !DILocation(line: 0, scope: !9907)
!9917 = !DILocation(line: 45, column: 7, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9907, file: !9908, line: 45, column: 6)
!9919 = !DILocation(line: 45, column: 6, scope: !9907)
!9920 = !DILocation(line: 46, column: 56, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9922, file: !9908, line: 46, column: 7)
!9922 = distinct !DILexicalBlock(scope: !9918, file: !9908, line: 45, column: 38)
!9923 = !DILocation(line: 46, column: 8, scope: !9921)
!9924 = !DILocation(line: 46, column: 7, scope: !9922)
!9925 = !DILocation(line: 51, column: 13, scope: !9918)
!9926 = !DILocation(line: 56, column: 43, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9928, file: !9908, line: 55, column: 11)
!9928 = distinct !DILexicalBlock(scope: !9907, file: !9908, line: 55, column: 6)
!9929 = !DILocation(line: 56, column: 3, scope: !9927)
!9930 = !DILocation(line: 57, column: 2, scope: !9927)
!9931 = !DILocation(line: 60, column: 1, scope: !9907)
!9932 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1211, file: !1211, line: 261, type: !9933, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9935)
!9933 = !DISubroutineType(types: !9934)
!9934 = !{!166, !9911}
!9935 = !{!9936}
!9936 = !DILocalVariable(name: "list", arg: 1, scope: !9932, file: !1211, line: 261, type: !9911)
!9937 = !DILocation(line: 0, scope: !9932)
!9938 = !DILocation(line: 261, column: 1, scope: !9932)
!9939 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1211, file: !1211, line: 417, type: !9940, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9942)
!9940 = !DISubroutineType(types: !9941)
!9941 = !{!166, !9911, !1382}
!9942 = !{!9943, !9944, !9945, !9946}
!9943 = !DILocalVariable(name: "list", arg: 1, scope: !9939, file: !1211, line: 417, type: !9911)
!9944 = !DILocalVariable(name: "node", arg: 2, scope: !9939, file: !1211, line: 417, type: !1382)
!9945 = !DILocalVariable(name: "prev", scope: !9939, file: !1211, line: 417, type: !1382)
!9946 = !DILocalVariable(name: "test", scope: !9939, file: !1211, line: 417, type: !1382)
!9947 = !DILocation(line: 0, scope: !9939)
!9948 = !DILocation(line: 417, column: 1, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9939, file: !1211, line: 417, column: 1)
!9950 = !DILocation(line: 417, column: 1, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9949, file: !1211, line: 417, column: 1)
!9952 = !DILocation(line: 417, column: 1, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9954, file: !1211, line: 417, column: 1)
!9954 = distinct !DILexicalBlock(scope: !9951, file: !1211, line: 417, column: 1)
!9955 = !DILocation(line: 417, column: 1, scope: !9954)
!9956 = distinct !{!9956, !9948, !9948}
!9957 = !DILocation(line: 417, column: 1, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9953, file: !1211, line: 417, column: 1)
!9959 = !DILocation(line: 417, column: 1, scope: !9939)
!9960 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1211, file: !1211, line: 298, type: !9961, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9963)
!9961 = !DISubroutineType(types: !9962)
!9962 = !{null, !9911, !1382}
!9963 = !{!9964, !9965}
!9964 = !DILocalVariable(name: "list", arg: 1, scope: !9960, file: !1211, line: 298, type: !9911)
!9965 = !DILocalVariable(name: "node", arg: 2, scope: !9960, file: !1211, line: 298, type: !1382)
!9966 = !DILocation(line: 0, scope: !9960)
!9967 = !DILocation(line: 298, column: 1, scope: !9960)
!9968 = !DILocation(line: 298, column: 1, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9960, file: !1211, line: 298, column: 1)
!9970 = !DILocation(line: 298, column: 1, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9969, file: !1211, line: 298, column: 1)
!9972 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1211, file: !1211, line: 231, type: !9973, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9975)
!9973 = !DISubroutineType(types: !9974)
!9974 = !{!1382, !9911}
!9975 = !{!9976}
!9976 = !DILocalVariable(name: "list", arg: 1, scope: !9972, file: !1211, line: 231, type: !9911)
!9977 = !DILocation(line: 0, scope: !9972)
!9978 = !DILocation(line: 233, column: 15, scope: !9972)
!9979 = !DILocation(line: 233, column: 2, scope: !9972)
!9980 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1211, file: !1211, line: 209, type: !9981, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9983)
!9981 = !DISubroutineType(types: !9982)
!9982 = !{null, !1382, !1382}
!9983 = !{!9984, !9985}
!9984 = !DILocalVariable(name: "parent", arg: 1, scope: !9980, file: !1211, line: 209, type: !1382)
!9985 = !DILocalVariable(name: "child", arg: 2, scope: !9980, file: !1211, line: 209, type: !1382)
!9986 = !DILocation(line: 0, scope: !9980)
!9987 = !DILocation(line: 211, column: 10, scope: !9980)
!9988 = !DILocation(line: 211, column: 15, scope: !9980)
!9989 = !DILocation(line: 212, column: 1, scope: !9980)
!9990 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1211, file: !1211, line: 214, type: !9961, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9991)
!9991 = !{!9992, !9993}
!9992 = !DILocalVariable(name: "list", arg: 1, scope: !9990, file: !1211, line: 214, type: !9911)
!9993 = !DILocalVariable(name: "node", arg: 2, scope: !9990, file: !1211, line: 214, type: !1382)
!9994 = !DILocation(line: 0, scope: !9990)
!9995 = !DILocation(line: 216, column: 8, scope: !9990)
!9996 = !DILocation(line: 216, column: 13, scope: !9990)
!9997 = !DILocation(line: 217, column: 1, scope: !9990)
!9998 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1211, file: !1211, line: 243, type: !9973, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9999)
!9999 = !{!10000}
!10000 = !DILocalVariable(name: "list", arg: 1, scope: !9998, file: !1211, line: 243, type: !9911)
!10001 = !DILocation(line: 0, scope: !9998)
!10002 = !DILocation(line: 245, column: 15, scope: !9998)
!10003 = !DILocation(line: 245, column: 2, scope: !9998)
!10004 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1211, file: !1211, line: 219, type: !9961, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10005)
!10005 = !{!10006, !10007}
!10006 = !DILocalVariable(name: "list", arg: 1, scope: !10004, file: !1211, line: 219, type: !9911)
!10007 = !DILocalVariable(name: "node", arg: 2, scope: !10004, file: !1211, line: 219, type: !1382)
!10008 = !DILocation(line: 0, scope: !10004)
!10009 = !DILocation(line: 221, column: 8, scope: !10004)
!10010 = !DILocation(line: 221, column: 13, scope: !10004)
!10011 = !DILocation(line: 222, column: 1, scope: !10004)
!10012 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1211, file: !1211, line: 401, type: !10013, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10015)
!10013 = !DISubroutineType(types: !10014)
!10014 = !{null, !9911, !1382, !1382}
!10015 = !{!10016, !10017, !10018}
!10016 = !DILocalVariable(name: "list", arg: 1, scope: !10012, file: !1211, line: 401, type: !9911)
!10017 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10012, file: !1211, line: 401, type: !1382)
!10018 = !DILocalVariable(name: "node", arg: 3, scope: !10012, file: !1211, line: 401, type: !1382)
!10019 = !DILocation(line: 0, scope: !10012)
!10020 = !DILocation(line: 401, column: 1, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10012, file: !1211, line: 401, column: 1)
!10022 = !DILocation(line: 0, scope: !10021)
!10023 = !DILocation(line: 401, column: 1, scope: !10012)
!10024 = !DILocation(line: 401, column: 1, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10021, file: !1211, line: 401, column: 1)
!10026 = !DILocation(line: 401, column: 1, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10025, file: !1211, line: 401, column: 1)
!10028 = !DILocation(line: 401, column: 1, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10027, file: !1211, line: 401, column: 1)
!10030 = !DILocation(line: 401, column: 1, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10021, file: !1211, line: 401, column: 1)
!10032 = !DILocation(line: 401, column: 1, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10031, file: !1211, line: 401, column: 1)
!10034 = !DILocation(line: 401, column: 1, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10033, file: !1211, line: 401, column: 1)
!10036 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1211, file: !1211, line: 285, type: !10037, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10039)
!10037 = !DISubroutineType(types: !10038)
!10038 = !{!1382, !1382}
!10039 = !{!10040}
!10040 = !DILocalVariable(name: "node", arg: 1, scope: !10036, file: !1211, line: 285, type: !1382)
!10041 = !DILocation(line: 0, scope: !10036)
!10042 = !DILocation(line: 285, column: 1, scope: !10036)
!10043 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1211, file: !1211, line: 274, type: !10037, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10044)
!10044 = !{!10045}
!10045 = !DILocalVariable(name: "node", arg: 1, scope: !10043, file: !1211, line: 274, type: !1382)
!10046 = !DILocation(line: 0, scope: !10043)
!10047 = !DILocation(line: 274, column: 1, scope: !10043)
!10048 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1211, file: !1211, line: 204, type: !10037, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10049)
!10049 = !{!10050}
!10050 = !DILocalVariable(name: "node", arg: 1, scope: !10048, file: !1211, line: 204, type: !1382)
!10051 = !DILocation(line: 0, scope: !10048)
!10052 = !DILocation(line: 206, column: 15, scope: !10048)
!10053 = !DILocation(line: 206, column: 2, scope: !10048)
!10054 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1306, file: !1306, line: 342, type: !118, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10055)
!10055 = !{!10056, !10057, !10058}
!10056 = !DILocalVariable(name: "pin", arg: 1, scope: !10054, file: !1306, line: 342, type: !103)
!10057 = !DILocalVariable(name: "line", scope: !10054, file: !1306, line: 344, type: !132)
!10058 = !DILocalVariable(name: "port", scope: !10054, file: !1306, line: 345, type: !103)
!10059 = !DILocation(line: 0, scope: !10054)
!10060 = !DILocation(line: 344, column: 18, scope: !10054)
!10061 = !{i32 983040, i32 0}
!10062 = !DILocation(line: 356, column: 9, scope: !10054)
!10063 = !DILocation(line: 370, column: 2, scope: !10054)
!10064 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1306, file: !1306, line: 37, type: !720, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10065)
!10065 = !{!10066, !10067, !10068}
!10066 = !DILocalVariable(name: "line", arg: 1, scope: !10064, file: !1306, line: 37, type: !103)
!10067 = !DILocalVariable(name: "arg", arg: 2, scope: !10064, file: !1306, line: 37, type: !102)
!10068 = !DILocalVariable(name: "data", scope: !10064, file: !1306, line: 39, type: !9859)
!10069 = !DILocation(line: 0, scope: !10064)
!10070 = !DILocation(line: 41, column: 29, scope: !10064)
!10071 = !DILocation(line: 41, column: 39, scope: !10064)
!10072 = !DILocation(line: 41, column: 44, scope: !10064)
!10073 = !DILocation(line: 41, column: 2, scope: !10064)
!10074 = !DILocation(line: 42, column: 1, scope: !10064)
!10075 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1306, file: !1306, line: 376, type: !10076, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10078)
!10076 = !DISubroutineType(types: !10077)
!10077 = !{!103, !103, !103}
!10078 = !{!10079, !10080, !10081, !10083, !10084}
!10079 = !DILocalVariable(name: "port", arg: 1, scope: !10075, file: !1306, line: 376, type: !103)
!10080 = !DILocalVariable(name: "pin", arg: 2, scope: !10075, file: !1306, line: 376, type: !103)
!10081 = !DILocalVariable(name: "clk", scope: !10075, file: !1306, line: 386, type: !10082)
!10082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1164)
!10083 = !DILocalVariable(name: "pclken", scope: !10075, file: !1306, line: 387, type: !1425)
!10084 = !DILocalVariable(name: "ret", scope: !10075, file: !1306, line: 396, type: !103)
!10085 = !DILocation(line: 0, scope: !10075)
!10086 = !DILocation(line: 387, column: 2, scope: !10075)
!10087 = !DILocation(line: 387, column: 22, scope: !10075)
!10088 = !DILocation(line: 399, column: 8, scope: !10075)
!10089 = !DILocation(line: 400, column: 10, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10075, file: !1306, line: 400, column: 6)
!10091 = !DILocation(line: 400, column: 6, scope: !10075)
!10092 = !DILocation(line: 405, column: 2, scope: !10075)
!10093 = !DILocation(line: 407, column: 2, scope: !10075)
!10094 = !DILocation(line: 408, column: 1, scope: !10075)
!10095 = distinct !DISubprogram(name: "clock_control_on", scope: !806, file: !806, line: 123, type: !1271, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10096)
!10096 = !{!10097, !10098, !10099}
!10097 = !DILocalVariable(name: "dev", arg: 1, scope: !10095, file: !806, line: 123, type: !1164)
!10098 = !DILocalVariable(name: "sys", arg: 2, scope: !10095, file: !806, line: 124, type: !899)
!10099 = !DILocalVariable(name: "api", scope: !10095, file: !806, line: 126, type: !1264)
!10100 = !DILocation(line: 0, scope: !10095)
!10101 = !DILocation(line: 127, column: 49, scope: !10095)
!10102 = !DILocation(line: 129, column: 14, scope: !10095)
!10103 = !DILocation(line: 129, column: 9, scope: !10095)
!10104 = !DILocation(line: 129, column: 2, scope: !10095)
!10105 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1306, file: !1306, line: 311, type: !8635, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10106)
!10106 = !{!10107, !10108, !10109}
!10107 = !DILocalVariable(name: "port", arg: 1, scope: !10105, file: !1306, line: 311, type: !103)
!10108 = !DILocalVariable(name: "pin", arg: 2, scope: !10105, file: !1306, line: 311, type: !103)
!10109 = !DILocalVariable(name: "line", scope: !10105, file: !1306, line: 313, type: !132)
!10110 = !DILocation(line: 0, scope: !10105)
!10111 = !DILocation(line: 313, column: 18, scope: !10105)
!10112 = !DILocation(line: 337, column: 2, scope: !10105)
!10113 = !DILocation(line: 340, column: 1, scope: !10105)
!10114 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1306, file: !1306, line: 295, type: !10115, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10117)
!10115 = !DISubroutineType(types: !10116)
!10116 = !{!132, !103}
!10117 = !{!10118}
!10118 = !DILocalVariable(name: "pin", arg: 1, scope: !10114, file: !1306, line: 295, type: !103)
!10119 = !DILocation(line: 0, scope: !10114)
!10120 = !DILocation(line: 307, column: 46, scope: !10114)
!10121 = !DILocation(line: 307, column: 27, scope: !10114)
!10122 = !DILocation(line: 307, column: 32, scope: !10114)
!10123 = !DILocation(line: 307, column: 14, scope: !10114)
!10124 = !DILocation(line: 307, column: 39, scope: !10114)
!10125 = !DILocation(line: 307, column: 2, scope: !10114)
!10126 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5845, file: !5845, line: 671, type: !10127, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10129)
!10127 = !DISubroutineType(types: !10128)
!10128 = !{null, !132, !132}
!10129 = !{!10130, !10131}
!10130 = !DILocalVariable(name: "Port", arg: 1, scope: !10126, file: !5845, line: 671, type: !132)
!10131 = !DILocalVariable(name: "Line", arg: 2, scope: !10126, file: !5845, line: 671, type: !132)
!10132 = !DILocation(line: 0, scope: !10126)
!10133 = !DILocation(line: 673, column: 3, scope: !10126)
!10134 = !DILocalVariable(name: "value", arg: 1, scope: !10135, file: !6844, line: 373, type: !132)
!10135 = distinct !DISubprogram(name: "__RBIT", scope: !6844, file: !6844, line: 373, type: !7851, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10136)
!10136 = !{!10134, !10137}
!10137 = !DILocalVariable(name: "result", scope: !10135, file: !6844, line: 375, type: !132)
!10138 = !DILocation(line: 0, scope: !10135, inlinedAt: !10139)
!10139 = distinct !DILocation(line: 673, column: 3, scope: !10126)
!10140 = !DILocation(line: 380, column: 4, scope: !10135, inlinedAt: !10139)
!10141 = !{i64 3500117}
!10142 = !DILocalVariable(name: "value", arg: 1, scope: !10143, file: !6844, line: 403, type: !132)
!10143 = distinct !DISubprogram(name: "__CLZ", scope: !6844, file: !6844, line: 403, type: !10144, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10146)
!10144 = !DISubroutineType(types: !10145)
!10145 = !{!163, !132}
!10146 = !{!10142}
!10147 = !DILocation(line: 0, scope: !10143, inlinedAt: !10148)
!10148 = distinct !DILocation(line: 673, column: 3, scope: !10126)
!10149 = !DILocation(line: 414, column: 7, scope: !10143, inlinedAt: !10148)
!10150 = !DILocation(line: 674, column: 1, scope: !10126)
!10151 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9908, file: !9908, line: 69, type: !10152, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10154)
!10152 = !DISubroutineType(types: !10153)
!10153 = !{null, !9911, !1164, !132}
!10154 = !{!10155, !10156, !10157, !10158, !10159}
!10155 = !DILocalVariable(name: "list", arg: 1, scope: !10151, file: !9908, line: 69, type: !9911)
!10156 = !DILocalVariable(name: "port", arg: 2, scope: !10151, file: !9908, line: 70, type: !1164)
!10157 = !DILocalVariable(name: "pins", arg: 3, scope: !10151, file: !9908, line: 71, type: !132)
!10158 = !DILocalVariable(name: "cb", scope: !10151, file: !9908, line: 73, type: !1206)
!10159 = !DILocalVariable(name: "tmp", scope: !10151, file: !9908, line: 73, type: !1206)
!10160 = !DILocation(line: 0, scope: !10151)
!10161 = !DILocation(line: 75, column: 2, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10151, file: !9908, line: 75, column: 2)
!10163 = !DILocation(line: 0, scope: !10162)
!10164 = !DILocation(line: 76, column: 11, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10166, file: !9908, line: 76, column: 7)
!10166 = distinct !DILexicalBlock(scope: !10167, file: !9908, line: 75, column: 57)
!10167 = distinct !DILexicalBlock(scope: !10162, file: !9908, line: 75, column: 2)
!10168 = !DILocation(line: 76, column: 20, scope: !10165)
!10169 = !DILocation(line: 76, column: 7, scope: !10166)
!10170 = !DILocation(line: 78, column: 8, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10165, file: !9908, line: 76, column: 28)
!10172 = !DILocation(line: 78, column: 4, scope: !10171)
!10173 = !DILocation(line: 79, column: 3, scope: !10171)
!10174 = !DILocation(line: 75, column: 2, scope: !10167)
!10175 = !DILocation(line: 81, column: 1, scope: !10151)
!10176 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5845, file: !5845, line: 710, type: !7851, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10177)
!10177 = !{!10178}
!10178 = !DILocalVariable(name: "Line", arg: 1, scope: !10176, file: !5845, line: 710, type: !132)
!10179 = !DILocation(line: 0, scope: !10176)
!10180 = !DILocation(line: 712, column: 21, scope: !10176)
!10181 = !DILocation(line: 0, scope: !10135, inlinedAt: !10182)
!10182 = distinct !DILocation(line: 712, column: 76, scope: !10176)
!10183 = !DILocation(line: 380, column: 4, scope: !10135, inlinedAt: !10182)
!10184 = !DILocation(line: 0, scope: !10143, inlinedAt: !10185)
!10185 = distinct !DILocation(line: 712, column: 76, scope: !10176)
!10186 = !DILocation(line: 414, column: 7, scope: !10143, inlinedAt: !10185)
!10187 = !DILocation(line: 712, column: 73, scope: !10176)
!10188 = !DILocation(line: 712, column: 3, scope: !10176)
!10189 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10190, file: !10190, line: 910, type: !10191, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10193)
!10190 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10191 = !DISubroutineType(types: !10192)
!10192 = !{null, !1237, !132}
!10193 = !{!10194, !10195}
!10194 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10189, file: !10190, line: 910, type: !1237)
!10195 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10189, file: !10190, line: 910, type: !132)
!10196 = !DILocation(line: 0, scope: !10189)
!10197 = !DILocation(line: 912, column: 3, scope: !10189)
!10198 = !DILocation(line: 913, column: 1, scope: !10189)
!10199 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10190, file: !10190, line: 823, type: !10200, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10202)
!10200 = !DISubroutineType(types: !10201)
!10201 = !{!132, !1237}
!10202 = !{!10203}
!10203 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10199, file: !10190, line: 823, type: !1237)
!10204 = !DILocation(line: 0, scope: !10199)
!10205 = !DILocation(line: 825, column: 21, scope: !10199)
!10206 = !DILocation(line: 825, column: 3, scope: !10199)
!10207 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10190, file: !10190, line: 812, type: !10191, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10208)
!10208 = !{!10209, !10210}
!10209 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10207, file: !10190, line: 812, type: !1237)
!10210 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10207, file: !10190, line: 812, type: !132)
!10211 = !DILocation(line: 0, scope: !10207)
!10212 = !DILocation(line: 814, column: 3, scope: !10207)
!10213 = !DILocation(line: 815, column: 1, scope: !10207)
!10214 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10190, file: !10190, line: 771, type: !10200, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10215)
!10215 = !{!10216}
!10216 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10214, file: !10190, line: 771, type: !1237)
!10217 = !DILocation(line: 0, scope: !10214)
!10218 = !DILocation(line: 773, column: 21, scope: !10214)
!10219 = !DILocation(line: 773, column: 3, scope: !10214)
!10220 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1306, file: !1306, line: 47, type: !10221, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10223)
!10221 = !DISubroutineType(types: !10222)
!10222 = !{!103, !1180, !2620}
!10223 = !{!10224, !10225}
!10224 = !DILocalVariable(name: "flags", arg: 1, scope: !10220, file: !1306, line: 47, type: !1180)
!10225 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10220, file: !1306, line: 47, type: !2620)
!10226 = !DILocation(line: 0, scope: !10220)
!10227 = !DILocation(line: 50, column: 13, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10220, file: !1306, line: 50, column: 6)
!10229 = !DILocation(line: 50, column: 28, scope: !10228)
!10230 = !DILocation(line: 50, column: 6, scope: !10220)
!10231 = !DILocation(line: 53, column: 11, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10228, file: !1306, line: 50, column: 34)
!10233 = !DILocation(line: 55, column: 14, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10232, file: !1306, line: 55, column: 7)
!10235 = !DILocation(line: 55, column: 35, scope: !10234)
!10236 = !DILocation(line: 55, column: 7, scope: !10232)
!10237 = !DILocation(line: 56, column: 14, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10239, file: !1306, line: 56, column: 8)
!10239 = distinct !DILexicalBlock(scope: !10234, file: !1306, line: 55, column: 41)
!10240 = !DILocation(line: 56, column: 8, scope: !10239)
!10241 = !DILocation(line: 0, scope: !10234)
!10242 = !DILocation(line: 66, column: 14, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10232, file: !1306, line: 66, column: 7)
!10244 = !DILocation(line: 66, column: 30, scope: !10243)
!10245 = !DILocation(line: 66, column: 7, scope: !10232)
!10246 = !DILocation(line: 67, column: 12, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10243, file: !1306, line: 66, column: 36)
!10248 = !DILocation(line: 68, column: 3, scope: !10247)
!10249 = !DILocation(line: 68, column: 21, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10243, file: !1306, line: 68, column: 14)
!10251 = !DILocation(line: 68, column: 39, scope: !10250)
!10252 = !DILocation(line: 68, column: 14, scope: !10243)
!10253 = !DILocation(line: 69, column: 12, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10250, file: !1306, line: 68, column: 45)
!10255 = !DILocation(line: 70, column: 3, scope: !10254)
!10256 = !DILocation(line: 72, column: 21, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10228, file: !1306, line: 72, column: 14)
!10258 = !DILocation(line: 72, column: 35, scope: !10257)
!10259 = !DILocation(line: 72, column: 14, scope: !10228)
!10260 = !DILocation(line: 77, column: 14, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10262, file: !1306, line: 77, column: 7)
!10262 = distinct !DILexicalBlock(scope: !10257, file: !1306, line: 72, column: 41)
!10263 = !DILocation(line: 77, column: 30, scope: !10261)
!10264 = !DILocation(line: 77, column: 7, scope: !10262)
!10265 = !DILocation(line: 0, scope: !10228)
!10266 = !DILocation(line: 90, column: 1, scope: !10220)
!10267 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1306, file: !1306, line: 157, type: !10268, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10270)
!10268 = !DISubroutineType(types: !10269)
!10269 = !{null, !1164, !103, !103, !103}
!10270 = !{!10271, !10272, !10273, !10274, !10275, !10276, !10277, !10278, !10279, !10280, !10281}
!10271 = !DILocalVariable(name: "dev", arg: 1, scope: !10267, file: !1306, line: 157, type: !1164)
!10272 = !DILocalVariable(name: "pin", arg: 2, scope: !10267, file: !1306, line: 157, type: !103)
!10273 = !DILocalVariable(name: "conf", arg: 3, scope: !10267, file: !1306, line: 158, type: !103)
!10274 = !DILocalVariable(name: "func", arg: 4, scope: !10267, file: !1306, line: 158, type: !103)
!10275 = !DILocalVariable(name: "cfg", scope: !10267, file: !1306, line: 160, type: !9792)
!10276 = !DILocalVariable(name: "gpio", scope: !10267, file: !1306, line: 161, type: !1237)
!10277 = !DILocalVariable(name: "pin_ll", scope: !10267, file: !1306, line: 163, type: !103)
!10278 = !DILocalVariable(name: "mode", scope: !10267, file: !1306, line: 227, type: !32)
!10279 = !DILocalVariable(name: "otype", scope: !10267, file: !1306, line: 227, type: !32)
!10280 = !DILocalVariable(name: "ospeed", scope: !10267, file: !1306, line: 227, type: !32)
!10281 = !DILocalVariable(name: "pupd", scope: !10267, file: !1306, line: 227, type: !32)
!10282 = !DILocation(line: 0, scope: !10267)
!10283 = !DILocation(line: 160, column: 45, scope: !10267)
!10284 = !DILocation(line: 161, column: 44, scope: !10267)
!10285 = !DILocation(line: 163, column: 15, scope: !10267)
!10286 = !DILocation(line: 229, column: 14, scope: !10267)
!10287 = !DILocation(line: 246, column: 47, scope: !10267)
!10288 = !DILocation(line: 246, column: 2, scope: !10267)
!10289 = !DILocation(line: 248, column: 43, scope: !10267)
!10290 = !DILocation(line: 248, column: 2, scope: !10267)
!10291 = !DILocation(line: 250, column: 40, scope: !10267)
!10292 = !DILocation(line: 250, column: 2, scope: !10267)
!10293 = !DILocation(line: 252, column: 11, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10267, file: !1306, line: 252, column: 6)
!10295 = !DILocation(line: 252, column: 6, scope: !10267)
!10296 = !DILocation(line: 253, column: 11, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10298, file: !1306, line: 253, column: 7)
!10298 = distinct !DILexicalBlock(scope: !10294, file: !1306, line: 252, column: 36)
!10299 = !DILocation(line: 253, column: 7, scope: !10298)
!10300 = !DILocation(line: 254, column: 4, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10297, file: !1306, line: 253, column: 16)
!10302 = !DILocation(line: 255, column: 3, scope: !10301)
!10303 = !DILocation(line: 256, column: 4, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10297, file: !1306, line: 255, column: 10)
!10305 = !DILocation(line: 260, column: 40, scope: !10267)
!10306 = !DILocation(line: 260, column: 2, scope: !10267)
!10307 = !DILocation(line: 265, column: 1, scope: !10267)
!10308 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1306, file: !1306, line: 137, type: !10115, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10309)
!10309 = !{!10310, !10311}
!10310 = !DILocalVariable(name: "pin", arg: 1, scope: !10308, file: !1306, line: 137, type: !103)
!10311 = !DILocalVariable(name: "pinval", scope: !10308, file: !1306, line: 139, type: !132)
!10312 = !DILocation(line: 0, scope: !10308)
!10313 = !DILocation(line: 149, column: 13, scope: !10308)
!10314 = !DILocation(line: 151, column: 2, scope: !10308)
!10315 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10190, file: !10190, line: 342, type: !10316, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10318)
!10316 = !DISubroutineType(types: !10317)
!10317 = !{null, !1237, !132, !132}
!10318 = !{!10319, !10320, !10321}
!10319 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10315, file: !10190, line: 342, type: !1237)
!10320 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10315, file: !10190, line: 342, type: !132)
!10321 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10315, file: !10190, line: 342, type: !132)
!10322 = !DILocation(line: 0, scope: !10315)
!10323 = !DILocation(line: 344, column: 3, scope: !10315)
!10324 = !DILocation(line: 345, column: 1, scope: !10315)
!10325 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10190, file: !10190, line: 413, type: !10316, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10326)
!10326 = !{!10327, !10328, !10329}
!10327 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10325, file: !10190, line: 413, type: !1237)
!10328 = !DILocalVariable(name: "Pin", arg: 2, scope: !10325, file: !10190, line: 413, type: !132)
!10329 = !DILocalVariable(name: "Speed", arg: 3, scope: !10325, file: !10190, line: 413, type: !132)
!10330 = !DILocation(line: 0, scope: !10325)
!10331 = !DILocation(line: 415, column: 3, scope: !10325)
!10332 = !DILocation(line: 0, scope: !10135, inlinedAt: !10333)
!10333 = distinct !DILocation(line: 415, column: 3, scope: !10325)
!10334 = !DILocation(line: 380, column: 4, scope: !10135, inlinedAt: !10333)
!10335 = !DILocation(line: 0, scope: !10143, inlinedAt: !10336)
!10336 = distinct !DILocation(line: 415, column: 3, scope: !10325)
!10337 = !DILocation(line: 414, column: 7, scope: !10143, inlinedAt: !10336)
!10338 = !DILocation(line: 0, scope: !10135, inlinedAt: !10339)
!10339 = distinct !DILocation(line: 415, column: 3, scope: !10325)
!10340 = !DILocation(line: 0, scope: !10143, inlinedAt: !10341)
!10341 = distinct !DILocation(line: 415, column: 3, scope: !10325)
!10342 = !DILocation(line: 417, column: 1, scope: !10325)
!10343 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10190, file: !10190, line: 484, type: !10316, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10344)
!10344 = !{!10345, !10346, !10347}
!10345 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10343, file: !10190, line: 484, type: !1237)
!10346 = !DILocalVariable(name: "Pin", arg: 2, scope: !10343, file: !10190, line: 484, type: !132)
!10347 = !DILocalVariable(name: "Pull", arg: 3, scope: !10343, file: !10190, line: 484, type: !132)
!10348 = !DILocation(line: 0, scope: !10343)
!10349 = !DILocation(line: 486, column: 3, scope: !10343)
!10350 = !DILocation(line: 0, scope: !10135, inlinedAt: !10351)
!10351 = distinct !DILocation(line: 486, column: 3, scope: !10343)
!10352 = !DILocation(line: 380, column: 4, scope: !10135, inlinedAt: !10351)
!10353 = !DILocation(line: 0, scope: !10143, inlinedAt: !10354)
!10354 = distinct !DILocation(line: 486, column: 3, scope: !10343)
!10355 = !DILocation(line: 414, column: 7, scope: !10143, inlinedAt: !10354)
!10356 = !DILocation(line: 0, scope: !10135, inlinedAt: !10357)
!10357 = distinct !DILocation(line: 486, column: 3, scope: !10343)
!10358 = !DILocation(line: 0, scope: !10143, inlinedAt: !10359)
!10359 = distinct !DILocation(line: 486, column: 3, scope: !10343)
!10360 = !DILocation(line: 487, column: 1, scope: !10343)
!10361 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10190, file: !10190, line: 556, type: !10316, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10362)
!10362 = !{!10363, !10364, !10365}
!10363 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10361, file: !10190, line: 556, type: !1237)
!10364 = !DILocalVariable(name: "Pin", arg: 2, scope: !10361, file: !10190, line: 556, type: !132)
!10365 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10361, file: !10190, line: 556, type: !132)
!10366 = !DILocation(line: 0, scope: !10361)
!10367 = !DILocation(line: 558, column: 3, scope: !10361)
!10368 = !DILocation(line: 0, scope: !10135, inlinedAt: !10369)
!10369 = distinct !DILocation(line: 558, column: 3, scope: !10361)
!10370 = !DILocation(line: 380, column: 4, scope: !10135, inlinedAt: !10369)
!10371 = !DILocation(line: 0, scope: !10143, inlinedAt: !10372)
!10372 = distinct !DILocation(line: 558, column: 3, scope: !10361)
!10373 = !DILocation(line: 414, column: 7, scope: !10143, inlinedAt: !10372)
!10374 = !DILocation(line: 0, scope: !10135, inlinedAt: !10375)
!10375 = distinct !DILocation(line: 558, column: 3, scope: !10361)
!10376 = !DILocation(line: 0, scope: !10143, inlinedAt: !10377)
!10377 = distinct !DILocation(line: 558, column: 3, scope: !10361)
!10378 = !DILocation(line: 560, column: 1, scope: !10361)
!10379 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10190, file: !10190, line: 633, type: !10316, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10380)
!10380 = !{!10381, !10382, !10383}
!10381 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10379, file: !10190, line: 633, type: !1237)
!10382 = !DILocalVariable(name: "Pin", arg: 2, scope: !10379, file: !10190, line: 633, type: !132)
!10383 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10379, file: !10190, line: 633, type: !132)
!10384 = !DILocation(line: 0, scope: !10379)
!10385 = !DILocation(line: 635, column: 3, scope: !10379)
!10386 = !DILocation(line: 0, scope: !10135, inlinedAt: !10387)
!10387 = distinct !DILocation(line: 635, column: 3, scope: !10379)
!10388 = !DILocation(line: 380, column: 4, scope: !10135, inlinedAt: !10387)
!10389 = !DILocation(line: 0, scope: !10143, inlinedAt: !10390)
!10390 = distinct !DILocation(line: 635, column: 3, scope: !10379)
!10391 = !DILocation(line: 414, column: 7, scope: !10143, inlinedAt: !10390)
!10392 = !DILocation(line: 0, scope: !10135, inlinedAt: !10393)
!10393 = distinct !DILocation(line: 635, column: 3, scope: !10379)
!10394 = !DILocation(line: 0, scope: !10143, inlinedAt: !10395)
!10395 = distinct !DILocation(line: 635, column: 3, scope: !10379)
!10396 = !DILocation(line: 637, column: 1, scope: !10379)
!10397 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10190, file: !10190, line: 273, type: !10316, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10398)
!10398 = !{!10399, !10400, !10401}
!10399 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10397, file: !10190, line: 273, type: !1237)
!10400 = !DILocalVariable(name: "Pin", arg: 2, scope: !10397, file: !10190, line: 273, type: !132)
!10401 = !DILocalVariable(name: "Mode", arg: 3, scope: !10397, file: !10190, line: 273, type: !132)
!10402 = !DILocation(line: 0, scope: !10397)
!10403 = !DILocation(line: 275, column: 3, scope: !10397)
!10404 = !DILocation(line: 0, scope: !10135, inlinedAt: !10405)
!10405 = distinct !DILocation(line: 275, column: 3, scope: !10397)
!10406 = !DILocation(line: 380, column: 4, scope: !10135, inlinedAt: !10405)
!10407 = !DILocation(line: 0, scope: !10143, inlinedAt: !10408)
!10408 = distinct !DILocation(line: 275, column: 3, scope: !10397)
!10409 = !DILocation(line: 414, column: 7, scope: !10143, inlinedAt: !10408)
!10410 = !DILocation(line: 0, scope: !10135, inlinedAt: !10411)
!10411 = distinct !DILocation(line: 275, column: 3, scope: !10397)
!10412 = !DILocation(line: 0, scope: !10143, inlinedAt: !10413)
!10413 = distinct !DILocation(line: 275, column: 3, scope: !10397)
!10414 = !DILocation(line: 276, column: 1, scope: !10397)
!10415 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1306, file: !1306, line: 698, type: !1319, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10416)
!10416 = !{!10417, !10418, !10419}
!10417 = !DILocalVariable(name: "dev", arg: 1, scope: !10415, file: !1306, line: 698, type: !1164)
!10418 = !DILocalVariable(name: "data", scope: !10415, file: !1306, line: 700, type: !9859)
!10419 = !DILocalVariable(name: "ret", scope: !10415, file: !1306, line: 701, type: !103)
!10420 = !DILocation(line: 0, scope: !10415)
!10421 = !DILocation(line: 700, column: 38, scope: !10415)
!10422 = !DILocation(line: 703, column: 8, scope: !10415)
!10423 = !DILocation(line: 703, column: 12, scope: !10415)
!10424 = !DILocation(line: 705, column: 7, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10415, file: !1306, line: 705, column: 6)
!10426 = !DILocation(line: 705, column: 6, scope: !10415)
!10427 = !DILocation(line: 722, column: 8, scope: !10415)
!10428 = !DILocation(line: 723, column: 10, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10415, file: !1306, line: 723, column: 6)
!10430 = !DILocation(line: 723, column: 6, scope: !10415)
!10431 = !DILocation(line: 731, column: 1, scope: !10415)
!10432 = distinct !DISubprogram(name: "device_is_ready", scope: !6685, file: !6685, line: 47, type: !10433, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10435)
!10433 = !DISubroutineType(types: !10434)
!10434 = !{!166, !1164}
!10435 = !{!10436}
!10436 = !DILocalVariable(name: "dev", arg: 1, scope: !10432, file: !6685, line: 47, type: !1164)
!10437 = !DILocation(line: 0, scope: !10432)
!10438 = !DILocation(line: 55, column: 2, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10432, file: !6685, line: 55, column: 2)
!10440 = !{i64 2154943000}
!10441 = !DILocation(line: 56, column: 9, scope: !10432)
!10442 = !DILocation(line: 56, column: 2, scope: !10432)
!10443 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1306, file: !1306, line: 270, type: !10444, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10446)
!10444 = !DISubroutineType(types: !10445)
!10445 = !{!103, !1164, !166}
!10446 = !{!10447, !10448, !10449, !10450, !10451}
!10447 = !DILocalVariable(name: "dev", arg: 1, scope: !10443, file: !1306, line: 270, type: !1164)
!10448 = !DILocalVariable(name: "on", arg: 2, scope: !10443, file: !1306, line: 270, type: !166)
!10449 = !DILocalVariable(name: "cfg", scope: !10443, file: !1306, line: 272, type: !9792)
!10450 = !DILocalVariable(name: "ret", scope: !10443, file: !1306, line: 273, type: !103)
!10451 = !DILocalVariable(name: "clk", scope: !10443, file: !1306, line: 278, type: !10082)
!10452 = !DILocation(line: 0, scope: !10443)
!10453 = !DILocation(line: 272, column: 45, scope: !10443)
!10454 = !DILocation(line: 282, column: 38, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10456, file: !1306, line: 280, column: 10)
!10456 = distinct !DILexicalBlock(scope: !10443, file: !1306, line: 280, column: 6)
!10457 = !DILocation(line: 282, column: 6, scope: !10455)
!10458 = !DILocation(line: 281, column: 9, scope: !10455)
!10459 = !DILocation(line: 293, column: 1, scope: !10443)
!10460 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !10433, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10461)
!10461 = !{!10462}
!10462 = !DILocalVariable(name: "dev", arg: 1, scope: !10460, file: !152, line: 730, type: !1164)
!10463 = !DILocation(line: 0, scope: !10460)
!10464 = !DILocation(line: 732, column: 9, scope: !10460)
!10465 = !DILocation(line: 732, column: 2, scope: !10460)
!10466 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1306, file: !1306, line: 496, type: !10467, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !10469)
!10467 = !DISubroutineType(types: !10468)
!10468 = !{!103, !1164, !103, !103, !103}
!10469 = !{!10470, !10471, !10472, !10473, !10474, !10475}
!10470 = !DILocalVariable(name: "dev", arg: 1, scope: !10466, file: !1306, line: 496, type: !1164)
!10471 = !DILocalVariable(name: "pin", arg: 2, scope: !10466, file: !1306, line: 496, type: !103)
!10472 = !DILocalVariable(name: "conf", arg: 3, scope: !10466, file: !1306, line: 496, type: !103)
!10473 = !DILocalVariable(name: "func", arg: 4, scope: !10466, file: !1306, line: 496, type: !103)
!10474 = !DILocalVariable(name: "ret", scope: !10466, file: !1306, line: 498, type: !103)
!10475 = !DILocalVariable(name: "gpio_out", scope: !10476, file: !1306, line: 508, type: !132)
!10476 = distinct !DILexicalBlock(scope: !10477, file: !1306, line: 507, column: 27)
!10477 = distinct !DILexicalBlock(scope: !10466, file: !1306, line: 507, column: 6)
!10478 = !DILocation(line: 0, scope: !10466)
!10479 = !DILocation(line: 505, column: 2, scope: !10466)
!10480 = !DILocation(line: 507, column: 11, scope: !10477)
!10481 = !DILocation(line: 507, column: 6, scope: !10466)
!10482 = !DILocation(line: 508, column: 28, scope: !10476)
!10483 = !DILocation(line: 0, scope: !10476)
!10484 = !DILocation(line: 510, column: 16, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10476, file: !1306, line: 510, column: 7)
!10486 = !DILocation(line: 0, scope: !10485)
!10487 = !DILocation(line: 510, column: 7, scope: !10476)
!10488 = !DILocation(line: 511, column: 4, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10485, file: !1306, line: 510, column: 32)
!10490 = !DILocation(line: 512, column: 3, scope: !10489)
!10491 = !DILocation(line: 513, column: 4, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10493, file: !1306, line: 512, column: 39)
!10493 = distinct !DILexicalBlock(scope: !10485, file: !1306, line: 512, column: 14)
!10494 = !DILocation(line: 514, column: 3, scope: !10492)
!10495 = !DILocation(line: 518, column: 1, scope: !10466)
!10496 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1614, file: !1614, line: 526, type: !1485, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10497)
!10497 = !{!10498, !10499, !10500}
!10498 = !DILocalVariable(name: "dev", arg: 1, scope: !10496, file: !1614, line: 526, type: !1487)
!10499 = !DILocalVariable(name: "c", arg: 2, scope: !10496, file: !1614, line: 526, type: !233)
!10500 = !DILocalVariable(name: "config", scope: !10496, file: !1614, line: 528, type: !10501)
!10501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!10502 = !DILocation(line: 0, scope: !10496)
!10503 = !DILocation(line: 528, column: 48, scope: !10496)
!10504 = !DILocation(line: 531, column: 40, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10496, file: !1614, line: 531, column: 6)
!10506 = !DILocation(line: 531, column: 6, scope: !10505)
!10507 = !DILocation(line: 531, column: 6, scope: !10496)
!10508 = !DILocation(line: 532, column: 34, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10505, file: !1614, line: 531, column: 48)
!10510 = !DILocation(line: 532, column: 3, scope: !10509)
!10511 = !DILocation(line: 533, column: 2, scope: !10509)
!10512 = !DILocation(line: 539, column: 42, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10496, file: !1614, line: 539, column: 6)
!10514 = !DILocation(line: 539, column: 7, scope: !10513)
!10515 = !DILocation(line: 539, column: 6, scope: !10496)
!10516 = !DILocation(line: 543, column: 52, scope: !10496)
!10517 = !DILocation(line: 543, column: 22, scope: !10496)
!10518 = !DILocation(line: 543, column: 5, scope: !10496)
!10519 = !DILocation(line: 545, column: 2, scope: !10496)
!10520 = !DILocation(line: 546, column: 1, scope: !10496)
!10521 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1614, file: !1614, line: 548, type: !1504, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10522)
!10522 = !{!10523, !10524, !10525, !10526}
!10523 = !DILocalVariable(name: "dev", arg: 1, scope: !10521, file: !1614, line: 548, type: !1487)
!10524 = !DILocalVariable(name: "c", arg: 2, scope: !10521, file: !1614, line: 549, type: !164)
!10525 = !DILocalVariable(name: "config", scope: !10521, file: !1614, line: 551, type: !10501)
!10526 = !DILocalVariable(name: "key", scope: !10521, file: !1614, line: 555, type: !32)
!10527 = !DILocation(line: 0, scope: !10521)
!10528 = !DILocation(line: 551, column: 48, scope: !10521)
!10529 = !DILocation(line: 562, column: 2, scope: !10521)
!10530 = !DILocation(line: 563, column: 41, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10532, file: !1614, line: 563, column: 7)
!10532 = distinct !DILexicalBlock(scope: !10521, file: !1614, line: 562, column: 12)
!10533 = !DILocation(line: 563, column: 7, scope: !10531)
!10534 = !DILocation(line: 563, column: 7, scope: !10532)
!10535 = !DILocation(line: 55, column: 2, scope: !10536, inlinedAt: !10540)
!10536 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5824, file: !5824, line: 42, type: !5825, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10537)
!10537 = !{!10538, !10539}
!10538 = !DILocalVariable(name: "key", scope: !10536, file: !5824, line: 44, type: !32)
!10539 = !DILocalVariable(name: "tmp", scope: !10536, file: !5824, line: 53, type: !32)
!10540 = distinct !DILocation(line: 564, column: 10, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10531, file: !1614, line: 563, column: 49)
!10542 = !{i64 2288530}
!10543 = !DILocation(line: 0, scope: !10536, inlinedAt: !10540)
!10544 = !DILocation(line: 565, column: 42, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10541, file: !1614, line: 565, column: 8)
!10546 = !DILocation(line: 565, column: 8, scope: !10545)
!10547 = !DILocation(line: 565, column: 8, scope: !10541)
!10548 = !DILocalVariable(name: "key", arg: 1, scope: !10549, file: !5824, line: 84, type: !32)
!10549 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5824, file: !5824, line: 84, type: !5835, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10550)
!10550 = !{!10548}
!10551 = !DILocation(line: 0, scope: !10549, inlinedAt: !10552)
!10552 = distinct !DILocation(line: 568, column: 4, scope: !10541)
!10553 = !DILocation(line: 95, column: 2, scope: !10549, inlinedAt: !10552)
!10554 = !{i64 2289347}
!10555 = !DILocation(line: 569, column: 3, scope: !10541)
!10556 = distinct !{!10556, !10529, !10557}
!10557 = !DILocation(line: 570, column: 2, scope: !10521)
!10558 = !DILocation(line: 592, column: 33, scope: !10521)
!10559 = !DILocation(line: 592, column: 2, scope: !10521)
!10560 = !DILocation(line: 0, scope: !10549, inlinedAt: !10561)
!10561 = distinct !DILocation(line: 593, column: 2, scope: !10521)
!10562 = !DILocation(line: 95, column: 2, scope: !10549, inlinedAt: !10561)
!10563 = !DILocation(line: 594, column: 1, scope: !10521)
!10564 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1614, file: !1614, line: 596, type: !1508, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10565)
!10565 = !{!10566, !10567, !10568}
!10566 = !DILocalVariable(name: "dev", arg: 1, scope: !10564, file: !1614, line: 596, type: !1487)
!10567 = !DILocalVariable(name: "config", scope: !10564, file: !1614, line: 598, type: !10501)
!10568 = !DILocalVariable(name: "err", scope: !10564, file: !1614, line: 599, type: !132)
!10569 = !DILocation(line: 0, scope: !10564)
!10570 = !DILocation(line: 598, column: 48, scope: !10564)
!10571 = !DILocation(line: 606, column: 40, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10564, file: !1614, line: 606, column: 6)
!10573 = !DILocation(line: 606, column: 6, scope: !10572)
!10574 = !DILocation(line: 606, column: 6, scope: !10564)
!10575 = !DILocation(line: 610, column: 39, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10564, file: !1614, line: 610, column: 6)
!10577 = !DILocation(line: 610, column: 6, scope: !10576)
!10578 = !DILocation(line: 610, column: 6, scope: !10564)
!10579 = !DILocation(line: 614, column: 39, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10564, file: !1614, line: 614, column: 6)
!10581 = !DILocation(line: 614, column: 6, scope: !10580)
!10582 = !DILocation(line: 614, column: 6, scope: !10564)
!10583 = !DILocation(line: 619, column: 40, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10564, file: !1614, line: 619, column: 6)
!10585 = !DILocation(line: 619, column: 6, scope: !10584)
!10586 = !DILocation(line: 619, column: 6, scope: !10564)
!10587 = !DILocation(line: 623, column: 10, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10564, file: !1614, line: 623, column: 6)
!10589 = !DILocation(line: 623, column: 6, scope: !10564)
!10590 = !DILocation(line: 624, column: 34, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10588, file: !1614, line: 623, column: 24)
!10592 = !DILocation(line: 624, column: 3, scope: !10591)
!10593 = !DILocation(line: 625, column: 2, scope: !10591)
!10594 = !DILocation(line: 632, column: 10, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10564, file: !1614, line: 632, column: 6)
!10596 = !DILocation(line: 632, column: 6, scope: !10564)
!10597 = !DILocation(line: 633, column: 34, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10595, file: !1614, line: 632, column: 32)
!10599 = !DILocation(line: 633, column: 3, scope: !10598)
!10600 = !DILocation(line: 634, column: 2, scope: !10598)
!10601 = !DILocation(line: 636, column: 10, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10564, file: !1614, line: 636, column: 6)
!10603 = !DILocation(line: 636, column: 6, scope: !10564)
!10604 = !DILocation(line: 637, column: 33, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10602, file: !1614, line: 636, column: 31)
!10606 = !DILocation(line: 637, column: 3, scope: !10605)
!10607 = !DILocation(line: 638, column: 2, scope: !10605)
!10608 = !DILocation(line: 640, column: 10, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10564, file: !1614, line: 640, column: 6)
!10610 = !DILocation(line: 640, column: 6, scope: !10564)
!10611 = !DILocation(line: 641, column: 33, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10609, file: !1614, line: 640, column: 32)
!10613 = !DILocation(line: 641, column: 3, scope: !10612)
!10614 = !DILocation(line: 642, column: 2, scope: !10612)
!10615 = !DILocation(line: 646, column: 32, scope: !10564)
!10616 = !DILocation(line: 646, column: 2, scope: !10564)
!10617 = !DILocation(line: 648, column: 2, scope: !10564)
!10618 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1614, file: !1614, line: 419, type: !1512, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10619)
!10619 = !{!10620, !10621, !10622, !10623, !10625, !10626, !10627, !10628}
!10620 = !DILocalVariable(name: "dev", arg: 1, scope: !10618, file: !1614, line: 419, type: !1487)
!10621 = !DILocalVariable(name: "cfg", arg: 2, scope: !10618, file: !1614, line: 420, type: !1514)
!10622 = !DILocalVariable(name: "config", scope: !10618, file: !1614, line: 422, type: !10501)
!10623 = !DILocalVariable(name: "data", scope: !10618, file: !1614, line: 423, type: !10624)
!10624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 32)
!10625 = !DILocalVariable(name: "parity", scope: !10618, file: !1614, line: 424, type: !7112)
!10626 = !DILocalVariable(name: "stopbits", scope: !10618, file: !1614, line: 425, type: !7112)
!10627 = !DILocalVariable(name: "databits", scope: !10618, file: !1614, line: 426, type: !7112)
!10628 = !DILocalVariable(name: "flowctrl", scope: !10618, file: !1614, line: 428, type: !7112)
!10629 = !DILocation(line: 0, scope: !10618)
!10630 = !DILocation(line: 422, column: 48, scope: !10618)
!10631 = !DILocation(line: 423, column: 38, scope: !10618)
!10632 = !DILocation(line: 424, column: 56, scope: !10618)
!10633 = !DILocation(line: 424, column: 51, scope: !10618)
!10634 = !DILocation(line: 424, column: 26, scope: !10618)
!10635 = !DILocation(line: 425, column: 60, scope: !10618)
!10636 = !DILocation(line: 425, column: 55, scope: !10618)
!10637 = !DILocation(line: 425, column: 28, scope: !10618)
!10638 = !DILocation(line: 426, column: 60, scope: !10618)
!10639 = !DILocation(line: 426, column: 55, scope: !10618)
!10640 = !DILocation(line: 426, column: 28, scope: !10618)
!10641 = !DILocation(line: 428, column: 58, scope: !10618)
!10642 = !DILocation(line: 428, column: 53, scope: !10618)
!10643 = !DILocation(line: 428, column: 28, scope: !10618)
!10644 = !DILocation(line: 431, column: 44, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10618, file: !1614, line: 431, column: 6)
!10646 = !DILocation(line: 438, column: 22, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10618, file: !1614, line: 437, column: 6)
!10648 = !DILocation(line: 437, column: 6, scope: !10618)
!10649 = !DILocation(line: 448, column: 6, scope: !10618)
!10650 = !DILocation(line: 465, column: 47, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10618, file: !1614, line: 465, column: 6)
!10652 = !DILocation(line: 475, column: 21, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10618, file: !1614, line: 475, column: 6)
!10654 = !DILocation(line: 475, column: 6, scope: !10618)
!10655 = !DILocation(line: 476, column: 8, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10657, file: !1614, line: 476, column: 7)
!10657 = distinct !DILexicalBlock(scope: !10653, file: !1614, line: 475, column: 49)
!10658 = !DILocation(line: 477, column: 34, scope: !10656)
!10659 = !DILocation(line: 476, column: 7, scope: !10657)
!10660 = !DILocation(line: 482, column: 27, scope: !10618)
!10661 = !DILocation(line: 482, column: 2, scope: !10618)
!10662 = !DILocation(line: 484, column: 16, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10618, file: !1614, line: 484, column: 6)
!10664 = !DILocation(line: 484, column: 13, scope: !10663)
!10665 = !DILocation(line: 484, column: 6, scope: !10618)
!10666 = !DILocation(line: 485, column: 3, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10663, file: !1614, line: 484, column: 44)
!10668 = !DILocation(line: 486, column: 2, scope: !10667)
!10669 = !DILocation(line: 488, column: 18, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10618, file: !1614, line: 488, column: 6)
!10671 = !DILocation(line: 488, column: 15, scope: !10670)
!10672 = !DILocation(line: 488, column: 6, scope: !10618)
!10673 = !DILocation(line: 489, column: 3, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10670, file: !1614, line: 488, column: 48)
!10675 = !DILocation(line: 490, column: 2, scope: !10674)
!10676 = !DILocation(line: 492, column: 18, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10618, file: !1614, line: 492, column: 6)
!10678 = !DILocation(line: 492, column: 15, scope: !10677)
!10679 = !DILocation(line: 492, column: 6, scope: !10618)
!10680 = !DILocation(line: 493, column: 3, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10677, file: !1614, line: 492, column: 48)
!10682 = !DILocation(line: 494, column: 2, scope: !10681)
!10683 = !DILocation(line: 496, column: 18, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10618, file: !1614, line: 496, column: 6)
!10685 = !DILocation(line: 496, column: 15, scope: !10684)
!10686 = !DILocation(line: 496, column: 6, scope: !10618)
!10687 = !DILocation(line: 497, column: 3, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10684, file: !1614, line: 496, column: 46)
!10689 = !DILocation(line: 498, column: 2, scope: !10688)
!10690 = !DILocation(line: 500, column: 11, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10618, file: !1614, line: 500, column: 6)
!10692 = !DILocation(line: 500, column: 29, scope: !10691)
!10693 = !DILocation(line: 500, column: 20, scope: !10691)
!10694 = !DILocation(line: 500, column: 6, scope: !10618)
!10695 = !DILocation(line: 501, column: 3, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10691, file: !1614, line: 500, column: 40)
!10697 = !DILocation(line: 502, column: 26, scope: !10696)
!10698 = !DILocation(line: 502, column: 19, scope: !10696)
!10699 = !DILocation(line: 503, column: 2, scope: !10696)
!10700 = !DILocation(line: 505, column: 26, scope: !10618)
!10701 = !DILocation(line: 505, column: 2, scope: !10618)
!10702 = !DILocation(line: 506, column: 2, scope: !10618)
!10703 = !DILocation(line: 507, column: 1, scope: !10618)
!10704 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1614, file: !1614, line: 509, type: !1525, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10705)
!10705 = !{!10706, !10707, !10708}
!10706 = !DILocalVariable(name: "dev", arg: 1, scope: !10704, file: !1614, line: 509, type: !1487)
!10707 = !DILocalVariable(name: "cfg", arg: 2, scope: !10704, file: !1614, line: 510, type: !1527)
!10708 = !DILocalVariable(name: "data", scope: !10704, file: !1614, line: 512, type: !10624)
!10709 = !DILocation(line: 0, scope: !10704)
!10710 = !DILocation(line: 512, column: 38, scope: !10704)
!10711 = !DILocation(line: 514, column: 24, scope: !10704)
!10712 = !DILocation(line: 514, column: 7, scope: !10704)
!10713 = !DILocation(line: 514, column: 16, scope: !10704)
!10714 = !DILocation(line: 515, column: 41, scope: !10704)
!10715 = !{i32 0, i32 1537}
!10716 = !DILocation(line: 515, column: 16, scope: !10704)
!10717 = !DILocation(line: 515, column: 7, scope: !10704)
!10718 = !DILocation(line: 515, column: 14, scope: !10704)
!10719 = !DILocation(line: 517, column: 3, scope: !10704)
!10720 = !{i32 0, i32 12289}
!10721 = !DILocation(line: 516, column: 19, scope: !10704)
!10722 = !DILocation(line: 516, column: 7, scope: !10704)
!10723 = !DILocation(line: 516, column: 17, scope: !10704)
!10724 = !DILocation(line: 519, column: 3, scope: !10704)
!10725 = !DILocation(line: 519, column: 33, scope: !10704)
!10726 = !DILocation(line: 518, column: 19, scope: !10704)
!10727 = !DILocation(line: 518, column: 7, scope: !10704)
!10728 = !DILocation(line: 518, column: 17, scope: !10704)
!10729 = !DILocation(line: 521, column: 3, scope: !10704)
!10730 = !{i32 0, i32 769}
!10731 = !DILocation(line: 520, column: 19, scope: !10704)
!10732 = !DILocation(line: 520, column: 7, scope: !10704)
!10733 = !DILocation(line: 520, column: 17, scope: !10704)
!10734 = !DILocation(line: 522, column: 2, scope: !10704)
!10735 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1614, file: !1614, line: 661, type: !1530, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10736)
!10736 = !{!10737, !10738, !10739, !10740, !10741, !10742}
!10737 = !DILocalVariable(name: "dev", arg: 1, scope: !10735, file: !1614, line: 661, type: !1487)
!10738 = !DILocalVariable(name: "tx_data", arg: 2, scope: !10735, file: !1614, line: 662, type: !264)
!10739 = !DILocalVariable(name: "size", arg: 3, scope: !10735, file: !1614, line: 663, type: !103)
!10740 = !DILocalVariable(name: "config", scope: !10735, file: !1614, line: 665, type: !10501)
!10741 = !DILocalVariable(name: "num_tx", scope: !10735, file: !1614, line: 666, type: !163)
!10742 = !DILocalVariable(name: "key", scope: !10735, file: !1614, line: 667, type: !32)
!10743 = !DILocation(line: 0, scope: !10735)
!10744 = !DILocation(line: 665, column: 48, scope: !10735)
!10745 = !DILocation(line: 669, column: 41, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10735, file: !1614, line: 669, column: 6)
!10747 = !DILocation(line: 669, column: 7, scope: !10746)
!10748 = !DILocation(line: 669, column: 6, scope: !10735)
!10749 = !DILocation(line: 55, column: 2, scope: !10536, inlinedAt: !10750)
!10750 = distinct !DILocation(line: 674, column: 8, scope: !10735)
!10751 = !DILocation(line: 0, scope: !10536, inlinedAt: !10750)
!10752 = !DILocation(line: 676, column: 24, scope: !10735)
!10753 = !DILocation(line: 676, column: 29, scope: !10735)
!10754 = !DILocation(line: 677, column: 43, scope: !10735)
!10755 = !DILocation(line: 677, column: 9, scope: !10735)
!10756 = !DILocation(line: 676, column: 2, scope: !10735)
!10757 = !DILocation(line: 681, column: 34, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10735, file: !1614, line: 677, column: 51)
!10759 = !DILocation(line: 681, column: 55, scope: !10758)
!10760 = !DILocation(line: 681, column: 41, scope: !10758)
!10761 = !DILocation(line: 681, column: 3, scope: !10758)
!10762 = !DILocation(line: 676, column: 17, scope: !10735)
!10763 = distinct !{!10763, !10756, !10764}
!10764 = !DILocation(line: 682, column: 2, scope: !10735)
!10765 = !DILocation(line: 0, scope: !10549, inlinedAt: !10766)
!10766 = distinct !DILocation(line: 684, column: 2, scope: !10735)
!10767 = !DILocation(line: 95, column: 2, scope: !10549, inlinedAt: !10766)
!10768 = !DILocation(line: 686, column: 2, scope: !10735)
!10769 = !DILocation(line: 687, column: 1, scope: !10735)
!10770 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1614, file: !1614, line: 689, type: !1534, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10771)
!10771 = !{!10772, !10773, !10774, !10775, !10776}
!10772 = !DILocalVariable(name: "dev", arg: 1, scope: !10770, file: !1614, line: 689, type: !1487)
!10773 = !DILocalVariable(name: "rx_data", arg: 2, scope: !10770, file: !1614, line: 689, type: !270)
!10774 = !DILocalVariable(name: "size", arg: 3, scope: !10770, file: !1614, line: 690, type: !271)
!10775 = !DILocalVariable(name: "config", scope: !10770, file: !1614, line: 692, type: !10501)
!10776 = !DILocalVariable(name: "num_rx", scope: !10770, file: !1614, line: 693, type: !163)
!10777 = !DILocation(line: 0, scope: !10770)
!10778 = !DILocation(line: 692, column: 48, scope: !10770)
!10779 = !DILocation(line: 696, column: 44, scope: !10770)
!10780 = !DILocation(line: 695, column: 24, scope: !10770)
!10781 = !DILocation(line: 695, column: 29, scope: !10770)
!10782 = !DILocation(line: 696, column: 9, scope: !10770)
!10783 = !DILocation(line: 695, column: 2, scope: !10770)
!10784 = !DILocation(line: 700, column: 53, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10770, file: !1614, line: 696, column: 52)
!10786 = !DILocation(line: 700, column: 23, scope: !10785)
!10787 = !DILocation(line: 700, column: 17, scope: !10785)
!10788 = !DILocation(line: 700, column: 3, scope: !10785)
!10789 = !DILocation(line: 700, column: 21, scope: !10785)
!10790 = !DILocation(line: 703, column: 41, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10785, file: !1614, line: 703, column: 7)
!10792 = !DILocation(line: 703, column: 7, scope: !10791)
!10793 = !DILocation(line: 703, column: 7, scope: !10785)
!10794 = !DILocation(line: 704, column: 35, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10791, file: !1614, line: 703, column: 49)
!10796 = !DILocation(line: 704, column: 4, scope: !10795)
!10797 = !DILocation(line: 709, column: 3, scope: !10795)
!10798 = !DILocation(line: 695, column: 17, scope: !10770)
!10799 = distinct !{!10799, !10783, !10800}
!10800 = !DILocation(line: 710, column: 2, scope: !10770)
!10801 = !DILocation(line: 712, column: 2, scope: !10770)
!10802 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1614, file: !1614, line: 715, type: !1538, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10803)
!10803 = !{!10804, !10805}
!10804 = !DILocalVariable(name: "dev", arg: 1, scope: !10802, file: !1614, line: 715, type: !1487)
!10805 = !DILocalVariable(name: "config", scope: !10802, file: !1614, line: 717, type: !10501)
!10806 = !DILocation(line: 0, scope: !10802)
!10807 = !DILocation(line: 717, column: 48, scope: !10802)
!10808 = !DILocation(line: 729, column: 31, scope: !10802)
!10809 = !DILocation(line: 729, column: 2, scope: !10802)
!10810 = !DILocation(line: 734, column: 1, scope: !10802)
!10811 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1614, file: !1614, line: 736, type: !1538, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10812)
!10812 = !{!10813, !10814}
!10813 = !DILocalVariable(name: "dev", arg: 1, scope: !10811, file: !1614, line: 736, type: !1487)
!10814 = !DILocalVariable(name: "config", scope: !10811, file: !1614, line: 738, type: !10501)
!10815 = !DILocation(line: 0, scope: !10811)
!10816 = !DILocation(line: 738, column: 48, scope: !10811)
!10817 = !DILocation(line: 746, column: 32, scope: !10811)
!10818 = !DILocation(line: 746, column: 2, scope: !10811)
!10819 = !DILocation(line: 756, column: 1, scope: !10811)
!10820 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1614, file: !1614, line: 758, type: !1508, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10821)
!10821 = !{!10822, !10823}
!10822 = !DILocalVariable(name: "dev", arg: 1, scope: !10820, file: !1614, line: 758, type: !1487)
!10823 = !DILocalVariable(name: "config", scope: !10820, file: !1614, line: 760, type: !10501)
!10824 = !DILocation(line: 0, scope: !10820)
!10825 = !DILocation(line: 760, column: 48, scope: !10820)
!10826 = !DILocation(line: 762, column: 43, scope: !10820)
!10827 = !DILocation(line: 762, column: 9, scope: !10820)
!10828 = !DILocation(line: 762, column: 50, scope: !10820)
!10829 = !DILocation(line: 763, column: 35, scope: !10820)
!10830 = !DILocation(line: 763, column: 3, scope: !10820)
!10831 = !DILocation(line: 762, column: 2, scope: !10820)
!10832 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1614, file: !1614, line: 773, type: !1538, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10833)
!10833 = !{!10834, !10835}
!10834 = !DILocalVariable(name: "dev", arg: 1, scope: !10832, file: !1614, line: 773, type: !1487)
!10835 = !DILocalVariable(name: "config", scope: !10832, file: !1614, line: 775, type: !10501)
!10836 = !DILocation(line: 0, scope: !10832)
!10837 = !DILocation(line: 775, column: 48, scope: !10832)
!10838 = !DILocation(line: 777, column: 33, scope: !10832)
!10839 = !DILocation(line: 777, column: 2, scope: !10832)
!10840 = !DILocation(line: 778, column: 1, scope: !10832)
!10841 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1614, file: !1614, line: 780, type: !1538, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10842)
!10842 = !{!10843, !10844}
!10843 = !DILocalVariable(name: "dev", arg: 1, scope: !10841, file: !1614, line: 780, type: !1487)
!10844 = !DILocalVariable(name: "config", scope: !10841, file: !1614, line: 782, type: !10501)
!10845 = !DILocation(line: 0, scope: !10841)
!10846 = !DILocation(line: 782, column: 48, scope: !10841)
!10847 = !DILocation(line: 784, column: 34, scope: !10841)
!10848 = !DILocation(line: 784, column: 2, scope: !10841)
!10849 = !DILocation(line: 785, column: 1, scope: !10841)
!10850 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1614, file: !1614, line: 766, type: !1508, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10851)
!10851 = !{!10852, !10853}
!10852 = !DILocalVariable(name: "dev", arg: 1, scope: !10850, file: !1614, line: 766, type: !1487)
!10853 = !DILocalVariable(name: "config", scope: !10850, file: !1614, line: 768, type: !10501)
!10854 = !DILocation(line: 0, scope: !10850)
!10855 = !DILocation(line: 768, column: 48, scope: !10850)
!10856 = !DILocation(line: 770, column: 42, scope: !10850)
!10857 = !DILocation(line: 770, column: 9, scope: !10850)
!10858 = !DILocation(line: 770, column: 2, scope: !10850)
!10859 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1614, file: !1614, line: 787, type: !1508, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10860)
!10860 = !{!10861, !10862}
!10861 = !DILocalVariable(name: "dev", arg: 1, scope: !10859, file: !1614, line: 787, type: !1487)
!10862 = !DILocalVariable(name: "config", scope: !10859, file: !1614, line: 789, type: !10501)
!10863 = !DILocation(line: 0, scope: !10859)
!10864 = !DILocation(line: 789, column: 48, scope: !10859)
!10865 = !DILocation(line: 794, column: 44, scope: !10859)
!10866 = !DILocation(line: 794, column: 9, scope: !10859)
!10867 = !DILocation(line: 794, column: 2, scope: !10859)
!10868 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1614, file: !1614, line: 797, type: !1538, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10869)
!10869 = !{!10870, !10871}
!10870 = !DILocalVariable(name: "dev", arg: 1, scope: !10868, file: !1614, line: 797, type: !1487)
!10871 = !DILocalVariable(name: "config", scope: !10868, file: !1614, line: 799, type: !10501)
!10872 = !DILocation(line: 0, scope: !10868)
!10873 = !DILocation(line: 799, column: 48, scope: !10868)
!10874 = !DILocation(line: 802, column: 34, scope: !10868)
!10875 = !DILocation(line: 802, column: 2, scope: !10868)
!10876 = !DILocation(line: 805, column: 6, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10868, file: !1614, line: 805, column: 6)
!10878 = !DILocation(line: 806, column: 3, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10877, file: !1614, line: 805, column: 43)
!10880 = !DILocation(line: 810, column: 31, scope: !10868)
!10881 = !DILocation(line: 807, column: 2, scope: !10879)
!10882 = !DILocation(line: 810, column: 2, scope: !10868)
!10883 = !DILocation(line: 811, column: 1, scope: !10868)
!10884 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1614, file: !1614, line: 813, type: !1538, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10885)
!10885 = !{!10886, !10887}
!10886 = !DILocalVariable(name: "dev", arg: 1, scope: !10884, file: !1614, line: 813, type: !1487)
!10887 = !DILocalVariable(name: "config", scope: !10884, file: !1614, line: 815, type: !10501)
!10888 = !DILocation(line: 0, scope: !10884)
!10889 = !DILocation(line: 815, column: 48, scope: !10884)
!10890 = !DILocation(line: 818, column: 35, scope: !10884)
!10891 = !DILocation(line: 818, column: 2, scope: !10884)
!10892 = !DILocation(line: 821, column: 6, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10884, file: !1614, line: 821, column: 6)
!10894 = !DILocation(line: 822, column: 3, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10893, file: !1614, line: 821, column: 43)
!10896 = !DILocation(line: 826, column: 32, scope: !10884)
!10897 = !DILocation(line: 823, column: 2, scope: !10895)
!10898 = !DILocation(line: 826, column: 2, scope: !10884)
!10899 = !DILocation(line: 827, column: 1, scope: !10884)
!10900 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1614, file: !1614, line: 829, type: !1508, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10901)
!10901 = !{!10902, !10903}
!10902 = !DILocalVariable(name: "dev", arg: 1, scope: !10900, file: !1614, line: 829, type: !1487)
!10903 = !DILocalVariable(name: "config", scope: !10900, file: !1614, line: 831, type: !10501)
!10904 = !DILocation(line: 0, scope: !10900)
!10905 = !DILocation(line: 831, column: 48, scope: !10900)
!10906 = !DILocation(line: 833, column: 46, scope: !10900)
!10907 = !DILocation(line: 833, column: 11, scope: !10900)
!10908 = !DILocation(line: 833, column: 53, scope: !10900)
!10909 = !DILocation(line: 834, column: 38, scope: !10900)
!10910 = !DILocation(line: 834, column: 4, scope: !10900)
!10911 = !DILocation(line: 834, column: 46, scope: !10900)
!10912 = !DILocation(line: 835, column: 37, scope: !10900)
!10913 = !DILocation(line: 835, column: 4, scope: !10900)
!10914 = !DILocation(line: 835, column: 44, scope: !10900)
!10915 = !DILocation(line: 836, column: 36, scope: !10900)
!10916 = !DILocation(line: 836, column: 4, scope: !10900)
!10917 = !DILocation(line: 833, column: 2, scope: !10900)
!10918 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1614, file: !1614, line: 839, type: !1508, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10919)
!10919 = !{!10920}
!10920 = !DILocalVariable(name: "dev", arg: 1, scope: !10918, file: !1614, line: 839, type: !1487)
!10921 = !DILocation(line: 0, scope: !10918)
!10922 = !DILocation(line: 841, column: 2, scope: !10918)
!10923 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1614, file: !1614, line: 844, type: !1552, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10924)
!10924 = !{!10925, !10926, !10927, !10928}
!10925 = !DILocalVariable(name: "dev", arg: 1, scope: !10923, file: !1614, line: 844, type: !1487)
!10926 = !DILocalVariable(name: "cb", arg: 2, scope: !10923, file: !1614, line: 845, type: !1554)
!10927 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10923, file: !1614, line: 846, type: !102)
!10928 = !DILocalVariable(name: "data", scope: !10923, file: !1614, line: 848, type: !10624)
!10929 = !DILocation(line: 0, scope: !10923)
!10930 = !DILocation(line: 848, column: 38, scope: !10923)
!10931 = !DILocation(line: 850, column: 8, scope: !10923)
!10932 = !DILocation(line: 850, column: 16, scope: !10923)
!10933 = !DILocation(line: 851, column: 8, scope: !10923)
!10934 = !DILocation(line: 851, column: 18, scope: !10923)
!10935 = !DILocation(line: 852, column: 1, scope: !10923)
!10936 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10937, file: !10937, line: 1792, type: !10938, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10940)
!10937 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10938 = !DISubroutineType(types: !10939)
!10939 = !{!132, !1558}
!10940 = !{!10941}
!10941 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10936, file: !10937, line: 1792, type: !1558)
!10942 = !DILocation(line: 0, scope: !10936)
!10943 = !DILocation(line: 1794, column: 11, scope: !10936)
!10944 = !DILocation(line: 1794, column: 47, scope: !10936)
!10945 = !DILocation(line: 1794, column: 3, scope: !10936)
!10946 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !10937, file: !10937, line: 2227, type: !10938, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10947)
!10947 = !{!10948}
!10948 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10946, file: !10937, line: 2227, type: !1558)
!10949 = !DILocation(line: 0, scope: !10946)
!10950 = !DILocation(line: 2229, column: 11, scope: !10946)
!10951 = !DILocation(line: 2229, column: 51, scope: !10946)
!10952 = !DILocation(line: 2229, column: 3, scope: !10946)
!10953 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !10937, file: !10937, line: 1803, type: !10938, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10954)
!10954 = !{!10955}
!10955 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10953, file: !10937, line: 1803, type: !1558)
!10956 = !DILocation(line: 0, scope: !10953)
!10957 = !DILocation(line: 1805, column: 11, scope: !10953)
!10958 = !DILocation(line: 1805, column: 45, scope: !10953)
!10959 = !DILocation(line: 1805, column: 3, scope: !10953)
!10960 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !10937, file: !10937, line: 2238, type: !10938, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10961)
!10961 = !{!10962}
!10962 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10960, file: !10937, line: 2238, type: !1558)
!10963 = !DILocation(line: 0, scope: !10960)
!10964 = !DILocation(line: 2240, column: 11, scope: !10960)
!10965 = !DILocation(line: 2240, column: 49, scope: !10960)
!10966 = !DILocation(line: 2240, column: 3, scope: !10960)
!10967 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !10937, file: !10937, line: 2192, type: !10968, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10970)
!10968 = !DISubroutineType(types: !10969)
!10969 = !{null, !1558}
!10970 = !{!10971, !10972}
!10971 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10967, file: !10937, line: 2192, type: !1558)
!10972 = !DILocalVariable(name: "val", scope: !10973, file: !10937, line: 2194, type: !132)
!10973 = distinct !DILexicalBlock(scope: !10967, file: !10937, line: 2194, column: 3)
!10974 = !DILocation(line: 0, scope: !10967)
!10975 = !DILocation(line: 2194, column: 3, scope: !10973)
!10976 = !DILocalVariable(name: "addr", arg: 1, scope: !10977, file: !6844, line: 476, type: !1610)
!10977 = distinct !DISubprogram(name: "__LDREXW", scope: !6844, file: !6844, line: 476, type: !10978, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10980)
!10978 = !DISubroutineType(types: !10979)
!10979 = !{!132, !1610}
!10980 = !{!10976, !10981}
!10981 = !DILocalVariable(name: "result", scope: !10977, file: !6844, line: 478, type: !132)
!10982 = !DILocation(line: 0, scope: !10977, inlinedAt: !10983)
!10983 = distinct !DILocation(line: 2194, column: 3, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10973, file: !10937, line: 2194, column: 3)
!10985 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !10983)
!10986 = !{i64 3527724}
!10987 = !DILocation(line: 2194, column: 3, scope: !10984)
!10988 = !DILocation(line: 0, scope: !10973)
!10989 = !DILocalVariable(name: "value", arg: 1, scope: !10990, file: !6844, line: 527, type: !132)
!10990 = distinct !DISubprogram(name: "__STREXW", scope: !6844, file: !6844, line: 527, type: !10991, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10993)
!10991 = !DISubroutineType(types: !10992)
!10992 = !{!132, !132, !1610}
!10993 = !{!10989, !10994, !10995}
!10994 = !DILocalVariable(name: "addr", arg: 2, scope: !10990, file: !6844, line: 527, type: !1610)
!10995 = !DILocalVariable(name: "result", scope: !10990, file: !6844, line: 529, type: !132)
!10996 = !DILocation(line: 0, scope: !10990, inlinedAt: !10997)
!10997 = distinct !DILocation(line: 2194, column: 3, scope: !10973)
!10998 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !10997)
!10999 = !{i64 3529160}
!11000 = distinct !{!11000, !10975, !10975}
!11001 = !DILocation(line: 2195, column: 1, scope: !10967)
!11002 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !10937, file: !10937, line: 2177, type: !10968, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11003)
!11003 = !{!11004}
!11004 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11002, file: !10937, line: 2177, type: !1558)
!11005 = !DILocation(line: 0, scope: !11002)
!11006 = !DILocation(line: 2179, column: 3, scope: !11002)
!11007 = !DILocation(line: 2180, column: 1, scope: !11002)
!11008 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !10937, file: !10937, line: 2164, type: !10968, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11009)
!11009 = !{!11010, !11011}
!11010 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11008, file: !10937, line: 2164, type: !1558)
!11011 = !DILocalVariable(name: "val", scope: !11012, file: !10937, line: 2166, type: !132)
!11012 = distinct !DILexicalBlock(scope: !11008, file: !10937, line: 2166, column: 3)
!11013 = !DILocation(line: 0, scope: !11008)
!11014 = !DILocation(line: 2166, column: 3, scope: !11012)
!11015 = !DILocation(line: 0, scope: !10977, inlinedAt: !11016)
!11016 = distinct !DILocation(line: 2166, column: 3, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11012, file: !10937, line: 2166, column: 3)
!11018 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !11016)
!11019 = !DILocation(line: 2166, column: 3, scope: !11017)
!11020 = !DILocation(line: 0, scope: !11012)
!11021 = !DILocation(line: 0, scope: !10990, inlinedAt: !11022)
!11022 = distinct !DILocation(line: 2166, column: 3, scope: !11012)
!11023 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !11022)
!11024 = distinct !{!11024, !11014, !11014}
!11025 = !DILocation(line: 2167, column: 1, scope: !11008)
!11026 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !10937, file: !10937, line: 2096, type: !10968, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11027)
!11027 = !{!11028, !11029}
!11028 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11026, file: !10937, line: 2096, type: !1558)
!11029 = !DILocalVariable(name: "val", scope: !11030, file: !10937, line: 2098, type: !132)
!11030 = distinct !DILexicalBlock(scope: !11026, file: !10937, line: 2098, column: 3)
!11031 = !DILocation(line: 0, scope: !11026)
!11032 = !DILocation(line: 2098, column: 3, scope: !11030)
!11033 = !DILocation(line: 0, scope: !10977, inlinedAt: !11034)
!11034 = distinct !DILocation(line: 2098, column: 3, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11030, file: !10937, line: 2098, column: 3)
!11036 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !11034)
!11037 = !DILocation(line: 2098, column: 3, scope: !11035)
!11038 = !DILocation(line: 0, scope: !11030)
!11039 = !DILocation(line: 0, scope: !10990, inlinedAt: !11040)
!11040 = distinct !DILocation(line: 2098, column: 3, scope: !11030)
!11041 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !11040)
!11042 = distinct !{!11042, !11032, !11032}
!11043 = !DILocation(line: 2099, column: 1, scope: !11026)
!11044 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !10937, file: !10937, line: 2081, type: !10968, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11045)
!11045 = !{!11046}
!11046 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11044, file: !10937, line: 2081, type: !1558)
!11047 = !DILocation(line: 0, scope: !11044)
!11048 = !DILocation(line: 2083, column: 3, scope: !11044)
!11049 = !DILocation(line: 2084, column: 1, scope: !11044)
!11050 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !10937, file: !10937, line: 2068, type: !10968, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11051)
!11051 = !{!11052, !11053}
!11052 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11050, file: !10937, line: 2068, type: !1558)
!11053 = !DILocalVariable(name: "val", scope: !11054, file: !10937, line: 2070, type: !132)
!11054 = distinct !DILexicalBlock(scope: !11050, file: !10937, line: 2070, column: 3)
!11055 = !DILocation(line: 0, scope: !11050)
!11056 = !DILocation(line: 2070, column: 3, scope: !11054)
!11057 = !DILocation(line: 0, scope: !10977, inlinedAt: !11058)
!11058 = distinct !DILocation(line: 2070, column: 3, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11054, file: !10937, line: 2070, column: 3)
!11060 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !11058)
!11061 = !DILocation(line: 2070, column: 3, scope: !11059)
!11062 = !DILocation(line: 0, scope: !11054)
!11063 = !DILocation(line: 0, scope: !10990, inlinedAt: !11064)
!11064 = distinct !DILocation(line: 2070, column: 3, scope: !11054)
!11065 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !11064)
!11066 = distinct !{!11066, !11056, !11056}
!11067 = !DILocation(line: 2071, column: 1, scope: !11050)
!11068 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !10937, file: !10937, line: 2131, type: !10968, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11069)
!11069 = !{!11070, !11071}
!11070 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11068, file: !10937, line: 2131, type: !1558)
!11071 = !DILocalVariable(name: "val", scope: !11072, file: !10937, line: 2133, type: !132)
!11072 = distinct !DILexicalBlock(scope: !11068, file: !10937, line: 2133, column: 3)
!11073 = !DILocation(line: 0, scope: !11068)
!11074 = !DILocation(line: 2133, column: 3, scope: !11072)
!11075 = !DILocation(line: 0, scope: !10977, inlinedAt: !11076)
!11076 = distinct !DILocation(line: 2133, column: 3, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11072, file: !10937, line: 2133, column: 3)
!11078 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !11076)
!11079 = !DILocation(line: 2133, column: 3, scope: !11077)
!11080 = !DILocation(line: 0, scope: !11072)
!11081 = !DILocation(line: 0, scope: !10990, inlinedAt: !11082)
!11082 = distinct !DILocation(line: 2133, column: 3, scope: !11072)
!11083 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !11082)
!11084 = distinct !{!11084, !11074, !11074}
!11085 = !DILocation(line: 2134, column: 1, scope: !11068)
!11086 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !10937, file: !10937, line: 2035, type: !10968, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11087)
!11087 = !{!11088, !11089}
!11088 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11086, file: !10937, line: 2035, type: !1558)
!11089 = !DILocalVariable(name: "val", scope: !11090, file: !10937, line: 2037, type: !132)
!11090 = distinct !DILexicalBlock(scope: !11086, file: !10937, line: 2037, column: 3)
!11091 = !DILocation(line: 0, scope: !11086)
!11092 = !DILocation(line: 2037, column: 3, scope: !11090)
!11093 = !DILocation(line: 0, scope: !10977, inlinedAt: !11094)
!11094 = distinct !DILocation(line: 2037, column: 3, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11090, file: !10937, line: 2037, column: 3)
!11096 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !11094)
!11097 = !DILocation(line: 2037, column: 3, scope: !11095)
!11098 = !DILocation(line: 0, scope: !11090)
!11099 = !DILocation(line: 0, scope: !10990, inlinedAt: !11100)
!11100 = distinct !DILocation(line: 2037, column: 3, scope: !11090)
!11101 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !11100)
!11102 = distinct !{!11102, !11092, !11092}
!11103 = !DILocation(line: 2038, column: 1, scope: !11086)
!11104 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10937, file: !10937, line: 1814, type: !10938, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11105)
!11105 = !{!11106}
!11106 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11104, file: !10937, line: 1814, type: !1558)
!11107 = !DILocation(line: 0, scope: !11104)
!11108 = !DILocation(line: 1816, column: 11, scope: !11104)
!11109 = !DILocation(line: 1816, column: 46, scope: !11104)
!11110 = !DILocation(line: 1816, column: 3, scope: !11104)
!11111 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !10937, file: !10937, line: 2142, type: !10968, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11112)
!11112 = !{!11113, !11114}
!11113 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11111, file: !10937, line: 2142, type: !1558)
!11114 = !DILocalVariable(name: "val", scope: !11115, file: !10937, line: 2144, type: !132)
!11115 = distinct !DILexicalBlock(scope: !11111, file: !10937, line: 2144, column: 3)
!11116 = !DILocation(line: 0, scope: !11111)
!11117 = !DILocation(line: 2144, column: 3, scope: !11115)
!11118 = !DILocation(line: 0, scope: !10977, inlinedAt: !11119)
!11119 = distinct !DILocation(line: 2144, column: 3, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11115, file: !10937, line: 2144, column: 3)
!11121 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !11119)
!11122 = !DILocation(line: 2144, column: 3, scope: !11120)
!11123 = !DILocation(line: 0, scope: !11115)
!11124 = !DILocation(line: 0, scope: !10990, inlinedAt: !11125)
!11125 = distinct !DILocation(line: 2144, column: 3, scope: !11115)
!11126 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !11125)
!11127 = distinct !{!11127, !11117, !11117}
!11128 = !DILocation(line: 2145, column: 1, scope: !11111)
!11129 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !10937, file: !10937, line: 2046, type: !10968, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11130)
!11130 = !{!11131, !11132}
!11131 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11129, file: !10937, line: 2046, type: !1558)
!11132 = !DILocalVariable(name: "val", scope: !11133, file: !10937, line: 2048, type: !132)
!11133 = distinct !DILexicalBlock(scope: !11129, file: !10937, line: 2048, column: 3)
!11134 = !DILocation(line: 0, scope: !11129)
!11135 = !DILocation(line: 2048, column: 3, scope: !11133)
!11136 = !DILocation(line: 0, scope: !10977, inlinedAt: !11137)
!11137 = distinct !DILocation(line: 2048, column: 3, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11133, file: !10937, line: 2048, column: 3)
!11139 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !11137)
!11140 = !DILocation(line: 2048, column: 3, scope: !11138)
!11141 = !DILocation(line: 0, scope: !11133)
!11142 = !DILocation(line: 0, scope: !10990, inlinedAt: !11143)
!11143 = distinct !DILocation(line: 2048, column: 3, scope: !11133)
!11144 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !11143)
!11145 = distinct !{!11145, !11135, !11135}
!11146 = !DILocation(line: 2049, column: 1, scope: !11129)
!11147 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10937, file: !10937, line: 2403, type: !11148, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11150)
!11148 = !DISubroutineType(types: !11149)
!11149 = !{!163, !1558}
!11150 = !{!11151}
!11151 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11147, file: !10937, line: 2403, type: !1558)
!11152 = !DILocation(line: 0, scope: !11147)
!11153 = !DILocation(line: 2405, column: 20, scope: !11147)
!11154 = !DILocation(line: 2405, column: 10, scope: !11147)
!11155 = !DILocation(line: 2405, column: 3, scope: !11147)
!11156 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10937, file: !10937, line: 1770, type: !10938, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11157)
!11157 = !{!11158}
!11158 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11156, file: !10937, line: 1770, type: !1558)
!11159 = !DILocation(line: 0, scope: !11156)
!11160 = !DILocation(line: 1772, column: 11, scope: !11156)
!11161 = !DILocation(line: 1772, column: 46, scope: !11156)
!11162 = !DILocation(line: 1772, column: 3, scope: !11156)
!11163 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10937, file: !10937, line: 1934, type: !10968, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11164)
!11164 = !{!11165, !11166}
!11165 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11163, file: !10937, line: 1934, type: !1558)
!11166 = !DILocalVariable(name: "tmpreg", scope: !11163, file: !10937, line: 1936, type: !131)
!11167 = !DILocation(line: 0, scope: !11163)
!11168 = !DILocation(line: 1936, column: 3, scope: !11163)
!11169 = !DILocation(line: 1936, column: 17, scope: !11163)
!11170 = !DILocation(line: 1937, column: 20, scope: !11163)
!11171 = !DILocation(line: 1937, column: 10, scope: !11163)
!11172 = !DILocation(line: 1938, column: 10, scope: !11163)
!11173 = !DILocation(line: 1939, column: 20, scope: !11163)
!11174 = !DILocation(line: 1939, column: 10, scope: !11163)
!11175 = !DILocation(line: 1940, column: 10, scope: !11163)
!11176 = !DILocation(line: 1941, column: 1, scope: !11163)
!11177 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10937, file: !10937, line: 2426, type: !11178, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11180)
!11178 = !DISubroutineType(types: !11179)
!11179 = !{null, !1558, !163}
!11180 = !{!11181, !11182}
!11181 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11177, file: !10937, line: 2426, type: !1558)
!11182 = !DILocalVariable(name: "Value", arg: 2, scope: !11177, file: !10937, line: 2426, type: !163)
!11183 = !DILocation(line: 0, scope: !11177)
!11184 = !DILocation(line: 2428, column: 16, scope: !11177)
!11185 = !DILocation(line: 2428, column: 11, scope: !11177)
!11186 = !DILocation(line: 2428, column: 14, scope: !11177)
!11187 = !DILocation(line: 2429, column: 1, scope: !11177)
!11188 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1614, file: !1614, line: 205, type: !11189, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11191)
!11189 = !DISubroutineType(types: !11190)
!11190 = !{!132, !1487}
!11191 = !{!11192, !11193}
!11192 = !DILocalVariable(name: "dev", arg: 1, scope: !11188, file: !1614, line: 205, type: !1487)
!11193 = !DILocalVariable(name: "config", scope: !11188, file: !1614, line: 207, type: !10501)
!11194 = !DILocation(line: 0, scope: !11188)
!11195 = !DILocation(line: 207, column: 48, scope: !11188)
!11196 = !DILocation(line: 209, column: 36, scope: !11188)
!11197 = !DILocation(line: 209, column: 9, scope: !11188)
!11198 = !DILocation(line: 209, column: 2, scope: !11188)
!11199 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1614, file: !1614, line: 270, type: !11200, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11202)
!11200 = !DISubroutineType(types: !11201)
!11201 = !{!1453, !132}
!11202 = !{!11203}
!11203 = !DILocalVariable(name: "parity", arg: 1, scope: !11199, file: !1614, line: 270, type: !132)
!11204 = !DILocation(line: 0, scope: !11199)
!11205 = !DILocation(line: 272, column: 2, scope: !11199)
!11206 = !DILocation(line: 281, column: 1, scope: !11199)
!11207 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1614, file: !1614, line: 220, type: !11189, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11208)
!11208 = !{!11209, !11210}
!11209 = !DILocalVariable(name: "dev", arg: 1, scope: !11207, file: !1614, line: 220, type: !1487)
!11210 = !DILocalVariable(name: "config", scope: !11207, file: !1614, line: 222, type: !10501)
!11211 = !DILocation(line: 0, scope: !11207)
!11212 = !DILocation(line: 222, column: 48, scope: !11207)
!11213 = !DILocation(line: 224, column: 44, scope: !11207)
!11214 = !DILocation(line: 224, column: 9, scope: !11207)
!11215 = !DILocation(line: 224, column: 2, scope: !11207)
!11216 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1614, file: !1614, line: 304, type: !11217, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11219)
!11217 = !DISubroutineType(types: !11218)
!11218 = !{!1467, !132}
!11219 = !{!11220}
!11220 = !DILocalVariable(name: "sb", arg: 1, scope: !11216, file: !1614, line: 304, type: !132)
!11221 = !DILocation(line: 0, scope: !11216)
!11222 = !DILocation(line: 306, column: 2, scope: !11216)
!11223 = !DILocation(line: 0, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11216, file: !1614, line: 306, column: 14)
!11225 = !DILocation(line: 323, column: 1, scope: !11216)
!11226 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1614, file: !1614, line: 235, type: !11189, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11227)
!11227 = !{!11228, !11229}
!11228 = !DILocalVariable(name: "dev", arg: 1, scope: !11226, file: !1614, line: 235, type: !1487)
!11229 = !DILocalVariable(name: "config", scope: !11226, file: !1614, line: 237, type: !10501)
!11230 = !DILocation(line: 0, scope: !11226)
!11231 = !DILocation(line: 237, column: 48, scope: !11226)
!11232 = !DILocation(line: 239, column: 39, scope: !11226)
!11233 = !DILocation(line: 239, column: 9, scope: !11226)
!11234 = !DILocation(line: 239, column: 2, scope: !11226)
!11235 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1614, file: !1614, line: 355, type: !11236, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11238)
!11236 = !DISubroutineType(types: !11237)
!11237 = !{!1460, !132, !132}
!11238 = !{!11239, !11240}
!11239 = !DILocalVariable(name: "db", arg: 1, scope: !11235, file: !1614, line: 355, type: !132)
!11240 = !DILocalVariable(name: "p", arg: 2, scope: !11235, file: !1614, line: 356, type: !132)
!11241 = !DILocation(line: 0, scope: !11235)
!11242 = !DILocation(line: 358, column: 2, scope: !11235)
!11243 = !DILocation(line: 384, column: 1, scope: !11235)
!11244 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1614, file: !1614, line: 250, type: !11189, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11245)
!11245 = !{!11246, !11247}
!11246 = !DILocalVariable(name: "dev", arg: 1, scope: !11244, file: !1614, line: 250, type: !1487)
!11247 = !DILocalVariable(name: "config", scope: !11244, file: !1614, line: 252, type: !10501)
!11248 = !DILocation(line: 0, scope: !11244)
!11249 = !DILocation(line: 252, column: 48, scope: !11244)
!11250 = !DILocation(line: 254, column: 40, scope: !11244)
!11251 = !DILocation(line: 254, column: 9, scope: !11244)
!11252 = !DILocation(line: 254, column: 2, scope: !11244)
!11253 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1614, file: !1614, line: 409, type: !11254, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11256)
!11254 = !DISubroutineType(types: !11255)
!11255 = !{!1473, !132}
!11256 = !{!11257}
!11257 = !DILocalVariable(name: "fc", arg: 1, scope: !11253, file: !1614, line: 409, type: !132)
!11258 = !DILocation(line: 0, scope: !11253)
!11259 = !DILocation(line: 411, column: 9, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11253, file: !1614, line: 411, column: 6)
!11261 = !DILocation(line: 416, column: 1, scope: !11253)
!11262 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10937, file: !10937, line: 967, type: !10938, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11263)
!11263 = !{!11264}
!11264 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11262, file: !10937, line: 967, type: !1558)
!11265 = !DILocation(line: 0, scope: !11262)
!11266 = !DILocation(line: 969, column: 21, scope: !11262)
!11267 = !DILocation(line: 969, column: 3, scope: !11262)
!11268 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10937, file: !10937, line: 601, type: !10938, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11269)
!11269 = !{!11270}
!11270 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11268, file: !10937, line: 601, type: !1558)
!11271 = !DILocation(line: 0, scope: !11268)
!11272 = !DILocation(line: 603, column: 21, scope: !11268)
!11273 = !DILocation(line: 603, column: 3, scope: !11268)
!11274 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10937, file: !10937, line: 820, type: !10938, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11275)
!11275 = !{!11276}
!11276 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11274, file: !10937, line: 820, type: !1558)
!11277 = !DILocation(line: 0, scope: !11274)
!11278 = !DILocation(line: 822, column: 21, scope: !11274)
!11279 = !DILocation(line: 822, column: 3, scope: !11274)
!11280 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10937, file: !10937, line: 547, type: !10938, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11281)
!11281 = !{!11282}
!11282 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11280, file: !10937, line: 547, type: !1558)
!11283 = !DILocation(line: 0, scope: !11280)
!11284 = !DILocation(line: 549, column: 21, scope: !11280)
!11285 = !DILocation(line: 549, column: 3, scope: !11280)
!11286 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1614, file: !1614, line: 257, type: !11287, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11289)
!11287 = !DISubroutineType(types: !11288)
!11288 = !{!132, !1453}
!11289 = !{!11290}
!11290 = !DILocalVariable(name: "parity", arg: 1, scope: !11286, file: !1614, line: 257, type: !1453)
!11291 = !DILocation(line: 0, scope: !11286)
!11292 = !DILocation(line: 259, column: 2, scope: !11286)
!11293 = !DILocation(line: 268, column: 1, scope: !11286)
!11294 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1614, file: !1614, line: 283, type: !11295, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11297)
!11295 = !DISubroutineType(types: !11296)
!11296 = !{!132, !1467}
!11297 = !{!11298}
!11298 = !DILocalVariable(name: "sb", arg: 1, scope: !11294, file: !1614, line: 283, type: !1467)
!11299 = !DILocation(line: 0, scope: !11294)
!11300 = !DILocation(line: 285, column: 2, scope: !11294)
!11301 = !DILocation(line: 0, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11294, file: !1614, line: 285, column: 14)
!11303 = !DILocation(line: 302, column: 1, scope: !11294)
!11304 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1614, file: !1614, line: 325, type: !11305, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11307)
!11305 = !DISubroutineType(types: !11306)
!11306 = !{!132, !1460, !1453}
!11307 = !{!11308, !11309}
!11308 = !DILocalVariable(name: "db", arg: 1, scope: !11304, file: !1614, line: 325, type: !1460)
!11309 = !DILocalVariable(name: "p", arg: 2, scope: !11304, file: !1614, line: 326, type: !1453)
!11310 = !DILocation(line: 0, scope: !11304)
!11311 = !DILocation(line: 328, column: 2, scope: !11304)
!11312 = !DILocation(line: 353, column: 1, scope: !11304)
!11313 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1614, file: !1614, line: 393, type: !11314, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11316)
!11314 = !DISubroutineType(types: !11315)
!11315 = !{!132, !1473}
!11316 = !{!11317}
!11317 = !DILocalVariable(name: "fc", arg: 1, scope: !11313, file: !1614, line: 393, type: !1473)
!11318 = !DILocation(line: 0, scope: !11313)
!11319 = !DILocation(line: 395, column: 9, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11313, file: !1614, line: 395, column: 6)
!11321 = !DILocation(line: 400, column: 1, scope: !11313)
!11322 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10937, file: !10937, line: 424, type: !10968, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11323)
!11323 = !{!11324}
!11324 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11322, file: !10937, line: 424, type: !1558)
!11325 = !DILocation(line: 0, scope: !11322)
!11326 = !DILocation(line: 426, column: 3, scope: !11322)
!11327 = !DILocation(line: 427, column: 1, scope: !11322)
!11328 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1614, file: !1614, line: 197, type: !11329, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11331)
!11329 = !DISubroutineType(types: !11330)
!11330 = !{null, !1487, !132}
!11331 = !{!11332, !11333, !11334}
!11332 = !DILocalVariable(name: "dev", arg: 1, scope: !11328, file: !1614, line: 197, type: !1487)
!11333 = !DILocalVariable(name: "parity", arg: 2, scope: !11328, file: !1614, line: 198, type: !132)
!11334 = !DILocalVariable(name: "config", scope: !11328, file: !1614, line: 200, type: !10501)
!11335 = !DILocation(line: 0, scope: !11328)
!11336 = !DILocation(line: 200, column: 48, scope: !11328)
!11337 = !DILocation(line: 202, column: 29, scope: !11328)
!11338 = !DILocation(line: 202, column: 2, scope: !11328)
!11339 = !DILocation(line: 203, column: 1, scope: !11328)
!11340 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1614, file: !1614, line: 212, type: !11329, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11341)
!11341 = !{!11342, !11343, !11344}
!11342 = !DILocalVariable(name: "dev", arg: 1, scope: !11340, file: !1614, line: 212, type: !1487)
!11343 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11340, file: !1614, line: 213, type: !132)
!11344 = !DILocalVariable(name: "config", scope: !11340, file: !1614, line: 215, type: !10501)
!11345 = !DILocation(line: 0, scope: !11340)
!11346 = !DILocation(line: 215, column: 48, scope: !11340)
!11347 = !DILocation(line: 217, column: 37, scope: !11340)
!11348 = !DILocation(line: 217, column: 2, scope: !11340)
!11349 = !DILocation(line: 218, column: 1, scope: !11340)
!11350 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1614, file: !1614, line: 227, type: !11329, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11351)
!11351 = !{!11352, !11353, !11354}
!11352 = !DILocalVariable(name: "dev", arg: 1, scope: !11350, file: !1614, line: 227, type: !1487)
!11353 = !DILocalVariable(name: "databits", arg: 2, scope: !11350, file: !1614, line: 228, type: !132)
!11354 = !DILocalVariable(name: "config", scope: !11350, file: !1614, line: 230, type: !10501)
!11355 = !DILocation(line: 0, scope: !11350)
!11356 = !DILocation(line: 230, column: 48, scope: !11350)
!11357 = !DILocation(line: 232, column: 32, scope: !11350)
!11358 = !DILocation(line: 232, column: 2, scope: !11350)
!11359 = !DILocation(line: 233, column: 1, scope: !11350)
!11360 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1614, file: !1614, line: 242, type: !11329, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11361)
!11361 = !{!11362, !11363, !11364}
!11362 = !DILocalVariable(name: "dev", arg: 1, scope: !11360, file: !1614, line: 242, type: !1487)
!11363 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11360, file: !1614, line: 243, type: !132)
!11364 = !DILocalVariable(name: "config", scope: !11360, file: !1614, line: 245, type: !10501)
!11365 = !DILocation(line: 0, scope: !11360)
!11366 = !DILocation(line: 245, column: 48, scope: !11360)
!11367 = !DILocation(line: 247, column: 33, scope: !11360)
!11368 = !DILocation(line: 247, column: 2, scope: !11360)
!11369 = !DILocation(line: 248, column: 1, scope: !11360)
!11370 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1614, file: !1614, line: 107, type: !11329, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11371)
!11371 = !{!11372, !11373, !11374, !11375, !11376}
!11372 = !DILocalVariable(name: "dev", arg: 1, scope: !11370, file: !1614, line: 107, type: !1487)
!11373 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11370, file: !1614, line: 107, type: !132)
!11374 = !DILocalVariable(name: "config", scope: !11370, file: !1614, line: 109, type: !10501)
!11375 = !DILocalVariable(name: "data", scope: !11370, file: !1614, line: 110, type: !10624)
!11376 = !DILocalVariable(name: "clock_rate", scope: !11370, file: !1614, line: 112, type: !132)
!11377 = !DILocation(line: 0, scope: !11370)
!11378 = !DILocation(line: 109, column: 48, scope: !11370)
!11379 = !DILocation(line: 110, column: 38, scope: !11370)
!11380 = !DILocation(line: 112, column: 2, scope: !11370)
!11381 = !DILocation(line: 123, column: 36, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11383, file: !1614, line: 123, column: 7)
!11383 = distinct !DILexicalBlock(scope: !11384, file: !1614, line: 122, column: 9)
!11384 = distinct !DILexicalBlock(scope: !11370, file: !1614, line: 115, column: 6)
!11385 = !DILocation(line: 124, column: 42, scope: !11382)
!11386 = !DILocation(line: 123, column: 7, scope: !11382)
!11387 = !DILocation(line: 125, column: 22, scope: !11382)
!11388 = !DILocation(line: 123, column: 7, scope: !11383)
!11389 = !DILocation(line: 176, column: 36, scope: !11370)
!11390 = !DILocation(line: 176, column: 3, scope: !11370)
!11391 = !DILocation(line: 179, column: 32, scope: !11370)
!11392 = !DILocation(line: 180, column: 10, scope: !11370)
!11393 = !DILocation(line: 179, column: 3, scope: !11370)
!11394 = !DILocation(line: 195, column: 1, scope: !11370)
!11395 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10937, file: !10937, line: 410, type: !10968, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11396)
!11396 = !{!11397}
!11397 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11395, file: !10937, line: 410, type: !1558)
!11398 = !DILocation(line: 0, scope: !11395)
!11399 = !DILocation(line: 412, column: 3, scope: !11395)
!11400 = !DILocation(line: 413, column: 1, scope: !11395)
!11401 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !806, file: !806, line: 216, type: !1591, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11402)
!11402 = !{!11403, !11404, !11405, !11406}
!11403 = !DILocalVariable(name: "dev", arg: 1, scope: !11401, file: !806, line: 216, type: !1487)
!11404 = !DILocalVariable(name: "sys", arg: 2, scope: !11401, file: !806, line: 217, type: !899)
!11405 = !DILocalVariable(name: "rate", arg: 3, scope: !11401, file: !806, line: 218, type: !855)
!11406 = !DILocalVariable(name: "api", scope: !11401, file: !806, line: 220, type: !1569)
!11407 = !DILocation(line: 0, scope: !11401)
!11408 = !DILocation(line: 221, column: 49, scope: !11401)
!11409 = !DILocation(line: 223, column: 11, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11401, file: !806, line: 223, column: 6)
!11411 = !DILocation(line: 223, column: 20, scope: !11410)
!11412 = !DILocation(line: 223, column: 6, scope: !11401)
!11413 = !DILocation(line: 227, column: 9, scope: !11401)
!11414 = !DILocation(line: 227, column: 2, scope: !11401)
!11415 = !DILocation(line: 228, column: 1, scope: !11401)
!11416 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10937, file: !10937, line: 615, type: !11417, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11419)
!11417 = !DISubroutineType(types: !11418)
!11418 = !{null, !1558, !132}
!11419 = !{!11420, !11421}
!11420 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11416, file: !10937, line: 615, type: !1558)
!11421 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11416, file: !10937, line: 615, type: !132)
!11422 = !DILocation(line: 0, scope: !11416)
!11423 = !DILocation(line: 617, column: 3, scope: !11416)
!11424 = !DILocation(line: 618, column: 1, scope: !11416)
!11425 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10937, file: !10937, line: 1020, type: !11426, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11428)
!11426 = !DISubroutineType(types: !11427)
!11427 = !{null, !1558, !132, !132, !132}
!11428 = !{!11429, !11430, !11431, !11432}
!11429 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11425, file: !10937, line: 1020, type: !1558)
!11430 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11425, file: !10937, line: 1020, type: !132)
!11431 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11425, file: !10937, line: 1020, type: !132)
!11432 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11425, file: !10937, line: 1021, type: !132)
!11433 = !DILocation(line: 0, scope: !11425)
!11434 = !DILocation(line: 1029, column: 30, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11436, file: !10937, line: 1028, column: 3)
!11436 = distinct !DILexicalBlock(scope: !11425, file: !10937, line: 1023, column: 7)
!11437 = !DILocation(line: 1029, column: 19, scope: !11435)
!11438 = !DILocation(line: 1029, column: 13, scope: !11435)
!11439 = !DILocation(line: 1029, column: 17, scope: !11435)
!11440 = !DILocation(line: 1031, column: 1, scope: !11425)
!11441 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10937, file: !10937, line: 949, type: !11417, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11442)
!11442 = !{!11443, !11444}
!11443 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11441, file: !10937, line: 949, type: !1558)
!11444 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11441, file: !10937, line: 949, type: !132)
!11445 = !DILocation(line: 0, scope: !11441)
!11446 = !DILocation(line: 951, column: 3, scope: !11441)
!11447 = !DILocation(line: 952, column: 1, scope: !11441)
!11448 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10937, file: !10937, line: 588, type: !11417, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11449)
!11449 = !{!11450, !11451}
!11450 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11448, file: !10937, line: 588, type: !1558)
!11451 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11448, file: !10937, line: 588, type: !132)
!11452 = !DILocation(line: 0, scope: !11448)
!11453 = !DILocation(line: 590, column: 3, scope: !11448)
!11454 = !DILocation(line: 591, column: 1, scope: !11448)
!11455 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10937, file: !10937, line: 805, type: !11417, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11456)
!11456 = !{!11457, !11458}
!11457 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11455, file: !10937, line: 805, type: !1558)
!11458 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11455, file: !10937, line: 805, type: !132)
!11459 = !DILocation(line: 0, scope: !11455)
!11460 = !DILocation(line: 807, column: 3, scope: !11455)
!11461 = !DILocation(line: 808, column: 1, scope: !11455)
!11462 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10937, file: !10937, line: 532, type: !11417, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11463)
!11463 = !{!11464, !11465}
!11464 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11462, file: !10937, line: 532, type: !1558)
!11465 = !DILocalVariable(name: "Parity", arg: 2, scope: !11462, file: !10937, line: 532, type: !132)
!11466 = !DILocation(line: 0, scope: !11462)
!11467 = !DILocation(line: 534, column: 3, scope: !11462)
!11468 = !DILocation(line: 535, column: 1, scope: !11462)
!11469 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10937, file: !10937, line: 1737, type: !10938, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11470)
!11470 = !{!11471}
!11471 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11469, file: !10937, line: 1737, type: !1558)
!11472 = !DILocation(line: 0, scope: !11469)
!11473 = !DILocation(line: 1739, column: 11, scope: !11469)
!11474 = !DILocation(line: 1739, column: 3, scope: !11469)
!11475 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10937, file: !10937, line: 1748, type: !10938, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11476)
!11476 = !{!11477}
!11477 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11475, file: !10937, line: 1748, type: !1558)
!11478 = !DILocation(line: 0, scope: !11475)
!11479 = !DILocation(line: 1750, column: 11, scope: !11475)
!11480 = !DILocation(line: 1750, column: 45, scope: !11475)
!11481 = !DILocation(line: 1750, column: 3, scope: !11475)
!11482 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10937, file: !10937, line: 1827, type: !10938, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11483)
!11483 = !{!11484}
!11484 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11482, file: !10937, line: 1827, type: !1558)
!11485 = !DILocation(line: 0, scope: !11482)
!11486 = !DILocation(line: 1829, column: 11, scope: !11482)
!11487 = !DILocation(line: 1829, column: 46, scope: !11482)
!11488 = !DILocation(line: 1829, column: 3, scope: !11482)
!11489 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10937, file: !10937, line: 1992, type: !10968, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11490)
!11490 = !{!11491}
!11491 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11489, file: !10937, line: 1992, type: !1558)
!11492 = !DILocation(line: 0, scope: !11489)
!11493 = !DILocation(line: 1994, column: 3, scope: !11489)
!11494 = !DILocation(line: 1995, column: 1, scope: !11489)
!11495 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10937, file: !10937, line: 1877, type: !10968, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11496)
!11496 = !{!11497, !11498}
!11497 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11495, file: !10937, line: 1877, type: !1558)
!11498 = !DILocalVariable(name: "tmpreg", scope: !11495, file: !10937, line: 1879, type: !131)
!11499 = !DILocation(line: 0, scope: !11495)
!11500 = !DILocation(line: 1879, column: 3, scope: !11495)
!11501 = !DILocation(line: 1879, column: 17, scope: !11495)
!11502 = !DILocation(line: 1880, column: 20, scope: !11495)
!11503 = !DILocation(line: 1880, column: 10, scope: !11495)
!11504 = !DILocation(line: 1881, column: 10, scope: !11495)
!11505 = !DILocation(line: 1882, column: 20, scope: !11495)
!11506 = !DILocation(line: 1882, column: 10, scope: !11495)
!11507 = !DILocation(line: 1883, column: 10, scope: !11495)
!11508 = !DILocation(line: 1884, column: 1, scope: !11495)
!11509 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10937, file: !10937, line: 1896, type: !10968, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11510)
!11510 = !{!11511, !11512}
!11511 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11509, file: !10937, line: 1896, type: !1558)
!11512 = !DILocalVariable(name: "tmpreg", scope: !11509, file: !10937, line: 1898, type: !131)
!11513 = !DILocation(line: 0, scope: !11509)
!11514 = !DILocation(line: 1898, column: 3, scope: !11509)
!11515 = !DILocation(line: 1898, column: 17, scope: !11509)
!11516 = !DILocation(line: 1899, column: 20, scope: !11509)
!11517 = !DILocation(line: 1899, column: 10, scope: !11509)
!11518 = !DILocation(line: 1900, column: 10, scope: !11509)
!11519 = !DILocation(line: 1901, column: 20, scope: !11509)
!11520 = !DILocation(line: 1901, column: 10, scope: !11509)
!11521 = !DILocation(line: 1902, column: 10, scope: !11509)
!11522 = !DILocation(line: 1903, column: 1, scope: !11509)
!11523 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10937, file: !10937, line: 1915, type: !10968, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11524)
!11524 = !{!11525, !11526}
!11525 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11523, file: !10937, line: 1915, type: !1558)
!11526 = !DILocalVariable(name: "tmpreg", scope: !11523, file: !10937, line: 1917, type: !131)
!11527 = !DILocation(line: 0, scope: !11523)
!11528 = !DILocation(line: 1917, column: 3, scope: !11523)
!11529 = !DILocation(line: 1917, column: 17, scope: !11523)
!11530 = !DILocation(line: 1918, column: 20, scope: !11523)
!11531 = !DILocation(line: 1918, column: 10, scope: !11523)
!11532 = !DILocation(line: 1919, column: 10, scope: !11523)
!11533 = !DILocation(line: 1920, column: 20, scope: !11523)
!11534 = !DILocation(line: 1920, column: 10, scope: !11523)
!11535 = !DILocation(line: 1921, column: 10, scope: !11523)
!11536 = !DILocation(line: 1922, column: 1, scope: !11523)
!11537 = !DILocation(line: 0, scope: !1668)
!11538 = !DILocation(line: 1914, column: 1, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !1668, file: !1614, line: 1914, column: 1)
!11540 = !DILocation(line: 1914, column: 1, scope: !1668)
!11541 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1614, file: !1614, line: 987, type: !1538, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11542)
!11542 = !{!11543, !11544}
!11543 = !DILocalVariable(name: "dev", arg: 1, scope: !11541, file: !1614, line: 987, type: !1487)
!11544 = !DILocalVariable(name: "data", scope: !11541, file: !1614, line: 989, type: !10624)
!11545 = !DILocation(line: 0, scope: !11541)
!11546 = !DILocation(line: 989, column: 38, scope: !11541)
!11547 = !DILocation(line: 1014, column: 12, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11541, file: !1614, line: 1014, column: 6)
!11549 = !DILocation(line: 1014, column: 6, scope: !11548)
!11550 = !DILocation(line: 1014, column: 6, scope: !11541)
!11551 = !DILocation(line: 1015, column: 28, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11548, file: !1614, line: 1014, column: 21)
!11553 = !DILocation(line: 1015, column: 3, scope: !11552)
!11554 = !DILocation(line: 1016, column: 2, scope: !11552)
!11555 = !DILocation(line: 1059, column: 1, scope: !11541)
!11556 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1614, file: !1614, line: 1583, type: !1508, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11557)
!11557 = !{!11558, !11559, !11560, !11561, !11562, !11563}
!11558 = !DILocalVariable(name: "dev", arg: 1, scope: !11556, file: !1614, line: 1583, type: !1487)
!11559 = !DILocalVariable(name: "config", scope: !11556, file: !1614, line: 1585, type: !10501)
!11560 = !DILocalVariable(name: "data", scope: !11556, file: !1614, line: 1586, type: !10624)
!11561 = !DILocalVariable(name: "ll_parity", scope: !11556, file: !1614, line: 1587, type: !132)
!11562 = !DILocalVariable(name: "ll_datawidth", scope: !11556, file: !1614, line: 1588, type: !132)
!11563 = !DILocalVariable(name: "err", scope: !11556, file: !1614, line: 1589, type: !103)
!11564 = !DILocation(line: 0, scope: !11556)
!11565 = !DILocation(line: 1585, column: 48, scope: !11556)
!11566 = !DILocation(line: 1586, column: 38, scope: !11556)
!11567 = !DILocation(line: 1591, column: 2, scope: !11556)
!11568 = !DILocation(line: 1593, column: 29, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11556, file: !1614, line: 1593, column: 6)
!11570 = !DILocation(line: 1593, column: 7, scope: !11569)
!11571 = !DILocation(line: 1593, column: 6, scope: !11556)
!11572 = !DILocation(line: 1599, column: 31, scope: !11556)
!11573 = !DILocation(line: 1599, column: 71, scope: !11556)
!11574 = !DILocation(line: 1599, column: 8, scope: !11556)
!11575 = !DILocation(line: 1600, column: 10, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11556, file: !1614, line: 1600, column: 6)
!11577 = !DILocation(line: 1600, column: 6, scope: !11556)
!11578 = !DILocation(line: 1616, column: 36, scope: !11556)
!11579 = !DILocation(line: 1616, column: 8, scope: !11556)
!11580 = !DILocation(line: 1617, column: 10, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11556, file: !1614, line: 1617, column: 6)
!11582 = !DILocation(line: 1617, column: 6, scope: !11556)
!11583 = !DILocation(line: 1621, column: 27, scope: !11556)
!11584 = !DILocation(line: 1621, column: 2, scope: !11556)
!11585 = !DILocation(line: 1624, column: 40, scope: !11556)
!11586 = !DILocation(line: 1624, column: 2, scope: !11556)
!11587 = !DILocation(line: 1630, column: 14, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11556, file: !1614, line: 1630, column: 6)
!11589 = !DILocation(line: 1630, column: 6, scope: !11556)
!11590 = !DILocation(line: 1638, column: 2, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11592, file: !1614, line: 1634, column: 34)
!11592 = distinct !DILexicalBlock(scope: !11588, file: !1614, line: 1634, column: 13)
!11593 = !DILocation(line: 0, scope: !11588)
!11594 = !DILocation(line: 1649, column: 35, scope: !11556)
!11595 = !DILocation(line: 1649, column: 2, scope: !11556)
!11596 = !DILocation(line: 1654, column: 14, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11556, file: !1614, line: 1654, column: 6)
!11598 = !DILocation(line: 1654, column: 6, scope: !11556)
!11599 = !DILocation(line: 1655, column: 3, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11597, file: !1614, line: 1654, column: 31)
!11601 = !DILocation(line: 1656, column: 2, scope: !11600)
!11602 = !DILocation(line: 1659, column: 37, scope: !11556)
!11603 = !DILocation(line: 1659, column: 2, scope: !11556)
!11604 = !DILocation(line: 1662, column: 14, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11556, file: !1614, line: 1662, column: 6)
!11606 = !DILocation(line: 1662, column: 6, scope: !11556)
!11607 = !DILocation(line: 1663, column: 37, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11605, file: !1614, line: 1662, column: 27)
!11609 = !DILocation(line: 1663, column: 3, scope: !11608)
!11610 = !DILocation(line: 1664, column: 2, scope: !11608)
!11611 = !DILocation(line: 1684, column: 26, scope: !11556)
!11612 = !DILocation(line: 1684, column: 2, scope: !11556)
!11613 = !DILocation(line: 1701, column: 10, scope: !11556)
!11614 = !DILocation(line: 1701, column: 2, scope: !11556)
!11615 = !DILocation(line: 1722, column: 2, scope: !11556)
!11616 = !DILocation(line: 1724, column: 1, scope: !11556)
!11617 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1614, file: !1614, line: 651, type: !1538, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11618)
!11618 = !{!11619, !11620, !11621}
!11619 = !DILocalVariable(name: "dev", arg: 1, scope: !11617, file: !1614, line: 651, type: !1487)
!11620 = !DILocalVariable(name: "data", scope: !11617, file: !1614, line: 653, type: !10624)
!11621 = !DILocalVariable(name: "clk", scope: !11617, file: !1614, line: 654, type: !11622)
!11622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1487)
!11623 = !DILocation(line: 0, scope: !11617)
!11624 = !DILocation(line: 653, column: 38, scope: !11617)
!11625 = !DILocation(line: 656, column: 8, scope: !11617)
!11626 = !DILocation(line: 656, column: 14, scope: !11617)
!11627 = !DILocation(line: 657, column: 1, scope: !11617)
!11628 = distinct !DISubprogram(name: "device_is_ready", scope: !6685, file: !6685, line: 47, type: !11629, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11631)
!11629 = !DISubroutineType(types: !11630)
!11630 = !{!166, !1487}
!11631 = !{!11632}
!11632 = !DILocalVariable(name: "dev", arg: 1, scope: !11628, file: !6685, line: 47, type: !1487)
!11633 = !DILocation(line: 0, scope: !11628)
!11634 = !DILocation(line: 55, column: 2, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11628, file: !6685, line: 55, column: 2)
!11636 = !{i64 2155034163}
!11637 = !DILocation(line: 56, column: 9, scope: !11628)
!11638 = !DILocation(line: 56, column: 2, scope: !11628)
!11639 = distinct !DISubprogram(name: "clock_control_on", scope: !806, file: !806, line: 123, type: !1576, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11640)
!11640 = !{!11641, !11642, !11643}
!11641 = !DILocalVariable(name: "dev", arg: 1, scope: !11639, file: !806, line: 123, type: !1487)
!11642 = !DILocalVariable(name: "sys", arg: 2, scope: !11639, file: !806, line: 124, type: !899)
!11643 = !DILocalVariable(name: "api", scope: !11639, file: !806, line: 126, type: !1569)
!11644 = !DILocation(line: 0, scope: !11639)
!11645 = !DILocation(line: 127, column: 49, scope: !11639)
!11646 = !DILocation(line: 129, column: 14, scope: !11639)
!11647 = !DILocation(line: 129, column: 9, scope: !11639)
!11648 = !DILocation(line: 129, column: 2, scope: !11639)
!11649 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1641, file: !1641, line: 342, type: !11650, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11652)
!11650 = !DISubroutineType(types: !11651)
!11651 = !{!103, !1702, !163}
!11652 = !{!11653, !11654, !11655, !11656}
!11653 = !DILocalVariable(name: "config", arg: 1, scope: !11649, file: !1641, line: 342, type: !1702)
!11654 = !DILocalVariable(name: "id", arg: 2, scope: !11649, file: !1641, line: 343, type: !163)
!11655 = !DILocalVariable(name: "ret", scope: !11649, file: !1641, line: 345, type: !103)
!11656 = !DILocalVariable(name: "state", scope: !11649, file: !1641, line: 346, type: !1644)
!11657 = !DILocation(line: 0, scope: !11649)
!11658 = !DILocation(line: 346, column: 2, scope: !11649)
!11659 = !DILocation(line: 348, column: 8, scope: !11649)
!11660 = !DILocation(line: 349, column: 10, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11649, file: !1641, line: 349, column: 6)
!11662 = !DILocation(line: 349, column: 6, scope: !11649)
!11663 = !DILocation(line: 353, column: 44, scope: !11649)
!11664 = !DILocation(line: 353, column: 9, scope: !11649)
!11665 = !DILocation(line: 353, column: 2, scope: !11649)
!11666 = !DILocation(line: 354, column: 1, scope: !11649)
!11667 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10937, file: !10937, line: 497, type: !11417, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11668)
!11668 = !{!11669, !11670, !11671}
!11669 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11667, file: !10937, line: 497, type: !1558)
!11670 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11667, file: !10937, line: 497, type: !132)
!11671 = !DILocalVariable(name: "val", scope: !11672, file: !10937, line: 499, type: !132)
!11672 = distinct !DILexicalBlock(scope: !11667, file: !10937, line: 499, column: 3)
!11673 = !DILocation(line: 0, scope: !11667)
!11674 = !DILocation(line: 499, column: 3, scope: !11672)
!11675 = !DILocation(line: 0, scope: !10977, inlinedAt: !11676)
!11676 = distinct !DILocation(line: 499, column: 3, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11672, file: !10937, line: 499, column: 3)
!11678 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !11676)
!11679 = !DILocation(line: 499, column: 3, scope: !11677)
!11680 = !DILocation(line: 0, scope: !11672)
!11681 = !DILocation(line: 0, scope: !10990, inlinedAt: !11682)
!11682 = distinct !DILocation(line: 499, column: 3, scope: !11672)
!11683 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !11682)
!11684 = distinct !{!11684, !11674, !11674}
!11685 = !DILocation(line: 500, column: 1, scope: !11667)
!11686 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10937, file: !10937, line: 850, type: !11426, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11687)
!11687 = !{!11688, !11689, !11690, !11691}
!11688 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11686, file: !10937, line: 850, type: !1558)
!11689 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11686, file: !10937, line: 850, type: !132)
!11690 = !DILocalVariable(name: "Parity", arg: 3, scope: !11686, file: !10937, line: 850, type: !132)
!11691 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11686, file: !10937, line: 851, type: !132)
!11692 = !DILocation(line: 0, scope: !11686)
!11693 = !DILocation(line: 853, column: 3, scope: !11686)
!11694 = !DILocation(line: 854, column: 3, scope: !11686)
!11695 = !DILocation(line: 855, column: 1, scope: !11686)
!11696 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10937, file: !10937, line: 1337, type: !10968, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11697)
!11697 = !{!11698}
!11698 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11696, file: !10937, line: 1337, type: !1558)
!11699 = !DILocation(line: 0, scope: !11696)
!11700 = !DILocation(line: 1339, column: 3, scope: !11696)
!11701 = !DILocation(line: 1340, column: 1, scope: !11696)
!11702 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1641, file: !1641, line: 316, type: !11703, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11705)
!11703 = !DISubroutineType(types: !11704)
!11704 = !{!103, !1702, !1644}
!11705 = !{!11706, !11707, !11708}
!11706 = !DILocalVariable(name: "config", arg: 1, scope: !11702, file: !1641, line: 317, type: !1702)
!11707 = !DILocalVariable(name: "state", arg: 2, scope: !11702, file: !1641, line: 318, type: !1644)
!11708 = !DILocalVariable(name: "reg", scope: !11702, file: !1641, line: 320, type: !22)
!11709 = !DILocation(line: 0, scope: !11702)
!11710 = !DILocation(line: 329, column: 39, scope: !11702)
!11711 = !DILocation(line: 329, column: 52, scope: !11702)
!11712 = !DILocation(line: 329, column: 9, scope: !11702)
!11713 = !DILocation(line: 329, column: 2, scope: !11702)
!11714 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !11629, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11715)
!11715 = !{!11716}
!11716 = !DILocalVariable(name: "dev", arg: 1, scope: !11714, file: !152, line: 730, type: !1487)
!11717 = !DILocation(line: 0, scope: !11714)
!11718 = !DILocation(line: 732, column: 9, scope: !11714)
!11719 = !DILocation(line: 732, column: 2, scope: !11714)
!11720 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1785, file: !1785, line: 270, type: !1791, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1707, retainedNodes: !11721)
!11721 = !{!11722}
!11722 = !DILocalVariable(name: "dev", arg: 1, scope: !11720, file: !1785, line: 270, type: !1793)
!11723 = !DILocation(line: 0, scope: !11720)
!11724 = !DILocation(line: 274, column: 2, scope: !11720)
!11725 = !DILocation(line: 275, column: 12, scope: !11720)
!11726 = !DILocation(line: 276, column: 15, scope: !11720)
!11727 = !DILocation(line: 277, column: 16, scope: !11720)
!11728 = !DILocation(line: 278, column: 15, scope: !11720)
!11729 = !DILocation(line: 279, column: 16, scope: !11720)
!11730 = !DILocation(line: 282, column: 2, scope: !11720)
!11731 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !507, file: !507, line: 1814, type: !6878, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1707, retainedNodes: !11732)
!11732 = !{!11733, !11734}
!11733 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11731, file: !507, line: 1814, type: !762)
!11734 = !DILocalVariable(name: "priority", arg: 2, scope: !11731, file: !507, line: 1814, type: !132)
!11735 = !DILocation(line: 0, scope: !11731)
!11736 = !DILocation(line: 1822, column: 46, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11738, file: !507, line: 1821, column: 3)
!11738 = distinct !DILexicalBlock(scope: !11731, file: !507, line: 1816, column: 7)
!11739 = !DILocation(line: 1824, column: 1, scope: !11731)
!11740 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1785, file: !1785, line: 118, type: !6781, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1707, retainedNodes: !11741)
!11741 = !{!11742, !11743}
!11742 = !DILocalVariable(name: "arg", arg: 1, scope: !11740, file: !1785, line: 118, type: !102)
!11743 = !DILocalVariable(name: "dticks", scope: !11740, file: !1785, line: 121, type: !132)
!11744 = !DILocation(line: 0, scope: !11740)
!11745 = !DILocation(line: 124, column: 2, scope: !11740)
!11746 = !DILocation(line: 129, column: 17, scope: !11740)
!11747 = !DILocation(line: 129, column: 14, scope: !11740)
!11748 = !DILocation(line: 130, column: 15, scope: !11740)
!11749 = !DILocation(line: 145, column: 27, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11751, file: !1785, line: 132, column: 16)
!11751 = distinct !DILexicalBlock(scope: !11740, file: !1785, line: 132, column: 6)
!11752 = !DILocation(line: 145, column: 25, scope: !11750)
!11753 = !DILocation(line: 145, column: 45, scope: !11750)
!11754 = !DILocation(line: 146, column: 30, scope: !11750)
!11755 = !DILocation(line: 146, column: 20, scope: !11750)
!11756 = !DILocation(line: 147, column: 3, scope: !11750)
!11757 = !DILocation(line: 151, column: 2, scope: !11740)
!11758 = !DILocation(line: 152, column: 1, scope: !11740)
!11759 = distinct !DISubprogram(name: "elapsed", scope: !1785, file: !1785, line: 85, type: !6925, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1707, retainedNodes: !11760)
!11760 = !{!11761, !11762, !11763}
!11761 = !DILocalVariable(name: "val1", scope: !11759, file: !1785, line: 87, type: !132)
!11762 = !DILocalVariable(name: "ctrl", scope: !11759, file: !1785, line: 88, type: !132)
!11763 = !DILocalVariable(name: "val2", scope: !11759, file: !1785, line: 89, type: !132)
!11764 = !DILocation(line: 87, column: 27, scope: !11759)
!11765 = !DILocation(line: 0, scope: !11759)
!11766 = !DILocation(line: 88, column: 27, scope: !11759)
!11767 = !DILocation(line: 89, column: 27, scope: !11759)
!11768 = !DILocation(line: 105, column: 12, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11759, file: !1785, line: 105, column: 6)
!11770 = !DILocation(line: 106, column: 6, scope: !11769)
!11771 = !DILocation(line: 107, column: 16, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11769, file: !1785, line: 106, column: 24)
!11773 = !DILocation(line: 111, column: 18, scope: !11772)
!11774 = !DILocation(line: 112, column: 2, scope: !11772)
!11775 = !DILocation(line: 114, column: 20, scope: !11759)
!11776 = !DILocation(line: 114, column: 30, scope: !11759)
!11777 = !DILocation(line: 114, column: 28, scope: !11759)
!11778 = !DILocation(line: 114, column: 2, scope: !11759)
!11779 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1785, file: !1785, line: 154, type: !11780, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1707, retainedNodes: !11782)
!11780 = !DISubroutineType(types: !11781)
!11781 = !{null, !344, !166}
!11782 = !{!11783, !11784, !11785, !11786, !11787, !11788, !11789, !11794, !11795}
!11783 = !DILocalVariable(name: "ticks", arg: 1, scope: !11779, file: !1785, line: 154, type: !344)
!11784 = !DILocalVariable(name: "idle", arg: 2, scope: !11779, file: !1785, line: 154, type: !166)
!11785 = !DILocalVariable(name: "delay", scope: !11779, file: !1785, line: 169, type: !132)
!11786 = !DILocalVariable(name: "val1", scope: !11779, file: !1785, line: 170, type: !132)
!11787 = !DILocalVariable(name: "val2", scope: !11779, file: !1785, line: 170, type: !132)
!11788 = !DILocalVariable(name: "last_load_", scope: !11779, file: !1785, line: 171, type: !132)
!11789 = !DILocalVariable(name: "key", scope: !11779, file: !1785, line: 176, type: !11790)
!11790 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !11791)
!11791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !11792)
!11792 = !{!11793}
!11793 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11791, file: !472, line: 33, baseType: !103, size: 32)
!11794 = !DILocalVariable(name: "pending", scope: !11779, file: !1785, line: 178, type: !132)
!11795 = !DILocalVariable(name: "unannounced", scope: !11779, file: !1785, line: 185, type: !132)
!11796 = !DILocation(line: 0, scope: !11779)
!11797 = !DILocation(line: 162, column: 49, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11779, file: !1785, line: 162, column: 6)
!11799 = !DILocation(line: 163, column: 17, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11798, file: !1785, line: 162, column: 78)
!11801 = !DILocation(line: 164, column: 13, scope: !11800)
!11802 = !DILocation(line: 165, column: 3, scope: !11800)
!11803 = !DILocation(line: 171, column: 24, scope: !11779)
!11804 = !DILocation(line: 173, column: 10, scope: !11779)
!11805 = !DILocation(line: 174, column: 10, scope: !11779)
!11806 = !DILocalVariable(name: "l", arg: 1, scope: !11807, file: !472, line: 136, type: !11810)
!11807 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !11808, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1707, retainedNodes: !11811)
!11808 = !DISubroutineType(types: !11809)
!11809 = !{!11790, !11810}
!11810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!11811 = !{!11806, !11812}
!11812 = !DILocalVariable(name: "k", scope: !11807, file: !472, line: 139, type: !11790)
!11813 = !DILocation(line: 0, scope: !11807, inlinedAt: !11814)
!11814 = distinct !DILocation(line: 176, column: 25, scope: !11779)
!11815 = !DILocation(line: 55, column: 2, scope: !11816, inlinedAt: !11820)
!11816 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5824, file: !5824, line: 42, type: !5825, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1707, retainedNodes: !11817)
!11817 = !{!11818, !11819}
!11818 = !DILocalVariable(name: "key", scope: !11816, file: !5824, line: 44, type: !32)
!11819 = !DILocalVariable(name: "tmp", scope: !11816, file: !5824, line: 53, type: !32)
!11820 = distinct !DILocation(line: 145, column: 10, scope: !11807, inlinedAt: !11814)
!11821 = !{i64 2221065}
!11822 = !DILocation(line: 0, scope: !11816, inlinedAt: !11820)
!11823 = !DILocation(line: 178, column: 21, scope: !11779)
!11824 = !DILocation(line: 180, column: 18, scope: !11779)
!11825 = !DILocation(line: 182, column: 14, scope: !11779)
!11826 = !DILocation(line: 183, column: 15, scope: !11779)
!11827 = !DILocation(line: 185, column: 39, scope: !11779)
!11828 = !DILocation(line: 185, column: 37, scope: !11779)
!11829 = !DILocation(line: 187, column: 27, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11779, file: !1785, line: 187, column: 6)
!11831 = !DILocation(line: 187, column: 6, scope: !11779)
!11832 = !DILocation(line: 202, column: 27, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11830, file: !1785, line: 195, column: 9)
!11834 = !DILocation(line: 202, column: 48, scope: !11833)
!11835 = !DILocation(line: 203, column: 9, scope: !11833)
!11836 = !DILocation(line: 204, column: 11, scope: !11833)
!11837 = !DILocation(line: 205, column: 13, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11833, file: !1785, line: 205, column: 7)
!11839 = !DILocation(line: 205, column: 7, scope: !11833)
!11840 = !DILocation(line: 0, scope: !11830)
!11841 = !DILocation(line: 212, column: 18, scope: !11779)
!11842 = !DILocation(line: 214, column: 28, scope: !11779)
!11843 = !DILocation(line: 214, column: 16, scope: !11779)
!11844 = !DILocation(line: 215, column: 15, scope: !11779)
!11845 = !DILocation(line: 227, column: 11, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11779, file: !1785, line: 227, column: 6)
!11847 = !DILocation(line: 227, column: 6, scope: !11779)
!11848 = !DILocation(line: 228, column: 15, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11846, file: !1785, line: 227, column: 19)
!11850 = !DILocation(line: 228, column: 38, scope: !11849)
!11851 = !DILocation(line: 228, column: 24, scope: !11849)
!11852 = !DILocation(line: 229, column: 2, scope: !11849)
!11853 = !DILocation(line: 230, column: 24, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11846, file: !1785, line: 229, column: 9)
!11855 = !DILocation(line: 230, column: 15, scope: !11854)
!11856 = !DILocation(line: 0, scope: !11846)
!11857 = !DILocalVariable(name: "key", arg: 2, scope: !11858, file: !472, line: 190, type: !11790)
!11858 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !11859, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1707, retainedNodes: !11861)
!11859 = !DISubroutineType(types: !11860)
!11860 = !{null, !11810, !11790}
!11861 = !{!11862, !11857}
!11862 = !DILocalVariable(name: "l", arg: 1, scope: !11858, file: !472, line: 189, type: !11810)
!11863 = !DILocation(line: 0, scope: !11858, inlinedAt: !11864)
!11864 = distinct !DILocation(line: 232, column: 2, scope: !11779)
!11865 = !DILocalVariable(name: "key", arg: 1, scope: !11866, file: !5824, line: 84, type: !32)
!11866 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5824, file: !5824, line: 84, type: !5835, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1707, retainedNodes: !11867)
!11867 = !{!11865}
!11868 = !DILocation(line: 0, scope: !11866, inlinedAt: !11869)
!11869 = distinct !DILocation(line: 215, column: 2, scope: !11858, inlinedAt: !11864)
!11870 = !DILocation(line: 95, column: 2, scope: !11866, inlinedAt: !11869)
!11871 = !{i64 2221882}
!11872 = !DILocation(line: 234, column: 1, scope: !11779)
!11873 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1785, file: !1785, line: 236, type: !6925, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1707, retainedNodes: !11874)
!11874 = !{!11875, !11876}
!11875 = !DILocalVariable(name: "key", scope: !11873, file: !1785, line: 242, type: !11790)
!11876 = !DILocalVariable(name: "cyc", scope: !11873, file: !1785, line: 243, type: !132)
!11877 = !DILocation(line: 0, scope: !11807, inlinedAt: !11878)
!11878 = distinct !DILocation(line: 242, column: 25, scope: !11873)
!11879 = !DILocation(line: 55, column: 2, scope: !11816, inlinedAt: !11880)
!11880 = distinct !DILocation(line: 145, column: 10, scope: !11807, inlinedAt: !11878)
!11881 = !DILocation(line: 0, scope: !11816, inlinedAt: !11880)
!11882 = !DILocation(line: 0, scope: !11873)
!11883 = !DILocation(line: 243, column: 17, scope: !11873)
!11884 = !DILocation(line: 243, column: 29, scope: !11873)
!11885 = !DILocation(line: 243, column: 27, scope: !11873)
!11886 = !DILocation(line: 243, column: 43, scope: !11873)
!11887 = !DILocation(line: 243, column: 41, scope: !11873)
!11888 = !DILocation(line: 0, scope: !11858, inlinedAt: !11889)
!11889 = distinct !DILocation(line: 245, column: 2, scope: !11873)
!11890 = !DILocation(line: 0, scope: !11866, inlinedAt: !11891)
!11891 = distinct !DILocation(line: 215, column: 2, scope: !11858, inlinedAt: !11889)
!11892 = !DILocation(line: 95, column: 2, scope: !11866, inlinedAt: !11891)
!11893 = !DILocation(line: 246, column: 13, scope: !11873)
!11894 = !DILocation(line: 246, column: 2, scope: !11873)
!11895 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1785, file: !1785, line: 249, type: !6925, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1707, retainedNodes: !11896)
!11896 = !{!11897, !11898}
!11897 = !DILocalVariable(name: "key", scope: !11895, file: !1785, line: 251, type: !11790)
!11898 = !DILocalVariable(name: "ret", scope: !11895, file: !1785, line: 252, type: !132)
!11899 = !DILocation(line: 0, scope: !11807, inlinedAt: !11900)
!11900 = distinct !DILocation(line: 251, column: 25, scope: !11895)
!11901 = !DILocation(line: 55, column: 2, scope: !11816, inlinedAt: !11902)
!11902 = distinct !DILocation(line: 145, column: 10, scope: !11807, inlinedAt: !11900)
!11903 = !DILocation(line: 0, scope: !11816, inlinedAt: !11902)
!11904 = !DILocation(line: 0, scope: !11895)
!11905 = !DILocation(line: 252, column: 17, scope: !11895)
!11906 = !DILocation(line: 252, column: 29, scope: !11895)
!11907 = !DILocation(line: 252, column: 27, scope: !11895)
!11908 = !DILocation(line: 0, scope: !11858, inlinedAt: !11909)
!11909 = distinct !DILocation(line: 254, column: 2, scope: !11895)
!11910 = !DILocation(line: 0, scope: !11866, inlinedAt: !11911)
!11911 = distinct !DILocation(line: 215, column: 2, scope: !11858, inlinedAt: !11909)
!11912 = !DILocation(line: 95, column: 2, scope: !11866, inlinedAt: !11911)
!11913 = !DILocation(line: 255, column: 2, scope: !11895)
!11914 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1785, file: !1785, line: 258, type: !3249, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1707, retainedNodes: !473)
!11915 = !DILocation(line: 260, column: 6, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11914, file: !1785, line: 260, column: 6)
!11917 = !DILocation(line: 260, column: 16, scope: !11916)
!11918 = !DILocation(line: 260, column: 6, scope: !11914)
!11919 = !DILocation(line: 261, column: 17, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11916, file: !1785, line: 260, column: 34)
!11921 = !DILocation(line: 262, column: 2, scope: !11920)
!11922 = !DILocation(line: 263, column: 1, scope: !11914)
!11923 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1785, file: !1785, line: 265, type: !3249, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1707, retainedNodes: !473)
!11924 = !DILocation(line: 267, column: 16, scope: !11923)
!11925 = !DILocation(line: 268, column: 1, scope: !11923)
!11926 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11927, file: !11927, line: 9, type: !11928, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !11951)
!11927 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11928 = !DISubroutineType(types: !11929)
!11929 = !{!103, !11930, !163, !11950}
!11930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11931, size: 32)
!11931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11932)
!11932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1641, line: 60, size: 64, elements: !11933)
!11933 = !{!11934, !11949}
!11934 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11932, file: !1641, line: 69, baseType: !11935, size: 32)
!11935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11936, size: 32)
!11936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11937)
!11937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1641, line: 50, size: 64, elements: !11938)
!11938 = !{!11939, !11947, !11948}
!11939 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11937, file: !1641, line: 52, baseType: !11940, size: 32)
!11940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11941, size: 32)
!11941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11942)
!11942 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1652, line: 37, baseType: !11943)
!11943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1652, line: 32, size: 64, elements: !11944)
!11944 = !{!11945, !11946}
!11945 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11943, file: !1652, line: 34, baseType: !132, size: 32)
!11946 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11943, file: !1652, line: 36, baseType: !132, size: 32, offset: 32)
!11947 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11937, file: !1641, line: 54, baseType: !163, size: 8, offset: 32)
!11948 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11937, file: !1641, line: 56, baseType: !163, size: 8, offset: 40)
!11949 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11932, file: !1641, line: 71, baseType: !163, size: 8, offset: 32)
!11950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11935, size: 32)
!11951 = !{!11952, !11953, !11954}
!11952 = !DILocalVariable(name: "config", arg: 1, scope: !11926, file: !11927, line: 9, type: !11930)
!11953 = !DILocalVariable(name: "id", arg: 2, scope: !11926, file: !11927, line: 9, type: !163)
!11954 = !DILocalVariable(name: "state", arg: 3, scope: !11926, file: !11927, line: 10, type: !11950)
!11955 = !DILocation(line: 0, scope: !11926)
!11956 = !DILocation(line: 12, column: 20, scope: !11926)
!11957 = !DILocation(line: 13, column: 27, scope: !11926)
!11958 = !DILocation(line: 13, column: 42, scope: !11926)
!11959 = !DILocation(line: 13, column: 19, scope: !11926)
!11960 = !DILocation(line: 13, column: 16, scope: !11926)
!11961 = !DILocation(line: 13, column: 2, scope: !11926)
!11962 = distinct !{!11962, !11961, !11963}
!11963 = !DILocation(line: 19, column: 2, scope: !11926)
!11964 = !DILocation(line: 14, column: 23, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11966, file: !11927, line: 14, column: 7)
!11966 = distinct !DILexicalBlock(scope: !11926, file: !11927, line: 13, column: 54)
!11967 = !DILocation(line: 14, column: 10, scope: !11965)
!11968 = !DILocation(line: 18, column: 11, scope: !11966)
!11969 = !DILocation(line: 14, column: 7, scope: !11966)
!11970 = !DILocation(line: 22, column: 1, scope: !11926)
!11971 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1902, file: !1902, line: 193, type: !11972, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1820, retainedNodes: !11981)
!11972 = !DISubroutineType(types: !11973)
!11973 = !{!103, !11974, !163, !22}
!11974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11975, size: 32)
!11975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11976)
!11976 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1652, line: 37, baseType: !11977)
!11977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1652, line: 32, size: 64, elements: !11978)
!11978 = !{!11979, !11980}
!11979 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11977, file: !1652, line: 34, baseType: !132, size: 32)
!11980 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11977, file: !1652, line: 36, baseType: !132, size: 32, offset: 32)
!11981 = !{!11982, !11983, !11984, !11985, !11986, !11987, !11988, !11989, !11991}
!11982 = !DILocalVariable(name: "pins", arg: 1, scope: !11971, file: !1902, line: 193, type: !11974)
!11983 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11971, file: !1902, line: 193, type: !163)
!11984 = !DILocalVariable(name: "reg", arg: 3, scope: !11971, file: !1902, line: 194, type: !22)
!11985 = !DILocalVariable(name: "pin", scope: !11971, file: !1902, line: 196, type: !132)
!11986 = !DILocalVariable(name: "mux", scope: !11971, file: !1902, line: 196, type: !132)
!11987 = !DILocalVariable(name: "pin_cgf", scope: !11971, file: !1902, line: 197, type: !132)
!11988 = !DILocalVariable(name: "ret", scope: !11971, file: !1902, line: 198, type: !103)
!11989 = !DILocalVariable(name: "i", scope: !11990, file: !1902, line: 209, type: !163)
!11990 = distinct !DILexicalBlock(scope: !11971, file: !1902, line: 209, column: 2)
!11991 = !DILocalVariable(name: "gpio_out", scope: !11992, file: !1902, line: 239, type: !132)
!11992 = distinct !DILexicalBlock(scope: !11993, file: !1902, line: 238, column: 55)
!11993 = distinct !DILexicalBlock(scope: !11994, file: !1902, line: 238, column: 14)
!11994 = distinct !DILexicalBlock(scope: !11995, file: !1902, line: 236, column: 14)
!11995 = distinct !DILexicalBlock(scope: !11996, file: !1902, line: 234, column: 7)
!11996 = distinct !DILexicalBlock(scope: !11997, file: !1902, line: 209, column: 41)
!11997 = distinct !DILexicalBlock(scope: !11990, file: !1902, line: 209, column: 2)
!11998 = !DILocation(line: 0, scope: !11971)
!11999 = !DILocation(line: 0, scope: !11990)
!12000 = !DILocation(line: 209, column: 25, scope: !11997)
!12001 = !DILocation(line: 209, column: 2, scope: !11990)
!12002 = distinct !{!12002, !12001, !12003}
!12003 = !DILocation(line: 259, column: 2, scope: !11990)
!12004 = !DILocation(line: 210, column: 17, scope: !11996)
!12005 = !DILocation(line: 234, column: 7, scope: !11995)
!12006 = !DILocation(line: 234, column: 33, scope: !11995)
!12007 = !DILocation(line: 234, column: 7, scope: !11996)
!12008 = !DILocation(line: 235, column: 22, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !11995, file: !1902, line: 234, column: 49)
!12010 = !DILocation(line: 235, column: 29, scope: !12009)
!12011 = !DILocation(line: 236, column: 3, scope: !12009)
!12012 = !DILocation(line: 236, column: 14, scope: !11995)
!12013 = !DILocation(line: 239, column: 32, scope: !11992)
!12014 = !DILocation(line: 0, scope: !11992)
!12015 = !DILocation(line: 241, column: 8, scope: !11992)
!12016 = !DILocation(line: 246, column: 3, scope: !11992)
!12017 = !DILocation(line: 252, column: 9, scope: !11996)
!12018 = !DILocation(line: 255, column: 9, scope: !11996)
!12019 = !DILocation(line: 256, column: 11, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !11996, file: !1902, line: 256, column: 7)
!12021 = !DILocation(line: 209, column: 37, scope: !11997)
!12022 = !DILocation(line: 256, column: 7, scope: !11996)
!12023 = !DILocation(line: 262, column: 1, scope: !11971)
!12024 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1902, file: !1902, line: 176, type: !12025, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1820, retainedNodes: !12027)
!12025 = !DISubroutineType(types: !12026)
!12026 = !{!103, !132, !132, !132}
!12027 = !{!12028, !12029, !12030, !12031}
!12028 = !DILocalVariable(name: "pin", arg: 1, scope: !12024, file: !1902, line: 176, type: !132)
!12029 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12024, file: !1902, line: 176, type: !132)
!12030 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12024, file: !1902, line: 176, type: !132)
!12031 = !DILocalVariable(name: "port_device", scope: !12024, file: !1902, line: 178, type: !1832)
!12032 = !DILocation(line: 0, scope: !12024)
!12033 = !DILocation(line: 180, column: 22, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12024, file: !1902, line: 180, column: 6)
!12035 = !DILocation(line: 180, column: 6, scope: !12024)
!12036 = !DILocation(line: 180, column: 6, scope: !12034)
!12037 = !DILocation(line: 184, column: 16, scope: !12024)
!12038 = !DILocation(line: 186, column: 19, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12024, file: !1902, line: 186, column: 6)
!12040 = !DILocation(line: 186, column: 28, scope: !12039)
!12041 = !DILocation(line: 186, column: 33, scope: !12039)
!12042 = !DILocation(line: 186, column: 6, scope: !12024)
!12043 = !DILocation(line: 190, column: 43, scope: !12024)
!12044 = !DILocation(line: 190, column: 9, scope: !12024)
!12045 = !DILocation(line: 190, column: 2, scope: !12024)
!12046 = !DILocation(line: 191, column: 1, scope: !12024)
!12047 = distinct !DISubprogram(name: "device_is_ready", scope: !6685, file: !6685, line: 47, type: !12048, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1820, retainedNodes: !12050)
!12048 = !DISubroutineType(types: !12049)
!12049 = !{!166, !1832}
!12050 = !{!12051}
!12051 = !DILocalVariable(name: "dev", arg: 1, scope: !12047, file: !6685, line: 47, type: !1832)
!12052 = !DILocation(line: 0, scope: !12047)
!12053 = !DILocation(line: 55, column: 2, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12047, file: !6685, line: 55, column: 2)
!12055 = !{i64 2149459135}
!12056 = !DILocation(line: 56, column: 9, scope: !12047)
!12057 = !DILocation(line: 56, column: 2, scope: !12047)
!12058 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !12048, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1820, retainedNodes: !12059)
!12059 = !{!12060}
!12060 = !DILocalVariable(name: "dev", arg: 1, scope: !12058, file: !152, line: 730, type: !1832)
!12061 = !DILocation(line: 0, scope: !12058)
!12062 = !DILocation(line: 732, column: 9, scope: !12058)
!12063 = !DILocation(line: 732, column: 2, scope: !12058)
!12064 = distinct !DISubprogram(name: "SystemInit", scope: !1951, file: !1951, line: 167, type: !3249, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !473)
!12065 = !DILocation(line: 182, column: 1, scope: !12064)
!12066 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1951, file: !1951, line: 220, type: !3249, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !12067)
!12067 = !{!12068, !12069, !12070, !12071, !12072}
!12068 = !DILocalVariable(name: "tmp", scope: !12066, file: !1951, line: 222, type: !132)
!12069 = !DILocalVariable(name: "pllvco", scope: !12066, file: !1951, line: 222, type: !132)
!12070 = !DILocalVariable(name: "pllp", scope: !12066, file: !1951, line: 222, type: !132)
!12071 = !DILocalVariable(name: "pllsource", scope: !12066, file: !1951, line: 222, type: !132)
!12072 = !DILocalVariable(name: "pllm", scope: !12066, file: !1951, line: 222, type: !132)
!12073 = !DILocation(line: 0, scope: !12066)
!12074 = !DILocation(line: 225, column: 14, scope: !12066)
!12075 = !DILocation(line: 225, column: 19, scope: !12066)
!12076 = !DILocation(line: 227, column: 3, scope: !12066)
!12077 = !DILocation(line: 240, column: 25, scope: !12078)
!12078 = distinct !DILexicalBlock(scope: !12066, file: !1951, line: 228, column: 3)
!12079 = !DILocation(line: 241, column: 19, scope: !12078)
!12080 = !DILocation(line: 241, column: 27, scope: !12078)
!12081 = !DILocation(line: 0, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12078, file: !1951, line: 243, column: 11)
!12083 = !DILocation(line: 254, column: 22, scope: !12078)
!12084 = !DILocation(line: 254, column: 62, scope: !12078)
!12085 = !DILocation(line: 255, column: 31, scope: !12078)
!12086 = !DILocation(line: 256, column: 7, scope: !12078)
!12087 = !DILocation(line: 0, scope: !12078)
!12088 = !DILocation(line: 263, column: 30, scope: !12066)
!12089 = !DILocation(line: 263, column: 52, scope: !12066)
!12090 = !DILocation(line: 263, column: 9, scope: !12066)
!12091 = !DILocation(line: 265, column: 19, scope: !12066)
!12092 = !DILocation(line: 266, column: 1, scope: !12066)
!12093 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12094, file: !12094, line: 200, type: !12095, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !473)
!12094 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12095 = !DISubroutineType(types: !12096)
!12096 = !{!12097}
!12097 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3064, line: 44, baseType: !3063)
!12098 = !DILocation(line: 202, column: 3, scope: !12093)
!12099 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12094, file: !12094, line: 219, type: !12100, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !12125)
!12100 = !DISubroutineType(types: !12101)
!12101 = !{!12097, !12102}
!12102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12103, size: 32)
!12103 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12104, line: 70, baseType: !12105)
!12104 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12105 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12104, line: 49, size: 416, elements: !12106)
!12106 = !{!12107, !12108, !12109, !12110, !12111, !12112, !12113}
!12107 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12105, file: !12104, line: 51, baseType: !132, size: 32)
!12108 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12105, file: !12104, line: 54, baseType: !132, size: 32, offset: 32)
!12109 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12105, file: !12104, line: 57, baseType: !132, size: 32, offset: 64)
!12110 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12105, file: !12104, line: 60, baseType: !132, size: 32, offset: 96)
!12111 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12105, file: !12104, line: 63, baseType: !132, size: 32, offset: 128)
!12112 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12105, file: !12104, line: 66, baseType: !132, size: 32, offset: 160)
!12113 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12105, file: !12104, line: 69, baseType: !12114, size: 224, offset: 192)
!12114 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12115, line: 73, baseType: !12116)
!12115 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12116 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12115, line: 45, size: 224, elements: !12117)
!12117 = !{!12118, !12119, !12120, !12121, !12122, !12123, !12124}
!12118 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12116, file: !12115, line: 47, baseType: !132, size: 32)
!12119 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12116, file: !12115, line: 50, baseType: !132, size: 32, offset: 32)
!12120 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12116, file: !12115, line: 53, baseType: !132, size: 32, offset: 64)
!12121 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12116, file: !12115, line: 56, baseType: !132, size: 32, offset: 96)
!12122 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12116, file: !12115, line: 60, baseType: !132, size: 32, offset: 128)
!12123 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12116, file: !12115, line: 63, baseType: !132, size: 32, offset: 160)
!12124 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !12116, file: !12115, line: 68, baseType: !132, size: 32, offset: 192)
!12125 = !{!12126, !12127, !12128, !12129, !12133}
!12126 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12099, file: !12094, line: 219, type: !12102)
!12127 = !DILocalVariable(name: "tickstart", scope: !12099, file: !12094, line: 221, type: !132)
!12128 = !DILocalVariable(name: "pll_config", scope: !12099, file: !12094, line: 221, type: !132)
!12129 = !DILocalVariable(name: "pwrclkchanged", scope: !12130, file: !12094, line: 391, type: !12132)
!12130 = distinct !DILexicalBlock(scope: !12131, file: !12094, line: 390, column: 3)
!12131 = distinct !DILexicalBlock(scope: !12099, file: !12094, line: 389, column: 6)
!12132 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !801, line: 188, baseType: !3070)
!12133 = !DILocalVariable(name: "tmpreg", scope: !12134, file: !12094, line: 400, type: !131)
!12134 = distinct !DILexicalBlock(scope: !12135, file: !12094, line: 400, column: 7)
!12135 = distinct !DILexicalBlock(scope: !12136, file: !12094, line: 399, column: 5)
!12136 = distinct !DILexicalBlock(scope: !12130, file: !12094, line: 398, column: 8)
!12137 = !DILocation(line: 0, scope: !12099)
!12138 = !DILocation(line: 224, column: 24, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12099, file: !12094, line: 224, column: 6)
!12140 = !DILocation(line: 224, column: 6, scope: !12099)
!12141 = !DILocation(line: 232, column: 27, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12099, file: !12094, line: 232, column: 6)
!12143 = !DILocation(line: 232, column: 43, scope: !12142)
!12144 = !DILocation(line: 232, column: 69, scope: !12142)
!12145 = !DILocation(line: 232, column: 6, scope: !12099)
!12146 = !DILocation(line: 237, column: 9, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12148, file: !12094, line: 237, column: 8)
!12148 = distinct !DILexicalBlock(scope: !12142, file: !12094, line: 233, column: 3)
!12149 = !DILocation(line: 237, column: 39, scope: !12147)
!12150 = !DILocation(line: 237, column: 60, scope: !12147)
!12151 = !DILocation(line: 238, column: 9, scope: !12147)
!12152 = !DILocation(line: 238, column: 39, scope: !12147)
!12153 = !DILocation(line: 238, column: 60, scope: !12147)
!12154 = !DILocation(line: 238, column: 70, scope: !12147)
!12155 = !DILocation(line: 238, column: 78, scope: !12147)
!12156 = !DILocation(line: 238, column: 100, scope: !12147)
!12157 = !DILocation(line: 237, column: 8, scope: !12148)
!12158 = !DILocation(line: 240, column: 11, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !12160, file: !12094, line: 240, column: 10)
!12160 = distinct !DILexicalBlock(scope: !12147, file: !12094, line: 239, column: 5)
!12161 = !DILocation(line: 240, column: 57, scope: !12159)
!12162 = !DILocation(line: 240, column: 80, scope: !12159)
!12163 = !DILocation(line: 240, column: 89, scope: !12159)
!12164 = !DILocation(line: 240, column: 10, scope: !12160)
!12165 = !DILocation(line: 248, column: 7, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12167, file: !12094, line: 248, column: 7)
!12167 = distinct !DILexicalBlock(scope: !12168, file: !12094, line: 248, column: 7)
!12168 = distinct !DILexicalBlock(scope: !12147, file: !12094, line: 246, column: 5)
!12169 = !DILocation(line: 248, column: 7, scope: !12167)
!12170 = !DILocation(line: 248, column: 7, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12166, file: !12094, line: 248, column: 7)
!12172 = !DILocation(line: 248, column: 7, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12174, file: !12094, line: 248, column: 7)
!12174 = distinct !DILexicalBlock(scope: !12166, file: !12094, line: 248, column: 7)
!12175 = !DILocation(line: 248, column: 7, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12174, file: !12094, line: 248, column: 7)
!12177 = !DILocation(line: 0, scope: !12166)
!12178 = !DILocation(line: 251, column: 30, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12168, file: !12094, line: 251, column: 10)
!12180 = !DILocation(line: 251, column: 40, scope: !12179)
!12181 = !DILocation(line: 0, scope: !12179)
!12182 = !DILocation(line: 251, column: 10, scope: !12168)
!12183 = !DILocation(line: 257, column: 15, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12179, file: !12094, line: 252, column: 7)
!12185 = !DILocation(line: 257, column: 51, scope: !12184)
!12186 = !DILocation(line: 257, column: 9, scope: !12184)
!12187 = !DILocation(line: 259, column: 15, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12189, file: !12094, line: 259, column: 14)
!12189 = distinct !DILexicalBlock(scope: !12184, file: !12094, line: 258, column: 9)
!12190 = !DILocation(line: 259, column: 29, scope: !12188)
!12191 = !DILocation(line: 259, column: 43, scope: !12188)
!12192 = !DILocation(line: 259, column: 14, scope: !12189)
!12193 = distinct !{!12193, !12186, !12194}
!12194 = !DILocation(line: 263, column: 9, scope: !12184)
!12195 = !DILocation(line: 271, column: 15, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12179, file: !12094, line: 266, column: 7)
!12197 = !DILocation(line: 271, column: 9, scope: !12196)
!12198 = !DILocation(line: 273, column: 15, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12200, file: !12094, line: 273, column: 14)
!12200 = distinct !DILexicalBlock(scope: !12196, file: !12094, line: 272, column: 9)
!12201 = !DILocation(line: 273, column: 29, scope: !12199)
!12202 = !DILocation(line: 273, column: 43, scope: !12199)
!12203 = !DILocation(line: 273, column: 14, scope: !12200)
!12204 = distinct !{!12204, !12197, !12205}
!12205 = !DILocation(line: 277, column: 9, scope: !12196)
!12206 = !DILocation(line: 282, column: 27, scope: !12207)
!12207 = distinct !DILexicalBlock(scope: !12099, file: !12094, line: 282, column: 6)
!12208 = !DILocation(line: 282, column: 43, scope: !12207)
!12209 = !DILocation(line: 282, column: 69, scope: !12207)
!12210 = !DILocation(line: 282, column: 6, scope: !12099)
!12211 = !DILocation(line: 289, column: 9, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12213, file: !12094, line: 289, column: 8)
!12213 = distinct !DILexicalBlock(scope: !12207, file: !12094, line: 283, column: 3)
!12214 = !DILocation(line: 289, column: 39, scope: !12212)
!12215 = !DILocation(line: 289, column: 60, scope: !12212)
!12216 = !DILocation(line: 290, column: 9, scope: !12212)
!12217 = !DILocation(line: 290, column: 39, scope: !12212)
!12218 = !DILocation(line: 290, column: 60, scope: !12212)
!12219 = !DILocation(line: 290, column: 70, scope: !12212)
!12220 = !DILocation(line: 290, column: 78, scope: !12212)
!12221 = !DILocation(line: 290, column: 100, scope: !12212)
!12222 = !DILocation(line: 289, column: 8, scope: !12213)
!12223 = !DILocation(line: 293, column: 11, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12225, file: !12094, line: 293, column: 10)
!12225 = distinct !DILexicalBlock(scope: !12212, file: !12094, line: 291, column: 5)
!12226 = !DILocation(line: 293, column: 57, scope: !12224)
!12227 = !DILocation(line: 293, column: 80, scope: !12224)
!12228 = !DILocation(line: 293, column: 89, scope: !12224)
!12229 = !DILocation(line: 293, column: 10, scope: !12225)
!12230 = !DILocation(line: 307, column: 30, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !12232, file: !12094, line: 307, column: 10)
!12232 = distinct !DILexicalBlock(scope: !12212, file: !12094, line: 305, column: 5)
!12233 = !DILocation(line: 307, column: 39, scope: !12231)
!12234 = !DILocation(line: 307, column: 10, scope: !12232)
!12235 = !DILocation(line: 310, column: 9, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12231, file: !12094, line: 308, column: 7)
!12237 = !DILocation(line: 313, column: 21, scope: !12236)
!12238 = !DILocation(line: 316, column: 9, scope: !12236)
!12239 = !DILocation(line: 316, column: 15, scope: !12236)
!12240 = !DILocation(line: 316, column: 51, scope: !12236)
!12241 = !DILocation(line: 318, column: 15, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12243, file: !12094, line: 318, column: 14)
!12243 = distinct !DILexicalBlock(scope: !12236, file: !12094, line: 317, column: 9)
!12244 = !DILocation(line: 318, column: 29, scope: !12242)
!12245 = !DILocation(line: 318, column: 43, scope: !12242)
!12246 = !DILocation(line: 318, column: 14, scope: !12243)
!12247 = distinct !{!12247, !12238, !12248}
!12248 = !DILocation(line: 322, column: 9, scope: !12236)
!12249 = !DILocation(line: 330, column: 9, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12231, file: !12094, line: 328, column: 7)
!12251 = !DILocation(line: 333, column: 21, scope: !12250)
!12252 = !DILocation(line: 336, column: 9, scope: !12250)
!12253 = !DILocation(line: 336, column: 15, scope: !12250)
!12254 = !DILocation(line: 338, column: 15, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12256, file: !12094, line: 338, column: 14)
!12256 = distinct !DILexicalBlock(scope: !12250, file: !12094, line: 337, column: 9)
!12257 = !DILocation(line: 338, column: 29, scope: !12255)
!12258 = !DILocation(line: 338, column: 43, scope: !12255)
!12259 = !DILocation(line: 338, column: 14, scope: !12256)
!12260 = distinct !{!12260, !12252, !12261}
!12261 = !DILocation(line: 342, column: 9, scope: !12250)
!12262 = !DILocation(line: 0, scope: !12212)
!12263 = !DILocation(line: 347, column: 27, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12099, file: !12094, line: 347, column: 6)
!12265 = !DILocation(line: 347, column: 43, scope: !12264)
!12266 = !DILocation(line: 347, column: 69, scope: !12264)
!12267 = !DILocation(line: 347, column: 6, scope: !12099)
!12268 = !DILocation(line: 353, column: 28, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12270, file: !12094, line: 353, column: 8)
!12270 = distinct !DILexicalBlock(scope: !12264, file: !12094, line: 348, column: 3)
!12271 = !DILocation(line: 353, column: 37, scope: !12269)
!12272 = !DILocation(line: 353, column: 8, scope: !12270)
!12273 = !DILocation(line: 356, column: 7, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12269, file: !12094, line: 354, column: 5)
!12275 = !DILocation(line: 359, column: 19, scope: !12274)
!12276 = !DILocation(line: 362, column: 7, scope: !12274)
!12277 = !DILocation(line: 362, column: 13, scope: !12274)
!12278 = !DILocation(line: 362, column: 49, scope: !12274)
!12279 = !DILocation(line: 364, column: 13, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12281, file: !12094, line: 364, column: 12)
!12281 = distinct !DILexicalBlock(scope: !12274, file: !12094, line: 363, column: 7)
!12282 = !DILocation(line: 364, column: 27, scope: !12280)
!12283 = !DILocation(line: 364, column: 41, scope: !12280)
!12284 = !DILocation(line: 364, column: 12, scope: !12281)
!12285 = distinct !{!12285, !12276, !12286}
!12286 = !DILocation(line: 368, column: 7, scope: !12274)
!12287 = !DILocation(line: 373, column: 7, scope: !12288)
!12288 = distinct !DILexicalBlock(scope: !12269, file: !12094, line: 371, column: 5)
!12289 = !DILocation(line: 376, column: 19, scope: !12288)
!12290 = !DILocation(line: 379, column: 7, scope: !12288)
!12291 = !DILocation(line: 379, column: 13, scope: !12288)
!12292 = !DILocation(line: 381, column: 13, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12294, file: !12094, line: 381, column: 12)
!12294 = distinct !DILexicalBlock(scope: !12288, file: !12094, line: 380, column: 7)
!12295 = !DILocation(line: 381, column: 27, scope: !12293)
!12296 = !DILocation(line: 381, column: 41, scope: !12293)
!12297 = !DILocation(line: 381, column: 12, scope: !12294)
!12298 = distinct !{!12298, !12290, !12299}
!12299 = !DILocation(line: 385, column: 7, scope: !12288)
!12300 = !DILocation(line: 389, column: 27, scope: !12131)
!12301 = !DILocation(line: 389, column: 43, scope: !12131)
!12302 = !DILocation(line: 389, column: 69, scope: !12131)
!12303 = !DILocation(line: 389, column: 6, scope: !12099)
!12304 = !DILocation(line: 0, scope: !12130)
!12305 = !DILocation(line: 398, column: 8, scope: !12136)
!12306 = !DILocation(line: 398, column: 8, scope: !12130)
!12307 = !DILocation(line: 400, column: 7, scope: !12134)
!12308 = !DILocation(line: 400, column: 7, scope: !12135)
!12309 = !DILocation(line: 402, column: 5, scope: !12135)
!12310 = !DILocation(line: 404, column: 8, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12130, file: !12094, line: 404, column: 8)
!12312 = !DILocation(line: 404, column: 8, scope: !12130)
!12313 = !DILocation(line: 407, column: 7, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12311, file: !12094, line: 405, column: 5)
!12315 = !DILocation(line: 410, column: 19, scope: !12314)
!12316 = !DILocation(line: 412, column: 7, scope: !12314)
!12317 = !DILocation(line: 412, column: 13, scope: !12314)
!12318 = !DILocation(line: 414, column: 13, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12320, file: !12094, line: 414, column: 12)
!12320 = distinct !DILexicalBlock(scope: !12314, file: !12094, line: 413, column: 7)
!12321 = !DILocation(line: 414, column: 27, scope: !12319)
!12322 = !DILocation(line: 414, column: 40, scope: !12319)
!12323 = !DILocation(line: 414, column: 12, scope: !12320)
!12324 = distinct !{!12324, !12316, !12325}
!12325 = !DILocation(line: 418, column: 7, scope: !12314)
!12326 = !DILocation(line: 422, column: 5, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12328, file: !12094, line: 422, column: 5)
!12328 = distinct !DILexicalBlock(scope: !12130, file: !12094, line: 422, column: 5)
!12329 = !DILocation(line: 422, column: 5, scope: !12328)
!12330 = !DILocation(line: 422, column: 5, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12327, file: !12094, line: 422, column: 5)
!12332 = !DILocation(line: 422, column: 5, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12334, file: !12094, line: 422, column: 5)
!12334 = distinct !DILexicalBlock(scope: !12327, file: !12094, line: 422, column: 5)
!12335 = !DILocation(line: 422, column: 5, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12334, file: !12094, line: 422, column: 5)
!12337 = !DILocation(line: 0, scope: !12327)
!12338 = !DILocation(line: 424, column: 28, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12130, file: !12094, line: 424, column: 8)
!12340 = !DILocation(line: 424, column: 38, scope: !12339)
!12341 = !DILocation(line: 0, scope: !12339)
!12342 = !DILocation(line: 424, column: 8, scope: !12130)
!12343 = !DILocation(line: 430, column: 13, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12339, file: !12094, line: 425, column: 5)
!12345 = !DILocation(line: 430, column: 49, scope: !12344)
!12346 = !DILocation(line: 430, column: 7, scope: !12344)
!12347 = !DILocation(line: 432, column: 13, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12349, file: !12094, line: 432, column: 12)
!12349 = distinct !DILexicalBlock(scope: !12344, file: !12094, line: 431, column: 7)
!12350 = !DILocation(line: 432, column: 27, scope: !12348)
!12351 = !DILocation(line: 432, column: 41, scope: !12348)
!12352 = !DILocation(line: 432, column: 12, scope: !12349)
!12353 = distinct !{!12353, !12346, !12354}
!12354 = !DILocation(line: 436, column: 7, scope: !12344)
!12355 = !DILocation(line: 444, column: 13, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12339, file: !12094, line: 439, column: 5)
!12357 = !DILocation(line: 444, column: 7, scope: !12356)
!12358 = !DILocation(line: 446, column: 13, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12360, file: !12094, line: 446, column: 12)
!12360 = distinct !DILexicalBlock(scope: !12356, file: !12094, line: 445, column: 7)
!12361 = !DILocation(line: 446, column: 27, scope: !12359)
!12362 = !DILocation(line: 446, column: 41, scope: !12359)
!12363 = !DILocation(line: 446, column: 12, scope: !12360)
!12364 = distinct !{!12364, !12357, !12365}
!12365 = !DILocation(line: 450, column: 7, scope: !12356)
!12366 = !DILocation(line: 454, column: 8, scope: !12130)
!12367 = !DILocation(line: 456, column: 7, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12369, file: !12094, line: 455, column: 5)
!12369 = distinct !DILexicalBlock(scope: !12130, file: !12094, line: 454, column: 8)
!12370 = !DILocation(line: 457, column: 5, scope: !12368)
!12371 = !DILocation(line: 462, column: 31, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12099, file: !12094, line: 462, column: 7)
!12373 = !DILocation(line: 462, column: 41, scope: !12372)
!12374 = !DILocation(line: 462, column: 7, scope: !12099)
!12375 = !DILocation(line: 465, column: 8, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12377, file: !12094, line: 465, column: 8)
!12377 = distinct !DILexicalBlock(scope: !12372, file: !12094, line: 463, column: 3)
!12378 = !DILocation(line: 465, column: 38, scope: !12376)
!12379 = !DILocation(line: 465, column: 8, scope: !12377)
!12380 = !DILocation(line: 467, column: 44, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12382, file: !12094, line: 467, column: 10)
!12382 = distinct !DILexicalBlock(scope: !12376, file: !12094, line: 466, column: 5)
!12383 = !DILocation(line: 0, scope: !12381)
!12384 = !DILocation(line: 467, column: 10, scope: !12382)
!12385 = !DILocation(line: 483, column: 15, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12381, file: !12094, line: 468, column: 7)
!12387 = !DILocation(line: 483, column: 9, scope: !12386)
!12388 = !DILocation(line: 485, column: 15, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12390, file: !12094, line: 485, column: 14)
!12390 = distinct !DILexicalBlock(scope: !12386, file: !12094, line: 484, column: 9)
!12391 = !DILocation(line: 485, column: 29, scope: !12389)
!12392 = !DILocation(line: 485, column: 43, scope: !12389)
!12393 = !DILocation(line: 485, column: 14, scope: !12390)
!12394 = distinct !{!12394, !12387, !12395}
!12395 = !DILocation(line: 489, column: 9, scope: !12386)
!12396 = !DILocation(line: 492, column: 9, scope: !12386)
!12397 = !DILocation(line: 498, column: 9, scope: !12386)
!12398 = !DILocation(line: 501, column: 21, scope: !12386)
!12399 = !DILocation(line: 504, column: 9, scope: !12386)
!12400 = !DILocation(line: 504, column: 15, scope: !12386)
!12401 = !DILocation(line: 504, column: 51, scope: !12386)
!12402 = !DILocation(line: 506, column: 15, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12404, file: !12094, line: 506, column: 14)
!12404 = distinct !DILexicalBlock(scope: !12386, file: !12094, line: 505, column: 9)
!12405 = !DILocation(line: 506, column: 29, scope: !12403)
!12406 = !DILocation(line: 506, column: 43, scope: !12403)
!12407 = !DILocation(line: 506, column: 14, scope: !12404)
!12408 = distinct !{!12408, !12399, !12409}
!12409 = !DILocation(line: 510, column: 9, scope: !12386)
!12410 = !DILocation(line: 521, column: 15, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12381, file: !12094, line: 513, column: 7)
!12412 = !DILocation(line: 521, column: 9, scope: !12411)
!12413 = !DILocation(line: 523, column: 15, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12415, file: !12094, line: 523, column: 14)
!12415 = distinct !DILexicalBlock(scope: !12411, file: !12094, line: 522, column: 9)
!12416 = !DILocation(line: 523, column: 29, scope: !12414)
!12417 = !DILocation(line: 523, column: 43, scope: !12414)
!12418 = !DILocation(line: 523, column: 14, scope: !12415)
!12419 = distinct !{!12419, !12412, !12420}
!12420 = !DILocation(line: 527, column: 9, scope: !12411)
!12421 = !DILocation(line: 533, column: 44, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12423, file: !12094, line: 533, column: 10)
!12423 = distinct !DILexicalBlock(scope: !12376, file: !12094, line: 531, column: 5)
!12424 = !DILocation(line: 533, column: 10, scope: !12423)
!12425 = !DILocation(line: 540, column: 27, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12422, file: !12094, line: 538, column: 7)
!12427 = !DILocation(line: 543, column: 14, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12426, file: !12094, line: 542, column: 13)
!12429 = !DILocation(line: 543, column: 81, scope: !12428)
!12430 = !DILocation(line: 543, column: 55, scope: !12428)
!12431 = !DILocation(line: 543, column: 92, scope: !12428)
!12432 = !DILocation(line: 544, column: 14, scope: !12428)
!12433 = !DILocation(line: 544, column: 80, scope: !12428)
!12434 = !DILocation(line: 544, column: 53, scope: !12428)
!12435 = !DILocation(line: 544, column: 111, scope: !12428)
!12436 = !DILocation(line: 545, column: 14, scope: !12428)
!12437 = !DILocation(line: 545, column: 80, scope: !12428)
!12438 = !DILocation(line: 545, column: 86, scope: !12428)
!12439 = !DILocation(line: 545, column: 53, scope: !12428)
!12440 = !DILocation(line: 545, column: 111, scope: !12428)
!12441 = !DILocation(line: 546, column: 14, scope: !12428)
!12442 = !DILocation(line: 546, column: 82, scope: !12428)
!12443 = !DILocation(line: 546, column: 101, scope: !12428)
!12444 = !DILocation(line: 546, column: 53, scope: !12428)
!12445 = !DILocation(line: 546, column: 126, scope: !12428)
!12446 = !DILocation(line: 547, column: 14, scope: !12428)
!12447 = !DILocation(line: 547, column: 80, scope: !12428)
!12448 = !DILocation(line: 547, column: 85, scope: !12428)
!12449 = !DILocation(line: 547, column: 53, scope: !12428)
!12450 = !DILocation(line: 547, column: 111, scope: !12428)
!12451 = !DILocation(line: 548, column: 14, scope: !12428)
!12452 = !DILocation(line: 548, column: 80, scope: !12428)
!12453 = !DILocation(line: 548, column: 85, scope: !12428)
!12454 = !DILocation(line: 548, column: 53, scope: !12428)
!12455 = !DILocation(line: 542, column: 13, scope: !12426)
!12456 = !DILocation(line: 563, column: 3, scope: !12099)
!12457 = !DILocation(line: 564, column: 1, scope: !12099)
!12458 = !DISubprogram(name: "HAL_GetTick", scope: !12459, file: !12459, line: 234, type: !6925, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!12459 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12460 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12094, file: !12094, line: 591, type: !12461, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !12472)
!12461 = !DISubroutineType(types: !12462)
!12462 = !{!12097, !12463, !132}
!12463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12464, size: 32)
!12464 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12104, line: 92, baseType: !12465)
!12465 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12104, line: 75, size: 160, elements: !12466)
!12466 = !{!12467, !12468, !12469, !12470, !12471}
!12467 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12465, file: !12104, line: 77, baseType: !132, size: 32)
!12468 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12465, file: !12104, line: 80, baseType: !132, size: 32, offset: 32)
!12469 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12465, file: !12104, line: 83, baseType: !132, size: 32, offset: 64)
!12470 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12465, file: !12104, line: 86, baseType: !132, size: 32, offset: 96)
!12471 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12465, file: !12104, line: 89, baseType: !132, size: 32, offset: 128)
!12472 = !{!12473, !12474, !12475}
!12473 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12460, file: !12094, line: 591, type: !12463)
!12474 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12460, file: !12094, line: 591, type: !132)
!12475 = !DILocalVariable(name: "tickstart", scope: !12460, file: !12094, line: 593, type: !132)
!12476 = !DILocation(line: 0, scope: !12460)
!12477 = !DILocation(line: 596, column: 24, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12460, file: !12094, line: 596, column: 6)
!12479 = !DILocation(line: 596, column: 6, scope: !12460)
!12480 = !DILocation(line: 610, column: 17, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12460, file: !12094, line: 610, column: 6)
!12482 = !DILocation(line: 610, column: 15, scope: !12481)
!12483 = !DILocation(line: 610, column: 6, scope: !12460)
!12484 = !DILocation(line: 613, column: 5, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12481, file: !12094, line: 611, column: 3)
!12486 = !DILocation(line: 617, column: 8, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !12485, file: !12094, line: 617, column: 8)
!12488 = !DILocation(line: 617, column: 34, scope: !12487)
!12489 = !DILocation(line: 617, column: 8, scope: !12485)
!12490 = !DILocation(line: 624, column: 27, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12460, file: !12094, line: 624, column: 6)
!12492 = !DILocation(line: 624, column: 38, scope: !12491)
!12493 = !DILocation(line: 624, column: 60, scope: !12491)
!12494 = !DILocation(line: 624, column: 6, scope: !12460)
!12495 = !DILocation(line: 628, column: 40, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !12497, file: !12094, line: 628, column: 8)
!12497 = distinct !DILexicalBlock(scope: !12491, file: !12094, line: 625, column: 3)
!12498 = !DILocation(line: 628, column: 63, scope: !12496)
!12499 = !DILocation(line: 628, column: 8, scope: !12497)
!12500 = !DILocation(line: 630, column: 7, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12496, file: !12094, line: 629, column: 5)
!12502 = !DILocation(line: 633, column: 29, scope: !12503)
!12503 = distinct !DILexicalBlock(scope: !12497, file: !12094, line: 633, column: 8)
!12504 = !DILocation(line: 631, column: 5, scope: !12501)
!12505 = !DILocation(line: 633, column: 40, scope: !12503)
!12506 = !DILocation(line: 633, column: 63, scope: !12503)
!12507 = !DILocation(line: 633, column: 8, scope: !12497)
!12508 = !DILocation(line: 635, column: 7, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12503, file: !12094, line: 634, column: 5)
!12510 = !DILocation(line: 636, column: 5, scope: !12509)
!12511 = !DILocation(line: 639, column: 5, scope: !12497)
!12512 = !DILocation(line: 643, column: 27, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12460, file: !12094, line: 643, column: 6)
!12514 = !DILocation(line: 640, column: 3, scope: !12497)
!12515 = !DILocation(line: 643, column: 38, scope: !12513)
!12516 = !DILocation(line: 643, column: 62, scope: !12513)
!12517 = !DILocation(line: 643, column: 6, scope: !12460)
!12518 = !DILocation(line: 648, column: 27, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12520, file: !12094, line: 648, column: 8)
!12520 = distinct !DILexicalBlock(scope: !12513, file: !12094, line: 644, column: 3)
!12521 = !DILocation(line: 648, column: 8, scope: !12520)
!12522 = !DILocation(line: 651, column: 10, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12524, file: !12094, line: 651, column: 10)
!12524 = distinct !DILexicalBlock(scope: !12519, file: !12094, line: 649, column: 5)
!12525 = !DILocation(line: 651, column: 46, scope: !12523)
!12526 = !DILocation(line: 651, column: 10, scope: !12524)
!12527 = !DILocation(line: 661, column: 10, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !12529, file: !12094, line: 661, column: 10)
!12529 = distinct !DILexicalBlock(scope: !12530, file: !12094, line: 659, column: 5)
!12530 = distinct !DILexicalBlock(scope: !12519, file: !12094, line: 657, column: 13)
!12531 = !DILocation(line: 661, column: 46, scope: !12528)
!12532 = !DILocation(line: 661, column: 10, scope: !12529)
!12533 = !DILocation(line: 670, column: 10, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12535, file: !12094, line: 670, column: 10)
!12535 = distinct !DILexicalBlock(scope: !12530, file: !12094, line: 668, column: 5)
!12536 = !DILocation(line: 670, column: 46, scope: !12534)
!12537 = !DILocation(line: 670, column: 10, scope: !12535)
!12538 = !DILocation(line: 676, column: 5, scope: !12520)
!12539 = !DILocation(line: 679, column: 17, scope: !12520)
!12540 = !DILocation(line: 681, column: 5, scope: !12520)
!12541 = !DILocation(line: 681, column: 12, scope: !12520)
!12542 = !DILocation(line: 681, column: 65, scope: !12520)
!12543 = !DILocation(line: 681, column: 78, scope: !12520)
!12544 = !DILocation(line: 681, column: 42, scope: !12520)
!12545 = !DILocation(line: 683, column: 12, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12547, file: !12094, line: 683, column: 11)
!12547 = distinct !DILexicalBlock(scope: !12520, file: !12094, line: 682, column: 5)
!12548 = !DILocation(line: 683, column: 26, scope: !12546)
!12549 = !DILocation(line: 683, column: 39, scope: !12546)
!12550 = !DILocation(line: 683, column: 11, scope: !12547)
!12551 = distinct !{!12551, !12540, !12552}
!12552 = !DILocation(line: 687, column: 5, scope: !12520)
!12553 = !DILocation(line: 691, column: 17, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12460, file: !12094, line: 691, column: 6)
!12555 = !DILocation(line: 691, column: 15, scope: !12554)
!12556 = !DILocation(line: 691, column: 6, scope: !12460)
!12557 = !DILocation(line: 694, column: 5, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12554, file: !12094, line: 692, column: 3)
!12559 = !DILocation(line: 698, column: 8, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12558, file: !12094, line: 698, column: 8)
!12561 = !DILocation(line: 698, column: 34, scope: !12560)
!12562 = !DILocation(line: 698, column: 8, scope: !12558)
!12563 = !DILocation(line: 705, column: 27, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12460, file: !12094, line: 705, column: 6)
!12565 = !DILocation(line: 705, column: 38, scope: !12564)
!12566 = !DILocation(line: 705, column: 61, scope: !12564)
!12567 = !DILocation(line: 705, column: 6, scope: !12460)
!12568 = !DILocation(line: 708, column: 5, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12564, file: !12094, line: 706, column: 3)
!12570 = !DILocation(line: 712, column: 27, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12460, file: !12094, line: 712, column: 6)
!12572 = !DILocation(line: 709, column: 3, scope: !12569)
!12573 = !DILocation(line: 712, column: 38, scope: !12571)
!12574 = !DILocation(line: 712, column: 61, scope: !12571)
!12575 = !DILocation(line: 712, column: 6, scope: !12460)
!12576 = !DILocation(line: 715, column: 5, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12571, file: !12094, line: 713, column: 3)
!12578 = !DILocation(line: 716, column: 3, scope: !12577)
!12579 = !DILocation(line: 719, column: 21, scope: !12460)
!12580 = !DILocation(line: 719, column: 70, scope: !12460)
!12581 = !DILocation(line: 719, column: 91, scope: !12460)
!12582 = !DILocation(line: 719, column: 50, scope: !12460)
!12583 = !DILocation(line: 719, column: 47, scope: !12460)
!12584 = !DILocation(line: 719, column: 19, scope: !12460)
!12585 = !DILocation(line: 722, column: 17, scope: !12460)
!12586 = !DILocation(line: 722, column: 3, scope: !12460)
!12587 = !DILocation(line: 724, column: 3, scope: !12460)
!12588 = !DILocation(line: 725, column: 1, scope: !12460)
!12589 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12094, file: !12094, line: 885, type: !6925, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !12590)
!12590 = !{!12591, !12592, !12593, !12594}
!12591 = !DILocalVariable(name: "pllm", scope: !12589, file: !12094, line: 887, type: !132)
!12592 = !DILocalVariable(name: "pllvco", scope: !12589, file: !12094, line: 887, type: !132)
!12593 = !DILocalVariable(name: "pllp", scope: !12589, file: !12094, line: 887, type: !132)
!12594 = !DILocalVariable(name: "sysclockfreq", scope: !12589, file: !12094, line: 888, type: !132)
!12595 = !DILocation(line: 0, scope: !12589)
!12596 = !DILocation(line: 891, column: 16, scope: !12589)
!12597 = !DILocation(line: 891, column: 21, scope: !12589)
!12598 = !DILocation(line: 891, column: 3, scope: !12589)
!12599 = !DILocation(line: 907, column: 19, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12601, file: !12094, line: 904, column: 5)
!12601 = distinct !DILexicalBlock(scope: !12589, file: !12094, line: 892, column: 3)
!12602 = !DILocation(line: 907, column: 27, scope: !12600)
!12603 = !DILocation(line: 908, column: 10, scope: !12604)
!12604 = distinct !DILexicalBlock(scope: !12600, file: !12094, line: 908, column: 10)
!12605 = !DILocation(line: 0, scope: !12604)
!12606 = !DILocation(line: 918, column: 23, scope: !12600)
!12607 = !DILocation(line: 918, column: 82, scope: !12600)
!12608 = !DILocation(line: 920, column: 28, scope: !12600)
!12609 = !DILocation(line: 921, column: 7, scope: !12600)
!12610 = !DILocation(line: 0, scope: !12601)
!12611 = !DILocation(line: 929, column: 3, scope: !12589)
!12612 = !DISubprogram(name: "HAL_InitTick", scope: !12459, file: !12459, line: 223, type: !12613, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!12613 = !DISubroutineType(types: !12614)
!12614 = !{!12097, !132}
!12615 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12094, file: !12094, line: 775, type: !12616, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !12618)
!12616 = !DISubroutineType(types: !12617)
!12617 = !{null, !132, !132, !132}
!12618 = !{!12619, !12620, !12621, !12622, !12632}
!12619 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12615, file: !12094, line: 775, type: !132)
!12620 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12615, file: !12094, line: 775, type: !132)
!12621 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12615, file: !12094, line: 775, type: !132)
!12622 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12615, file: !12094, line: 777, type: !12623)
!12623 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12624, line: 62, baseType: !12625)
!12624 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12625 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12624, line: 46, size: 160, elements: !12626)
!12626 = !{!12627, !12628, !12629, !12630, !12631}
!12627 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12625, file: !12624, line: 48, baseType: !132, size: 32)
!12628 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12625, file: !12624, line: 51, baseType: !132, size: 32, offset: 32)
!12629 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12625, file: !12624, line: 54, baseType: !132, size: 32, offset: 64)
!12630 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12625, file: !12624, line: 57, baseType: !132, size: 32, offset: 96)
!12631 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12625, file: !12624, line: 60, baseType: !132, size: 32, offset: 128)
!12632 = !DILocalVariable(name: "tmpreg", scope: !12633, file: !12094, line: 787, type: !131)
!12633 = distinct !DILexicalBlock(scope: !12634, file: !12094, line: 787, column: 5)
!12634 = distinct !DILexicalBlock(scope: !12635, file: !12094, line: 783, column: 3)
!12635 = distinct !DILexicalBlock(scope: !12615, file: !12094, line: 782, column: 6)
!12636 = !DILocation(line: 0, scope: !12615)
!12637 = !DILocation(line: 777, column: 3, scope: !12615)
!12638 = !DILocation(line: 777, column: 20, scope: !12615)
!12639 = !DILocation(line: 782, column: 15, scope: !12635)
!12640 = !DILocation(line: 782, column: 6, scope: !12615)
!12641 = !DILocation(line: 787, column: 5, scope: !12633)
!12642 = !DILocation(line: 787, column: 5, scope: !12634)
!12643 = !DILocation(line: 790, column: 21, scope: !12634)
!12644 = !DILocation(line: 790, column: 25, scope: !12634)
!12645 = !DILocation(line: 791, column: 21, scope: !12634)
!12646 = !DILocation(line: 791, column: 26, scope: !12634)
!12647 = !DILocation(line: 792, column: 21, scope: !12634)
!12648 = !DILocation(line: 792, column: 27, scope: !12634)
!12649 = !DILocation(line: 793, column: 21, scope: !12634)
!12650 = !DILocation(line: 793, column: 26, scope: !12634)
!12651 = !DILocation(line: 794, column: 21, scope: !12634)
!12652 = !DILocation(line: 794, column: 31, scope: !12634)
!12653 = !DILocation(line: 795, column: 5, scope: !12634)
!12654 = !DILocation(line: 798, column: 5, scope: !12634)
!12655 = !DILocation(line: 804, column: 3, scope: !12634)
!12656 = !DILocation(line: 830, column: 1, scope: !12615)
!12657 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12624, file: !12624, line: 224, type: !12658, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!12658 = !DISubroutineType(types: !12659)
!12659 = !{null, !3132, !12660}
!12660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12623, size: 32)
!12661 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12094, file: !12094, line: 841, type: !3249, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !473)
!12662 = !DILocation(line: 843, column: 38, scope: !12661)
!12663 = !DILocation(line: 844, column: 1, scope: !12661)
!12664 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12094, file: !12094, line: 850, type: !3249, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !473)
!12665 = !DILocation(line: 852, column: 38, scope: !12664)
!12666 = !DILocation(line: 853, column: 1, scope: !12664)
!12667 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12094, file: !12094, line: 941, type: !6925, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !473)
!12668 = !DILocation(line: 943, column: 10, scope: !12667)
!12669 = !DILocation(line: 943, column: 3, scope: !12667)
!12670 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12094, file: !12094, line: 952, type: !6925, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !473)
!12671 = !DILocation(line: 955, column: 11, scope: !12670)
!12672 = !DILocation(line: 955, column: 56, scope: !12670)
!12673 = !DILocation(line: 955, column: 78, scope: !12670)
!12674 = !DILocation(line: 955, column: 36, scope: !12670)
!12675 = !DILocation(line: 955, column: 33, scope: !12670)
!12676 = !DILocation(line: 955, column: 3, scope: !12670)
!12677 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12094, file: !12094, line: 964, type: !6925, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !473)
!12678 = !DILocation(line: 967, column: 11, scope: !12677)
!12679 = !DILocation(line: 967, column: 55, scope: !12677)
!12680 = !DILocation(line: 967, column: 77, scope: !12677)
!12681 = !DILocation(line: 967, column: 35, scope: !12677)
!12682 = !DILocation(line: 967, column: 32, scope: !12677)
!12683 = !DILocation(line: 967, column: 3, scope: !12677)
!12684 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12094, file: !12094, line: 977, type: !12685, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !12687)
!12685 = !DISubroutineType(types: !12686)
!12686 = !{null, !12102}
!12687 = !{!12688}
!12688 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12684, file: !12094, line: 977, type: !12102)
!12689 = !DILocation(line: 0, scope: !12684)
!12690 = !DILocation(line: 980, column: 22, scope: !12684)
!12691 = !DILocation(line: 980, column: 37, scope: !12684)
!12692 = !DILocation(line: 983, column: 12, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12684, file: !12094, line: 983, column: 6)
!12694 = !DILocation(line: 983, column: 15, scope: !12693)
!12695 = !DILocation(line: 983, column: 31, scope: !12693)
!12696 = !DILocation(line: 983, column: 6, scope: !12684)
!12697 = !DILocation(line: 985, column: 24, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12693, file: !12094, line: 984, column: 3)
!12699 = !DILocation(line: 985, column: 33, scope: !12698)
!12700 = !DILocation(line: 986, column: 3, scope: !12698)
!12701 = !DILocation(line: 987, column: 17, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12693, file: !12094, line: 987, column: 11)
!12703 = !DILocation(line: 987, column: 20, scope: !12702)
!12704 = !DILocation(line: 987, column: 35, scope: !12702)
!12705 = !DILocation(line: 0, scope: !12702)
!12706 = !DILocation(line: 987, column: 11, scope: !12693)
!12707 = !DILocation(line: 989, column: 33, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12702, file: !12094, line: 988, column: 3)
!12709 = !DILocation(line: 990, column: 3, scope: !12708)
!12710 = !DILocation(line: 993, column: 33, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12702, file: !12094, line: 992, column: 3)
!12712 = !DILocation(line: 997, column: 12, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12684, file: !12094, line: 997, column: 6)
!12714 = !DILocation(line: 997, column: 15, scope: !12713)
!12715 = !DILocation(line: 1003, column: 24, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12713, file: !12094, line: 1002, column: 3)
!12717 = !DILocation(line: 1003, column: 33, scope: !12716)
!12718 = !DILocation(line: 1006, column: 61, scope: !12684)
!12719 = !DILocation(line: 1006, column: 81, scope: !12684)
!12720 = !DILocation(line: 1006, column: 22, scope: !12684)
!12721 = !DILocation(line: 1006, column: 42, scope: !12684)
!12722 = !DILocation(line: 1009, column: 12, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12684, file: !12094, line: 1009, column: 6)
!12724 = !DILocation(line: 1009, column: 17, scope: !12723)
!12725 = !DILocation(line: 1009, column: 35, scope: !12723)
!12726 = !DILocation(line: 1009, column: 6, scope: !12684)
!12727 = !DILocation(line: 1011, column: 24, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12723, file: !12094, line: 1010, column: 3)
!12729 = !DILocation(line: 1011, column: 33, scope: !12728)
!12730 = !DILocation(line: 1012, column: 3, scope: !12728)
!12731 = !DILocation(line: 1013, column: 17, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12723, file: !12094, line: 1013, column: 11)
!12733 = !DILocation(line: 1013, column: 22, scope: !12732)
!12734 = !DILocation(line: 1013, column: 39, scope: !12732)
!12735 = !DILocation(line: 0, scope: !12732)
!12736 = !DILocation(line: 1013, column: 11, scope: !12723)
!12737 = !DILocation(line: 1015, column: 33, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12732, file: !12094, line: 1014, column: 3)
!12739 = !DILocation(line: 1016, column: 3, scope: !12738)
!12740 = !DILocation(line: 1019, column: 33, scope: !12741)
!12741 = distinct !DILexicalBlock(scope: !12732, file: !12094, line: 1018, column: 3)
!12742 = !DILocation(line: 1023, column: 12, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12684, file: !12094, line: 1023, column: 6)
!12744 = !DILocation(line: 1023, column: 16, scope: !12743)
!12745 = !DILocation(line: 1029, column: 24, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12743, file: !12094, line: 1028, column: 3)
!12747 = !DILocation(line: 1029, column: 33, scope: !12746)
!12748 = !DILocation(line: 1033, column: 12, scope: !12749)
!12749 = distinct !DILexicalBlock(scope: !12684, file: !12094, line: 1033, column: 6)
!12750 = !DILocation(line: 1033, column: 15, scope: !12749)
!12751 = !DILocation(line: 1033, column: 30, scope: !12749)
!12752 = !DILocation(line: 1033, column: 6, scope: !12684)
!12753 = !DILocation(line: 1039, column: 28, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12749, file: !12094, line: 1038, column: 3)
!12755 = !DILocation(line: 1039, column: 37, scope: !12754)
!12756 = !DILocation(line: 1041, column: 54, scope: !12684)
!12757 = !DILocation(line: 1041, column: 62, scope: !12684)
!12758 = !DILocation(line: 1041, column: 26, scope: !12684)
!12759 = !DILocation(line: 1041, column: 36, scope: !12684)
!12760 = !DILocation(line: 1042, column: 49, scope: !12684)
!12761 = !DILocation(line: 1042, column: 57, scope: !12684)
!12762 = !DILocation(line: 1042, column: 26, scope: !12684)
!12763 = !DILocation(line: 1042, column: 31, scope: !12684)
!12764 = !DILocation(line: 1043, column: 50, scope: !12684)
!12765 = !DILocation(line: 1043, column: 78, scope: !12684)
!12766 = !DILocation(line: 1043, column: 26, scope: !12684)
!12767 = !DILocation(line: 1043, column: 31, scope: !12684)
!12768 = !DILocation(line: 1044, column: 52, scope: !12684)
!12769 = !DILocation(line: 1044, column: 102, scope: !12684)
!12770 = !DILocation(line: 1044, column: 109, scope: !12684)
!12771 = !DILocation(line: 1044, column: 26, scope: !12684)
!12772 = !DILocation(line: 1044, column: 31, scope: !12684)
!12773 = !DILocation(line: 1045, column: 50, scope: !12684)
!12774 = !DILocation(line: 1045, column: 78, scope: !12684)
!12775 = !DILocation(line: 1045, column: 26, scope: !12684)
!12776 = !DILocation(line: 1045, column: 31, scope: !12684)
!12777 = !DILocation(line: 1046, column: 1, scope: !12684)
!12778 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12094, file: !12094, line: 1056, type: !12779, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !12781)
!12779 = !DISubroutineType(types: !12780)
!12780 = !{null, !12463, !855}
!12781 = !{!12782, !12783}
!12782 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12778, file: !12094, line: 1056, type: !12463)
!12783 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12778, file: !12094, line: 1056, type: !855)
!12784 = !DILocation(line: 0, scope: !12778)
!12785 = !DILocation(line: 1059, column: 22, scope: !12778)
!12786 = !DILocation(line: 1059, column: 32, scope: !12778)
!12787 = !DILocation(line: 1062, column: 53, scope: !12778)
!12788 = !DILocation(line: 1062, column: 58, scope: !12778)
!12789 = !DILocation(line: 1062, column: 22, scope: !12778)
!12790 = !DILocation(line: 1062, column: 35, scope: !12778)
!12791 = !DILocation(line: 1065, column: 54, scope: !12778)
!12792 = !DILocation(line: 1065, column: 59, scope: !12778)
!12793 = !DILocation(line: 1065, column: 22, scope: !12778)
!12794 = !DILocation(line: 1065, column: 36, scope: !12778)
!12795 = !DILocation(line: 1068, column: 55, scope: !12778)
!12796 = !DILocation(line: 1068, column: 60, scope: !12778)
!12797 = !DILocation(line: 1068, column: 22, scope: !12778)
!12798 = !DILocation(line: 1068, column: 37, scope: !12778)
!12799 = !DILocation(line: 1071, column: 56, scope: !12778)
!12800 = !DILocation(line: 1071, column: 79, scope: !12778)
!12801 = !DILocation(line: 1071, column: 22, scope: !12778)
!12802 = !DILocation(line: 1071, column: 37, scope: !12778)
!12803 = !DILocation(line: 1074, column: 34, scope: !12778)
!12804 = !DILocation(line: 1074, column: 38, scope: !12778)
!12805 = !DILocation(line: 1074, column: 14, scope: !12778)
!12806 = !DILocation(line: 1075, column: 1, scope: !12778)
!12807 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12094, file: !12094, line: 1082, type: !3249, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !473)
!12808 = !DILocation(line: 1085, column: 6, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12807, file: !12094, line: 1085, column: 6)
!12810 = !DILocation(line: 1085, column: 6, scope: !12807)
!12811 = !DILocation(line: 1088, column: 5, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12809, file: !12094, line: 1086, column: 3)
!12813 = !DILocation(line: 1091, column: 5, scope: !12812)
!12814 = !DILocation(line: 1092, column: 3, scope: !12812)
!12815 = !DILocation(line: 1093, column: 1, scope: !12807)
!12816 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12094, file: !12094, line: 1099, type: !3249, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !473)
!12817 = !DILocation(line: 1104, column: 1, scope: !12816)
!12818 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12819, file: !12819, line: 257, type: !6935, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !12820)
!12819 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12820 = !{!12821}
!12821 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12818, file: !12819, line: 257, type: !132)
!12822 = !DILocation(line: 0, scope: !12818)
!12823 = !DILocation(line: 260, column: 3, scope: !12818)
!12824 = !DILocation(line: 261, column: 1, scope: !12818)
!12825 = distinct !DISubprogram(name: "LL_InitTick", scope: !12826, file: !12826, line: 260, type: !10127, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !12827)
!12826 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12827 = !{!12828, !12829}
!12828 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12825, file: !12826, line: 260, type: !132)
!12829 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12825, file: !12826, line: 260, type: !132)
!12830 = !DILocation(line: 0, scope: !12825)
!12831 = !DILocation(line: 263, column: 46, scope: !12825)
!12832 = !DILocation(line: 263, column: 55, scope: !12825)
!12833 = !DILocation(line: 263, column: 18, scope: !12825)
!12834 = !DILocation(line: 264, column: 18, scope: !12825)
!12835 = !DILocation(line: 265, column: 18, scope: !12825)
!12836 = !DILocation(line: 267, column: 1, scope: !12825)
!12837 = distinct !DISubprogram(name: "LL_mDelay", scope: !12819, file: !12819, line: 273, type: !6935, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !12838)
!12838 = !{!12839, !12840}
!12839 = !DILocalVariable(name: "Delay", arg: 1, scope: !12837, file: !12819, line: 273, type: !132)
!12840 = !DILocalVariable(name: "tmp", scope: !12837, file: !12819, line: 275, type: !131)
!12841 = !DILocation(line: 0, scope: !12837)
!12842 = !DILocation(line: 275, column: 3, scope: !12837)
!12843 = !DILocation(line: 275, column: 18, scope: !12837)
!12844 = !DILocation(line: 275, column: 33, scope: !12837)
!12845 = !DILocation(line: 277, column: 10, scope: !12837)
!12846 = !DILocation(line: 280, column: 12, scope: !12847)
!12847 = distinct !DILexicalBlock(scope: !12837, file: !12819, line: 280, column: 6)
!12848 = !DILocation(line: 285, column: 3, scope: !12837)
!12849 = !DILocation(line: 287, column: 18, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12851, file: !12819, line: 287, column: 8)
!12851 = distinct !DILexicalBlock(scope: !12837, file: !12819, line: 286, column: 3)
!12852 = !DILocation(line: 292, column: 1, scope: !12837)
!12853 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12819, file: !12819, line: 323, type: !6935, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !12854)
!12854 = !{!12855}
!12855 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12853, file: !12819, line: 323, type: !132)
!12856 = !DILocation(line: 0, scope: !12853)
!12857 = !DILocation(line: 326, column: 19, scope: !12853)
!12858 = !DILocation(line: 327, column: 1, scope: !12853)
!12859 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12819, file: !12819, line: 338, type: !12860, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !12863)
!12860 = !DISubroutineType(types: !12861)
!12861 = !{!12862, !132}
!12862 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !801, line: 201, baseType: !800)
!12863 = !{!12864, !12865, !12866, !12867, !12868}
!12864 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12859, file: !12819, line: 338, type: !132)
!12865 = !DILocalVariable(name: "timeout", scope: !12859, file: !12819, line: 340, type: !132)
!12866 = !DILocalVariable(name: "getlatency", scope: !12859, file: !12819, line: 341, type: !132)
!12867 = !DILocalVariable(name: "latency", scope: !12859, file: !12819, line: 342, type: !132)
!12868 = !DILocalVariable(name: "status", scope: !12859, file: !12819, line: 343, type: !12862)
!12869 = !DILocation(line: 0, scope: !12859)
!12870 = !DILocation(line: 347, column: 21, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12859, file: !12819, line: 347, column: 6)
!12872 = !DILocation(line: 347, column: 6, scope: !12859)
!12873 = !DILocation(line: 353, column: 8, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12875, file: !12819, line: 353, column: 8)
!12875 = distinct !DILexicalBlock(scope: !12871, file: !12819, line: 352, column: 3)
!12876 = !DILocation(line: 353, column: 40, scope: !12874)
!12877 = !DILocation(line: 353, column: 8, scope: !12875)
!12878 = !DILocation(line: 374, column: 55, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12880, file: !12819, line: 374, column: 10)
!12880 = distinct !DILexicalBlock(scope: !12874, file: !12819, line: 354, column: 5)
!12881 = !DILocation(line: 368, column: 26, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12880, file: !12819, line: 368, column: 10)
!12883 = !DILocation(line: 368, column: 55, scope: !12882)
!12884 = !DILocation(line: 380, column: 57, scope: !12885)
!12885 = distinct !DILexicalBlock(scope: !12886, file: !12819, line: 380, column: 12)
!12886 = distinct !DILexicalBlock(scope: !12879, file: !12819, line: 379, column: 7)
!12887 = !DILocation(line: 387, column: 8, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12875, file: !12819, line: 387, column: 8)
!12889 = !DILocation(line: 387, column: 40, scope: !12888)
!12890 = !DILocation(line: 387, column: 8, scope: !12875)
!12891 = !DILocation(line: 407, column: 26, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12893, file: !12819, line: 407, column: 10)
!12893 = distinct !DILexicalBlock(scope: !12888, file: !12819, line: 388, column: 5)
!12894 = !DILocation(line: 407, column: 55, scope: !12892)
!12895 = !DILocation(line: 413, column: 28, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12897, file: !12819, line: 413, column: 12)
!12897 = distinct !DILexicalBlock(scope: !12892, file: !12819, line: 412, column: 7)
!12898 = !DILocation(line: 413, column: 57, scope: !12896)
!12899 = !DILocation(line: 0, scope: !12875)
!12900 = !DILocation(line: 420, column: 8, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12875, file: !12819, line: 420, column: 8)
!12902 = !DILocation(line: 420, column: 40, scope: !12901)
!12903 = !DILocation(line: 420, column: 8, scope: !12875)
!12904 = !DILocation(line: 429, column: 26, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12906, file: !12819, line: 429, column: 10)
!12906 = distinct !DILexicalBlock(scope: !12901, file: !12819, line: 421, column: 5)
!12907 = !DILocation(line: 429, column: 55, scope: !12905)
!12908 = !DILocation(line: 435, column: 28, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12910, file: !12819, line: 435, column: 12)
!12910 = distinct !DILexicalBlock(scope: !12905, file: !12819, line: 434, column: 7)
!12911 = !DILocation(line: 435, column: 57, scope: !12909)
!12912 = !DILocation(line: 444, column: 5, scope: !12875)
!12913 = !DILocation(line: 448, column: 5, scope: !12875)
!12914 = !DILocation(line: 451, column: 18, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12875, file: !12819, line: 449, column: 5)
!12916 = !DILocation(line: 452, column: 12, scope: !12915)
!12917 = !DILocation(line: 453, column: 26, scope: !12875)
!12918 = !DILocation(line: 453, column: 38, scope: !12875)
!12919 = !DILocation(line: 453, column: 5, scope: !12915)
!12920 = distinct !{!12920, !12913, !12921}
!12921 = !DILocation(line: 453, column: 54, scope: !12875)
!12922 = !DILocation(line: 0, scope: !12871)
!12923 = !DILocation(line: 464, column: 3, scope: !12859)
!12924 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12925, file: !12925, line: 519, type: !6925, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !473)
!12925 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12926 = !DILocation(line: 521, column: 21, scope: !12924)
!12927 = !DILocation(line: 521, column: 3, scope: !12924)
!12928 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5845, file: !5845, line: 1543, type: !6935, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !12929)
!12929 = !{!12930}
!12930 = !DILocalVariable(name: "Latency", arg: 1, scope: !12928, file: !5845, line: 1543, type: !132)
!12931 = !DILocation(line: 0, scope: !12928)
!12932 = !DILocation(line: 1545, column: 3, scope: !12928)
!12933 = !DILocation(line: 1546, column: 1, scope: !12928)
!12934 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5845, file: !5845, line: 1569, type: !6925, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !473)
!12935 = !DILocation(line: 1571, column: 21, scope: !12934)
!12936 = !DILocation(line: 1571, column: 3, scope: !12934)
!12937 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12819, file: !12819, line: 483, type: !12938, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !12954)
!12938 = !DISubroutineType(types: !12939)
!12939 = !{!12862, !12940, !12947}
!12940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12941, size: 32)
!12941 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12826, line: 114, baseType: !12942)
!12942 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12826, line: 94, size: 96, elements: !12943)
!12943 = !{!12944, !12945, !12946}
!12944 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12942, file: !12826, line: 96, baseType: !132, size: 32)
!12945 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12942, file: !12826, line: 102, baseType: !132, size: 32, offset: 32)
!12946 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12942, file: !12826, line: 109, baseType: !132, size: 32, offset: 64)
!12947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12948, size: 32)
!12948 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12826, line: 139, baseType: !12949)
!12949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12826, line: 119, size: 96, elements: !12950)
!12950 = !{!12951, !12952, !12953}
!12951 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12949, file: !12826, line: 121, baseType: !132, size: 32)
!12952 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12949, file: !12826, line: 127, baseType: !132, size: 32, offset: 32)
!12953 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12949, file: !12826, line: 133, baseType: !132, size: 32, offset: 64)
!12954 = !{!12955, !12956, !12957, !12958}
!12955 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12937, file: !12819, line: 483, type: !12940)
!12956 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12937, file: !12819, line: 484, type: !12947)
!12957 = !DILocalVariable(name: "status", scope: !12937, file: !12819, line: 486, type: !12862)
!12958 = !DILocalVariable(name: "pllfreq", scope: !12937, file: !12819, line: 487, type: !132)
!12959 = !DILocation(line: 0, scope: !12937)
!12960 = !DILocation(line: 490, column: 6, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12937, file: !12819, line: 490, column: 6)
!12962 = !DILocation(line: 490, column: 25, scope: !12961)
!12963 = !DILocation(line: 490, column: 6, scope: !12937)
!12964 = !DILocation(line: 493, column: 15, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12961, file: !12819, line: 491, column: 3)
!12966 = !DILocation(line: 496, column: 8, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12965, file: !12819, line: 496, column: 8)
!12968 = !DILocation(line: 496, column: 29, scope: !12967)
!12969 = !DILocation(line: 496, column: 8, scope: !12965)
!12970 = !DILocation(line: 498, column: 7, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12967, file: !12819, line: 497, column: 5)
!12972 = !DILocation(line: 499, column: 7, scope: !12971)
!12973 = !DILocation(line: 499, column: 14, scope: !12971)
!12974 = !DILocation(line: 499, column: 35, scope: !12971)
!12975 = distinct !{!12975, !12972, !12976}
!12976 = !DILocation(line: 502, column: 7, scope: !12971)
!12977 = !DILocation(line: 506, column: 76, scope: !12965)
!12978 = !DILocation(line: 506, column: 103, scope: !12965)
!12979 = !DILocation(line: 507, column: 54, scope: !12965)
!12980 = !DILocation(line: 506, column: 5, scope: !12965)
!12981 = !DILocation(line: 510, column: 14, scope: !12965)
!12982 = !DILocation(line: 511, column: 3, scope: !12965)
!12983 = !DILocation(line: 0, scope: !12961)
!12984 = !DILocation(line: 518, column: 3, scope: !12937)
!12985 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12819, file: !12819, line: 642, type: !12986, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !12988)
!12986 = !DISubroutineType(types: !12987)
!12987 = !{!12862}
!12988 = !{!12989}
!12989 = !DILocalVariable(name: "status", scope: !12985, file: !12819, line: 644, type: !12862)
!12990 = !DILocation(line: 0, scope: !12985)
!12991 = !DILocation(line: 647, column: 6, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !12985, file: !12819, line: 647, column: 6)
!12993 = !DILocation(line: 647, column: 27, scope: !12992)
!12994 = !DILocation(line: 663, column: 6, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12985, file: !12819, line: 663, column: 6)
!12996 = !DILocation(line: 663, column: 30, scope: !12995)
!12997 = !DILocation(line: 663, column: 6, scope: !12985)
!12998 = !DILocation(line: 669, column: 3, scope: !12985)
!12999 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12819, file: !12819, line: 611, type: !13000, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13002)
!13000 = !DISubroutineType(types: !13001)
!13001 = !{!132, !132, !12940}
!13002 = !{!13003, !13004, !13005}
!13003 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12999, file: !12819, line: 611, type: !132)
!13004 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12999, file: !12819, line: 611, type: !12940)
!13005 = !DILocalVariable(name: "pllfreq", scope: !12999, file: !12819, line: 613, type: !132)
!13006 = !DILocation(line: 0, scope: !12999)
!13007 = !DILocation(line: 622, column: 56, scope: !12999)
!13008 = !DILocation(line: 622, column: 61, scope: !12999)
!13009 = !DILocation(line: 622, column: 32, scope: !12999)
!13010 = !DILocation(line: 626, column: 45, scope: !12999)
!13011 = !DILocation(line: 626, column: 50, scope: !12999)
!13012 = !DILocation(line: 626, column: 21, scope: !12999)
!13013 = !DILocation(line: 630, column: 47, scope: !12999)
!13014 = !DILocation(line: 630, column: 82, scope: !12999)
!13015 = !DILocation(line: 630, column: 21, scope: !12999)
!13016 = !DILocation(line: 633, column: 3, scope: !12999)
!13017 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8877, file: !8877, line: 3007, type: !6925, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !473)
!13018 = !DILocation(line: 3009, column: 11, scope: !13017)
!13019 = !DILocation(line: 3009, column: 44, scope: !13017)
!13020 = !DILocation(line: 3009, column: 3, scope: !13017)
!13021 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8877, file: !8877, line: 2987, type: !3249, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !473)
!13022 = !DILocation(line: 2989, column: 3, scope: !13021)
!13023 = !DILocation(line: 2990, column: 1, scope: !13021)
!13024 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8877, file: !8877, line: 4304, type: !9011, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13025)
!13025 = !{!13026, !13027, !13028, !13029}
!13026 = !DILocalVariable(name: "Source", arg: 1, scope: !13024, file: !8877, line: 4304, type: !132)
!13027 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13024, file: !8877, line: 4304, type: !132)
!13028 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13024, file: !8877, line: 4304, type: !132)
!13029 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13024, file: !8877, line: 4304, type: !132)
!13030 = !DILocation(line: 0, scope: !13024)
!13031 = !DILocation(line: 4306, column: 3, scope: !13024)
!13032 = !DILocation(line: 4308, column: 3, scope: !13024)
!13033 = !DILocation(line: 4312, column: 1, scope: !13024)
!13034 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12819, file: !12819, line: 681, type: !13035, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13037)
!13035 = !DISubroutineType(types: !13036)
!13036 = !{!12862, !132, !12947}
!13037 = !{!13038, !13039, !13040, !13041}
!13038 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13034, file: !12819, line: 681, type: !132)
!13039 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13034, file: !12819, line: 681, type: !12947)
!13040 = !DILocalVariable(name: "status", scope: !13034, file: !12819, line: 683, type: !12862)
!13041 = !DILocalVariable(name: "hclk_frequency", scope: !13034, file: !12819, line: 684, type: !132)
!13042 = !DILocation(line: 0, scope: !13034)
!13043 = !DILocation(line: 691, column: 20, scope: !13034)
!13044 = !DILocation(line: 694, column: 6, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13034, file: !12819, line: 694, column: 6)
!13046 = !DILocation(line: 694, column: 22, scope: !13045)
!13047 = !DILocation(line: 694, column: 6, scope: !13034)
!13048 = !DILocation(line: 697, column: 14, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !13045, file: !12819, line: 695, column: 3)
!13050 = !DILocation(line: 701, column: 13, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !13034, file: !12819, line: 701, column: 6)
!13052 = !DILocation(line: 701, column: 6, scope: !13034)
!13053 = !DILocation(line: 704, column: 5, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13051, file: !12819, line: 702, column: 3)
!13055 = !DILocation(line: 705, column: 5, scope: !13054)
!13056 = !DILocation(line: 705, column: 12, scope: !13054)
!13057 = !DILocation(line: 705, column: 33, scope: !13054)
!13058 = distinct !{!13058, !13055, !13059}
!13059 = !DILocation(line: 708, column: 5, scope: !13054)
!13060 = !DILocation(line: 711, column: 49, scope: !13054)
!13061 = !DILocation(line: 711, column: 5, scope: !13054)
!13062 = !DILocation(line: 712, column: 5, scope: !13054)
!13063 = !DILocation(line: 713, column: 5, scope: !13054)
!13064 = !DILocation(line: 713, column: 12, scope: !13054)
!13065 = !DILocation(line: 713, column: 37, scope: !13054)
!13066 = distinct !{!13066, !13063, !13067}
!13067 = !DILocation(line: 716, column: 5, scope: !13054)
!13068 = !DILocation(line: 719, column: 50, scope: !13054)
!13069 = !DILocation(line: 719, column: 5, scope: !13054)
!13070 = !DILocation(line: 720, column: 50, scope: !13054)
!13071 = !DILocation(line: 720, column: 5, scope: !13054)
!13072 = !DILocation(line: 721, column: 3, scope: !13054)
!13073 = !DILocation(line: 724, column: 6, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !13034, file: !12819, line: 724, column: 6)
!13075 = !DILocation(line: 724, column: 22, scope: !13074)
!13076 = !DILocation(line: 724, column: 6, scope: !13034)
!13077 = !DILocation(line: 727, column: 14, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13074, file: !12819, line: 725, column: 3)
!13079 = !DILocation(line: 728, column: 3, scope: !13078)
!13080 = !DILocation(line: 731, column: 13, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13034, file: !12819, line: 731, column: 6)
!13082 = !DILocation(line: 731, column: 6, scope: !13034)
!13083 = !DILocation(line: 733, column: 5, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13081, file: !12819, line: 732, column: 3)
!13085 = !DILocation(line: 734, column: 3, scope: !13084)
!13086 = !DILocation(line: 736, column: 3, scope: !13034)
!13087 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8877, file: !8877, line: 4184, type: !3249, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !473)
!13088 = !DILocation(line: 4186, column: 3, scope: !13087)
!13089 = !DILocation(line: 4187, column: 1, scope: !13087)
!13090 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8877, file: !8877, line: 4205, type: !6925, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !473)
!13091 = !DILocation(line: 4207, column: 11, scope: !13090)
!13092 = !DILocation(line: 4207, column: 44, scope: !13090)
!13093 = !DILocation(line: 4207, column: 3, scope: !13090)
!13094 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8877, file: !8877, line: 3224, type: !6935, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13095)
!13095 = !{!13096}
!13096 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13094, file: !8877, line: 3224, type: !132)
!13097 = !DILocation(line: 0, scope: !13094)
!13098 = !DILocation(line: 3226, column: 3, scope: !13094)
!13099 = !DILocation(line: 3227, column: 1, scope: !13094)
!13100 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8877, file: !8877, line: 3188, type: !6935, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13101)
!13101 = !{!13102}
!13102 = !DILocalVariable(name: "Source", arg: 1, scope: !13100, file: !8877, line: 3188, type: !132)
!13103 = !DILocation(line: 0, scope: !13100)
!13104 = !DILocation(line: 3190, column: 3, scope: !13100)
!13105 = !DILocation(line: 3191, column: 1, scope: !13100)
!13106 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8877, file: !8877, line: 3204, type: !6925, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !473)
!13107 = !DILocation(line: 3206, column: 21, scope: !13106)
!13108 = !DILocation(line: 3206, column: 3, scope: !13106)
!13109 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8877, file: !8877, line: 3240, type: !6935, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13110)
!13110 = !{!13111}
!13111 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13109, file: !8877, line: 3240, type: !132)
!13112 = !DILocation(line: 0, scope: !13109)
!13113 = !DILocation(line: 3242, column: 3, scope: !13109)
!13114 = !DILocation(line: 3243, column: 1, scope: !13109)
!13115 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8877, file: !8877, line: 3256, type: !6935, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13116)
!13116 = !{!13117}
!13117 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13115, file: !8877, line: 3256, type: !132)
!13118 = !DILocation(line: 0, scope: !13115)
!13119 = !DILocation(line: 3258, column: 3, scope: !13115)
!13120 = !DILocation(line: 3259, column: 1, scope: !13115)
!13121 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8877, file: !8877, line: 5153, type: !6925, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !473)
!13122 = !DILocation(line: 5155, column: 11, scope: !13121)
!13123 = !DILocation(line: 5155, column: 47, scope: !13121)
!13124 = !DILocation(line: 5155, column: 3, scope: !13121)
!13125 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12819, file: !12819, line: 540, type: !13126, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13128)
!13126 = !DISubroutineType(types: !13127)
!13127 = !{!12862, !132, !132, !12940, !12947}
!13128 = !{!13129, !13130, !13131, !13132, !13133, !13134}
!13129 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13125, file: !12819, line: 540, type: !132)
!13130 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13125, file: !12819, line: 540, type: !132)
!13131 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13125, file: !12819, line: 541, type: !12940)
!13132 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13125, file: !12819, line: 541, type: !12947)
!13133 = !DILocalVariable(name: "status", scope: !13125, file: !12819, line: 543, type: !12862)
!13134 = !DILocalVariable(name: "pllfreq", scope: !13125, file: !12819, line: 544, type: !132)
!13135 = !DILocation(line: 0, scope: !13125)
!13136 = !DILocation(line: 551, column: 6, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13125, file: !12819, line: 551, column: 6)
!13138 = !DILocation(line: 551, column: 25, scope: !13137)
!13139 = !DILocation(line: 551, column: 6, scope: !13125)
!13140 = !DILocation(line: 554, column: 15, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13137, file: !12819, line: 552, column: 3)
!13142 = !DILocation(line: 557, column: 8, scope: !13143)
!13143 = distinct !DILexicalBlock(scope: !13141, file: !12819, line: 557, column: 8)
!13144 = !DILocation(line: 557, column: 29, scope: !13143)
!13145 = !DILocation(line: 557, column: 8, scope: !13141)
!13146 = !DILocation(line: 560, column: 20, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13148, file: !12819, line: 560, column: 10)
!13148 = distinct !DILexicalBlock(scope: !13143, file: !12819, line: 558, column: 5)
!13149 = !DILocation(line: 560, column: 10, scope: !13148)
!13150 = !DILocation(line: 562, column: 9, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13147, file: !12819, line: 561, column: 7)
!13152 = !DILocation(line: 563, column: 7, scope: !13151)
!13153 = !DILocation(line: 566, column: 9, scope: !13154)
!13154 = distinct !DILexicalBlock(scope: !13147, file: !12819, line: 565, column: 7)
!13155 = !DILocation(line: 570, column: 7, scope: !13148)
!13156 = !DILocation(line: 571, column: 7, scope: !13148)
!13157 = !DILocation(line: 571, column: 14, scope: !13148)
!13158 = !DILocation(line: 571, column: 35, scope: !13148)
!13159 = distinct !{!13159, !13156, !13160}
!13160 = !DILocation(line: 574, column: 7, scope: !13148)
!13161 = !DILocation(line: 578, column: 76, scope: !13141)
!13162 = !DILocation(line: 578, column: 103, scope: !13141)
!13163 = !DILocation(line: 579, column: 54, scope: !13141)
!13164 = !DILocation(line: 578, column: 5, scope: !13141)
!13165 = !DILocation(line: 582, column: 14, scope: !13141)
!13166 = !DILocation(line: 583, column: 3, scope: !13141)
!13167 = !DILocation(line: 0, scope: !13137)
!13168 = !DILocation(line: 590, column: 3, scope: !13125)
!13169 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8877, file: !8877, line: 2969, type: !6925, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !473)
!13170 = !DILocation(line: 2971, column: 11, scope: !13169)
!13171 = !DILocation(line: 2971, column: 44, scope: !13169)
!13172 = !DILocation(line: 2971, column: 3, scope: !13169)
!13173 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8877, file: !8877, line: 2929, type: !3249, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !473)
!13174 = !DILocation(line: 2931, column: 3, scope: !13173)
!13175 = !DILocation(line: 2932, column: 1, scope: !13173)
!13176 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8877, file: !8877, line: 2939, type: !3249, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !473)
!13177 = !DILocation(line: 2941, column: 3, scope: !13176)
!13178 = !DILocation(line: 2942, column: 1, scope: !13176)
!13179 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8877, file: !8877, line: 2949, type: !3249, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !473)
!13180 = !DILocation(line: 2951, column: 3, scope: !13179)
!13181 = !DILocation(line: 2952, column: 1, scope: !13179)
!13182 = distinct !DISubprogram(name: "z_device_state_init", scope: !13183, file: !13183, line: 23, type: !3249, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13184)
!13183 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13184 = !{!13185}
!13185 = !DILocalVariable(name: "dev", scope: !13182, file: !13183, line: 25, type: !13186)
!13186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13187, size: 32)
!13187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13188)
!13188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !13189)
!13189 = !{!13190, !13191, !13192, !13193, !13199, !13200}
!13190 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13188, file: !152, line: 380, baseType: !155, size: 32)
!13191 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13188, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!13192 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13188, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!13193 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13188, file: !152, line: 386, baseType: !13194, size: 32, offset: 96)
!13194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13195, size: 32)
!13195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !13196)
!13196 = !{!13197, !13198}
!13197 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13195, file: !152, line: 359, baseType: !163, size: 8)
!13198 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13195, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13188, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!13200 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13188, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!13201 = !DILocation(line: 0, scope: !13182)
!13202 = !DILocation(line: 31, column: 1, scope: !13182)
!13203 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13183, file: !13183, line: 33, type: !13204, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13206)
!13204 = !DISubroutineType(types: !13205)
!13205 = !{!13186, !155}
!13206 = !{!13207, !13208}
!13207 = !DILocalVariable(name: "name", arg: 1, scope: !13203, file: !13183, line: 33, type: !155)
!13208 = !DILocalVariable(name: "dev", scope: !13203, file: !13183, line: 35, type: !13186)
!13209 = !DILocation(line: 0, scope: !13203)
!13210 = !DILocation(line: 40, column: 12, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13203, file: !13183, line: 40, column: 6)
!13212 = !DILocation(line: 40, column: 21, scope: !13211)
!13213 = !DILocation(line: 40, column: 25, scope: !13211)
!13214 = !DILocation(line: 40, column: 33, scope: !13211)
!13215 = !DILocation(line: 40, column: 6, scope: !13203)
!13216 = !DILocation(line: 55, column: 2, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13203, file: !13183, line: 55, column: 2)
!13218 = !DILocation(line: 50, column: 7, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13220, file: !13183, line: 50, column: 7)
!13220 = distinct !DILexicalBlock(scope: !13221, file: !13183, line: 49, column: 57)
!13221 = distinct !DILexicalBlock(scope: !13222, file: !13183, line: 49, column: 2)
!13222 = distinct !DILexicalBlock(scope: !13203, file: !13183, line: 49, column: 2)
!13223 = !DILocation(line: 50, column: 30, scope: !13219)
!13224 = !DILocation(line: 50, column: 39, scope: !13219)
!13225 = !DILocation(line: 50, column: 44, scope: !13219)
!13226 = !DILocation(line: 50, column: 7, scope: !13220)
!13227 = !DILocation(line: 49, column: 53, scope: !13221)
!13228 = !DILocation(line: 49, column: 33, scope: !13221)
!13229 = !DILocation(line: 49, column: 2, scope: !13222)
!13230 = distinct !{!13230, !13229, !13231}
!13231 = !DILocation(line: 53, column: 2, scope: !13222)
!13232 = !DILocation(line: 56, column: 7, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !13234, file: !13183, line: 56, column: 7)
!13234 = distinct !DILexicalBlock(scope: !13235, file: !13183, line: 55, column: 57)
!13235 = distinct !DILexicalBlock(scope: !13217, file: !13183, line: 55, column: 2)
!13236 = !DILocation(line: 56, column: 30, scope: !13233)
!13237 = !DILocation(line: 56, column: 52, scope: !13233)
!13238 = !DILocation(line: 56, column: 34, scope: !13233)
!13239 = !DILocation(line: 56, column: 58, scope: !13233)
!13240 = !DILocation(line: 56, column: 7, scope: !13234)
!13241 = !DILocation(line: 55, column: 53, scope: !13235)
!13242 = !DILocation(line: 55, column: 33, scope: !13235)
!13243 = distinct !{!13243, !13216, !13244}
!13244 = !DILocation(line: 59, column: 2, scope: !13217)
!13245 = !DILocation(line: 62, column: 1, scope: !13203)
!13246 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13183, file: !13183, line: 93, type: !13247, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13249)
!13247 = !DISubroutineType(types: !13248)
!13248 = !{!166, !13186}
!13249 = !{!13250}
!13250 = !DILocalVariable(name: "dev", arg: 1, scope: !13246, file: !13183, line: 93, type: !13186)
!13251 = !DILocation(line: 0, scope: !13246)
!13252 = !DILocation(line: 99, column: 10, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13246, file: !13183, line: 99, column: 6)
!13254 = !DILocation(line: 99, column: 6, scope: !13246)
!13255 = !DILocation(line: 103, column: 14, scope: !13246)
!13256 = !DILocation(line: 103, column: 21, scope: !13246)
!13257 = !DILocation(line: 103, column: 33, scope: !13246)
!13258 = !DILocation(line: 103, column: 49, scope: !13246)
!13259 = !DILocation(line: 103, column: 58, scope: !13246)
!13260 = !DILocation(line: 104, column: 1, scope: !13246)
!13261 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13183, file: !13183, line: 87, type: !13262, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13265)
!13262 = !DISubroutineType(types: !13263)
!13263 = !{!356, !13264}
!13264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13186, size: 32)
!13265 = !{!13266}
!13266 = !DILocalVariable(name: "devices", arg: 1, scope: !13261, file: !13183, line: 87, type: !13264)
!13267 = !DILocation(line: 0, scope: !13261)
!13268 = !DILocation(line: 89, column: 11, scope: !13261)
!13269 = !DILocation(line: 90, column: 2, scope: !13261)
!13270 = distinct !DISubprogram(name: "device_required_foreach", scope: !13183, file: !13183, line: 125, type: !13271, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13277)
!13271 = !DISubroutineType(types: !13272)
!13272 = !{!103, !13186, !13273, !102}
!13273 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !152, line: 471, baseType: !13274)
!13274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13275, size: 32)
!13275 = !DISubroutineType(types: !13276)
!13276 = !{!103, !13186, !102}
!13277 = !{!13278, !13279, !13280, !13281, !13282}
!13278 = !DILocalVariable(name: "dev", arg: 1, scope: !13270, file: !13183, line: 125, type: !13186)
!13279 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13270, file: !13183, line: 126, type: !13273)
!13280 = !DILocalVariable(name: "context", arg: 3, scope: !13270, file: !13183, line: 127, type: !102)
!13281 = !DILocalVariable(name: "handle_count", scope: !13270, file: !13183, line: 129, type: !356)
!13282 = !DILocalVariable(name: "handles", scope: !13270, file: !13183, line: 130, type: !169)
!13283 = !DILocation(line: 0, scope: !13270)
!13284 = !DILocation(line: 129, column: 2, scope: !13270)
!13285 = !DILocation(line: 129, column: 9, scope: !13270)
!13286 = !DILocation(line: 130, column: 35, scope: !13270)
!13287 = !DILocation(line: 132, column: 33, scope: !13270)
!13288 = !DILocation(line: 132, column: 9, scope: !13270)
!13289 = !DILocation(line: 133, column: 1, scope: !13270)
!13290 = !DILocation(line: 132, column: 2, scope: !13270)
!13291 = distinct !DISubprogram(name: "device_required_handles_get", scope: !152, file: !152, line: 493, type: !13292, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13294)
!13292 = !DISubroutineType(types: !13293)
!13293 = !{!169, !13186, !2626}
!13294 = !{!13295, !13296, !13297, !13298}
!13295 = !DILocalVariable(name: "dev", arg: 1, scope: !13291, file: !152, line: 493, type: !13186)
!13296 = !DILocalVariable(name: "count", arg: 2, scope: !13291, file: !152, line: 493, type: !2626)
!13297 = !DILocalVariable(name: "rv", scope: !13291, file: !152, line: 495, type: !169)
!13298 = !DILocalVariable(name: "i", scope: !13299, file: !152, line: 498, type: !356)
!13299 = distinct !DILexicalBlock(scope: !13300, file: !152, line: 497, column: 18)
!13300 = distinct !DILexicalBlock(scope: !13291, file: !152, line: 497, column: 6)
!13301 = !DILocation(line: 0, scope: !13291)
!13302 = !DILocation(line: 495, column: 35, scope: !13291)
!13303 = !DILocation(line: 497, column: 9, scope: !13300)
!13304 = !DILocation(line: 497, column: 6, scope: !13291)
!13305 = !DILocation(line: 0, scope: !13299)
!13306 = !DILocation(line: 500, column: 11, scope: !13299)
!13307 = !DILocation(line: 500, column: 40, scope: !13299)
!13308 = !DILocation(line: 502, column: 4, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13299, file: !152, line: 501, column: 40)
!13310 = distinct !{!13310, !13311, !13312}
!13311 = !DILocation(line: 500, column: 3, scope: !13299)
!13312 = !DILocation(line: 503, column: 3, scope: !13299)
!13313 = !DILocation(line: 504, column: 10, scope: !13299)
!13314 = !DILocation(line: 505, column: 2, scope: !13299)
!13315 = !DILocation(line: 507, column: 2, scope: !13291)
!13316 = distinct !DISubprogram(name: "device_visitor", scope: !13183, file: !13183, line: 106, type: !13317, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13319)
!13317 = !DISubroutineType(types: !13318)
!13318 = !{!103, !169, !356, !13273, !102}
!13319 = !{!13320, !13321, !13322, !13323, !13324, !13326, !13329, !13330}
!13320 = !DILocalVariable(name: "handles", arg: 1, scope: !13316, file: !13183, line: 106, type: !169)
!13321 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13316, file: !13183, line: 107, type: !356)
!13322 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13316, file: !13183, line: 108, type: !13273)
!13323 = !DILocalVariable(name: "context", arg: 4, scope: !13316, file: !13183, line: 109, type: !102)
!13324 = !DILocalVariable(name: "i", scope: !13325, file: !13183, line: 112, type: !356)
!13325 = distinct !DILexicalBlock(scope: !13316, file: !13183, line: 112, column: 2)
!13326 = !DILocalVariable(name: "dh", scope: !13327, file: !13183, line: 113, type: !171)
!13327 = distinct !DILexicalBlock(scope: !13328, file: !13183, line: 112, column: 44)
!13328 = distinct !DILexicalBlock(scope: !13325, file: !13183, line: 112, column: 2)
!13329 = !DILocalVariable(name: "rdev", scope: !13327, file: !13183, line: 114, type: !13186)
!13330 = !DILocalVariable(name: "rc", scope: !13327, file: !13183, line: 115, type: !103)
!13331 = !DILocation(line: 0, scope: !13316)
!13332 = !DILocation(line: 0, scope: !13325)
!13333 = !DILocation(line: 112, column: 23, scope: !13328)
!13334 = !DILocation(line: 112, column: 2, scope: !13325)
!13335 = distinct !{!13335, !13334, !13336}
!13336 = !DILocation(line: 120, column: 2, scope: !13325)
!13337 = !DILocation(line: 113, column: 24, scope: !13327)
!13338 = !DILocation(line: 0, scope: !13327)
!13339 = !DILocation(line: 114, column: 31, scope: !13327)
!13340 = !DILocation(line: 115, column: 12, scope: !13327)
!13341 = !DILocation(line: 117, column: 10, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13327, file: !13183, line: 117, column: 7)
!13343 = !DILocation(line: 112, column: 39, scope: !13328)
!13344 = !DILocation(line: 123, column: 1, scope: !13316)
!13345 = distinct !DISubprogram(name: "device_from_handle", scope: !152, file: !152, line: 439, type: !13346, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13348)
!13346 = !DISubroutineType(types: !13347)
!13347 = !{!13186, !171}
!13348 = !{!13349, !13350, !13351}
!13349 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13345, file: !152, line: 439, type: !171)
!13350 = !DILocalVariable(name: "dev", scope: !13345, file: !152, line: 443, type: !13186)
!13351 = !DILocalVariable(name: "numdev", scope: !13345, file: !152, line: 444, type: !356)
!13352 = !DILocation(line: 0, scope: !13345)
!13353 = !DILocation(line: 446, column: 7, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13345, file: !152, line: 446, column: 6)
!13355 = !DILocation(line: 446, column: 18, scope: !13354)
!13356 = !DILocation(line: 446, column: 23, scope: !13354)
!13357 = !DILocation(line: 450, column: 2, scope: !13345)
!13358 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13183, file: !13183, line: 135, type: !13271, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13359)
!13359 = !{!13360, !13361, !13362, !13363, !13364}
!13360 = !DILocalVariable(name: "dev", arg: 1, scope: !13358, file: !13183, line: 135, type: !13186)
!13361 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13358, file: !13183, line: 136, type: !13273)
!13362 = !DILocalVariable(name: "context", arg: 3, scope: !13358, file: !13183, line: 137, type: !102)
!13363 = !DILocalVariable(name: "handle_count", scope: !13358, file: !13183, line: 139, type: !356)
!13364 = !DILocalVariable(name: "handles", scope: !13358, file: !13183, line: 140, type: !169)
!13365 = !DILocation(line: 0, scope: !13358)
!13366 = !DILocation(line: 139, column: 2, scope: !13358)
!13367 = !DILocation(line: 139, column: 9, scope: !13358)
!13368 = !DILocation(line: 140, column: 35, scope: !13358)
!13369 = !DILocation(line: 142, column: 33, scope: !13358)
!13370 = !DILocation(line: 142, column: 9, scope: !13358)
!13371 = !DILocation(line: 143, column: 1, scope: !13358)
!13372 = !DILocation(line: 142, column: 2, scope: !13358)
!13373 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !152, file: !152, line: 573, type: !13292, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13374)
!13374 = !{!13375, !13376, !13377, !13378, !13379}
!13375 = !DILocalVariable(name: "dev", arg: 1, scope: !13373, file: !152, line: 573, type: !13186)
!13376 = !DILocalVariable(name: "count", arg: 2, scope: !13373, file: !152, line: 573, type: !2626)
!13377 = !DILocalVariable(name: "rv", scope: !13373, file: !152, line: 575, type: !169)
!13378 = !DILocalVariable(name: "region", scope: !13373, file: !152, line: 576, type: !356)
!13379 = !DILocalVariable(name: "i", scope: !13373, file: !152, line: 577, type: !356)
!13380 = !DILocation(line: 0, scope: !13373)
!13381 = !DILocation(line: 575, column: 35, scope: !13373)
!13382 = !DILocation(line: 579, column: 9, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !13373, file: !152, line: 579, column: 6)
!13384 = !DILocation(line: 579, column: 6, scope: !13373)
!13385 = !DILocation(line: 582, column: 8, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13387, file: !152, line: 582, column: 8)
!13387 = distinct !DILexicalBlock(scope: !13388, file: !152, line: 581, column: 23)
!13388 = distinct !DILexicalBlock(scope: !13383, file: !152, line: 579, column: 18)
!13389 = !DILocation(line: 582, column: 12, scope: !13386)
!13390 = !DILocation(line: 585, column: 6, scope: !13387)
!13391 = !DILocation(line: 0, scope: !13388)
!13392 = !DILocation(line: 581, column: 17, scope: !13388)
!13393 = !DILocation(line: 581, column: 3, scope: !13388)
!13394 = !DILocation(line: 588, column: 10, scope: !13388)
!13395 = !DILocation(line: 588, column: 16, scope: !13388)
!13396 = !DILocation(line: 589, column: 4, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13388, file: !152, line: 588, column: 39)
!13398 = !DILocation(line: 588, column: 3, scope: !13388)
!13399 = distinct !{!13399, !13398, !13400}
!13400 = !DILocation(line: 590, column: 3, scope: !13388)
!13401 = !DILocation(line: 591, column: 10, scope: !13388)
!13402 = !DILocation(line: 592, column: 2, scope: !13388)
!13403 = !DILocation(line: 575, column: 25, scope: !13373)
!13404 = !DILocation(line: 594, column: 2, scope: !13373)
!13405 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1963, file: !1963, line: 49, type: !6016, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !473)
!13406 = !DILocation(line: 51, column: 10, scope: !13405)
!13407 = !DILocation(line: 51, column: 20, scope: !13405)
!13408 = !DILocation(line: 51, column: 2, scope: !13405)
!13409 = distinct !DISubprogram(name: "coredump", scope: !3216, file: !3216, line: 209, type: !13410, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13556)
!13410 = !DISubroutineType(types: !13411)
!13411 = !{null, !32, !13412, !13456}
!13412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13413, size: 32)
!13413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13414)
!13414 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2833, line: 141, baseType: !13415)
!13415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2833, line: 97, size: 256, elements: !13416)
!13416 = !{!13417}
!13417 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13415, file: !2833, line: 107, baseType: !13418, size: 256)
!13418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2833, line: 98, size: 256, elements: !13419)
!13419 = !{!13420, !13425, !13430, !13435, !13440, !13445, !13450, !13455}
!13420 = !DIDerivedType(tag: DW_TAG_member, scope: !13418, file: !2833, line: 99, baseType: !13421, size: 32)
!13421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13418, file: !2833, line: 99, size: 32, elements: !13422)
!13422 = !{!13423, !13424}
!13423 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13421, file: !2833, line: 99, baseType: !132, size: 32)
!13424 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13421, file: !2833, line: 99, baseType: !132, size: 32)
!13425 = !DIDerivedType(tag: DW_TAG_member, scope: !13418, file: !2833, line: 100, baseType: !13426, size: 32, offset: 32)
!13426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13418, file: !2833, line: 100, size: 32, elements: !13427)
!13427 = !{!13428, !13429}
!13428 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13426, file: !2833, line: 100, baseType: !132, size: 32)
!13429 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13426, file: !2833, line: 100, baseType: !132, size: 32)
!13430 = !DIDerivedType(tag: DW_TAG_member, scope: !13418, file: !2833, line: 101, baseType: !13431, size: 32, offset: 64)
!13431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13418, file: !2833, line: 101, size: 32, elements: !13432)
!13432 = !{!13433, !13434}
!13433 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13431, file: !2833, line: 101, baseType: !132, size: 32)
!13434 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13431, file: !2833, line: 101, baseType: !132, size: 32)
!13435 = !DIDerivedType(tag: DW_TAG_member, scope: !13418, file: !2833, line: 102, baseType: !13436, size: 32, offset: 96)
!13436 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13418, file: !2833, line: 102, size: 32, elements: !13437)
!13437 = !{!13438, !13439}
!13438 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13436, file: !2833, line: 102, baseType: !132, size: 32)
!13439 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13436, file: !2833, line: 102, baseType: !132, size: 32)
!13440 = !DIDerivedType(tag: DW_TAG_member, scope: !13418, file: !2833, line: 103, baseType: !13441, size: 32, offset: 128)
!13441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13418, file: !2833, line: 103, size: 32, elements: !13442)
!13442 = !{!13443, !13444}
!13443 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13441, file: !2833, line: 103, baseType: !132, size: 32)
!13444 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13441, file: !2833, line: 103, baseType: !132, size: 32)
!13445 = !DIDerivedType(tag: DW_TAG_member, scope: !13418, file: !2833, line: 104, baseType: !13446, size: 32, offset: 160)
!13446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13418, file: !2833, line: 104, size: 32, elements: !13447)
!13447 = !{!13448, !13449}
!13448 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13446, file: !2833, line: 104, baseType: !132, size: 32)
!13449 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13446, file: !2833, line: 104, baseType: !132, size: 32)
!13450 = !DIDerivedType(tag: DW_TAG_member, scope: !13418, file: !2833, line: 105, baseType: !13451, size: 32, offset: 192)
!13451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13418, file: !2833, line: 105, size: 32, elements: !13452)
!13452 = !{!13453, !13454}
!13453 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13451, file: !2833, line: 105, baseType: !132, size: 32)
!13454 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13451, file: !2833, line: 105, baseType: !132, size: 32)
!13455 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13418, file: !2833, line: 106, baseType: !132, size: 32, offset: 224)
!13456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13457, size: 32)
!13457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !13458)
!13458 = !{!13459, !13517, !13529, !13530, !13531, !13532, !13538, !13551}
!13459 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13457, file: !367, line: 247, baseType: !13460, size: 384)
!13460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !13461)
!13461 = !{!13462, !13486, !13493, !13494, !13495, !13504, !13505, !13506}
!13462 = !DIDerivedType(tag: DW_TAG_member, scope: !13460, file: !367, line: 60, baseType: !13463, size: 64)
!13463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13460, file: !367, line: 60, size: 64, elements: !13464)
!13464 = !{!13465, !13480}
!13465 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13463, file: !367, line: 61, baseType: !13466, size: 64)
!13466 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !13467)
!13467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !13468)
!13468 = !{!13469, !13475}
!13469 = !DIDerivedType(tag: DW_TAG_member, scope: !13467, file: !321, line: 38, baseType: !13470, size: 32)
!13470 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13467, file: !321, line: 38, size: 32, elements: !13471)
!13471 = !{!13472, !13474}
!13472 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13470, file: !321, line: 39, baseType: !13473, size: 32)
!13473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13467, size: 32)
!13474 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13470, file: !321, line: 40, baseType: !13473, size: 32)
!13475 = !DIDerivedType(tag: DW_TAG_member, scope: !13467, file: !321, line: 42, baseType: !13476, size: 32, offset: 32)
!13476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13467, file: !321, line: 42, size: 32, elements: !13477)
!13477 = !{!13478, !13479}
!13478 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13476, file: !321, line: 43, baseType: !13473, size: 32)
!13479 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13476, file: !321, line: 44, baseType: !13473, size: 32)
!13480 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13463, file: !367, line: 62, baseType: !13481, size: 64)
!13481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !13482)
!13482 = !{!13483}
!13483 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13481, file: !392, line: 50, baseType: !13484, size: 64)
!13484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13485, size: 64, elements: !397)
!13485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13481, size: 32)
!13486 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13460, file: !367, line: 68, baseType: !13487, size: 32, offset: 64)
!13487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13488, size: 32)
!13488 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !13489)
!13489 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !13490)
!13490 = !{!13491}
!13491 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13489, file: !316, line: 232, baseType: !13492, size: 64)
!13492 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !13467)
!13493 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13460, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!13494 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13460, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!13495 = !DIDerivedType(tag: DW_TAG_member, scope: !13460, file: !367, line: 90, baseType: !13496, size: 16, offset: 112)
!13496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13460, file: !367, line: 90, size: 16, elements: !13497)
!13497 = !{!13498, !13503}
!13498 = !DIDerivedType(tag: DW_TAG_member, scope: !13496, file: !367, line: 91, baseType: !13499, size: 16)
!13499 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13496, file: !367, line: 91, size: 16, elements: !13500)
!13500 = !{!13501, !13502}
!13501 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13499, file: !367, line: 96, baseType: !415, size: 8)
!13502 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13499, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!13503 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13496, file: !367, line: 100, baseType: !340, size: 16)
!13504 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13460, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!13505 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13460, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!13506 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13460, file: !367, line: 131, baseType: !13507, size: 192, offset: 192)
!13507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !13508)
!13508 = !{!13509, !13510, !13516}
!13509 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13507, file: !316, line: 245, baseType: !13466, size: 64)
!13510 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13507, file: !316, line: 246, baseType: !13511, size: 32, offset: 64)
!13511 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !13512)
!13512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13513, size: 32)
!13513 = !DISubroutineType(types: !13514)
!13514 = !{null, !13515}
!13515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13507, size: 32)
!13516 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13507, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!13517 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13457, file: !367, line: 250, baseType: !13518, size: 288, offset: 384)
!13518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !13519)
!13519 = !{!13520, !13521, !13522, !13523, !13524, !13525, !13526, !13527, !13528}
!13520 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13518, file: !436, line: 26, baseType: !132, size: 32)
!13521 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13518, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!13522 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13518, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!13523 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13518, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!13524 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13518, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!13525 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13518, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!13526 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13518, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!13527 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13518, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!13528 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13518, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!13529 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13457, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!13530 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13457, file: !367, line: 256, baseType: !13488, size: 64, offset: 704)
!13531 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13457, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!13532 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13457, file: !367, line: 300, baseType: !13533, size: 96, offset: 800)
!13533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !13534)
!13534 = !{!13535, !13536, !13537}
!13535 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13533, file: !367, line: 153, baseType: !22, size: 32)
!13536 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13533, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!13537 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13533, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!13538 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13457, file: !367, line: 325, baseType: !13539, size: 32, offset: 896)
!13539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13540, size: 32)
!13540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !13541)
!13541 = !{!13542, !13548, !13549}
!13542 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13540, file: !312, line: 5074, baseType: !13543, size: 96)
!13543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !13544)
!13544 = !{!13545, !13546, !13547}
!13545 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13543, file: !462, line: 57, baseType: !465, size: 32)
!13546 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13543, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!13547 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13543, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!13548 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13540, file: !312, line: 5075, baseType: !13488, size: 64, offset: 96)
!13549 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13540, file: !312, line: 5076, baseType: !13550, offset: 160)
!13550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!13551 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13457, file: !367, line: 343, baseType: !13552, size: 64, offset: 928)
!13552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !13553)
!13553 = !{!13554, !13555}
!13554 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13552, file: !436, line: 63, baseType: !132, size: 32)
!13555 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13552, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!13556 = !{!13557, !13558, !13559}
!13557 = !DILocalVariable(name: "reason", arg: 1, scope: !13409, file: !3216, line: 209, type: !32)
!13558 = !DILocalVariable(name: "esf", arg: 2, scope: !13409, file: !3216, line: 209, type: !13412)
!13559 = !DILocalVariable(name: "thread", arg: 3, scope: !13409, file: !3216, line: 210, type: !13456)
!13560 = !DILocation(line: 0, scope: !13409)
!13561 = !DILocation(line: 212, column: 1, scope: !13409)
!13562 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3216, file: !3216, line: 214, type: !13563, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13565)
!13563 = !DISubroutineType(types: !13564)
!13564 = !{null, !22, !22}
!13565 = !{!13566, !13567}
!13566 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13562, file: !3216, line: 214, type: !22)
!13567 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13562, file: !3216, line: 214, type: !22)
!13568 = !DILocation(line: 0, scope: !13562)
!13569 = !DILocation(line: 216, column: 1, scope: !13562)
!13570 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3216, file: !3216, line: 218, type: !13571, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13573)
!13571 = !DISubroutineType(types: !13572)
!13572 = !{null, !270, !356}
!13573 = !{!13574, !13575}
!13574 = !DILocalVariable(name: "buf", arg: 1, scope: !13570, file: !3216, line: 218, type: !270)
!13575 = !DILocalVariable(name: "buflen", arg: 2, scope: !13570, file: !3216, line: 218, type: !356)
!13576 = !DILocation(line: 0, scope: !13570)
!13577 = !DILocation(line: 220, column: 1, scope: !13570)
!13578 = distinct !DISubprogram(name: "coredump_query", scope: !3216, file: !3216, line: 222, type: !13579, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13581)
!13579 = !DISubroutineType(types: !13580)
!13580 = !{!103, !3215, !102}
!13581 = !{!13582, !13583}
!13582 = !DILocalVariable(name: "query_id", arg: 1, scope: !13578, file: !3216, line: 222, type: !3215)
!13583 = !DILocalVariable(name: "arg", arg: 2, scope: !13578, file: !3216, line: 222, type: !102)
!13584 = !DILocation(line: 0, scope: !13578)
!13585 = !DILocation(line: 224, column: 2, scope: !13578)
!13586 = distinct !DISubprogram(name: "coredump_cmd", scope: !3216, file: !3216, line: 227, type: !13587, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13589)
!13587 = !DISubroutineType(types: !13588)
!13588 = !{!103, !3222, !102}
!13589 = !{!13590, !13591}
!13590 = !DILocalVariable(name: "query_id", arg: 1, scope: !13586, file: !3216, line: 227, type: !3222)
!13591 = !DILocalVariable(name: "arg", arg: 2, scope: !13586, file: !3216, line: 227, type: !102)
!13592 = !DILocation(line: 0, scope: !13586)
!13593 = !DILocation(line: 229, column: 2, scope: !13586)
!13594 = distinct !DISubprogram(name: "arch_system_halt", scope: !13595, file: !13595, line: 23, type: !5835, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13596)
!13595 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13596 = !{!13597}
!13597 = !DILocalVariable(name: "reason", arg: 1, scope: !13594, file: !13595, line: 23, type: !32)
!13598 = !DILocation(line: 0, scope: !13594)
!13599 = !DILocation(line: 55, column: 2, scope: !13600, inlinedAt: !13604)
!13600 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5824, file: !5824, line: 42, type: !5825, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13601)
!13601 = !{!13602, !13603}
!13602 = !DILocalVariable(name: "key", scope: !13600, file: !5824, line: 44, type: !32)
!13603 = !DILocalVariable(name: "tmp", scope: !13600, file: !5824, line: 53, type: !32)
!13604 = distinct !DILocation(line: 31, column: 8, scope: !13594)
!13605 = !{i64 2241090}
!13606 = !DILocation(line: 0, scope: !13600, inlinedAt: !13604)
!13607 = !DILocation(line: 32, column: 2, scope: !13594)
!13608 = !DILocation(line: 32, column: 2, scope: !13609)
!13609 = distinct !DILexicalBlock(scope: !13610, file: !13595, line: 32, column: 2)
!13610 = distinct !DILexicalBlock(scope: !13594, file: !13595, line: 32, column: 2)
!13611 = distinct !{!13611, !13612, !13613}
!13612 = !DILocation(line: 32, column: 2, scope: !13610)
!13613 = !DILocation(line: 34, column: 2, scope: !13610)
!13614 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13595, file: !13595, line: 39, type: !13615, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13617)
!13615 = !DISubroutineType(types: !13616)
!13616 = !{null, !32, !13412}
!13617 = !{!13618, !13619}
!13618 = !DILocalVariable(name: "reason", arg: 1, scope: !13614, file: !13595, line: 39, type: !32)
!13619 = !DILocalVariable(name: "esf", arg: 2, scope: !13614, file: !13595, line: 40, type: !13412)
!13620 = !DILocation(line: 0, scope: !13614)
!13621 = !DILocation(line: 46, column: 2, scope: !13614)
!13622 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13595, file: !13595, line: 81, type: !5835, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13623)
!13623 = !{!13624}
!13624 = !DILocalVariable(name: "reason", arg: 1, scope: !13622, file: !13595, line: 81, type: !32)
!13625 = !DILocation(line: 0, scope: !13622)
!13626 = !DILocation(line: 83, column: 2, scope: !13622)
!13627 = distinct !DISubprogram(name: "z_fatal_error", scope: !13595, file: !13595, line: 96, type: !13615, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13628)
!13628 = !{!13629, !13630, !13631, !13632}
!13629 = !DILocalVariable(name: "reason", arg: 1, scope: !13627, file: !13595, line: 96, type: !32)
!13630 = !DILocalVariable(name: "esf", arg: 2, scope: !13627, file: !13595, line: 96, type: !13412)
!13631 = !DILocalVariable(name: "key", scope: !13627, file: !13595, line: 102, type: !32)
!13632 = !DILocalVariable(name: "thread", scope: !13627, file: !13595, line: 103, type: !13456)
!13633 = !DILocation(line: 0, scope: !13627)
!13634 = !DILocation(line: 55, column: 2, scope: !13600, inlinedAt: !13635)
!13635 = distinct !DILocation(line: 102, column: 21, scope: !13627)
!13636 = !DILocation(line: 0, scope: !13600, inlinedAt: !13635)
!13637 = !DILocation(line: 119, column: 11, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13627, file: !13595, line: 119, column: 6)
!13639 = !DILocation(line: 119, column: 20, scope: !13638)
!13640 = !DILocation(line: 131, column: 2, scope: !13627)
!13641 = !DILocation(line: 151, column: 7, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13643, file: !13595, line: 146, column: 32)
!13643 = distinct !DILexicalBlock(scope: !13627, file: !13595, line: 146, column: 6)
!13644 = !DILocation(line: 151, column: 21, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13642, file: !13595, line: 151, column: 7)
!13646 = !DILocation(line: 104, column: 4, scope: !13627)
!13647 = !DILocalVariable(name: "key", arg: 1, scope: !13648, file: !5824, line: 84, type: !32)
!13648 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5824, file: !5824, line: 84, type: !5835, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13649)
!13649 = !{!13647}
!13650 = !DILocation(line: 0, scope: !13648, inlinedAt: !13651)
!13651 = distinct !DILocation(line: 186, column: 2, scope: !13627)
!13652 = !DILocation(line: 95, column: 2, scope: !13648, inlinedAt: !13651)
!13653 = !{i64 2241907}
!13654 = !DILocation(line: 189, column: 3, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13656, file: !13595, line: 188, column: 41)
!13656 = distinct !DILexicalBlock(scope: !13627, file: !13595, line: 188, column: 6)
!13657 = !DILocation(line: 191, column: 1, scope: !13627)
!13658 = distinct !DISubprogram(name: "k_current_get", scope: !312, file: !312, line: 530, type: !13659, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !473)
!13659 = !DISubroutineType(types: !13660)
!13660 = !{!13661}
!13661 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !13456)
!13662 = !DILocation(line: 535, column: 9, scope: !13658)
!13663 = !DILocation(line: 535, column: 2, scope: !13658)
!13664 = distinct !DISubprogram(name: "k_thread_abort", scope: !3689, file: !3689, line: 188, type: !13665, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13667)
!13665 = !DISubroutineType(types: !13666)
!13666 = !{null, !13661}
!13667 = !{!13668}
!13668 = !DILocalVariable(name: "thread", arg: 1, scope: !13664, file: !3689, line: 188, type: !13661)
!13669 = !DILocation(line: 0, scope: !13664)
!13670 = !DILocation(line: 197, column: 2, scope: !13671)
!13671 = distinct !DILexicalBlock(scope: !13664, file: !3689, line: 197, column: 2)
!13672 = !{i64 2154741869}
!13673 = !DILocation(line: 198, column: 2, scope: !13664)
!13674 = !DILocation(line: 199, column: 1, scope: !13664)
!13675 = distinct !DISubprogram(name: "z_current_get", scope: !3689, file: !3689, line: 173, type: !13659, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !473)
!13676 = !DILocation(line: 180, column: 2, scope: !13677)
!13677 = distinct !DILexicalBlock(scope: !13675, file: !3689, line: 180, column: 2)
!13678 = !{i64 2154741801}
!13679 = !DILocation(line: 181, column: 9, scope: !13675)
!13680 = !DILocation(line: 181, column: 2, scope: !13675)
!13681 = distinct !DISubprogram(name: "z_early_memset", scope: !1970, file: !1970, line: 108, type: !13682, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !13684)
!13682 = !DISubroutineType(types: !13683)
!13683 = !{null, !102, !103, !356}
!13684 = !{!13685, !13686, !13687}
!13685 = !DILocalVariable(name: "dst", arg: 1, scope: !13681, file: !1970, line: 108, type: !102)
!13686 = !DILocalVariable(name: "c", arg: 2, scope: !13681, file: !1970, line: 108, type: !103)
!13687 = !DILocalVariable(name: "n", arg: 3, scope: !13681, file: !1970, line: 108, type: !356)
!13688 = !DILocation(line: 0, scope: !13681)
!13689 = !DILocation(line: 110, column: 9, scope: !13681)
!13690 = !DILocation(line: 111, column: 1, scope: !13681)
!13691 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1970, file: !1970, line: 121, type: !13692, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !13694)
!13692 = !DISubroutineType(types: !13693)
!13693 = !{null, !102, !13, !356}
!13694 = !{!13695, !13696, !13697}
!13695 = !DILocalVariable(name: "dst", arg: 1, scope: !13691, file: !1970, line: 121, type: !102)
!13696 = !DILocalVariable(name: "src", arg: 2, scope: !13691, file: !1970, line: 121, type: !13)
!13697 = !DILocalVariable(name: "n", arg: 3, scope: !13691, file: !1970, line: 121, type: !356)
!13698 = !DILocation(line: 0, scope: !13691)
!13699 = !DILocation(line: 123, column: 9, scope: !13691)
!13700 = !DILocation(line: 124, column: 1, scope: !13691)
!13701 = distinct !DISubprogram(name: "z_bss_zero", scope: !1970, file: !1970, line: 132, type: !3249, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !473)
!13702 = !DILocation(line: 143, column: 2, scope: !13701)
!13703 = !DILocation(line: 168, column: 1, scope: !13701)
!13704 = distinct !DISubprogram(name: "z_init_cpu", scope: !1970, file: !1970, line: 372, type: !8486, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !13705)
!13705 = !{!13706}
!13706 = !DILocalVariable(name: "id", arg: 1, scope: !13704, file: !1970, line: 372, type: !103)
!13707 = !DILocation(line: 0, scope: !13704)
!13708 = !DILocation(line: 374, column: 2, scope: !13704)
!13709 = !DILocation(line: 375, column: 34, scope: !13704)
!13710 = !DILocation(line: 375, column: 19, scope: !13704)
!13711 = !DILocation(line: 375, column: 31, scope: !13704)
!13712 = !DILocation(line: 376, column: 24, scope: !13704)
!13713 = !DILocation(line: 376, column: 19, scope: !13704)
!13714 = !DILocation(line: 376, column: 22, scope: !13704)
!13715 = !DILocation(line: 378, column: 26, scope: !13704)
!13716 = !DILocation(line: 378, column: 4, scope: !13704)
!13717 = !DILocation(line: 378, column: 50, scope: !13704)
!13718 = !DILocation(line: 377, column: 19, scope: !13704)
!13719 = !DILocation(line: 377, column: 29, scope: !13704)
!13720 = !DILocation(line: 384, column: 1, scope: !13704)
!13721 = distinct !DISubprogram(name: "init_idle_thread", scope: !1970, file: !1970, line: 343, type: !8486, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !13722)
!13722 = !{!13723, !13724, !13725, !13728}
!13723 = !DILocalVariable(name: "i", arg: 1, scope: !13721, file: !1970, line: 343, type: !103)
!13724 = !DILocalVariable(name: "thread", scope: !13721, file: !1970, line: 345, type: !2062)
!13725 = !DILocalVariable(name: "stack", scope: !13721, file: !1970, line: 346, type: !13726)
!13726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13727, size: 32)
!13727 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3568, line: 44, baseType: !2176)
!13728 = !DILocalVariable(name: "tname", scope: !13721, file: !1970, line: 358, type: !1081)
!13729 = !DILocation(line: 0, scope: !13721)
!13730 = !DILocation(line: 345, column: 29, scope: !13721)
!13731 = !DILocation(line: 346, column: 28, scope: !13721)
!13732 = !DILocation(line: 362, column: 37, scope: !13721)
!13733 = !DILocation(line: 362, column: 36, scope: !13721)
!13734 = !DILocation(line: 361, column: 2, scope: !13721)
!13735 = !DILocation(line: 365, column: 2, scope: !13721)
!13736 = !DILocation(line: 370, column: 1, scope: !13721)
!13737 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2177, file: !2177, line: 331, type: !13738, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !13740)
!13738 = !DISubroutineType(types: !13739)
!13739 = !{!1081, !13726}
!13740 = !{!13741}
!13741 = !DILocalVariable(name: "sym", arg: 1, scope: !13737, file: !2177, line: 331, type: !13726)
!13742 = !DILocation(line: 0, scope: !13737)
!13743 = !DILocation(line: 333, column: 21, scope: !13737)
!13744 = !DILocation(line: 333, column: 2, scope: !13737)
!13745 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13746, file: !13746, line: 155, type: !13747, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !13749)
!13746 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13747 = !DISubroutineType(types: !13748)
!13748 = !{null, !2062}
!13749 = !{!13750}
!13750 = !DILocalVariable(name: "thread", arg: 1, scope: !13745, file: !13746, line: 155, type: !2062)
!13751 = !DILocation(line: 0, scope: !13745)
!13752 = !DILocation(line: 157, column: 15, scope: !13745)
!13753 = !DILocation(line: 157, column: 28, scope: !13745)
!13754 = !DILocation(line: 158, column: 1, scope: !13745)
!13755 = distinct !DISubprogram(name: "z_cstart", scope: !1970, file: !1970, line: 501, type: !3249, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !13756)
!13756 = !{!13757}
!13757 = !DILocalVariable(name: "dummy_thread", scope: !13755, file: !1970, line: 518, type: !2063)
!13758 = !DILocation(line: 507, column: 2, scope: !13755)
!13759 = !DILocation(line: 43, column: 14, scope: !13760, inlinedAt: !13764)
!13760 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13761, file: !13761, line: 40, type: !3249, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !13762)
!13761 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13762 = !{!13763}
!13763 = !DILocalVariable(name: "msp", scope: !13760, file: !13761, line: 42, type: !132)
!13764 = distinct !DILocation(line: 44, column: 2, scope: !13765, inlinedAt: !13767)
!13765 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13766, file: !13766, line: 42, type: !3249, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !473)
!13766 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13767 = distinct !DILocation(line: 510, column: 2, scope: !13755)
!13768 = !DILocation(line: 43, column: 3, scope: !13760, inlinedAt: !13764)
!13769 = !DILocation(line: 43, column: 60, scope: !13760, inlinedAt: !13764)
!13770 = !DILocation(line: 0, scope: !13760, inlinedAt: !13764)
!13771 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13772, file: !6844, line: 1153, type: !132)
!13772 = distinct !DISubprogram(name: "__set_MSP", scope: !6844, file: !6844, line: 1153, type: !6935, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !13773)
!13773 = !{!13771}
!13774 = !DILocation(line: 0, scope: !13772, inlinedAt: !13775)
!13775 = distinct !DILocation(line: 46, column: 2, scope: !13760, inlinedAt: !13764)
!13776 = !DILocation(line: 1155, column: 3, scope: !13772, inlinedAt: !13775)
!13777 = !{i64 3515466}
!13778 = !DILocation(line: 62, column: 11, scope: !13760, inlinedAt: !13764)
!13779 = !DILocation(line: 102, column: 2, scope: !13780, inlinedAt: !13781)
!13780 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7638, file: !7638, line: 97, type: !3249, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !473)
!13781 = distinct !DILocation(line: 45, column: 2, scope: !13765, inlinedAt: !13767)
!13782 = !DILocation(line: 108, column: 2, scope: !13780, inlinedAt: !13781)
!13783 = !DILocation(line: 112, column: 2, scope: !13780, inlinedAt: !13781)
!13784 = !DILocation(line: 113, column: 2, scope: !13780, inlinedAt: !13781)
!13785 = !DILocation(line: 114, column: 2, scope: !13780, inlinedAt: !13781)
!13786 = !DILocation(line: 116, column: 2, scope: !13780, inlinedAt: !13781)
!13787 = !DILocation(line: 123, column: 13, scope: !13780, inlinedAt: !13781)
!13788 = !DILocation(line: 46, column: 2, scope: !13765, inlinedAt: !13767)
!13789 = !DILocation(line: 47, column: 2, scope: !13765, inlinedAt: !13767)
!13790 = !DILocation(line: 174, column: 12, scope: !13791, inlinedAt: !13792)
!13791 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7638, file: !7638, line: 169, type: !3249, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !473)
!13792 = distinct !DILocation(line: 48, column: 2, scope: !13765, inlinedAt: !13767)
!13793 = !DILocation(line: 179, column: 12, scope: !13791, inlinedAt: !13792)
!13794 = !DILocation(line: 50, column: 2, scope: !13765, inlinedAt: !13767)
!13795 = !DILocation(line: 57, column: 2, scope: !13765, inlinedAt: !13767)
!13796 = !DILocation(line: 518, column: 2, scope: !13755)
!13797 = !DILocation(line: 518, column: 18, scope: !13755)
!13798 = !DILocation(line: 520, column: 2, scope: !13755)
!13799 = !DILocation(line: 523, column: 2, scope: !13755)
!13800 = !DILocation(line: 526, column: 2, scope: !13755)
!13801 = !DILocation(line: 527, column: 2, scope: !13755)
!13802 = !DILocation(line: 543, column: 24, scope: !13755)
!13803 = !DILocation(line: 543, column: 2, scope: !13755)
!13804 = !DILocation(line: 0, scope: !2196)
!13805 = !DILocation(line: 246, column: 15, scope: !2214)
!13806 = !DILocation(line: 246, column: 36, scope: !2213)
!13807 = !DILocation(line: 246, column: 2, scope: !2214)
!13808 = !DILocation(line: 247, column: 37, scope: !2212)
!13809 = !DILocation(line: 0, scope: !2212)
!13810 = !DILocation(line: 248, column: 19, scope: !2212)
!13811 = !DILocation(line: 248, column: 12, scope: !2212)
!13812 = !DILocation(line: 250, column: 11, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !2212, file: !1970, line: 250, column: 7)
!13814 = !DILocation(line: 250, column: 7, scope: !2212)
!13815 = !DILocation(line: 254, column: 11, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13817, file: !1970, line: 254, column: 8)
!13817 = distinct !DILexicalBlock(scope: !13813, file: !1970, line: 250, column: 20)
!13818 = !DILocation(line: 254, column: 8, scope: !13817)
!13819 = !DILocation(line: 255, column: 9, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13816, file: !1970, line: 254, column: 17)
!13821 = !DILocation(line: 258, column: 9, scope: !13820)
!13822 = !DILocation(line: 261, column: 28, scope: !13820)
!13823 = !DILocation(line: 261, column: 10, scope: !13820)
!13824 = !DILocation(line: 261, column: 17, scope: !13820)
!13825 = !DILocation(line: 261, column: 26, scope: !13820)
!13826 = !DILocation(line: 262, column: 4, scope: !13820)
!13827 = !DILocation(line: 263, column: 9, scope: !13817)
!13828 = !DILocation(line: 263, column: 16, scope: !13817)
!13829 = !DILocation(line: 263, column: 28, scope: !13817)
!13830 = !DILocation(line: 264, column: 3, scope: !13817)
!13831 = !DILocation(line: 246, column: 60, scope: !2213)
!13832 = distinct !{!13832, !13807, !13833}
!13833 = !DILocation(line: 265, column: 2, scope: !2214)
!13834 = !DILocation(line: 266, column: 1, scope: !2196)
!13835 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !507, file: !507, line: 1814, type: !6878, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !13836)
!13836 = !{!13837, !13838}
!13837 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13835, file: !507, line: 1814, type: !762)
!13838 = !DILocalVariable(name: "priority", arg: 2, scope: !13835, file: !507, line: 1814, type: !132)
!13839 = !DILocation(line: 0, scope: !13835)
!13840 = !DILocation(line: 1822, column: 48, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13842, file: !507, line: 1821, column: 3)
!13842 = distinct !DILexicalBlock(scope: !13835, file: !507, line: 1816, column: 7)
!13843 = !DILocation(line: 1822, column: 32, scope: !13841)
!13844 = !DILocation(line: 1822, column: 40, scope: !13841)
!13845 = !DILocation(line: 1822, column: 5, scope: !13841)
!13846 = !DILocation(line: 1822, column: 46, scope: !13841)
!13847 = !DILocation(line: 1824, column: 1, scope: !13835)
!13848 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13766, file: !13766, line: 32, type: !3249, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!13849 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13850, file: !13850, line: 215, type: !13747, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !13851)
!13850 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13851 = !{!13852}
!13852 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13849, file: !13850, line: 215, type: !2062)
!13853 = !DILocation(line: 0, scope: !13849)
!13854 = !DILocation(line: 217, column: 21, scope: !13849)
!13855 = !DILocation(line: 217, column: 34, scope: !13849)
!13856 = !DILocation(line: 221, column: 21, scope: !13849)
!13857 = !DILocation(line: 221, column: 34, scope: !13849)
!13858 = !DILocation(line: 223, column: 27, scope: !13849)
!13859 = !DILocation(line: 223, column: 33, scope: !13849)
!13860 = !DILocation(line: 224, column: 27, scope: !13849)
!13861 = !DILocation(line: 224, column: 32, scope: !13849)
!13862 = !DILocation(line: 232, column: 16, scope: !13849)
!13863 = !DILocation(line: 232, column: 30, scope: !13849)
!13864 = !DILocation(line: 239, column: 24, scope: !13849)
!13865 = !DILocation(line: 240, column: 1, scope: !13849)
!13866 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1970, file: !1970, line: 399, type: !13867, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !13869)
!13867 = !DISubroutineType(types: !13868)
!13868 = !{!1081}
!13869 = !{!13870}
!13870 = !DILocalVariable(name: "stack_ptr", scope: !13866, file: !1970, line: 401, type: !1081)
!13871 = !DILocation(line: 404, column: 2, scope: !13866)
!13872 = !DILocation(line: 416, column: 24, scope: !13866)
!13873 = !DILocation(line: 418, column: 14, scope: !13866)
!13874 = !DILocation(line: 0, scope: !13866)
!13875 = !DILocation(line: 423, column: 2, scope: !13866)
!13876 = !DILocation(line: 424, column: 2, scope: !13866)
!13877 = !DILocation(line: 426, column: 2, scope: !13866)
!13878 = !DILocation(line: 428, column: 2, scope: !13866)
!13879 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1970, file: !1970, line: 432, type: !13880, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !13882)
!13880 = !DISubroutineType(types: !13881)
!13881 = !{null, !1081}
!13882 = !{!13883}
!13883 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13879, file: !1970, line: 432, type: !1081)
!13884 = !DILocation(line: 0, scope: !13879)
!13885 = !DILocation(line: 435, column: 2, scope: !13879)
!13886 = !DILocation(line: 445, column: 2, scope: !13879)
!13887 = distinct !DISubprogram(name: "bg_thread_main", scope: !1970, file: !1970, line: 277, type: !3570, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !13888)
!13888 = !{!13889, !13890, !13891}
!13889 = !DILocalVariable(name: "unused1", arg: 1, scope: !13887, file: !1970, line: 277, type: !102)
!13890 = !DILocalVariable(name: "unused2", arg: 2, scope: !13887, file: !1970, line: 277, type: !102)
!13891 = !DILocalVariable(name: "unused3", arg: 3, scope: !13887, file: !1970, line: 277, type: !102)
!13892 = !DILocation(line: 0, scope: !13887)
!13893 = !DILocation(line: 291, column: 20, scope: !13887)
!13894 = !DILocation(line: 293, column: 2, scope: !13887)
!13895 = !DILocation(line: 297, column: 2, scope: !13887)
!13896 = !DILocation(line: 305, column: 2, scope: !13887)
!13897 = !DILocation(line: 307, column: 2, scope: !13887)
!13898 = !DILocation(line: 330, column: 8, scope: !13887)
!13899 = !DILocation(line: 333, column: 34, scope: !13887)
!13900 = !DILocation(line: 339, column: 1, scope: !13887)
!13901 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2223, file: !2223, line: 45, type: !13902, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !13910)
!13902 = !DISubroutineType(types: !13903)
!13903 = !{null, !13904, !102}
!13904 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !312, line: 103, baseType: !13905)
!13905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13906, size: 32)
!13906 = !DISubroutineType(types: !13907)
!13907 = !{null, !13908, !102}
!13908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13909, size: 32)
!13909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2228)
!13910 = !{!13911, !13912}
!13911 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13901, file: !2223, line: 45, type: !13904)
!13912 = !DILocalVariable(name: "user_data", arg: 2, scope: !13901, file: !2223, line: 45, type: !102)
!13913 = !DILocation(line: 0, scope: !13901)
!13914 = !DILocation(line: 71, column: 1, scope: !13901)
!13915 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2223, file: !2223, line: 73, type: !13902, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !13916)
!13916 = !{!13917, !13918}
!13917 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13915, file: !2223, line: 73, type: !13904)
!13918 = !DILocalVariable(name: "user_data", arg: 2, scope: !13915, file: !2223, line: 73, type: !102)
!13919 = !DILocation(line: 0, scope: !13915)
!13920 = !DILocation(line: 95, column: 1, scope: !13915)
!13921 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2223, file: !2223, line: 97, type: !7639, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !473)
!13922 = !DILocation(line: 1031, column: 3, scope: !13923, inlinedAt: !13926)
!13923 = distinct !DISubprogram(name: "__get_IPSR", scope: !6844, file: !6844, line: 1027, type: !6925, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !13924)
!13924 = !{!13925}
!13925 = !DILocalVariable(name: "result", scope: !13923, file: !6844, line: 1029, type: !132)
!13926 = distinct !DILocation(line: 48, column: 10, scope: !13927, inlinedAt: !13928)
!13927 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7638, file: !7638, line: 46, type: !7639, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !473)
!13928 = distinct !DILocation(line: 99, column: 9, scope: !13921)
!13929 = !{i64 3521117}
!13930 = !DILocation(line: 0, scope: !13923, inlinedAt: !13926)
!13931 = !DILocation(line: 48, column: 9, scope: !13927, inlinedAt: !13928)
!13932 = !DILocation(line: 99, column: 2, scope: !13921)
!13933 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2223, file: !2223, line: 106, type: !3249, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !473)
!13934 = !DILocation(line: 108, column: 2, scope: !13933)
!13935 = !DILocation(line: 108, column: 17, scope: !13933)
!13936 = !DILocation(line: 108, column: 30, scope: !13933)
!13937 = !DILocation(line: 109, column: 1, scope: !13933)
!13938 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2223, file: !2223, line: 116, type: !3249, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !473)
!13939 = !DILocation(line: 118, column: 2, scope: !13938)
!13940 = !DILocation(line: 118, column: 17, scope: !13938)
!13941 = !DILocation(line: 118, column: 30, scope: !13938)
!13942 = !DILocation(line: 119, column: 1, scope: !13938)
!13943 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2223, file: !2223, line: 126, type: !7639, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !473)
!13944 = !DILocation(line: 128, column: 10, scope: !13943)
!13945 = !DILocation(line: 128, column: 25, scope: !13943)
!13946 = !DILocation(line: 128, column: 38, scope: !13943)
!13947 = !DILocation(line: 128, column: 53, scope: !13943)
!13948 = !DILocation(line: 128, column: 2, scope: !13943)
!13949 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2223, file: !2223, line: 187, type: !13950, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !13952)
!13950 = !DISubroutineType(types: !13951)
!13951 = !{!103, !2227, !155}
!13952 = !{!13953, !13954}
!13953 = !DILocalVariable(name: "thread", arg: 1, scope: !13949, file: !2223, line: 187, type: !2227)
!13954 = !DILocalVariable(name: "value", arg: 2, scope: !13949, file: !2223, line: 187, type: !155)
!13955 = !DILocation(line: 0, scope: !13949)
!13956 = !DILocation(line: 206, column: 2, scope: !13949)
!13957 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2223, file: !2223, line: 238, type: !13958, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !13960)
!13958 = !DISubroutineType(types: !13959)
!13959 = !{!155, !2227}
!13960 = !{!13961}
!13961 = !DILocalVariable(name: "thread", arg: 1, scope: !13957, file: !2223, line: 238, type: !2227)
!13962 = !DILocation(line: 0, scope: !13957)
!13963 = !DILocation(line: 244, column: 2, scope: !13957)
!13964 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2223, file: !2223, line: 248, type: !13965, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !13967)
!13965 = !DISubroutineType(types: !13966)
!13966 = !{!103, !2226, !1081, !356}
!13967 = !{!13968, !13969, !13970}
!13968 = !DILocalVariable(name: "thread", arg: 1, scope: !13964, file: !2223, line: 248, type: !2226)
!13969 = !DILocalVariable(name: "buf", arg: 2, scope: !13964, file: !2223, line: 248, type: !1081)
!13970 = !DILocalVariable(name: "size", arg: 3, scope: !13964, file: !2223, line: 248, type: !356)
!13971 = !DILocation(line: 0, scope: !13964)
!13972 = !DILocation(line: 257, column: 2, scope: !13964)
!13973 = !DILocation(line: 0, scope: !2222)
!13974 = !DILocation(line: 281, column: 11, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !2222, file: !2223, line: 281, column: 6)
!13976 = !DILocation(line: 281, column: 20, scope: !13975)
!13977 = !DILocation(line: 275, column: 45, scope: !2222)
!13978 = !DILocation(line: 285, column: 10, scope: !2222)
!13979 = !DILocation(line: 0, scope: !2343)
!13980 = !DILocation(line: 293, column: 39, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !2343, file: !2223, line: 293, column: 2)
!13982 = !DILocation(line: 293, column: 2, scope: !2343)
!13983 = !DILocation(line: 273, column: 14, scope: !2222)
!13984 = !DILocation(line: 309, column: 2, scope: !2222)
!13985 = !DILocation(line: 309, column: 11, scope: !2222)
!13986 = !DILocation(line: 311, column: 2, scope: !2222)
!13987 = !DILocation(line: 293, column: 26, scope: !13981)
!13988 = !DILocation(line: 294, column: 9, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13981, file: !2223, line: 293, column: 54)
!13990 = !DILocation(line: 295, column: 21, scope: !13991)
!13991 = distinct !DILexicalBlock(scope: !13989, file: !2223, line: 295, column: 7)
!13992 = !DILocation(line: 295, column: 28, scope: !13991)
!13993 = !DILocation(line: 295, column: 7, scope: !13989)
!13994 = !DILocation(line: 299, column: 25, scope: !13989)
!13995 = !DILocation(line: 299, column: 41, scope: !13989)
!13996 = !DILocation(line: 300, column: 7, scope: !13989)
!13997 = !DILocation(line: 300, column: 26, scope: !13989)
!13998 = !DILocation(line: 299, column: 10, scope: !13989)
!13999 = !DILocation(line: 299, column: 7, scope: !13989)
!14000 = !DILocation(line: 302, column: 16, scope: !13989)
!14001 = !DILocation(line: 304, column: 20, scope: !14002)
!14002 = distinct !DILexicalBlock(scope: !13989, file: !2223, line: 304, column: 7)
!14003 = !DILocation(line: 304, column: 7, scope: !13989)
!14004 = !DILocation(line: 305, column: 26, scope: !14005)
!14005 = distinct !DILexicalBlock(scope: !14002, file: !2223, line: 304, column: 26)
!14006 = !DILocation(line: 305, column: 42, scope: !14005)
!14007 = !DILocation(line: 305, column: 11, scope: !14005)
!14008 = !DILocation(line: 305, column: 8, scope: !14005)
!14009 = !DILocation(line: 306, column: 3, scope: !14005)
!14010 = !DILocation(line: 293, column: 50, scope: !13981)
!14011 = !DILocation(line: 312, column: 1, scope: !2222)
!14012 = distinct !DISubprogram(name: "copy_bytes", scope: !2223, file: !2223, line: 261, type: !14013, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14015)
!14013 = !DISubroutineType(types: !14014)
!14014 = !{!356, !1081, !356, !155, !356}
!14015 = !{!14016, !14017, !14018, !14019, !14020}
!14016 = !DILocalVariable(name: "dest", arg: 1, scope: !14012, file: !2223, line: 261, type: !1081)
!14017 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14012, file: !2223, line: 261, type: !356)
!14018 = !DILocalVariable(name: "src", arg: 3, scope: !14012, file: !2223, line: 261, type: !155)
!14019 = !DILocalVariable(name: "src_size", arg: 4, scope: !14012, file: !2223, line: 261, type: !356)
!14020 = !DILocalVariable(name: "bytes_to_copy", scope: !14012, file: !2223, line: 263, type: !356)
!14021 = !DILocation(line: 0, scope: !14012)
!14022 = !DILocation(line: 265, column: 18, scope: !14012)
!14023 = !DILocation(line: 266, column: 2, scope: !14012)
!14024 = !DILocation(line: 268, column: 2, scope: !14012)
!14025 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2223, file: !2223, line: 383, type: !14026, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14028)
!14026 = !DISubroutineType(types: !14027)
!14027 = !{null, !2227}
!14028 = !{!14029}
!14029 = !DILocalVariable(name: "thread", arg: 1, scope: !14025, file: !2223, line: 383, type: !2227)
!14030 = !DILocation(line: 0, scope: !14025)
!14031 = !DILocation(line: 387, column: 2, scope: !14025)
!14032 = !DILocation(line: 388, column: 1, scope: !14025)
!14033 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2223, file: !2223, line: 528, type: !14034, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14041)
!14034 = !DISubroutineType(types: !14035)
!14035 = !{!1081, !2227, !14036, !356, !3567, !102, !102, !102, !103, !132, !155}
!14036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14037, size: 32)
!14037 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3568, line: 44, baseType: !14038)
!14038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2177, line: 47, size: 8, elements: !14039)
!14039 = !{!14040}
!14040 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14038, file: !2177, line: 48, baseType: !108, size: 8)
!14041 = !{!14042, !14043, !14044, !14045, !14046, !14047, !14048, !14049, !14050, !14051, !14052}
!14042 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14033, file: !2223, line: 528, type: !2227)
!14043 = !DILocalVariable(name: "stack", arg: 2, scope: !14033, file: !2223, line: 529, type: !14036)
!14044 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14033, file: !2223, line: 529, type: !356)
!14045 = !DILocalVariable(name: "entry", arg: 4, scope: !14033, file: !2223, line: 530, type: !3567)
!14046 = !DILocalVariable(name: "p1", arg: 5, scope: !14033, file: !2223, line: 531, type: !102)
!14047 = !DILocalVariable(name: "p2", arg: 6, scope: !14033, file: !2223, line: 531, type: !102)
!14048 = !DILocalVariable(name: "p3", arg: 7, scope: !14033, file: !2223, line: 531, type: !102)
!14049 = !DILocalVariable(name: "prio", arg: 8, scope: !14033, file: !2223, line: 532, type: !103)
!14050 = !DILocalVariable(name: "options", arg: 9, scope: !14033, file: !2223, line: 532, type: !132)
!14051 = !DILocalVariable(name: "name", arg: 10, scope: !14033, file: !2223, line: 532, type: !155)
!14052 = !DILocalVariable(name: "stack_ptr", scope: !14033, file: !2223, line: 534, type: !1081)
!14053 = !DILocation(line: 0, scope: !14033)
!14054 = !DILocation(line: 550, column: 28, scope: !14033)
!14055 = !DILocation(line: 550, column: 2, scope: !14033)
!14056 = !DILocation(line: 553, column: 34, scope: !14033)
!14057 = !DILocation(line: 553, column: 2, scope: !14033)
!14058 = !DILocation(line: 554, column: 14, scope: !14033)
!14059 = !DILocation(line: 564, column: 2, scope: !14033)
!14060 = !DILocation(line: 567, column: 14, scope: !14033)
!14061 = !DILocation(line: 567, column: 24, scope: !14033)
!14062 = !DILocation(line: 612, column: 7, scope: !14063)
!14063 = distinct !DILexicalBlock(scope: !14033, file: !2223, line: 612, column: 6)
!14064 = !DILocation(line: 612, column: 6, scope: !14033)
!14065 = !DILocation(line: 627, column: 40, scope: !14033)
!14066 = !DILocation(line: 637, column: 2, scope: !14033)
!14067 = !DILocation(line: 613, column: 15, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14063, file: !2223, line: 612, column: 17)
!14069 = !DILocation(line: 613, column: 29, scope: !14068)
!14070 = !DILocation(line: 638, column: 1, scope: !14033)
!14071 = distinct !DISubprogram(name: "z_waitq_init", scope: !14072, file: !14072, line: 47, type: !14073, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14075)
!14072 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14073 = !DISubroutineType(types: !14074)
!14074 = !{null, !2258}
!14075 = !{!14076}
!14076 = !DILocalVariable(name: "w", arg: 1, scope: !14071, file: !14072, line: 47, type: !2258)
!14077 = !DILocation(line: 0, scope: !14071)
!14078 = !DILocation(line: 49, column: 21, scope: !14071)
!14079 = !DILocation(line: 49, column: 2, scope: !14071)
!14080 = !DILocation(line: 50, column: 1, scope: !14071)
!14081 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2223, file: !2223, line: 791, type: !14082, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14085)
!14082 = !DISubroutineType(types: !14083)
!14083 = !{null, !14084, !103, !132, !32}
!14084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!14085 = !{!14086, !14087, !14088, !14089}
!14086 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14081, file: !2223, line: 791, type: !14084)
!14087 = !DILocalVariable(name: "priority", arg: 2, scope: !14081, file: !2223, line: 791, type: !103)
!14088 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14081, file: !2223, line: 792, type: !132)
!14089 = !DILocalVariable(name: "options", arg: 4, scope: !14081, file: !2223, line: 792, type: !32)
!14090 = !DILocation(line: 0, scope: !14081)
!14091 = !DILocation(line: 795, column: 15, scope: !14081)
!14092 = !DILocation(line: 795, column: 25, scope: !14081)
!14093 = !DILocation(line: 796, column: 30, scope: !14081)
!14094 = !DILocation(line: 796, column: 15, scope: !14081)
!14095 = !DILocation(line: 796, column: 28, scope: !14081)
!14096 = !DILocation(line: 797, column: 30, scope: !14081)
!14097 = !DILocation(line: 797, column: 15, scope: !14081)
!14098 = !DILocation(line: 797, column: 28, scope: !14081)
!14099 = !DILocation(line: 799, column: 22, scope: !14081)
!14100 = !DILocation(line: 799, column: 15, scope: !14081)
!14101 = !DILocation(line: 799, column: 20, scope: !14081)
!14102 = !DILocation(line: 801, column: 15, scope: !14081)
!14103 = !DILocation(line: 801, column: 28, scope: !14081)
!14104 = !DILocation(line: 814, column: 2, scope: !14081)
!14105 = !DILocation(line: 815, column: 1, scope: !14081)
!14106 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2223, file: !2223, line: 449, type: !14107, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14109)
!14107 = !DISubroutineType(types: !14108)
!14108 = !{!1081, !2227, !14036, !356}
!14109 = !{!14110, !14111, !14112, !14113, !14114, !14115, !14116, !14117}
!14110 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14106, file: !2223, line: 449, type: !2227)
!14111 = !DILocalVariable(name: "stack", arg: 2, scope: !14106, file: !2223, line: 450, type: !14036)
!14112 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14106, file: !2223, line: 450, type: !356)
!14113 = !DILocalVariable(name: "stack_obj_size", scope: !14106, file: !2223, line: 452, type: !356)
!14114 = !DILocalVariable(name: "stack_buf_size", scope: !14106, file: !2223, line: 452, type: !356)
!14115 = !DILocalVariable(name: "stack_ptr", scope: !14106, file: !2223, line: 453, type: !1081)
!14116 = !DILocalVariable(name: "stack_buf_start", scope: !14106, file: !2223, line: 453, type: !1081)
!14117 = !DILocalVariable(name: "delta", scope: !14106, file: !2223, line: 454, type: !356)
!14118 = !DILocation(line: 0, scope: !14106)
!14119 = !DILocation(line: 465, column: 20, scope: !14120)
!14120 = distinct !DILexicalBlock(scope: !14106, file: !2223, line: 463, column: 2)
!14121 = !DILocation(line: 466, column: 21, scope: !14120)
!14122 = !DILocation(line: 473, column: 28, scope: !14106)
!14123 = !DILocation(line: 514, column: 33, scope: !14106)
!14124 = !DILocation(line: 514, column: 25, scope: !14106)
!14125 = !DILocation(line: 514, column: 31, scope: !14106)
!14126 = !DILocation(line: 515, column: 25, scope: !14106)
!14127 = !DILocation(line: 515, column: 30, scope: !14106)
!14128 = !DILocation(line: 516, column: 25, scope: !14106)
!14129 = !DILocation(line: 516, column: 31, scope: !14106)
!14130 = !DILocation(line: 520, column: 2, scope: !14106)
!14131 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2177, file: !2177, line: 331, type: !14132, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14134)
!14132 = !DISubroutineType(types: !14133)
!14133 = !{!1081, !14036}
!14134 = !{!14135}
!14135 = !DILocalVariable(name: "sym", arg: 1, scope: !14131, file: !2177, line: 331, type: !14036)
!14136 = !DILocation(line: 0, scope: !14131)
!14137 = !DILocation(line: 333, column: 21, scope: !14131)
!14138 = !DILocation(line: 333, column: 2, scope: !14131)
!14139 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14140, file: !14140, line: 40, type: !14141, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14143)
!14140 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14141 = !DISubroutineType(types: !14142)
!14142 = !{null, !14084}
!14143 = !{!14144}
!14144 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14139, file: !14140, line: 40, type: !14084)
!14145 = !DILocation(line: 0, scope: !14139)
!14146 = !DILocation(line: 42, column: 31, scope: !14139)
!14147 = !DILocation(line: 42, column: 2, scope: !14139)
!14148 = !DILocation(line: 43, column: 1, scope: !14139)
!14149 = distinct !DISubprogram(name: "z_init_timeout", scope: !14140, file: !14140, line: 25, type: !2284, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14150)
!14150 = !{!14151}
!14151 = !DILocalVariable(name: "to", arg: 1, scope: !14149, file: !14140, line: 25, type: !2286)
!14152 = !DILocation(line: 0, scope: !14149)
!14153 = !DILocation(line: 27, column: 22, scope: !14149)
!14154 = !DILocation(line: 27, column: 2, scope: !14149)
!14155 = !DILocation(line: 28, column: 1, scope: !14149)
!14156 = distinct !DISubprogram(name: "sys_dnode_init", scope: !321, file: !321, line: 211, type: !14157, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14159)
!14157 = !DISubroutineType(types: !14158)
!14158 = !{null, !2330}
!14159 = !{!14160}
!14160 = !DILocalVariable(name: "node", arg: 1, scope: !14156, file: !321, line: 211, type: !2330)
!14161 = !DILocation(line: 0, scope: !14156)
!14162 = !DILocation(line: 213, column: 8, scope: !14156)
!14163 = !DILocation(line: 213, column: 13, scope: !14156)
!14164 = !DILocation(line: 214, column: 8, scope: !14156)
!14165 = !DILocation(line: 214, column: 13, scope: !14156)
!14166 = !DILocation(line: 215, column: 1, scope: !14156)
!14167 = distinct !DISubprogram(name: "sys_dlist_init", scope: !321, file: !321, line: 197, type: !14168, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14171)
!14168 = !DISubroutineType(types: !14169)
!14169 = !{null, !14170}
!14170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 32)
!14171 = !{!14172}
!14172 = !DILocalVariable(name: "list", arg: 1, scope: !14167, file: !321, line: 197, type: !14170)
!14173 = !DILocation(line: 0, scope: !14167)
!14174 = !DILocation(line: 199, column: 8, scope: !14167)
!14175 = !DILocation(line: 199, column: 13, scope: !14167)
!14176 = !DILocation(line: 200, column: 8, scope: !14167)
!14177 = !DILocation(line: 200, column: 13, scope: !14167)
!14178 = !DILocation(line: 201, column: 1, scope: !14167)
!14179 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2223, file: !2223, line: 641, type: !14180, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14186)
!14180 = !DISubroutineType(types: !14181)
!14181 = !{!2226, !2227, !14036, !356, !3567, !102, !102, !102, !103, !132, !14182}
!14182 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1712, line: 67, baseType: !14183)
!14183 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1712, line: 65, size: 64, elements: !14184)
!14184 = !{!14185}
!14185 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14183, file: !1712, line: 66, baseType: !1711, size: 64)
!14186 = !{!14187, !14188, !14189, !14190, !14191, !14192, !14193, !14194, !14195, !14196}
!14187 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14179, file: !2223, line: 641, type: !2227)
!14188 = !DILocalVariable(name: "stack", arg: 2, scope: !14179, file: !2223, line: 642, type: !14036)
!14189 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14179, file: !2223, line: 643, type: !356)
!14190 = !DILocalVariable(name: "entry", arg: 4, scope: !14179, file: !2223, line: 643, type: !3567)
!14191 = !DILocalVariable(name: "p1", arg: 5, scope: !14179, file: !2223, line: 644, type: !102)
!14192 = !DILocalVariable(name: "p2", arg: 6, scope: !14179, file: !2223, line: 644, type: !102)
!14193 = !DILocalVariable(name: "p3", arg: 7, scope: !14179, file: !2223, line: 644, type: !102)
!14194 = !DILocalVariable(name: "prio", arg: 8, scope: !14179, file: !2223, line: 645, type: !103)
!14195 = !DILocalVariable(name: "options", arg: 9, scope: !14179, file: !2223, line: 645, type: !132)
!14196 = !DILocalVariable(name: "delay", arg: 10, scope: !14179, file: !2223, line: 645, type: !14182)
!14197 = !DILocation(line: 0, scope: !14179)
!14198 = !DILocation(line: 649, column: 2, scope: !14179)
!14199 = !DILocation(line: 652, column: 7, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14179, file: !2223, line: 652, column: 6)
!14201 = !DILocation(line: 652, column: 6, scope: !14179)
!14202 = !DILocation(line: 653, column: 3, scope: !14203)
!14203 = distinct !DILexicalBlock(scope: !14200, file: !2223, line: 652, column: 39)
!14204 = !DILocation(line: 654, column: 2, scope: !14203)
!14205 = !DILocation(line: 656, column: 2, scope: !14179)
!14206 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2223, file: !2223, line: 401, type: !14207, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14209)
!14207 = !DISubroutineType(types: !14208)
!14208 = !{null, !2227, !14182}
!14209 = !{!14210, !14211}
!14210 = !DILocalVariable(name: "thread", arg: 1, scope: !14206, file: !2223, line: 401, type: !2227)
!14211 = !DILocalVariable(name: "delay", arg: 2, scope: !14206, file: !2223, line: 401, type: !14182)
!14212 = !DILocation(line: 0, scope: !14206)
!14213 = !DILocation(line: 404, column: 6, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14206, file: !2223, line: 404, column: 6)
!14215 = !DILocation(line: 404, column: 6, scope: !14206)
!14216 = !DILocation(line: 405, column: 3, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14214, file: !2223, line: 404, column: 38)
!14218 = !DILocation(line: 406, column: 2, scope: !14217)
!14219 = !DILocation(line: 407, column: 3, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14214, file: !2223, line: 406, column: 9)
!14221 = !DILocation(line: 413, column: 1, scope: !14206)
!14222 = distinct !DISubprogram(name: "k_thread_start", scope: !3689, file: !3689, line: 205, type: !14223, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14225)
!14223 = !DISubroutineType(types: !14224)
!14224 = !{null, !2226}
!14225 = !{!14226}
!14226 = !DILocalVariable(name: "thread", arg: 1, scope: !14222, file: !3689, line: 205, type: !2226)
!14227 = !DILocation(line: 0, scope: !14222)
!14228 = !DILocation(line: 214, column: 2, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14222, file: !3689, line: 214, column: 2)
!14230 = !{i64 2154767093}
!14231 = !DILocation(line: 215, column: 2, scope: !14222)
!14232 = !DILocation(line: 216, column: 1, scope: !14222)
!14233 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14140, file: !14140, line: 47, type: !14207, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14234)
!14234 = !{!14235, !14236}
!14235 = !DILocalVariable(name: "thread", arg: 1, scope: !14233, file: !14140, line: 47, type: !2227)
!14236 = !DILocalVariable(name: "ticks", arg: 2, scope: !14233, file: !14140, line: 47, type: !14182)
!14237 = !DILocation(line: 0, scope: !14233)
!14238 = !DILocation(line: 49, column: 30, scope: !14233)
!14239 = !DILocation(line: 49, column: 2, scope: !14233)
!14240 = !DILocation(line: 50, column: 1, scope: !14233)
!14241 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2223, file: !2223, line: 748, type: !3249, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14242)
!14242 = !{!14243, !14261}
!14243 = !DILocalVariable(name: "thread_data", scope: !14244, file: !2223, line: 750, type: !14245)
!14244 = distinct !DILexicalBlock(scope: !14241, file: !2223, line: 750, column: 2)
!14245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14246, size: 32)
!14246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !312, line: 620, size: 384, elements: !14247)
!14247 = !{!14248, !14249, !14250, !14251, !14252, !14253, !14254, !14255, !14256, !14257, !14258, !14260}
!14248 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14246, file: !312, line: 621, baseType: !2227, size: 32)
!14249 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14246, file: !312, line: 622, baseType: !14036, size: 32, offset: 32)
!14250 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14246, file: !312, line: 623, baseType: !32, size: 32, offset: 64)
!14251 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14246, file: !312, line: 624, baseType: !3567, size: 32, offset: 96)
!14252 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14246, file: !312, line: 625, baseType: !102, size: 32, offset: 128)
!14253 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14246, file: !312, line: 626, baseType: !102, size: 32, offset: 160)
!14254 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14246, file: !312, line: 627, baseType: !102, size: 32, offset: 192)
!14255 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14246, file: !312, line: 628, baseType: !103, size: 32, offset: 224)
!14256 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14246, file: !312, line: 629, baseType: !132, size: 32, offset: 256)
!14257 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14246, file: !312, line: 630, baseType: !344, size: 32, offset: 288)
!14258 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14246, file: !312, line: 631, baseType: !14259, size: 32, offset: 320)
!14259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3249, size: 32)
!14260 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14246, file: !312, line: 632, baseType: !155, size: 32, offset: 352)
!14261 = !DILocalVariable(name: "thread_data", scope: !14262, file: !2223, line: 781, type: !14245)
!14262 = distinct !DILexicalBlock(scope: !14241, file: !2223, line: 781, column: 2)
!14263 = !DILocation(line: 0, scope: !14244)
!14264 = !DILocation(line: 750, column: 2, scope: !14244)
!14265 = !DILocation(line: 780, column: 2, scope: !14241)
!14266 = !DILocation(line: 0, scope: !14262)
!14267 = !DILocation(line: 781, column: 2, scope: !14262)
!14268 = !DILocation(line: 752, column: 17, scope: !14269)
!14269 = distinct !DILexicalBlock(scope: !14270, file: !2223, line: 750, column: 38)
!14270 = distinct !DILexicalBlock(scope: !14244, file: !2223, line: 750, column: 2)
!14271 = !DILocation(line: 753, column: 17, scope: !14269)
!14272 = !DILocation(line: 754, column: 17, scope: !14269)
!14273 = !DILocation(line: 755, column: 17, scope: !14269)
!14274 = !DILocation(line: 756, column: 17, scope: !14269)
!14275 = !DILocation(line: 757, column: 17, scope: !14269)
!14276 = !DILocation(line: 758, column: 17, scope: !14269)
!14277 = !DILocation(line: 759, column: 17, scope: !14269)
!14278 = !DILocation(line: 760, column: 17, scope: !14269)
!14279 = !DILocation(line: 751, column: 3, scope: !14269)
!14280 = !DILocation(line: 763, column: 16, scope: !14269)
!14281 = !DILocation(line: 763, column: 29, scope: !14269)
!14282 = !DILocation(line: 763, column: 39, scope: !14269)
!14283 = !DILocation(line: 750, column: 2, scope: !14270)
!14284 = !DILocation(line: 750, column: 2, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14270, file: !2223, line: 750, column: 2)
!14286 = distinct !{!14286, !14264, !14287}
!14287 = !DILocation(line: 764, column: 2, scope: !14244)
!14288 = !DILocation(line: 787, column: 2, scope: !14241)
!14289 = !DILocation(line: 788, column: 1, scope: !14241)
!14290 = !DILocation(line: 782, column: 20, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14292, file: !2223, line: 782, column: 7)
!14292 = distinct !DILexicalBlock(scope: !14293, file: !2223, line: 781, column: 38)
!14293 = distinct !DILexicalBlock(scope: !14262, file: !2223, line: 781, column: 2)
!14294 = !DILocation(line: 782, column: 31, scope: !14291)
!14295 = !DILocation(line: 782, column: 7, scope: !14292)
!14296 = !DILocation(line: 783, column: 37, scope: !14297)
!14297 = distinct !DILexicalBlock(scope: !14291, file: !2223, line: 782, column: 51)
!14298 = !DILocation(line: 784, column: 10, scope: !14297)
!14299 = !DILocation(line: 783, column: 4, scope: !14297)
!14300 = !DILocation(line: 785, column: 3, scope: !14297)
!14301 = !DILocation(line: 781, column: 2, scope: !14293)
!14302 = !DILocation(line: 781, column: 2, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14293, file: !2223, line: 781, column: 2)
!14304 = distinct !{!14304, !14267, !14305}
!14305 = !DILocation(line: 786, column: 2, scope: !14262)
!14306 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !6024, file: !6024, line: 403, type: !6025, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14307)
!14307 = !{!14308}
!14308 = !DILocalVariable(name: "t", arg: 1, scope: !14306, file: !6024, line: 403, type: !1608)
!14309 = !DILocation(line: 0, scope: !14306)
!14310 = !DILocalVariable(name: "t", arg: 1, scope: !14311, file: !6024, line: 102, type: !1608)
!14311 = distinct !DISubprogram(name: "z_tmcvt", scope: !6024, file: !6024, line: 102, type: !6032, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14312)
!14312 = !{!14310, !14313, !14314, !14315, !14316, !14317, !14318, !14319, !14320, !14321, !14322}
!14313 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14311, file: !6024, line: 102, type: !132)
!14314 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14311, file: !6024, line: 103, type: !132)
!14315 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14311, file: !6024, line: 103, type: !166)
!14316 = !DILocalVariable(name: "result32", arg: 5, scope: !14311, file: !6024, line: 104, type: !166)
!14317 = !DILocalVariable(name: "round_up", arg: 6, scope: !14311, file: !6024, line: 104, type: !166)
!14318 = !DILocalVariable(name: "round_off", arg: 7, scope: !14311, file: !6024, line: 105, type: !166)
!14319 = !DILocalVariable(name: "mul_ratio", scope: !14311, file: !6024, line: 107, type: !166)
!14320 = !DILocalVariable(name: "div_ratio", scope: !14311, file: !6024, line: 109, type: !166)
!14321 = !DILocalVariable(name: "off", scope: !14311, file: !6024, line: 116, type: !1608)
!14322 = !DILocalVariable(name: "rdivisor", scope: !14323, file: !6024, line: 119, type: !132)
!14323 = distinct !DILexicalBlock(scope: !14324, file: !6024, line: 118, column: 18)
!14324 = distinct !DILexicalBlock(scope: !14311, file: !6024, line: 118, column: 6)
!14325 = !DILocation(line: 0, scope: !14311, inlinedAt: !14326)
!14326 = distinct !DILocation(line: 406, column: 9, scope: !14306)
!14327 = !DILocation(line: 145, column: 13, scope: !14328, inlinedAt: !14326)
!14328 = distinct !DILexicalBlock(scope: !14329, file: !6024, line: 144, column: 10)
!14329 = distinct !DILexicalBlock(scope: !14330, file: !6024, line: 142, column: 7)
!14330 = distinct !DILexicalBlock(scope: !14331, file: !6024, line: 141, column: 24)
!14331 = distinct !DILexicalBlock(scope: !14332, file: !6024, line: 141, column: 13)
!14332 = distinct !DILexicalBlock(scope: !14311, file: !6024, line: 134, column: 6)
!14333 = !DILocation(line: 406, column: 2, scope: !14306)
!14334 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2223, file: !2223, line: 817, type: !3565, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14335)
!14335 = !{!14336, !14337, !14338, !14339}
!14336 = !DILocalVariable(name: "entry", arg: 1, scope: !14334, file: !2223, line: 817, type: !3567)
!14337 = !DILocalVariable(name: "p1", arg: 2, scope: !14334, file: !2223, line: 818, type: !102)
!14338 = !DILocalVariable(name: "p2", arg: 3, scope: !14334, file: !2223, line: 818, type: !102)
!14339 = !DILocalVariable(name: "p3", arg: 4, scope: !14334, file: !2223, line: 818, type: !102)
!14340 = !DILocation(line: 0, scope: !14334)
!14341 = !DILocation(line: 822, column: 2, scope: !14334)
!14342 = !DILocation(line: 822, column: 17, scope: !14334)
!14343 = !DILocation(line: 822, column: 30, scope: !14334)
!14344 = !DILocation(line: 823, column: 2, scope: !14334)
!14345 = !DILocation(line: 845, column: 2, scope: !14334)
!14346 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2223, file: !2223, line: 888, type: !14347, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14349)
!14347 = !DISubroutineType(types: !14348)
!14348 = !{!103, !2227}
!14349 = !{!14350}
!14350 = !DILocalVariable(name: "thread", arg: 1, scope: !14346, file: !2223, line: 888, type: !2227)
!14351 = !DILocation(line: 0, scope: !14346)
!14352 = !DILocation(line: 893, column: 2, scope: !14346)
!14353 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2223, file: !2223, line: 897, type: !14354, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14356)
!14354 = !DISubroutineType(types: !14355)
!14355 = !{!103, !2227, !32}
!14356 = !{!14357, !14358}
!14357 = !DILocalVariable(name: "thread", arg: 1, scope: !14353, file: !2223, line: 897, type: !2227)
!14358 = !DILocalVariable(name: "options", arg: 2, scope: !14353, file: !2223, line: 897, type: !32)
!14359 = !DILocation(line: 0, scope: !14353)
!14360 = !DILocation(line: 902, column: 2, scope: !14353)
!14361 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2223, file: !2223, line: 1072, type: !14362, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14367)
!14362 = !DISubroutineType(types: !14363)
!14363 = !{!103, !2226, !14364}
!14364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14365, size: 32)
!14365 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !367, line: 234, baseType: !14366)
!14366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !367, line: 192, elements: !473)
!14367 = !{!14368, !14369}
!14368 = !DILocalVariable(name: "thread", arg: 1, scope: !14361, file: !2223, line: 1072, type: !2226)
!14369 = !DILocalVariable(name: "stats", arg: 2, scope: !14361, file: !2223, line: 1073, type: !14364)
!14370 = !DILocation(line: 0, scope: !14361)
!14371 = !DILocation(line: 1075, column: 14, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14361, file: !2223, line: 1075, column: 6)
!14373 = !DILocation(line: 1075, column: 23, scope: !14372)
!14374 = !DILocation(line: 1086, column: 1, scope: !14361)
!14375 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2223, file: !2223, line: 1088, type: !14376, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14378)
!14376 = !DISubroutineType(types: !14377)
!14377 = !{!103, !14364}
!14378 = !{!14379}
!14379 = !DILocalVariable(name: "stats", arg: 1, scope: !14375, file: !2223, line: 1088, type: !14364)
!14380 = !DILocation(line: 0, scope: !14375)
!14381 = !DILocation(line: 1094, column: 12, scope: !14382)
!14382 = distinct !DILexicalBlock(scope: !14375, file: !2223, line: 1094, column: 6)
!14383 = !DILocation(line: 1120, column: 1, scope: !14375)
!14384 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14385, file: !14385, line: 20, type: !3249, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3230, retainedNodes: !473)
!14385 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14386 = !DILocation(line: 30, column: 2, scope: !14384)
!14387 = !DILocation(line: 31, column: 1, scope: !14384)
!14388 = distinct !DISubprogram(name: "idle", scope: !14385, file: !14385, line: 33, type: !3570, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3230, retainedNodes: !14389)
!14389 = !{!14390, !14391, !14392}
!14390 = !DILocalVariable(name: "unused1", arg: 1, scope: !14388, file: !14385, line: 33, type: !102)
!14391 = !DILocalVariable(name: "unused2", arg: 2, scope: !14388, file: !14385, line: 33, type: !102)
!14392 = !DILocalVariable(name: "unused3", arg: 3, scope: !14388, file: !14385, line: 33, type: !102)
!14393 = !DILocation(line: 0, scope: !14388)
!14394 = !DILocation(line: 41, column: 2, scope: !14388)
!14395 = !DILocation(line: 55, column: 2, scope: !14396, inlinedAt: !14400)
!14396 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5824, file: !5824, line: 42, type: !5825, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3230, retainedNodes: !14397)
!14397 = !{!14398, !14399}
!14398 = !DILocalVariable(name: "key", scope: !14396, file: !5824, line: 44, type: !32)
!14399 = !DILocalVariable(name: "tmp", scope: !14396, file: !5824, line: 53, type: !32)
!14400 = distinct !DILocation(line: 62, column: 10, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14388, file: !14385, line: 41, column: 15)
!14402 = !{i64 2239432}
!14403 = !DILocation(line: 0, scope: !14396, inlinedAt: !14400)
!14404 = !DILocation(line: 86, column: 3, scope: !14401)
!14405 = distinct !{!14405, !14394, !14406}
!14406 = !DILocation(line: 105, column: 2, scope: !14388)
!14407 = distinct !DISubprogram(name: "k_cpu_idle", scope: !312, file: !312, line: 5627, type: !3249, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3230, retainedNodes: !473)
!14408 = !DILocation(line: 5629, column: 2, scope: !14407)
!14409 = !DILocation(line: 5630, column: 1, scope: !14407)
!14410 = !DISubprogram(name: "arch_cpu_idle", scope: !3568, file: !3568, line: 167, type: !3249, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!14411 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2366, file: !2366, line: 41, type: !14412, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !14425)
!14412 = !DISubroutineType(types: !14413)
!14413 = !{!103, !14414, !32, !32}
!14414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14415, size: 32)
!14415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !312, line: 2909, size: 128, elements: !14416)
!14416 = !{!14417, !14423, !14424}
!14417 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14415, file: !312, line: 2910, baseType: !14418, size: 64)
!14418 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !14419)
!14419 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !14420)
!14420 = !{!14421}
!14421 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14419, file: !316, line: 232, baseType: !14422, size: 64)
!14422 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2352)
!14423 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !14415, file: !312, line: 2911, baseType: !32, size: 32, offset: 64)
!14424 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !14415, file: !312, line: 2912, baseType: !32, size: 32, offset: 96)
!14425 = !{!14426, !14427, !14428}
!14426 = !DILocalVariable(name: "sem", arg: 1, scope: !14411, file: !2366, line: 41, type: !14414)
!14427 = !DILocalVariable(name: "initial_count", arg: 2, scope: !14411, file: !2366, line: 41, type: !32)
!14428 = !DILocalVariable(name: "limit", arg: 3, scope: !14411, file: !2366, line: 42, type: !32)
!14429 = !DILocation(line: 0, scope: !14411)
!14430 = !DILocation(line: 47, column: 2, scope: !14431)
!14431 = distinct !DILexicalBlock(scope: !14411, file: !2366, line: 47, column: 2)
!14432 = !DILocation(line: 53, column: 7, scope: !14411)
!14433 = !DILocation(line: 53, column: 13, scope: !14411)
!14434 = !DILocation(line: 54, column: 7, scope: !14411)
!14435 = !DILocation(line: 54, column: 13, scope: !14411)
!14436 = !DILocation(line: 58, column: 21, scope: !14411)
!14437 = !DILocation(line: 58, column: 2, scope: !14411)
!14438 = !DILocation(line: 64, column: 2, scope: !14411)
!14439 = !DILocation(line: 65, column: 1, scope: !14411)
!14440 = distinct !DISubprogram(name: "z_waitq_init", scope: !14072, file: !14072, line: 47, type: !14441, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !14444)
!14441 = !DISubroutineType(types: !14442)
!14442 = !{null, !14443}
!14443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14418, size: 32)
!14444 = !{!14445}
!14445 = !DILocalVariable(name: "w", arg: 1, scope: !14440, file: !14072, line: 47, type: !14443)
!14446 = !DILocation(line: 0, scope: !14440)
!14447 = !DILocation(line: 49, column: 21, scope: !14440)
!14448 = !DILocation(line: 49, column: 2, scope: !14440)
!14449 = !DILocation(line: 50, column: 1, scope: !14440)
!14450 = distinct !DISubprogram(name: "sys_dlist_init", scope: !321, file: !321, line: 197, type: !14451, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !14454)
!14451 = !DISubroutineType(types: !14452)
!14452 = !{null, !14453}
!14453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14422, size: 32)
!14454 = !{!14455}
!14455 = !DILocalVariable(name: "list", arg: 1, scope: !14450, file: !321, line: 197, type: !14453)
!14456 = !DILocation(line: 0, scope: !14450)
!14457 = !DILocation(line: 199, column: 8, scope: !14450)
!14458 = !DILocation(line: 199, column: 13, scope: !14450)
!14459 = !DILocation(line: 200, column: 8, scope: !14450)
!14460 = !DILocation(line: 200, column: 13, scope: !14450)
!14461 = !DILocation(line: 201, column: 1, scope: !14450)
!14462 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2366, file: !2366, line: 86, type: !14463, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !14465)
!14463 = !DISubroutineType(types: !14464)
!14464 = !{null, !14414}
!14465 = !{!14466, !14467, !14472}
!14466 = !DILocalVariable(name: "sem", arg: 1, scope: !14462, file: !2366, line: 86, type: !14414)
!14467 = !DILocalVariable(name: "key", scope: !14462, file: !2366, line: 88, type: !14468)
!14468 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !14469)
!14469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !14470)
!14470 = !{!14471}
!14471 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14469, file: !472, line: 33, baseType: !103, size: 32)
!14472 = !DILocalVariable(name: "thread", scope: !14462, file: !2366, line: 89, type: !14473)
!14473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14474, size: 32)
!14474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !14475)
!14475 = !{!14476, !14514, !14526, !14527, !14528, !14529, !14535, !14547}
!14476 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14474, file: !367, line: 247, baseType: !14477, size: 384)
!14477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !14478)
!14478 = !{!14479, !14489, !14490, !14491, !14492, !14501, !14502, !14503}
!14479 = !DIDerivedType(tag: DW_TAG_member, scope: !14477, file: !367, line: 60, baseType: !14480, size: 64)
!14480 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14477, file: !367, line: 60, size: 64, elements: !14481)
!14481 = !{!14482, !14483}
!14482 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14480, file: !367, line: 61, baseType: !2351, size: 64)
!14483 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14480, file: !367, line: 62, baseType: !14484, size: 64)
!14484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !14485)
!14485 = !{!14486}
!14486 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14484, file: !392, line: 50, baseType: !14487, size: 64)
!14487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14488, size: 64, elements: !397)
!14488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14484, size: 32)
!14489 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14477, file: !367, line: 68, baseType: !14443, size: 32, offset: 64)
!14490 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14477, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!14491 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14477, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!14492 = !DIDerivedType(tag: DW_TAG_member, scope: !14477, file: !367, line: 90, baseType: !14493, size: 16, offset: 112)
!14493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14477, file: !367, line: 90, size: 16, elements: !14494)
!14494 = !{!14495, !14500}
!14495 = !DIDerivedType(tag: DW_TAG_member, scope: !14493, file: !367, line: 91, baseType: !14496, size: 16)
!14496 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14493, file: !367, line: 91, size: 16, elements: !14497)
!14497 = !{!14498, !14499}
!14498 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14496, file: !367, line: 96, baseType: !415, size: 8)
!14499 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14496, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!14500 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14493, file: !367, line: 100, baseType: !340, size: 16)
!14501 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14477, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!14502 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14477, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!14503 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14477, file: !367, line: 131, baseType: !14504, size: 192, offset: 192)
!14504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !14505)
!14505 = !{!14506, !14507, !14513}
!14506 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14504, file: !316, line: 245, baseType: !2351, size: 64)
!14507 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14504, file: !316, line: 246, baseType: !14508, size: 32, offset: 64)
!14508 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !14509)
!14509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14510, size: 32)
!14510 = !DISubroutineType(types: !14511)
!14511 = !{null, !14512}
!14512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14504, size: 32)
!14513 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14504, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!14514 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14474, file: !367, line: 250, baseType: !14515, size: 288, offset: 384)
!14515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !14516)
!14516 = !{!14517, !14518, !14519, !14520, !14521, !14522, !14523, !14524, !14525}
!14517 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14515, file: !436, line: 26, baseType: !132, size: 32)
!14518 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14515, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!14519 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14515, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!14520 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14515, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!14521 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14515, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!14522 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14515, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!14523 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14515, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!14524 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14515, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!14525 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14515, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!14526 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14474, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!14527 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14474, file: !367, line: 256, baseType: !14418, size: 64, offset: 704)
!14528 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14474, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!14529 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14474, file: !367, line: 300, baseType: !14530, size: 96, offset: 800)
!14530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !14531)
!14531 = !{!14532, !14533, !14534}
!14532 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14530, file: !367, line: 153, baseType: !22, size: 32)
!14533 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14530, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!14534 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14530, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!14535 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14474, file: !367, line: 325, baseType: !14536, size: 32, offset: 896)
!14536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14537, size: 32)
!14537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !14538)
!14538 = !{!14539, !14545, !14546}
!14539 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14537, file: !312, line: 5074, baseType: !14540, size: 96)
!14540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !14541)
!14541 = !{!14542, !14543, !14544}
!14542 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14540, file: !462, line: 57, baseType: !465, size: 32)
!14543 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14540, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!14544 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14540, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!14545 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14537, file: !312, line: 5075, baseType: !14418, size: 64, offset: 96)
!14546 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14537, file: !312, line: 5076, baseType: !2367, offset: 160)
!14547 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14474, file: !367, line: 343, baseType: !14548, size: 64, offset: 928)
!14548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !14549)
!14549 = !{!14550, !14551}
!14550 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14548, file: !436, line: 63, baseType: !132, size: 32)
!14551 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14548, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!14552 = !DILocation(line: 0, scope: !14462)
!14553 = !DILocalVariable(name: "l", arg: 1, scope: !14554, file: !472, line: 136, type: !14557)
!14554 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !14555, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !14558)
!14555 = !DISubroutineType(types: !14556)
!14556 = !{!14468, !14557}
!14557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 32)
!14558 = !{!14553, !14559}
!14559 = !DILocalVariable(name: "k", scope: !14554, file: !472, line: 139, type: !14468)
!14560 = !DILocation(line: 0, scope: !14554, inlinedAt: !14561)
!14561 = distinct !DILocation(line: 88, column: 25, scope: !14462)
!14562 = !DILocation(line: 55, column: 2, scope: !14563, inlinedAt: !14567)
!14563 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5824, file: !5824, line: 42, type: !5825, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !14564)
!14564 = !{!14565, !14566}
!14565 = !DILocalVariable(name: "key", scope: !14563, file: !5824, line: 44, type: !32)
!14566 = !DILocalVariable(name: "tmp", scope: !14563, file: !5824, line: 53, type: !32)
!14567 = distinct !DILocation(line: 145, column: 10, scope: !14554, inlinedAt: !14561)
!14568 = !{i64 2240994}
!14569 = !DILocation(line: 0, scope: !14563, inlinedAt: !14567)
!14570 = !DILocation(line: 93, column: 39, scope: !14462)
!14571 = !DILocation(line: 93, column: 11, scope: !14462)
!14572 = !DILocation(line: 95, column: 13, scope: !14573)
!14573 = distinct !DILexicalBlock(scope: !14462, file: !2366, line: 95, column: 6)
!14574 = !DILocation(line: 95, column: 6, scope: !14462)
!14575 = !DILocalVariable(name: "thread", arg: 1, scope: !14576, file: !13766, line: 65, type: !14473)
!14576 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13766, file: !13766, line: 65, type: !14577, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !14579)
!14577 = !DISubroutineType(types: !14578)
!14578 = !{null, !14473, !32}
!14579 = !{!14575, !14580}
!14580 = !DILocalVariable(name: "value", arg: 2, scope: !14576, file: !13766, line: 65, type: !32)
!14581 = !DILocation(line: 0, scope: !14576, inlinedAt: !14582)
!14582 = distinct !DILocation(line: 96, column: 3, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14573, file: !2366, line: 95, column: 22)
!14584 = !DILocation(line: 67, column: 15, scope: !14576, inlinedAt: !14582)
!14585 = !DILocation(line: 67, column: 33, scope: !14576, inlinedAt: !14582)
!14586 = !DILocation(line: 97, column: 3, scope: !14583)
!14587 = !DILocation(line: 98, column: 2, scope: !14583)
!14588 = !DILocation(line: 99, column: 23, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14573, file: !2366, line: 98, column: 9)
!14590 = !DILocation(line: 99, column: 37, scope: !14589)
!14591 = !DILocation(line: 99, column: 29, scope: !14589)
!14592 = !DILocation(line: 99, column: 17, scope: !14589)
!14593 = !DILocation(line: 99, column: 14, scope: !14589)
!14594 = !DILocation(line: 103, column: 2, scope: !14462)
!14595 = !DILocation(line: 106, column: 1, scope: !14462)
!14596 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2366, file: !2366, line: 117, type: !14597, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !14603)
!14597 = !DISubroutineType(types: !14598)
!14598 = !{!103, !14414, !14599}
!14599 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1712, line: 67, baseType: !14600)
!14600 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1712, line: 65, size: 64, elements: !14601)
!14601 = !{!14602}
!14602 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14600, file: !1712, line: 66, baseType: !1711, size: 64)
!14603 = !{!14604, !14605, !14606, !14607, !14608}
!14604 = !DILocalVariable(name: "sem", arg: 1, scope: !14596, file: !2366, line: 117, type: !14414)
!14605 = !DILocalVariable(name: "timeout", arg: 2, scope: !14596, file: !2366, line: 117, type: !14599)
!14606 = !DILocalVariable(name: "ret", scope: !14596, file: !2366, line: 119, type: !103)
!14607 = !DILocalVariable(name: "key", scope: !14596, file: !2366, line: 124, type: !14468)
!14608 = !DILabel(scope: !14596, name: "out", file: !2366, line: 145)
!14609 = !DILocation(line: 0, scope: !14596)
!14610 = !DILocation(line: 0, scope: !14554, inlinedAt: !14611)
!14611 = distinct !DILocation(line: 124, column: 25, scope: !14596)
!14612 = !DILocation(line: 55, column: 2, scope: !14563, inlinedAt: !14613)
!14613 = distinct !DILocation(line: 145, column: 10, scope: !14554, inlinedAt: !14611)
!14614 = !DILocation(line: 0, scope: !14563, inlinedAt: !14613)
!14615 = !DILocation(line: 128, column: 6, scope: !14616)
!14616 = distinct !DILexicalBlock(scope: !14596, file: !2366, line: 128, column: 6)
!14617 = !DILocation(line: 128, column: 6, scope: !14596)
!14618 = !{!"branch_weights", i32 1, i32 2000}
!14619 = !DILocation(line: 129, column: 13, scope: !14620)
!14620 = distinct !DILexicalBlock(scope: !14616, file: !2366, line: 128, column: 31)
!14621 = !DILocalVariable(name: "key", arg: 2, scope: !14622, file: !472, line: 190, type: !14468)
!14622 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !14623, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !14625)
!14623 = !DISubroutineType(types: !14624)
!14624 = !{null, !14557, !14468}
!14625 = !{!14626, !14621}
!14626 = !DILocalVariable(name: "l", arg: 1, scope: !14622, file: !472, line: 189, type: !14557)
!14627 = !DILocation(line: 0, scope: !14622, inlinedAt: !14628)
!14628 = distinct !DILocation(line: 130, column: 3, scope: !14620)
!14629 = !DILocalVariable(name: "key", arg: 1, scope: !14630, file: !5824, line: 84, type: !32)
!14630 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5824, file: !5824, line: 84, type: !5835, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !14631)
!14631 = !{!14629}
!14632 = !DILocation(line: 0, scope: !14630, inlinedAt: !14633)
!14633 = distinct !DILocation(line: 215, column: 2, scope: !14622, inlinedAt: !14628)
!14634 = !DILocation(line: 95, column: 2, scope: !14630, inlinedAt: !14633)
!14635 = !{i64 2241811}
!14636 = !DILocation(line: 132, column: 3, scope: !14620)
!14637 = !DILocation(line: 135, column: 6, scope: !14638)
!14638 = distinct !DILexicalBlock(scope: !14596, file: !2366, line: 135, column: 6)
!14639 = !DILocation(line: 135, column: 6, scope: !14596)
!14640 = !DILocation(line: 0, scope: !14622, inlinedAt: !14641)
!14641 = distinct !DILocation(line: 136, column: 3, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14638, file: !2366, line: 135, column: 40)
!14643 = !DILocation(line: 0, scope: !14630, inlinedAt: !14644)
!14644 = distinct !DILocation(line: 215, column: 2, scope: !14622, inlinedAt: !14641)
!14645 = !DILocation(line: 95, column: 2, scope: !14630, inlinedAt: !14644)
!14646 = !DILocation(line: 138, column: 3, scope: !14642)
!14647 = !DILocation(line: 143, column: 38, scope: !14596)
!14648 = !DILocation(line: 143, column: 8, scope: !14596)
!14649 = !DILocation(line: 143, column: 2, scope: !14596)
!14650 = !DILocation(line: 145, column: 1, scope: !14596)
!14651 = !DILocation(line: 148, column: 2, scope: !14596)
!14652 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2366, file: !2366, line: 151, type: !14463, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !14653)
!14653 = !{!14654, !14655, !14656}
!14654 = !DILocalVariable(name: "sem", arg: 1, scope: !14652, file: !2366, line: 151, type: !14414)
!14655 = !DILocalVariable(name: "thread", scope: !14652, file: !2366, line: 153, type: !14473)
!14656 = !DILocalVariable(name: "key", scope: !14652, file: !2366, line: 154, type: !14468)
!14657 = !DILocation(line: 0, scope: !14652)
!14658 = !DILocation(line: 0, scope: !14554, inlinedAt: !14659)
!14659 = distinct !DILocation(line: 154, column: 25, scope: !14652)
!14660 = !DILocation(line: 55, column: 2, scope: !14563, inlinedAt: !14661)
!14661 = distinct !DILocation(line: 145, column: 10, scope: !14554, inlinedAt: !14659)
!14662 = !DILocation(line: 0, scope: !14563, inlinedAt: !14661)
!14663 = !DILocation(line: 157, column: 12, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14652, file: !2366, line: 156, column: 15)
!14665 = !DILocation(line: 158, column: 14, scope: !14666)
!14666 = distinct !DILexicalBlock(scope: !14664, file: !2366, line: 158, column: 7)
!14667 = !DILocation(line: 158, column: 7, scope: !14664)
!14668 = !DILocation(line: 0, scope: !14576, inlinedAt: !14669)
!14669 = distinct !DILocation(line: 161, column: 3, scope: !14664)
!14670 = !DILocation(line: 67, column: 15, scope: !14576, inlinedAt: !14669)
!14671 = !DILocation(line: 67, column: 33, scope: !14576, inlinedAt: !14669)
!14672 = !DILocation(line: 162, column: 3, scope: !14664)
!14673 = distinct !{!14673, !14674, !14675}
!14674 = !DILocation(line: 156, column: 2, scope: !14652)
!14675 = !DILocation(line: 163, column: 2, scope: !14652)
!14676 = !DILocation(line: 164, column: 7, scope: !14652)
!14677 = !DILocation(line: 164, column: 13, scope: !14652)
!14678 = !DILocation(line: 170, column: 2, scope: !14652)
!14679 = !DILocation(line: 171, column: 1, scope: !14652)
!14680 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2478, file: !2478, line: 93, type: !14681, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14683)
!14681 = !DISubroutineType(types: !14682)
!14682 = !{!344, !2373, !2373}
!14683 = !{!14684, !14685, !14686, !14687}
!14684 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14680, file: !2478, line: 93, type: !2373)
!14685 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14680, file: !2478, line: 94, type: !2373)
!14686 = !DILocalVariable(name: "b1", scope: !14680, file: !2478, line: 97, type: !344)
!14687 = !DILocalVariable(name: "b2", scope: !14680, file: !2478, line: 98, type: !344)
!14688 = !DILocation(line: 0, scope: !14680)
!14689 = !DILocation(line: 97, column: 30, scope: !14680)
!14690 = !DILocation(line: 98, column: 30, scope: !14680)
!14691 = !DILocation(line: 100, column: 9, scope: !14692)
!14692 = distinct !DILexicalBlock(scope: !14680, file: !2478, line: 100, column: 6)
!14693 = !DILocation(line: 100, column: 6, scope: !14680)
!14694 = !DILocation(line: 125, column: 1, scope: !14680)
!14695 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2478, file: !2478, line: 428, type: !14696, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14698)
!14696 = !DISubroutineType(types: !14697)
!14697 = !{null, !2373}
!14698 = !{!14699}
!14699 = !DILocalVariable(name: "curr", arg: 1, scope: !14695, file: !2478, line: 428, type: !2373)
!14700 = !DILocation(line: 0, scope: !14695)
!14701 = !DILocation(line: 434, column: 6, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14695, file: !2478, line: 434, column: 6)
!14703 = !DILocation(line: 434, column: 23, scope: !14702)
!14704 = !DILocation(line: 434, column: 6, scope: !14695)
!14705 = !DILocation(line: 435, column: 50, scope: !14706)
!14706 = distinct !DILexicalBlock(scope: !14702, file: !2478, line: 434, column: 29)
!14707 = !DILocation(line: 435, column: 48, scope: !14706)
!14708 = !DILocation(line: 435, column: 29, scope: !14706)
!14709 = !DILocation(line: 436, column: 24, scope: !14706)
!14710 = !DILocation(line: 436, column: 3, scope: !14706)
!14711 = !DILocation(line: 437, column: 2, scope: !14706)
!14712 = !DILocation(line: 438, column: 1, scope: !14695)
!14713 = distinct !DISubprogram(name: "slice_time", scope: !2478, file: !2478, line: 407, type: !14714, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14716)
!14714 = !DISubroutineType(types: !14715)
!14715 = !{!103, !2373}
!14716 = !{!14717, !14718}
!14717 = !DILocalVariable(name: "curr", arg: 1, scope: !14713, file: !2478, line: 407, type: !2373)
!14718 = !DILocalVariable(name: "ret", scope: !14713, file: !2478, line: 409, type: !103)
!14719 = !DILocation(line: 0, scope: !14713)
!14720 = !DILocation(line: 409, column: 12, scope: !14713)
!14721 = !DILocation(line: 416, column: 2, scope: !14713)
!14722 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2478, file: !2478, line: 440, type: !14723, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14725)
!14723 = !DISubroutineType(types: !14724)
!14724 = !{null, !344, !103}
!14725 = !{!14726, !14727, !14728, !14734}
!14726 = !DILocalVariable(name: "slice", arg: 1, scope: !14722, file: !2478, line: 440, type: !344)
!14727 = !DILocalVariable(name: "prio", arg: 2, scope: !14722, file: !2478, line: 440, type: !103)
!14728 = !DILocalVariable(name: "__i", scope: !14729, file: !2478, line: 442, type: !14730)
!14729 = distinct !DILexicalBlock(scope: !14722, file: !2478, line: 442, column: 2)
!14730 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !14731)
!14731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !14732)
!14732 = !{!14733}
!14733 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14731, file: !472, line: 33, baseType: !103, size: 32)
!14734 = !DILocalVariable(name: "__key", scope: !14729, file: !2478, line: 442, type: !14730)
!14735 = !DILocation(line: 0, scope: !14722)
!14736 = !DILocation(line: 0, scope: !14729)
!14737 = !DILocalVariable(name: "l", arg: 1, scope: !14738, file: !472, line: 136, type: !14741)
!14738 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !14739, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14742)
!14739 = !DISubroutineType(types: !14740)
!14740 = !{!14730, !14741}
!14741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 32)
!14742 = !{!14737, !14743}
!14743 = !DILocalVariable(name: "k", scope: !14738, file: !472, line: 139, type: !14730)
!14744 = !DILocation(line: 0, scope: !14738, inlinedAt: !14745)
!14745 = distinct !DILocation(line: 442, column: 2, scope: !14729)
!14746 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !14751)
!14747 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5824, file: !5824, line: 42, type: !5825, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14748)
!14748 = !{!14749, !14750}
!14749 = !DILocalVariable(name: "key", scope: !14747, file: !5824, line: 44, type: !32)
!14750 = !DILocalVariable(name: "tmp", scope: !14747, file: !5824, line: 53, type: !32)
!14751 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !14745)
!14752 = !{i64 2283403}
!14753 = !DILocation(line: 0, scope: !14747, inlinedAt: !14751)
!14754 = !DILocation(line: 443, column: 29, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14756, file: !2478, line: 442, column: 26)
!14756 = distinct !DILexicalBlock(scope: !14729, file: !2478, line: 442, column: 2)
!14757 = !DILocation(line: 444, column: 17, scope: !14755)
!14758 = !DILocation(line: 445, column: 51, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14755, file: !2478, line: 445, column: 7)
!14760 = !DILocation(line: 445, column: 7, scope: !14755)
!14761 = !DILocation(line: 0, scope: !14755)
!14762 = !DILocation(line: 451, column: 18, scope: !14755)
!14763 = !DILocation(line: 452, column: 3, scope: !14755)
!14764 = !DILocalVariable(name: "key", arg: 2, scope: !14765, file: !472, line: 190, type: !14730)
!14765 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !14766, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14768)
!14766 = !DISubroutineType(types: !14767)
!14767 = !{null, !14741, !14730}
!14768 = !{!14769, !14764}
!14769 = !DILocalVariable(name: "l", arg: 1, scope: !14765, file: !472, line: 189, type: !14741)
!14770 = !DILocation(line: 0, scope: !14765, inlinedAt: !14771)
!14771 = distinct !DILocation(line: 442, column: 2, scope: !14756)
!14772 = !DILocalVariable(name: "key", arg: 1, scope: !14773, file: !5824, line: 84, type: !32)
!14773 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5824, file: !5824, line: 84, type: !5835, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14774)
!14774 = !{!14772}
!14775 = !DILocation(line: 0, scope: !14773, inlinedAt: !14776)
!14776 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !14771)
!14777 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !14776)
!14778 = !{i64 2284220}
!14779 = !DILocation(line: 454, column: 1, scope: !14722)
!14780 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !6024, file: !6024, line: 389, type: !7851, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14781)
!14781 = !{!14782}
!14782 = !DILocalVariable(name: "t", arg: 1, scope: !14780, file: !6024, line: 389, type: !132)
!14783 = !DILocation(line: 0, scope: !14780)
!14784 = !DILocalVariable(name: "t", arg: 1, scope: !14785, file: !6024, line: 102, type: !1608)
!14785 = distinct !DISubprogram(name: "z_tmcvt", scope: !6024, file: !6024, line: 102, type: !6032, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14786)
!14786 = !{!14784, !14787, !14788, !14789, !14790, !14791, !14792, !14793, !14794, !14795, !14796}
!14787 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14785, file: !6024, line: 102, type: !132)
!14788 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14785, file: !6024, line: 103, type: !132)
!14789 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14785, file: !6024, line: 103, type: !166)
!14790 = !DILocalVariable(name: "result32", arg: 5, scope: !14785, file: !6024, line: 104, type: !166)
!14791 = !DILocalVariable(name: "round_up", arg: 6, scope: !14785, file: !6024, line: 104, type: !166)
!14792 = !DILocalVariable(name: "round_off", arg: 7, scope: !14785, file: !6024, line: 105, type: !166)
!14793 = !DILocalVariable(name: "mul_ratio", scope: !14785, file: !6024, line: 107, type: !166)
!14794 = !DILocalVariable(name: "div_ratio", scope: !14785, file: !6024, line: 109, type: !166)
!14795 = !DILocalVariable(name: "off", scope: !14785, file: !6024, line: 116, type: !1608)
!14796 = !DILocalVariable(name: "rdivisor", scope: !14797, file: !6024, line: 119, type: !132)
!14797 = distinct !DILexicalBlock(scope: !14798, file: !6024, line: 118, column: 18)
!14798 = distinct !DILexicalBlock(scope: !14785, file: !6024, line: 118, column: 6)
!14799 = !DILocation(line: 0, scope: !14785, inlinedAt: !14800)
!14800 = distinct !DILocation(line: 392, column: 9, scope: !14780)
!14801 = !DILocation(line: 143, column: 25, scope: !14802, inlinedAt: !14800)
!14802 = distinct !DILexicalBlock(scope: !14803, file: !6024, line: 142, column: 17)
!14803 = distinct !DILexicalBlock(scope: !14804, file: !6024, line: 142, column: 7)
!14804 = distinct !DILexicalBlock(scope: !14805, file: !6024, line: 141, column: 24)
!14805 = distinct !DILexicalBlock(scope: !14806, file: !6024, line: 141, column: 13)
!14806 = distinct !DILexicalBlock(scope: !14785, file: !6024, line: 134, column: 6)
!14807 = !DILocation(line: 392, column: 2, scope: !14780)
!14808 = distinct !DISubprogram(name: "z_time_slice", scope: !2478, file: !2478, line: 502, type: !8486, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14809)
!14809 = !{!14810, !14811}
!14810 = !DILocalVariable(name: "ticks", arg: 1, scope: !14808, file: !2478, line: 502, type: !103)
!14811 = !DILocalVariable(name: "key", scope: !14808, file: !2478, line: 511, type: !14730)
!14812 = !DILocation(line: 0, scope: !14808)
!14813 = !DILocation(line: 0, scope: !14738, inlinedAt: !14814)
!14814 = distinct !DILocation(line: 511, column: 25, scope: !14808)
!14815 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !14816)
!14816 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !14814)
!14817 = !DILocation(line: 0, scope: !14747, inlinedAt: !14816)
!14818 = !DILocation(line: 514, column: 6, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14808, file: !2478, line: 514, column: 6)
!14820 = !DILocation(line: 514, column: 25, scope: !14819)
!14821 = !DILocation(line: 514, column: 22, scope: !14819)
!14822 = !DILocation(line: 514, column: 6, scope: !14808)
!14823 = !DILocation(line: 515, column: 3, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14819, file: !2478, line: 514, column: 35)
!14825 = !DILocation(line: 0, scope: !14765, inlinedAt: !14826)
!14826 = distinct !DILocation(line: 516, column: 3, scope: !14824)
!14827 = !DILocation(line: 0, scope: !14773, inlinedAt: !14828)
!14828 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !14826)
!14829 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !14828)
!14830 = !DILocation(line: 517, column: 3, scope: !14824)
!14831 = !DILocation(line: 519, column: 18, scope: !14808)
!14832 = !DILocation(line: 522, column: 6, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14808, file: !2478, line: 522, column: 6)
!14834 = !DILocation(line: 522, column: 27, scope: !14833)
!14835 = !DILocation(line: 522, column: 30, scope: !14833)
!14836 = !DILocation(line: 522, column: 6, scope: !14808)
!14837 = !DILocation(line: 523, column: 30, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14839, file: !2478, line: 523, column: 7)
!14839 = distinct !DILexicalBlock(scope: !14833, file: !2478, line: 522, column: 51)
!14840 = !DILocation(line: 523, column: 13, scope: !14838)
!14841 = !DILocation(line: 523, column: 7, scope: !14839)
!14842 = !DILocation(line: 530, column: 10, scope: !14843)
!14843 = distinct !DILexicalBlock(scope: !14838, file: !2478, line: 523, column: 43)
!14844 = !DILocation(line: 531, column: 3, scope: !14843)
!14845 = !DILocation(line: 532, column: 30, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14838, file: !2478, line: 531, column: 10)
!14847 = !DILocation(line: 535, column: 29, scope: !14848)
!14848 = distinct !DILexicalBlock(scope: !14833, file: !2478, line: 534, column: 9)
!14849 = !DILocation(line: 0, scope: !14765, inlinedAt: !14850)
!14850 = distinct !DILocation(line: 537, column: 2, scope: !14808)
!14851 = !DILocation(line: 0, scope: !14773, inlinedAt: !14852)
!14852 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !14850)
!14853 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !14852)
!14854 = !DILocation(line: 538, column: 1, scope: !14808)
!14855 = distinct !DISubprogram(name: "sliceable", scope: !2478, file: !2478, line: 468, type: !14856, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14858)
!14856 = !DISubroutineType(types: !14857)
!14857 = !{!166, !2373}
!14858 = !{!14859, !14860}
!14859 = !DILocalVariable(name: "thread", arg: 1, scope: !14855, file: !2478, line: 468, type: !2373)
!14860 = !DILocalVariable(name: "ret", scope: !14855, file: !2478, line: 470, type: !166)
!14861 = !DILocation(line: 0, scope: !14855)
!14862 = !DILocation(line: 470, column: 13, scope: !14855)
!14863 = !DILocation(line: 471, column: 3, scope: !14855)
!14864 = !DILocation(line: 471, column: 7, scope: !14855)
!14865 = !DILocation(line: 472, column: 3, scope: !14855)
!14866 = !DILocation(line: 472, column: 37, scope: !14855)
!14867 = !DILocation(line: 472, column: 24, scope: !14855)
!14868 = !DILocation(line: 472, column: 43, scope: !14855)
!14869 = !DILocation(line: 472, column: 7, scope: !14855)
!14870 = !DILocation(line: 473, column: 3, scope: !14855)
!14871 = !DILocation(line: 473, column: 7, scope: !14855)
!14872 = !DILocation(line: 473, column: 6, scope: !14855)
!14873 = !DILocation(line: 479, column: 2, scope: !14855)
!14874 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2478, file: !2478, line: 482, type: !14875, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14877)
!14875 = !DISubroutineType(types: !14876)
!14876 = !{!14730, !14730}
!14877 = !{!14878, !14879}
!14878 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14874, file: !2478, line: 482, type: !14730)
!14879 = !DILocalVariable(name: "curr", scope: !14874, file: !2478, line: 484, type: !2373)
!14880 = !DILocation(line: 0, scope: !14874)
!14881 = !DILocation(line: 484, column: 26, scope: !14874)
!14882 = !DILocation(line: 493, column: 7, scope: !14883)
!14883 = distinct !DILexicalBlock(scope: !14874, file: !2478, line: 493, column: 6)
!14884 = !DILocation(line: 493, column: 6, scope: !14874)
!14885 = !DILocation(line: 494, column: 3, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14883, file: !2478, line: 493, column: 49)
!14887 = !DILocation(line: 495, column: 2, scope: !14886)
!14888 = !DILocation(line: 496, column: 2, scope: !14874)
!14889 = !DILocation(line: 499, column: 1, scope: !14874)
!14890 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13746, file: !13746, line: 106, type: !14856, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14891)
!14891 = !{!14892, !14893}
!14892 = !DILocalVariable(name: "thread", arg: 1, scope: !14890, file: !13746, line: 106, type: !2373)
!14893 = !DILocalVariable(name: "state", scope: !14890, file: !13746, line: 108, type: !163)
!14894 = !DILocation(line: 0, scope: !14890)
!14895 = !DILocation(line: 108, column: 31, scope: !14890)
!14896 = !DILocation(line: 110, column: 16, scope: !14890)
!14897 = !DILocation(line: 111, column: 41, scope: !14890)
!14898 = !DILocation(line: 110, column: 2, scope: !14890)
!14899 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2478, file: !2478, line: 393, type: !14696, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14900)
!14900 = !{!14901}
!14901 = !DILocalVariable(name: "thread", arg: 1, scope: !14899, file: !2478, line: 393, type: !2373)
!14902 = !DILocation(line: 0, scope: !14899)
!14903 = !DILocation(line: 395, column: 6, scope: !14904)
!14904 = distinct !DILexicalBlock(scope: !14899, file: !2478, line: 395, column: 6)
!14905 = !DILocation(line: 395, column: 6, scope: !14899)
!14906 = !DILocalVariable(name: "thread", arg: 1, scope: !14907, file: !2478, line: 264, type: !2373)
!14907 = distinct !DISubprogram(name: "dequeue_thread", scope: !2478, file: !2478, line: 264, type: !14696, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14908)
!14908 = !{!14906}
!14909 = !DILocation(line: 0, scope: !14907, inlinedAt: !14910)
!14910 = distinct !DILocation(line: 396, column: 3, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !14904, file: !2478, line: 395, column: 34)
!14912 = !DILocation(line: 266, column: 15, scope: !14907, inlinedAt: !14910)
!14913 = !DILocation(line: 266, column: 28, scope: !14907, inlinedAt: !14910)
!14914 = !DILocalVariable(name: "thread", arg: 1, scope: !14915, file: !2478, line: 232, type: !2373)
!14915 = distinct !DISubprogram(name: "runq_remove", scope: !2478, file: !2478, line: 232, type: !14696, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14916)
!14916 = !{!14914}
!14917 = !DILocation(line: 0, scope: !14915, inlinedAt: !14918)
!14918 = distinct !DILocation(line: 268, column: 3, scope: !14919, inlinedAt: !14910)
!14919 = distinct !DILexicalBlock(scope: !14920, file: !2478, line: 267, column: 35)
!14920 = distinct !DILexicalBlock(scope: !14907, file: !2478, line: 267, column: 6)
!14921 = !DILocation(line: 234, column: 2, scope: !14915, inlinedAt: !14918)
!14922 = !DILocation(line: 397, column: 2, scope: !14911)
!14923 = !DILocalVariable(name: "thread", arg: 1, scope: !14924, file: !2478, line: 250, type: !2373)
!14924 = distinct !DISubprogram(name: "queue_thread", scope: !2478, file: !2478, line: 250, type: !14696, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14925)
!14925 = !{!14923}
!14926 = !DILocation(line: 0, scope: !14924, inlinedAt: !14927)
!14927 = distinct !DILocation(line: 398, column: 2, scope: !14899)
!14928 = !DILocation(line: 252, column: 15, scope: !14924, inlinedAt: !14927)
!14929 = !DILocation(line: 252, column: 28, scope: !14924, inlinedAt: !14927)
!14930 = !DILocalVariable(name: "thread", arg: 1, scope: !14931, file: !2478, line: 227, type: !2373)
!14931 = distinct !DISubprogram(name: "runq_add", scope: !2478, file: !2478, line: 227, type: !14696, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14932)
!14932 = !{!14930}
!14933 = !DILocation(line: 0, scope: !14931, inlinedAt: !14934)
!14934 = distinct !DILocation(line: 254, column: 3, scope: !14935, inlinedAt: !14927)
!14935 = distinct !DILexicalBlock(scope: !14936, file: !2478, line: 253, column: 35)
!14936 = distinct !DILexicalBlock(scope: !14924, file: !2478, line: 253, column: 6)
!14937 = !DILocalVariable(name: "pq", arg: 1, scope: !14938, file: !2478, line: 181, type: !14941)
!14938 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2478, file: !2478, line: 181, type: !14939, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14942)
!14939 = !DISubroutineType(types: !14940)
!14940 = !{null, !14941, !2373}
!14941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 32)
!14942 = !{!14937, !14943, !14944}
!14943 = !DILocalVariable(name: "thread", arg: 2, scope: !14938, file: !2478, line: 182, type: !2373)
!14944 = !DILocalVariable(name: "t", scope: !14938, file: !2478, line: 184, type: !2373)
!14945 = !DILocation(line: 0, scope: !14938, inlinedAt: !14946)
!14946 = distinct !DILocation(line: 229, column: 2, scope: !14931, inlinedAt: !14934)
!14947 = !DILocation(line: 188, column: 2, scope: !14948, inlinedAt: !14946)
!14948 = distinct !DILexicalBlock(scope: !14938, file: !2478, line: 188, column: 2)
!14949 = !DILocation(line: 188, column: 2, scope: !14950, inlinedAt: !14946)
!14950 = distinct !DILexicalBlock(scope: !14948, file: !2478, line: 188, column: 2)
!14951 = !DILocation(line: 0, scope: !14948, inlinedAt: !14946)
!14952 = !DILocation(line: 189, column: 7, scope: !14953, inlinedAt: !14946)
!14953 = distinct !DILexicalBlock(scope: !14954, file: !2478, line: 189, column: 7)
!14954 = distinct !DILexicalBlock(scope: !14950, file: !2478, line: 188, column: 56)
!14955 = !DILocation(line: 189, column: 35, scope: !14953, inlinedAt: !14946)
!14956 = !DILocation(line: 189, column: 7, scope: !14954, inlinedAt: !14946)
!14957 = !DILocation(line: 191, column: 21, scope: !14958, inlinedAt: !14946)
!14958 = distinct !DILexicalBlock(scope: !14953, file: !2478, line: 189, column: 40)
!14959 = !DILocation(line: 190, column: 4, scope: !14958, inlinedAt: !14946)
!14960 = !DILocation(line: 192, column: 4, scope: !14958, inlinedAt: !14946)
!14961 = distinct !{!14961, !14947, !14962}
!14962 = !DILocation(line: 194, column: 2, scope: !14948, inlinedAt: !14946)
!14963 = !DILocation(line: 196, column: 37, scope: !14938, inlinedAt: !14946)
!14964 = !DILocation(line: 196, column: 2, scope: !14938, inlinedAt: !14946)
!14965 = !DILocation(line: 197, column: 1, scope: !14938, inlinedAt: !14946)
!14966 = !DILocation(line: 399, column: 25, scope: !14899)
!14967 = !DILocation(line: 399, column: 22, scope: !14899)
!14968 = !DILocation(line: 399, column: 2, scope: !14899)
!14969 = !DILocation(line: 400, column: 1, scope: !14899)
!14970 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13746, file: !13746, line: 136, type: !14856, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14971)
!14971 = !{!14972}
!14972 = !DILocalVariable(name: "thread", arg: 1, scope: !14970, file: !13746, line: 136, type: !2373)
!14973 = !DILocation(line: 0, scope: !14970)
!14974 = !DILocation(line: 138, column: 9, scope: !14970)
!14975 = !DILocation(line: 138, column: 2, scope: !14970)
!14976 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2478, file: !2478, line: 1137, type: !14939, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14977)
!14977 = !{!14978, !14979}
!14978 = !DILocalVariable(name: "pq", arg: 1, scope: !14976, file: !2478, line: 1137, type: !14941)
!14979 = !DILocalVariable(name: "thread", arg: 2, scope: !14976, file: !2478, line: 1137, type: !2373)
!14980 = !DILocation(line: 0, scope: !14976)
!14981 = !DILocation(line: 1141, column: 33, scope: !14976)
!14982 = !DILocation(line: 1141, column: 2, scope: !14976)
!14983 = !DILocation(line: 1142, column: 1, scope: !14976)
!14984 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !321, file: !321, line: 294, type: !14985, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14987)
!14985 = !DISubroutineType(types: !14986)
!14986 = !{!2474, !14941}
!14987 = !{!14988}
!14988 = !DILocalVariable(name: "list", arg: 1, scope: !14984, file: !321, line: 294, type: !14941)
!14989 = !DILocation(line: 0, scope: !14984)
!14990 = !DILocation(line: 296, column: 9, scope: !14984)
!14991 = !DILocation(line: 296, column: 49, scope: !14984)
!14992 = !DILocation(line: 296, column: 2, scope: !14984)
!14993 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !321, file: !321, line: 443, type: !14994, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !14996)
!14994 = !DISubroutineType(types: !14995)
!14995 = !{null, !2474, !2474}
!14996 = !{!14997, !14998, !14999}
!14997 = !DILocalVariable(name: "successor", arg: 1, scope: !14993, file: !321, line: 443, type: !2474)
!14998 = !DILocalVariable(name: "node", arg: 2, scope: !14993, file: !321, line: 443, type: !2474)
!14999 = !DILocalVariable(name: "prev", scope: !14993, file: !321, line: 445, type: !15000)
!15000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2474)
!15001 = !DILocation(line: 0, scope: !14993)
!15002 = !DILocation(line: 445, column: 39, scope: !14993)
!15003 = !DILocation(line: 447, column: 8, scope: !14993)
!15004 = !DILocation(line: 447, column: 13, scope: !14993)
!15005 = !DILocation(line: 448, column: 8, scope: !14993)
!15006 = !DILocation(line: 448, column: 13, scope: !14993)
!15007 = !DILocation(line: 449, column: 8, scope: !14993)
!15008 = !DILocation(line: 449, column: 13, scope: !14993)
!15009 = !DILocation(line: 450, column: 18, scope: !14993)
!15010 = !DILocation(line: 451, column: 1, scope: !14993)
!15011 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !321, file: !321, line: 341, type: !15012, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15014)
!15012 = !DISubroutineType(types: !15013)
!15013 = !{!2474, !14941, !2474}
!15014 = !{!15015, !15016}
!15015 = !DILocalVariable(name: "list", arg: 1, scope: !15011, file: !321, line: 341, type: !14941)
!15016 = !DILocalVariable(name: "node", arg: 2, scope: !15011, file: !321, line: 342, type: !2474)
!15017 = !DILocation(line: 0, scope: !15011)
!15018 = !DILocation(line: 344, column: 15, scope: !15011)
!15019 = !DILocation(line: 344, column: 9, scope: !15011)
!15020 = !DILocation(line: 344, column: 26, scope: !15011)
!15021 = !DILocation(line: 344, column: 2, scope: !15011)
!15022 = distinct !DISubprogram(name: "sys_dlist_append", scope: !321, file: !321, line: 404, type: !15023, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15025)
!15023 = !DISubroutineType(types: !15024)
!15024 = !{null, !14941, !2474}
!15025 = !{!15026, !15027, !15028}
!15026 = !DILocalVariable(name: "list", arg: 1, scope: !15022, file: !321, line: 404, type: !14941)
!15027 = !DILocalVariable(name: "node", arg: 2, scope: !15022, file: !321, line: 404, type: !2474)
!15028 = !DILocalVariable(name: "tail", scope: !15022, file: !321, line: 406, type: !15000)
!15029 = !DILocation(line: 0, scope: !15022)
!15030 = !DILocation(line: 406, column: 34, scope: !15022)
!15031 = !DILocation(line: 408, column: 8, scope: !15022)
!15032 = !DILocation(line: 408, column: 13, scope: !15022)
!15033 = !DILocation(line: 409, column: 8, scope: !15022)
!15034 = !DILocation(line: 409, column: 13, scope: !15022)
!15035 = !DILocation(line: 411, column: 8, scope: !15022)
!15036 = !DILocation(line: 411, column: 13, scope: !15022)
!15037 = !DILocation(line: 412, column: 13, scope: !15022)
!15038 = !DILocation(line: 413, column: 1, scope: !15022)
!15039 = distinct !DISubprogram(name: "update_cache", scope: !2478, file: !2478, line: 559, type: !8486, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15040)
!15040 = !{!15041, !15042}
!15041 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15039, file: !2478, line: 559, type: !103)
!15042 = !DILocalVariable(name: "thread", scope: !15039, file: !2478, line: 562, type: !2373)
!15043 = !DILocation(line: 0, scope: !15039)
!15044 = !DILocation(line: 239, column: 9, scope: !15045, inlinedAt: !15048)
!15045 = distinct !DISubprogram(name: "runq_best", scope: !2478, file: !2478, line: 237, type: !15046, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !473)
!15046 = !DISubroutineType(types: !15047)
!15047 = !{!2373}
!15048 = distinct !DILocation(line: 314, column: 28, scope: !15049, inlinedAt: !15052)
!15049 = distinct !DISubprogram(name: "next_up", scope: !2478, file: !2478, line: 312, type: !15046, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15050)
!15050 = !{!15051}
!15051 = !DILocalVariable(name: "thread", scope: !15049, file: !2478, line: 314, type: !2373)
!15052 = distinct !DILocation(line: 562, column: 28, scope: !15039)
!15053 = !DILocation(line: 0, scope: !15049, inlinedAt: !15052)
!15054 = !DILocation(line: 340, column: 17, scope: !15049, inlinedAt: !15052)
!15055 = !DILocation(line: 340, column: 9, scope: !15049, inlinedAt: !15052)
!15056 = !DILocalVariable(name: "thread", arg: 1, scope: !15057, file: !2478, line: 127, type: !2373)
!15057 = distinct !DISubprogram(name: "should_preempt", scope: !2478, file: !2478, line: 127, type: !15058, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15060)
!15058 = !DISubroutineType(types: !15059)
!15059 = !{!166, !2373, !103}
!15060 = !{!15056, !15061}
!15061 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15057, file: !2478, line: 128, type: !103)
!15062 = !DILocation(line: 0, scope: !15057, inlinedAt: !15063)
!15063 = distinct !DILocation(line: 564, column: 6, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !15039, file: !2478, line: 564, column: 6)
!15065 = !DILocation(line: 133, column: 17, scope: !15066, inlinedAt: !15063)
!15066 = distinct !DILexicalBlock(scope: !15057, file: !2478, line: 133, column: 6)
!15067 = !DILocation(line: 0, scope: !15064)
!15068 = !DILocation(line: 133, column: 6, scope: !15057, inlinedAt: !15063)
!15069 = !DILocation(line: 140, column: 6, scope: !15070, inlinedAt: !15063)
!15070 = distinct !DILexicalBlock(scope: !15057, file: !2478, line: 140, column: 6)
!15071 = !DILocation(line: 140, column: 6, scope: !15057, inlinedAt: !15063)
!15072 = !DILocation(line: 150, column: 9, scope: !15073, inlinedAt: !15063)
!15073 = distinct !DILexicalBlock(scope: !15057, file: !2478, line: 149, column: 6)
!15074 = !DILocation(line: 149, column: 6, scope: !15057, inlinedAt: !15063)
!15075 = !DILocation(line: 157, column: 6, scope: !15076, inlinedAt: !15063)
!15076 = distinct !DILexicalBlock(scope: !15057, file: !2478, line: 157, column: 6)
!15077 = !DILocation(line: 564, column: 6, scope: !15039)
!15078 = !DILocation(line: 566, column: 14, scope: !15079)
!15079 = distinct !DILexicalBlock(scope: !15080, file: !2478, line: 566, column: 7)
!15080 = distinct !DILexicalBlock(scope: !15064, file: !2478, line: 564, column: 42)
!15081 = !DILocation(line: 566, column: 7, scope: !15080)
!15082 = !DILocation(line: 567, column: 4, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !15079, file: !2478, line: 566, column: 27)
!15084 = !DILocation(line: 568, column: 3, scope: !15083)
!15085 = !DILocation(line: 585, column: 1, scope: !15039)
!15086 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2478, file: !2478, line: 1144, type: !15087, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15089)
!15087 = !DISubroutineType(types: !15088)
!15088 = !{!2373, !14941}
!15089 = !{!15090, !15091, !15092}
!15090 = !DILocalVariable(name: "pq", arg: 1, scope: !15086, file: !2478, line: 1144, type: !14941)
!15091 = !DILocalVariable(name: "thread", scope: !15086, file: !2478, line: 1146, type: !2373)
!15092 = !DILocalVariable(name: "n", scope: !15086, file: !2478, line: 1147, type: !2474)
!15093 = !DILocation(line: 0, scope: !15086)
!15094 = !DILocation(line: 1147, column: 19, scope: !15086)
!15095 = !DILocation(line: 1152, column: 2, scope: !15086)
!15096 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13746, file: !13746, line: 115, type: !14856, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15097)
!15097 = !{!15098}
!15098 = !DILocalVariable(name: "thread", arg: 1, scope: !15096, file: !13746, line: 115, type: !2373)
!15099 = !DILocation(line: 0, scope: !15096)
!15100 = !DILocation(line: 117, column: 46, scope: !15096)
!15101 = !DILocation(line: 117, column: 10, scope: !15096)
!15102 = !DILocation(line: 117, column: 9, scope: !15096)
!15103 = !DILocation(line: 117, column: 2, scope: !15096)
!15104 = distinct !DISubprogram(name: "is_preempt", scope: !2478, file: !2478, line: 62, type: !14714, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15105)
!15105 = !{!15106}
!15106 = !DILocalVariable(name: "thread", arg: 1, scope: !15104, file: !2478, line: 62, type: !2373)
!15107 = !DILocation(line: 0, scope: !15104)
!15108 = !DILocation(line: 65, column: 22, scope: !15104)
!15109 = !DILocation(line: 65, column: 30, scope: !15104)
!15110 = !DILocation(line: 65, column: 2, scope: !15104)
!15111 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14140, file: !14140, line: 35, type: !15112, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15116)
!15112 = !DISubroutineType(types: !15113)
!15113 = !{!166, !15114}
!15114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15115, size: 32)
!15115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2424)
!15116 = !{!15117}
!15117 = !DILocalVariable(name: "to", arg: 1, scope: !15111, file: !14140, line: 35, type: !15114)
!15118 = !DILocation(line: 0, scope: !15111)
!15119 = !DILocation(line: 37, column: 35, scope: !15111)
!15120 = !DILocation(line: 37, column: 10, scope: !15111)
!15121 = !DILocation(line: 37, column: 9, scope: !15111)
!15122 = !DILocation(line: 37, column: 2, scope: !15111)
!15123 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !321, file: !321, line: 225, type: !15124, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15128)
!15124 = !DISubroutineType(types: !15125)
!15125 = !{!166, !15126}
!15126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15127, size: 32)
!15127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2383)
!15128 = !{!15129}
!15129 = !DILocalVariable(name: "node", arg: 1, scope: !15123, file: !321, line: 225, type: !15126)
!15130 = !DILocation(line: 0, scope: !15123)
!15131 = !DILocation(line: 227, column: 15, scope: !15123)
!15132 = !DILocation(line: 227, column: 20, scope: !15123)
!15133 = !DILocation(line: 227, column: 2, scope: !15123)
!15134 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !321, file: !321, line: 325, type: !15012, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15135)
!15135 = !{!15136, !15137}
!15136 = !DILocalVariable(name: "list", arg: 1, scope: !15134, file: !321, line: 325, type: !14941)
!15137 = !DILocalVariable(name: "node", arg: 2, scope: !15134, file: !321, line: 326, type: !2474)
!15138 = !DILocation(line: 0, scope: !15134)
!15139 = !DILocation(line: 328, column: 24, scope: !15134)
!15140 = !DILocation(line: 328, column: 15, scope: !15134)
!15141 = !DILocation(line: 328, column: 9, scope: !15134)
!15142 = !DILocation(line: 328, column: 45, scope: !15134)
!15143 = !DILocation(line: 328, column: 2, scope: !15134)
!15144 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !321, file: !321, line: 266, type: !15145, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15147)
!15145 = !DISubroutineType(types: !15146)
!15146 = !{!166, !14941}
!15147 = !{!15148}
!15148 = !DILocalVariable(name: "list", arg: 1, scope: !15144, file: !321, line: 266, type: !14941)
!15149 = !DILocation(line: 0, scope: !15144)
!15150 = !DILocation(line: 268, column: 15, scope: !15144)
!15151 = !DILocation(line: 268, column: 20, scope: !15144)
!15152 = !DILocation(line: 268, column: 2, scope: !15144)
!15153 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !321, file: !321, line: 496, type: !15154, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15156)
!15154 = !DISubroutineType(types: !15155)
!15155 = !{null, !2474}
!15156 = !{!15157, !15158, !15159}
!15157 = !DILocalVariable(name: "node", arg: 1, scope: !15153, file: !321, line: 496, type: !2474)
!15158 = !DILocalVariable(name: "prev", scope: !15153, file: !321, line: 498, type: !15000)
!15159 = !DILocalVariable(name: "next", scope: !15153, file: !321, line: 499, type: !15000)
!15160 = !DILocation(line: 0, scope: !15153)
!15161 = !DILocation(line: 498, column: 34, scope: !15153)
!15162 = !DILocation(line: 499, column: 34, scope: !15153)
!15163 = !DILocation(line: 501, column: 8, scope: !15153)
!15164 = !DILocation(line: 501, column: 13, scope: !15153)
!15165 = !DILocation(line: 502, column: 8, scope: !15153)
!15166 = !DILocation(line: 502, column: 13, scope: !15153)
!15167 = !DILocation(line: 503, column: 2, scope: !15153)
!15168 = !DILocation(line: 504, column: 1, scope: !15153)
!15169 = distinct !DISubprogram(name: "sys_dnode_init", scope: !321, file: !321, line: 211, type: !15154, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15170)
!15170 = !{!15171}
!15171 = !DILocalVariable(name: "node", arg: 1, scope: !15169, file: !321, line: 211, type: !2474)
!15172 = !DILocation(line: 0, scope: !15169)
!15173 = !DILocation(line: 213, column: 8, scope: !15169)
!15174 = !DILocation(line: 213, column: 13, scope: !15169)
!15175 = !DILocation(line: 214, column: 8, scope: !15169)
!15176 = !DILocation(line: 214, column: 13, scope: !15169)
!15177 = !DILocation(line: 215, column: 1, scope: !15169)
!15178 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13746, file: !13746, line: 131, type: !15179, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15181)
!15179 = !DISubroutineType(types: !15180)
!15180 = !{!166, !2373, !132}
!15181 = !{!15182, !15183}
!15182 = !DILocalVariable(name: "thread", arg: 1, scope: !15178, file: !13746, line: 131, type: !2373)
!15183 = !DILocalVariable(name: "state", arg: 2, scope: !15178, file: !13746, line: 131, type: !132)
!15184 = !DILocation(line: 0, scope: !15178)
!15185 = !DILocation(line: 133, column: 23, scope: !15178)
!15186 = !DILocation(line: 133, column: 45, scope: !15178)
!15187 = !DILocation(line: 133, column: 2, scope: !15178)
!15188 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13746, file: !13746, line: 211, type: !15189, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15191)
!15189 = !DISubroutineType(types: !15190)
!15190 = !{!166, !103, !103}
!15191 = !{!15192, !15193}
!15192 = !DILocalVariable(name: "prio", arg: 1, scope: !15188, file: !13746, line: 211, type: !103)
!15193 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15188, file: !13746, line: 211, type: !103)
!15194 = !DILocation(line: 0, scope: !15188)
!15195 = !DILocation(line: 213, column: 9, scope: !15188)
!15196 = !DILocation(line: 213, column: 2, scope: !15188)
!15197 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13746, file: !13746, line: 83, type: !14856, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15198)
!15198 = !{!15199}
!15199 = !DILocalVariable(name: "thread", arg: 1, scope: !15197, file: !13746, line: 83, type: !2373)
!15200 = !DILocation(line: 0, scope: !15197)
!15201 = !DILocation(line: 89, column: 16, scope: !15197)
!15202 = !DILocation(line: 89, column: 2, scope: !15197)
!15203 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13746, file: !13746, line: 206, type: !15189, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15204)
!15204 = !{!15205, !15206}
!15205 = !DILocalVariable(name: "prio1", arg: 1, scope: !15203, file: !13746, line: 206, type: !103)
!15206 = !DILocalVariable(name: "prio2", arg: 2, scope: !15203, file: !13746, line: 206, type: !103)
!15207 = !DILocation(line: 0, scope: !15203)
!15208 = !DILocation(line: 208, column: 15, scope: !15203)
!15209 = !DILocation(line: 208, column: 2, scope: !15203)
!15210 = distinct !DISubprogram(name: "z_ready_thread", scope: !2478, file: !2478, line: 635, type: !14696, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15211)
!15211 = !{!15212, !15213, !15215}
!15212 = !DILocalVariable(name: "thread", arg: 1, scope: !15210, file: !2478, line: 635, type: !2373)
!15213 = !DILocalVariable(name: "__i", scope: !15214, file: !2478, line: 637, type: !14730)
!15214 = distinct !DILexicalBlock(scope: !15210, file: !2478, line: 637, column: 2)
!15215 = !DILocalVariable(name: "__key", scope: !15214, file: !2478, line: 637, type: !14730)
!15216 = !DILocation(line: 0, scope: !15210)
!15217 = !DILocation(line: 0, scope: !15214)
!15218 = !DILocation(line: 0, scope: !14738, inlinedAt: !15219)
!15219 = distinct !DILocation(line: 637, column: 2, scope: !15214)
!15220 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15221)
!15221 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !15219)
!15222 = !DILocation(line: 0, scope: !14747, inlinedAt: !15221)
!15223 = !DILocation(line: 639, column: 4, scope: !15224)
!15224 = distinct !DILexicalBlock(scope: !15225, file: !2478, line: 638, column: 41)
!15225 = distinct !DILexicalBlock(scope: !15226, file: !2478, line: 638, column: 7)
!15226 = distinct !DILexicalBlock(scope: !15227, file: !2478, line: 637, column: 26)
!15227 = distinct !DILexicalBlock(scope: !15214, file: !2478, line: 637, column: 2)
!15228 = !DILocation(line: 0, scope: !14765, inlinedAt: !15229)
!15229 = distinct !DILocation(line: 637, column: 2, scope: !15227)
!15230 = !DILocation(line: 0, scope: !14773, inlinedAt: !15231)
!15231 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !15229)
!15232 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15231)
!15233 = !DILocation(line: 642, column: 1, scope: !15210)
!15234 = distinct !DISubprogram(name: "ready_thread", scope: !2478, file: !2478, line: 617, type: !14696, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15235)
!15235 = !{!15236}
!15236 = !DILocalVariable(name: "thread", arg: 1, scope: !15234, file: !2478, line: 617, type: !2373)
!15237 = !DILocation(line: 0, scope: !15234)
!15238 = !DILocation(line: 626, column: 7, scope: !15239)
!15239 = distinct !DILexicalBlock(scope: !15234, file: !2478, line: 626, column: 6)
!15240 = !DILocation(line: 626, column: 34, scope: !15239)
!15241 = !DILocation(line: 626, column: 37, scope: !15239)
!15242 = !DILocation(line: 626, column: 6, scope: !15234)
!15243 = !DILocation(line: 0, scope: !14924, inlinedAt: !15244)
!15244 = distinct !DILocation(line: 629, column: 3, scope: !15245)
!15245 = distinct !DILexicalBlock(scope: !15239, file: !2478, line: 626, column: 64)
!15246 = !DILocation(line: 252, column: 15, scope: !14924, inlinedAt: !15244)
!15247 = !DILocation(line: 252, column: 28, scope: !14924, inlinedAt: !15244)
!15248 = !DILocation(line: 0, scope: !14931, inlinedAt: !15249)
!15249 = distinct !DILocation(line: 254, column: 3, scope: !14935, inlinedAt: !15244)
!15250 = !DILocation(line: 0, scope: !14938, inlinedAt: !15251)
!15251 = distinct !DILocation(line: 229, column: 2, scope: !14931, inlinedAt: !15249)
!15252 = !DILocation(line: 188, column: 2, scope: !14948, inlinedAt: !15251)
!15253 = !DILocation(line: 188, column: 2, scope: !14950, inlinedAt: !15251)
!15254 = !DILocation(line: 0, scope: !14948, inlinedAt: !15251)
!15255 = !DILocation(line: 189, column: 7, scope: !14953, inlinedAt: !15251)
!15256 = !DILocation(line: 189, column: 35, scope: !14953, inlinedAt: !15251)
!15257 = !DILocation(line: 189, column: 7, scope: !14954, inlinedAt: !15251)
!15258 = !DILocation(line: 191, column: 21, scope: !14958, inlinedAt: !15251)
!15259 = !DILocation(line: 190, column: 4, scope: !14958, inlinedAt: !15251)
!15260 = !DILocation(line: 192, column: 4, scope: !14958, inlinedAt: !15251)
!15261 = distinct !{!15261, !15252, !15262}
!15262 = !DILocation(line: 194, column: 2, scope: !14948, inlinedAt: !15251)
!15263 = !DILocation(line: 196, column: 37, scope: !14938, inlinedAt: !15251)
!15264 = !DILocation(line: 196, column: 2, scope: !14938, inlinedAt: !15251)
!15265 = !DILocation(line: 197, column: 1, scope: !14938, inlinedAt: !15251)
!15266 = !DILocation(line: 630, column: 3, scope: !15245)
!15267 = !DILocation(line: 632, column: 2, scope: !15245)
!15268 = !DILocation(line: 633, column: 1, scope: !15234)
!15269 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13746, file: !13746, line: 120, type: !14856, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15270)
!15270 = !{!15271}
!15271 = !DILocalVariable(name: "thread", arg: 1, scope: !15269, file: !13746, line: 120, type: !2373)
!15272 = !DILocation(line: 0, scope: !15269)
!15273 = !DILocation(line: 122, column: 12, scope: !15269)
!15274 = !DILocation(line: 122, column: 62, scope: !15269)
!15275 = !DILocation(line: 123, column: 4, scope: !15269)
!15276 = !DILocation(line: 122, column: 2, scope: !15269)
!15277 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2478, file: !2478, line: 644, type: !14696, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15278)
!15278 = !{!15279, !15280, !15282}
!15279 = !DILocalVariable(name: "thread", arg: 1, scope: !15277, file: !2478, line: 644, type: !2373)
!15280 = !DILocalVariable(name: "__i", scope: !15281, file: !2478, line: 646, type: !14730)
!15281 = distinct !DILexicalBlock(scope: !15277, file: !2478, line: 646, column: 2)
!15282 = !DILocalVariable(name: "__key", scope: !15281, file: !2478, line: 646, type: !14730)
!15283 = !DILocation(line: 0, scope: !15277)
!15284 = !DILocation(line: 0, scope: !15281)
!15285 = !DILocation(line: 0, scope: !14738, inlinedAt: !15286)
!15286 = distinct !DILocation(line: 646, column: 2, scope: !15281)
!15287 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15288)
!15288 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !15286)
!15289 = !DILocation(line: 0, scope: !14747, inlinedAt: !15288)
!15290 = !DILocation(line: 647, column: 3, scope: !15291)
!15291 = distinct !DILexicalBlock(scope: !15292, file: !2478, line: 646, column: 26)
!15292 = distinct !DILexicalBlock(scope: !15281, file: !2478, line: 646, column: 2)
!15293 = !DILocation(line: 0, scope: !14765, inlinedAt: !15294)
!15294 = distinct !DILocation(line: 646, column: 2, scope: !15292)
!15295 = !DILocation(line: 0, scope: !14773, inlinedAt: !15296)
!15296 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !15294)
!15297 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15296)
!15298 = !DILocation(line: 649, column: 1, scope: !15277)
!15299 = distinct !DISubprogram(name: "z_sched_start", scope: !2478, file: !2478, line: 651, type: !14696, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15300)
!15300 = !{!15301, !15302}
!15301 = !DILocalVariable(name: "thread", arg: 1, scope: !15299, file: !2478, line: 651, type: !2373)
!15302 = !DILocalVariable(name: "key", scope: !15299, file: !2478, line: 653, type: !14730)
!15303 = !DILocation(line: 0, scope: !15299)
!15304 = !DILocation(line: 0, scope: !14738, inlinedAt: !15305)
!15305 = distinct !DILocation(line: 653, column: 25, scope: !15299)
!15306 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15307)
!15307 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !15305)
!15308 = !DILocation(line: 0, scope: !14747, inlinedAt: !15307)
!15309 = !DILocation(line: 655, column: 6, scope: !15310)
!15310 = distinct !DILexicalBlock(scope: !15299, file: !2478, line: 655, column: 6)
!15311 = !DILocation(line: 655, column: 6, scope: !15299)
!15312 = !DILocation(line: 0, scope: !14765, inlinedAt: !15313)
!15313 = distinct !DILocation(line: 656, column: 3, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15310, file: !2478, line: 655, column: 36)
!15315 = !DILocation(line: 0, scope: !14773, inlinedAt: !15316)
!15316 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !15313)
!15317 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15316)
!15318 = !DILocation(line: 657, column: 3, scope: !15314)
!15319 = !DILocation(line: 660, column: 2, scope: !15299)
!15320 = !DILocation(line: 661, column: 2, scope: !15299)
!15321 = !DILocation(line: 662, column: 2, scope: !15299)
!15322 = !DILocation(line: 663, column: 1, scope: !15299)
!15323 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13746, file: !13746, line: 126, type: !14856, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15324)
!15324 = !{!15325}
!15325 = !DILocalVariable(name: "thread", arg: 1, scope: !15323, file: !13746, line: 126, type: !2373)
!15326 = !DILocation(line: 0, scope: !15323)
!15327 = !DILocation(line: 128, column: 23, scope: !15323)
!15328 = !DILocation(line: 128, column: 36, scope: !15323)
!15329 = !DILocation(line: 128, column: 56, scope: !15323)
!15330 = !DILocation(line: 128, column: 2, scope: !15323)
!15331 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13746, file: !13746, line: 155, type: !14696, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15332)
!15332 = !{!15333}
!15333 = !DILocalVariable(name: "thread", arg: 1, scope: !15331, file: !13746, line: 155, type: !2373)
!15334 = !DILocation(line: 0, scope: !15331)
!15335 = !DILocation(line: 157, column: 15, scope: !15331)
!15336 = !DILocation(line: 157, column: 28, scope: !15331)
!15337 = !DILocation(line: 158, column: 1, scope: !15331)
!15338 = distinct !DISubprogram(name: "z_reschedule", scope: !2478, file: !2478, line: 967, type: !14766, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15339)
!15339 = !{!15340, !15341}
!15340 = !DILocalVariable(name: "lock", arg: 1, scope: !15338, file: !2478, line: 967, type: !14741)
!15341 = !DILocalVariable(name: "key", arg: 2, scope: !15338, file: !2478, line: 967, type: !14730)
!15342 = !DILocation(line: 0, scope: !15338)
!15343 = !DILocation(line: 969, column: 6, scope: !15344)
!15344 = distinct !DILexicalBlock(scope: !15338, file: !2478, line: 969, column: 6)
!15345 = !DILocation(line: 969, column: 23, scope: !15344)
!15346 = !DILocation(line: 969, column: 26, scope: !15344)
!15347 = !DILocation(line: 969, column: 6, scope: !15338)
!15348 = !DILocalVariable(name: "key", arg: 2, scope: !15349, file: !13850, line: 193, type: !14730)
!15349 = distinct !DISubprogram(name: "z_swap", scope: !13850, file: !13850, line: 193, type: !15350, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15352)
!15350 = !DISubroutineType(types: !15351)
!15351 = !{!103, !14741, !14730}
!15352 = !{!15353, !15348}
!15353 = !DILocalVariable(name: "lock", arg: 1, scope: !15349, file: !13850, line: 193, type: !14741)
!15354 = !DILocation(line: 0, scope: !15349, inlinedAt: !15355)
!15355 = distinct !DILocation(line: 970, column: 3, scope: !15356)
!15356 = distinct !DILexicalBlock(scope: !15344, file: !2478, line: 969, column: 39)
!15357 = !DILocation(line: 196, column: 9, scope: !15349, inlinedAt: !15355)
!15358 = !DILocation(line: 971, column: 2, scope: !15356)
!15359 = !DILocation(line: 0, scope: !14765, inlinedAt: !15360)
!15360 = distinct !DILocation(line: 972, column: 3, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !15344, file: !2478, line: 971, column: 9)
!15362 = !DILocation(line: 0, scope: !14773, inlinedAt: !15363)
!15363 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !15360)
!15364 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15363)
!15365 = !DILocation(line: 975, column: 1, scope: !15338)
!15366 = distinct !DISubprogram(name: "resched", scope: !2478, file: !2478, line: 940, type: !15367, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15369)
!15367 = !DISubroutineType(types: !15368)
!15368 = !{!166, !132}
!15369 = !{!15370}
!15370 = !DILocalVariable(name: "key", arg: 1, scope: !15366, file: !2478, line: 940, type: !132)
!15371 = !DILocation(line: 0, scope: !15366)
!15372 = !DILocalVariable(name: "key", arg: 1, scope: !15373, file: !5824, line: 112, type: !32)
!15373 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5824, file: !5824, line: 112, type: !15374, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15376)
!15374 = !DISubroutineType(types: !15375)
!15375 = !{!166, !32}
!15376 = !{!15372}
!15377 = !DILocation(line: 0, scope: !15373, inlinedAt: !15378)
!15378 = distinct !DILocation(line: 946, column: 9, scope: !15366)
!15379 = !DILocation(line: 115, column: 13, scope: !15373, inlinedAt: !15378)
!15380 = !DILocation(line: 946, column: 32, scope: !15366)
!15381 = !DILocation(line: 1031, column: 3, scope: !15382, inlinedAt: !15385)
!15382 = distinct !DISubprogram(name: "__get_IPSR", scope: !6844, file: !6844, line: 1027, type: !6925, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15383)
!15383 = !{!15384}
!15384 = !DILocalVariable(name: "result", scope: !15382, file: !6844, line: 1029, type: !132)
!15385 = distinct !DILocation(line: 48, column: 10, scope: !15386, inlinedAt: !15387)
!15386 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7638, file: !7638, line: 46, type: !7639, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !473)
!15387 = distinct !DILocation(line: 946, column: 36, scope: !15366)
!15388 = !{i64 3538274}
!15389 = !DILocation(line: 0, scope: !15382, inlinedAt: !15385)
!15390 = !DILocation(line: 48, column: 9, scope: !15386, inlinedAt: !15387)
!15391 = !DILocation(line: 946, column: 2, scope: !15366)
!15392 = distinct !DISubprogram(name: "need_swap", scope: !2478, file: !2478, line: 953, type: !7639, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15393)
!15393 = !{!15394}
!15394 = !DILocalVariable(name: "new_thread", scope: !15392, file: !2478, line: 959, type: !2373)
!15395 = !DILocation(line: 962, column: 31, scope: !15392)
!15396 = !DILocation(line: 0, scope: !15392)
!15397 = !DILocation(line: 963, column: 23, scope: !15392)
!15398 = !DILocation(line: 963, column: 20, scope: !15392)
!15399 = !DILocation(line: 963, column: 2, scope: !15392)
!15400 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13850, file: !13850, line: 181, type: !6854, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15401)
!15401 = !{!15402, !15403}
!15402 = !DILocalVariable(name: "key", arg: 1, scope: !15400, file: !13850, line: 181, type: !32)
!15403 = !DILocalVariable(name: "ret", scope: !15400, file: !13850, line: 183, type: !103)
!15404 = !DILocation(line: 0, scope: !15400)
!15405 = !DILocation(line: 185, column: 8, scope: !15400)
!15406 = !DILocation(line: 186, column: 2, scope: !15400)
!15407 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2478, file: !2478, line: 665, type: !14696, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15408)
!15408 = !{!15409, !15410, !15412}
!15409 = !DILocalVariable(name: "thread", arg: 1, scope: !15407, file: !2478, line: 665, type: !2373)
!15410 = !DILocalVariable(name: "__i", scope: !15411, file: !2478, line: 671, type: !14730)
!15411 = distinct !DILexicalBlock(scope: !15407, file: !2478, line: 671, column: 2)
!15412 = !DILocalVariable(name: "__key", scope: !15411, file: !2478, line: 671, type: !14730)
!15413 = !DILocation(line: 0, scope: !15407)
!15414 = !DILocation(line: 669, column: 8, scope: !15407)
!15415 = !DILocation(line: 0, scope: !15411)
!15416 = !DILocation(line: 0, scope: !14738, inlinedAt: !15417)
!15417 = distinct !DILocation(line: 671, column: 2, scope: !15411)
!15418 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15419)
!15419 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !15417)
!15420 = !DILocation(line: 0, scope: !14747, inlinedAt: !15419)
!15421 = !DILocation(line: 672, column: 7, scope: !15422)
!15422 = distinct !DILexicalBlock(scope: !15423, file: !2478, line: 672, column: 7)
!15423 = distinct !DILexicalBlock(scope: !15424, file: !2478, line: 671, column: 26)
!15424 = distinct !DILexicalBlock(scope: !15411, file: !2478, line: 671, column: 2)
!15425 = !DILocation(line: 672, column: 7, scope: !15423)
!15426 = !DILocation(line: 0, scope: !14907, inlinedAt: !15427)
!15427 = distinct !DILocation(line: 673, column: 4, scope: !15428)
!15428 = distinct !DILexicalBlock(scope: !15422, file: !2478, line: 672, column: 35)
!15429 = !DILocation(line: 266, column: 15, scope: !14907, inlinedAt: !15427)
!15430 = !DILocation(line: 266, column: 28, scope: !14907, inlinedAt: !15427)
!15431 = !DILocation(line: 0, scope: !14915, inlinedAt: !15432)
!15432 = distinct !DILocation(line: 268, column: 3, scope: !14919, inlinedAt: !15427)
!15433 = !DILocation(line: 234, column: 2, scope: !14915, inlinedAt: !15432)
!15434 = !DILocation(line: 674, column: 3, scope: !15428)
!15435 = !DILocation(line: 675, column: 3, scope: !15423)
!15436 = !DILocation(line: 676, column: 26, scope: !15423)
!15437 = !DILocation(line: 676, column: 23, scope: !15423)
!15438 = !DILocation(line: 676, column: 3, scope: !15423)
!15439 = !DILocation(line: 0, scope: !14765, inlinedAt: !15440)
!15440 = distinct !DILocation(line: 671, column: 2, scope: !15424)
!15441 = !DILocation(line: 0, scope: !14773, inlinedAt: !15442)
!15442 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !15440)
!15443 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15442)
!15444 = !DILocation(line: 679, column: 16, scope: !15445)
!15445 = distinct !DILexicalBlock(scope: !15407, file: !2478, line: 679, column: 6)
!15446 = !DILocation(line: 679, column: 13, scope: !15445)
!15447 = !DILocation(line: 679, column: 6, scope: !15407)
!15448 = !DILocation(line: 680, column: 3, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15445, file: !2478, line: 679, column: 26)
!15450 = !DILocation(line: 681, column: 2, scope: !15449)
!15451 = !DILocation(line: 684, column: 1, scope: !15407)
!15452 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14140, file: !14140, line: 52, type: !14714, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15453)
!15453 = !{!15454}
!15454 = !DILocalVariable(name: "thread", arg: 1, scope: !15452, file: !14140, line: 52, type: !2373)
!15455 = !DILocation(line: 0, scope: !15452)
!15456 = !DILocation(line: 54, column: 39, scope: !15452)
!15457 = !DILocation(line: 54, column: 9, scope: !15452)
!15458 = !DILocation(line: 54, column: 2, scope: !15452)
!15459 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13746, file: !13746, line: 141, type: !14696, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15460)
!15460 = !{!15461}
!15461 = !DILocalVariable(name: "thread", arg: 1, scope: !15459, file: !13746, line: 141, type: !2373)
!15462 = !DILocation(line: 0, scope: !15459)
!15463 = !DILocation(line: 143, column: 15, scope: !15459)
!15464 = !DILocation(line: 143, column: 28, scope: !15459)
!15465 = !DILocation(line: 146, column: 1, scope: !15459)
!15466 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13746, file: !13746, line: 73, type: !3249, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !473)
!15467 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15468)
!15468 = distinct !DILocation(line: 75, column: 30, scope: !15466)
!15469 = !DILocation(line: 0, scope: !14747, inlinedAt: !15468)
!15470 = !DILocation(line: 75, column: 9, scope: !15466)
!15471 = !DILocation(line: 76, column: 1, scope: !15466)
!15472 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2478, file: !2478, line: 977, type: !6935, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15473)
!15473 = !{!15474}
!15474 = !DILocalVariable(name: "key", arg: 1, scope: !15472, file: !2478, line: 977, type: !132)
!15475 = !DILocation(line: 0, scope: !15472)
!15476 = !DILocation(line: 979, column: 6, scope: !15477)
!15477 = distinct !DILexicalBlock(scope: !15472, file: !2478, line: 979, column: 6)
!15478 = !DILocation(line: 979, column: 6, scope: !15472)
!15479 = !DILocation(line: 980, column: 3, scope: !15480)
!15480 = distinct !DILexicalBlock(scope: !15477, file: !2478, line: 979, column: 20)
!15481 = !DILocation(line: 981, column: 2, scope: !15480)
!15482 = !DILocation(line: 0, scope: !14773, inlinedAt: !15483)
!15483 = distinct !DILocation(line: 982, column: 3, scope: !15484)
!15484 = distinct !DILexicalBlock(scope: !15477, file: !2478, line: 981, column: 9)
!15485 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15483)
!15486 = !DILocation(line: 985, column: 1, scope: !15472)
!15487 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2478, file: !2478, line: 695, type: !14696, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15488)
!15488 = !{!15489, !15490}
!15489 = !DILocalVariable(name: "thread", arg: 1, scope: !15487, file: !2478, line: 695, type: !2373)
!15490 = !DILocalVariable(name: "key", scope: !15487, file: !2478, line: 699, type: !14730)
!15491 = !DILocation(line: 0, scope: !15487)
!15492 = !DILocation(line: 0, scope: !14738, inlinedAt: !15493)
!15493 = distinct !DILocation(line: 699, column: 25, scope: !15487)
!15494 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15495)
!15495 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !15493)
!15496 = !DILocation(line: 0, scope: !14747, inlinedAt: !15495)
!15497 = !DILocation(line: 702, column: 7, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15487, file: !2478, line: 702, column: 6)
!15499 = !DILocation(line: 702, column: 6, scope: !15487)
!15500 = !DILocation(line: 0, scope: !14765, inlinedAt: !15501)
!15501 = distinct !DILocation(line: 703, column: 3, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15498, file: !2478, line: 702, column: 38)
!15503 = !DILocation(line: 0, scope: !14773, inlinedAt: !15504)
!15504 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !15501)
!15505 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15504)
!15506 = !DILocation(line: 704, column: 3, scope: !15502)
!15507 = !DILocation(line: 707, column: 2, scope: !15487)
!15508 = !DILocation(line: 708, column: 2, scope: !15487)
!15509 = !DILocation(line: 710, column: 2, scope: !15487)
!15510 = !DILocation(line: 713, column: 1, scope: !15487)
!15511 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13746, file: !13746, line: 96, type: !14856, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15512)
!15512 = !{!15513}
!15513 = !DILocalVariable(name: "thread", arg: 1, scope: !15511, file: !13746, line: 96, type: !2373)
!15514 = !DILocation(line: 0, scope: !15511)
!15515 = !DILocation(line: 98, column: 23, scope: !15511)
!15516 = !DILocation(line: 98, column: 36, scope: !15511)
!15517 = !DILocation(line: 98, column: 57, scope: !15511)
!15518 = !DILocation(line: 98, column: 2, scope: !15511)
!15519 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13746, file: !13746, line: 148, type: !14696, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15520)
!15520 = !{!15521}
!15521 = !DILocalVariable(name: "thread", arg: 1, scope: !15519, file: !13746, line: 148, type: !2373)
!15522 = !DILocation(line: 0, scope: !15519)
!15523 = !DILocation(line: 150, column: 15, scope: !15519)
!15524 = !DILocation(line: 150, column: 28, scope: !15519)
!15525 = !DILocation(line: 153, column: 1, scope: !15519)
!15526 = distinct !DISubprogram(name: "z_pend_thread", scope: !2478, file: !2478, line: 770, type: !15527, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15533)
!15527 = !DISubroutineType(types: !15528)
!15528 = !{null, !2373, !2404, !15529}
!15529 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1712, line: 67, baseType: !15530)
!15530 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1712, line: 65, size: 64, elements: !15531)
!15531 = !{!15532}
!15532 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15530, file: !1712, line: 66, baseType: !1711, size: 64)
!15533 = !{!15534, !15535, !15536, !15537, !15539}
!15534 = !DILocalVariable(name: "thread", arg: 1, scope: !15526, file: !2478, line: 770, type: !2373)
!15535 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15526, file: !2478, line: 770, type: !2404)
!15536 = !DILocalVariable(name: "timeout", arg: 3, scope: !15526, file: !2478, line: 771, type: !15529)
!15537 = !DILocalVariable(name: "__i", scope: !15538, file: !2478, line: 774, type: !14730)
!15538 = distinct !DILexicalBlock(scope: !15526, file: !2478, line: 774, column: 2)
!15539 = !DILocalVariable(name: "__key", scope: !15538, file: !2478, line: 774, type: !14730)
!15540 = !DILocation(line: 0, scope: !15526)
!15541 = !DILocation(line: 0, scope: !15538)
!15542 = !DILocation(line: 0, scope: !14738, inlinedAt: !15543)
!15543 = distinct !DILocation(line: 774, column: 2, scope: !15538)
!15544 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15545)
!15545 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !15543)
!15546 = !DILocation(line: 0, scope: !14747, inlinedAt: !15545)
!15547 = !DILocation(line: 775, column: 3, scope: !15548)
!15548 = distinct !DILexicalBlock(scope: !15549, file: !2478, line: 774, column: 26)
!15549 = distinct !DILexicalBlock(scope: !15538, file: !2478, line: 774, column: 2)
!15550 = !DILocation(line: 0, scope: !14765, inlinedAt: !15551)
!15551 = distinct !DILocation(line: 774, column: 2, scope: !15549)
!15552 = !DILocation(line: 0, scope: !14773, inlinedAt: !15553)
!15553 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !15551)
!15554 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15553)
!15555 = !DILocation(line: 777, column: 1, scope: !15526)
!15556 = distinct !DISubprogram(name: "pend_locked", scope: !2478, file: !2478, line: 760, type: !15527, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15557)
!15557 = !{!15558, !15559, !15560}
!15558 = !DILocalVariable(name: "thread", arg: 1, scope: !15556, file: !2478, line: 760, type: !2373)
!15559 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15556, file: !2478, line: 760, type: !2404)
!15560 = !DILocalVariable(name: "timeout", arg: 3, scope: !15556, file: !2478, line: 761, type: !15529)
!15561 = !DILocation(line: 0, scope: !15556)
!15562 = !DILocation(line: 766, column: 2, scope: !15556)
!15563 = !DILocation(line: 767, column: 2, scope: !15556)
!15564 = !DILocation(line: 768, column: 1, scope: !15556)
!15565 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2478, file: !2478, line: 740, type: !15566, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15568)
!15566 = !DISubroutineType(types: !15567)
!15567 = !{null, !2373, !2404}
!15568 = !{!15569, !15570}
!15569 = !DILocalVariable(name: "thread", arg: 1, scope: !15565, file: !2478, line: 740, type: !2373)
!15570 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15565, file: !2478, line: 740, type: !2404)
!15571 = !DILocation(line: 0, scope: !15565)
!15572 = !DILocation(line: 742, column: 2, scope: !15565)
!15573 = !DILocation(line: 743, column: 2, scope: !15565)
!15574 = !DILocation(line: 747, column: 13, scope: !15575)
!15575 = distinct !DILexicalBlock(scope: !15565, file: !2478, line: 747, column: 6)
!15576 = !DILocation(line: 747, column: 6, scope: !15565)
!15577 = !DILocation(line: 748, column: 16, scope: !15578)
!15578 = distinct !DILexicalBlock(scope: !15575, file: !2478, line: 747, column: 22)
!15579 = !DILocation(line: 748, column: 26, scope: !15578)
!15580 = !DILocation(line: 749, column: 28, scope: !15578)
!15581 = !DILocation(line: 0, scope: !14938, inlinedAt: !15582)
!15582 = distinct !DILocation(line: 749, column: 3, scope: !15578)
!15583 = !DILocation(line: 188, column: 2, scope: !14948, inlinedAt: !15582)
!15584 = !DILocation(line: 188, column: 2, scope: !14950, inlinedAt: !15582)
!15585 = !DILocation(line: 0, scope: !14948, inlinedAt: !15582)
!15586 = !DILocation(line: 189, column: 7, scope: !14953, inlinedAt: !15582)
!15587 = !DILocation(line: 189, column: 35, scope: !14953, inlinedAt: !15582)
!15588 = !DILocation(line: 189, column: 7, scope: !14954, inlinedAt: !15582)
!15589 = !DILocation(line: 191, column: 21, scope: !14958, inlinedAt: !15582)
!15590 = !DILocation(line: 190, column: 4, scope: !14958, inlinedAt: !15582)
!15591 = !DILocation(line: 192, column: 4, scope: !14958, inlinedAt: !15582)
!15592 = distinct !{!15592, !15583, !15593}
!15593 = !DILocation(line: 194, column: 2, scope: !14948, inlinedAt: !15582)
!15594 = !DILocation(line: 196, column: 37, scope: !14938, inlinedAt: !15582)
!15595 = !DILocation(line: 196, column: 2, scope: !14938, inlinedAt: !15582)
!15596 = !DILocation(line: 197, column: 1, scope: !14938, inlinedAt: !15582)
!15597 = !DILocation(line: 751, column: 1, scope: !15565)
!15598 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2478, file: !2478, line: 753, type: !15599, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15601)
!15599 = !DISubroutineType(types: !15600)
!15600 = !{null, !2373, !15529}
!15601 = !{!15602, !15603}
!15602 = !DILocalVariable(name: "thread", arg: 1, scope: !15598, file: !2478, line: 753, type: !2373)
!15603 = !DILocalVariable(name: "timeout", arg: 2, scope: !15598, file: !2478, line: 753, type: !15529)
!15604 = !DILocation(line: 0, scope: !15598)
!15605 = !DILocation(line: 755, column: 7, scope: !15606)
!15606 = distinct !DILexicalBlock(scope: !15598, file: !2478, line: 755, column: 6)
!15607 = !DILocation(line: 755, column: 6, scope: !15598)
!15608 = !DILocation(line: 756, column: 3, scope: !15609)
!15609 = distinct !DILexicalBlock(scope: !15606, file: !2478, line: 755, column: 41)
!15610 = !DILocation(line: 757, column: 2, scope: !15609)
!15611 = !DILocation(line: 758, column: 1, scope: !15598)
!15612 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14140, file: !14140, line: 47, type: !15599, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15613)
!15613 = !{!15614, !15615}
!15614 = !DILocalVariable(name: "thread", arg: 1, scope: !15612, file: !14140, line: 47, type: !2373)
!15615 = !DILocalVariable(name: "ticks", arg: 2, scope: !15612, file: !14140, line: 47, type: !15529)
!15616 = !DILocation(line: 0, scope: !15612)
!15617 = !DILocation(line: 49, column: 30, scope: !15612)
!15618 = !DILocation(line: 49, column: 2, scope: !15612)
!15619 = !DILocation(line: 50, column: 1, scope: !15612)
!15620 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2478, file: !2478, line: 795, type: !2430, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15621)
!15621 = !{!15622, !15623, !15624, !15626, !15627}
!15622 = !DILocalVariable(name: "timeout", arg: 1, scope: !15620, file: !2478, line: 795, type: !2432)
!15623 = !DILocalVariable(name: "thread", scope: !15620, file: !2478, line: 797, type: !2373)
!15624 = !DILocalVariable(name: "__i", scope: !15625, file: !2478, line: 800, type: !14730)
!15625 = distinct !DILexicalBlock(scope: !15620, file: !2478, line: 800, column: 2)
!15626 = !DILocalVariable(name: "__key", scope: !15625, file: !2478, line: 800, type: !14730)
!15627 = !DILocalVariable(name: "killed", scope: !15628, file: !2478, line: 801, type: !166)
!15628 = distinct !DILexicalBlock(scope: !15629, file: !2478, line: 800, column: 26)
!15629 = distinct !DILexicalBlock(scope: !15625, file: !2478, line: 800, column: 2)
!15630 = !DILocation(line: 0, scope: !15620)
!15631 = !DILocation(line: 797, column: 28, scope: !15620)
!15632 = !DILocation(line: 0, scope: !15625)
!15633 = !DILocation(line: 0, scope: !14738, inlinedAt: !15634)
!15634 = distinct !DILocation(line: 800, column: 2, scope: !15625)
!15635 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15636)
!15636 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !15634)
!15637 = !DILocation(line: 0, scope: !14747, inlinedAt: !15636)
!15638 = !DILocation(line: 801, column: 27, scope: !15628)
!15639 = !DILocation(line: 801, column: 32, scope: !15628)
!15640 = !DILocation(line: 801, column: 61, scope: !15628)
!15641 = !DILocation(line: 0, scope: !15628)
!15642 = !DILocation(line: 804, column: 7, scope: !15628)
!15643 = !DILocation(line: 805, column: 21, scope: !15644)
!15644 = distinct !DILexicalBlock(scope: !15645, file: !2478, line: 805, column: 8)
!15645 = distinct !DILexicalBlock(scope: !15646, file: !2478, line: 804, column: 16)
!15646 = distinct !DILexicalBlock(scope: !15628, file: !2478, line: 804, column: 7)
!15647 = !DILocation(line: 805, column: 31, scope: !15644)
!15648 = !DILocation(line: 805, column: 8, scope: !15645)
!15649 = !DILocation(line: 806, column: 5, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !15644, file: !2478, line: 805, column: 40)
!15651 = !DILocation(line: 807, column: 4, scope: !15650)
!15652 = !DILocation(line: 808, column: 4, scope: !15645)
!15653 = !DILocation(line: 809, column: 4, scope: !15645)
!15654 = !DILocation(line: 810, column: 4, scope: !15645)
!15655 = !DILocation(line: 811, column: 3, scope: !15645)
!15656 = !DILocation(line: 0, scope: !14765, inlinedAt: !15657)
!15657 = distinct !DILocation(line: 800, column: 2, scope: !15629)
!15658 = !DILocation(line: 0, scope: !14773, inlinedAt: !15659)
!15659 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !15657)
!15660 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15659)
!15661 = !DILocation(line: 813, column: 1, scope: !15620)
!15662 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2478, file: !2478, line: 779, type: !14696, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15663)
!15663 = !{!15664}
!15664 = !DILocalVariable(name: "thread", arg: 1, scope: !15662, file: !2478, line: 779, type: !2373)
!15665 = !DILocation(line: 0, scope: !15662)
!15666 = !DILocation(line: 781, column: 2, scope: !15662)
!15667 = !DILocation(line: 782, column: 2, scope: !15662)
!15668 = !DILocation(line: 783, column: 15, scope: !15662)
!15669 = !DILocation(line: 783, column: 25, scope: !15662)
!15670 = !DILocation(line: 784, column: 1, scope: !15662)
!15671 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13746, file: !13746, line: 165, type: !14696, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15672)
!15672 = !{!15673}
!15673 = !DILocalVariable(name: "thread", arg: 1, scope: !15671, file: !13746, line: 165, type: !2373)
!15674 = !DILocation(line: 0, scope: !15671)
!15675 = !DILocation(line: 167, column: 15, scope: !15671)
!15676 = !DILocation(line: 167, column: 28, scope: !15671)
!15677 = !DILocation(line: 168, column: 1, scope: !15671)
!15678 = distinct !DISubprogram(name: "unready_thread", scope: !2478, file: !2478, line: 731, type: !14696, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15679)
!15679 = !{!15680}
!15680 = !DILocalVariable(name: "thread", arg: 1, scope: !15678, file: !2478, line: 731, type: !2373)
!15681 = !DILocation(line: 0, scope: !15678)
!15682 = !DILocation(line: 733, column: 6, scope: !15683)
!15683 = distinct !DILexicalBlock(scope: !15678, file: !2478, line: 733, column: 6)
!15684 = !DILocation(line: 733, column: 6, scope: !15678)
!15685 = !DILocation(line: 0, scope: !14907, inlinedAt: !15686)
!15686 = distinct !DILocation(line: 734, column: 3, scope: !15687)
!15687 = distinct !DILexicalBlock(scope: !15683, file: !2478, line: 733, column: 34)
!15688 = !DILocation(line: 266, column: 15, scope: !14907, inlinedAt: !15686)
!15689 = !DILocation(line: 266, column: 28, scope: !14907, inlinedAt: !15686)
!15690 = !DILocation(line: 0, scope: !14915, inlinedAt: !15691)
!15691 = distinct !DILocation(line: 268, column: 3, scope: !14919, inlinedAt: !15686)
!15692 = !DILocation(line: 234, column: 2, scope: !14915, inlinedAt: !15691)
!15693 = !DILocation(line: 735, column: 2, scope: !15687)
!15694 = !DILocation(line: 736, column: 25, scope: !15678)
!15695 = !DILocation(line: 736, column: 22, scope: !15678)
!15696 = !DILocation(line: 736, column: 2, scope: !15678)
!15697 = !DILocation(line: 737, column: 1, scope: !15678)
!15698 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13746, file: !13746, line: 160, type: !14696, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15699)
!15699 = !{!15700}
!15700 = !DILocalVariable(name: "thread", arg: 1, scope: !15698, file: !13746, line: 160, type: !2373)
!15701 = !DILocation(line: 0, scope: !15698)
!15702 = !DILocation(line: 162, column: 15, scope: !15698)
!15703 = !DILocation(line: 162, column: 28, scope: !15698)
!15704 = !DILocation(line: 163, column: 1, scope: !15698)
!15705 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2478, file: !2478, line: 786, type: !14696, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15706)
!15706 = !{!15707, !15708, !15710}
!15707 = !DILocalVariable(name: "thread", arg: 1, scope: !15705, file: !2478, line: 786, type: !2373)
!15708 = !DILocalVariable(name: "__i", scope: !15709, file: !2478, line: 788, type: !14730)
!15709 = distinct !DILexicalBlock(scope: !15705, file: !2478, line: 788, column: 2)
!15710 = !DILocalVariable(name: "__key", scope: !15709, file: !2478, line: 788, type: !14730)
!15711 = !DILocation(line: 0, scope: !15705)
!15712 = !DILocation(line: 0, scope: !15709)
!15713 = !DILocation(line: 0, scope: !14738, inlinedAt: !15714)
!15714 = distinct !DILocation(line: 788, column: 2, scope: !15709)
!15715 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15716)
!15716 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !15714)
!15717 = !DILocation(line: 0, scope: !14747, inlinedAt: !15716)
!15718 = !DILocation(line: 789, column: 3, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15720, file: !2478, line: 788, column: 26)
!15720 = distinct !DILexicalBlock(scope: !15709, file: !2478, line: 788, column: 2)
!15721 = !DILocation(line: 0, scope: !14765, inlinedAt: !15722)
!15722 = distinct !DILocation(line: 788, column: 2, scope: !15720)
!15723 = !DILocation(line: 0, scope: !14773, inlinedAt: !15724)
!15724 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !15722)
!15725 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15724)
!15726 = !DILocation(line: 791, column: 1, scope: !15705)
!15727 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2478, file: !2478, line: 816, type: !15728, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15730)
!15728 = !DISubroutineType(types: !15729)
!15729 = !{!103, !132, !2404, !15529}
!15730 = !{!15731, !15732, !15733, !15734, !15735, !15737}
!15731 = !DILocalVariable(name: "key", arg: 1, scope: !15727, file: !2478, line: 816, type: !132)
!15732 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15727, file: !2478, line: 816, type: !2404)
!15733 = !DILocalVariable(name: "timeout", arg: 3, scope: !15727, file: !2478, line: 816, type: !15529)
!15734 = !DILocalVariable(name: "ret", scope: !15727, file: !2478, line: 828, type: !103)
!15735 = !DILocalVariable(name: "__i", scope: !15736, file: !2478, line: 829, type: !14730)
!15736 = distinct !DILexicalBlock(scope: !15727, file: !2478, line: 829, column: 2)
!15737 = !DILocalVariable(name: "__key", scope: !15736, file: !2478, line: 829, type: !14730)
!15738 = !DILocation(line: 0, scope: !15727)
!15739 = !DILocation(line: 823, column: 14, scope: !15727)
!15740 = !DILocation(line: 823, column: 2, scope: !15727)
!15741 = !DILocation(line: 826, column: 20, scope: !15727)
!15742 = !DILocation(line: 826, column: 18, scope: !15727)
!15743 = !DILocation(line: 828, column: 12, scope: !15727)
!15744 = !DILocation(line: 0, scope: !15736)
!15745 = !DILocation(line: 0, scope: !14738, inlinedAt: !15746)
!15746 = distinct !DILocation(line: 829, column: 2, scope: !15736)
!15747 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15748)
!15748 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !15746)
!15749 = !DILocation(line: 0, scope: !14747, inlinedAt: !15748)
!15750 = !DILocation(line: 830, column: 7, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15752, file: !2478, line: 830, column: 7)
!15752 = distinct !DILexicalBlock(scope: !15753, file: !2478, line: 829, column: 26)
!15753 = distinct !DILexicalBlock(scope: !15736, file: !2478, line: 829, column: 2)
!15754 = !DILocation(line: 830, column: 26, scope: !15751)
!15755 = !DILocation(line: 830, column: 23, scope: !15751)
!15756 = !DILocation(line: 830, column: 7, scope: !15752)
!15757 = !DILocation(line: 831, column: 20, scope: !15758)
!15758 = distinct !DILexicalBlock(scope: !15751, file: !2478, line: 830, column: 36)
!15759 = !DILocation(line: 832, column: 3, scope: !15758)
!15760 = !DILocation(line: 0, scope: !14765, inlinedAt: !15761)
!15761 = distinct !DILocation(line: 829, column: 2, scope: !15753)
!15762 = !DILocation(line: 0, scope: !14773, inlinedAt: !15763)
!15763 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !15761)
!15764 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15763)
!15765 = !DILocation(line: 834, column: 2, scope: !15727)
!15766 = distinct !DISubprogram(name: "z_pend_curr", scope: !2478, file: !2478, line: 840, type: !15767, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15769)
!15767 = !DISubroutineType(types: !15768)
!15768 = !{!103, !14741, !14730, !2404, !15529}
!15769 = !{!15770, !15771, !15772, !15773}
!15770 = !DILocalVariable(name: "lock", arg: 1, scope: !15766, file: !2478, line: 840, type: !14741)
!15771 = !DILocalVariable(name: "key", arg: 2, scope: !15766, file: !2478, line: 840, type: !14730)
!15772 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15766, file: !2478, line: 841, type: !2404)
!15773 = !DILocalVariable(name: "timeout", arg: 4, scope: !15766, file: !2478, line: 841, type: !15529)
!15774 = !DILocation(line: 0, scope: !15766)
!15775 = !DILocation(line: 844, column: 20, scope: !15766)
!15776 = !DILocation(line: 844, column: 18, scope: !15766)
!15777 = !DILocation(line: 0, scope: !14738, inlinedAt: !15778)
!15778 = distinct !DILocation(line: 856, column: 9, scope: !15766)
!15779 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15780)
!15780 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !15778)
!15781 = !DILocation(line: 0, scope: !14747, inlinedAt: !15780)
!15782 = !DILocation(line: 857, column: 14, scope: !15766)
!15783 = !DILocation(line: 857, column: 2, scope: !15766)
!15784 = !DILocation(line: 0, scope: !15349, inlinedAt: !15785)
!15785 = distinct !DILocation(line: 859, column: 9, scope: !15766)
!15786 = !DILocation(line: 196, column: 9, scope: !15349, inlinedAt: !15785)
!15787 = !DILocation(line: 859, column: 2, scope: !15766)
!15788 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2478, file: !2478, line: 862, type: !15789, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15791)
!15789 = !DISubroutineType(types: !15790)
!15790 = !{!2373, !2404}
!15791 = !{!15792, !15793, !15794, !15796}
!15792 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15788, file: !2478, line: 862, type: !2404)
!15793 = !DILocalVariable(name: "thread", scope: !15788, file: !2478, line: 864, type: !2373)
!15794 = !DILocalVariable(name: "__i", scope: !15795, file: !2478, line: 866, type: !14730)
!15795 = distinct !DILexicalBlock(scope: !15788, file: !2478, line: 866, column: 2)
!15796 = !DILocalVariable(name: "__key", scope: !15795, file: !2478, line: 866, type: !14730)
!15797 = !DILocation(line: 0, scope: !15788)
!15798 = !DILocation(line: 0, scope: !15795)
!15799 = !DILocation(line: 0, scope: !14738, inlinedAt: !15800)
!15800 = distinct !DILocation(line: 866, column: 2, scope: !15795)
!15801 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15802)
!15802 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !15800)
!15803 = !DILocation(line: 0, scope: !14747, inlinedAt: !15802)
!15804 = !DILocation(line: 867, column: 12, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15806, file: !2478, line: 866, column: 26)
!15806 = distinct !DILexicalBlock(scope: !15795, file: !2478, line: 866, column: 2)
!15807 = !DILocation(line: 869, column: 14, scope: !15808)
!15808 = distinct !DILexicalBlock(scope: !15805, file: !2478, line: 869, column: 7)
!15809 = !DILocation(line: 869, column: 7, scope: !15805)
!15810 = !DILocation(line: 870, column: 4, scope: !15811)
!15811 = distinct !DILexicalBlock(scope: !15808, file: !2478, line: 869, column: 23)
!15812 = !DILocation(line: 871, column: 3, scope: !15811)
!15813 = !DILocation(line: 0, scope: !14765, inlinedAt: !15814)
!15814 = distinct !DILocation(line: 866, column: 2, scope: !15806)
!15815 = !DILocation(line: 0, scope: !14773, inlinedAt: !15816)
!15816 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !15814)
!15817 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15816)
!15818 = !DILocation(line: 874, column: 2, scope: !15788)
!15819 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2478, file: !2478, line: 877, type: !15789, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15820)
!15820 = !{!15821, !15822, !15823, !15825}
!15821 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15819, file: !2478, line: 877, type: !2404)
!15822 = !DILocalVariable(name: "thread", scope: !15819, file: !2478, line: 879, type: !2373)
!15823 = !DILocalVariable(name: "__i", scope: !15824, file: !2478, line: 881, type: !14730)
!15824 = distinct !DILexicalBlock(scope: !15819, file: !2478, line: 881, column: 2)
!15825 = !DILocalVariable(name: "__key", scope: !15824, file: !2478, line: 881, type: !14730)
!15826 = !DILocation(line: 0, scope: !15819)
!15827 = !DILocation(line: 0, scope: !15824)
!15828 = !DILocation(line: 0, scope: !14738, inlinedAt: !15829)
!15829 = distinct !DILocation(line: 881, column: 2, scope: !15824)
!15830 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15831)
!15831 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !15829)
!15832 = !DILocation(line: 0, scope: !14747, inlinedAt: !15831)
!15833 = !DILocation(line: 882, column: 12, scope: !15834)
!15834 = distinct !DILexicalBlock(scope: !15835, file: !2478, line: 881, column: 26)
!15835 = distinct !DILexicalBlock(scope: !15824, file: !2478, line: 881, column: 2)
!15836 = !DILocation(line: 884, column: 14, scope: !15837)
!15837 = distinct !DILexicalBlock(scope: !15834, file: !2478, line: 884, column: 7)
!15838 = !DILocation(line: 884, column: 7, scope: !15834)
!15839 = !DILocation(line: 885, column: 4, scope: !15840)
!15840 = distinct !DILexicalBlock(scope: !15837, file: !2478, line: 884, column: 23)
!15841 = !DILocation(line: 886, column: 10, scope: !15840)
!15842 = !DILocation(line: 887, column: 3, scope: !15840)
!15843 = !DILocation(line: 0, scope: !14765, inlinedAt: !15844)
!15844 = distinct !DILocation(line: 881, column: 2, scope: !15835)
!15845 = !DILocation(line: 0, scope: !14773, inlinedAt: !15846)
!15846 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !15844)
!15847 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15846)
!15848 = !DILocation(line: 890, column: 2, scope: !15819)
!15849 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2478, file: !2478, line: 893, type: !14696, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15850)
!15850 = !{!15851}
!15851 = !DILocalVariable(name: "thread", arg: 1, scope: !15849, file: !2478, line: 893, type: !2373)
!15852 = !DILocation(line: 0, scope: !15849)
!15853 = !DILocation(line: 0, scope: !15705, inlinedAt: !15854)
!15854 = distinct !DILocation(line: 895, column: 2, scope: !15849)
!15855 = !DILocation(line: 0, scope: !15709, inlinedAt: !15854)
!15856 = !DILocation(line: 0, scope: !14738, inlinedAt: !15857)
!15857 = distinct !DILocation(line: 788, column: 2, scope: !15709, inlinedAt: !15854)
!15858 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15859)
!15859 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !15857)
!15860 = !DILocation(line: 0, scope: !14747, inlinedAt: !15859)
!15861 = !DILocation(line: 789, column: 3, scope: !15719, inlinedAt: !15854)
!15862 = !DILocation(line: 0, scope: !14765, inlinedAt: !15863)
!15863 = distinct !DILocation(line: 788, column: 2, scope: !15720, inlinedAt: !15854)
!15864 = !DILocation(line: 0, scope: !14773, inlinedAt: !15865)
!15865 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !15863)
!15866 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15865)
!15867 = !DILocation(line: 896, column: 8, scope: !15849)
!15868 = !DILocation(line: 897, column: 1, scope: !15849)
!15869 = distinct !DISubprogram(name: "z_set_prio", scope: !2478, file: !2478, line: 902, type: !15058, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15870)
!15870 = !{!15871, !15872, !15873, !15874, !15876}
!15871 = !DILocalVariable(name: "thread", arg: 1, scope: !15869, file: !2478, line: 902, type: !2373)
!15872 = !DILocalVariable(name: "prio", arg: 2, scope: !15869, file: !2478, line: 902, type: !103)
!15873 = !DILocalVariable(name: "need_sched", scope: !15869, file: !2478, line: 904, type: !166)
!15874 = !DILocalVariable(name: "__i", scope: !15875, file: !2478, line: 906, type: !14730)
!15875 = distinct !DILexicalBlock(scope: !15869, file: !2478, line: 906, column: 2)
!15876 = !DILocalVariable(name: "__key", scope: !15875, file: !2478, line: 906, type: !14730)
!15877 = !DILocation(line: 0, scope: !15869)
!15878 = !DILocation(line: 0, scope: !15875)
!15879 = !DILocation(line: 0, scope: !14738, inlinedAt: !15880)
!15880 = distinct !DILocation(line: 906, column: 2, scope: !15875)
!15881 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15882)
!15882 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !15880)
!15883 = !DILocation(line: 0, scope: !14747, inlinedAt: !15882)
!15884 = !DILocation(line: 907, column: 16, scope: !15885)
!15885 = distinct !DILexicalBlock(scope: !15886, file: !2478, line: 906, column: 26)
!15886 = distinct !DILexicalBlock(scope: !15875, file: !2478, line: 906, column: 2)
!15887 = !DILocation(line: 909, column: 7, scope: !15885)
!15888 = !DILocation(line: 0, scope: !14907, inlinedAt: !15889)
!15889 = distinct !DILocation(line: 912, column: 5, scope: !15890)
!15890 = distinct !DILexicalBlock(scope: !15891, file: !2478, line: 911, column: 63)
!15891 = distinct !DILexicalBlock(scope: !15892, file: !2478, line: 911, column: 8)
!15892 = distinct !DILexicalBlock(scope: !15893, file: !2478, line: 909, column: 19)
!15893 = distinct !DILexicalBlock(scope: !15885, file: !2478, line: 909, column: 7)
!15894 = !DILocation(line: 266, column: 28, scope: !14907, inlinedAt: !15889)
!15895 = !DILocation(line: 0, scope: !14915, inlinedAt: !15896)
!15896 = distinct !DILocation(line: 268, column: 3, scope: !14919, inlinedAt: !15889)
!15897 = !DILocation(line: 234, column: 2, scope: !14915, inlinedAt: !15896)
!15898 = !DILocation(line: 913, column: 23, scope: !15890)
!15899 = !DILocation(line: 0, scope: !14924, inlinedAt: !15900)
!15900 = distinct !DILocation(line: 914, column: 5, scope: !15890)
!15901 = !DILocation(line: 252, column: 28, scope: !14924, inlinedAt: !15900)
!15902 = !DILocation(line: 0, scope: !14931, inlinedAt: !15903)
!15903 = distinct !DILocation(line: 254, column: 3, scope: !14935, inlinedAt: !15900)
!15904 = !DILocation(line: 0, scope: !14938, inlinedAt: !15905)
!15905 = distinct !DILocation(line: 229, column: 2, scope: !14931, inlinedAt: !15903)
!15906 = !DILocation(line: 188, column: 2, scope: !14948, inlinedAt: !15905)
!15907 = !DILocation(line: 188, column: 2, scope: !14950, inlinedAt: !15905)
!15908 = !DILocation(line: 0, scope: !14948, inlinedAt: !15905)
!15909 = !DILocation(line: 189, column: 7, scope: !14953, inlinedAt: !15905)
!15910 = !DILocation(line: 189, column: 35, scope: !14953, inlinedAt: !15905)
!15911 = !DILocation(line: 189, column: 7, scope: !14954, inlinedAt: !15905)
!15912 = !DILocation(line: 190, column: 4, scope: !14958, inlinedAt: !15905)
!15913 = !DILocation(line: 192, column: 4, scope: !14958, inlinedAt: !15905)
!15914 = distinct !{!15914, !15906, !15915}
!15915 = !DILocation(line: 194, column: 2, scope: !14948, inlinedAt: !15905)
!15916 = !DILocation(line: 196, column: 2, scope: !14938, inlinedAt: !15905)
!15917 = !DILocation(line: 197, column: 1, scope: !14938, inlinedAt: !15905)
!15918 = !DILocation(line: 918, column: 4, scope: !15892)
!15919 = !DILocation(line: 919, column: 3, scope: !15892)
!15920 = !DILocation(line: 920, column: 22, scope: !15921)
!15921 = distinct !DILexicalBlock(scope: !15893, file: !2478, line: 919, column: 10)
!15922 = !DILocation(line: 0, scope: !14765, inlinedAt: !15923)
!15923 = distinct !DILocation(line: 906, column: 2, scope: !15886)
!15924 = !DILocation(line: 0, scope: !14773, inlinedAt: !15925)
!15925 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !15923)
!15926 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15925)
!15927 = !DILocation(line: 926, column: 2, scope: !15869)
!15928 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2478, file: !2478, line: 929, type: !15929, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15931)
!15929 = !DISubroutineType(types: !15930)
!15930 = !{null, !2373, !103}
!15931 = !{!15932, !15933, !15934}
!15932 = !DILocalVariable(name: "thread", arg: 1, scope: !15928, file: !2478, line: 929, type: !2373)
!15933 = !DILocalVariable(name: "prio", arg: 2, scope: !15928, file: !2478, line: 929, type: !103)
!15934 = !DILocalVariable(name: "need_sched", scope: !15928, file: !2478, line: 931, type: !166)
!15935 = !DILocation(line: 0, scope: !15928)
!15936 = !DILocation(line: 931, column: 20, scope: !15928)
!15937 = !DILocation(line: 935, column: 17, scope: !15938)
!15938 = distinct !DILexicalBlock(scope: !15928, file: !2478, line: 935, column: 6)
!15939 = !DILocation(line: 935, column: 20, scope: !15938)
!15940 = !DILocation(line: 935, column: 35, scope: !15938)
!15941 = !DILocation(line: 935, column: 48, scope: !15938)
!15942 = !DILocation(line: 935, column: 6, scope: !15928)
!15943 = !DILocation(line: 936, column: 3, scope: !15944)
!15944 = distinct !DILexicalBlock(scope: !15938, file: !2478, line: 935, column: 55)
!15945 = !DILocation(line: 937, column: 2, scope: !15944)
!15946 = !DILocation(line: 938, column: 1, scope: !15928)
!15947 = distinct !DISubprogram(name: "k_sched_lock", scope: !2478, file: !2478, line: 987, type: !3249, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15948)
!15948 = !{!15949, !15951}
!15949 = !DILocalVariable(name: "__i", scope: !15950, file: !2478, line: 989, type: !14730)
!15950 = distinct !DILexicalBlock(scope: !15947, file: !2478, line: 989, column: 2)
!15951 = !DILocalVariable(name: "__key", scope: !15950, file: !2478, line: 989, type: !14730)
!15952 = !DILocation(line: 0, scope: !15950)
!15953 = !DILocation(line: 0, scope: !14738, inlinedAt: !15954)
!15954 = distinct !DILocation(line: 989, column: 2, scope: !15950)
!15955 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15956)
!15956 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !15954)
!15957 = !DILocation(line: 0, scope: !14747, inlinedAt: !15956)
!15958 = !DILocation(line: 992, column: 3, scope: !15959)
!15959 = distinct !DILexicalBlock(scope: !15960, file: !2478, line: 989, column: 26)
!15960 = distinct !DILexicalBlock(scope: !15950, file: !2478, line: 989, column: 2)
!15961 = !DILocation(line: 0, scope: !14765, inlinedAt: !15962)
!15962 = distinct !DILocation(line: 989, column: 2, scope: !15960)
!15963 = !DILocation(line: 0, scope: !14773, inlinedAt: !15964)
!15964 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !15962)
!15965 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15964)
!15966 = !DILocation(line: 994, column: 1, scope: !15947)
!15967 = distinct !DISubprogram(name: "z_sched_lock", scope: !13746, file: !13746, line: 251, type: !3249, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !473)
!15968 = !DILocation(line: 256, column: 4, scope: !15967)
!15969 = !DILocation(line: 256, column: 19, scope: !15967)
!15970 = !DILocation(line: 256, column: 2, scope: !15967)
!15971 = !DILocation(line: 258, column: 2, scope: !15972)
!15972 = distinct !DILexicalBlock(scope: !15967, file: !13746, line: 258, column: 2)
!15973 = !{i64 2154866269}
!15974 = !DILocation(line: 259, column: 1, scope: !15967)
!15975 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2478, file: !2478, line: 996, type: !3249, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !15976)
!15976 = !{!15977, !15979}
!15977 = !DILocalVariable(name: "__i", scope: !15978, file: !2478, line: 998, type: !14730)
!15978 = distinct !DILexicalBlock(scope: !15975, file: !2478, line: 998, column: 2)
!15979 = !DILocalVariable(name: "__key", scope: !15978, file: !2478, line: 998, type: !14730)
!15980 = !DILocation(line: 0, scope: !15978)
!15981 = !DILocation(line: 0, scope: !14738, inlinedAt: !15982)
!15982 = distinct !DILocation(line: 998, column: 2, scope: !15978)
!15983 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !15984)
!15984 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !15982)
!15985 = !DILocation(line: 0, scope: !14747, inlinedAt: !15984)
!15986 = !DILocation(line: 1002, column: 5, scope: !15987)
!15987 = distinct !DILexicalBlock(scope: !15988, file: !2478, line: 998, column: 26)
!15988 = distinct !DILexicalBlock(scope: !15978, file: !2478, line: 998, column: 2)
!15989 = !DILocation(line: 1002, column: 20, scope: !15987)
!15990 = !DILocation(line: 1002, column: 3, scope: !15987)
!15991 = !DILocation(line: 1003, column: 3, scope: !15987)
!15992 = !DILocation(line: 0, scope: !14765, inlinedAt: !15993)
!15993 = distinct !DILocation(line: 998, column: 2, scope: !15988)
!15994 = !DILocation(line: 0, scope: !14773, inlinedAt: !15995)
!15995 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !15993)
!15996 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !15995)
!15997 = !DILocation(line: 1011, column: 2, scope: !15975)
!15998 = !DILocation(line: 1012, column: 1, scope: !15975)
!15999 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2478, file: !2478, line: 1014, type: !15046, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !473)
!16000 = !DILocation(line: 1028, column: 25, scope: !15999)
!16001 = !DILocation(line: 1028, column: 2, scope: !15999)
!16002 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2478, file: !2478, line: 1155, type: !16003, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16005)
!16003 = !DISubroutineType(types: !16004)
!16004 = !{!166, !2402, !2402}
!16005 = !{!16006, !16007, !16008, !16009, !16010}
!16006 = !DILocalVariable(name: "a", arg: 1, scope: !16002, file: !2478, line: 1155, type: !2402)
!16007 = !DILocalVariable(name: "b", arg: 2, scope: !16002, file: !2478, line: 1155, type: !2402)
!16008 = !DILocalVariable(name: "thread_a", scope: !16002, file: !2478, line: 1157, type: !2373)
!16009 = !DILocalVariable(name: "thread_b", scope: !16002, file: !2478, line: 1157, type: !2373)
!16010 = !DILocalVariable(name: "cmp", scope: !16002, file: !2478, line: 1158, type: !344)
!16011 = !DILocation(line: 0, scope: !16002)
!16012 = !DILocation(line: 1160, column: 13, scope: !16002)
!16013 = !DILocation(line: 1161, column: 13, scope: !16002)
!16014 = !DILocation(line: 1163, column: 8, scope: !16002)
!16015 = !DILocation(line: 1165, column: 10, scope: !16016)
!16016 = distinct !DILexicalBlock(scope: !16002, file: !2478, line: 1165, column: 6)
!16017 = !DILocation(line: 1165, column: 6, scope: !16002)
!16018 = !DILocation(line: 1167, column: 17, scope: !16019)
!16019 = distinct !DILexicalBlock(scope: !16016, file: !2478, line: 1167, column: 13)
!16020 = !DILocation(line: 1167, column: 13, scope: !16016)
!16021 = !DILocation(line: 1170, column: 25, scope: !16022)
!16022 = distinct !DILexicalBlock(scope: !16019, file: !2478, line: 1169, column: 9)
!16023 = !DILocation(line: 1170, column: 52, scope: !16022)
!16024 = !DILocation(line: 1170, column: 35, scope: !16022)
!16025 = !DILocation(line: 1170, column: 3, scope: !16022)
!16026 = !DILocation(line: 0, scope: !16016)
!16027 = !DILocation(line: 1173, column: 1, scope: !16002)
!16028 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2478, file: !2478, line: 1175, type: !16029, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16044)
!16029 = !DISubroutineType(types: !16030)
!16030 = !{null, !16031, !2373}
!16031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16032, size: 32)
!16032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16033, line: 37, size: 128, elements: !16034)
!16033 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16034 = !{!16035, !16043}
!16035 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16032, file: !16033, line: 38, baseType: !16036, size: 96)
!16036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !392, line: 83, size: 96, elements: !16037)
!16037 = !{!16038, !16039, !16042}
!16038 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16036, file: !392, line: 84, baseType: !2402, size: 32)
!16039 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16036, file: !392, line: 85, baseType: !16040, size: 32, offset: 32)
!16040 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !392, line: 81, baseType: !16041)
!16041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16003, size: 32)
!16042 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16036, file: !392, line: 86, baseType: !103, size: 32, offset: 64)
!16043 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16032, file: !16033, line: 39, baseType: !103, size: 32, offset: 96)
!16044 = !{!16045, !16046, !16047, !16048, !16057}
!16045 = !DILocalVariable(name: "pq", arg: 1, scope: !16028, file: !2478, line: 1175, type: !16031)
!16046 = !DILocalVariable(name: "thread", arg: 2, scope: !16028, file: !2478, line: 1175, type: !2373)
!16047 = !DILocalVariable(name: "t", scope: !16028, file: !2478, line: 1177, type: !2373)
!16048 = !DILocalVariable(name: "__f", scope: !16049, file: !2478, line: 1190, type: !16052)
!16049 = distinct !DILexicalBlock(scope: !16050, file: !2478, line: 1190, column: 3)
!16050 = distinct !DILexicalBlock(scope: !16051, file: !2478, line: 1189, column: 27)
!16051 = distinct !DILexicalBlock(scope: !16028, file: !2478, line: 1189, column: 6)
!16052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !392, line: 155, size: 96, elements: !16053)
!16053 = !{!16054, !16055, !16056}
!16054 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16052, file: !392, line: 156, baseType: !2473, size: 32)
!16055 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16052, file: !392, line: 157, baseType: !270, size: 32, offset: 32)
!16056 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16052, file: !392, line: 158, baseType: !344, size: 32, offset: 64)
!16057 = !DILocalVariable(name: "n", scope: !16058, file: !2478, line: 1190, type: !2402)
!16058 = distinct !DILexicalBlock(scope: !16059, file: !2478, line: 1190, column: 3)
!16059 = distinct !DILexicalBlock(scope: !16049, file: !2478, line: 1190, column: 3)
!16060 = !DILocation(line: 0, scope: !16028)
!16061 = !DILocation(line: 1181, column: 31, scope: !16028)
!16062 = !DILocation(line: 1181, column: 45, scope: !16028)
!16063 = !DILocation(line: 1181, column: 15, scope: !16028)
!16064 = !DILocation(line: 1181, column: 25, scope: !16028)
!16065 = !DILocation(line: 1189, column: 11, scope: !16051)
!16066 = !DILocation(line: 1189, column: 7, scope: !16051)
!16067 = !DILocation(line: 1189, column: 6, scope: !16028)
!16068 = !DILocation(line: 1190, column: 3, scope: !16049)
!16069 = !DILocation(line: 1190, column: 3, scope: !16058)
!16070 = !DILocation(line: 0, scope: !16058)
!16071 = !DILocation(line: 1190, column: 3, scope: !16059)
!16072 = !DILocation(line: 1193, column: 2, scope: !16050)
!16073 = !DILocation(line: 1191, column: 42, scope: !16074)
!16074 = distinct !DILexicalBlock(scope: !16059, file: !2478, line: 1190, column: 54)
!16075 = !DILocation(line: 1191, column: 12, scope: !16074)
!16076 = !DILocation(line: 1191, column: 22, scope: !16074)
!16077 = distinct !{!16077, !16068, !16078}
!16078 = !DILocation(line: 1192, column: 3, scope: !16049)
!16079 = !DILocation(line: 1195, column: 17, scope: !16028)
!16080 = !DILocation(line: 1195, column: 37, scope: !16028)
!16081 = !DILocation(line: 1195, column: 2, scope: !16028)
!16082 = !DILocation(line: 1196, column: 1, scope: !16028)
!16083 = !DISubprogram(name: "z_rb_foreach_next", scope: !392, file: !392, line: 176, type: !16084, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!16084 = !DISubroutineType(types: !16085)
!16085 = !{!2402, !16086, !16087}
!16086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16036, size: 32)
!16087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16052, size: 32)
!16088 = !DISubprogram(name: "rb_insert", scope: !392, file: !392, line: 105, type: !16089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!16089 = !DISubroutineType(types: !16090)
!16090 = !{null, !16086, !2402}
!16091 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2478, file: !2478, line: 1198, type: !16029, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16092)
!16092 = !{!16093, !16094}
!16093 = !DILocalVariable(name: "pq", arg: 1, scope: !16091, file: !2478, line: 1198, type: !16031)
!16094 = !DILocalVariable(name: "thread", arg: 2, scope: !16091, file: !2478, line: 1198, type: !2373)
!16095 = !DILocation(line: 0, scope: !16091)
!16096 = !DILocation(line: 1202, column: 17, scope: !16091)
!16097 = !DILocation(line: 1202, column: 37, scope: !16091)
!16098 = !DILocation(line: 1202, column: 2, scope: !16091)
!16099 = !DILocation(line: 1204, column: 16, scope: !16100)
!16100 = distinct !DILexicalBlock(scope: !16091, file: !2478, line: 1204, column: 6)
!16101 = !DILocation(line: 1204, column: 7, scope: !16100)
!16102 = !DILocation(line: 1204, column: 6, scope: !16091)
!16103 = !DILocation(line: 1205, column: 7, scope: !16104)
!16104 = distinct !DILexicalBlock(scope: !16100, file: !2478, line: 1204, column: 22)
!16105 = !DILocation(line: 1205, column: 22, scope: !16104)
!16106 = !DILocation(line: 1206, column: 2, scope: !16104)
!16107 = !DILocation(line: 1207, column: 1, scope: !16091)
!16108 = !DISubprogram(name: "rb_remove", scope: !392, file: !392, line: 110, type: !16089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!16109 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2478, file: !2478, line: 1209, type: !16110, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16112)
!16110 = !DISubroutineType(types: !16111)
!16111 = !{!2373, !16031}
!16112 = !{!16113, !16114, !16115}
!16113 = !DILocalVariable(name: "pq", arg: 1, scope: !16109, file: !2478, line: 1209, type: !16031)
!16114 = !DILocalVariable(name: "thread", scope: !16109, file: !2478, line: 1211, type: !2373)
!16115 = !DILocalVariable(name: "n", scope: !16109, file: !2478, line: 1212, type: !2402)
!16116 = !DILocation(line: 0, scope: !16109)
!16117 = !DILocation(line: 1212, column: 37, scope: !16109)
!16118 = !DILocation(line: 1212, column: 21, scope: !16109)
!16119 = !DILocation(line: 1217, column: 2, scope: !16109)
!16120 = distinct !DISubprogram(name: "rb_get_min", scope: !392, file: !392, line: 115, type: !16121, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16123)
!16121 = !DISubroutineType(types: !16122)
!16122 = !{!2402, !16086}
!16123 = !{!16124}
!16124 = !DILocalVariable(name: "tree", arg: 1, scope: !16120, file: !392, line: 115, type: !16086)
!16125 = !DILocation(line: 0, scope: !16120)
!16126 = !DILocation(line: 117, column: 9, scope: !16120)
!16127 = !DILocation(line: 117, column: 2, scope: !16120)
!16128 = !DISubprogram(name: "z_rb_get_minmax", scope: !392, file: !392, line: 100, type: !16129, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!16129 = !DISubroutineType(types: !16130)
!16130 = !{!2402, !16086, !163}
!16131 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2478, file: !2478, line: 1246, type: !16132, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16142)
!16132 = !DISubroutineType(types: !16133)
!16133 = !{!2373, !16134}
!16134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16135, size: 32)
!16135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16033, line: 53, size: 2080, elements: !16136)
!16136 = !{!16137, !16141}
!16137 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16135, file: !16033, line: 54, baseType: !16138, size: 2048)
!16138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2409, size: 2048, elements: !16139)
!16139 = !{!16140}
!16140 = !DISubrange(count: 32)
!16141 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16135, file: !16033, line: 55, baseType: !32, size: 32, offset: 2048)
!16142 = !{!16143, !16144, !16145, !16146}
!16143 = !DILocalVariable(name: "pq", arg: 1, scope: !16131, file: !2478, line: 1246, type: !16134)
!16144 = !DILocalVariable(name: "thread", scope: !16131, file: !2478, line: 1252, type: !2373)
!16145 = !DILocalVariable(name: "l", scope: !16131, file: !2478, line: 1253, type: !14941)
!16146 = !DILocalVariable(name: "n", scope: !16131, file: !2478, line: 1254, type: !2474)
!16147 = !DILocation(line: 0, scope: !16131)
!16148 = !DILocation(line: 1248, column: 11, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16131, file: !2478, line: 1248, column: 6)
!16150 = !DILocation(line: 1248, column: 7, scope: !16149)
!16151 = !DILocation(line: 1248, column: 6, scope: !16131)
!16152 = !DILocation(line: 1253, column: 31, scope: !16131)
!16153 = !DILocation(line: 1253, column: 20, scope: !16131)
!16154 = !DILocation(line: 1254, column: 19, scope: !16131)
!16155 = !DILocation(line: 1260, column: 1, scope: !16131)
!16156 = distinct !DISubprogram(name: "z_unpend_all", scope: !2478, file: !2478, line: 1262, type: !16157, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16159)
!16157 = !DISubroutineType(types: !16158)
!16158 = !{!103, !2404}
!16159 = !{!16160, !16161, !16162}
!16160 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16156, file: !2478, line: 1262, type: !2404)
!16161 = !DILocalVariable(name: "need_sched", scope: !16156, file: !2478, line: 1264, type: !103)
!16162 = !DILocalVariable(name: "thread", scope: !16156, file: !2478, line: 1265, type: !2373)
!16163 = !DILocation(line: 0, scope: !16156)
!16164 = !DILocation(line: 1267, column: 19, scope: !16156)
!16165 = !DILocation(line: 1267, column: 41, scope: !16156)
!16166 = !DILocation(line: 1267, column: 2, scope: !16156)
!16167 = !DILocation(line: 1268, column: 3, scope: !16168)
!16168 = distinct !DILexicalBlock(scope: !16156, file: !2478, line: 1267, column: 50)
!16169 = !DILocation(line: 1269, column: 3, scope: !16168)
!16170 = distinct !{!16170, !16166, !16171}
!16171 = !DILocation(line: 1271, column: 2, scope: !16156)
!16172 = !DILocation(line: 1273, column: 2, scope: !16156)
!16173 = distinct !DISubprogram(name: "z_waitq_head", scope: !14072, file: !14072, line: 52, type: !15789, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16174)
!16174 = !{!16175}
!16175 = !DILocalVariable(name: "w", arg: 1, scope: !16173, file: !14072, line: 52, type: !2404)
!16176 = !DILocation(line: 0, scope: !16173)
!16177 = !DILocation(line: 54, column: 52, scope: !16173)
!16178 = !DILocation(line: 54, column: 28, scope: !16173)
!16179 = !DILocation(line: 54, column: 9, scope: !16173)
!16180 = !DILocation(line: 54, column: 2, scope: !16173)
!16181 = distinct !DISubprogram(name: "init_ready_q", scope: !2478, file: !2478, line: 1276, type: !16182, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16189)
!16182 = !DISubroutineType(types: !16183)
!16183 = !{null, !16184}
!16184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16185, size: 32)
!16185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !316, line: 83, size: 96, elements: !16186)
!16186 = !{!16187, !16188}
!16187 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16185, file: !316, line: 86, baseType: !2373, size: 32)
!16188 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16185, file: !316, line: 90, baseType: !2409, size: 64, offset: 32)
!16189 = !{!16190}
!16190 = !DILocalVariable(name: "rq", arg: 1, scope: !16181, file: !2478, line: 1276, type: !16184)
!16191 = !DILocation(line: 0, scope: !16181)
!16192 = !DILocation(line: 1289, column: 22, scope: !16181)
!16193 = !DILocation(line: 1289, column: 2, scope: !16181)
!16194 = !DILocation(line: 1291, column: 1, scope: !16181)
!16195 = distinct !DISubprogram(name: "sys_dlist_init", scope: !321, file: !321, line: 197, type: !16196, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16198)
!16196 = !DISubroutineType(types: !16197)
!16197 = !{null, !14941}
!16198 = !{!16199}
!16199 = !DILocalVariable(name: "list", arg: 1, scope: !16195, file: !321, line: 197, type: !14941)
!16200 = !DILocation(line: 0, scope: !16195)
!16201 = !DILocation(line: 199, column: 8, scope: !16195)
!16202 = !DILocation(line: 199, column: 13, scope: !16195)
!16203 = !DILocation(line: 200, column: 8, scope: !16195)
!16204 = !DILocation(line: 200, column: 13, scope: !16195)
!16205 = !DILocation(line: 201, column: 1, scope: !16195)
!16206 = distinct !DISubprogram(name: "z_sched_init", scope: !2478, file: !2478, line: 1293, type: !3249, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !473)
!16207 = !DILocation(line: 1302, column: 2, scope: !16206)
!16208 = !DILocation(line: 1306, column: 2, scope: !16206)
!16209 = !DILocation(line: 1309, column: 1, scope: !16206)
!16210 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2478, file: !2478, line: 1311, type: !16211, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16214)
!16211 = !DISubroutineType(types: !16212)
!16212 = !{!103, !16213}
!16213 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !2373)
!16214 = !{!16215}
!16215 = !DILocalVariable(name: "thread", arg: 1, scope: !16210, file: !2478, line: 1311, type: !16213)
!16216 = !DILocation(line: 0, scope: !16210)
!16217 = !DILocation(line: 1313, column: 22, scope: !16210)
!16218 = !DILocation(line: 1313, column: 9, scope: !16210)
!16219 = !DILocation(line: 1313, column: 2, scope: !16210)
!16220 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2478, file: !2478, line: 1325, type: !16221, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16223)
!16221 = !DISubroutineType(types: !16222)
!16222 = !{null, !16213, !103}
!16223 = !{!16224, !16225, !16226}
!16224 = !DILocalVariable(name: "thread", arg: 1, scope: !16220, file: !2478, line: 1325, type: !16213)
!16225 = !DILocalVariable(name: "prio", arg: 2, scope: !16220, file: !2478, line: 1325, type: !103)
!16226 = !DILocalVariable(name: "th", scope: !16220, file: !2478, line: 1334, type: !2373)
!16227 = !DILocation(line: 0, scope: !16220)
!16228 = !DILocation(line: 1336, column: 2, scope: !16220)
!16229 = !DILocation(line: 1337, column: 1, scope: !16220)
!16230 = distinct !DISubprogram(name: "k_can_yield", scope: !2478, file: !2478, line: 1384, type: !7639, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !473)
!16231 = !DILocation(line: 1386, column: 11, scope: !16230)
!16232 = !DILocation(line: 1386, column: 29, scope: !16230)
!16233 = !DILocation(line: 1386, column: 32, scope: !16230)
!16234 = !DILocation(line: 1386, column: 46, scope: !16230)
!16235 = !DILocation(line: 1387, column: 28, scope: !16230)
!16236 = !DILocation(line: 1387, column: 4, scope: !16230)
!16237 = !DILocation(line: 1386, column: 2, scope: !16230)
!16238 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !312, file: !312, line: 989, type: !7639, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !473)
!16239 = !DILocation(line: 993, column: 10, scope: !16238)
!16240 = !DILocation(line: 993, column: 2, scope: !16238)
!16241 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2478, file: !2478, line: 1390, type: !3249, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16242)
!16242 = !{!16243}
!16243 = !DILocalVariable(name: "key", scope: !16241, file: !2478, line: 1396, type: !14730)
!16244 = !DILocation(line: 0, scope: !14738, inlinedAt: !16245)
!16245 = distinct !DILocation(line: 1396, column: 25, scope: !16241)
!16246 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !16247)
!16247 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !16245)
!16248 = !DILocation(line: 0, scope: !14747, inlinedAt: !16247)
!16249 = !DILocation(line: 0, scope: !16241)
!16250 = !DILocation(line: 1400, column: 18, scope: !16251)
!16251 = distinct !DILexicalBlock(scope: !16252, file: !2478, line: 1399, column: 36)
!16252 = distinct !DILexicalBlock(scope: !16241, file: !2478, line: 1398, column: 6)
!16253 = !DILocation(line: 0, scope: !14907, inlinedAt: !16254)
!16254 = distinct !DILocation(line: 1400, column: 3, scope: !16251)
!16255 = !DILocation(line: 266, column: 15, scope: !14907, inlinedAt: !16254)
!16256 = !DILocation(line: 266, column: 28, scope: !14907, inlinedAt: !16254)
!16257 = !DILocation(line: 0, scope: !14915, inlinedAt: !16258)
!16258 = distinct !DILocation(line: 268, column: 3, scope: !14919, inlinedAt: !16254)
!16259 = !DILocation(line: 234, column: 2, scope: !14915, inlinedAt: !16258)
!16260 = !DILocation(line: 1402, column: 15, scope: !16241)
!16261 = !DILocation(line: 0, scope: !14924, inlinedAt: !16262)
!16262 = distinct !DILocation(line: 1402, column: 2, scope: !16241)
!16263 = !DILocation(line: 252, column: 15, scope: !14924, inlinedAt: !16262)
!16264 = !DILocation(line: 252, column: 28, scope: !14924, inlinedAt: !16262)
!16265 = !DILocation(line: 0, scope: !14931, inlinedAt: !16266)
!16266 = distinct !DILocation(line: 254, column: 3, scope: !14935, inlinedAt: !16262)
!16267 = !DILocation(line: 0, scope: !14938, inlinedAt: !16268)
!16268 = distinct !DILocation(line: 229, column: 2, scope: !14931, inlinedAt: !16266)
!16269 = !DILocation(line: 188, column: 2, scope: !14948, inlinedAt: !16268)
!16270 = !DILocation(line: 188, column: 2, scope: !14950, inlinedAt: !16268)
!16271 = !DILocation(line: 0, scope: !14948, inlinedAt: !16268)
!16272 = !DILocation(line: 189, column: 7, scope: !14953, inlinedAt: !16268)
!16273 = !DILocation(line: 189, column: 35, scope: !14953, inlinedAt: !16268)
!16274 = !DILocation(line: 189, column: 7, scope: !14954, inlinedAt: !16268)
!16275 = !DILocation(line: 191, column: 21, scope: !14958, inlinedAt: !16268)
!16276 = !DILocation(line: 190, column: 4, scope: !14958, inlinedAt: !16268)
!16277 = !DILocation(line: 192, column: 4, scope: !14958, inlinedAt: !16268)
!16278 = distinct !{!16278, !16269, !16279}
!16279 = !DILocation(line: 194, column: 2, scope: !14948, inlinedAt: !16268)
!16280 = !DILocation(line: 196, column: 37, scope: !14938, inlinedAt: !16268)
!16281 = !DILocation(line: 196, column: 2, scope: !14938, inlinedAt: !16268)
!16282 = !DILocation(line: 197, column: 1, scope: !14938, inlinedAt: !16268)
!16283 = !DILocation(line: 1403, column: 2, scope: !16241)
!16284 = !DILocation(line: 0, scope: !15349, inlinedAt: !16285)
!16285 = distinct !DILocation(line: 1404, column: 2, scope: !16241)
!16286 = !DILocation(line: 196, column: 9, scope: !15349, inlinedAt: !16285)
!16287 = !DILocation(line: 1405, column: 1, scope: !16241)
!16288 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2478, file: !2478, line: 1459, type: !16289, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16291)
!16289 = !DISubroutineType(types: !16290)
!16290 = !{!344, !15529}
!16291 = !{!16292, !16293, !16294}
!16292 = !DILocalVariable(name: "timeout", arg: 1, scope: !16288, file: !2478, line: 1459, type: !15529)
!16293 = !DILocalVariable(name: "ticks", scope: !16288, file: !2478, line: 1461, type: !1711)
!16294 = !DILocalVariable(name: "ret", scope: !16288, file: !2478, line: 1480, type: !344)
!16295 = !DILocation(line: 0, scope: !16288)
!16296 = !DILocation(line: 1468, column: 6, scope: !16297)
!16297 = distinct !DILexicalBlock(scope: !16288, file: !2478, line: 1468, column: 6)
!16298 = !DILocation(line: 1468, column: 6, scope: !16288)
!16299 = !DILocation(line: 1469, column: 20, scope: !16300)
!16300 = distinct !DILexicalBlock(scope: !16297, file: !2478, line: 1468, column: 40)
!16301 = !DILocation(line: 1469, column: 3, scope: !16300)
!16302 = !DILocation(line: 1473, column: 3, scope: !16300)
!16303 = !DILocation(line: 1478, column: 10, scope: !16288)
!16304 = !DILocation(line: 1480, column: 16, scope: !16288)
!16305 = !DILocation(line: 1485, column: 1, scope: !16288)
!16306 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3689, file: !3689, line: 310, type: !16307, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16309)
!16307 = !DISubroutineType(types: !16308)
!16308 = !{null, !16213}
!16309 = !{!16310}
!16310 = !DILocalVariable(name: "thread", arg: 1, scope: !16306, file: !3689, line: 310, type: !16213)
!16311 = !DILocation(line: 0, scope: !16306)
!16312 = !DILocation(line: 319, column: 2, scope: !16313)
!16313 = distinct !DILexicalBlock(scope: !16306, file: !3689, line: 319, column: 2)
!16314 = !{i64 2154784658}
!16315 = !DILocation(line: 320, column: 2, scope: !16306)
!16316 = !DILocation(line: 321, column: 1, scope: !16306)
!16317 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2478, file: !2478, line: 1415, type: !16318, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16320)
!16318 = !DISubroutineType(types: !16319)
!16319 = !{!344, !1711}
!16320 = !{!16321, !16322, !16323, !16324}
!16321 = !DILocalVariable(name: "ticks", arg: 1, scope: !16317, file: !2478, line: 1415, type: !1711)
!16322 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16317, file: !2478, line: 1418, type: !132)
!16323 = !DILocalVariable(name: "timeout", scope: !16317, file: !2478, line: 1430, type: !15529)
!16324 = !DILocalVariable(name: "key", scope: !16317, file: !2478, line: 1437, type: !14730)
!16325 = !DILocation(line: 0, scope: !16317)
!16326 = !DILocation(line: 1425, column: 12, scope: !16327)
!16327 = distinct !DILexicalBlock(scope: !16317, file: !2478, line: 1425, column: 6)
!16328 = !DILocation(line: 1425, column: 6, scope: !16317)
!16329 = !DILocation(line: 1426, column: 3, scope: !16330)
!16330 = distinct !DILexicalBlock(scope: !16327, file: !2478, line: 1425, column: 18)
!16331 = !DILocation(line: 1427, column: 3, scope: !16330)
!16332 = !DILocation(line: 1431, column: 24, scope: !16333)
!16333 = distinct !DILexicalBlock(scope: !16317, file: !2478, line: 1431, column: 6)
!16334 = !DILocation(line: 1431, column: 6, scope: !16317)
!16335 = !DILocation(line: 1432, column: 35, scope: !16336)
!16336 = distinct !DILexicalBlock(scope: !16333, file: !2478, line: 1431, column: 30)
!16337 = !DILocation(line: 1432, column: 27, scope: !16336)
!16338 = !DILocation(line: 1433, column: 2, scope: !16336)
!16339 = !DILocation(line: 1434, column: 27, scope: !16340)
!16340 = distinct !DILexicalBlock(scope: !16333, file: !2478, line: 1433, column: 9)
!16341 = !DILocation(line: 0, scope: !16333)
!16342 = !DILocation(line: 0, scope: !14738, inlinedAt: !16343)
!16343 = distinct !DILocation(line: 1437, column: 25, scope: !16317)
!16344 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !16345)
!16345 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !16343)
!16346 = !DILocation(line: 0, scope: !14747, inlinedAt: !16345)
!16347 = !DILocation(line: 1440, column: 20, scope: !16317)
!16348 = !DILocation(line: 1440, column: 18, scope: !16317)
!16349 = !DILocation(line: 1442, column: 2, scope: !16317)
!16350 = !DILocation(line: 1443, column: 23, scope: !16317)
!16351 = !DILocation(line: 1443, column: 2, scope: !16317)
!16352 = !DILocation(line: 1444, column: 29, scope: !16317)
!16353 = !DILocation(line: 1444, column: 2, scope: !16317)
!16354 = !DILocation(line: 0, scope: !15349, inlinedAt: !16355)
!16355 = distinct !DILocation(line: 1446, column: 8, scope: !16317)
!16356 = !DILocation(line: 196, column: 9, scope: !15349, inlinedAt: !16355)
!16357 = !DILocation(line: 1450, column: 10, scope: !16317)
!16358 = !DILocation(line: 1450, column: 45, scope: !16317)
!16359 = !DILocation(line: 1450, column: 43, scope: !16317)
!16360 = !DILocation(line: 1451, column: 6, scope: !16317)
!16361 = !DILocation(line: 1457, column: 1, scope: !16317)
!16362 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !6024, file: !6024, line: 1103, type: !6025, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16363)
!16363 = !{!16364}
!16364 = !DILocalVariable(name: "t", arg: 1, scope: !16362, file: !6024, line: 1103, type: !1608)
!16365 = !DILocation(line: 0, scope: !16362)
!16366 = !DILocation(line: 0, scope: !14785, inlinedAt: !16367)
!16367 = distinct !DILocation(line: 1106, column: 9, scope: !16362)
!16368 = !DILocation(line: 139, column: 13, scope: !16369, inlinedAt: !16367)
!16369 = distinct !DILexicalBlock(scope: !16370, file: !6024, line: 138, column: 10)
!16370 = distinct !DILexicalBlock(scope: !16371, file: !6024, line: 136, column: 7)
!16371 = distinct !DILexicalBlock(scope: !14806, file: !6024, line: 134, column: 17)
!16372 = !DILocation(line: 1106, column: 2, scope: !16362)
!16373 = distinct !DISubprogram(name: "k_yield", scope: !3689, file: !3689, line: 140, type: !3249, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !473)
!16374 = !DILocation(line: 148, column: 2, scope: !16375)
!16375 = distinct !DILexicalBlock(scope: !16373, file: !3689, line: 148, column: 2)
!16376 = !{i64 2154783978}
!16377 = !DILocation(line: 149, column: 2, scope: !16373)
!16378 = !DILocation(line: 150, column: 1, scope: !16373)
!16379 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2478, file: !2478, line: 1495, type: !16380, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16382)
!16380 = !DISubroutineType(types: !16381)
!16381 = !{!344, !103}
!16382 = !{!16383, !16384}
!16383 = !DILocalVariable(name: "us", arg: 1, scope: !16379, file: !2478, line: 1495, type: !103)
!16384 = !DILocalVariable(name: "ticks", scope: !16379, file: !2478, line: 1497, type: !344)
!16385 = !DILocation(line: 0, scope: !16379)
!16386 = !DILocation(line: 1501, column: 31, scope: !16379)
!16387 = !DILocation(line: 1501, column: 10, scope: !16379)
!16388 = !DILocation(line: 1502, column: 23, scope: !16379)
!16389 = !DILocation(line: 1502, column: 10, scope: !16379)
!16390 = !DILocation(line: 1506, column: 31, scope: !16379)
!16391 = !DILocation(line: 1506, column: 9, scope: !16379)
!16392 = !DILocation(line: 1506, column: 2, scope: !16379)
!16393 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !6024, file: !6024, line: 571, type: !6025, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16394)
!16394 = !{!16395}
!16395 = !DILocalVariable(name: "t", arg: 1, scope: !16393, file: !6024, line: 571, type: !1608)
!16396 = !DILocation(line: 0, scope: !16393)
!16397 = !DILocation(line: 0, scope: !14785, inlinedAt: !16398)
!16398 = distinct !DILocation(line: 574, column: 9, scope: !16393)
!16399 = !DILocation(line: 135, column: 5, scope: !16371, inlinedAt: !16398)
!16400 = !DILocation(line: 139, column: 13, scope: !16369, inlinedAt: !16398)
!16401 = !DILocation(line: 574, column: 2, scope: !16393)
!16402 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !6024, file: !6024, line: 1187, type: !6025, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16403)
!16403 = !{!16404}
!16404 = !DILocalVariable(name: "t", arg: 1, scope: !16402, file: !6024, line: 1187, type: !1608)
!16405 = !DILocation(line: 0, scope: !16402)
!16406 = !DILocation(line: 0, scope: !14785, inlinedAt: !16407)
!16407 = distinct !DILocation(line: 1190, column: 9, scope: !16402)
!16408 = !DILocation(line: 145, column: 13, scope: !16409, inlinedAt: !16407)
!16409 = distinct !DILexicalBlock(scope: !14803, file: !6024, line: 144, column: 10)
!16410 = !DILocation(line: 1190, column: 2, scope: !16402)
!16411 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2478, file: !2478, line: 1517, type: !16307, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16412)
!16412 = !{!16413}
!16413 = !DILocalVariable(name: "thread", arg: 1, scope: !16411, file: !2478, line: 1517, type: !16213)
!16414 = !DILocation(line: 0, scope: !16411)
!16415 = !DILocation(line: 1521, column: 6, scope: !16416)
!16416 = distinct !DILexicalBlock(scope: !16411, file: !2478, line: 1521, column: 6)
!16417 = !DILocation(line: 1521, column: 6, scope: !16411)
!16418 = !DILocation(line: 1525, column: 6, scope: !16419)
!16419 = distinct !DILexicalBlock(scope: !16411, file: !2478, line: 1525, column: 6)
!16420 = !DILocation(line: 1525, column: 37, scope: !16419)
!16421 = !DILocation(line: 1525, column: 6, scope: !16411)
!16422 = !DILocation(line: 1527, column: 20, scope: !16423)
!16423 = distinct !DILexicalBlock(scope: !16424, file: !2478, line: 1527, column: 7)
!16424 = distinct !DILexicalBlock(scope: !16419, file: !2478, line: 1525, column: 42)
!16425 = !DILocation(line: 1527, column: 33, scope: !16423)
!16426 = !DILocation(line: 1527, column: 7, scope: !16424)
!16427 = !DILocation(line: 1532, column: 2, scope: !16411)
!16428 = !DILocation(line: 1533, column: 2, scope: !16411)
!16429 = !DILocation(line: 1031, column: 3, scope: !15382, inlinedAt: !16430)
!16430 = distinct !DILocation(line: 48, column: 10, scope: !15386, inlinedAt: !16431)
!16431 = distinct !DILocation(line: 1537, column: 7, scope: !16432)
!16432 = distinct !DILexicalBlock(scope: !16411, file: !2478, line: 1537, column: 6)
!16433 = !DILocation(line: 0, scope: !15382, inlinedAt: !16430)
!16434 = !DILocation(line: 48, column: 9, scope: !15386, inlinedAt: !16431)
!16435 = !DILocation(line: 1537, column: 6, scope: !16411)
!16436 = !DILocation(line: 1538, column: 3, scope: !16437)
!16437 = distinct !DILexicalBlock(scope: !16432, file: !2478, line: 1537, column: 25)
!16438 = !DILocation(line: 1539, column: 2, scope: !16437)
!16439 = !DILocation(line: 1540, column: 1, scope: !16411)
!16440 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13746, file: !13746, line: 101, type: !14856, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16441)
!16441 = !{!16442}
!16442 = !DILocalVariable(name: "thread", arg: 1, scope: !16440, file: !13746, line: 101, type: !2373)
!16443 = !DILocation(line: 0, scope: !16440)
!16444 = !DILocation(line: 103, column: 23, scope: !16440)
!16445 = !DILocation(line: 103, column: 36, scope: !16440)
!16446 = !DILocation(line: 103, column: 55, scope: !16440)
!16447 = !DILocation(line: 103, column: 2, scope: !16440)
!16448 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2478, file: !2478, line: 1567, type: !16449, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16451)
!16449 = !DISubroutineType(types: !16450)
!16450 = !{!16213}
!16451 = !{!16452}
!16452 = !DILocalVariable(name: "ret", scope: !16448, file: !2478, line: 1577, type: !16213)
!16453 = !DILocation(line: 1577, column: 30, scope: !16448)
!16454 = !DILocation(line: 0, scope: !16448)
!16455 = !DILocation(line: 1582, column: 2, scope: !16448)
!16456 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2478, file: !2478, line: 1593, type: !6648, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !473)
!16457 = !DILocation(line: 1031, column: 3, scope: !15382, inlinedAt: !16458)
!16458 = distinct !DILocation(line: 48, column: 10, scope: !15386, inlinedAt: !16459)
!16459 = distinct !DILocation(line: 1595, column: 10, scope: !16456)
!16460 = !DILocation(line: 0, scope: !15382, inlinedAt: !16458)
!16461 = !DILocation(line: 48, column: 9, scope: !15386, inlinedAt: !16459)
!16462 = !DILocation(line: 1595, column: 27, scope: !16456)
!16463 = !DILocation(line: 1595, column: 41, scope: !16456)
!16464 = !DILocation(line: 1595, column: 30, scope: !16456)
!16465 = !DILocation(line: 1595, column: 2, scope: !16456)
!16466 = distinct !DISubprogram(name: "z_thread_abort", scope: !2478, file: !2478, line: 1725, type: !14696, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16467)
!16467 = !{!16468, !16469}
!16468 = !DILocalVariable(name: "thread", arg: 1, scope: !16466, file: !2478, line: 1725, type: !2373)
!16469 = !DILocalVariable(name: "key", scope: !16466, file: !2478, line: 1727, type: !14730)
!16470 = !DILocation(line: 0, scope: !16466)
!16471 = !DILocation(line: 0, scope: !14738, inlinedAt: !16472)
!16472 = distinct !DILocation(line: 1727, column: 25, scope: !16466)
!16473 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !16474)
!16474 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !16472)
!16475 = !DILocation(line: 0, scope: !14747, inlinedAt: !16474)
!16476 = !DILocation(line: 1729, column: 20, scope: !16477)
!16477 = distinct !DILexicalBlock(scope: !16466, file: !2478, line: 1729, column: 6)
!16478 = !DILocation(line: 1729, column: 33, scope: !16477)
!16479 = !DILocation(line: 1729, column: 48, scope: !16477)
!16480 = !DILocation(line: 1729, column: 6, scope: !16466)
!16481 = !DILocation(line: 0, scope: !14765, inlinedAt: !16482)
!16482 = distinct !DILocation(line: 1730, column: 3, scope: !16483)
!16483 = distinct !DILexicalBlock(scope: !16477, file: !2478, line: 1729, column: 54)
!16484 = !DILocation(line: 0, scope: !14773, inlinedAt: !16485)
!16485 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !16482)
!16486 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !16485)
!16487 = !DILocation(line: 1732, column: 3, scope: !16488)
!16488 = distinct !DILexicalBlock(scope: !16483, file: !2478, line: 1732, column: 3)
!16489 = !{i64 2155521388, i64 2155521404, i64 2155521430, i64 2155521458, i64 2155521478}
!16490 = !DILocation(line: 1733, column: 3, scope: !16483)
!16491 = !DILocation(line: 1736, column: 20, scope: !16492)
!16492 = distinct !DILexicalBlock(scope: !16466, file: !2478, line: 1736, column: 6)
!16493 = !DILocation(line: 1736, column: 33, scope: !16492)
!16494 = !DILocation(line: 1736, column: 49, scope: !16492)
!16495 = !DILocation(line: 1736, column: 6, scope: !16466)
!16496 = !DILocation(line: 0, scope: !14765, inlinedAt: !16497)
!16497 = distinct !DILocation(line: 1737, column: 3, scope: !16498)
!16498 = distinct !DILexicalBlock(scope: !16492, file: !2478, line: 1736, column: 56)
!16499 = !DILocation(line: 0, scope: !14773, inlinedAt: !16500)
!16500 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !16497)
!16501 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !16500)
!16502 = !DILocation(line: 1738, column: 3, scope: !16498)
!16503 = !DILocation(line: 1775, column: 2, scope: !16466)
!16504 = !DILocation(line: 1776, column: 16, scope: !16505)
!16505 = distinct !DILexicalBlock(scope: !16466, file: !2478, line: 1776, column: 6)
!16506 = !DILocation(line: 1776, column: 13, scope: !16505)
!16507 = !DILocation(line: 1776, column: 25, scope: !16505)
!16508 = !DILocation(line: 1031, column: 3, scope: !15382, inlinedAt: !16509)
!16509 = distinct !DILocation(line: 48, column: 10, scope: !15386, inlinedAt: !16510)
!16510 = distinct !DILocation(line: 1776, column: 29, scope: !16505)
!16511 = !DILocation(line: 0, scope: !15382, inlinedAt: !16509)
!16512 = !DILocation(line: 48, column: 9, scope: !15386, inlinedAt: !16510)
!16513 = !DILocation(line: 1776, column: 6, scope: !16466)
!16514 = !DILocation(line: 0, scope: !15349, inlinedAt: !16515)
!16515 = distinct !DILocation(line: 1777, column: 3, scope: !16516)
!16516 = distinct !DILexicalBlock(scope: !16505, file: !2478, line: 1776, column: 47)
!16517 = !DILocation(line: 196, column: 9, scope: !15349, inlinedAt: !16515)
!16518 = !DILocation(line: 1779, column: 2, scope: !16516)
!16519 = !DILocation(line: 0, scope: !14765, inlinedAt: !16520)
!16520 = distinct !DILocation(line: 1780, column: 2, scope: !16466)
!16521 = !DILocation(line: 0, scope: !14773, inlinedAt: !16522)
!16522 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !16520)
!16523 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !16522)
!16524 = !DILocation(line: 1781, column: 1, scope: !16466)
!16525 = distinct !DISubprogram(name: "end_thread", scope: !2478, file: !2478, line: 1690, type: !14696, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16526)
!16526 = !{!16527}
!16527 = !DILocalVariable(name: "thread", arg: 1, scope: !16525, file: !2478, line: 1690, type: !2373)
!16528 = !DILocation(line: 0, scope: !16525)
!16529 = !DILocation(line: 1695, column: 20, scope: !16530)
!16530 = distinct !DILexicalBlock(scope: !16525, file: !2478, line: 1695, column: 6)
!16531 = !DILocation(line: 1695, column: 33, scope: !16530)
!16532 = !DILocation(line: 1695, column: 49, scope: !16530)
!16533 = !DILocation(line: 1695, column: 6, scope: !16525)
!16534 = !DILocation(line: 1697, column: 29, scope: !16535)
!16535 = distinct !DILexicalBlock(scope: !16530, file: !2478, line: 1695, column: 56)
!16536 = !DILocation(line: 1698, column: 7, scope: !16537)
!16537 = distinct !DILexicalBlock(scope: !16535, file: !2478, line: 1698, column: 7)
!16538 = !DILocation(line: 1698, column: 7, scope: !16535)
!16539 = !DILocation(line: 0, scope: !14907, inlinedAt: !16540)
!16540 = distinct !DILocation(line: 1699, column: 4, scope: !16541)
!16541 = distinct !DILexicalBlock(scope: !16537, file: !2478, line: 1698, column: 35)
!16542 = !DILocation(line: 266, column: 28, scope: !14907, inlinedAt: !16540)
!16543 = !DILocation(line: 0, scope: !14915, inlinedAt: !16544)
!16544 = distinct !DILocation(line: 268, column: 3, scope: !14919, inlinedAt: !16540)
!16545 = !DILocation(line: 234, column: 2, scope: !14915, inlinedAt: !16544)
!16546 = !DILocation(line: 1700, column: 3, scope: !16541)
!16547 = !DILocation(line: 1701, column: 20, scope: !16548)
!16548 = distinct !DILexicalBlock(scope: !16535, file: !2478, line: 1701, column: 7)
!16549 = !DILocation(line: 1701, column: 30, scope: !16548)
!16550 = !DILocation(line: 1701, column: 7, scope: !16535)
!16551 = !DILocation(line: 1702, column: 4, scope: !16552)
!16552 = distinct !DILexicalBlock(scope: !16548, file: !2478, line: 1701, column: 39)
!16553 = !DILocation(line: 1703, column: 3, scope: !16552)
!16554 = !DILocation(line: 1704, column: 9, scope: !16535)
!16555 = !DILocation(line: 1705, column: 23, scope: !16535)
!16556 = !DILocation(line: 1705, column: 3, scope: !16535)
!16557 = !DILocation(line: 1706, column: 3, scope: !16535)
!16558 = !DILocation(line: 1722, column: 2, scope: !16535)
!16559 = !DILocation(line: 1723, column: 1, scope: !16525)
!16560 = distinct !DISubprogram(name: "unpend_all", scope: !2478, file: !2478, line: 1674, type: !16561, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16563)
!16561 = !DISubroutineType(types: !16562)
!16562 = !{null, !2404}
!16563 = !{!16564, !16565}
!16564 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16560, file: !2478, line: 1674, type: !2404)
!16565 = !DILocalVariable(name: "thread", scope: !16560, file: !2478, line: 1676, type: !2373)
!16566 = !DILocation(line: 0, scope: !16560)
!16567 = !DILocation(line: 1678, column: 19, scope: !16560)
!16568 = !DILocation(line: 1678, column: 41, scope: !16560)
!16569 = !DILocation(line: 1678, column: 2, scope: !16560)
!16570 = !DILocation(line: 1679, column: 3, scope: !16571)
!16571 = distinct !DILexicalBlock(scope: !16560, file: !2478, line: 1678, column: 50)
!16572 = !DILocation(line: 1680, column: 9, scope: !16571)
!16573 = !DILocalVariable(name: "thread", arg: 1, scope: !16574, file: !13766, line: 65, type: !2373)
!16574 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13766, file: !13766, line: 65, type: !16575, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16577)
!16575 = !DISubroutineType(types: !16576)
!16576 = !{null, !2373, !32}
!16577 = !{!16573, !16578}
!16578 = !DILocalVariable(name: "value", arg: 2, scope: !16574, file: !13766, line: 65, type: !32)
!16579 = !DILocation(line: 0, scope: !16574, inlinedAt: !16580)
!16580 = distinct !DILocation(line: 1681, column: 3, scope: !16571)
!16581 = !DILocation(line: 67, column: 15, scope: !16574, inlinedAt: !16580)
!16582 = !DILocation(line: 67, column: 33, scope: !16574, inlinedAt: !16580)
!16583 = !DILocation(line: 1682, column: 3, scope: !16571)
!16584 = distinct !{!16584, !16569, !16585}
!16585 = !DILocation(line: 1683, column: 2, scope: !16560)
!16586 = !DILocation(line: 1684, column: 1, scope: !16560)
!16587 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2478, file: !2478, line: 1794, type: !16588, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16590)
!16588 = !DISubroutineType(types: !16589)
!16589 = !{!103, !2373, !15529}
!16590 = !{!16591, !16592, !16593, !16594}
!16591 = !DILocalVariable(name: "thread", arg: 1, scope: !16587, file: !2478, line: 1794, type: !2373)
!16592 = !DILocalVariable(name: "timeout", arg: 2, scope: !16587, file: !2478, line: 1794, type: !15529)
!16593 = !DILocalVariable(name: "key", scope: !16587, file: !2478, line: 1796, type: !14730)
!16594 = !DILocalVariable(name: "ret", scope: !16587, file: !2478, line: 1797, type: !103)
!16595 = !DILocation(line: 0, scope: !16587)
!16596 = !DILocation(line: 0, scope: !14738, inlinedAt: !16597)
!16597 = distinct !DILocation(line: 1796, column: 25, scope: !16587)
!16598 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !16599)
!16599 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !16597)
!16600 = !DILocation(line: 0, scope: !14747, inlinedAt: !16599)
!16601 = !DILocation(line: 1801, column: 20, scope: !16602)
!16602 = distinct !DILexicalBlock(scope: !16587, file: !2478, line: 1801, column: 6)
!16603 = !DILocation(line: 1801, column: 33, scope: !16602)
!16604 = !DILocation(line: 1801, column: 49, scope: !16602)
!16605 = !DILocation(line: 1801, column: 6, scope: !16587)
!16606 = !DILocation(line: 1803, column: 13, scope: !16607)
!16607 = distinct !DILexicalBlock(scope: !16602, file: !2478, line: 1803, column: 13)
!16608 = !DILocation(line: 1803, column: 13, scope: !16602)
!16609 = !DILocation(line: 1805, column: 24, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16607, file: !2478, line: 1805, column: 13)
!16611 = !DILocation(line: 1805, column: 21, scope: !16610)
!16612 = !DILocation(line: 1805, column: 34, scope: !16610)
!16613 = !DILocation(line: 1806, column: 20, scope: !16610)
!16614 = !DILocation(line: 1806, column: 44, scope: !16610)
!16615 = !DILocation(line: 1806, column: 30, scope: !16610)
!16616 = !DILocation(line: 1805, column: 13, scope: !16607)
!16617 = !DILocation(line: 1810, column: 42, scope: !16618)
!16618 = distinct !DILexicalBlock(scope: !16610, file: !2478, line: 1808, column: 9)
!16619 = !DILocation(line: 1810, column: 3, scope: !16618)
!16620 = !DILocation(line: 1811, column: 22, scope: !16618)
!16621 = !DILocation(line: 1811, column: 3, scope: !16618)
!16622 = !DILocation(line: 0, scope: !15349, inlinedAt: !16623)
!16623 = distinct !DILocation(line: 1814, column: 9, scope: !16618)
!16624 = !DILocation(line: 196, column: 9, scope: !15349, inlinedAt: !16623)
!16625 = !DILocation(line: 1817, column: 3, scope: !16618)
!16626 = !DILocation(line: 0, scope: !16602)
!16627 = !DILocation(line: 0, scope: !14765, inlinedAt: !16628)
!16628 = distinct !DILocation(line: 1822, column: 2, scope: !16587)
!16629 = !DILocation(line: 0, scope: !14773, inlinedAt: !16630)
!16630 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !16628)
!16631 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !16630)
!16632 = !DILocation(line: 1823, column: 2, scope: !16587)
!16633 = !DILocation(line: 1824, column: 1, scope: !16587)
!16634 = distinct !DISubprogram(name: "z_sched_wake", scope: !2478, file: !2478, line: 1882, type: !16635, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16637)
!16635 = !DISubroutineType(types: !16636)
!16636 = !{!166, !2404, !103, !102}
!16637 = !{!16638, !16639, !16640, !16641, !16642, !16643, !16645}
!16638 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16634, file: !2478, line: 1882, type: !2404)
!16639 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16634, file: !2478, line: 1882, type: !103)
!16640 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16634, file: !2478, line: 1882, type: !102)
!16641 = !DILocalVariable(name: "thread", scope: !16634, file: !2478, line: 1884, type: !2373)
!16642 = !DILocalVariable(name: "ret", scope: !16634, file: !2478, line: 1885, type: !166)
!16643 = !DILocalVariable(name: "__i", scope: !16644, file: !2478, line: 1887, type: !14730)
!16644 = distinct !DILexicalBlock(scope: !16634, file: !2478, line: 1887, column: 2)
!16645 = !DILocalVariable(name: "__key", scope: !16644, file: !2478, line: 1887, type: !14730)
!16646 = !DILocation(line: 0, scope: !16634)
!16647 = !DILocation(line: 0, scope: !16644)
!16648 = !DILocation(line: 0, scope: !14738, inlinedAt: !16649)
!16649 = distinct !DILocation(line: 1887, column: 2, scope: !16644)
!16650 = !DILocation(line: 55, column: 2, scope: !14747, inlinedAt: !16651)
!16651 = distinct !DILocation(line: 145, column: 10, scope: !14738, inlinedAt: !16649)
!16652 = !DILocation(line: 0, scope: !14747, inlinedAt: !16651)
!16653 = !DILocation(line: 1888, column: 12, scope: !16654)
!16654 = distinct !DILexicalBlock(scope: !16655, file: !2478, line: 1887, column: 26)
!16655 = distinct !DILexicalBlock(scope: !16644, file: !2478, line: 1887, column: 2)
!16656 = !DILocation(line: 1890, column: 14, scope: !16657)
!16657 = distinct !DILexicalBlock(scope: !16654, file: !2478, line: 1890, column: 7)
!16658 = !DILocation(line: 1890, column: 7, scope: !16654)
!16659 = !DILocalVariable(name: "thread", arg: 1, scope: !16660, file: !16661, line: 134, type: !2373)
!16660 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16661, file: !16661, line: 134, type: !16662, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16664)
!16661 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16662 = !DISubroutineType(types: !16663)
!16663 = !{null, !2373, !32, !102}
!16664 = !{!16659, !16665, !16666}
!16665 = !DILocalVariable(name: "value", arg: 2, scope: !16660, file: !16661, line: 135, type: !32)
!16666 = !DILocalVariable(name: "data", arg: 3, scope: !16660, file: !16661, line: 136, type: !102)
!16667 = !DILocation(line: 0, scope: !16660, inlinedAt: !16668)
!16668 = distinct !DILocation(line: 1891, column: 4, scope: !16669)
!16669 = distinct !DILexicalBlock(scope: !16657, file: !2478, line: 1890, column: 23)
!16670 = !DILocation(line: 0, scope: !16574, inlinedAt: !16671)
!16671 = distinct !DILocation(line: 138, column: 2, scope: !16660, inlinedAt: !16668)
!16672 = !DILocation(line: 67, column: 15, scope: !16574, inlinedAt: !16671)
!16673 = !DILocation(line: 67, column: 33, scope: !16574, inlinedAt: !16671)
!16674 = !DILocation(line: 139, column: 15, scope: !16660, inlinedAt: !16668)
!16675 = !DILocation(line: 139, column: 25, scope: !16660, inlinedAt: !16668)
!16676 = !DILocation(line: 1894, column: 4, scope: !16669)
!16677 = !DILocation(line: 1895, column: 10, scope: !16669)
!16678 = !DILocation(line: 1896, column: 4, scope: !16669)
!16679 = !DILocation(line: 1898, column: 3, scope: !16669)
!16680 = !DILocation(line: 0, scope: !14765, inlinedAt: !16681)
!16681 = distinct !DILocation(line: 1887, column: 2, scope: !16655)
!16682 = !DILocation(line: 0, scope: !14773, inlinedAt: !16683)
!16683 = distinct !DILocation(line: 215, column: 2, scope: !14765, inlinedAt: !16681)
!16684 = !DILocation(line: 95, column: 2, scope: !14773, inlinedAt: !16683)
!16685 = !DILocation(line: 1901, column: 2, scope: !16634)
!16686 = distinct !DISubprogram(name: "z_sched_wait", scope: !2478, file: !2478, line: 1904, type: !16687, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !16690)
!16687 = !DISubroutineType(types: !16688)
!16688 = !{!103, !14741, !14730, !2404, !15529, !16689}
!16689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!16690 = !{!16691, !16692, !16693, !16694, !16695, !16696}
!16691 = !DILocalVariable(name: "lock", arg: 1, scope: !16686, file: !2478, line: 1904, type: !14741)
!16692 = !DILocalVariable(name: "key", arg: 2, scope: !16686, file: !2478, line: 1904, type: !14730)
!16693 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16686, file: !2478, line: 1905, type: !2404)
!16694 = !DILocalVariable(name: "timeout", arg: 4, scope: !16686, file: !2478, line: 1905, type: !15529)
!16695 = !DILocalVariable(name: "data", arg: 5, scope: !16686, file: !2478, line: 1905, type: !16689)
!16696 = !DILocalVariable(name: "ret", scope: !16686, file: !2478, line: 1907, type: !103)
!16697 = !DILocation(line: 0, scope: !16686)
!16698 = !DILocation(line: 1907, column: 12, scope: !16686)
!16699 = !DILocation(line: 1909, column: 11, scope: !16700)
!16700 = distinct !DILexicalBlock(scope: !16686, file: !2478, line: 1909, column: 6)
!16701 = !DILocation(line: 1909, column: 6, scope: !16686)
!16702 = !DILocation(line: 1910, column: 11, scope: !16703)
!16703 = distinct !DILexicalBlock(scope: !16700, file: !2478, line: 1909, column: 20)
!16704 = !DILocation(line: 1910, column: 26, scope: !16703)
!16705 = !DILocation(line: 1910, column: 9, scope: !16703)
!16706 = !DILocation(line: 1911, column: 2, scope: !16703)
!16707 = !DILocation(line: 1912, column: 2, scope: !16686)
!16708 = distinct !DISubprogram(name: "z_data_copy", scope: !16709, file: !16709, line: 22, type: !3249, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !473)
!16709 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16710 = !DILocation(line: 24, column: 2, scope: !16708)
!16711 = !DILocation(line: 27, column: 2, scope: !16708)
!16712 = !DILocation(line: 71, column: 1, scope: !16708)
!16713 = distinct !DISubprogram(name: "z_add_timeout", scope: !2515, file: !2515, line: 88, type: !16714, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16720)
!16714 = !DISubroutineType(types: !16715)
!16715 = !{null, !2488, !2507, !16716}
!16716 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1712, line: 67, baseType: !16717)
!16717 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1712, line: 65, size: 64, elements: !16718)
!16718 = !{!16719}
!16719 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16717, file: !1712, line: 66, baseType: !1711, size: 64)
!16720 = !{!16721, !16722, !16723, !16724, !16730, !16731, !16734, !16737}
!16721 = !DILocalVariable(name: "to", arg: 1, scope: !16713, file: !2515, line: 88, type: !2488)
!16722 = !DILocalVariable(name: "fn", arg: 2, scope: !16713, file: !2515, line: 88, type: !2507)
!16723 = !DILocalVariable(name: "timeout", arg: 3, scope: !16713, file: !2515, line: 89, type: !16716)
!16724 = !DILocalVariable(name: "__i", scope: !16725, file: !2515, line: 102, type: !16726)
!16725 = distinct !DILexicalBlock(scope: !16713, file: !2515, line: 102, column: 2)
!16726 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !16727)
!16727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !16728)
!16728 = !{!16729}
!16729 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16727, file: !472, line: 33, baseType: !103, size: 32)
!16730 = !DILocalVariable(name: "__key", scope: !16725, file: !2515, line: 102, type: !16726)
!16731 = !DILocalVariable(name: "t", scope: !16732, file: !2515, line: 103, type: !2488)
!16732 = distinct !DILexicalBlock(scope: !16733, file: !2515, line: 102, column: 24)
!16733 = distinct !DILexicalBlock(scope: !16725, file: !2515, line: 102, column: 2)
!16734 = !DILocalVariable(name: "ticks", scope: !16735, file: !2515, line: 107, type: !1711)
!16735 = distinct !DILexicalBlock(scope: !16736, file: !2515, line: 106, column: 39)
!16736 = distinct !DILexicalBlock(scope: !16732, file: !2515, line: 105, column: 7)
!16737 = !DILocalVariable(name: "next_time", scope: !16738, file: !2515, line: 137, type: !344)
!16738 = distinct !DILexicalBlock(scope: !16739, file: !2515, line: 127, column: 22)
!16739 = distinct !DILexicalBlock(scope: !16732, file: !2515, line: 127, column: 7)
!16740 = !DILocation(line: 0, scope: !16713)
!16741 = !DILocation(line: 91, column: 6, scope: !16742)
!16742 = distinct !DILexicalBlock(scope: !16713, file: !2515, line: 91, column: 6)
!16743 = !DILocation(line: 91, column: 6, scope: !16713)
!16744 = !DILocation(line: 100, column: 6, scope: !16713)
!16745 = !DILocation(line: 100, column: 9, scope: !16713)
!16746 = !DILocation(line: 0, scope: !16725)
!16747 = !DILocalVariable(name: "l", arg: 1, scope: !16748, file: !472, line: 136, type: !16751)
!16748 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !16749, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16752)
!16749 = !DISubroutineType(types: !16750)
!16750 = !{!16726, !16751}
!16751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 32)
!16752 = !{!16747, !16753}
!16753 = !DILocalVariable(name: "k", scope: !16748, file: !472, line: 139, type: !16726)
!16754 = !DILocation(line: 0, scope: !16748, inlinedAt: !16755)
!16755 = distinct !DILocation(line: 102, column: 2, scope: !16725)
!16756 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !16761)
!16757 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5824, file: !5824, line: 42, type: !5825, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16758)
!16758 = !{!16759, !16760}
!16759 = !DILocalVariable(name: "key", scope: !16757, file: !5824, line: 44, type: !32)
!16760 = !DILocalVariable(name: "tmp", scope: !16757, file: !5824, line: 53, type: !32)
!16761 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !16755)
!16762 = !{i64 2244945}
!16763 = !DILocation(line: 0, scope: !16757, inlinedAt: !16761)
!16764 = !DILocation(line: 106, column: 33, scope: !16736)
!16765 = !DILocation(line: 105, column: 7, scope: !16732)
!16766 = !DILocation(line: 107, column: 50, scope: !16735)
!16767 = !DILocation(line: 107, column: 48, scope: !16735)
!16768 = !DILocation(line: 0, scope: !16735)
!16769 = !DILocation(line: 109, column: 17, scope: !16735)
!16770 = !DILocation(line: 110, column: 3, scope: !16735)
!16771 = !DILocation(line: 111, column: 31, scope: !16772)
!16772 = distinct !DILexicalBlock(scope: !16736, file: !2515, line: 110, column: 10)
!16773 = !DILocation(line: 111, column: 37, scope: !16772)
!16774 = !DILocation(line: 111, column: 35, scope: !16772)
!16775 = !DILocation(line: 0, scope: !16736)
!16776 = !DILocation(line: 109, column: 8, scope: !16735)
!16777 = !DILocation(line: 109, column: 15, scope: !16735)
!16778 = !DILocation(line: 114, column: 12, scope: !16779)
!16779 = distinct !DILexicalBlock(scope: !16732, file: !2515, line: 114, column: 3)
!16780 = !DILocation(line: 0, scope: !16732)
!16781 = !DILocation(line: 114, column: 3, scope: !16779)
!16782 = !DILocation(line: 115, column: 24, scope: !16783)
!16783 = distinct !DILexicalBlock(scope: !16784, file: !2515, line: 115, column: 8)
!16784 = distinct !DILexicalBlock(scope: !16785, file: !2515, line: 114, column: 45)
!16785 = distinct !DILexicalBlock(scope: !16779, file: !2515, line: 114, column: 3)
!16786 = !DILocation(line: 115, column: 11, scope: !16783)
!16787 = !DILocation(line: 115, column: 18, scope: !16783)
!16788 = !DILocation(line: 115, column: 8, scope: !16784)
!16789 = !DILocation(line: 116, column: 15, scope: !16790)
!16790 = distinct !DILexicalBlock(scope: !16783, file: !2515, line: 115, column: 32)
!16791 = !DILocation(line: 117, column: 26, scope: !16790)
!16792 = !DILocation(line: 117, column: 37, scope: !16790)
!16793 = !DILocation(line: 117, column: 5, scope: !16790)
!16794 = !DILocation(line: 123, column: 7, scope: !16732)
!16795 = !DILocation(line: 120, column: 15, scope: !16784)
!16796 = !DILocation(line: 114, column: 36, scope: !16785)
!16797 = distinct !{!16797, !16781, !16798}
!16798 = !DILocation(line: 121, column: 3, scope: !16779)
!16799 = !DILocation(line: 124, column: 41, scope: !16800)
!16800 = distinct !DILexicalBlock(scope: !16801, file: !2515, line: 123, column: 18)
!16801 = distinct !DILexicalBlock(scope: !16732, file: !2515, line: 123, column: 7)
!16802 = !DILocation(line: 124, column: 4, scope: !16800)
!16803 = !DILocation(line: 125, column: 3, scope: !16800)
!16804 = !DILocation(line: 127, column: 13, scope: !16739)
!16805 = !DILocation(line: 127, column: 10, scope: !16739)
!16806 = !DILocation(line: 127, column: 7, scope: !16732)
!16807 = !DILocation(line: 137, column: 24, scope: !16738)
!16808 = !DILocation(line: 0, scope: !16738)
!16809 = !DILocation(line: 139, column: 18, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !16738, file: !2515, line: 139, column: 8)
!16811 = !DILocation(line: 139, column: 23, scope: !16810)
!16812 = !DILocation(line: 141, column: 5, scope: !16813)
!16813 = distinct !DILexicalBlock(scope: !16810, file: !2515, line: 140, column: 48)
!16814 = !DILocation(line: 142, column: 4, scope: !16813)
!16815 = !DILocalVariable(name: "key", arg: 2, scope: !16816, file: !472, line: 190, type: !16726)
!16816 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !16817, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16819)
!16817 = !DISubroutineType(types: !16818)
!16818 = !{null, !16751, !16726}
!16819 = !{!16820, !16815}
!16820 = !DILocalVariable(name: "l", arg: 1, scope: !16816, file: !472, line: 189, type: !16751)
!16821 = !DILocation(line: 0, scope: !16816, inlinedAt: !16822)
!16822 = distinct !DILocation(line: 102, column: 2, scope: !16733)
!16823 = !DILocalVariable(name: "key", arg: 1, scope: !16824, file: !5824, line: 84, type: !32)
!16824 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5824, file: !5824, line: 84, type: !5835, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16825)
!16825 = !{!16823}
!16826 = !DILocation(line: 0, scope: !16824, inlinedAt: !16827)
!16827 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !16822)
!16828 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !16827)
!16829 = !{i64 2245762}
!16830 = !DILocation(line: 148, column: 1, scope: !16713)
!16831 = distinct !DISubprogram(name: "elapsed", scope: !2515, file: !2515, line: 62, type: !16832, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !473)
!16832 = !DISubroutineType(types: !16833)
!16833 = !{!344}
!16834 = !DILocation(line: 64, column: 9, scope: !16831)
!16835 = !DILocation(line: 64, column: 28, scope: !16831)
!16836 = !DILocation(line: 64, column: 35, scope: !16831)
!16837 = !DILocation(line: 64, column: 2, scope: !16831)
!16838 = distinct !DISubprogram(name: "first", scope: !2515, file: !2515, line: 39, type: !16839, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16841)
!16839 = !DISubroutineType(types: !16840)
!16840 = !{!2488}
!16841 = !{!16842}
!16842 = !DILocalVariable(name: "t", scope: !16838, file: !2515, line: 41, type: !16843)
!16843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 32)
!16844 = !DILocation(line: 41, column: 19, scope: !16838)
!16845 = !DILocation(line: 0, scope: !16838)
!16846 = !DILocation(line: 43, column: 9, scope: !16838)
!16847 = !DILocation(line: 43, column: 2, scope: !16838)
!16848 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !321, file: !321, line: 443, type: !16849, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16851)
!16849 = !DISubroutineType(types: !16850)
!16850 = !{null, !16843, !16843}
!16851 = !{!16852, !16853, !16854}
!16852 = !DILocalVariable(name: "successor", arg: 1, scope: !16848, file: !321, line: 443, type: !16843)
!16853 = !DILocalVariable(name: "node", arg: 2, scope: !16848, file: !321, line: 443, type: !16843)
!16854 = !DILocalVariable(name: "prev", scope: !16848, file: !321, line: 445, type: !16855)
!16855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16843)
!16856 = !DILocation(line: 0, scope: !16848)
!16857 = !DILocation(line: 445, column: 39, scope: !16848)
!16858 = !DILocation(line: 447, column: 8, scope: !16848)
!16859 = !DILocation(line: 447, column: 13, scope: !16848)
!16860 = !DILocation(line: 448, column: 8, scope: !16848)
!16861 = !DILocation(line: 448, column: 13, scope: !16848)
!16862 = !DILocation(line: 449, column: 8, scope: !16848)
!16863 = !DILocation(line: 449, column: 13, scope: !16848)
!16864 = !DILocation(line: 450, column: 18, scope: !16848)
!16865 = !DILocation(line: 451, column: 1, scope: !16848)
!16866 = distinct !DISubprogram(name: "next", scope: !2515, file: !2515, line: 46, type: !16867, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16869)
!16867 = !DISubroutineType(types: !16868)
!16868 = !{!2488, !2488}
!16869 = !{!16870, !16871}
!16870 = !DILocalVariable(name: "t", arg: 1, scope: !16866, file: !2515, line: 46, type: !2488)
!16871 = !DILocalVariable(name: "n", scope: !16866, file: !2515, line: 48, type: !16843)
!16872 = !DILocation(line: 0, scope: !16866)
!16873 = !DILocation(line: 48, column: 58, scope: !16866)
!16874 = !DILocation(line: 48, column: 19, scope: !16866)
!16875 = !DILocation(line: 50, column: 9, scope: !16866)
!16876 = !DILocation(line: 50, column: 2, scope: !16866)
!16877 = distinct !DISubprogram(name: "sys_dlist_append", scope: !321, file: !321, line: 404, type: !16878, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16881)
!16878 = !DISubroutineType(types: !16879)
!16879 = !{null, !16880, !16843}
!16880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 32)
!16881 = !{!16882, !16883, !16884}
!16882 = !DILocalVariable(name: "list", arg: 1, scope: !16877, file: !321, line: 404, type: !16880)
!16883 = !DILocalVariable(name: "node", arg: 2, scope: !16877, file: !321, line: 404, type: !16843)
!16884 = !DILocalVariable(name: "tail", scope: !16877, file: !321, line: 406, type: !16855)
!16885 = !DILocation(line: 0, scope: !16877)
!16886 = !DILocation(line: 406, column: 34, scope: !16877)
!16887 = !DILocation(line: 408, column: 8, scope: !16877)
!16888 = !DILocation(line: 408, column: 13, scope: !16877)
!16889 = !DILocation(line: 409, column: 8, scope: !16877)
!16890 = !DILocation(line: 409, column: 13, scope: !16877)
!16891 = !DILocation(line: 411, column: 8, scope: !16877)
!16892 = !DILocation(line: 411, column: 13, scope: !16877)
!16893 = !DILocation(line: 412, column: 13, scope: !16877)
!16894 = !DILocation(line: 413, column: 1, scope: !16877)
!16895 = distinct !DISubprogram(name: "next_timeout", scope: !2515, file: !2515, line: 67, type: !16832, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16896)
!16896 = !{!16897, !16898, !16899}
!16897 = !DILocalVariable(name: "to", scope: !16895, file: !2515, line: 69, type: !2488)
!16898 = !DILocalVariable(name: "ticks_elapsed", scope: !16895, file: !2515, line: 70, type: !344)
!16899 = !DILocalVariable(name: "ret", scope: !16895, file: !2515, line: 71, type: !344)
!16900 = !DILocation(line: 69, column: 24, scope: !16895)
!16901 = !DILocation(line: 0, scope: !16895)
!16902 = !DILocation(line: 70, column: 26, scope: !16895)
!16903 = !DILocation(line: 73, column: 10, scope: !16904)
!16904 = distinct !DILexicalBlock(scope: !16895, file: !2515, line: 73, column: 6)
!16905 = !DILocation(line: 73, column: 19, scope: !16904)
!16906 = !DILocation(line: 74, column: 21, scope: !16904)
!16907 = !DILocation(line: 74, column: 30, scope: !16904)
!16908 = !DILocation(line: 74, column: 28, scope: !16904)
!16909 = !DILocation(line: 74, column: 45, scope: !16904)
!16910 = !DILocation(line: 73, column: 6, scope: !16895)
!16911 = !DILocation(line: 77, column: 9, scope: !16912)
!16912 = distinct !DILexicalBlock(scope: !16904, file: !2515, line: 76, column: 9)
!16913 = !DILocation(line: 0, scope: !16904)
!16914 = !DILocation(line: 81, column: 20, scope: !16915)
!16915 = distinct !DILexicalBlock(scope: !16895, file: !2515, line: 81, column: 6)
!16916 = !DILocation(line: 81, column: 6, scope: !16915)
!16917 = !DILocation(line: 81, column: 32, scope: !16915)
!16918 = !DILocation(line: 85, column: 2, scope: !16895)
!16919 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !321, file: !321, line: 341, type: !16920, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16922)
!16920 = !DISubroutineType(types: !16921)
!16921 = !{!16843, !16880, !16843}
!16922 = !{!16923, !16924}
!16923 = !DILocalVariable(name: "list", arg: 1, scope: !16919, file: !321, line: 341, type: !16880)
!16924 = !DILocalVariable(name: "node", arg: 2, scope: !16919, file: !321, line: 342, type: !16843)
!16925 = !DILocation(line: 0, scope: !16919)
!16926 = !DILocation(line: 344, column: 15, scope: !16919)
!16927 = !DILocation(line: 344, column: 9, scope: !16919)
!16928 = !DILocation(line: 344, column: 26, scope: !16919)
!16929 = !DILocation(line: 344, column: 2, scope: !16919)
!16930 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !321, file: !321, line: 325, type: !16920, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16931)
!16931 = !{!16932, !16933}
!16932 = !DILocalVariable(name: "list", arg: 1, scope: !16930, file: !321, line: 325, type: !16880)
!16933 = !DILocalVariable(name: "node", arg: 2, scope: !16930, file: !321, line: 326, type: !16843)
!16934 = !DILocation(line: 0, scope: !16930)
!16935 = !DILocation(line: 328, column: 24, scope: !16930)
!16936 = !DILocation(line: 328, column: 15, scope: !16930)
!16937 = !DILocation(line: 328, column: 9, scope: !16930)
!16938 = !DILocation(line: 328, column: 45, scope: !16930)
!16939 = !DILocation(line: 328, column: 2, scope: !16930)
!16940 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !321, file: !321, line: 294, type: !16941, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16943)
!16941 = !DISubroutineType(types: !16942)
!16942 = !{!16843, !16880}
!16943 = !{!16944}
!16944 = !DILocalVariable(name: "list", arg: 1, scope: !16940, file: !321, line: 294, type: !16880)
!16945 = !DILocation(line: 0, scope: !16940)
!16946 = !DILocation(line: 296, column: 9, scope: !16940)
!16947 = !DILocation(line: 296, column: 2, scope: !16940)
!16948 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !321, file: !321, line: 266, type: !16949, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16951)
!16949 = !DISubroutineType(types: !16950)
!16950 = !{!166, !16880}
!16951 = !{!16952}
!16952 = !DILocalVariable(name: "list", arg: 1, scope: !16948, file: !321, line: 266, type: !16880)
!16953 = !DILocation(line: 0, scope: !16948)
!16954 = !DILocation(line: 268, column: 15, scope: !16948)
!16955 = !DILocation(line: 268, column: 20, scope: !16948)
!16956 = !DILocation(line: 268, column: 2, scope: !16948)
!16957 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2515, file: !2515, line: 150, type: !16958, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16960)
!16958 = !DISubroutineType(types: !16959)
!16959 = !{!103, !2488}
!16960 = !{!16961, !16962, !16963, !16965}
!16961 = !DILocalVariable(name: "to", arg: 1, scope: !16957, file: !2515, line: 150, type: !2488)
!16962 = !DILocalVariable(name: "ret", scope: !16957, file: !2515, line: 152, type: !103)
!16963 = !DILocalVariable(name: "__i", scope: !16964, file: !2515, line: 154, type: !16726)
!16964 = distinct !DILexicalBlock(scope: !16957, file: !2515, line: 154, column: 2)
!16965 = !DILocalVariable(name: "__key", scope: !16964, file: !2515, line: 154, type: !16726)
!16966 = !DILocation(line: 0, scope: !16957)
!16967 = !DILocation(line: 0, scope: !16964)
!16968 = !DILocation(line: 0, scope: !16748, inlinedAt: !16969)
!16969 = distinct !DILocation(line: 154, column: 2, scope: !16964)
!16970 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !16971)
!16971 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !16969)
!16972 = !DILocation(line: 0, scope: !16757, inlinedAt: !16971)
!16973 = !DILocation(line: 155, column: 7, scope: !16974)
!16974 = distinct !DILexicalBlock(scope: !16975, file: !2515, line: 155, column: 7)
!16975 = distinct !DILexicalBlock(scope: !16976, file: !2515, line: 154, column: 24)
!16976 = distinct !DILexicalBlock(scope: !16964, file: !2515, line: 154, column: 2)
!16977 = !DILocation(line: 155, column: 7, scope: !16975)
!16978 = !DILocation(line: 156, column: 4, scope: !16979)
!16979 = distinct !DILexicalBlock(scope: !16974, file: !2515, line: 155, column: 39)
!16980 = !DILocation(line: 158, column: 3, scope: !16979)
!16981 = !DILocation(line: 0, scope: !16816, inlinedAt: !16982)
!16982 = distinct !DILocation(line: 154, column: 2, scope: !16976)
!16983 = !DILocation(line: 0, scope: !16824, inlinedAt: !16984)
!16984 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !16982)
!16985 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !16984)
!16986 = !DILocation(line: 161, column: 2, scope: !16957)
!16987 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !321, file: !321, line: 225, type: !16988, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16992)
!16988 = !DISubroutineType(types: !16989)
!16989 = !{!166, !16990}
!16990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16991, size: 32)
!16991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2492)
!16992 = !{!16993}
!16993 = !DILocalVariable(name: "node", arg: 1, scope: !16987, file: !321, line: 225, type: !16990)
!16994 = !DILocation(line: 0, scope: !16987)
!16995 = !DILocation(line: 227, column: 15, scope: !16987)
!16996 = !DILocation(line: 227, column: 20, scope: !16987)
!16997 = !DILocation(line: 227, column: 2, scope: !16987)
!16998 = distinct !DISubprogram(name: "remove_timeout", scope: !2515, file: !2515, line: 53, type: !2509, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16999)
!16999 = !{!17000}
!17000 = !DILocalVariable(name: "t", arg: 1, scope: !16998, file: !2515, line: 53, type: !2488)
!17001 = !DILocation(line: 0, scope: !16998)
!17002 = !DILocation(line: 55, column: 6, scope: !17003)
!17003 = distinct !DILexicalBlock(scope: !16998, file: !2515, line: 55, column: 6)
!17004 = !DILocation(line: 55, column: 14, scope: !17003)
!17005 = !DILocation(line: 55, column: 6, scope: !16998)
!17006 = !DILocation(line: 56, column: 25, scope: !17007)
!17007 = distinct !DILexicalBlock(scope: !17003, file: !2515, line: 55, column: 23)
!17008 = !DILocation(line: 56, column: 12, scope: !17007)
!17009 = !DILocation(line: 56, column: 19, scope: !17007)
!17010 = !DILocation(line: 57, column: 2, scope: !17007)
!17011 = !DILocation(line: 59, column: 23, scope: !16998)
!17012 = !DILocation(line: 59, column: 2, scope: !16998)
!17013 = !DILocation(line: 60, column: 1, scope: !16998)
!17014 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !321, file: !321, line: 496, type: !17015, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17017)
!17015 = !DISubroutineType(types: !17016)
!17016 = !{null, !16843}
!17017 = !{!17018, !17019, !17020}
!17018 = !DILocalVariable(name: "node", arg: 1, scope: !17014, file: !321, line: 496, type: !16843)
!17019 = !DILocalVariable(name: "prev", scope: !17014, file: !321, line: 498, type: !16855)
!17020 = !DILocalVariable(name: "next", scope: !17014, file: !321, line: 499, type: !16855)
!17021 = !DILocation(line: 0, scope: !17014)
!17022 = !DILocation(line: 498, column: 34, scope: !17014)
!17023 = !DILocation(line: 499, column: 34, scope: !17014)
!17024 = !DILocation(line: 501, column: 8, scope: !17014)
!17025 = !DILocation(line: 501, column: 13, scope: !17014)
!17026 = !DILocation(line: 502, column: 8, scope: !17014)
!17027 = !DILocation(line: 502, column: 13, scope: !17014)
!17028 = !DILocation(line: 503, column: 2, scope: !17014)
!17029 = !DILocation(line: 504, column: 1, scope: !17014)
!17030 = distinct !DISubprogram(name: "sys_dnode_init", scope: !321, file: !321, line: 211, type: !17015, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17031)
!17031 = !{!17032}
!17032 = !DILocalVariable(name: "node", arg: 1, scope: !17030, file: !321, line: 211, type: !16843)
!17033 = !DILocation(line: 0, scope: !17030)
!17034 = !DILocation(line: 213, column: 8, scope: !17030)
!17035 = !DILocation(line: 213, column: 13, scope: !17030)
!17036 = !DILocation(line: 214, column: 8, scope: !17030)
!17037 = !DILocation(line: 214, column: 13, scope: !17030)
!17038 = !DILocation(line: 215, column: 1, scope: !17030)
!17039 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2515, file: !2515, line: 183, type: !17040, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17044)
!17040 = !DISubroutineType(types: !17041)
!17041 = !{!1711, !17042}
!17042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17043, size: 32)
!17043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2489)
!17044 = !{!17045, !17046, !17047, !17049}
!17045 = !DILocalVariable(name: "timeout", arg: 1, scope: !17039, file: !2515, line: 183, type: !17042)
!17046 = !DILocalVariable(name: "ticks", scope: !17039, file: !2515, line: 185, type: !1711)
!17047 = !DILocalVariable(name: "__i", scope: !17048, file: !2515, line: 187, type: !16726)
!17048 = distinct !DILexicalBlock(scope: !17039, file: !2515, line: 187, column: 2)
!17049 = !DILocalVariable(name: "__key", scope: !17048, file: !2515, line: 187, type: !16726)
!17050 = !DILocation(line: 0, scope: !17039)
!17051 = !DILocation(line: 0, scope: !17048)
!17052 = !DILocation(line: 0, scope: !16748, inlinedAt: !17053)
!17053 = distinct !DILocation(line: 187, column: 2, scope: !17048)
!17054 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !17055)
!17055 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !17053)
!17056 = !DILocation(line: 0, scope: !16757, inlinedAt: !17055)
!17057 = !DILocation(line: 188, column: 11, scope: !17058)
!17058 = distinct !DILexicalBlock(scope: !17059, file: !2515, line: 187, column: 24)
!17059 = distinct !DILexicalBlock(scope: !17048, file: !2515, line: 187, column: 2)
!17060 = !DILocation(line: 0, scope: !16816, inlinedAt: !17061)
!17061 = distinct !DILocation(line: 187, column: 2, scope: !17059)
!17062 = !DILocation(line: 0, scope: !16824, inlinedAt: !17063)
!17063 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !17061)
!17064 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !17063)
!17065 = !DILocation(line: 191, column: 2, scope: !17039)
!17066 = distinct !DISubprogram(name: "timeout_rem", scope: !2515, file: !2515, line: 165, type: !17040, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17067)
!17067 = !{!17068, !17069, !17070}
!17068 = !DILocalVariable(name: "timeout", arg: 1, scope: !17066, file: !2515, line: 165, type: !17042)
!17069 = !DILocalVariable(name: "ticks", scope: !17066, file: !2515, line: 167, type: !1711)
!17070 = !DILocalVariable(name: "t", scope: !17071, file: !2515, line: 173, type: !2488)
!17071 = distinct !DILexicalBlock(scope: !17066, file: !2515, line: 173, column: 2)
!17072 = !DILocation(line: 0, scope: !17066)
!17073 = !DILocation(line: 169, column: 6, scope: !17074)
!17074 = distinct !DILexicalBlock(scope: !17066, file: !2515, line: 169, column: 6)
!17075 = !DILocation(line: 169, column: 6, scope: !17066)
!17076 = !DILocation(line: 173, column: 28, scope: !17071)
!17077 = !DILocation(line: 0, scope: !17071)
!17078 = !DILocation(line: 173, column: 39, scope: !17079)
!17079 = distinct !DILexicalBlock(scope: !17071, file: !2515, line: 173, column: 2)
!17080 = !DILocation(line: 173, column: 2, scope: !17071)
!17081 = !DILocation(line: 174, column: 15, scope: !17082)
!17082 = distinct !DILexicalBlock(scope: !17079, file: !2515, line: 173, column: 61)
!17083 = !DILocation(line: 174, column: 9, scope: !17082)
!17084 = !DILocation(line: 175, column: 15, scope: !17085)
!17085 = distinct !DILexicalBlock(scope: !17082, file: !2515, line: 175, column: 7)
!17086 = !DILocation(line: 175, column: 7, scope: !17082)
!17087 = !DILocation(line: 173, column: 52, scope: !17079)
!17088 = distinct !{!17088, !17080, !17089}
!17089 = !DILocation(line: 178, column: 2, scope: !17071)
!17090 = !DILocation(line: 180, column: 17, scope: !17066)
!17091 = !DILocation(line: 180, column: 15, scope: !17066)
!17092 = !DILocation(line: 180, column: 2, scope: !17066)
!17093 = !DILocation(line: 181, column: 1, scope: !17066)
!17094 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14140, file: !14140, line: 35, type: !17095, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17097)
!17095 = !DISubroutineType(types: !17096)
!17096 = !{!166, !17042}
!17097 = !{!17098}
!17098 = !DILocalVariable(name: "to", arg: 1, scope: !17094, file: !14140, line: 35, type: !17042)
!17099 = !DILocation(line: 0, scope: !17094)
!17100 = !DILocation(line: 37, column: 35, scope: !17094)
!17101 = !DILocation(line: 37, column: 10, scope: !17094)
!17102 = !DILocation(line: 37, column: 9, scope: !17094)
!17103 = !DILocation(line: 37, column: 2, scope: !17094)
!17104 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2515, file: !2515, line: 194, type: !17040, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17105)
!17105 = !{!17106, !17107, !17108, !17110}
!17106 = !DILocalVariable(name: "timeout", arg: 1, scope: !17104, file: !2515, line: 194, type: !17042)
!17107 = !DILocalVariable(name: "ticks", scope: !17104, file: !2515, line: 196, type: !1711)
!17108 = !DILocalVariable(name: "__i", scope: !17109, file: !2515, line: 198, type: !16726)
!17109 = distinct !DILexicalBlock(scope: !17104, file: !2515, line: 198, column: 2)
!17110 = !DILocalVariable(name: "__key", scope: !17109, file: !2515, line: 198, type: !16726)
!17111 = !DILocation(line: 0, scope: !17104)
!17112 = !DILocation(line: 0, scope: !17109)
!17113 = !DILocation(line: 0, scope: !16748, inlinedAt: !17114)
!17114 = distinct !DILocation(line: 198, column: 2, scope: !17109)
!17115 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !17116)
!17116 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !17114)
!17117 = !DILocation(line: 0, scope: !16757, inlinedAt: !17116)
!17118 = !DILocation(line: 199, column: 11, scope: !17119)
!17119 = distinct !DILexicalBlock(scope: !17120, file: !2515, line: 198, column: 24)
!17120 = distinct !DILexicalBlock(scope: !17109, file: !2515, line: 198, column: 2)
!17121 = !DILocation(line: 199, column: 23, scope: !17119)
!17122 = !DILocation(line: 0, scope: !16816, inlinedAt: !17123)
!17123 = distinct !DILocation(line: 198, column: 2, scope: !17120)
!17124 = !DILocation(line: 0, scope: !16824, inlinedAt: !17125)
!17125 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !17123)
!17126 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !17125)
!17127 = !DILocation(line: 199, column: 21, scope: !17119)
!17128 = !DILocation(line: 202, column: 2, scope: !17104)
!17129 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2515, file: !2515, line: 205, type: !16832, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17130)
!17130 = !{!17131, !17132, !17134}
!17131 = !DILocalVariable(name: "ret", scope: !17129, file: !2515, line: 207, type: !344)
!17132 = !DILocalVariable(name: "__i", scope: !17133, file: !2515, line: 209, type: !16726)
!17133 = distinct !DILexicalBlock(scope: !17129, file: !2515, line: 209, column: 2)
!17134 = !DILocalVariable(name: "__key", scope: !17133, file: !2515, line: 209, type: !16726)
!17135 = !DILocation(line: 0, scope: !17129)
!17136 = !DILocation(line: 0, scope: !17133)
!17137 = !DILocation(line: 0, scope: !16748, inlinedAt: !17138)
!17138 = distinct !DILocation(line: 209, column: 2, scope: !17133)
!17139 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !17140)
!17140 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !17138)
!17141 = !DILocation(line: 0, scope: !16757, inlinedAt: !17140)
!17142 = !DILocation(line: 210, column: 9, scope: !17143)
!17143 = distinct !DILexicalBlock(scope: !17144, file: !2515, line: 209, column: 24)
!17144 = distinct !DILexicalBlock(scope: !17133, file: !2515, line: 209, column: 2)
!17145 = !DILocation(line: 0, scope: !16816, inlinedAt: !17146)
!17146 = distinct !DILocation(line: 209, column: 2, scope: !17144)
!17147 = !DILocation(line: 0, scope: !16824, inlinedAt: !17148)
!17148 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !17146)
!17149 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !17148)
!17150 = !DILocation(line: 212, column: 2, scope: !17129)
!17151 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2515, file: !2515, line: 215, type: !11780, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17152)
!17152 = !{!17153, !17154, !17155, !17157, !17158, !17161, !17162}
!17153 = !DILocalVariable(name: "ticks", arg: 1, scope: !17151, file: !2515, line: 215, type: !344)
!17154 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17151, file: !2515, line: 215, type: !166)
!17155 = !DILocalVariable(name: "__i", scope: !17156, file: !2515, line: 217, type: !16726)
!17156 = distinct !DILexicalBlock(scope: !17151, file: !2515, line: 217, column: 2)
!17157 = !DILocalVariable(name: "__key", scope: !17156, file: !2515, line: 217, type: !16726)
!17158 = !DILocalVariable(name: "next_to", scope: !17159, file: !2515, line: 218, type: !103)
!17159 = distinct !DILexicalBlock(scope: !17160, file: !2515, line: 217, column: 24)
!17160 = distinct !DILexicalBlock(scope: !17156, file: !2515, line: 217, column: 2)
!17161 = !DILocalVariable(name: "sooner", scope: !17159, file: !2515, line: 219, type: !166)
!17162 = !DILocalVariable(name: "imminent", scope: !17159, file: !2515, line: 221, type: !166)
!17163 = !DILocation(line: 0, scope: !17151)
!17164 = !DILocation(line: 0, scope: !17156)
!17165 = !DILocation(line: 0, scope: !16748, inlinedAt: !17166)
!17166 = distinct !DILocation(line: 217, column: 2, scope: !17156)
!17167 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !17168)
!17168 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !17166)
!17169 = !DILocation(line: 0, scope: !16757, inlinedAt: !17168)
!17170 = !DILocation(line: 218, column: 17, scope: !17159)
!17171 = !DILocation(line: 0, scope: !17159)
!17172 = !DILocation(line: 221, column: 27, scope: !17159)
!17173 = !DILocation(line: 233, column: 17, scope: !17174)
!17174 = distinct !DILexicalBlock(scope: !17159, file: !2515, line: 233, column: 7)
!17175 = !DILocation(line: 234, column: 26, scope: !17176)
!17176 = distinct !DILexicalBlock(scope: !17174, file: !2515, line: 233, column: 56)
!17177 = !DILocation(line: 234, column: 4, scope: !17176)
!17178 = !DILocation(line: 235, column: 3, scope: !17176)
!17179 = !DILocation(line: 0, scope: !16816, inlinedAt: !17180)
!17180 = distinct !DILocation(line: 217, column: 2, scope: !17160)
!17181 = !DILocation(line: 0, scope: !16824, inlinedAt: !17182)
!17182 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !17180)
!17183 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !17182)
!17184 = !DILocation(line: 237, column: 1, scope: !17151)
!17185 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2515, file: !2515, line: 239, type: !17186, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17188)
!17186 = !DISubroutineType(types: !17187)
!17187 = !{null, !344}
!17188 = !{!17189, !17190, !17191, !17193}
!17189 = !DILocalVariable(name: "ticks", arg: 1, scope: !17185, file: !2515, line: 239, type: !344)
!17190 = !DILocalVariable(name: "key", scope: !17185, file: !2515, line: 245, type: !16726)
!17191 = !DILocalVariable(name: "t", scope: !17192, file: !2515, line: 262, type: !2488)
!17192 = distinct !DILexicalBlock(scope: !17185, file: !2515, line: 261, column: 67)
!17193 = !DILocalVariable(name: "dt", scope: !17192, file: !2515, line: 263, type: !103)
!17194 = !DILocation(line: 0, scope: !17185)
!17195 = !DILocation(line: 242, column: 2, scope: !17185)
!17196 = !DILocation(line: 0, scope: !16748, inlinedAt: !17197)
!17197 = distinct !DILocation(line: 245, column: 25, scope: !17185)
!17198 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !17199)
!17199 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !17197)
!17200 = !DILocation(line: 0, scope: !16757, inlinedAt: !17199)
!17201 = !DILocation(line: 261, column: 9, scope: !17185)
!17202 = !DILocation(line: 261, column: 17, scope: !17185)
!17203 = !DILocation(line: 261, column: 25, scope: !17185)
!17204 = !DILocation(line: 261, column: 37, scope: !17185)
!17205 = !DILocation(line: 261, column: 47, scope: !17185)
!17206 = !DILocation(line: 261, column: 44, scope: !17185)
!17207 = !DILocation(line: 261, column: 2, scope: !17185)
!17208 = !DILocation(line: 0, scope: !17192)
!17209 = !DILocation(line: 263, column: 12, scope: !17192)
!17210 = !DILocation(line: 265, column: 16, scope: !17192)
!17211 = !DILocation(line: 265, column: 13, scope: !17192)
!17212 = !DILocation(line: 266, column: 13, scope: !17192)
!17213 = !DILocation(line: 267, column: 3, scope: !17192)
!17214 = !DILocation(line: 0, scope: !16816, inlinedAt: !17215)
!17215 = distinct !DILocation(line: 269, column: 3, scope: !17192)
!17216 = !DILocation(line: 0, scope: !16824, inlinedAt: !17217)
!17217 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !17215)
!17218 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !17217)
!17219 = !DILocation(line: 270, column: 6, scope: !17192)
!17220 = !DILocation(line: 270, column: 3, scope: !17192)
!17221 = !DILocation(line: 0, scope: !16748, inlinedAt: !17222)
!17222 = distinct !DILocation(line: 271, column: 9, scope: !17192)
!17223 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !17224)
!17224 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !17222)
!17225 = !DILocation(line: 0, scope: !16757, inlinedAt: !17224)
!17226 = !DILocation(line: 272, column: 22, scope: !17192)
!17227 = distinct !{!17227, !17207, !17228}
!17228 = !DILocation(line: 273, column: 2, scope: !17185)
!17229 = !DILocation(line: 276, column: 19, scope: !17230)
!17230 = distinct !DILexicalBlock(scope: !17231, file: !2515, line: 275, column: 23)
!17231 = distinct !DILexicalBlock(scope: !17185, file: !2515, line: 275, column: 6)
!17232 = !DILocation(line: 277, column: 2, scope: !17230)
!17233 = !DILocation(line: 279, column: 15, scope: !17185)
!17234 = !DILocation(line: 279, column: 12, scope: !17185)
!17235 = !DILocation(line: 280, column: 21, scope: !17185)
!17236 = !DILocation(line: 282, column: 24, scope: !17185)
!17237 = !DILocation(line: 282, column: 2, scope: !17185)
!17238 = !DILocation(line: 0, scope: !16816, inlinedAt: !17239)
!17239 = distinct !DILocation(line: 284, column: 2, scope: !17185)
!17240 = !DILocation(line: 0, scope: !16824, inlinedAt: !17241)
!17241 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !17239)
!17242 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !17241)
!17243 = !DILocation(line: 285, column: 1, scope: !17185)
!17244 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2515, file: !2515, line: 287, type: !17245, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17247)
!17245 = !DISubroutineType(types: !17246)
!17246 = !{!432}
!17247 = !{!17248, !17249, !17251}
!17248 = !DILocalVariable(name: "t", scope: !17244, file: !2515, line: 289, type: !1608)
!17249 = !DILocalVariable(name: "__i", scope: !17250, file: !2515, line: 291, type: !16726)
!17250 = distinct !DILexicalBlock(scope: !17244, file: !2515, line: 291, column: 2)
!17251 = !DILocalVariable(name: "__key", scope: !17250, file: !2515, line: 291, type: !16726)
!17252 = !DILocation(line: 0, scope: !17244)
!17253 = !DILocation(line: 0, scope: !17250)
!17254 = !DILocation(line: 0, scope: !16748, inlinedAt: !17255)
!17255 = distinct !DILocation(line: 291, column: 2, scope: !17250)
!17256 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !17257)
!17257 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !17255)
!17258 = !DILocation(line: 0, scope: !16757, inlinedAt: !17257)
!17259 = !DILocation(line: 292, column: 7, scope: !17260)
!17260 = distinct !DILexicalBlock(scope: !17261, file: !2515, line: 291, column: 24)
!17261 = distinct !DILexicalBlock(scope: !17250, file: !2515, line: 291, column: 2)
!17262 = !DILocation(line: 292, column: 19, scope: !17260)
!17263 = !DILocation(line: 0, scope: !16816, inlinedAt: !17264)
!17264 = distinct !DILocation(line: 291, column: 2, scope: !17261)
!17265 = !DILocation(line: 0, scope: !16824, inlinedAt: !17266)
!17266 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !17264)
!17267 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !17266)
!17268 = !DILocation(line: 292, column: 17, scope: !17260)
!17269 = !DILocation(line: 294, column: 2, scope: !17244)
!17270 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2515, file: !2515, line: 297, type: !6925, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !473)
!17271 = !DILocation(line: 300, column: 19, scope: !17270)
!17272 = !DILocation(line: 300, column: 9, scope: !17270)
!17273 = !DILocation(line: 300, column: 2, scope: !17270)
!17274 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2515, file: !2515, line: 306, type: !17245, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !473)
!17275 = !DILocation(line: 308, column: 9, scope: !17274)
!17276 = !DILocation(line: 308, column: 2, scope: !17274)
!17277 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2515, file: !2515, line: 319, type: !6935, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17278)
!17278 = !{!17279, !17280, !17281, !17282}
!17279 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17277, file: !2515, line: 319, type: !132)
!17280 = !DILocalVariable(name: "start_cycles", scope: !17277, file: !2515, line: 328, type: !132)
!17281 = !DILocalVariable(name: "cycles_to_wait", scope: !17277, file: !2515, line: 331, type: !132)
!17282 = !DILocalVariable(name: "current_cycles", scope: !17283, file: !2515, line: 338, type: !132)
!17283 = distinct !DILexicalBlock(scope: !17284, file: !2515, line: 337, column: 11)
!17284 = distinct !DILexicalBlock(scope: !17285, file: !2515, line: 337, column: 2)
!17285 = distinct !DILexicalBlock(scope: !17277, file: !2515, line: 337, column: 2)
!17286 = !DILocation(line: 0, scope: !17277)
!17287 = !DILocation(line: 322, column: 19, scope: !17288)
!17288 = distinct !DILexicalBlock(scope: !17277, file: !2515, line: 322, column: 6)
!17289 = !DILocation(line: 322, column: 6, scope: !17277)
!17290 = !DILocation(line: 328, column: 26, scope: !17277)
!17291 = !DILocation(line: 333, column: 43, scope: !17277)
!17292 = !DILocation(line: 337, column: 2, scope: !17277)
!17293 = !DILocation(line: 338, column: 29, scope: !17283)
!17294 = !DILocation(line: 0, scope: !17283)
!17295 = !DILocation(line: 341, column: 23, scope: !17296)
!17296 = distinct !DILexicalBlock(scope: !17283, file: !2515, line: 341, column: 7)
!17297 = !DILocation(line: 341, column: 39, scope: !17296)
!17298 = !DILocation(line: 349, column: 1, scope: !17277)
!17299 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !312, file: !312, line: 1675, type: !6925, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !473)
!17300 = !DILocation(line: 1677, column: 9, scope: !17299)
!17301 = !DILocation(line: 1677, column: 2, scope: !17299)
!17302 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17303, file: !17303, line: 24, type: !6925, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !473)
!17303 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17304 = !DILocation(line: 26, column: 9, scope: !17302)
!17305 = !DILocation(line: 26, column: 2, scope: !17302)
!17306 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2515, file: !2515, line: 364, type: !17307, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17309)
!17307 = !DISubroutineType(types: !17308)
!17308 = !{!1608, !16716}
!17309 = !{!17310, !17311}
!17310 = !DILocalVariable(name: "timeout", arg: 1, scope: !17306, file: !2515, line: 364, type: !16716)
!17311 = !DILocalVariable(name: "dt", scope: !17306, file: !2515, line: 366, type: !1711)
!17312 = !DILocation(line: 0, scope: !17306)
!17313 = !DILocation(line: 368, column: 6, scope: !17306)
!17314 = !DILocation(line: 371, column: 10, scope: !17315)
!17315 = distinct !DILexicalBlock(scope: !17316, file: !2515, line: 370, column: 47)
!17316 = distinct !DILexicalBlock(scope: !17317, file: !2515, line: 370, column: 13)
!17317 = distinct !DILexicalBlock(scope: !17306, file: !2515, line: 368, column: 6)
!17318 = !DILocation(line: 371, column: 3, scope: !17315)
!17319 = !DILocation(line: 376, column: 58, scope: !17320)
!17320 = distinct !DILexicalBlock(scope: !17321, file: !2515, line: 376, column: 7)
!17321 = distinct !DILexicalBlock(scope: !17316, file: !2515, line: 372, column: 9)
!17322 = !DILocation(line: 376, column: 7, scope: !17321)
!17323 = !DILocation(line: 376, column: 43, scope: !17320)
!17324 = !DILocation(line: 377, column: 4, scope: !17325)
!17325 = distinct !DILexicalBlock(scope: !17320, file: !2515, line: 376, column: 64)
!17326 = !DILocation(line: 379, column: 10, scope: !17321)
!17327 = !DILocation(line: 379, column: 33, scope: !17321)
!17328 = !DILocation(line: 379, column: 31, scope: !17321)
!17329 = !DILocation(line: 379, column: 3, scope: !17321)
!17330 = !DILocation(line: 0, scope: !17317)
!17331 = !DILocation(line: 381, column: 1, scope: !17306)
!17332 = distinct !DISubprogram(name: "boot_banner", scope: !17333, file: !17333, line: 26, type: !3249, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3235, retainedNodes: !473)
!17333 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17334 = !DILocation(line: 34, column: 2, scope: !17332)
!17335 = !DILocation(line: 36, column: 1, scope: !17332)
!17336 = distinct !DISubprogram(name: "statics_init", scope: !2543, file: !2543, line: 21, type: !2549, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !17337)
!17337 = !{!17338, !17339}
!17338 = !DILocalVariable(name: "unused", arg: 1, scope: !17336, file: !2543, line: 21, type: !2551)
!17339 = !DILocalVariable(name: "h", scope: !17340, file: !2543, line: 24, type: !17341)
!17340 = distinct !DILexicalBlock(scope: !17336, file: !2543, line: 24, column: 2)
!17341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17342, size: 32)
!17342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !17343)
!17343 = !{!17344, !17350, !17356}
!17344 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17342, file: !312, line: 5074, baseType: !17345, size: 96)
!17345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !17346)
!17346 = !{!17347, !17348, !17349}
!17347 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17345, file: !462, line: 57, baseType: !465, size: 32)
!17348 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17345, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!17349 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17345, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!17350 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17342, file: !312, line: 5075, baseType: !17351, size: 64, offset: 96)
!17351 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !17352)
!17352 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !17353)
!17353 = !{!17354}
!17354 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17352, file: !316, line: 232, baseType: !17355, size: 64)
!17355 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2529)
!17356 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17342, file: !312, line: 5076, baseType: !17357, offset: 160)
!17357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!17358 = !DILocation(line: 0, scope: !17336)
!17359 = !DILocation(line: 0, scope: !17340)
!17360 = !DILocation(line: 24, column: 2, scope: !17340)
!17361 = !DILocation(line: 52, column: 2, scope: !17336)
!17362 = !DILocation(line: 49, column: 27, scope: !17363)
!17363 = distinct !DILexicalBlock(scope: !17364, file: !2543, line: 48, column: 3)
!17364 = distinct !DILexicalBlock(scope: !17365, file: !2543, line: 24, column: 36)
!17365 = distinct !DILexicalBlock(scope: !17340, file: !2543, line: 24, column: 2)
!17366 = !DILocation(line: 49, column: 45, scope: !17363)
!17367 = !DILocation(line: 49, column: 4, scope: !17363)
!17368 = !DILocation(line: 24, column: 2, scope: !17365)
!17369 = !DILocation(line: 24, column: 2, scope: !17370)
!17370 = distinct !DILexicalBlock(scope: !17365, file: !2543, line: 24, column: 2)
!17371 = distinct !{!17371, !17360, !17372}
!17372 = !DILocation(line: 51, column: 2, scope: !17340)
!17373 = distinct !DISubprogram(name: "k_heap_init", scope: !2543, file: !2543, line: 13, type: !17374, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !17376)
!17374 = !DISubroutineType(types: !17375)
!17375 = !{null, !17341, !102, !356}
!17376 = !{!17377, !17378, !17379}
!17377 = !DILocalVariable(name: "h", arg: 1, scope: !17373, file: !2543, line: 13, type: !17341)
!17378 = !DILocalVariable(name: "mem", arg: 2, scope: !17373, file: !2543, line: 13, type: !102)
!17379 = !DILocalVariable(name: "bytes", arg: 3, scope: !17373, file: !2543, line: 13, type: !356)
!17380 = !DILocation(line: 0, scope: !17373)
!17381 = !DILocation(line: 15, column: 19, scope: !17373)
!17382 = !DILocation(line: 15, column: 2, scope: !17373)
!17383 = !DILocation(line: 16, column: 20, scope: !17373)
!17384 = !DILocation(line: 16, column: 2, scope: !17373)
!17385 = !DILocation(line: 19, column: 1, scope: !17373)
!17386 = distinct !DISubprogram(name: "z_waitq_init", scope: !14072, file: !14072, line: 47, type: !17387, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !17390)
!17387 = !DISubroutineType(types: !17388)
!17388 = !{null, !17389}
!17389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17351, size: 32)
!17390 = !{!17391}
!17391 = !DILocalVariable(name: "w", arg: 1, scope: !17386, file: !14072, line: 47, type: !17389)
!17392 = !DILocation(line: 0, scope: !17386)
!17393 = !DILocation(line: 49, column: 21, scope: !17386)
!17394 = !DILocation(line: 49, column: 2, scope: !17386)
!17395 = !DILocation(line: 50, column: 1, scope: !17386)
!17396 = distinct !DISubprogram(name: "sys_dlist_init", scope: !321, file: !321, line: 197, type: !17397, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !17400)
!17397 = !DISubroutineType(types: !17398)
!17398 = !{null, !17399}
!17399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17355, size: 32)
!17400 = !{!17401}
!17401 = !DILocalVariable(name: "list", arg: 1, scope: !17396, file: !321, line: 197, type: !17399)
!17402 = !DILocation(line: 0, scope: !17396)
!17403 = !DILocation(line: 199, column: 8, scope: !17396)
!17404 = !DILocation(line: 199, column: 13, scope: !17396)
!17405 = !DILocation(line: 200, column: 8, scope: !17396)
!17406 = !DILocation(line: 200, column: 13, scope: !17396)
!17407 = !DILocation(line: 201, column: 1, scope: !17396)
!17408 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2543, file: !2543, line: 64, type: !17409, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !17415)
!17409 = !DISubroutineType(types: !17410)
!17410 = !{!102, !17341, !356, !356, !17411}
!17411 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1712, line: 67, baseType: !17412)
!17412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1712, line: 65, size: 64, elements: !17413)
!17413 = !{!17414}
!17414 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17412, file: !1712, line: 66, baseType: !1711, size: 64)
!17415 = !{!17416, !17417, !17418, !17419, !17420, !17421, !17422, !17423, !17428}
!17416 = !DILocalVariable(name: "h", arg: 1, scope: !17408, file: !2543, line: 64, type: !17341)
!17417 = !DILocalVariable(name: "align", arg: 2, scope: !17408, file: !2543, line: 64, type: !356)
!17418 = !DILocalVariable(name: "bytes", arg: 3, scope: !17408, file: !2543, line: 64, type: !356)
!17419 = !DILocalVariable(name: "timeout", arg: 4, scope: !17408, file: !2543, line: 65, type: !17411)
!17420 = !DILocalVariable(name: "now", scope: !17408, file: !2543, line: 67, type: !432)
!17421 = !DILocalVariable(name: "end", scope: !17408, file: !2543, line: 67, type: !432)
!17422 = !DILocalVariable(name: "ret", scope: !17408, file: !2543, line: 68, type: !102)
!17423 = !DILocalVariable(name: "key", scope: !17408, file: !2543, line: 72, type: !17424)
!17424 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !17425)
!17425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !17426)
!17426 = !{!17427}
!17427 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17425, file: !472, line: 33, baseType: !103, size: 32)
!17428 = !DILocalVariable(name: "blocked_alloc", scope: !17408, file: !2543, line: 78, type: !166)
!17429 = !DILocation(line: 0, scope: !17408)
!17430 = !DILocation(line: 67, column: 21, scope: !17408)
!17431 = !DILocation(line: 70, column: 8, scope: !17408)
!17432 = !DILocation(line: 72, column: 41, scope: !17408)
!17433 = !DILocalVariable(name: "l", arg: 1, scope: !17434, file: !472, line: 136, type: !17437)
!17434 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !17435, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !17438)
!17435 = !DISubroutineType(types: !17436)
!17436 = !{!17424, !17437}
!17437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17357, size: 32)
!17438 = !{!17433, !17439}
!17439 = !DILocalVariable(name: "k", scope: !17434, file: !472, line: 139, type: !17424)
!17440 = !DILocation(line: 0, scope: !17434, inlinedAt: !17441)
!17441 = distinct !DILocation(line: 72, column: 25, scope: !17408)
!17442 = !DILocation(line: 55, column: 2, scope: !17443, inlinedAt: !17447)
!17443 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5824, file: !5824, line: 42, type: !5825, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !17444)
!17444 = !{!17445, !17446}
!17445 = !DILocalVariable(name: "key", scope: !17443, file: !5824, line: 44, type: !32)
!17446 = !DILocalVariable(name: "tmp", scope: !17443, file: !5824, line: 53, type: !32)
!17447 = distinct !DILocation(line: 145, column: 10, scope: !17434, inlinedAt: !17441)
!17448 = !{i64 2239999}
!17449 = !DILocation(line: 0, scope: !17443, inlinedAt: !17447)
!17450 = !DILocation(line: 81, column: 9, scope: !17451)
!17451 = distinct !DILexicalBlock(scope: !17408, file: !2543, line: 80, column: 22)
!17452 = !DILocation(line: 83, column: 9, scope: !17451)
!17453 = !DILocation(line: 85, column: 12, scope: !17454)
!17454 = distinct !DILexicalBlock(scope: !17451, file: !2543, line: 84, column: 7)
!17455 = !DILocation(line: 85, column: 21, scope: !17454)
!17456 = !DILocation(line: 85, column: 30, scope: !17454)
!17457 = !DILocation(line: 85, column: 37, scope: !17454)
!17458 = !DILocation(line: 84, column: 7, scope: !17451)
!17459 = !DILocation(line: 99, column: 10, scope: !17451)
!17460 = !DILocation(line: 0, scope: !17434, inlinedAt: !17461)
!17461 = distinct !DILocation(line: 101, column: 9, scope: !17451)
!17462 = !DILocation(line: 55, column: 2, scope: !17443, inlinedAt: !17463)
!17463 = distinct !DILocation(line: 145, column: 10, scope: !17434, inlinedAt: !17461)
!17464 = !DILocation(line: 0, scope: !17443, inlinedAt: !17463)
!17465 = distinct !{!17465, !17466, !17467}
!17466 = !DILocation(line: 80, column: 2, scope: !17408)
!17467 = !DILocation(line: 102, column: 2, scope: !17408)
!17468 = !DILocalVariable(name: "key", arg: 2, scope: !17469, file: !472, line: 190, type: !17424)
!17469 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !17470, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !17472)
!17470 = !DISubroutineType(types: !17471)
!17471 = !{null, !17437, !17424}
!17472 = !{!17473, !17468}
!17473 = !DILocalVariable(name: "l", arg: 1, scope: !17469, file: !472, line: 189, type: !17437)
!17474 = !DILocation(line: 0, scope: !17469, inlinedAt: !17475)
!17475 = distinct !DILocation(line: 106, column: 2, scope: !17408)
!17476 = !DILocalVariable(name: "key", arg: 1, scope: !17477, file: !5824, line: 84, type: !32)
!17477 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5824, file: !5824, line: 84, type: !5835, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !17478)
!17478 = !{!17476}
!17479 = !DILocation(line: 0, scope: !17477, inlinedAt: !17480)
!17480 = distinct !DILocation(line: 215, column: 2, scope: !17469, inlinedAt: !17475)
!17481 = !DILocation(line: 95, column: 2, scope: !17477, inlinedAt: !17480)
!17482 = !{i64 2240816}
!17483 = !DILocation(line: 107, column: 2, scope: !17408)
!17484 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2543, file: !2543, line: 110, type: !17485, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !17487)
!17485 = !DISubroutineType(types: !17486)
!17486 = !{!102, !17341, !356, !17411}
!17487 = !{!17488, !17489, !17490, !17491}
!17488 = !DILocalVariable(name: "h", arg: 1, scope: !17484, file: !2543, line: 110, type: !17341)
!17489 = !DILocalVariable(name: "bytes", arg: 2, scope: !17484, file: !2543, line: 110, type: !356)
!17490 = !DILocalVariable(name: "timeout", arg: 3, scope: !17484, file: !2543, line: 110, type: !17411)
!17491 = !DILocalVariable(name: "ret", scope: !17484, file: !2543, line: 114, type: !102)
!17492 = !DILocation(line: 0, scope: !17484)
!17493 = !DILocation(line: 114, column: 14, scope: !17484)
!17494 = !DILocation(line: 118, column: 2, scope: !17484)
!17495 = distinct !DISubprogram(name: "k_heap_free", scope: !2543, file: !2543, line: 121, type: !17496, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !17498)
!17496 = !DISubroutineType(types: !17497)
!17497 = !{null, !17341, !102}
!17498 = !{!17499, !17500, !17501}
!17499 = !DILocalVariable(name: "h", arg: 1, scope: !17495, file: !2543, line: 121, type: !17341)
!17500 = !DILocalVariable(name: "mem", arg: 2, scope: !17495, file: !2543, line: 121, type: !102)
!17501 = !DILocalVariable(name: "key", scope: !17495, file: !2543, line: 123, type: !17424)
!17502 = !DILocation(line: 0, scope: !17495)
!17503 = !DILocation(line: 0, scope: !17434, inlinedAt: !17504)
!17504 = distinct !DILocation(line: 123, column: 25, scope: !17495)
!17505 = !DILocation(line: 55, column: 2, scope: !17443, inlinedAt: !17506)
!17506 = distinct !DILocation(line: 145, column: 10, scope: !17434, inlinedAt: !17504)
!17507 = !DILocation(line: 0, scope: !17443, inlinedAt: !17506)
!17508 = !DILocation(line: 125, column: 20, scope: !17495)
!17509 = !DILocation(line: 125, column: 2, scope: !17495)
!17510 = !DILocation(line: 128, column: 60, scope: !17511)
!17511 = distinct !DILexicalBlock(scope: !17495, file: !2543, line: 128, column: 6)
!17512 = !DILocation(line: 128, column: 43, scope: !17511)
!17513 = !DILocation(line: 128, column: 68, scope: !17511)
!17514 = !DILocation(line: 128, column: 6, scope: !17495)
!17515 = !DILocation(line: 123, column: 41, scope: !17495)
!17516 = !DILocation(line: 129, column: 3, scope: !17517)
!17517 = distinct !DILexicalBlock(scope: !17511, file: !2543, line: 128, column: 74)
!17518 = !DILocation(line: 130, column: 2, scope: !17517)
!17519 = !DILocation(line: 0, scope: !17469, inlinedAt: !17520)
!17520 = distinct !DILocation(line: 131, column: 3, scope: !17521)
!17521 = distinct !DILexicalBlock(scope: !17511, file: !2543, line: 130, column: 9)
!17522 = !DILocation(line: 0, scope: !17477, inlinedAt: !17523)
!17523 = distinct !DILocation(line: 215, column: 2, scope: !17469, inlinedAt: !17520)
!17524 = !DILocation(line: 95, column: 2, scope: !17477, inlinedAt: !17523)
!17525 = !DILocation(line: 133, column: 1, scope: !17495)
